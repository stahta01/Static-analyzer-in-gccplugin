
;; Function Graph::init_Graph (_ZN5Graph10init_GraphEi, funcdef_no=6151, decl_uid=167779, cgraph_uid=3140, symbol_order=3814)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
void Graph::init_Graph (struct Graph * const this, int V)
{
  void * D.245889;
  struct list * D.168967;
  size_t iftmp.2;
  long int D.168820;
  struct list * D.168819;
  struct list * D.168818;
  struct list * retval.1;
  sizetype D.245874;
  size_t iftmp.0;
  void * D.168817;

  <bb 2> :
  this->V = V;
  D.245874 = (sizetype) V;
  if (D.245874 <= 384307168202282325)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = D.245874 * 24;
  iftmp.0 = _1 + 8;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0 = 18446744073709551615;

  <bb 5> :
  D.245889 = operator new [] (iftmp.0);
  D.168817 = D.245889;
  MEM[(sizetype *)D.168817] = D.245874;
  D.168818 = D.168817 + 8;
  D.168819 = D.168818;
  _2 = D.245874 + 18446744073709551615;
  D.168820 = (long int) _2;
  goto <bb 7>; [INV]

  <bb 6> :
  std::__cxx11::list<int>::list (D.168819);
  D.168819 = D.168819 + 24;
  D.168820 = D.168820 + -1;

  <bb 7> :
  if (D.168820 >= 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  retval.1 = D.168818;
  _8 = D.168817 + 8;
  this->adj = _8;
  return;

}



;; Function std::__cxx11::list<int>::list (_ZNSt7__cxx114listIiSaIiEEC2Ev, funcdef_no=6160, decl_uid=168806, cgraph_uid=3135, symbol_order=3809)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::list (struct list * const this)
{
  <bb 2> :
  _1 = &this->D.168814;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_ZNSt7__cxx1110_List_baseIiSaIiEEC2Ev, funcdef_no=6158, decl_uid=168280, cgraph_uid=3132, symbol_order=3806)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (struct _List_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2Ev, funcdef_no=7506, decl_uid=168069, cgraph_uid=4138, symbol_order=4920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (struct _List_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::_List_node<int> >::allocator (this);
  _1 = &this->_M_node;
  std::__detail::_List_node_header::_List_node_header (_1);
  return;

}



;; Function std::allocator<std::_List_node<int> >::allocator (_ZNSaISt10_List_nodeIiEEC2Ev, funcdef_no=8304, decl_uid=167976, cgraph_uid=4936, symbol_order=5722)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::_List_node<int> >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev, funcdef_no=9121, decl_uid=167905, cgraph_uid=5753, symbol_order=6539)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__detail::_List_node_header::_List_node_header (_ZNSt8__detail17_List_node_headerC2Ev, funcdef_no=4671, decl_uid=144698, cgraph_uid=2594, symbol_order=2784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_List_node_header (struct _List_node_header * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::__detail::_List_node_header::_M_init (this);
  return;

}



;; Function std::__detail::_List_node_header::_M_init (_ZNSt8__detail17_List_node_header7_M_initEv, funcdef_no=4677, decl_uid=144685, cgraph_uid=2600, symbol_order=2790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_M_init (struct _List_node_header * const this)
{
  <bb 2> :
  _1 = &this->D.144700;
  this->D.144700._M_prev = _1;
  _2 = this->D.144700._M_prev;
  this->D.144700._M_next = _2;
  this->_M_size = 0;
  return;

}



;; Function Graph::addEdge (_ZN5Graph7addEdgeEii, funcdef_no=6165, decl_uid=167784, cgraph_uid=3141, symbol_order=3815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::addEdge (struct Graph * const this, int v, int w)
{
  <bb 2> :
  _1 = this->adj;
  _2 = (long unsigned int) v;
  _3 = _2 * 24;
  _4 = _1 + _3;
  std::__cxx11::list<int>::push_back (_4, &w);
  return;

}



;; Function std::__cxx11::list<int>::push_back (_ZNSt7__cxx114listIiSaIiEE9push_backERKi, funcdef_no=7514, decl_uid=168488, cgraph_uid=4146, symbol_order=4928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::push_back (struct list * const this, const value_type & __x)
{
  struct _List_iterator D.245891;

  <bb 2> :
  D.245891 = std::__cxx11::list<int>::end (this);
  std::__cxx11::list<int>::_M_insert<const int&> (this, D.245891, __x);
  return;

}



;; Function std::__cxx11::list<int>::end (_ZNSt7__cxx114listIiSaIiEE3endEv, funcdef_no=7519, decl_uid=168434, cgraph_uid=4151, symbol_order=4933)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::end (struct list * const this)
{
  struct iterator D.209780;
  struct iterator D.245892;

  <bb 2> :
  _1 = &this->D.168814._M_impl._M_node.D.144700;
  std::_List_iterator<int>::_List_iterator (&D.209780, _1);
  D.245892 = D.209780;
  D.209780 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.245892;

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE, funcdef_no=8312, decl_uid=169031, cgraph_uid=4944, symbol_order=5730)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this, struct _List_node_base * __x)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = __x;
  return;

}



;; Function std::__cxx11::list<int>::_M_insert<const int&> (_ZNSt7__cxx114listIiSaIiEE9_M_insertIJRKiEEEvSt14_List_iteratorIiEDpOT_, funcdef_no=8310, decl_uid=209770, cgraph_uid=4942, symbol_order=5728)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::_M_insert<const int&> (struct list * const this, struct iterator __position, const int & __args#0)
{
  struct _Node * D.245895;
  struct _Node * __tmp;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.245895 = std::__cxx11::list<int>::_M_create_node<const int&> (this, _1);
  __tmp = D.245895;
  _2 = &__tmp->D.209825;
  _3 = __position._M_node;
  std::__detail::_List_node_base::_M_hook (_2, _3);
  _4 = &this->D.168814;
  std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_4, 1);
  return;

}



;; Function std::forward<const int&> (_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=9126, decl_uid=220127, cgraph_uid=5758, symbol_order=6544)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const int & std::forward<const int&> (const type & __t)
{
  const int & D.245896;

  <bb 2> :
  D.245896 = __t;

  <bb 3> :
<L0>:
  return D.245896;

}



;; Function std::__cxx11::list<int>::_M_create_node<const int&> (_ZNSt7__cxx114listIiSaIiEE14_M_create_nodeIJRKiEEEPSt10_List_nodeIiEDpOT_, funcdef_no=9127, decl_uid=220129, cgraph_uid=5759, symbol_order=6545)

Merging blocks 3 and 4
Merging blocks 3 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct _Node * std::__cxx11::list<int>::_M_create_node<const int&> (struct list * const this, const int & __args#0)
{
  struct _List_node * D.245900;
  struct __allocated_ptr __guard;
  struct allocator & __alloc;
  struct _List_node * __p;
  struct _Node * D.245898;

  <bb 2> :
  _1 = &this->D.168814;
  D.245900 = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_1);

  <bb 3> :
  __p = D.245900;
  _2 = &this->D.168814;
  __alloc = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_2);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (&__guard, __alloc, __p);
  _3 = std::forward<const int&> (__args#0);
  _4 = std::_List_node<int>::_M_valptr (__p);
  std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (__alloc, _4, _3);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (&__guard, 0);
  D.245898 = __p;
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (&__guard);
  __guard = {CLOBBER};

  <bb 4> :
<L2>:
  return D.245898;

  <bb 5> :
<L3>:
  __guard = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_get_nodeEv, funcdef_no=9858, decl_uid=168182, cgraph_uid=6490, symbol_order=7280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _List_node * std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (struct _List_base * const this)
{
  struct _List_node * D.245906;
  struct _List_node * D.245904;

  <bb 2> :
  _1 = &this->_M_impl;
  D.245906 = std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_1, 1);
  D.245904 = D.245906;

  <bb 3> :
<L0>:
  return D.245904;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE8allocateERS2_m, funcdef_no=10397, decl_uid=168110, cgraph_uid=7029, symbol_order=7819)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct _List_node * std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (struct allocator_type & __a, size_type __n)
{
  struct _List_node * D.245909;
  struct _List_node * D.245907;

  <bb 2> :
  D.245909 = __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (__a, __n, 0B);
  D.245907 = D.245909;

  <bb 3> :
<L0>:
  return D.245907;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8allocateEmPKv, funcdef_no=10755, decl_uid=167860, cgraph_uid=7388, symbol_order=8180)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct _List_node * __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (struct new_allocator * const this, size_type __n, const void * D.244289)
{
  struct _List_node * D.245920;
  struct _List_node * D.245919;
  align_val_t __al;
  struct _List_node * D.245917;
  bool retval.3;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.3 = _4 != 0;
  if (retval.3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.245920 = operator new (_6);
  D.245917 = D.245920;

  <bb 7> :
<L6>:
  return D.245917;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIiEE11_M_max_sizeEv, funcdef_no=10756, decl_uid=167887, cgraph_uid=7387, symbol_order=8179)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (const struct new_allocator * const this)
{
  size_type D.245921;

  <bb 2> :
  D.245921 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.245921;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv, funcdef_no=9123, decl_uid=168188, cgraph_uid=5755, symbol_order=6541)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Node_alloc_type & std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (struct _List_base * const this)
{
  struct _Node_alloc_type & D.245923;

  <bb 2> :
  D.245923 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.245923;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEC2ERS2_PS1_, funcdef_no=9860, decl_uid=231461, cgraph_uid=6492, symbol_order=7282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (struct __allocated_ptr * const this, struct allocator & __a, struct _List_node * __ptr)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::__addressof<std::allocator<std::_List_node<int> > > (__a);
  this->_M_alloc = _1;
  this->_M_ptr = __ptr;
  return;

}



;; Function std::__addressof<std::allocator<std::_List_node<int> > > (_ZSt11__addressofISaISt10_List_nodeIiEEEPT_RS3_, funcdef_no=10398, decl_uid=239192, cgraph_uid=7030, symbol_order=7820)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator * std::__addressof<std::allocator<std::_List_node<int> > > (struct allocator & __r)
{
  struct allocator * D.245925;

  <bb 2> :
  D.245925 = __r;

  <bb 3> :
<L0>:
  return D.245925;

}



;; Function std::_List_node<int>::_M_valptr (_ZNSt10_List_nodeIiE9_M_valptrEv, funcdef_no=8314, decl_uid=209821, cgraph_uid=4946, symbol_order=5732)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::_List_node<int>::_M_valptr (struct _List_node * const this)
{
  int * D.245927;

  <bb 2> :
  _1 = &this->_M_storage;
  D.245927 = __gnu_cxx::__aligned_membuf<int>::_M_ptr (_1);

  <bb 3> :
<L0>:
  return D.245927;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_ptr (_ZN9__gnu_cxx16__aligned_membufIiE6_M_ptrEv, funcdef_no=9129, decl_uid=209803, cgraph_uid=5761, symbol_order=6547)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * __gnu_cxx::__aligned_membuf<int>::_M_ptr (struct __aligned_membuf * const this)
{
  int * D.245929;

  <bb 2> :
  D.245929 = __gnu_cxx::__aligned_membuf<int>::_M_addr (this);

  <bb 3> :
<L0>:
  return D.245929;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_addr (_ZN9__gnu_cxx16__aligned_membufIiE7_M_addrEv, funcdef_no=9867, decl_uid=209799, cgraph_uid=6499, symbol_order=7289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void * __gnu_cxx::__aligned_membuf<int>::_M_addr (struct __aligned_membuf * const this)
{
  void * D.245931;

  <bb 2> :
  D.245931 = &this->_M_storage;

  <bb 3> :
<L0>:
  return D.245931;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_, funcdef_no=9865, decl_uid=231483, cgraph_uid=6497, symbol_order=7287)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=10399, decl_uid=239207, cgraph_uid=7031, symbol_order=7821)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.242759;
  void * D.242758;
  int D.242760;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.242760 = *_1;
  D.242758 = __p;
  D.242759 = operator new (4, D.242758);
  MEM[(int *)D.242759] = D.242760;
  return;

}



;; Function operator new (_ZnwmPv, funcdef_no=15, decl_uid=3700, cgraph_uid=16, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
void * operator new (size_t D.3698, void * __p)
{
  void * D.245933;

  <bb 2> :
  D.245933 = __p;

  <bb 3> :
<L0>:
  return D.245933;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEaSEDn, funcdef_no=9866, decl_uid=231434, cgraph_uid=6498, symbol_order=7288)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __allocated_ptr & std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (struct __allocated_ptr * const this, <<< Unknown tree: nullptr_type >>> D.239211)
{
  struct __allocated_ptr & D.245935;

  <bb 2> :
  this->_M_ptr = 0B;
  D.245935 = this;

  <bb 3> :
<L0>:
  return D.245935;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEED2Ev, funcdef_no=9863, decl_uid=231468, cgraph_uid=6495, symbol_order=7285)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (struct __allocated_ptr * const this)
{
  <bb 2> :
  _1 = this->_M_ptr;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_ptr;
  _3 = this->_M_alloc;
  std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_3, _2, 1);

  <bb 4> :
  *this = {CLOBBER};
  return;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE10deallocateERS2_PS1_m, funcdef_no=9857, decl_uid=168117, cgraph_uid=6489, symbol_order=7279)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (struct allocator_type & __a, struct _List_node * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE10deallocateEPS2_m, funcdef_no=10396, decl_uid=167864, cgraph_uid=7028, symbol_order=7818)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (struct new_allocator * const this, struct _List_node * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_inc_sizeEm, funcdef_no=9128, decl_uid=168080, cgraph_uid=5760, symbol_order=6546)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (struct _List_base * const this, size_t __n)
{
  <bb 2> :
  _1 = this->_M_impl._M_node._M_size;
  _2 = __n + _1;
  this->_M_impl._M_node._M_size = _2;
  return;

}



;; Function Graph::DFSUtil (_ZN5Graph7DFSUtilEiPb, funcdef_no=6166, decl_uid=167775, cgraph_uid=3142, symbol_order=3816)

Removing basic block 13
Removing basic block 15
Removing basic block 18
Removing basic block 20
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 5 16 15 9 14 10 13 12 11 8 7 6 3 4
;;
;; Loop 2
;;  header 15, latch 14
;;  depth 2, outer 1
;;  nodes: 15 14 10 13 12 11
;; 2 succs { 18 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 17 }
;; 6 succs { 20 7 }
;; 7 succs { 20 8 }
;; 8 succs { 9 16 }
;; 9 succs { 15 }
;; 10 succs { 11 14 }
;; 11 succs { 12 13 }
;; 12 succs { 20 14 }
;; 13 succs { 20 14 }
;; 14 succs { 15 }
;; 15 succs { 10 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 3 19 }
;; 19 succs { 1 }
;; 20 succs { }
void Graph::DFSUtil (struct Graph * const this, int v, bool * visited)
{
  struct iterator i;
  struct iterator D.169074;
  bool retval.12;
  bool retval.11;
  bool retval.8;
  bool retval.7;
  bool * visited.6;
  bool retval.5;
  bool retval.4;

  <bb 2> :
  _1 = (sizetype) v;
  _2 = visited + _1;
  *_2 = 1;
  std::_List_iterator<int>::_List_iterator (&i);
  _3 = this->adj;
  _4 = (long unsigned int) v;
  _5 = _4 * 24;
  _6 = _3 + _5;
  i = std::__cxx11::list<int>::begin (_6);
  goto <bb 18>; [INV]

  <bb 3> :
  _7 = std::_List_iterator<int>::operator* (&i);
  _8 = *_7;
  _9 = this->end;
  retval.4 = _8 == _9;
  if (retval.4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  this->succ = 1;

  <bb 5> :
  visited.6 = visited;
  _10 = std::_List_iterator<int>::operator* (&i);
  _11 = *_10;
  _12 = (sizetype) _11;
  _13 = visited.6 + _12;
  _14 = *_13;
  retval.5 = ~_14;
  if (retval.5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 6> :
  _15 = &this->stack;
  _16 = std::_List_iterator<int>::operator* (&i);
  std::vector<int>::push_back (_15, _16);

  <bb 7> :
  _17 = std::_List_iterator<int>::operator* (&i);
  _18 = *_17;
  Graph::DFSUtil (this, _18, visited);

  <bb 8> :
  _19 = this->succ;
  _20 = (int) _19;
  if (_20 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  goto <bb 15>; [INV]

  <bb 10> :
  _21 = &this->stack;
  _22 = std::vector<int>::operator[] (_21, 0);
  _23 = *_22;
  retval.7 = _23 == 2;
  if (retval.7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  _24 = &this->stack;
  _25 = &this->stack;
  _26 = std::vector<int>::size (_25);
  _27 = _26 + 18446744073709551615;
  _28 = std::vector<int>::operator[] (_24, _27);
  _29 = *_28;
  _30 = this->end;
  retval.8 = _29 != _30;
  if (retval.8 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _31 = &this->stack;
  _32 = &this->stack;
  _33 = std::vector<int>::size (_32);
  _34 = _33 + 18446744073709551615;
  _35 = std::vector<int>::operator[] (_31, _34);
  _36 = *_35;
  stderr.9_37 = stderr;
  fprintf (stderr.9_37, "now stack %d\n", _36);
  goto <bb 14>; [INV]

  <bb 13> :
  _38 = &this->stack;
  _39 = &this->stack;
  _40 = std::vector<int>::size (_39);
  _41 = _40 + 18446744073709551615;
  _42 = std::vector<int>::operator[] (_38, _41);
  _43 = *_42;
  stderr.10_44 = stderr;
  fprintf (stderr.10_44, "find stack %d\n", _43);

  <bb 14> :
  _45 = &this->stack;
  std::vector<int>::pop_back (_45);

  <bb 15> :
  _46 = &this->stack;
  _47 = std::vector<int>::size (_46);
  retval.11 = _47 != 0;
  if (retval.11 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _48 = &this->stack;
  std::vector<int>::pop_back (_48);

  <bb 17> :
  std::_List_iterator<int>::operator++ (&i);

  <bb 18> :
  _49 = this->adj;
  _50 = (long unsigned int) v;
  _51 = _50 * 24;
  _52 = _49 + _51;
  D.169074 = std::__cxx11::list<int>::end (_52);
  retval.12 = std::operator!= (&i, &D.169074);
  D.169074 = {CLOBBER};
  if (retval.12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  i = {CLOBBER};
  return;

  <bb 20> :
<L21>:
  i = {CLOBBER};
  resx 1

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2Ev, funcdef_no=7516, decl_uid=169036, cgraph_uid=4148, symbol_order=4930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = 0B;
  return;

}



;; Function std::__cxx11::list<int>::begin (_ZNSt7__cxx114listIiSaIiEE5beginEv, funcdef_no=7518, decl_uid=168430, cgraph_uid=4150, symbol_order=4932)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::begin (struct list * const this)
{
  struct iterator D.209778;
  struct iterator D.245966;

  <bb 2> :
  _1 = this->D.168814._M_impl._M_node.D.144700._M_next;
  std::_List_iterator<int>::_List_iterator (&D.209778, _1);
  D.245966 = D.209778;
  D.209778 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.245966;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backERKi, funcdef_no=7523, decl_uid=167420, cgraph_uid=4156, symbol_order=4938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, const value_type & __x)
{
  struct __normal_iterator D.245972;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_4, _3, __x);
  _5 = this->D.167768._M_impl.D.167081._M_finish;
  _6 = _5 + 4;
  this->D.167768._M_impl.D.167081._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.245972 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<const int&> (this, D.245972, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_, funcdef_no=8315, decl_uid=209831, cgraph_uid=4947, symbol_order=5733)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=9130, decl_uid=220141, cgraph_uid=5762, symbol_order=6548)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.231498;
  void * D.231497;
  int D.231499;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.231499 = *_1;
  D.231497 = __p;
  D.231498 = operator new (4, D.231497);
  MEM[(int *)D.231498] = D.231499;
  return;

}



;; Function std::vector<int>::end (_ZNSt6vectorIiSaIiEE3endEv, funcdef_no=8316, decl_uid=167353, cgraph_uid=4948, symbol_order=5734)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::end (struct vector * const this)
{
  struct iterator D.220164;
  struct iterator D.245973;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_finish;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.220164, _1);
  D.245973 = D.220164;
  D.220164 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.245973;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_, funcdef_no=9132, decl_uid=210078, cgraph_uid=5764, symbol_order=6550)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::_M_realloc_insert<const int&> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=8317, decl_uid=210097, cgraph_uid=4952, symbol_order=5738)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<const int&> (struct vector * const this, struct iterator __position, const int & __args#0)
{
  int * D.245980;
  const size_type D.245979;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.220172;

  <bb 2> :
  D.245979 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.245979;
  __old_start = this->D.167768._M_impl.D.167081._M_start;
  __old_finish = this->D.167768._M_impl.D.167081._M_finish;
  D.220172 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.220172);
  __elems_before = (const size_type) _1;
  D.220172 = {CLOBBER};
  _2 = &this->D.167768;
  D.245980 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.245980;
  __new_finish = __new_start;
  _3 = std::forward<const int&> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167768;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167768;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167768;
  _23 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167768._M_impl.D.167081._M_start = __new_start;
  this->D.167768._M_impl.D.167081._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::_M_check_len (_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc, funcdef_no=9134, decl_uid=167615, cgraph_uid=5766, symbol_order=6552)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<int>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.15;
  size_type D.245984;
  const long unsigned int D.231508;
  bool retval.13;

  <bb 2> :
  _1 = std::vector<int>::max_size (this);
  _2 = std::vector<int>::size (this);
  _3 = _1 - _2;
  __n.14_4 = __n;
  retval.13 = _3 < __n.14_4;
  if (retval.13 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<int>::size (this);
  _6 = std::vector<int>::size (this);
  D.231508 = _6;
  _7 = std::max<long unsigned int> (&D.231508, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.231508 = {CLOBBER};
  _9 = std::vector<int>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<int>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.15 = std::vector<int>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.15 = __len;

  <bb 8> :
  D.245984 = iftmp.15;

  <bb 9> :
<L6>:
  return D.245984;

}



;; Function std::max<long unsigned int> (_ZSt3maxImERKT_S2_S2_, funcdef_no=9869, decl_uid=156763, cgraph_uid=6501, symbol_order=7291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::max<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.245993;

  <bb 2> :
  _1 = *__a;
  _2 = *__b;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.245993 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.245993 = __a;

  <bb 5> :
<L2>:
  return D.245993;

}



;; Function std::vector<int>::max_size (_ZNKSt6vectorIiSaIiEE8max_sizeEv, funcdef_no=9868, decl_uid=167375, cgraph_uid=6500, symbol_order=7290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::max_size (const struct vector * const this)
{
  size_type D.245995;

  <bb 2> :
  _1 = &this->D.167768;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  D.245995 = std::vector<int>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.245995;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=9706, decl_uid=166971, cgraph_uid=6338, symbol_order=7124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.245997;

  <bb 2> :
  D.245997 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.245997;

}



;; Function std::vector<int>::_S_max_size (_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_, funcdef_no=10400, decl_uid=167622, cgraph_uid=7032, symbol_order=7822)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.245999;

  <bb 2> :
  __diffmax = 2305843009213693951;
  _1 = std::allocator_traits<std::allocator<int> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.245999 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.245999;

}



;; Function std::allocator_traits<std::allocator<int> >::max_size (_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_, funcdef_no=10757, decl_uid=166906, cgraph_uid=7389, symbol_order=8181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<int> >::max_size (const struct allocator_type & __a)
{
  size_type D.246002;

  <bb 2> :
  D.246002 = __gnu_cxx::new_allocator<int>::max_size (__a);

  <bb 3> :
<L0>:
  return D.246002;

}



;; Function __gnu_cxx::new_allocator<int>::max_size (_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv, funcdef_no=10895, decl_uid=166748, cgraph_uid=7527, symbol_order=8319)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::max_size (const struct new_allocator * const this)
{
  size_type D.246004;

  <bb 2> :
  D.246004 = __gnu_cxx::new_allocator<int>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.246004;

}



;; Function __gnu_cxx::new_allocator<int>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv, funcdef_no=10402, decl_uid=166767, cgraph_uid=7033, symbol_order=7823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.246006;

  <bb 2> :
  D.246006 = 2305843009213693951;

  <bb 3> :
<L0>:
  return D.246006;

}



;; Function std::min<long unsigned int> (_ZSt3minImERKT_S2_S2_, funcdef_no=10758, decl_uid=114557, cgraph_uid=7390, symbol_order=8182)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::min<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.246010;

  <bb 2> :
  _1 = *__b;
  _2 = *__a;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.246010 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.246010 = __a;

  <bb 5> :
<L2>:
  return D.246010;

}



;; Function std::vector<int>::begin (_ZNSt6vectorIiSaIiEE5beginEv, funcdef_no=9135, decl_uid=167349, cgraph_uid=5767, symbol_order=6553)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::begin (struct vector * const this)
{
  struct iterator D.231510;
  struct iterator D.246012;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_start;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.231510, _1);
  D.246012 = D.231510;
  D.231510 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246012;

}



;; Function __gnu_cxx::operator-<int*, std::vector<int> > (_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_, funcdef_no=9136, decl_uid=220173, cgraph_uid=5768, symbol_order=6554)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<int*, std::vector<int> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.246015;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.246015 = _5 /[ex] 4;

  <bb 3> :
<L0>:
  return D.246015;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_allocate (_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm, funcdef_no=9137, decl_uid=167085, cgraph_uid=5769, symbol_order=6555)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * std::_Vector_base<int, std::allocator<int> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  int * D.246023;
  int * iftmp.16;
  int * D.246017;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.246023 = std::allocator_traits<std::allocator<int> >::allocate (_1, __n);
  iftmp.16 = D.246023;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.16 = 0B;

  <bb 5> :
  D.246017 = iftmp.16;

  <bb 6> :
<L3>:
  return D.246017;

}



;; Function std::allocator_traits<std::allocator<int> >::allocate (_ZNSt16allocator_traitsISaIiEE8allocateERS0_m, funcdef_no=9870, decl_uid=166886, cgraph_uid=6502, symbol_order=7292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int * std::allocator_traits<std::allocator<int> >::allocate (struct allocator_type & __a, size_type __n)
{
  int * D.246026;
  int * D.246024;

  <bb 2> :
  D.246026 = __gnu_cxx::new_allocator<int>::allocate (__a, __n, 0B);
  D.246024 = D.246026;

  <bb 3> :
<L0>:
  return D.246024;

}



;; Function __gnu_cxx::new_allocator<int>::allocate (_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv, funcdef_no=10401, decl_uid=166740, cgraph_uid=7034, symbol_order=7824)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
int * __gnu_cxx::new_allocator<int>::allocate (struct new_allocator * const this, size_type __n, const void * D.242766)
{
  int * D.246037;
  int * D.246036;
  align_val_t __al;
  int * D.246034;
  bool retval.17;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<int>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.17 = _4 != 0;
  if (retval.17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 4611686018427387903)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 4;
  D.246037 = operator new (_6);
  D.246034 = D.246037;

  <bb 7> :
<L6>:
  return D.246034;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=8874, decl_uid=166969, cgraph_uid=5506, symbol_order=6292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.246038;

  <bb 2> :
  D.246038 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246038;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv, funcdef_no=9139, decl_uid=210065, cgraph_uid=5771, symbol_order=6557)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * const & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  int * const & D.246040;

  <bb 2> :
  D.246040 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246040;

}



;; Function std::vector<int>::_S_relocate (_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_, funcdef_no=9138, decl_uid=167243, cgraph_uid=5770, symbol_order=6556)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.246043;
  int * D.246042;

  <bb 2> :
  D.246042 = std::vector<int>::_S_do_relocate (__first, __last, __result, __alloc, D.246043);

  <bb 3> :
<L0>:
  return D.246042;

}



;; Function std::vector<int>::_S_do_relocate (_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE, funcdef_no=9871, decl_uid=167231, cgraph_uid=6503, symbol_order=7293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_do_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239228)
{
  int * D.246045;

  <bb 2> :
  D.246045 = std::__relocate_a<int*, int*, std::allocator<int> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.246045;

}



;; Function std::__relocate_a<int*, int*, std::allocator<int> > (_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_, funcdef_no=10403, decl_uid=220337, cgraph_uid=7035, symbol_order=7825)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__relocate_a<int*, int*, std::allocator<int> > (int * __first, int * __last, int * __result, struct allocator & __alloc)
{
  int * D.246047;

  <bb 2> :
  _1 = std::__niter_base<int*> (__result);
  _2 = std::__niter_base<int*> (__last);
  _3 = std::__niter_base<int*> (__first);
  D.246047 = std::__relocate_a_1<int, int> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.246047;

}



;; Function std::__niter_base<int*> (_ZSt12__niter_baseIPiET_S1_, funcdef_no=10697, decl_uid=220343, cgraph_uid=7329, symbol_order=8119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*> (int * __it)
{
  int * D.246049;

  <bb 2> :
  D.246049 = __it;

  <bb 3> :
<L0>:
  return D.246049;

}



;; Function std::__relocate_a_1<int, int> (_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E, funcdef_no=10759, decl_uid=220511, cgraph_uid=7391, symbol_order=8183)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__relocate_a_1<int, int> (int * __first, int * __last, int * __result, struct allocator & D.244306)
{
  ptrdiff_t __count;
  int * D.246054;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 4;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.18_2 = (long unsigned int) __count;
  _3 = __count.18_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.19_4 = (long unsigned int) __count;
  _5 = __count.19_4 * 4;
  D.246054 = __result + _5;

  <bb 5> :
<L3>:
  return D.246054;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim, funcdef_no=8873, decl_uid=167088, cgraph_uid=5505, symbol_order=6291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_deallocate (struct _Vector_base * const this, int * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<int> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::deallocate (_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim, funcdef_no=9686, decl_uid=166893, cgraph_uid=6318, symbol_order=7104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::deallocate (struct allocator_type & __a, int * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::deallocate (_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim, funcdef_no=10252, decl_uid=166744, cgraph_uid=6884, symbol_order=7674)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<int>::deallocate (struct new_allocator * const this, int * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 4;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_List_iterator<int>::operator* (_ZNKSt14_List_iteratorIiEdeEv, funcdef_no=7522, decl_uid=169007, cgraph_uid=4154, symbol_order=4936)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & std::_List_iterator<int>::operator* (const struct _List_iterator * const this)
{
  int & D.246062;

  <bb 2> :
  _1 = this->_M_node;
  D.246062 = std::_List_node<int>::_M_valptr (_1);

  <bb 3> :
<L0>:
  return D.246062;

}



;; Function std::vector<int>::operator[] (_ZNSt6vectorIiSaIiEEixEm, funcdef_no=7526, decl_uid=167393, cgraph_uid=4158, symbol_order=4940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
value_type & std::vector<int>::operator[] (struct vector * const this, size_type __n)
{
  value_type & D.246064;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_start;
  _2 = __n * 4;
  D.246064 = _1 + _2;

  <bb 3> :
<L0>:
  return D.246064;

}



;; Function std::vector<int>::size (_ZNKSt6vectorIiSaIiEE4sizeEv, funcdef_no=7525, decl_uid=167373, cgraph_uid=4157, symbol_order=4939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::size (const struct vector * const this)
{
  size_type D.246066;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.246066 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246066;

}



;; Function std::vector<int>::pop_back (_ZNSt6vectorIiSaIiEE8pop_backEv, funcdef_no=7527, decl_uid=167432, cgraph_uid=4159, symbol_order=4941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = _1 + 18446744073709551612;
  this->D.167768._M_impl.D.167081._M_finish = _2;
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::destroy<int> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::destroy<int> (_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_, funcdef_no=8321, decl_uid=210105, cgraph_uid=4953, symbol_order=5739)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::destroy<int> (struct allocator_type & __a, int * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::destroy<int> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::destroy<int> (_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_, funcdef_no=9140, decl_uid=220523, cgraph_uid=5772, symbol_order=6558)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::destroy<int> (struct new_allocator * const this, int * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::_List_iterator<int>::operator++ (_ZNSt14_List_iteratorIiEppEv, funcdef_no=7521, decl_uid=169011, cgraph_uid=4153, symbol_order=4935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Self & std::_List_iterator<int>::operator++ (struct _List_iterator * const this)
{
  struct _Self & D.246068;

  <bb 2> :
  _1 = this->_M_node;
  _2 = _1->_M_next;
  this->_M_node = _2;
  D.246068 = this;

  <bb 3> :
<L0>:
  return D.246068;

}



;; Function std::operator!= (_ZStneRKSt14_List_iteratorIiES2_, funcdef_no=7520, decl_uid=169024, cgraph_uid=4152, symbol_order=4934)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct _Self & __x, const struct _Self & __y)
{
  bool D.246070;

  <bb 2> :
  _1 = __x->_M_node;
  _2 = __y->_M_node;
  D.246070 = _1 != _2;

  <bb 3> :
<L0>:
  return D.246070;

}



;; Function Graph::DFS (_ZN5Graph3DFSEi, funcdef_no=6167, decl_uid=167797, cgraph_uid=3143, symbol_order=3817)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void Graph::DFS (struct Graph * const this, int v)
{
  bool * D.246073;
  int i;
  bool * visited;
  sizetype D.246072;

  <bb 2> :
  _1 = this->V;
  D.246072 = (sizetype) _1;
  D.246073 = operator new [] (D.246072);
  visited = D.246073;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (sizetype) i;
  _3 = visited + _2;
  *_3 = 0;
  i = i + 1;

  <bb 4> :
  _4 = this->V;
  if (i < _4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Graph::DFSUtil (this, v, visited);
  return;

}



;; Function Graph::is_succ (_ZN5Graph7is_succEP15basic_block_defS1_, funcdef_no=6168, decl_uid=167793, cgraph_uid=3144, symbol_order=3818)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
bool Graph::is_succ (struct Graph * const this, struct basic_block_def * bb1, struct basic_block_def * bb2)
{
  bool D.246074;
  value_type D.169110;

  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::clear (_1);
  _2 = bb2->index;
  this->end = _2;
  this->succ = 0;
  _3 = &this->stack;
  D.169110 = 2;
  std::vector<int>::push_back (_3, &D.169110);

  <bb 3> :
  D.169110 = {CLOBBER};
  Graph::DFS (this, 2);
  D.246074 = this->succ;

  <bb 4> :
<L0>:
  return D.246074;

  <bb 5> :
<L1>:
  D.169110 = {CLOBBER};
  resx 1

}



;; Function std::vector<int>::clear (_ZNSt6vectorIiSaIiEE5clearEv, funcdef_no=7528, decl_uid=167475, cgraph_uid=4160, symbol_order=4942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_start;
  std::vector<int>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<int>::_M_erase_at_end (_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi, funcdef_no=8322, decl_uid=167624, cgraph_uid=4954, symbol_order=5740)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<int>::_M_erase_at_end (struct vector * const this, int * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 4;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.167768;
  _5 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_4);
  _6 = this->D.167768._M_impl.D.167081._M_finish;
  std::_Destroy<int*, int> (__pos, _6, _5);
  this->D.167768._M_impl.D.167081._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Destroy<int*, int> (_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E, funcdef_no=8875, decl_uid=216515, cgraph_uid=5507, symbol_order=6293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*, int> (int * __first, int * __last, struct allocator & D.230053)
{
  <bb 2> :
  std::_Destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy<int*> (_ZSt8_DestroyIPiEvT_S1_, funcdef_no=9687, decl_uid=230055, cgraph_uid=6319, symbol_order=7105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*> (int * __first, int * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<int*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_, funcdef_no=10253, decl_uid=237054, cgraph_uid=6885, symbol_order=7675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<int*> (int * D.241604, int * D.241605)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backEOi, funcdef_no=7529, decl_uid=167423, cgraph_uid=4161, symbol_order=4943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, value_type & __x)
{
  <bb 2> :
  _1 = std::move<int&> (__x);
  std::vector<int>::emplace_back<int> (this, _1);
  return;

}



;; Function std::move<int&> (_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_, funcdef_no=8323, decl_uid=210200, cgraph_uid=4955, symbol_order=5741)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
type & std::move<int&> (int & __t)
{
  type & D.246080;

  <bb 2> :
  D.246080 = __t;

  <bb 3> :
<L0>:
  return D.246080;

}



;; Function std::vector<int>::emplace_back<int> (_ZNSt6vectorIiSaIiEE12emplace_backIJiEEERiDpOT_, funcdef_no=8324, decl_uid=210202, cgraph_uid=4956, symbol_order=5742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
value_type & std::vector<int>::emplace_back<int> (struct vector * const this, int & __args#0)
{
  value_type & D.246086;
  struct __normal_iterator D.246085;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = std::forward<int> (__args#0);
  _4 = this->D.167768._M_impl.D.167081._M_finish;
  _5 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, int> (_5, _4, _3);
  _6 = this->D.167768._M_impl.D.167081._M_finish;
  _7 = _6 + 4;
  this->D.167768._M_impl.D.167081._M_finish = _7;
  goto <bb 5>; [INV]

  <bb 4> :
  _8 = std::forward<int> (__args#0);
  D.246085 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<int> (this, D.246085, _8);

  <bb 5> :
  D.246086 = std::vector<int>::back (this);

  <bb 6> :
<L3>:
  return D.246086;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, int> (_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_, funcdef_no=9142, decl_uid=220544, cgraph_uid=5774, symbol_order=6560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, int> (struct allocator_type & __a, int * __p, int & __args#0)
{
  <bb 2> :
  _1 = std::forward<int> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, int> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, int> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_, funcdef_no=9872, decl_uid=231535, cgraph_uid=6504, symbol_order=7294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, int> (struct new_allocator * const this, int * __p, int & __args#0)
{
  void * D.239234;
  void * D.239233;
  int D.239235;

  <bb 2> :
  _1 = std::forward<int> (__args#0);
  D.239235 = *_1;
  D.239233 = __p;
  D.239234 = operator new (4, D.239233);
  MEM[(int *)D.239234] = D.239235;
  return;

}



;; Function std::forward<int> (_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE, funcdef_no=9141, decl_uid=220542, cgraph_uid=5773, symbol_order=6559)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int & std::forward<int> (type & __t)
{
  int & D.246088;

  <bb 2> :
  D.246088 = __t;

  <bb 3> :
<L0>:
  return D.246088;

}



;; Function std::vector<int>::_M_realloc_insert<int> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=9143, decl_uid=220557, cgraph_uid=5775, symbol_order=6561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<int> (struct vector * const this, struct iterator __position, int & __args#0)
{
  int * D.246094;
  const size_type D.246093;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.231546;

  <bb 2> :
  D.246093 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.246093;
  __old_start = this->D.167768._M_impl.D.167081._M_start;
  __old_finish = this->D.167768._M_impl.D.167081._M_finish;
  D.231546 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.231546);
  __elems_before = (const size_type) _1;
  D.231546 = {CLOBBER};
  _2 = &this->D.167768;
  D.246094 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.246094;
  __new_finish = __new_start;
  _3 = std::forward<int> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, int> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167768;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167768;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167768;
  _23 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167768._M_impl.D.167081._M_start = __new_start;
  this->D.167768._M_impl.D.167081._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::back (_ZNSt6vectorIiSaIiEE4backEv, funcdef_no=9144, decl_uid=167412, cgraph_uid=5776, symbol_order=6562)

Merging blocks 3 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
value_type & std::vector<int>::back (struct vector * const this)
{
  struct iterator D.231552;
  struct __normal_iterator D.231553;
  value_type & D.246095;

  <bb 2> :
  D.231552 = std::vector<int>::end (this);
  D.231553 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (&D.231552, 1);
  D.246095 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (&D.231553);

  <bb 3> :
  D.231553 = {CLOBBER};
  D.231552 = {CLOBBER};

  <bb 4> :
<L2>:
  return D.246095;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl, funcdef_no=9873, decl_uid=210062, cgraph_uid=6505, symbol_order=7295)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.239238;
  struct __normal_iterator D.239239;
  struct __normal_iterator D.246099;

  <bb 2> :
  _1 = this->_M_current;
  __n.20_2 = (long unsigned int) __n;
  _3 = __n.20_2 * 4;
  _4 = -_3;
  _5 = _1 + _4;
  D.239238 = _5;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.239239, &D.239238);
  D.246099 = D.239239;
  D.239239 = {CLOBBER};
  D.239238 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.246099;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv, funcdef_no=9874, decl_uid=210036, cgraph_uid=6506, symbol_order=7296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (const struct __normal_iterator * const this)
{
  int & D.246103;

  <bb 2> :
  D.246103 = this->_M_current;

  <bb 3> :
<L0>:
  return D.246103;

}



;; Function Graph::exist_succ (_ZN5Graph10exist_succEP15basic_block_def, funcdef_no=6169, decl_uid=167788, cgraph_uid=3145, symbol_order=3819)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 }
;; 3 succs { 6 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool Graph::exist_succ (struct Graph * const this, struct basic_block_def * bb)
{
  struct iterator i;
  struct iterator D.169118;
  bool retval.21;
  bool D.246105;

  <bb 2> :
  std::_List_iterator<int>::_List_iterator (&i);
  _1 = this->adj;
  _2 = bb->index;
  _3 = (long unsigned int) _2;
  _4 = _3 * 24;
  _5 = _1 + _4;
  i = std::__cxx11::list<int>::begin (_5);
  goto <bb 4>; [INV]

  <bb 3> :
  D.246105 = 1;
  goto <bb 6>; [INV]

  <bb 4> :
  _6 = this->adj;
  _7 = bb->index;
  _8 = (long unsigned int) _7;
  _9 = _8 * 24;
  _10 = _6 + _9;
  D.169118 = std::__cxx11::list<int>::end (_10);
  retval.21 = std::operator!= (&i, &D.169118);
  D.169118 = {CLOBBER};
  if (retval.21 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.246105 = 0;

  <bb 6> :
  i = {CLOBBER};

  <bb 7> :
<L4>:
  return D.246105;

}



;; Function bb_in_loop_p (_Z12bb_in_loop_pP15basic_block_def, funcdef_no=6237, decl_uid=187051, cgraph_uid=3213, symbol_order=3979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_loop_p (struct basic_block_def * bb)
{
  bool D.246109;

  <bb 2> :
  _1 = bb->loop_father;
  _2 = _1->header;
  _3 = _2->index;
  D.246109 = _3 != 0;

  <bb 3> :
<L0>:
  return D.246109;

}



;; Function bb_in_branch_p (_Z14bb_in_branch_pP6gimple, funcdef_no=6238, decl_uid=187054, cgraph_uid=3214, symbol_order=3980)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_branch_p (struct gimple * stmt)
{
  bool D.246113;
  bool D.246111;

  <bb 2> :
  cfun.22_1 = cfun;
  _2 = cfun.22_1->cfg;
  _3 = _2->x_exit_block_ptr;
  _4 = _3->prev_bb;
  _5 = stmt->bb;
  D.246113 = dominated_by_p (1, _5, _4);
  _6 = D.246113;
  D.246111 = ~_6;

  <bb 3> :
<L0>:
  return D.246111;

}



;; Function init_table (_Z10init_tablev, funcdef_no=6239, decl_uid=187056, cgraph_uid=3215, symbol_order=3981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void init_table ()
{
  <bb 2> :
  start1.target = 0B;
  start1.next = 0B;
  POINTER_NOT_EXIST.23_1 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.24_2 = (int) POINTER_NOT_EXIST.23_1;
  start1.state = POINTER_NOT_EXIST.24_2;
  ptable = &start1;
  start2.target = 0B;
  start2.next = 0B;
  POINTER_NOT_EXIST.25_3 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.26_4 = (int) POINTER_NOT_EXIST.25_3;
  start2.state = POINTER_NOT_EXIST.26_4;
  ftable = &start2;
  return;

}



;; Function Location_b (_Z10Location_bP6gimpleS0_P15basic_block_def, funcdef_no=6240, decl_uid=187061, cgraph_uid=3216, symbol_order=3982)

Merging blocks 9 and 11
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 3
;; 2 succs { 8 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
bool Location_b (struct gimple * a, struct gimple * b, struct basic_block_def * bb)
{
  struct gimple_stmt_iterator gsi;
  struct gimple * gc;
  bool retval.27;
  bool D.246116;

  <bb 2> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 8>; [INV]

  <bb 3> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246116 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 5> :
  if (gc == b)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.246116 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  gsi_next (&gsi);

  <bb 8> :
  _1 = gsi_end_p (gsi);
  retval.27 = ~_1;
  if (retval.27 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  gsi = {CLOBBER};
  D.246116 = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  gsi = {CLOBBER};

  <bb 11> :
<L9>:
  return D.246116;

}



;; Function gsi_start_bb (_ZL12gsi_start_bbP15basic_block_def, funcdef_no=2478, decl_uid=94526, cgraph_uid=1615, symbol_order=1775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple_stmt_iterator gsi_start_bb (struct basic_block_def * bb)
{
  struct gimple * * seq;
  struct gimple_stmt_iterator i [value-expr: <retval>];

  <bb 2> :
  seq = bb_seq_addr (bb);
  _1 = *seq;
  _2 = gimple_seq_first (_1);
  <retval>.ptr = _2;
  <retval>.seq = seq;
  <retval>.bb = bb;

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function bb_seq_addr (_ZL11bb_seq_addrP15basic_block_def, funcdef_no=1994, decl_uid=92233, cgraph_uid=1131, symbol_order=1291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * bb_seq_addr (struct basic_block_def * bb)
{
  struct gimple * * iftmp.28;
  struct gimple * * D.246125;

  <bb 2> :
  _1 = bb->flags;
  _2 = _1 & 512;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.28 = &bb->il.gimple.seq;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.28 = 0B;

  <bb 5> :
  D.246125 = iftmp.28;

  <bb 6> :
<L3>:
  return D.246125;

}



;; Function gimple_seq_first (_ZL16gimple_seq_firstP6gimple, funcdef_no=1984, decl_uid=92193, cgraph_uid=1121, symbol_order=1281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gimple_seq_first (struct gimple * s)
{
  struct gimple * D.246131;

  <bb 2> :
  D.246131 = s;

  <bb 3> :
<L0>:
  return D.246131;

}



;; Function gsi_stmt (_ZL8gsi_stmt20gimple_stmt_iterator, funcdef_no=2485, decl_uid=94558, cgraph_uid=1622, symbol_order=1782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gsi_stmt (struct gimple_stmt_iterator i)
{
  struct gimple * D.246133;

  <bb 2> :
  D.246133 = i.ptr;

  <bb 3> :
<L0>:
  return D.246133;

}



;; Function gsi_next (_ZL8gsi_nextP20gimple_stmt_iterator, funcdef_no=2483, decl_uid=94551, cgraph_uid=1620, symbol_order=1780)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gsi_next (struct gimple_stmt_iterator * i)
{
  <bb 2> :
  _1 = i->ptr;
  _2 = _1->next;
  i->ptr = _2;
  return;

}



;; Function gsi_end_p (_ZL9gsi_end_p20gimple_stmt_iterator, funcdef_no=2481, decl_uid=94545, cgraph_uid=1618, symbol_order=1778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool gsi_end_p (struct gimple_stmt_iterator i)
{
  bool D.246135;

  <bb 2> :
  _1 = i.ptr;
  D.246135 = _1 == 0B;

  <bb 3> :
<L0>:
  return D.246135;

}



;; Function Location_b2 (_Z11Location_b2P6gimpleS0_P9tree_node, funcdef_no=6241, decl_uid=187075, cgraph_uid=3217, symbol_order=3983)

Merging blocks 18 and 20
Removing basic block 22
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 6 21 7 20 8 18 17 9 16 13 10 5 3
;;
;; Loop 2
;;  header 20, latch 18
;;  depth 2, outer 1
;;  nodes: 20 18 17 9 16 13 10
;;
;; Loop 3
;;  header 17, latch 16
;;  depth 3, outer 2
;;  nodes: 17 16 13 10
;; 2 succs { 23 }
;; 3 succs { 4 5 }
;; 4 succs { 22 }
;; 5 succs { 6 7 }
;; 6 succs { 22 }
;; 7 succs { 8 21 }
;; 8 succs { 20 }
;; 9 succs { 17 }
;; 10 succs { 11 13 }
;; 11 succs { 26 12 }
;; 12 succs { 19 }
;; 13 succs { 14 16 }
;; 14 succs { 26 15 }
;; 15 succs { 19 }
;; 16 succs { 17 }
;; 17 succs { 10 18 }
;; 18 succs { 20 }
;; 19 succs { 25 }
;; 20 succs { 9 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 3 24 }
;; 24 succs { 25 }
;; 25 succs { 1 }
;; 26 succs { }
bool Location_b2 (struct gimple * a, struct gimple * b, union tree_node * function_tree)
{
  struct cgraph_node * D.246157;
  bool D.246153;
  struct cgraph_node * D.246152;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct basic_block_def * bb;
  struct cgraph_node * node;
  bool retval.34;
  bool D.246146;
  bool retval.30;

  <bb 2> :
  symtab.29_1 = symtab;
  D.246152 = symbol_table::first_defined_function (symtab.29_1);
  node = D.246152;
  goto <bb 23>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.246153 = gimple_has_body_p (_2);
  _3 = D.246153;
  retval.30 = ~_3;
  if (retval.30 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 5> :
  _4 = node->D.97512.decl;
  _5 = _4->function_decl.f;
  push_cfun (_5);
  cfun.31_6 = cfun;
  if (cfun.31_6 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 7> :
  cfun.32_7 = cfun;
  _8 = cfun.32_7->decl;
  if (function_tree == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 8> :
  calculate_dominance_info (1);
  cfun.33_9 = cfun;
  _10 = cfun.33_9->cfg;
  _11 = _10->x_entry_block_ptr;
  bb = _11->next_bb;
  goto <bb 20>; [INV]

  <bb 9> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 17>; [INV]

  <bb 10> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  D.246146 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 13> :
  if (gc == b)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  pop_cfun ();

  <bb 15> :
  D.246146 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  gsi_next (&gsi);

  <bb 17> :
  _12 = gsi_end_p (gsi);
  retval.34 = ~_12;
  if (retval.34 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  gsi = {CLOBBER};
  bb = bb->next_bb;
  goto <bb 20>; [INV]

  <bb 19> :
  gsi = {CLOBBER};
  goto <bb 25>; [INV]

  <bb 20> :
  cfun.35_13 = cfun;
  _14 = cfun.35_13->cfg;
  _15 = _14->x_exit_block_ptr;
  if (bb != _15)
    goto <bb 9>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  symtab.36_16 = symtab;
  D.246157 = symbol_table::next_defined_function (symtab.36_16, node);
  node = D.246157;

  <bb 23> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  D.246146 = 0;

  <bb 25> :
<L23>:
  return D.246146;

  <bb 26> :
<L24>:
  gsi = {CLOBBER};
  resx 1

}



;; Function symbol_table::first_defined_function (_ZN12symbol_table22first_defined_functionEv, funcdef_no=2571, decl_uid=98657, cgraph_uid=1708, symbol_order=1868)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::first_defined_function (struct symbol_table * const this)
{
  struct cgraph_node * D.246164;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.246162;

  <bb 2> :
  node = this->nodes;
  goto <bb 7>; [INV]

  <bb 3> :
  D.246164 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.246164;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.246162 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node = node->next;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.246162 = 0B;

  <bb 9> :
<L7>:
  return D.246162;

}



;; Function dyn_cast<cgraph_node*, symtab_node> (_Z8dyn_castIP11cgraph_node11symtab_nodeET_PT0_, funcdef_no=7074, decl_uid=97635, cgraph_uid=3706, symbol_order=4485)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct cgraph_node * dyn_cast<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.246168;
  bool retval.37;

  <bb 2> :
  retval.37 = is_a<cgraph_node*, symtab_node> (p);
  if (retval.37 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.246168 = reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.246168 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.246168;

}



;; Function is_a<cgraph_node*, symtab_node> (_Z4is_aIP11cgraph_node11symtab_nodeEbPT0_, funcdef_no=7083, decl_uid=99519, cgraph_uid=3715, symbol_order=4494)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  bool D.246170;

  <bb 2> :
  D.246170 = is_a_helper<cgraph_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.246170;

}



;; Function is_a_helper<cgraph_node*>::test<symtab_node> (_ZN11is_a_helperIP11cgraph_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2532, decl_uid=98449, cgraph_uid=1669, symbol_order=1829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<cgraph_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.38;
  bool D.246172;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.38 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.38 = 0;

  <bb 6> :
  D.246172 = iftmp.38;

  <bb 7> :
<L4>:
  return D.246172;

}



;; Function reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP11cgraph_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8085, decl_uid=206046, cgraph_uid=4717, symbol_order=5499)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct cgraph_node * reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.246179;

  <bb 2> :
  D.246179 = p;

  <bb 3> :
<L0>:
  return D.246179;

}



;; Function symbol_table::next_defined_function (_ZN12symbol_table21next_defined_functionEP11cgraph_node, funcdef_no=2572, decl_uid=98661, cgraph_uid=1709, symbol_order=1869)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::next_defined_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.246187;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.246185;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 7>; [INV]

  <bb 3> :
  D.246187 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.246187;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn1->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.246185 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node1 = node1->next;

  <bb 7> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.246185 = 0B;

  <bb 9> :
<L7>:
  return D.246185;

}



;; Function SDBMHash (_Z8SDBMHashPc, funcdef_no=6242, decl_uid=186938, cgraph_uid=3218, symbol_order=3984)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int SDBMHash (char * str)
{
  unsigned int hash;
  unsigned int D.246188;

  <bb 2> :
  _1 = rand ();
  _2 = _1 % 10;
  hash = (unsigned int) _2;
  goto <bb 4>; [INV]

  <bb 3> :
  str.39_3 = str;
  str = str.39_3 + 1;
  _4 = *str.39_3;
  _5 = (unsigned int) _4;
  _6 = hash << 6;
  _7 = _5 + _6;
  _8 = hash << 16;
  _9 = _7 + _8;
  hash = _9 - hash;

  <bb 4> :
  _10 = *str;
  if (_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.246188 = hash & 2147483647;

  <bb 6> :
<L3>:
  return D.246188;

}



;; Function dump_points_to_solution2 (_Z24dump_points_to_solution2P8_IO_FILEP11pt_solution, funcdef_no=6243, decl_uid=186943, cgraph_uid=3219, symbol_order=3986)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
int dump_points_to_solution2 (struct FILE * file, struct pt_solution * pt)
{
  int D.246208;

  <bb 2> :
  _1 = BIT_FIELD_REF <*pt, 8, 0>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_fwrite (", points-to anything", 1, 20, file);

  <bb 4> :
  _3 = BIT_FIELD_REF <*pt, 8, 0>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_fwrite (", points-to non-local", 1, 21, file);

  <bb 6> :
  _5 = BIT_FIELD_REF <*pt, 8, 0>;
  _6 = _5 & 4;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  __builtin_fwrite (", points-to escaped", 1, 19, file);

  <bb 8> :
  _7 = BIT_FIELD_REF <*pt, 8, 0>;
  _8 = _7 & 8;
  if (_8 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  __builtin_fwrite (", points-to unit escaped", 1, 24, file);

  <bb 10> :
  _9 = BIT_FIELD_REF <*pt, 8, 0>;
  _10 = _9 & 16;
  if (_10 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  __builtin_fwrite (", points-to NULL", 1, 16, file);

  <bb 12> :
  _11 = pt->vars;
  if (_11 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  __builtin_fwrite (", points-to vars: ", 1, 18, file);

  <bb 14> :
  D.246208 = 1;

  <bb 15> :
<L18>:
  return D.246208;

}



;; Function printfBasicblock (_Z16printfBasicblockv, funcdef_no=6244, decl_uid=187026, cgraph_uid=3223, symbol_order=3990)

Removing basic block 16
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 30, latch 29
;;  depth 1, outer 0
;;  nodes: 30 29 28 7 12 27 26 17 25 24 22 23 21 20 19 18 16 14 15 13 10 9 8 6 5 11
;;
;; Loop 2
;;  header 26, latch 25
;;  depth 2, outer 1
;;  nodes: 26 25 24 22 23 21 20 19 18
;;
;; Loop 3
;;  header 24, latch 23
;;  depth 3, outer 2
;;  nodes: 24 23
;; 2 succs { 33 3 }
;; 3 succs { 33 4 }
;; 4 succs { 30 }
;; 5 succs { 33 6 }
;; 6 succs { 7 8 }
;; 7 succs { 28 }
;; 8 succs { 33 9 }
;; 9 succs { 33 10 }
;; 10 succs { 11 13 }
;; 11 succs { 33 12 }
;; 12 succs { 28 }
;; 13 succs { 33 14 }
;; 14 succs { 15 16 }
;; 15 succs { 33 16 }
;; 16 succs { 33 17 }
;; 17 succs { 26 }
;; 18 succs { 33 19 }
;; 19 succs { 33 20 }
;; 20 succs { 33 21 }
;; 21 succs { 33 22 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 23 25 }
;; 25 succs { 26 }
;; 26 succs { 18 27 }
;; 27 succs { 33 28 }
;; 28 succs { 33 29 }
;; 29 succs { 30 }
;; 30 succs { 5 31 }
;; 31 succs { 33 32 }
;; 32 succs { 1 }
;; 33 succs { }
void printfBasicblock ()
{
  struct cgraph_node * D.246224;
  bool D.246223;
  const char * D.246222;
  struct function * D.246221;
  bool D.246220;
  struct cgraph_node * D.246219;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.50;
  bool retval.42;

  <bb 2> :
  stderr.40_1 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.40_1);

  <bb 3> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.41_2 = symtab;
  D.246219 = symbol_table::first_function (symtab.41_2);

  <bb 4> :
  node = D.246219;
  goto <bb 30>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.246220 = gimple_has_body_p (_3);

  <bb 6> :
  _4 = D.246220;
  retval.42 = ~_4;
  if (retval.42 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 8> :
  D.246221 = cgraph_node::get_fun (node);

  <bb 9> :
  _5 = D.246221;
  push_cfun (_5);

  <bb 10> :
  cfun.43_6 = cfun;
  if (cfun.43_6 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 13> :
  cfun.44_7 = cfun;
  _8 = cfun.44_7->decl;
  D.246222 = get_name (_8);

  <bb 14> :
  name = D.246222;
  if (name != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  stderr.45_9 = stderr;
  fprintf (stderr.45_9, "=======Mapping node_fun:%s=========\n", name);

  <bb 16> :
  calculate_dominance_info (1);

  <bb 17> :
  cfun.46_10 = cfun;
  _11 = cfun.46_10->cfg;
  _12 = _11->x_entry_block_ptr;
  bb = _12->next_bb;
  goto <bb 26>; [INV]

  <bb 18> :
  D.246223 = bb_in_loop_p (bb);

  <bb 19> :
  _13 = D.246223;
  _14 = (int) _13;
  stderr.47_15 = stderr;
  fprintf (stderr.47_15, "=======is loop:%d=========\n", _14);

  <bb 20> :
  _16 = bb->index;
  stderr.48_17 = stderr;
  fprintf (stderr.48_17, "\n bb index %d \n", _16);

  <bb 21> :
  debug_bb (bb);

  <bb 22> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 24>; [INV]

  <bb 23> :
  gc = gsi_stmt (gsi);
  gimplestmt_count.49_18 = gimplestmt_count;
  _19 = gimplestmt_count.49_18 + 1;
  gimplestmt_count = _19;
  gsi_next (&gsi);

  <bb 24> :
  _20 = gsi_end_p (gsi);
  retval.50 = ~_20;
  if (retval.50 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 26> :
  cfun.51_21 = cfun;
  _22 = cfun.51_21->cfg;
  _23 = _22->x_exit_block_ptr;
  if (bb != _23)
    goto <bb 18>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  pop_cfun ();

  <bb 28> :
  symtab.52_24 = symtab;
  D.246224 = symbol_table::next_function (symtab.52_24, node);

  <bb 29> :
  node = D.246224;

  <bb 30> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  stderr.53_25 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.53_25);

  <bb 32> :
  start = {CLOBBER};
  return;

  <bb 33> :
<L17>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_array::gimple_array (_ZN12gimple_arrayC2Ev, funcdef_no=6246, decl_uid=187116, cgraph_uid=3221, symbol_order=3988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gimple_array::gimple_array (struct gimple_array * const this)
{
  <bb 2> :
  this->size = 0;
  return;

}



;; Function symbol_table::first_function (_ZN12symbol_table14first_functionEv, funcdef_no=2573, decl_uid=98664, cgraph_uid=1710, symbol_order=1870)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::first_function (struct symbol_table * const this)
{
  struct cgraph_node * D.246230;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.246228;

  <bb 2> :
  node = this->nodes;
  goto <bb 6>; [INV]

  <bb 3> :
  D.246230 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.246230;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246228 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node = node->next;

  <bb 6> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.246228 = 0B;

  <bb 8> :
<L5>:
  return D.246228;

}



;; Function symbol_table::next_function (_ZN12symbol_table13next_functionEP11cgraph_node, funcdef_no=2574, decl_uid=98668, cgraph_uid=1711, symbol_order=1871)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::next_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.246235;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.246233;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 6>; [INV]

  <bb 3> :
  D.246235 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.246235;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246233 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node1 = node1->next;

  <bb 6> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.246233 = 0B;

  <bb 8> :
<L5>:
  return D.246233;

}



;; Function print_function_path (_Z19print_function_pathPSt6vectorI11return_typeSaIS0_EE, funcdef_no=6248, decl_uid=187172, cgraph_uid=3224, symbol_order=3991)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void print_function_path (struct vector * path)
{
  int i;
  bool retval.56;

  <bb 2> :
  stderr.54_1 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.54_1);
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (long unsigned int) i;
  _3 = std::vector<return_type>::operator[] (path, _2);
  _4 = _3->stmt;
  debug (_4);
  stderr.55_5 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.55_5);
  i = i + 1;

  <bb 4> :
  _6 = (long unsigned int) i;
  _7 = std::vector<return_type>::size (path);
  retval.56 = _6 < _7;
  if (retval.56 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  stderr.57_8 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.57_8);
  return;

}



;; Function std::vector<return_type>::operator[] (_ZNSt6vectorI11return_typeSaIS0_EEixEm, funcdef_no=7597, decl_uid=173159, cgraph_uid=4229, symbol_order=5011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<return_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.246237;

  <bb 2> :
  _1 = this->D.173506._M_impl.D.172851._M_start;
  _2 = __n * 24;
  D.246237 = _1 + _2;

  <bb 3> :
<L0>:
  return D.246237;

}



;; Function std::vector<return_type>::size (_ZNKSt6vectorI11return_typeSaIS0_EE4sizeEv, funcdef_no=7596, decl_uid=173139, cgraph_uid=4228, symbol_order=5010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::size (const struct vector * const this)
{
  size_type D.246239;

  <bb 2> :
  _1 = this->D.173506._M_impl.D.172851._M_finish;
  _2 = this->D.173506._M_impl.D.172851._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.246239 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246239;

}



;; Function print_function_return2 (_Z22print_function_return2P9tree_node, funcdef_no=6249, decl_uid=187045, cgraph_uid=3231, symbol_order=3998)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return2 (union tree_node * function_tree)
{
  struct function_return_array * D.246247;
  struct function_return_array * D.246246;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.65;
  bool retval.58;

  <bb 2> :
  function_return_collect.59_1 = function_return_collect;
  D.246246 = hash_map<tree_node*, function_return_array>::get (function_return_collect.59_1, &function_tree);

  <bb 3> :
  _2 = D.246246;
  retval.58 = _2 == 0B;
  if (retval.58 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.60_3 = function_return_collect;
  D.246247 = hash_map<tree_node*, function_return_array>::get (function_return_collect.60_3, &function_tree);

  <bb 6> :
  _4 = D.246247;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.61_6 = function_tree;
  stderr.62_7 = stderr;
  fprintf (stderr.62_7, "=======print_function_return %d   %d========\n", function_tree.61_6, _5);

  <bb 9> :
  stderr.63_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.63_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.64_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.64_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.65 = _13 < _14;
  if (retval.65 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.66_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.66_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_return_array>::get (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7598, decl_uid=189534, cgraph_uid=4230, symbol_order=5012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_return_array * hash_map<tree_node*, function_return_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.246261;
  struct hash_entry & D.246260;
  unsigned int D.246259;
  struct hash_entry & e;
  struct function_return_array * iftmp.67;
  struct function_return_array * D.246253;

  <bb 2> :
  _1 = &this->m_table;
  D.246259 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.246259;
  D.246260 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.246260;
  D.246261 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  _3 = D.246261;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.67 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.67 = &e->m_value;

  <bb 5> :
  D.246253 = iftmp.67;

  <bb 6> :
<L3>:
  return D.246253;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE4hashERKS2_, funcdef_no=8420, decl_uid=189490, cgraph_uid=5052, symbol_order=5838)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (union tree_node * const & h)
{
  hashval_t D.246262;

  <bb 2> :
  D.246262 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.246262;

}



;; Function pointer_hash<tree_node>::hash (_ZN12pointer_hashI9tree_nodeE4hashERKPS0_, funcdef_no=9189, decl_uid=85298, cgraph_uid=5821, symbol_order=6607)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<tree_node>::hash (union tree_node * const & candidate)
{
  hashval_t D.246264;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.246264 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.246264;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8421, decl_uid=189677, cgraph_uid=5053, symbol_order=5839)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.246298;
  bool D.246297;
  bool D.246296;
  bool D.246295;
  bool D.246294;
  bool D.246293;
  struct value_type * D.246292;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.71;
  bool retval.70;
  struct value_type & D.246278;
  bool iftmp.69;
  bool retval.68;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.246293 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.246293;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.246294 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.246294;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.246295 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _11 = D.246295;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.69 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.69 = 0;

  <bb 8> :
  retval.68 = iftmp.69;
  if (retval.68 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.246278 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.246296 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.246296;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.246297 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.246297;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.246298 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _23 = D.246298;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.71 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.71 = 0;

  <bb 18> :
  retval.70 = iftmp.71;
  if (retval.70 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.246278 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.246278;

}



;; Function hash_table_mod1 (_Z15hash_table_mod1jj, funcdef_no=982, decl_uid=32188, cgraph_uid=280, symbol_order=291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod1 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.246299;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv;
  _4 = p->prime;
  D.246299 = mul_mod (hash, _4, _3, _2);

  <bb 3> :
<L0>:
  return D.246299;

}



;; Function mul_mod (_Z7mul_modjjji, funcdef_no=981, decl_uid=32178, cgraph_uid=279, symbol_order=290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t mul_mod (hashval_t x, hashval_t y, hashval_t inv, int shift)
{
  hashval_t r;
  hashval_t q;
  hashval_t t4;
  hashval_t t3;
  hashval_t t2;
  hashval_t t1;
  hashval_t D.246301;

  <bb 2> :
  _1 = (long unsigned int) x;
  _2 = (long unsigned int) inv;
  _3 = _1 * _2;
  _4 = _3 >> 32;
  t1 = (hashval_t) _4;
  t2 = x - t1;
  t3 = t2 >> 1;
  t4 = t1 + t3;
  q = t4 >> shift;
  _5 = q * y;
  r = x - _5;
  D.246301 = r;

  <bb 3> :
<L0>:
  return D.246301;

}



;; Function hash_table_mod2 (_Z15hash_table_mod2jj, funcdef_no=983, decl_uid=32193, cgraph_uid=281, symbol_order=292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod2 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.246303;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv_m2;
  _4 = p->prime;
  _5 = _4 + 4294967294;
  _6 = mul_mod (hash, _5, _3, _2);
  D.246303 = _6 + 1;

  <bb 3> :
<L0>:
  return D.246303;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8901, decl_uid=189773, cgraph_uid=5533, symbol_order=6319)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.246307;
  bool D.246305;

  <bb 2> :
  D.246307 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (v);
  D.246305 = D.246307;

  <bb 3> :
<L0>:
  return D.246305;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8604, decl_uid=189603, cgraph_uid=5236, symbol_order=6022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.246310;
  bool D.246308;

  <bb 2> :
  D.246310 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.246308 = D.246310;

  <bb 3> :
<L0>:
  return D.246308;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8902, decl_uid=189771, cgraph_uid=5534, symbol_order=6320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.246313;
  bool D.246311;

  <bb 2> :
  D.246313 = hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (v);
  D.246311 = D.246313;

  <bb 3> :
<L0>:
  return D.246311;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9730, decl_uid=189598, cgraph_uid=6362, symbol_order=7148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.246316;
  bool D.246314;

  <bb 2> :
  D.246316 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.246314 = D.246316;

  <bb 3> :
<L0>:
  return D.246314;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10290, decl_uid=237310, cgraph_uid=6922, symbol_order=7712)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246317;

  <bb 2> :
  _1 = entry->m_key;
  D.246317 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.246317;

}



;; Function pointer_hash<tree_node>::is_deleted (_ZN12pointer_hashI9tree_nodeE10is_deletedEPS0_, funcdef_no=10510, decl_uid=85308, cgraph_uid=7142, symbol_order=7932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_deleted (union tree_node * e)
{
  bool D.246319;

  <bb 2> :
  D.246319 = e == 1B;

  <bb 3> :
<L0>:
  return D.246319;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9191, decl_uid=189591, cgraph_uid=5823, symbol_order=6609)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.246323;
  bool D.246321;

  <bb 2> :
  _1 = &a->m_key;
  D.246323 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_1, b);
  D.246321 = D.246323;

  <bb 3> :
<L0>:
  return D.246321;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10equal_keysERKS2_S7_, funcdef_no=9908, decl_uid=189492, cgraph_uid=6540, symbol_order=7330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.246324;

  <bb 2> :
  D.246324 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.246324;

}



;; Function pointer_hash<tree_node>::equal (_ZN12pointer_hashI9tree_nodeE5equalERKPS0_S4_, funcdef_no=10437, decl_uid=85300, cgraph_uid=7069, symbol_order=7859)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::equal (union tree_node * const & existing, union tree_node * const & candidate)
{
  bool D.246326;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.246326 = _1 == _2;

  <bb 3> :
<L0>:
  return D.246326;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8422, decl_uid=210352, cgraph_uid=5054, symbol_order=5840)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246328;

  <bb 2> :
  _1 = entry->m_key;
  D.246328 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.246328;

}



;; Function pointer_hash<tree_node>::is_empty (_ZN12pointer_hashI9tree_nodeE8is_emptyEPS0_, funcdef_no=9192, decl_uid=85310, cgraph_uid=5824, symbol_order=6610)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_empty (union tree_node * e)
{
  bool D.246330;

  <bb 2> :
  D.246330 = e == 0B;

  <bb 3> :
<L0>:
  return D.246330;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2ERKS_, funcdef_no=6251, decl_uid=189872, cgraph_uid=3226, symbol_order=3993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, const struct function_return_array & D.189874)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.189874->return_type_num;
  this->return_type_num = _1;
  _2 = D.189874->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.189874->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2ERKS2_, funcdef_no=7600, decl_uid=173469, cgraph_uid=4232, symbol_order=5014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<return_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.246336;
  struct __normal_iterator D.246333;
  struct __normal_iterator D.246332;
  struct allocator D.210467;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173506;
  _2 = &__x->D.173506;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  D.210467 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<return_type>::size (__x);
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _4, &D.210467);

  <bb 3> :
  std::allocator<return_type>::~allocator (&D.210467);
  D.210467 = {CLOBBER};
  _5 = &this->D.173506;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.173506._M_impl.D.172851._M_start;
  D.246332 = std::vector<return_type>::end (__x);
  D.246333 = std::vector<return_type>::begin (__x);
  D.246336 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (D.246333, D.246332, _7, _6);

  <bb 4> :
  _8 = D.246336;
  this->D.173506._M_impl.D.172851._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<return_type>::~allocator (&D.210467);
  resx 2

  <bb 6> :
<L1>:
  D.210467 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.173506;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8424, decl_uid=172741, cgraph_uid=5056, symbol_order=5842)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.246338;

  <bb 2> :
  D.246338 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246338;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8423, decl_uid=172713, cgraph_uid=5055, symbol_order=5841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11return_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9193, decl_uid=172678, cgraph_uid=5825, symbol_order=6611)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<return_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2ERKS0_, funcdef_no=9910, decl_uid=172621, cgraph_uid=6542, symbol_order=7332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2ERKS2_, funcdef_no=10439, decl_uid=172550, cgraph_uid=7071, symbol_order=7861)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.172552)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EmRKS1_, funcdef_no=8426, decl_uid=172938, cgraph_uid=5058, symbol_order=5844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9195, decl_uid=172843, cgraph_uid=5827, symbol_order=6613)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this, __a);
  _1 = &this->D.172851;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8388, decl_uid=172798, cgraph_uid=5020, symbol_order=5806)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9197, decl_uid=172862, cgraph_uid=5829, symbol_order=6615)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.246345;

  <bb 2> :
  D.246345 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (this, __n);
  _1 = D.246345;
  this->_M_impl.D.172851._M_start = _1;
  _2 = this->_M_impl.D.172851._M_start;
  this->_M_impl.D.172851._M_finish = _2;
  _3 = this->_M_impl.D.172851._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.172851._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE11_M_allocateEm, funcdef_no=9347, decl_uid=172855, cgraph_uid=5979, symbol_order=6765)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.246352;
  struct return_type * iftmp.72;
  struct return_type * D.246346;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.246352 = std::allocator_traits<std::allocator<return_type> >::allocate (_1, __n);
  iftmp.72 = D.246352;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.72 = 0B;

  <bb 5> :
  D.246346 = iftmp.72;

  <bb 6> :
<L3>:
  return D.246346;

}



;; Function std::allocator_traits<std::allocator<return_type> >::allocate (_ZNSt16allocator_traitsISaI11return_typeEE8allocateERS1_m, funcdef_no=10018, decl_uid=172656, cgraph_uid=6650, symbol_order=7440)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type * std::allocator_traits<std::allocator<return_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct return_type * D.246355;
  struct return_type * D.246353;

  <bb 2> :
  D.246355 = __gnu_cxx::new_allocator<return_type>::allocate (__a, __n, 0B);
  D.246353 = D.246355;

  <bb 3> :
<L0>:
  return D.246353;

}



;; Function __gnu_cxx::new_allocator<return_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE8allocateEmPKv, funcdef_no=10529, decl_uid=172510, cgraph_uid=7162, symbol_order=7952)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct return_type * __gnu_cxx::new_allocator<return_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243259)
{
  struct return_type * D.246366;
  struct return_type * D.246365;
  align_val_t __al;
  struct return_type * D.246363;
  bool retval.73;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.73 = _4 != 0;
  if (retval.73 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.246366 = operator new (_6);
  D.246363 = D.246366;

  <bb 7> :
<L6>:
  return D.246363;

}



;; Function __gnu_cxx::new_allocator<return_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE11_M_max_sizeEv, funcdef_no=10530, decl_uid=172537, cgraph_uid=7161, symbol_order=7951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.246367;

  <bb 2> :
  D.246367 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.246367;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6217, decl_uid=172898, cgraph_uid=3191, symbol_order=3948)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<return_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<return_type>::~allocator (_ZNSaI11return_typeED2Ev, funcdef_no=7573, decl_uid=172631, cgraph_uid=4205, symbol_order=4987)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeED2Ev, funcdef_no=8391, decl_uid=172560, cgraph_uid=5023, symbol_order=5809)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8430, decl_uid=172739, cgraph_uid=5062, symbol_order=5848)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.246369;

  <bb 2> :
  D.246369 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246369;

}



;; Function std::vector<return_type>::end (_ZNKSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8429, decl_uid=173121, cgraph_uid=5061, symbol_order=5847)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::end (const struct vector * const this)
{
  struct const_iterator D.220833;
  struct const_iterator D.246371;

  <bb 2> :
  _1 = &this->D.173506._M_impl.D.172851._M_finish;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.220833, _1);
  D.246371 = D.220833;
  D.220833 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246371;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9199, decl_uid=210436, cgraph_uid=5831, symbol_order=6617)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, const struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNKSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8428, decl_uid=173117, cgraph_uid=5060, symbol_order=5846)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::begin (const struct vector * const this)
{
  struct const_iterator D.220831;
  struct const_iterator D.246374;

  <bb 2> :
  _1 = &this->D.173506._M_impl.D.172851._M_start;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.220831, _1);
  D.246374 = D.220831;
  D.220831 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246374;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8431, decl_uid=210456, cgraph_uid=5063, symbol_order=5849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result, struct allocator & D.220838)
{
  struct return_type * D.246379;
  struct return_type * D.246377;

  <bb 2> :
  D.246379 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.246377 = D.246379;

  <bb 3> :
<L0>:
  return D.246377;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9201, decl_uid=220840, cgraph_uid=5834, symbol_order=6620)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * D.246382;
  const bool __assignable;
  struct return_type * D.246380;

  <bb 2> :
  __assignable = 1;
  D.246382 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.246380 = D.246382;

  <bb 3> :
<L0>:
  return D.246380;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9912, decl_uid=231998, cgraph_uid=6544, symbol_order=7334)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.246384;
  bool retval.74;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (&__first);
  _2 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, const return_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.74 = __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (&__first, &__last);
  if (retval.74 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.246384 = __cur;

  <bb 6> :
<L3>:
  return D.246384;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10444, decl_uid=210394, cgraph_uid=7076, symbol_order=7866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct return_type & D.246386;

  <bb 2> :
  D.246386 = this->_M_current;

  <bb 3> :
<L0>:
  return D.246386;

}



;; Function std::__addressof<return_type> (_ZSt11__addressofI11return_typeEPT_RS1_, funcdef_no=10443, decl_uid=223202, cgraph_uid=7075, symbol_order=7865)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__addressof<return_type> (struct return_type & __r)
{
  struct return_type * D.246388;

  <bb 2> :
  D.246388 = __r;

  <bb 3> :
<L0>:
  return D.246388;

}



;; Function std::_Construct<return_type, const return_type&> (_ZSt10_ConstructI11return_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10445, decl_uid=239395, cgraph_uid=7077, symbol_order=7867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, const return_type&> (struct return_type * __p, const struct return_type & __args#0)
{
  void * D.242864;
  void * D.242863;
  const struct return_type * D.242865;

  <bb 2> :
  D.242865 = std::forward<const return_type&> (__args#0);
  D.242863 = __p;
  D.242864 = operator new (24, D.242863);
  MEM[(struct return_type *)D.242864] = *D.242865;
  return;

}



;; Function std::forward<const return_type&> (_ZSt7forwardIRK11return_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9372, decl_uid=222816, cgraph_uid=6004, symbol_order=6790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct return_type & std::forward<const return_type&> (const struct type & __t)
{
  const struct return_type & D.246390;

  <bb 2> :
  D.246390 = __t;

  <bb 3> :
<L0>:
  return D.246390;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10442, decl_uid=210398, cgraph_uid=7074, symbol_order=7864)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.246392;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.246392 = this;

  <bb 3> :
<L0>:
  return D.246392;

}



;; Function __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (_ZN9__gnu_cxxneIPK11return_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10441, decl_uid=239388, cgraph_uid=7073, symbol_order=7863)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.246394;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  D.246394 = _2 != _4;

  <bb 3> :
<L0>:
  return D.246394;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10531, decl_uid=210423, cgraph_uid=7163, symbol_order=7953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * const & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  const struct return_type * const & D.246396;

  <bb 2> :
  D.246396 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246396;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EED2Ev, funcdef_no=7576, decl_uid=172961, cgraph_uid=4208, symbol_order=4990)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.172851._M_end_of_storage;
  _2 = this->_M_impl.D.172851._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.172851._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8393, decl_uid=172858, cgraph_uid=5025, symbol_order=5811)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (struct _Vector_base * const this, struct return_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<return_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::deallocate (_ZNSt16allocator_traitsISaI11return_typeEE10deallocateERS1_PS0_m, funcdef_no=9168, decl_uid=172663, cgraph_uid=5800, symbol_order=6586)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::deallocate (struct allocator_type & __a, struct return_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE10deallocateEPS1_m, funcdef_no=9879, decl_uid=172514, cgraph_uid=6511, symbol_order=7301)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::deallocate (struct new_allocator * const this, struct return_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<return_type>::~vector (_ZNSt6vectorI11return_typeSaIS0_EED2Ev, funcdef_no=7603, decl_uid=173503, cgraph_uid=4235, symbol_order=5017)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173506;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.173506._M_impl.D.172851._M_finish;
  _4 = this->D.173506._M_impl.D.172851._M_start;
  std::_Destroy<return_type*, return_type> (_4, _3, _2);
  _5 = &this->D.173506;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<return_type*, return_type> (_ZSt8_DestroyIP11return_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8432, decl_uid=210473, cgraph_uid=5064, symbol_order=5850)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct allocator & D.220859)
{
  <bb 2> :
  std::_Destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<return_type*> (_ZSt8_DestroyIP11return_typeEvT_S2_, funcdef_no=9203, decl_uid=220861, cgraph_uid=5835, symbol_order=6621)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*> (struct return_type * __first, struct return_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<return_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11return_typeEEvT_S4_, funcdef_no=9913, decl_uid=232029, cgraph_uid=6545, symbol_order=7335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<return_type*> (struct return_type * D.239402, struct return_type * D.239403)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_return_array::~function_return_array (_ZN21function_return_arrayD2Ev, funcdef_no=6254, decl_uid=189894, cgraph_uid=3229, symbol_order=3996)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::~function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  _1 = &this->return_type_array;
  std::vector<return_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function print_function_return (_Z21print_function_returnP9tree_node, funcdef_no=6256, decl_uid=187043, cgraph_uid=3232, symbol_order=3999)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return (union tree_node * function_tree)
{
  struct function_return_array * D.246410;
  struct function_return_array * D.246409;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.82;
  bool retval.75;

  <bb 2> :
  function_return_collect.76_1 = function_return_collect;
  D.246409 = hash_map<tree_node*, function_return_array>::get (function_return_collect.76_1, &function_tree);

  <bb 3> :
  _2 = D.246409;
  retval.75 = _2 == 0B;
  if (retval.75 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.77_3 = function_return_collect;
  D.246410 = hash_map<tree_node*, function_return_array>::get (function_return_collect.77_3, &function_tree);

  <bb 6> :
  _4 = D.246410;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.78_6 = function_tree;
  stderr.79_7 = stderr;
  fprintf (stderr.79_7, "=======print_function_return %d   %d========\n", function_tree.78_6, _5);

  <bb 9> :
  stderr.80_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.80_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.81_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.81_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.82 = _13 < _14;
  if (retval.82 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.83_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.83_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect2 (_Z21printfunctionCollect2P3ptbP12gimple_array, funcdef_no=6257, decl_uid=189979, cgraph_uid=3233, symbol_order=4000)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 11 7 10 9 8 6 5 4
;; 2 succs { 15 3 }
;; 3 succs { 13 }
;; 4 succs { 15 5 }
;; 5 succs { 15 6 }
;; 6 succs { 7 8 }
;; 7 succs { 11 }
;; 8 succs { 15 9 }
;; 9 succs { 15 10 }
;; 10 succs { 15 11 }
;; 11 succs { 15 12 }
;; 12 succs { 13 }
;; 13 succs { 4 14 }
;; 14 succs { 1 }
;; 15 succs { }
void printfunctionCollect2 (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.246421;
  struct function * D.246420;
  struct function * D.246419;
  struct cgraph_node * D.246418;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.84_1 = symtab;
  D.246418 = symbol_table::first_defined_function (symtab.84_1);

  <bb 3> :
  node = D.246418;
  goto <bb 13>; [INV]

  <bb 4> :
  D.246419 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.246419;
  push_cfun (_2);

  <bb 6> :
  cfun.85_3 = cfun;
  if (cfun.85_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  D.246420 = cgraph_node::get_fun (node);

  <bb 9> :
  _4 = D.246420;
  _5 = _4->decl;
  print_function_return2 (_5);

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  symtab.86_6 = symtab;
  D.246421 = symbol_table::next_defined_function (symtab.86_6, node);

  <bb 12> :
  node = D.246421;

  <bb 13> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  start = {CLOBBER};
  return;

  <bb 15> :
<L6>:
  start = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect (_Z20printfunctionCollectP3ptbP12gimple_array, funcdef_no=6258, decl_uid=189994, cgraph_uid=3234, symbol_order=4001)

Removing basic block 13
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 16 8 15 14 13 10 12 11 9 6 5 4 7
;; 2 succs { 20 3 }
;; 3 succs { 18 }
;; 4 succs { 20 5 }
;; 5 succs { 20 6 }
;; 6 succs { 7 9 }
;; 7 succs { 20 8 }
;; 8 succs { 16 }
;; 9 succs { 20 10 }
;; 10 succs { 11 13 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 20 14 }
;; 14 succs { 20 15 }
;; 15 succs { 20 16 }
;; 16 succs { 20 17 }
;; 17 succs { 18 }
;; 18 succs { 4 19 }
;; 19 succs { 1 }
;; 20 succs { }
void printfunctionCollect (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.246433;
  struct function * D.246432;
  const char * D.246431;
  const char * D.246430;
  struct function * D.246429;
  struct cgraph_node * D.246428;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.87_1 = symtab;
  D.246428 = symbol_table::first_defined_function (symtab.87_1);

  <bb 3> :
  node = D.246428;
  goto <bb 18>; [INV]

  <bb 4> :
  D.246429 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.246429;
  push_cfun (_2);

  <bb 6> :
  cfun.88_3 = cfun;
  if (cfun.88_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  pop_cfun ();

  <bb 8> :
  // predicted unlikely by continue predictor.
  goto <bb 16>; [INV]

  <bb 9> :
  cfun.89_4 = cfun;
  _5 = cfun.89_4->decl;
  D.246430 = get_name (_5);

  <bb 10> :
  name = D.246430;
  if (name != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  cfun.90_6 = cfun;
  _7 = cfun.90_6->decl;
  D.246431 = get_name (_7);

  <bb 12> :
  _8 = D.246431;
  stderr.91_9 = stderr;
  fprintf (stderr.91_9, "=======Mapping node_fun:%s=========\n", _8);

  <bb 13> :
  D.246432 = cgraph_node::get_fun (node);

  <bb 14> :
  _10 = D.246432;
  _11 = _10->decl;
  print_function_return (_11);

  <bb 15> :
  pop_cfun ();

  <bb 16> :
  symtab.92_12 = symtab;
  D.246433 = symbol_table::next_defined_function (symtab.92_12, node);

  <bb 17> :
  node = D.246433;

  <bb 18> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  start = {CLOBBER};
  return;

  <bb 20> :
<L9>:
  start = {CLOBBER};
  resx 1

}



;; Function printfPointerConstraint (_Z23printfPointerConstraintP3ptbP12gimple_array, funcdef_no=6259, decl_uid=187041, cgraph_uid=3235, symbol_order=4002)

Removing basic block 22
Removing basic block 29
Removing basic block 30
Removing basic block 33
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;;
;; Loop 1
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33 31 32 30 7 29 27 28 15 14 13 12 11 10 9 8 19 26 24 25 23 21 22 20 17 18 16 6
;;
;; Loop 2
;;  header 27, latch 26
;;  depth 2, outer 1
;;  nodes: 27 26 24 25 23 21 22 20
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 34 }
;; 6 succs { 36 7 }
;; 7 succs { 8 30 }
;; 8 succs { 36 9 }
;; 9 succs { 36 10 }
;; 10 succs { 36 11 }
;; 11 succs { 36 12 }
;; 12 succs { 36 13 }
;; 13 succs { 14 28 }
;; 14 succs { 36 15 }
;; 15 succs { 16 29 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 27 }
;; 20 succs { 21 22 }
;; 21 succs { 36 23 }
;; 22 succs { 36 23 }
;; 23 succs { 24 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 20 29 }
;; 28 succs { 36 29 }
;; 29 succs { 36 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 }
;; 34 succs { 6 35 }
;; 35 succs { 1 }
;; 36 succs { }
void printfPointerConstraint (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.246463;
  location_t loc;
  location_t loc;
  location_t loc;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.103;
  struct gimple * iftmp.100;
  struct gimple * iftmp.99;
  union tree_node * iftmp.93;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.93 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.93 = 0B;

  <bb 5> :
  t = iftmp.93;
  goto <bb 34>; [INV]

  <bb 6> :
  stderr.94_1 = stderr;
  __builtin_fwrite ("------------------- stmt -----------------------\n", 1, 49, stderr.94_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 8> :
  _3 = table_temp->last_stmt;
  loc = gimple_location (_3);
  stderr.95_4 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.95_4);

  <bb 9> :
  warning_at (loc, 0, "loc");

  <bb 10> :
  _5 = table_temp->target;
  debug_tree (_5);

  <bb 11> :
  stderr.96_6 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.96_6);

  <bb 12> :
  treeGimpleArray.97_7 = treeGimpleArray;
  _8 = &table_temp->target;
  D.246463 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.97_7, _8);

  <bb 13> :
  user_tmp = D.246463;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 14> :
  _9 = user_tmp->size;
  stderr.98_10 = stderr;
  fprintf (stderr.98_10, " \n Pointer to set  is size %d :[ \n", _9);

  <bb 15> :
  _11 = user_tmp->size;
  if (_11 > 0)
    goto <bb 16>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 16> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.99 = user_tmp->stmt;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.99 = 0B;

  <bb 19> :
  u_stmt = iftmp.99;
  goto <bb 27>; [INV]

  <bb 20> :
  _12 = user_tmp->ret_stmt;
  if (_12 != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _13 = user_tmp->ret_stmt;
  loc = gimple_location (_13);
  warning_at (loc, 0, "loc");
  goto <bb 23>; [INV]

  <bb 22> :
  loc = gimple_location (u_stmt);
  warning_at (loc, 0, "loc");

  <bb 23> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  iftmp.100 = user_tmp->stmt;
  goto <bb 26>; [INV]

  <bb 25> :
  iftmp.100 = 0B;

  <bb 26> :
  u_stmt = iftmp.100;

  <bb 27> :
  if (user_tmp != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  stderr.101_14 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.101_14);

  <bb 29> :
  stderr.102_15 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.102_15);

  <bb 30> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.103 = table_temp->target;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.103 = 0B;

  <bb 33> :
  t = iftmp.103;

  <bb 34> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 35> :
  start = {CLOBBER};
  return;

  <bb 36> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, gimple_array>::get (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7605, decl_uid=190066, cgraph_uid=4237, symbol_order=5019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple_array * hash_map<tree_node*, gimple_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.246473;
  struct hash_entry & D.246472;
  unsigned int D.246471;
  struct hash_entry & e;
  struct gimple_array * iftmp.104;
  struct gimple_array * D.246465;

  <bb 2> :
  _1 = &this->m_table;
  D.246471 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.246471;
  D.246472 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.246472;
  D.246473 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  _3 = D.246473;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.104 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.104 = &e->m_value;

  <bb 5> :
  D.246465 = iftmp.104;

  <bb 6> :
<L3>:
  return D.246465;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE4hashERKS2_, funcdef_no=8433, decl_uid=190022, cgraph_uid=5065, symbol_order=5851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (union tree_node * const & h)
{
  hashval_t D.246474;

  <bb 2> :
  D.246474 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.246474;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8434, decl_uid=190206, cgraph_uid=5066, symbol_order=5852)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.246508;
  bool D.246507;
  bool D.246506;
  bool D.246505;
  bool D.246504;
  bool D.246503;
  struct value_type * D.246502;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.108;
  bool retval.107;
  struct value_type & D.246488;
  bool iftmp.106;
  bool retval.105;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 56;
  entry = _5 + _7;
  D.246503 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.246503;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.246504 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.246504;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.246505 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _11 = D.246505;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.106 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.106 = 0;

  <bb 8> :
  retval.105 = iftmp.106;
  if (retval.105 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.246488 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  entry = _17 + _19;
  D.246506 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.246506;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.246507 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.246507;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.246508 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _23 = D.246508;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.108 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.108 = 0;

  <bb 18> :
  retval.107 = iftmp.108;
  if (retval.107 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.246488 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.246488;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8889, decl_uid=190302, cgraph_uid=5521, symbol_order=6307)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.246511;
  bool D.246509;

  <bb 2> :
  D.246511 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (v);
  D.246509 = D.246511;

  <bb 3> :
<L0>:
  return D.246509;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8793, decl_uid=190135, cgraph_uid=5425, symbol_order=6211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.246514;
  bool D.246512;

  <bb 2> :
  D.246514 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.246512 = D.246514;

  <bb 3> :
<L0>:
  return D.246512;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8890, decl_uid=190300, cgraph_uid=5522, symbol_order=6308)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.246517;
  bool D.246515;

  <bb 2> :
  D.246517 = hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (v);
  D.246515 = D.246517;

  <bb 3> :
<L0>:
  return D.246515;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9724, decl_uid=190130, cgraph_uid=6356, symbol_order=7142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.246520;
  bool D.246518;

  <bb 2> :
  D.246520 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.246518 = D.246520;

  <bb 3> :
<L0>:
  return D.246518;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10285, decl_uid=237292, cgraph_uid=6917, symbol_order=7707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246521;

  <bb 2> :
  _1 = entry->m_key;
  D.246521 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.246521;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9205, decl_uid=190123, cgraph_uid=5837, symbol_order=6623)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.246525;
  bool D.246523;

  <bb 2> :
  _1 = &a->m_key;
  D.246525 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_1, b);
  D.246523 = D.246525;

  <bb 3> :
<L0>:
  return D.246523;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10equal_keysERKS2_S7_, funcdef_no=9916, decl_uid=190024, cgraph_uid=6548, symbol_order=7338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.246526;

  <bb 2> :
  D.246526 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.246526;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8435, decl_uid=210489, cgraph_uid=5067, symbol_order=5853)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246528;

  <bb 2> :
  _1 = entry->m_key;
  D.246528 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.246528;

}



;; Function gimple_location (_ZL15gimple_locationPK6gimple, funcdef_no=2003, decl_uid=92283, cgraph_uid=1140, symbol_order=1300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
location_t gimple_location (const struct gimple * g)
{
  location_t D.246530;

  <bb 2> :
  D.246530 = g->location;

  <bb 3> :
<L0>:
  return D.246530;

}



;; Function printfPointerConstraint2 (_Z24printfPointerConstraint2P3ptbP12gimple_array, funcdef_no=6260, decl_uid=190400, cgraph_uid=3236, symbol_order=4003)

Removing basic block 19
Removing basic block 26
Removing basic block 28
Removing basic block 31
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 29 30 28 7 27 25 12 24 16 23 21 22 20 18 19 17 14 15 13 11 10 9 8 26 6
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 21 22 20 18 19 17
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 32 }
;; 6 succs { 34 7 }
;; 7 succs { 8 28 }
;; 8 succs { 34 9 }
;; 9 succs { 34 10 }
;; 10 succs { 11 26 }
;; 11 succs { 34 12 }
;; 12 succs { 13 25 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 24 }
;; 17 succs { 18 19 }
;; 18 succs { 34 20 }
;; 19 succs { 34 20 }
;; 20 succs { 21 22 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 17 25 }
;; 25 succs { 34 28 }
;; 26 succs { 34 27 }
;; 27 succs { 34 28 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 6 33 }
;; 33 succs { 1 }
;; 34 succs { }
void printfPointerConstraint2 (struct ptb * ftable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.246560;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.118;
  struct gimple * iftmp.114;
  struct gimple * iftmp.113;
  union tree_node * iftmp.109;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.109 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.109 = 0B;

  <bb 5> :
  t = iftmp.109;
  goto <bb 32>; [INV]

  <bb 6> :
  stderr.110_1 = stderr;
  __builtin_fwrite ("\n ------------------------------------------\n", 1, 45, stderr.110_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 8> :
  _3 = table_temp->target;
  debug_tree (_3);

  <bb 9> :
  treeGimpleArray.111_4 = treeGimpleArray;
  _5 = &table_temp->target;
  D.246560 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.111_4, _5);

  <bb 10> :
  user_tmp = D.246560;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 11> :
  _6 = user_tmp->size;
  stderr.112_7 = stderr;
  fprintf (stderr.112_7, " \n Pointer to set  is size %d :[ \n", _6);

  <bb 12> :
  _8 = user_tmp->size;
  if (_8 > 0)
    goto <bb 13>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 13> :
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.113 = user_tmp->stmt;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.113 = 0B;

  <bb 16> :
  u_stmt = iftmp.113;
  goto <bb 24>; [INV]

  <bb 17> :
  _9 = user_tmp->ret_stmt;
  if (_9 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _10 = user_tmp->ret_stmt;
  debug (_10);
  goto <bb 20>; [INV]

  <bb 19> :
  debug (u_stmt);

  <bb 20> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.114 = user_tmp->stmt;
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.114 = 0B;

  <bb 23> :
  u_stmt = iftmp.114;

  <bb 24> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  stderr.115_11 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.115_11);
  goto <bb 28>; [INV]

  <bb 26> :
  stderr.116_12 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.116_12);

  <bb 27> :
  stderr.117_13 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.117_13);

  <bb 28> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  iftmp.118 = table_temp->target;
  goto <bb 31>; [INV]

  <bb 30> :
  iftmp.118 = 0B;

  <bb 31> :
  t = iftmp.118;

  <bb 32> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  start = {CLOBBER};
  return;

  <bb 34> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function set_ptb (_Z7set_ptbP15basic_block_defP3ptbP9tree_nodejiP6gimpleP11cgraph_node, funcdef_no=6261, decl_uid=190422, cgraph_uid=3237, symbol_order=4004)

Removing basic block 4
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 15 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 6 10 }
;; 10 succs { 11 15 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
void set_ptb (struct basic_block_def * b, struct ptb * table, union tree_node * t, location_t l, int s, struct gimple * stmt, struct cgraph_node * node)
{
  struct function * D.246583;
  bool D.246582;
  void * D.246581;
  struct function * D.246580;
  bool D.246579;
  bool same;
  bool retval.120;
  void * D.190435;
  bool retval.119;

  <bb 2> :
  _1 = table->target;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.246579 = bb_in_branch_p (stmt);
  _2 = D.246579;
  table->inbranch = _2;
  D.246580 = cgraph_node::get_fun (node);
  _3 = D.246580;
  table->fun = _3;
  _4 = gimple_code (stmt);
  retval.119 = _4 == 18;

  <bb 4> :
  table->removed = 0;
  _5 = table->size;
  _6 = _5 + 1;
  table->size = _6;
  goto <bb 15>; [INV]

  <bb 5> :
  same = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  _7 = table->target;
  if (t == _7)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  same = 1;

  <bb 8> :
  table = table->next;

  <bb 9> :
  _8 = table->next;
  if (_8 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _9 = ~same;
  if (_9 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  D.246581 = operator new (120);
  D.190435 = D.246581;
  MEM[(struct ptb *)D.190435] = {};
  ptb::ptb (D.190435);
  table->next = D.190435;
  table = table->next;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.246582 = bb_in_branch_p (stmt);
  _10 = D.246582;
  table->inbranch = _10;
  D.246583 = cgraph_node::get_fun (node);
  _11 = D.246583;
  table->fun = _11;
  _12 = gimple_code (stmt);
  retval.120 = _12 == 18;
  if (retval.120 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  table->is_phi_stmt = 1;
  goto <bb 14>; [INV]

  <bb 13> :
  table->is_phi_stmt = 0;

  <bb 14> :
  table->removed = 0;
  _13 = table->size;
  _14 = _13 + 1;
  table->size = _14;

  <bb 15> :
  return;

}



;; Function ptb::ptb (_ZN3ptbC2Ev, funcdef_no=6171, decl_uid=169193, cgraph_uid=3147, symbol_order=3864)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ptb::ptb (struct ptb * const this)
{
  <bb 2> :
  this->pthread_type = 0;
  this->size = 0;
  return;

}



;; Function gimple_code (_ZL11gimple_codePK6gimple, funcdef_no=1996, decl_uid=92240, cgraph_uid=1133, symbol_order=1293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
gimple_code gimple_code (const struct gimple * g)
{
  gimple_code D.246584;

  <bb 2> :
  _1 = g->code;
  D.246584 = (gimple_code) _1;

  <bb 3> :
<L0>:
  return D.246584;

}



;; Function set_gimple_array (_Z16set_gimple_arrayP12gimple_arrayP6gimpleP9tree_nodeS4_S2_, funcdef_no=6262, decl_uid=190445, cgraph_uid=3238, symbol_order=4005)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
void set_gimple_array (struct gimple_array * table, struct gimple * used_stmt, union tree_node * fucntion, union tree_node * target, struct gimple * ret_stmt)
{
  void * D.246595;
  int size_tmp;
  bool same;
  void * D.190449;

  <bb 2> :
  _1 = table->stmt;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->aptr = fucntion;
  table->target = target;
  table->size = 1;
  table->next = 0B;
  goto <bb 11>; [INV]

  <bb 4> :
  same = 0;
  size_tmp = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  _2 = table->stmt;
  if (used_stmt == _2)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  same = 1;

  <bb 7> :
  size_tmp = size_tmp + 1;
  table = table->next;

  <bb 8> :
  _3 = table->next;
  if (_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _4 = ~same;
  if (_4 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.246595 = operator new (48);
  D.190449 = D.246595;
  MEM[(struct gimple_array *)D.190449].stmt = 0B;
  MEM[(struct gimple_array *)D.190449].ret_stmt = 0B;
  MEM[(struct gimple_array *)D.190449].aptr = 0B;
  MEM[(struct gimple_array *)D.190449].target = 0B;
  MEM[(struct gimple_array *)D.190449].next = 0B;
  MEM[(struct gimple_array *)D.190449].size = 0;
  gimple_array::gimple_array (D.190449);
  table->next = D.190449;
  table = table->next;
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->target = target;
  table->size = size_tmp;
  table->aptr = fucntion;
  table->next = 0B;

  <bb 11> :
  return;

}



;; Function ret_function_varstmt (_Z20ret_function_varstmtP9tree_node, funcdef_no=6263, decl_uid=187011, cgraph_uid=3265, symbol_order=4032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 13 3 }
;; 3 succs { 4 9 }
;; 4 succs { 12 5 }
;; 5 succs { 12 6 }
;; 6 succs { 12 7 }
;; 7 succs { 11 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { }
struct function_assign_array ret_function_varstmt (union tree_node * function_tree)
{
  struct function_assign_array * D.246603;
  struct function_assign_array * D.246602;
  struct vector assign_type_array;
  struct function_assign_array assign_array [value-expr: *<retval>];
  bool retval.121;

  <bb 2> :
  function_assign_array::function_assign_array (<retval>);
  function_assign_collect.122_1 = function_assign_collect;
  D.246602 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.122_1, &function_tree);

  <bb 3> :
  _2 = D.246602;
  retval.121 = _2 != 0B;
  if (retval.121 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  function_assign_collect.123_3 = function_assign_collect;
  D.246603 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.123_3, &function_tree);

  <bb 5> :
  _4 = D.246603;
  function_assign_array::operator= (<retval>, _4);

  <bb 6> :
  _5 = &<retval>->assign_type_array;
  std::vector<assign_type>::vector (&assign_type_array, _5);

  <bb 7> :
  <retval>->pass = 1;
  function_assign_collect.124_6 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.124_6, &function_tree, <retval>);

  <bb 8> :
  std::vector<assign_type>::~vector (&assign_type_array);
  assign_type_array = {CLOBBER};

  <bb 9> :

  <bb 10> :
<L3>:
  return <retval>;

  <bb 11> :
<L4>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 12> :
<L5>:
  assign_type_array = {CLOBBER};
  resx 2

  <bb 13> :
<L6>:
  function_assign_array::~function_assign_array (<retval>);
  resx 1

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2Ev, funcdef_no=6275, decl_uid=190462, cgraph_uid=3250, symbol_order=4017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  this->pass = 0;
  _1 = &this->assign_type_array;
  std::vector<assign_type>::vector (_1);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2Ev, funcdef_no=6273, decl_uid=175595, cgraph_uid=3247, symbol_order=4014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175603;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2Ev, funcdef_no=6271, decl_uid=175053, cgraph_uid=3244, symbol_order=4011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7607, decl_uid=174945, cgraph_uid=4239, symbol_order=5021)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this);
  _1 = &this->D.174948;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2Ev, funcdef_no=8437, decl_uid=174723, cgraph_uid=5069, symbol_order=5855)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2Ev, funcdef_no=9207, decl_uid=174652, cgraph_uid=5839, symbol_order=6625)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8440, decl_uid=174895, cgraph_uid=5072, symbol_order=5858)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::get (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7618, decl_uid=190695, cgraph_uid=4250, symbol_order=5032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_assign_array * hash_map<tree_node*, function_assign_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.246615;
  struct hash_entry & D.246614;
  unsigned int D.246613;
  struct hash_entry & e;
  struct function_assign_array * iftmp.125;
  struct function_assign_array * D.246607;

  <bb 2> :
  _1 = &this->m_table;
  D.246613 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.246613;
  D.246614 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.246614;
  D.246615 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  _3 = D.246615;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.125 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.125 = &e->m_value;

  <bb 5> :
  D.246607 = iftmp.125;

  <bb 6> :
<L3>:
  return D.246607;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE4hashERKS2_, funcdef_no=8448, decl_uid=190651, cgraph_uid=5080, symbol_order=5866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (union tree_node * const & h)
{
  hashval_t D.246616;

  <bb 2> :
  D.246616 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.246616;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8449, decl_uid=190838, cgraph_uid=5081, symbol_order=5867)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.246650;
  bool D.246649;
  bool D.246648;
  bool D.246647;
  bool D.246646;
  bool D.246645;
  struct value_type * D.246644;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.129;
  bool retval.128;
  struct value_type & D.246630;
  bool iftmp.127;
  bool retval.126;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.246645 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.246645;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.246646 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.246646;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.246647 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _11 = D.246647;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.127 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.127 = 0;

  <bb 8> :
  retval.126 = iftmp.127;
  if (retval.126 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.246630 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.246648 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.246648;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.246649 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.246649;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.246650 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _23 = D.246650;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.129 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.129 = 0;

  <bb 18> :
  retval.128 = iftmp.129;
  if (retval.128 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.246630 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.246630;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8905, decl_uid=190934, cgraph_uid=5537, symbol_order=6323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.246653;
  bool D.246651;

  <bb 2> :
  D.246653 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (v);
  D.246651 = D.246653;

  <bb 3> :
<L0>:
  return D.246651;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8471, decl_uid=190764, cgraph_uid=5103, symbol_order=5889)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.246656;
  bool D.246654;

  <bb 2> :
  D.246656 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.246654 = D.246656;

  <bb 3> :
<L0>:
  return D.246654;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8906, decl_uid=190932, cgraph_uid=5538, symbol_order=6324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.246659;
  bool D.246657;

  <bb 2> :
  D.246659 = hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (v);
  D.246657 = D.246659;

  <bb 3> :
<L0>:
  return D.246657;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9732, decl_uid=190759, cgraph_uid=6364, symbol_order=7150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.246662;
  bool D.246660;

  <bb 2> :
  D.246662 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.246660 = D.246662;

  <bb 3> :
<L0>:
  return D.246660;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10291, decl_uid=237316, cgraph_uid=6923, symbol_order=7713)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246663;

  <bb 2> :
  _1 = entry->m_key;
  D.246663 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.246663;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9212, decl_uid=190752, cgraph_uid=5844, symbol_order=6630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.246667;
  bool D.246665;

  <bb 2> :
  _1 = &a->m_key;
  D.246667 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_1, b);
  D.246665 = D.246667;

  <bb 3> :
<L0>:
  return D.246665;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10equal_keysERKS2_S7_, funcdef_no=9921, decl_uid=190653, cgraph_uid=6553, symbol_order=7343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.246668;

  <bb 2> :
  D.246668 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.246668;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8450, decl_uid=210526, cgraph_uid=5082, symbol_order=5868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246670;

  <bb 2> :
  _1 = entry->m_key;
  D.246670 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.246670;

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSERKS_, funcdef_no=6280, decl_uid=191020, cgraph_uid=3255, symbol_order=4022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, const struct function_assign_array & D.191021)
{
  struct function_assign_array & D.246672;

  <bb 2> :
  _1 = D.191021->pass;
  this->pass = _1;
  _2 = &D.191021->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.246672 = this;

  <bb 3> :
<L0>:
  return D.246672;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSERKS2_, funcdef_no=7619, decl_uid=175181, cgraph_uid=4252, symbol_order=5034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.246707;
  struct assign_type * __tmp;
  const size_type __xlen;
  struct vector & D.246705;
  struct __normal_iterator D.246702;
  struct __normal_iterator D.246701;
  struct __normal_iterator D.246700;
  struct __normal_iterator D.246699;
  struct __normal_iterator D.246698;
  bool retval.134;
  struct __normal_iterator D.246693;
  struct __normal_iterator D.246692;
  bool retval.133;
  bool iftmp.132;
  bool retval.131;
  bool retval.130;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.130 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ();
  if (retval.130 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.175603;
  _4 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.175603;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.132 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.132 = 0;

  <bb 8> :
  retval.131 = iftmp.132;
  if (retval.131 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<assign_type>::clear (this);
  _8 = &this->D.175603;
  _9 = this->D.175603._M_impl.D.174948._M_end_of_storage;
  _10 = this->D.175603._M_impl.D.174948._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.175603._M_impl.D.174948._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_8, _14, _13);
  this->D.175603._M_impl.D.174948._M_start = 0B;
  this->D.175603._M_impl.D.174948._M_finish = 0B;
  this->D.175603._M_impl.D.174948._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.175603;
  _16 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.175603;
  _18 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<assign_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<assign_type>::size (__x);
  _19 = std::vector<assign_type>::capacity (this);
  retval.133 = __xlen > _19;
  if (retval.133 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.246692 = std::vector<assign_type>::end (__x);
  D.246693 = std::vector<assign_type>::begin (__x);
  D.246707 = std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (this, __xlen, D.246693, D.246692);
  __tmp = D.246707;
  _20 = &this->D.175603;
  _21 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.175603._M_impl.D.174948._M_finish;
  _23 = this->D.175603._M_impl.D.174948._M_start;
  std::_Destroy<assign_type*, assign_type> (_23, _22, _21);
  _24 = &this->D.175603;
  _25 = this->D.175603._M_impl.D.174948._M_end_of_storage;
  _26 = this->D.175603._M_impl.D.174948._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.175603._M_impl.D.174948._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_24, _30, _29);
  this->D.175603._M_impl.D.174948._M_start = __tmp;
  _31 = this->D.175603._M_impl.D.174948._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.175603._M_impl.D.174948._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<assign_type>::size (this);
  retval.134 = __xlen <= _34;
  if (retval.134 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.175603;
  _36 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_35);
  D.246698 = std::vector<assign_type>::end (this);
  D.246699 = std::vector<assign_type>::begin (this);
  D.246700 = std::vector<assign_type>::end (__x);
  D.246701 = std::vector<assign_type>::begin (__x);
  D.246702 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.246701, D.246700, D.246699);
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (D.246702, D.246698, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.175603._M_impl.D.174948._M_start;
  _38 = __x->D.175603._M_impl.D.174948._M_start;
  _39 = std::vector<assign_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.175603._M_impl.D.174948._M_start;
  std::copy<assign_type*, assign_type*> (_42, _41, _37);
  _43 = &this->D.175603;
  _44 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.175603._M_impl.D.174948._M_finish;
  _46 = __x->D.175603._M_impl.D.174948._M_finish;
  _47 = __x->D.175603._M_impl.D.174948._M_start;
  _48 = std::vector<assign_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.175603._M_impl.D.174948._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.175603._M_impl.D.174948._M_finish = _53;

  <bb 17> :
  D.246705 = this;

  <bb 18> :
<L19>:
  return D.246705;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7620, decl_uid=174815, cgraph_uid=4251, symbol_order=5033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ()
{
  bool D.246708;

  <bb 2> :
  D.246708 = 0;

  <bb 3> :
<L0>:
  return D.246708;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E15_S_always_equalEv, funcdef_no=6415, decl_uid=174818, cgraph_uid=3389, symbol_order=4162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ()
{
  bool D.246710;

  <bb 2> :
  D.246710 = 1;

  <bb 3> :
<L0>:
  return D.246710;

}



;; Function std::operator!= (_ZStneRKSaI11assign_typeES2_, funcdef_no=8452, decl_uid=174701, cgraph_uid=5084, symbol_order=5870)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.220918, const struct allocator & D.220919)
{
  bool D.246712;

  <bb 2> :
  D.246712 = 0;

  <bb 3> :
<L0>:
  return D.246712;

}



;; Function std::vector<assign_type>::clear (_ZNSt6vectorI11assign_typeSaIS0_EE5clearEv, funcdef_no=8453, decl_uid=175333, cgraph_uid=5085, symbol_order=5871)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.175603._M_impl.D.174948._M_start;
  std::vector<assign_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<assign_type>::_M_erase_at_end (_ZNSt6vectorI11assign_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9213, decl_uid=175461, cgraph_uid=5845, symbol_order=6631)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<assign_type>::_M_erase_at_end (struct vector * const this, struct assign_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.175603._M_impl.D.174948._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.175603;
  _5 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.175603._M_impl.D.174948._M_finish;
  std::_Destroy<assign_type*, assign_type> (__pos, _6, _5);
  this->D.175603._M_impl.D.174948._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8451, decl_uid=174838, cgraph_uid=5083, symbol_order=5869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.246717;

  <bb 2> :
  D.246717 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246717;

}



;; Function std::__alloc_on_copy<std::allocator<assign_type> > (_ZSt15__alloc_on_copyISaI11assign_typeEEvRT_RKS2_, funcdef_no=8454, decl_uid=210549, cgraph_uid=5086, symbol_order=5872)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<assign_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::capacity (_ZNKSt6vectorI11assign_typeSaIS0_EE8capacityEv, funcdef_no=8455, decl_uid=175249, cgraph_uid=5087, symbol_order=5873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::capacity (const struct vector * const this)
{
  size_type D.246719;

  <bb 2> :
  _1 = this->D.175603._M_impl.D.174948._M_end_of_storage;
  _2 = this->D.175603._M_impl.D.174948._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.246719 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246719;

}



;; Function std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZNSt6vectorI11assign_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8458, decl_uid=210653, cgraph_uid=5090, symbol_order=5876)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct assign_type * std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct assign_type * D.246723;
  struct assign_type * __result;
  struct assign_type * D.246721;

  <bb 2> :
  _1 = &this->D.175603;
  D.246723 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_1, __n);
  __result = D.246723;
  _2 = &this->D.175603;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (__first, __last, __result, _3);

  <bb 3> :
  D.246721 = __result;

  <bb 4> :
<L0>:
  return D.246721;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.175603;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE11_M_allocateEm, funcdef_no=9217, decl_uid=174952, cgraph_uid=5849, symbol_order=6635)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct assign_type * std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.246733;
  struct assign_type * iftmp.135;
  struct assign_type * D.246727;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.246733 = std::allocator_traits<std::allocator<assign_type> >::allocate (_1, __n);
  iftmp.135 = D.246733;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.135 = 0B;

  <bb 5> :
  D.246727 = iftmp.135;

  <bb 6> :
<L3>:
  return D.246727;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::allocate (_ZNSt16allocator_traitsISaI11assign_typeEE8allocateERS1_m, funcdef_no=9922, decl_uid=174753, cgraph_uid=6554, symbol_order=7344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct assign_type * std::allocator_traits<std::allocator<assign_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct assign_type * D.246736;
  struct assign_type * D.246734;

  <bb 2> :
  D.246736 = __gnu_cxx::new_allocator<assign_type>::allocate (__a, __n, 0B);
  D.246734 = D.246736;

  <bb 3> :
<L0>:
  return D.246734;

}



;; Function __gnu_cxx::new_allocator<assign_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE8allocateEmPKv, funcdef_no=10453, decl_uid=174607, cgraph_uid=7086, symbol_order=7876)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct assign_type * __gnu_cxx::new_allocator<assign_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.242898)
{
  struct assign_type * D.246747;
  struct assign_type * D.246746;
  align_val_t __al;
  struct assign_type * D.246744;
  bool retval.136;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.136 = _4 != 0;
  if (retval.136 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.246747 = operator new (_6);
  D.246744 = D.246747;

  <bb 7> :
<L6>:
  return D.246744;

}



;; Function __gnu_cxx::new_allocator<assign_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE11_M_max_sizeEv, funcdef_no=10454, decl_uid=174634, cgraph_uid=7085, symbol_order=7875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.246748;

  <bb 2> :
  D.246748 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.246748;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8469, decl_uid=210787, cgraph_uid=5101, symbol_order=5887)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result, struct allocator & D.221085)
{
  struct assign_type * D.246752;
  struct assign_type * D.246750;

  <bb 2> :
  D.246752 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.246750 = D.246752;

  <bb 3> :
<L0>:
  return D.246750;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9234, decl_uid=221087, cgraph_uid=5866, symbol_order=6652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246755;
  const bool __assignable;
  struct assign_type * D.246753;

  <bb 2> :
  __assignable = 1;
  D.246755 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.246753 = D.246755;

  <bb 3> :
<L0>:
  return D.246753;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9932, decl_uid=232470, cgraph_uid=6564, symbol_order=7354)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246758;
  struct assign_type * D.246756;

  <bb 2> :
  D.246758 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.246756 = D.246758;

  <bb 3> :
<L0>:
  return D.246756;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10459, decl_uid=239475, cgraph_uid=7091, symbol_order=7881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246763;
  struct __normal_iterator D.246761;
  struct __normal_iterator D.246760;
  struct assign_type * D.246759;

  <bb 2> :
  D.246760 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.246761 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.246763 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (D.246761, D.246760, __result);
  D.246759 = D.246763;

  <bb 3> :
<L0>:
  return D.246759;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9221, decl_uid=221004, cgraph_uid=5853, symbol_order=6639)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.246764;

  <bb 2> :
  D.246764 = __it;

  <bb 3> :
<L0>:
  return D.246764;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10771, decl_uid=242956, cgraph_uid=7403, symbol_order=8195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246768;
  struct assign_type * D.246766;

  <bb 2> :
  __result.137_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.137_1);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _4 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.246768 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.246768;
  D.246766 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.246766;

}



;; Function std::__niter_base<assign_type*> (_ZSt12__niter_baseIP11assign_typeET_S2_, funcdef_no=9928, decl_uid=223631, cgraph_uid=6560, symbol_order=7350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.246769;

  <bb 2> :
  D.246769 = __it;

  <bb 3> :
<L0>:
  return D.246769;

}



;; Function std::__niter_base<const assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIPK11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=9923, decl_uid=232118, cgraph_uid=6555, symbol_order=7345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * std::__niter_base<const assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  const struct assign_type * D.246771;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (&__it);
  D.246771 = *_1;

  <bb 3> :
<L0>:
  return D.246771;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10455, decl_uid=210620, cgraph_uid=7087, symbol_order=7877)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * const & __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  const struct assign_type * const & D.246773;

  <bb 2> :
  D.246773 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246773;

}



;; Function std::__copy_move_a1<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=9925, decl_uid=232272, cgraph_uid=6557, symbol_order=7347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246777;
  struct assign_type * D.246775;

  <bb 2> :
  D.246777 = std::__copy_move_a2<false, const assign_type*, assign_type*> (__first, __last, __result);
  D.246775 = D.246777;

  <bb 3> :
<L0>:
  return D.246775;

}



;; Function std::__copy_move_a2<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=10456, decl_uid=239442, cgraph_uid=7088, symbol_order=7878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246778;

  <bb 2> :
  D.246778 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.246778;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11assign_typeEEPT_PKS4_S7_S5_, funcdef_no=10770, decl_uid=242930, cgraph_uid=7402, symbol_order=8194)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  const ptrdiff_t _Num;
  struct assign_type * D.246783;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.138_2 = (long unsigned int) _Num;
  _3 = _Num.138_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.139_4 = (long unsigned int) _Num;
  _5 = _Num.139_4 * 24;
  D.246783 = __result + _5;

  <bb 5> :
<L3>:
  return D.246783;

}



;; Function std::__niter_wrap<assign_type*> (_ZSt12__niter_wrapIP11assign_typeET_RKS2_S2_, funcdef_no=9930, decl_uid=232315, cgraph_uid=6562, symbol_order=7352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_wrap<assign_type*> (struct assign_type * const & D.239464, struct assign_type * __res)
{
  struct assign_type * D.246785;

  <bb 2> :
  D.246785 = __res;

  <bb 3> :
<L0>:
  return D.246785;

}



;; Function std::_Destroy<assign_type*, assign_type> (_ZSt8_DestroyIP11assign_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8447, decl_uid=210510, cgraph_uid=5079, symbol_order=5865)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct allocator & D.220898)
{
  <bb 2> :
  std::_Destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<assign_type*> (_ZSt8_DestroyIP11assign_typeEvT_S2_, funcdef_no=9210, decl_uid=220900, cgraph_uid=5842, symbol_order=6628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*> (struct assign_type * __first, struct assign_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<assign_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11assign_typeEEvT_S4_, funcdef_no=9918, decl_uid=232078, cgraph_uid=6550, symbol_order=7340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<assign_type*> (struct assign_type * D.239418, struct assign_type * D.239419)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8445, decl_uid=174955, cgraph_uid=5077, symbol_order=5863)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (struct _Vector_base * const this, struct assign_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<assign_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::deallocate (_ZNSt16allocator_traitsISaI11assign_typeEE10deallocateERS1_PS0_m, funcdef_no=9209, decl_uid=174760, cgraph_uid=5841, symbol_order=6627)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::deallocate (struct allocator_type & __a, struct assign_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE10deallocateEPS1_m, funcdef_no=9917, decl_uid=174611, cgraph_uid=6549, symbol_order=7339)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::deallocate (struct new_allocator * const this, struct assign_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<assign_type>::end (_ZNSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8461, decl_uid=175216, cgraph_uid=5093, symbol_order=5879)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::end (struct vector * const this)
{
  struct iterator D.221038;
  struct iterator D.246793;

  <bb 2> :
  _1 = &this->D.175603._M_impl.D.174948._M_finish;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.221038, _1);
  D.246793 = D.221038;
  D.221038 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246793;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9219, decl_uid=210735, cgraph_uid=5851, symbol_order=6637)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8459, decl_uid=175212, cgraph_uid=5091, symbol_order=5877)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::begin (struct vector * const this)
{
  struct iterator D.220992;
  struct iterator D.246796;

  <bb 2> :
  _1 = &this->D.175603._M_impl.D.174948._M_start;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.220992, _1);
  D.246796 = D.220992;
  D.220992 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246796;

}



;; Function std::vector<assign_type>::end (_ZNKSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8457, decl_uid=175218, cgraph_uid=5089, symbol_order=5875)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::end (const struct vector * const this)
{
  struct const_iterator D.220954;
  struct const_iterator D.246799;

  <bb 2> :
  _1 = &this->D.175603._M_impl.D.174948._M_finish;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.220954, _1);
  D.246799 = D.220954;
  D.220954 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246799;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9215, decl_uid=210633, cgraph_uid=5847, symbol_order=6633)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, const struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNKSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8456, decl_uid=175214, cgraph_uid=5088, symbol_order=5874)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::begin (const struct vector * const this)
{
  struct const_iterator D.220952;
  struct const_iterator D.246802;

  <bb 2> :
  _1 = &this->D.175603._M_impl.D.174948._M_start;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.220952, _1);
  D.246802 = D.220952;
  D.220952 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246802;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8460, decl_uid=210754, cgraph_uid=5092, symbol_order=5878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.246807;
  struct __normal_iterator D.246806;
  struct __normal_iterator D.246805;

  <bb 2> :
  D.246806 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.246807 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.246805 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.246807, D.246806, __result);

  <bb 3> :
<L0>:
  return D.246805;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9222, decl_uid=221010, cgraph_uid=5855, symbol_order=6641)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct assign_type * D.246811;
  struct __normal_iterator D.246809;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__result);
  _2 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.246811 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_3, _2, _1);
  _4 = D.246811;
  D.246809 = std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.246809;

}



;; Function std::__niter_base<assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIP11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=9924, decl_uid=232269, cgraph_uid=6556, symbol_order=7346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  struct assign_type * D.246812;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__it);
  D.246812 = *_1;

  <bb 3> :
<L0>:
  return D.246812;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9402, decl_uid=210722, cgraph_uid=6034, symbol_order=6820)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * const & __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  struct assign_type * const & D.246814;

  <bb 2> :
  D.246814 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246814;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=9926, decl_uid=232276, cgraph_uid=6558, symbol_order=7348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __from, struct assign_type * __res)
{
  struct __normal_iterator D.246816;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.246816 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.246816;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10457, decl_uid=210713, cgraph_uid=7089, symbol_order=7879)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct assign_type * const D.242936;
  struct __normal_iterator D.242937;
  struct __normal_iterator D.246818;

  <bb 2> :
  _1 = this->_M_current;
  __n.140_2 = (long unsigned int) __n;
  _3 = __n.140_2 * 24;
  _4 = _1 + _3;
  D.242936 = _4;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.242937, &D.242936);
  D.246818 = D.242937;
  D.242937 = {CLOBBER};
  D.242936 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.246818;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8462, decl_uid=210760, cgraph_uid=5094, symbol_order=5880)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.221041)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9224, decl_uid=221043, cgraph_uid=5856, symbol_order=6642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=9927, decl_uid=232300, cgraph_uid=6559, symbol_order=7349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator D.239451, struct __normal_iterator D.239452)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<assign_type*, assign_type*> (_ZSt4copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=8463, decl_uid=210768, cgraph_uid=5095, symbol_order=5881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246824;
  struct assign_type * D.246822;

  <bb 2> :
  _1 = std::__miter_base<assign_type*> (__last);
  _2 = std::__miter_base<assign_type*> (__first);
  D.246824 = std::__copy_move_a<false, assign_type*, assign_type*> (_2, _1, __result);
  D.246822 = D.246824;

  <bb 3> :
<L0>:
  return D.246822;

}



;; Function std::__miter_base<assign_type*> (_ZSt12__miter_baseIP11assign_typeET_S2_, funcdef_no=9225, decl_uid=221059, cgraph_uid=5857, symbol_order=6643)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__miter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.246825;

  <bb 2> :
  D.246825 = __it;

  <bb 3> :
<L0>:
  return D.246825;

}



;; Function std::__copy_move_a<false, assign_type*, assign_type*> (_ZSt13__copy_move_aILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=9226, decl_uid=221061, cgraph_uid=5858, symbol_order=6644)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246829;
  struct assign_type * D.246827;

  <bb 2> :
  __result.141_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.141_1);
  _3 = std::__niter_base<assign_type*> (__last);
  _4 = std::__niter_base<assign_type*> (__first);
  D.246829 = std::__copy_move_a1<false, assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.246829;
  D.246827 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.246827;

}



;; Function std::__copy_move_a1<false, assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=9929, decl_uid=232311, cgraph_uid=6561, symbol_order=7351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246832;
  struct assign_type * D.246830;

  <bb 2> :
  D.246832 = std::__copy_move_a2<false, assign_type*, assign_type*> (__first, __last, __result);
  D.246830 = D.246832;

  <bb 3> :
<L0>:
  return D.246830;

}



;; Function std::__copy_move_a2<false, assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=10458, decl_uid=239460, cgraph_uid=7090, symbol_order=7880)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246833;

  <bb 2> :
  D.246833 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.246833;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8446, decl_uid=174836, cgraph_uid=5078, symbol_order=5864)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.246835;

  <bb 2> :
  D.246835 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246835;

}



;; Function std::vector<assign_type>::size (_ZNKSt6vectorI11assign_typeSaIS0_EE4sizeEv, funcdef_no=7628, decl_uid=175236, cgraph_uid=4260, symbol_order=5042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::size (const struct vector * const this)
{
  size_type D.246837;

  <bb 2> :
  _1 = this->D.175603._M_impl.D.174948._M_finish;
  _2 = this->D.175603._M_impl.D.174948._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.246837 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246837;

}



;; Function std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIP11assign_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8464, decl_uid=210772, cgraph_uid=5096, symbol_order=5882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.221068)
{
  struct assign_type * D.246841;
  struct assign_type * D.246839;

  <bb 2> :
  D.246841 = std::uninitialized_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.246839 = D.246841;

  <bb 3> :
<L0>:
  return D.246839;

}



;; Function std::uninitialized_copy<assign_type*, assign_type*> (_ZSt18uninitialized_copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=9227, decl_uid=221070, cgraph_uid=5860, symbol_order=6646)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246844;
  const bool __assignable;
  struct assign_type * D.246842;

  <bb 2> :
  __assignable = 1;
  D.246844 = std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.246842 = D.246844;

  <bb 3> :
<L0>:
  return D.246842;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP11assign_typeS3_EET0_T_S5_S4_, funcdef_no=9931, decl_uid=232414, cgraph_uid=6563, symbol_order=7353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246847;
  struct assign_type * D.246845;

  <bb 2> :
  D.246847 = std::copy<assign_type*, assign_type*> (__first, __last, __result);
  D.246845 = D.246847;

  <bb 3> :
<L0>:
  return D.246845;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS2_, funcdef_no=7622, decl_uid=175566, cgraph_uid=4254, symbol_order=5036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<assign_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.246852;
  struct __normal_iterator D.246849;
  struct __normal_iterator D.246848;
  struct allocator D.210798;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175603;
  _2 = &__x->D.175603;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  D.210798 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<assign_type>::size (__x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _4, &D.210798);

  <bb 3> :
  std::allocator<assign_type>::~allocator (&D.210798);
  D.210798 = {CLOBBER};
  _5 = &this->D.175603;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.175603._M_impl.D.174948._M_start;
  D.246848 = std::vector<assign_type>::end (__x);
  D.246849 = std::vector<assign_type>::begin (__x);
  D.246852 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (D.246849, D.246848, _7, _6);

  <bb 4> :
  _8 = D.246852;
  this->D.175603._M_impl.D.174948._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<assign_type>::~allocator (&D.210798);
  resx 2

  <bb 6> :
<L1>:
  D.210798 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.175603;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8465, decl_uid=174810, cgraph_uid=5097, symbol_order=5883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11assign_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9229, decl_uid=174775, cgraph_uid=5861, symbol_order=6647)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<assign_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2ERKS0_, funcdef_no=8474, decl_uid=174718, cgraph_uid=5106, symbol_order=5892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2ERKS2_, funcdef_no=9241, decl_uid=174647, cgraph_uid=5873, symbol_order=6659)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.174649)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EmRKS1_, funcdef_no=8467, decl_uid=175035, cgraph_uid=5099, symbol_order=5885)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9231, decl_uid=174940, cgraph_uid=5863, symbol_order=6649)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this, __a);
  _1 = &this->D.174948;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9233, decl_uid=174959, cgraph_uid=5865, symbol_order=6651)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.246859;

  <bb 2> :
  D.246859 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (this, __n);
  _1 = D.246859;
  this->_M_impl.D.174948._M_start = _1;
  _2 = this->_M_impl.D.174948._M_start;
  this->_M_impl.D.174948._M_finish = _2;
  _3 = this->_M_impl.D.174948._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.174948._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6269, decl_uid=174995, cgraph_uid=3241, symbol_order=4008)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<assign_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<assign_type>::~allocator (_ZNSaI11assign_typeED2Ev, funcdef_no=7610, decl_uid=174728, cgraph_uid=4242, symbol_order=5024)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeED2Ev, funcdef_no=8443, decl_uid=174657, cgraph_uid=5075, symbol_order=5861)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EED2Ev, funcdef_no=7613, decl_uid=175058, cgraph_uid=4245, symbol_order=5027)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.174948._M_end_of_storage;
  _2 = this->_M_impl.D.174948._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.174948._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::put (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7624, decl_uid=190691, cgraph_uid=4256, symbol_order=5038)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_assign_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_assign_array & v)
{
  bool D.246867;
  struct hash_entry * D.246866;
  unsigned int D.246865;
  bool ins;
  struct hash_entry * e;
  bool D.246863;
  void * D.210808;
  void * D.210807;

  <bb 2> :
  _1 = &this->m_table;
  D.246865 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.246865;
  D.246866 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.246866;
  D.246867 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (e);
  ins = D.246867;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.210807 = &e->m_value;
  D.210808 = operator new (32, D.210807);
  function_assign_array::function_assign_array (D.210808, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_assign_array::operator= (_4, v);

  <bb 5> :
  D.246863 = ~ins;

  <bb 6> :
<L3>:
  return D.246863;

  <bb 7> :
<L4>:
  operator delete (D.210808, D.210807);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8470, decl_uid=190849, cgraph_uid=5102, symbol_order=5888)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.246918;
  bool D.246917;
  bool D.246916;
  bool D.246915;
  bool D.246914;
  bool D.246913;
  struct value_type * D.246912;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.147;
  bool retval.146;
  bool retval.145;
  bool retval.144;
  bool retval.143;
  bool retval.142;
  struct value_type * D.246874;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.246913 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.142 = D.246913;
  if (retval.142 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.246914 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.143 = D.246914;
  if (retval.143 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.246915 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.144 = D.246915;
  if (retval.144 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.246874 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.246916 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.145 = D.246916;
  if (retval.145 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.246917 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.146 = D.246917;
  if (retval.146 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.246918 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.147 = D.246918;
  if (retval.147 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.246874 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.246874 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.246874 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.246874 = _37 + _39;

  <bb 27> :
<L37>:
  return D.246874;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9235, decl_uid=190930, cgraph_uid=5870, symbol_order=6656)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.246949;
  unsigned int D.246948;
  bool D.246947;
  bool D.246946;
  struct mem_alloc_description & D.246945;
  struct value_type * D.246944;
  unsigned int D.246943;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.232496;
  void * D.232495;
  struct hash_entry & D.232524;
  bool iftmp.151;
  bool retval.150;
  bool iftmp.149;
  bool retval.148;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.149 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.149 = 0;

  <bb 6> :
  retval.148 = iftmp.149;
  if (retval.148 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.246943 = hash_table_higher_prime_index (_5);
  nindex = D.246943;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.246944 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.246944;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.246946 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.246946;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.246947 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.246947;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.151 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.151 = 0;

  <bb 15> :
  retval.150 = iftmp.151;
  if (retval.150 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.246948 = hash_map<tree_node*, function_assign_array>::hash_entry::hash (x);
  _16 = D.246948;
  D.246949 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.246949;
  D.232524 = std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (x);
  D.232495 = q;
  D.232496 = operator new (40, D.232495);
  hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (D.232496, D.232524);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=9933, decl_uid=190825, cgraph_uid=6565, symbol_order=7355)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.246950;

  <bb 2> :
  D.246950 = this->m_size;

  <bb 3> :
<L0>:
  return D.246950;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=9934, decl_uid=190827, cgraph_uid=6566, symbol_order=7356)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.246952;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.246952 = _1 - _2;

  <bb 3> :
<L0>:
  return D.246952;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=9935, decl_uid=190927, cgraph_uid=6567, symbol_order=7357)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.152;
  bool D.246954;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.152 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.152 = 0;

  <bb 6> :
  D.246954 = iftmp.152;

  <bb 7> :
<L4>:
  return D.246954;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9211, decl_uid=190917, cgraph_uid=5843, symbol_order=6629)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.246976;
  struct value_type * D.246975;
  struct mem_alloc_description & D.246974;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.246972;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246975 = xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (n);
  nentries = D.246975;
  goto <bb 6>; [INV]

  <bb 5> :
  D.246976 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (n);
  nentries = D.246976;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.246972 = nentries;

  <bb 9> :
<L14>:
  return D.246972;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9919, decl_uid=216724, cgraph_uid=6551, symbol_order=7341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.246979;
  struct hash_entry * D.246977;

  <bb 2> :
  D.246979 = xcalloc (count, 40);
  D.246977 = D.246979;

  <bb 3> :
<L0>:
  return D.246977;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9920, decl_uid=232085, cgraph_uid=6552, symbol_order=7342)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.246986;
  struct hash_entry * D.246985;
  struct hash_entry * D.246983;
  bool retval.153;

  <bb 2> :
  retval.153 = need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ();
  if (retval.153 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.246985 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.246983 = D.246985;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.246986 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.246983 = D.246986;

  <bb 5> :
<L2>:
  return D.246983;

}



;; Function finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10449, decl_uid=239426, cgraph_uid=7084, symbol_order=7874)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10451, decl_uid=242887, cgraph_uid=7082, symbol_order=7872)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_assign_array::~function_assign_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10448, decl_uid=239425, cgraph_uid=7080, symbol_order=7870)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ()
{
  bool D.246987;

  <bb 2> :
  D.246987 = 1;

  <bb 3> :
<L0>:
  return D.246987;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=9937, decl_uid=190750, cgraph_uid=6569, symbol_order=7359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_assign_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.246991;
  hashval_t D.246989;

  <bb 2> :
  _1 = &e->m_key;
  D.246991 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_1);
  D.246989 = D.246991;

  <bb 3> :
<L0>:
  return D.246989;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=9936, decl_uid=190920, cgraph_uid=6568, symbol_order=7358)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.247004;
  bool D.247003;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.155;
  struct value_type * D.246995;
  bool retval.154;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.247003 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.154 = D.247003;
  if (retval.154 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.246995 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.247004 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.155 = D.247004;
  if (retval.155 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.246995 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.246995;

}



;; Function std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=9938, decl_uid=232493, cgraph_uid=6570, symbol_order=7360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.247005;

  <bb 2> :
  D.247005 = __t;

  <bb 3> :
<L0>:
  return D.247005;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9237, decl_uid=232518, cgraph_uid=5868, symbol_order=6654)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.232520)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.232520->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.232520->m_value;
  function_assign_array::function_assign_array (_2, _3);
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2EOS_, funcdef_no=6288, decl_uid=190479, cgraph_uid=3263, symbol_order=4030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, struct function_assign_array & D.190481)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190481->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190481->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6286, decl_uid=175560, cgraph_uid=3260, symbol_order=4027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, struct vector & D.175562)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175603;
  _2 = &D.175562->D.175603;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6284, decl_uid=175028, cgraph_uid=3257, symbol_order=4024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.175030)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.175030->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=7626, decl_uid=174934, cgraph_uid=4258, symbol_order=5040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  std::allocator<assign_type>::allocator (this, _1);
  _2 = &this->D.174948;
  _3 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.174948;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11assign_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=8472, decl_uid=210816, cgraph_uid=5104, symbol_order=5890)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.247007;

  <bb 2> :
  D.247007 = __t;

  <bb 3> :
<L0>:
  return D.247007;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=8477, decl_uid=174890, cgraph_uid=5109, symbol_order=5895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8908, decl_uid=216726, cgraph_uid=5540, symbol_order=6326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9239, decl_uid=190938, cgraph_uid=5871, symbol_order=6657)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=9939, decl_uid=190762, cgraph_uid=6571, symbol_order=7361)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10460, decl_uid=239502, cgraph_uid=7092, symbol_order=7882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<tree_node>::mark_empty (_ZN12pointer_hashI9tree_nodeE10mark_emptyERPS0_, funcdef_no=10772, decl_uid=85306, cgraph_uid=7404, symbol_order=8196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<tree_node>::mark_empty (union tree_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2ERKS_, funcdef_no=6292, decl_uid=190470, cgraph_uid=3267, symbol_order=4034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, const struct function_assign_array & D.190472)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190472->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190472->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function operator delete (_ZdlPvS_, funcdef_no=17, decl_uid=3708, cgraph_uid=18, symbol_order=17)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void operator delete (void * D.3706, void * D.3707)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::~vector (_ZNSt6vectorI11assign_typeSaIS0_EED2Ev, funcdef_no=7616, decl_uid=175600, cgraph_uid=4248, symbol_order=5030)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175603;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.175603._M_impl.D.174948._M_finish;
  _4 = this->D.175603._M_impl.D.174948._M_start;
  std::_Destroy<assign_type*, assign_type> (_4, _3, _2);
  _5 = &this->D.175603;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function function_assign_array::~function_assign_array (_ZN21function_assign_arrayD2Ev, funcdef_no=6278, decl_uid=190637, cgraph_uid=3253, symbol_order=4020)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::~function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  _1 = &this->assign_type_array;
  std::vector<assign_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function get_function_varstmt (_Z20get_function_varstmtP9tree_nodeS0_, funcdef_no=6290, decl_uid=191095, cgraph_uid=3269, symbol_order=4036)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_varstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_assign_array * D.247016;
  struct function_assign_array * D.247015;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  bool retval.163;
  bool retval.156;

  <bb 2> :
  function_assign_collect.157_1 = function_assign_collect;
  D.247015 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.157_1, &function_tree);

  <bb 3> :
  _2 = D.247015;
  retval.156 = _2 == 0B;
  if (retval.156 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_assign_collect.158_3 = function_assign_collect;
  D.247016 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.158_3, &function_tree);

  <bb 6> :
  _4 = D.247016;
  function_assign_array::function_assign_array (&assign_array, _4);

  <bb 7> :
  std::vector<assign_type>::vector (&assign_type_array, &assign_array.assign_type_array);

  <bb 8> :
  _5 = std::vector<assign_type>::size (&assign_type_array);
  function_tree.159_6 = function_tree;
  stderr.160_7 = stderr;
  fprintf (stderr.160_7, "=======print_function_var %d   %d========\n", function_tree.159_6, _5);

  <bb 9> :
  stderr.161_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.161_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<assign_type>::operator[] (&assign_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.162_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.162_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<assign_type>::size (&assign_type_array);
  retval.163 = _13 < _14;
  if (retval.163 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.164_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.164_15);

  <bb 16> :
  stderr.165_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.165_16);

  <bb 17> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 21> :
<L10>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 1

}



;; Function std::vector<assign_type>::operator[] (_ZNSt6vectorI11assign_typeSaIS0_EEixEm, funcdef_no=7629, decl_uid=175256, cgraph_uid=4261, symbol_order=5043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<assign_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.247022;

  <bb 2> :
  _1 = this->D.175603._M_impl.D.174948._M_start;
  _2 = __n * 24;
  D.247022 = _1 + _2;

  <bb 3> :
<L0>:
  return D.247022;

}



;; Function get_function_specialstmt (_Z24get_function_specialstmtP9tree_nodeS0_, funcdef_no=6294, decl_uid=191111, cgraph_uid=3270, symbol_order=4037)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_specialstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_return_array * D.247030;
  struct function_return_array * D.247029;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.173;
  bool retval.166;

  <bb 2> :
  function_return_collect.167_1 = function_return_collect;
  D.247029 = hash_map<tree_node*, function_return_array>::get (function_return_collect.167_1, &function_tree);

  <bb 3> :
  _2 = D.247029;
  retval.166 = _2 == 0B;
  if (retval.166 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_return_collect.168_3 = function_return_collect;
  D.247030 = hash_map<tree_node*, function_return_array>::get (function_return_collect.168_3, &function_tree);

  <bb 6> :
  _4 = D.247030;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.169_6 = function_tree;
  stderr.170_7 = stderr;
  fprintf (stderr.170_7, "=======print_function_return %d   %d========\n", function_tree.169_6, _5);

  <bb 9> :
  stderr.171_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.171_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.172_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.172_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.173 = _13 < _14;
  if (retval.173 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.174_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.174_15);

  <bb 16> :
  stderr.175_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.175_16);

  <bb 17> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 21> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function trace_fucntion_relate_stmt (_Z26trace_fucntion_relate_stmtP11cgraph_nodeP9tree_nodeS2_, funcdef_no=6295, decl_uid=187049, cgraph_uid=3291, symbol_order=4064)

Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 111
Removing basic block 112
Removing basic block 113
Removing basic block 114
Removing basic block 116
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 132
Removing basic block 133
Removing basic block 145
Removing basic block 146
Removing basic block 156
Removing basic block 161
Removing basic block 164
Removing basic block 190
Removing basic block 191
Removing basic block 192
Removing basic block 193
Removing basic block 194
Removing basic block 195
Removing basic block 221
Removing basic block 222
Removing basic block 223
Removing basic block 250
Removing basic block 251
Removing basic block 252
Removing basic block 253
Removing basic block 254
Removing basic block 255
Removing basic block 289
Removing basic block 294
Removing basic block 297
Removing basic block 318
Removing basic block 319
Removing basic block 320
Removing basic block 321
Removing basic block 322
Removing basic block 323
Removing basic block 324
Removing basic block 325
Removing basic block 334
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 295, latch 294
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 281, latch 280
;;  depth 2, outer 1
;;  nodes
;;
;; Loop 3
;;  header 279, latch 278
;;  depth 3, outer 2
;;  nodes
;; 2 succs { 3 4 }
;; 3 succs { 297 }
;; 4 succs { 295 }
;; 5 succs { 6 7 }
;; 6 succs { 294 }
;; 7 succs { 8 293 }
;; 8 succs { 302 9 }
;; 9 succs { 302 10 }
;; 10 succs { 302 11 }
;; 11 succs { 302 12 }
;; 12 succs { 302 13 }
;; 13 succs { 281 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 279 }
;; 18 succs { 19 24 }
;; 19 succs { 298 20 }
;; 20 succs { 298 21 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 298 24 }
;; 24 succs { 25 219 }
;; 25 succs { 26 168 }
;; 26 succs { 27 168 }
;; 27 succs { 28 168 }
;; 28 succs { 29 168 }
;; 29 succs { 298 30 }
;; 30 succs { 31 168 }
;; 31 succs { 298 32 }
;; 32 succs { 35 33 }
;; 33 succs { 298 34 }
;; 34 succs { 35 36 }
;; 35 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 38 168 }
;; 38 succs { 298 39 }
;; 39 succs { 40 168 }
;; 40 succs { 298 41 }
;; 41 succs { 298 42 }
;; 42 succs { 43 168 }
;; 43 succs { 298 44 }
;; 44 succs { 45 128 }
;; 45 succs { 298 46 }
;; 46 succs { 298 47 }
;; 47 succs { 48 59 }
;; 48 succs { 298 49 }
;; 49 succs { 50 59 }
;; 50 succs { 298 51 }
;; 51 succs { 298 52 }
;; 52 succs { 53 59 }
;; 53 succs { 298 54 }
;; 54 succs { 298 55 }
;; 55 succs { 298 56 }
;; 56 succs { 298 57 }
;; 57 succs { 298 58 }
;; 58 succs { 298 59 }
;; 59 succs { 298 60 }
;; 60 succs { 61 64 }
;; 61 succs { 298 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 67 }
;; 66 succs { 278 }
;; 67 succs { 298 68 }
;; 68 succs { 69 72 }
;; 69 succs { 298 70 }
;; 70 succs { 71 72 }
;; 71 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 74 109 }
;; 74 succs { 298 75 }
;; 75 succs { 76 128 }
;; 76 succs { 77 128 }
;; 77 succs { 79 78 }
;; 78 succs { 79 80 }
;; 79 succs { 278 }
;; 80 succs { 81 83 }
;; 81 succs { 82 83 }
;; 82 succs { 84 }
;; 83 succs { 84 }
;; 84 succs { 85 128 }
;; 85 succs { 298 86 }
;; 86 succs { 298 87 }
;; 87 succs { 88 128 }
;; 88 succs { 298 89 }
;; 89 succs { 298 90 }
;; 90 succs { 91 128 }
;; 91 succs { 92 107 }
;; 92 succs { 93 107 }
;; 93 succs { 298 94 }
;; 94 succs { 95 106 }
;; 95 succs { 298 96 }
;; 96 succs { 97 105 }
;; 97 succs { 98 106 }
;; 98 succs { 298 99 }
;; 99 succs { 100 106 }
;; 100 succs { 298 101 }
;; 101 succs { 102 106 }
;; 102 succs { 298 103 }
;; 103 succs { 104 106 }
;; 104 succs { 278 }
;; 105 succs { 278 }
;; 106 succs { 108 }
;; 107 succs { 278 }
;; 108 succs { 128 }
;; 109 succs { 298 110 }
;; 110 succs { 111 117 }
;; 111 succs { 298 112 }
;; 112 succs { 298 113 }
;; 113 succs { 114 128 }
;; 114 succs { 298 115 }
;; 115 succs { 116 128 }
;; 116 succs { 278 }
;; 117 succs { 298 118 }
;; 118 succs { 119 128 }
;; 119 succs { 298 120 }
;; 120 succs { 298 121 }
;; 121 succs { 123 122 }
;; 122 succs { 123 124 }
;; 123 succs { 278 }
;; 124 succs { 298 125 }
;; 125 succs { 298 126 }
;; 126 succs { 127 128 }
;; 127 succs { 278 }
;; 128 succs { 298 129 }
;; 129 succs { 298 130 }
;; 130 succs { 298 131 }
;; 131 succs { 298 132 }
;; 132 succs { 298 133 }
;; 133 succs { 298 134 }
;; 134 succs { 135 143 }
;; 135 succs { 136 137 }
;; 136 succs { 298 142 }
;; 137 succs { 138 141 }
;; 138 succs { 298 139 }
;; 139 succs { 298 140 }
;; 140 succs { 298 141 }
;; 141 succs { 298 142 }
;; 142 succs { 298 153 }
;; 143 succs { 144 146 }
;; 144 succs { 298 145 }
;; 145 succs { 153 }
;; 146 succs { 147 152 }
;; 147 succs { 298 148 }
;; 148 succs { 298 149 }
;; 149 succs { 298 150 }
;; 150 succs { 298 151 }
;; 151 succs { 152 }
;; 152 succs { 298 153 }
;; 153 succs { 298 154 }
;; 154 succs { 298 155 }
;; 155 succs { 298 156 }
;; 156 succs { 298 157 }
;; 157 succs { 298 158 }
;; 158 succs { 298 159 }
;; 159 succs { 298 160 }
;; 160 succs { 298 161 }
;; 161 succs { 298 162 }
;; 162 succs { 298 163 }
;; 163 succs { 298 164 }
;; 164 succs { 298 165 }
;; 165 succs { 298 166 }
;; 166 succs { 298 167 }
;; 167 succs { 298 168 }
;; 168 succs { 298 169 }
;; 169 succs { 171 170 }
;; 170 succs { 171 172 }
;; 171 succs { 173 }
;; 172 succs { 173 }
;; 173 succs { 174 278 }
;; 174 succs { 298 175 }
;; 175 succs { 298 176 }
;; 176 succs { 177 179 }
;; 177 succs { 298 178 }
;; 178 succs { 179 }
;; 179 succs { 180 193 }
;; 180 succs { 181 193 }
;; 181 succs { 182 193 }
;; 182 succs { 183 193 }
;; 183 succs { 298 184 }
;; 184 succs { 298 185 }
;; 185 succs { 298 186 }
;; 186 succs { 298 187 }
;; 187 succs { 298 188 }
;; 188 succs { 298 189 }
;; 189 succs { 298 190 }
;; 190 succs { 298 191 }
;; 191 succs { 298 192 }
;; 192 succs { 298 193 }
;; 193 succs { 194 278 }
;; 194 succs { 195 278 }
;; 195 succs { 298 196 }
;; 196 succs { 197 278 }
;; 197 succs { 298 198 }
;; 198 succs { 199 278 }
;; 199 succs { 200 207 }
;; 200 succs { 298 201 }
;; 201 succs { 298 202 }
;; 202 succs { 203 207 }
;; 203 succs { 298 204 }
;; 204 succs { 298 205 }
;; 205 succs { 206 207 }
;; 206 succs { 208 }
;; 207 succs { 208 }
;; 208 succs { 209 278 }
;; 209 succs { 298 210 }
;; 210 succs { 298 211 }
;; 211 succs { 298 212 }
;; 212 succs { 298 213 }
;; 213 succs { 298 214 }
;; 214 succs { 298 215 }
;; 215 succs { 298 216 }
;; 216 succs { 298 217 }
;; 217 succs { 298 218 }
;; 218 succs { 298 278 }
;; 219 succs { 220 278 }
;; 220 succs { 221 278 }
;; 221 succs { 222 278 }
;; 222 succs { 223 278 }
;; 223 succs { 298 224 }
;; 224 succs { 225 278 }
;; 225 succs { 298 226 }
;; 226 succs { 298 227 }
;; 227 succs { 298 228 }
;; 228 succs { 229 278 }
;; 229 succs { 298 230 }
;; 230 succs { 236 231 }
;; 231 succs { 298 232 }
;; 232 succs { 236 233 }
;; 233 succs { 298 234 }
;; 234 succs { 298 235 }
;; 235 succs { 236 237 }
;; 236 succs { 238 }
;; 237 succs { 238 }
;; 238 succs { 239 278 }
;; 239 succs { 240 278 }
;; 240 succs { 243 241 }
;; 241 succs { 243 242 }
;; 242 succs { 243 244 }
;; 243 succs { 278 }
;; 244 succs { 298 245 }
;; 245 succs { 246 278 }
;; 246 succs { 298 247 }
;; 247 succs { 298 248 }
;; 248 succs { 249 278 }
;; 249 succs { 250 258 }
;; 250 succs { 251 252 }
;; 251 succs { 298 257 }
;; 252 succs { 253 256 }
;; 253 succs { 298 254 }
;; 254 succs { 298 255 }
;; 255 succs { 298 256 }
;; 256 succs { 298 257 }
;; 257 succs { 298 268 }
;; 258 succs { 259 261 }
;; 259 succs { 298 260 }
;; 260 succs { 268 }
;; 261 succs { 262 267 }
;; 262 succs { 298 263 }
;; 263 succs { 298 264 }
;; 264 succs { 298 265 }
;; 265 succs { 298 266 }
;; 266 succs { 267 }
;; 267 succs { 298 268 }
;; 268 succs { 298 269 }
;; 269 succs { 298 270 }
;; 270 succs { 298 271 }
;; 271 succs { 298 272 }
;; 272 succs { 298 273 }
;; 273 succs { 298 274 }
;; 274 succs { 298 275 }
;; 275 succs { 298 276 }
;; 276 succs { 298 277 }
;; 277 succs { 298 278 }
;; 278 succs { 279 }
;; 279 succs { 18 280 }
;; 280 succs { 281 }
;; 281 succs { 14 282 }
;; 282 succs { 283 292 }
;; 283 succs { 299 284 }
;; 284 succs { 285 286 }
;; 285 succs { 299 289 }
;; 286 succs { 299 287 }
;; 287 succs { 299 288 }
;; 288 succs { 299 289 }
;; 289 succs { 299 290 }
;; 290 succs { 299 291 }
;; 291 succs { 292 }
;; 292 succs { 293 }
;; 293 succs { 294 }
;; 294 succs { 295 }
;; 295 succs { 5 296 }
;; 296 succs { 297 }
;; 297 succs { 1 }
;; 298 succs { 302 }
;; 299 succs { 300 }
;; 300 succs { 301 }
;; 301 succs { 302 }
;; 302 succs { }
void trace_fucntion_relate_stmt (struct cgraph_node * node, union tree_node * function_tree, union tree_node * mallocStmt_tree)
{
  struct cgraph_node * D.247404;
  struct function_relate_array * D.247399;
  struct function_relate_array * D.247398;
  union tree_node * D.247396;
  const char * D.247395;
  bool D.247394;
  union tree_node * D.247393;
  union tree_node * D.247392;
  const char * D.247391;
  union tree_node * D.247390;
  union tree_node * D.247389;
  union tree_node * D.247388;
  union tree_node * D.247387;
  const char * D.247386;
  union tree_node * D.247385;
  unsigned int D.247384;
  union tree_node * D.247383;
  const char * D.247382;
  bool D.247381;
  union tree_node * D.247380;
  bool D.247379;
  union tree_node * D.247378;
  union tree_node * D.247377;
  union tree_node * D.247376;
  union tree_node * D.247375;
  const char * D.247374;
  union tree_node * D.247373;
  union tree_node * D.247372;
  union tree_node * D.247371;
  union tree_node * D.247370;
  union tree_node * D.247369;
  const char * D.247368;
  const char * D.247367;
  union tree_node * D.247366;
  const char * D.247365;
  bool D.247364;
  union tree_node * D.247363;
  union tree_node * D.247362;
  union tree_node * D.247361;
  union tree_node * D.247360;
  union tree_node * D.247359;
  bool D.247358;
  union tree_node * D.247357;
  union tree_node * D.247356;
  bool D.247355;
  union tree_node * D.247354;
  union tree_node * D.247353;
  union tree_node * D.247352;
  union tree_node * D.247351;
  const char * D.247350;
  union tree_node * D.247349;
  const char * D.247348;
  union tree_node * D.247347;
  union tree_node * D.247346;
  union tree_node * D.247345;
  union tree_node * D.247344;
  union tree_node * D.247343;
  union tree_node * D.247342;
  union tree_node * D.247341;
  bool D.247340;
  union tree_node * D.247339;
  union tree_node * D.247338;
  bool D.247337;
  union tree_node * D.247336;
  union tree_node * D.247335;
  bool D.247334;
  union tree_node * D.247333;
  union tree_node * D.247332;
  union tree_node * D.247331;
  union tree_node * D.247330;
  union tree_node * D.247329;
  const char * D.247328;
  union tree_node * D.247327;
  const char * D.247326;
  const char * D.247325;
  struct function * D.247324;
  struct cgraph_node * D.247323;
  struct relate_type relate_type;
  long unsigned int x;
  struct pt_solution * pt2;
  const char * name;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct gimple * def_stmt;
  union tree_node * second;
  struct pt_solution * pt4;
  struct pt_solution * pt3;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * first;
  long unsigned int x;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  const char * name;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  int seccount;
  int fucntion_level;
  union tree_node * t;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.325;
  bool retval.322;
  bool retval.294;
  bool iftmp.293;
  bool retval.292;
  bool retval.291;
  bool retval.290;
  bool retval.286;
  bool iftmp.277;
  bool retval.276;
  bool retval.275;
  bool retval.265;
  bool iftmp.263;
  bool retval.262;
  bool retval.226;
  bool retval.225;
  bool retval.224;
  bool retval.222;
  bool retval.221;
  bool retval.219;
  bool retval.218;
  bool retval.217;
  bool retval.216;
  bool retval.215;
  bool retval.214;
  bool retval.213;
  bool iftmp.212;
  bool retval.211;
  bool iftmp.209;
  bool retval.208;
  bool iftmp.207;
  bool retval.206;
  bool retval.200;
  bool retval.199;
  bool retval.197;
  bool retval.196;
  bool retval.194;
  bool iftmp.193;
  bool retval.192;
  bool retval.191;
  bool retval.186;
  bool retval.185;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 297>; [INV]

  <bb 4> :
  symtab.176_1 = symtab;
  D.247323 = symbol_table::first_defined_function (symtab.176_1);
  node = D.247323;
  goto <bb 295>; [INV]

  <bb 5> :
  fucntion_level = 0;
  D.247324 = cgraph_node::get_fun (node);
  _2 = D.247324;
  push_cfun (_2);
  cfun.177_3 = cfun;
  if (cfun.177_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 294>; [INV]

  <bb 7> :
  cfun.178_4 = cfun;
  _5 = cfun.178_4->decl;
  if (function_tree == _5)
    goto <bb 8>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 8> :
  now_relatelaststmt = 0B;
  calculate_dominance_info (1);

  <bb 9> :
  D.247325 = get_name (function_tree);

  <bb 10> :
  _6 = D.247325;
  stderr.179_7 = stderr;
  fprintf (stderr.179_7, "\x1b[40;36m ======= node_fun:%s========= \x1b[0m\n", _6);

  <bb 11> :
  mallocStmt_tree.180_8 = mallocStmt_tree;
  D.247326 = get_name (mallocStmt_tree.180_8);

  <bb 12> :
  _9 = D.247326;
  stderr.181_10 = stderr;
  fprintf (stderr.181_10, "\x1b[40;36m ======= find relate stmt with %s ========= \x1b[0m\n", _9);

  <bb 13> :
  seccount = 0;
  cfun.182_11 = cfun;
  _12 = cfun.182_11->cfg;
  _13 = _12->x_entry_block_ptr;
  bb = _13->next_bb;
  goto <bb 281>; [INV]

  <bb 14> :
  tracerelatestmt.183_14 = tracerelatestmt;
  _15 = ~tracerelatestmt.183_14;
  if (_15 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  freemod.184_16 = freemod;
  _17 = ~freemod.184_16;
  if (_17 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  fistconunt = 0;

  <bb 17> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 279>; [INV]

  <bb 18> :
  gc = gsi_stmt (gsi);
  retval.185 = is_gimple_call (gc);
  if (retval.185 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  D.247327 = gimple_call_fn (gc);

  <bb 20> :
  _18 = D.247327;
  D.247328 = get_name (_18);

  <bb 21> :
  name = D.247328;
  if (name != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  _19 = strcmp (name, "pthread_exit");
  if (_19 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  debug_gimple_stmt (gc);

  <bb 24> :
  retval.186 = is_gimple_assign (gc);
  if (retval.186 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 219>; [INV]

  <bb 25> :
  mallocStmt_tree.187_20 = mallocStmt_tree;
  pi1 = mallocStmt_tree.187_20->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 26> :
  relatemod.188_21 = relatemod;
  if (relatemod.188_21 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 27> :
  debugmod.189_22 = debugmod;
  if (debugmod.189_22 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 28> :
  mallocStmt_tree.190_23 = mallocStmt_tree;
  _24 = mallocStmt_tree.190_23->base.code;
  if (_24 == 153)
    goto <bb 29>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 29> :
  D.247329 = gimple_assign_lhs (gc);

  <bb 30> :
  _25 = D.247329;
  retval.191 = _25 != 0B;
  if (retval.191 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 31> :
  D.247330 = gimple_assign_lhs (gc);

  <bb 32> :
  _26 = D.247330;
  _27 = _26->base.code;
  if (_27 == 153)
    goto <bb 35>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  D.247331 = gimple_assign_lhs (gc);

  <bb 34> :
  _28 = D.247331;
  _29 = _28->base.code;
  if (_29 == 165)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  iftmp.193 = 1;
  goto <bb 37>; [INV]

  <bb 36> :
  iftmp.193 = 0;

  <bb 37> :
  retval.192 = iftmp.193;
  if (retval.192 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 38> :
  D.247332 = gimple_assign_lhs (gc);

  <bb 39> :
  _30 = D.247332;
  pi2 = _30->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 40> :
  D.247333 = gimple_assign_lhs (gc);

  <bb 41> :
  _31 = D.247333;
  mallocStmt_tree.195_32 = mallocStmt_tree;
  D.247334 = ptr_derefs_may_alias_p (mallocStmt_tree.195_32, _31);

  <bb 42> :
  retval.194 = D.247334;
  if (retval.194 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 43> :
  D.247335 = gimple_assign_rhs1 (gc);

  <bb 44> :
  _33 = D.247335;
  retval.196 = _33 != 0B;
  if (retval.196 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 45> :
  D.247336 = gimple_assign_lhs (gc);

  <bb 46> :
  _34 = D.247336;
  mallocStmt_tree.198_35 = mallocStmt_tree;
  D.247337 = ptr_derefs_may_alias_p (mallocStmt_tree.198_35, _34);

  <bb 47> :
  retval.197 = D.247337;
  if (retval.197 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 48> :
  D.247338 = gimple_assign_lhs (gc);

  <bb 49> :
  _36 = D.247338;
  _37 = _36->base.code;
  retval.199 = _37 == 131;
  if (retval.199 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 50> :
  D.247339 = gimple_assign_rhs1 (gc);

  <bb 51> :
  _38 = D.247339;
  mallocStmt_tree.201_39 = mallocStmt_tree;
  D.247340 = ptr_derefs_may_alias_p (mallocStmt_tree.201_39, _38);

  <bb 52> :
  retval.200 = D.247340;
  if (retval.200 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 53> :
  D.247341 = gimple_assign_rhs1 (gc);

  <bb 54> :
  _40 = D.247341;
  debug_tree (_40);

  <bb 55> :
  stderr.202_41 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.202_41);

  <bb 56> :
  stderr.203_42 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address (rhs)\x1b[0m\n", 1, 66, stderr.203_42);

  <bb 57> :
  stderr.204_43 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.204_43);

  <bb 58> :
  stderr.205_44 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.205_44);

  <bb 59> :
  D.247342 = gimple_assign_lhs (gc);

  <bb 60> :
  _45 = D.247342;
  _46 = _45->base.code;
  if (_46 == 153)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  D.247343 = gimple_assign_rhs1 (gc);

  <bb 62> :
  _47 = D.247343;
  _48 = _47->base.code;
  if (_48 == 26)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.207 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.207 = 0;

  <bb 65> :
  retval.206 = iftmp.207;
  if (retval.206 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  // predicted unlikely by continue predictor.
  goto <bb 278>; [INV]

  <bb 67> :
  D.247344 = gimple_assign_lhs (gc);

  <bb 68> :
  _49 = D.247344;
  _50 = _49->base.code;
  if (_50 == 165)
    goto <bb 69>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 69> :
  D.247345 = gimple_assign_rhs1 (gc);

  <bb 70> :
  _51 = D.247345;
  _52 = _51->base.code;
  if (_52 == 26)
    goto <bb 71>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 71> :
  iftmp.209 = 1;
  goto <bb 73>; [INV]

  <bb 72> :
  iftmp.209 = 0;

  <bb 73> :
  retval.208 = iftmp.209;
  if (retval.208 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 74> :
  D.247346 = gimple_assign_lhs (gc);

  <bb 75> :
  _53 = D.247346;
  first = _53->exp.operands[0];
  def_stmt = first->ssa_name.def_stmt;
  mallocStmt_tree.210_54 = mallocStmt_tree;
  def_stmt2 = mallocStmt_tree.210_54->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 76>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 76> :
  if (def_stmt2 != 0B)
    goto <bb 77>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 77> :
  pi4 = first->ssa_name.info.ptr_info;
  pt1 = &pi4->pt;
  pt2 = &pi1->pt;
  if (pt1 == 0B)
    goto <bb 79>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 78> :
  _55 = BIT_FIELD_REF <*pt1, 8, 0>;
  _56 = _55 & 1;
  if (_56 != 0)
    goto <bb 79>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 79> :
  // predicted unlikely by continue predictor.
  goto <bb 278>; [INV]

  <bb 80> :
  _57 = is_gimple_assign (def_stmt);
  if (_57 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 81> :
  _58 = is_gimple_assign (def_stmt2);
  if (_58 != 0)
    goto <bb 82>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 82> :
  iftmp.212 = 1;
  goto <bb 84>; [INV]

  <bb 83> :
  iftmp.212 = 0;

  <bb 84> :
  retval.211 = iftmp.212;
  if (retval.211 != 0)
    goto <bb 85>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 85> :
  D.247347 = gimple_assign_rhs1 (def_stmt);

  <bb 86> :
  _59 = D.247347;
  _60 = _59->base.code;
  _61 = (tree_code) _60;
  D.247348 = get_tree_code_name (_61);

  <bb 87> :
  _62 = D.247348;
  _63 = strcmp (_62, "<invalid tree code>");
  retval.213 = _63 == 0;
  if (retval.213 != 0)
    goto <bb 88>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 88> :
  D.247349 = gimple_assign_rhs1 (def_stmt2);

  <bb 89> :
  _64 = D.247349;
  _65 = _64->base.code;
  _66 = (tree_code) _65;
  D.247350 = get_tree_code_name (_66);

  <bb 90> :
  _67 = D.247350;
  _68 = strcmp (_67, "<invalid tree code>");
  retval.214 = _68 == 0;
  if (retval.214 != 0)
    goto <bb 91>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 91> :
  _69 = BIT_FIELD_REF <*pt1, 8, 0>;
  _70 = _69 & 2;
  if (_70 == 0)
    goto <bb 92>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 92> :
  _71 = BIT_FIELD_REF <*pt2, 8, 0>;
  _72 = _71 & 2;
  if (_72 == 0)
    goto <bb 93>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 93> :
  D.247351 = gimple_assign_rhs1 (def_stmt2);

  <bb 94> :
  _73 = D.247351;
  retval.215 = _73 != 0B;
  if (retval.215 != 0)
    goto <bb 95>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 95> :
  D.247352 = gimple_assign_rhs1 (def_stmt2);

  <bb 96> :
  _74 = D.247352;
  _75 = is_global_var (_74);
  retval.216 = ~_75;
  if (retval.216 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 97> :
  if (pt1 != 0B)
    goto <bb 98>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 98> :
  D.247353 = gimple_assign_rhs1 (def_stmt);

  <bb 99> :
  _76 = D.247353;
  retval.217 = _76 != 0B;
  if (retval.217 != 0)
    goto <bb 100>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 100> :
  D.247354 = gimple_assign_rhs1 (def_stmt);

  <bb 101> :
  _77 = D.247354;
  retval.218 = is_global_var (_77);
  if (retval.218 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 102> :
  mallocStmt_tree.220_78 = mallocStmt_tree;
  D.247355 = ptr_derefs_may_alias_p (mallocStmt_tree.220_78, first);

  <bb 103> :
  _79 = D.247355;
  retval.219 = ~_79;
  if (retval.219 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 104> :
  // predicted unlikely by continue predictor.
  goto <bb 278>; [INV]

  <bb 105> :
  // predicted unlikely by continue predictor.
  goto <bb 278>; [INV]

  <bb 106> :
  goto <bb 108>; [INV]

  <bb 107> :
  // predicted unlikely by continue predictor.
  goto <bb 278>; [INV]

  <bb 108> :
  goto <bb 128>; [INV]

  <bb 109> :
  D.247356 = gimple_assign_rhs1 (gc);

  <bb 110> :
  _80 = D.247356;
  _81 = _80->base.code;
  retval.221 = _81 == 36;
  if (retval.221 != 0)
    goto <bb 111>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 111> :
  D.247357 = gimple_assign_lhs (gc);

  <bb 112> :
  _82 = D.247357;
  mallocStmt_tree.223_83 = mallocStmt_tree;
  D.247358 = ptr_derefs_may_alias_p (mallocStmt_tree.223_83, _82);

  <bb 113> :
  retval.222 = D.247358;
  if (retval.222 != 0)
    goto <bb 114>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 114> :
  D.247359 = gimple_assign_rhs1 (gc);

  <bb 115> :
  _84 = D.247359;
  retval.224 = is_global_var (_84);
  if (retval.224 != 0)
    goto <bb 116>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 116> :
  // predicted unlikely by continue predictor.
  goto <bb 278>; [INV]

  <bb 117> :
  D.247360 = gimple_assign_rhs1 (gc);

  <bb 118> :
  _85 = D.247360;
  _86 = _85->base.code;
  retval.225 = _86 == 153;
  if (retval.225 != 0)
    goto <bb 119>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 119> :
  D.247361 = gimple_assign_lhs (gc);

  <bb 120> :
  _87 = D.247361;
  pi3 = _87->ssa_name.info.ptr_info;
  D.247362 = gimple_assign_rhs1 (gc);

  <bb 121> :
  _88 = D.247362;
  pi4 = _88->ssa_name.info.ptr_info;
  pt3 = &pi3->pt;
  pt4 = &pi4->pt;
  if (pt3 == 0B)
    goto <bb 123>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 122> :
  if (pt4 == 0B)
    goto <bb 123>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 123> :
  // predicted unlikely by continue predictor.
  goto <bb 278>; [INV]

  <bb 124> :
  D.247363 = gimple_assign_rhs1 (gc);

  <bb 125> :
  _89 = D.247363;
  mallocStmt_tree.227_90 = mallocStmt_tree;
  D.247364 = ptr_derefs_may_alias_p (mallocStmt_tree.227_90, _89);

  <bb 126> :
  _91 = D.247364;
  retval.226 = ~_91;
  if (retval.226 != 0)
    goto <bb 127>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 127> :
  // predicted unlikely by continue predictor.
  goto <bb 278>; [INV]

  <bb 128> :
  mallocStmt_tree.228_92 = mallocStmt_tree;
  D.247365 = get_name (mallocStmt_tree.228_92);

  <bb 129> :
  _93 = D.247365;
  stderr.229_94 = stderr;
  fprintf (stderr.229_94, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _93);

  <bb 130> :
  D.247366 = gimple_assign_lhs (gc);

  <bb 131> :
  _95 = D.247366;
  D.247367 = get_name (_95);

  <bb 132> :
  _96 = D.247367;
  stderr.230_97 = stderr;
  fprintf (stderr.230_97, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _96);

  <bb 133> :
  stderr.231_98 = stderr;
  __builtin_fwrite ("\n\n\n\n", 1, 4, stderr.231_98);

  <bb 134> :
  _99 = rand ();
  x = (long unsigned int) _99;
  freemod.232_100 = freemod;
  _101 = (int) freemod.232_100;
  if (_101 == 1)
    goto <bb 135>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 135> :
  if (seccount == 0)
    goto <bb 136>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 136> :
  stderr.233_102 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.233_102);
  goto <bb 142>; [INV]

  <bb 137> :
  now_laststmt.234_103 = now_laststmt;
  if (now_laststmt.234_103 != 0B)
    goto <bb 138>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 138> :
  now_laststmtid.235_104 = now_laststmtid;
  stderr.236_105 = stderr;
  fprintf (stderr.236_105, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.235_104);

  <bb 139> :
  now_laststmt.237_106 = now_laststmt;
  debug (now_laststmt.237_106);

  <bb 140> :
  now_laststmt.238_107 = now_laststmt;
  _108 = gimple_location (now_laststmt.238_107);
  warning_at (_108, 0, "use location");

  <bb 141> :
  stderr.239_109 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.239_109);

  <bb 142> :
  stderr.240_110 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.240_110);
  goto <bb 153>; [INV]

  <bb 143> :
  fistconunt.241_111 = fistconunt;
  if (fistconunt.241_111 == 0)
    goto <bb 144>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 144> :
  stderr.242_112 = stderr;
  __builtin_fwrite ("dot graph start relate form", 1, 27, stderr.242_112);

  <bb 145> :
  fistconunt.243_113 = fistconunt;
  _114 = fistconunt.243_113 + 1;
  fistconunt = _114;
  goto <bb 153>; [INV]

  <bb 146> :
  now_laststmt.244_115 = now_laststmt;
  if (now_laststmt.244_115 != 0B)
    goto <bb 147>; [INV]
  else
    goto <bb 152>; [INV]

  <bb 147> :
  now_laststmtid.245_116 = now_laststmtid;
  stderr.246_117 = stderr;
  fprintf (stderr.246_117, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.245_116);

  <bb 148> :
  now_laststmt.247_118 = now_laststmt;
  debug (now_laststmt.247_118);

  <bb 149> :
  now_laststmt.248_119 = now_laststmt;
  _120 = gimple_location (now_laststmt.248_119);
  warning_at (_120, 0, "use location");

  <bb 150> :
  stderr.249_121 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.249_121);

  <bb 151> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 152> :
  stderr.250_122 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.250_122);

  <bb 153> :
  fistconunt.251_123 = fistconunt;
  _124 = fistconunt.251_123 + 1;
  fistconunt = _124;
  now_fucntion.252_125 = now_fucntion;
  stderr.253_126 = stderr;
  fprintf (stderr.253_126, "ID : %lu\n", now_fucntion.252_125);

  <bb 154> :
  _127 = gimple_bb (gc);
  _128 = _127->index;
  D.247368 = get_name (function_tree);

  <bb 155> :
  _129 = D.247368;
  stderr.254_130 = stderr;
  fprintf (stderr.254_130, "from %s basic block %d", _129, _128);

  <bb 156> :
  stderr.255_131 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.255_131);

  <bb 157> :
  _132 = gimple_location (gc);
  warning_at (_132, 0, "use location");

  <bb 158> :
  stderr.256_133 = stderr;
  fprintf (stderr.256_133, "dot graph relate stmt start ID : %lu stmt(LHS) :", x);

  <bb 159> :
  debug (gc);

  <bb 160> :
  _134 = gimple_location (gc);
  warning_at (_134, 0, "use location");

  <bb 161> :
  D.247369 = gimple_assign_lhs (gc);

  <bb 162> :
  _135 = D.247369;
  debug (_135);

  <bb 163> :
  stderr.257_136 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.257_136);

  <bb 164> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;
  stderr.258_137 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.258_137);

  <bb 165> :
  stderr.259_138 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.259_138);

  <bb 166> :
  stderr.260_139 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.260_139);

  <bb 167> :
  stderr.261_140 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.261_140);

  <bb 168> :
  D.247370 = gimple_assign_lhs (gc);

  <bb 169> :
  _141 = D.247370;
  _142 = _141->base.code;
  if (_142 == 49)
    goto <bb 171>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 170> :
  mallocStmt_tree.264_143 = mallocStmt_tree;
  _144 = mallocStmt_tree.264_143->base.code;
  if (_144 == 153)
    goto <bb 171>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 171> :
  iftmp.263 = 1;
  goto <bb 173>; [INV]

  <bb 172> :
  iftmp.263 = 0;

  <bb 173> :
  retval.262 = iftmp.263;
  if (retval.262 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 174> :
  second = 0B;
  D.247371 = gimple_assign_lhs (gc);

  <bb 175> :
  _145 = D.247371;
  second = _145->exp.operands[0];
  D.247372 = gimple_assign_lhs (gc);

  <bb 176> :
  _146 = D.247372;
  _147 = _146->base.code;
  retval.265 = _147 == 49;
  if (retval.265 != 0)
    goto <bb 177>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 177> :
  D.247373 = gimple_assign_lhs (gc);

  <bb 178> :
  _148 = D.247373;
  second = _148->exp.operands[0];

  <bb 179> :
  if (second != 0B)
    goto <bb 180>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 180> :
  mallocStmt_tree.266_149 = mallocStmt_tree;
  _150 = mallocStmt_tree.266_149->base.code;
  if (_150 == 36)
    goto <bb 181>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 181> :
  _151 = second->base.code;
  if (_151 == 36)
    goto <bb 182>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 182> :
  mallocStmt_tree.267_152 = mallocStmt_tree;
  if (second == mallocStmt_tree.267_152)
    goto <bb 183>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 183> :
  D.247374 = get_name (function_tree);

  <bb 184> :
  _153 = D.247374;
  stderr.268_154 = stderr;
  fprintf (stderr.268_154, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _153);

  <bb 185> :
  D.247375 = gimple_assign_lhs (gc);

  <bb 186> :
  _155 = D.247375;
  stderr.269_156 = stderr;
  fprintf (stderr.269_156, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _155);

  <bb 187> :
  debug_gimple_stmt (gc);

  <bb 188> :
  _157 = gimple_location (gc);
  warning_at (_157, 0, "use location");

  <bb 189> :
  stderr.270_158 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.270_158);

  <bb 190> :
  stderr.271_159 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.271_159);

  <bb 191> :
  stderr.272_160 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.272_160);

  <bb 192> :
  stderr.273_161 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.273_161);

  <bb 193> :
  if (second == 0B)
    goto <bb 194>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 194> :
  mallocStmt_tree.274_162 = mallocStmt_tree;
  _163 = mallocStmt_tree.274_162->base.code;
  if (_163 == 153)
    goto <bb 195>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 195> :
  D.247376 = gimple_assign_rhs1 (gc);

  <bb 196> :
  _164 = D.247376;
  _165 = _164->base.code;
  retval.275 = _165 == 153;
  if (retval.275 != 0)
    goto <bb 197>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 197> :
  D.247377 = gimple_assign_rhs1 (gc);

  <bb 198> :
  _166 = D.247377;
  def_stmt = _166->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 199>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 199> :
  _167 = gimple_code (def_stmt);
  if (_167 != 18)
    goto <bb 200>; [INV]
  else
    goto <bb 207>; [INV]

  <bb 200> :
  D.247378 = gimple_assign_lhs (gc);

  <bb 201> :
  _168 = D.247378;
  mallocStmt_tree.278_169 = mallocStmt_tree;
  D.247379 = ptr_derefs_may_alias_p (mallocStmt_tree.278_169, _168);

  <bb 202> :
  _170 = D.247379;
  if (_170 != 0)
    goto <bb 203>; [INV]
  else
    goto <bb 207>; [INV]

  <bb 203> :
  D.247380 = gimple_assign_rhs1 (gc);

  <bb 204> :
  _171 = D.247380;
  mallocStmt_tree.279_172 = mallocStmt_tree;
  D.247381 = ptr_derefs_may_alias_p (mallocStmt_tree.279_172, _171);

  <bb 205> :
  _173 = D.247381;
  if (_173 != 0)
    goto <bb 206>; [INV]
  else
    goto <bb 207>; [INV]

  <bb 206> :
  iftmp.277 = 1;
  goto <bb 208>; [INV]

  <bb 207> :
  iftmp.277 = 0;

  <bb 208> :
  retval.276 = iftmp.277;
  if (retval.276 != 0)
    goto <bb 209>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 209> :
  D.247382 = get_name (function_tree);

  <bb 210> :
  _174 = D.247382;
  stderr.280_175 = stderr;
  fprintf (stderr.280_175, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _174);

  <bb 211> :
  D.247383 = gimple_assign_lhs (gc);

  <bb 212> :
  _176 = D.247383;
  stderr.281_177 = stderr;
  fprintf (stderr.281_177, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _176);

  <bb 213> :
  debug_gimple_stmt (gc);

  <bb 214> :
  _178 = gimple_location (gc);
  warning_at (_178, 0, "use location");

  <bb 215> :
  stderr.282_179 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.282_179);

  <bb 216> :
  stderr.283_180 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.283_180);

  <bb 217> :
  stderr.284_181 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.284_181);

  <bb 218> :
  stderr.285_182 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.285_182);
  goto <bb 278>; [INV]

  <bb 219> :
  _183 = is_gimple_call (gc);
  _184 = (long int) _183;
  retval.286 = _184 != 0;
  if (retval.286 != 0)
    goto <bb 220>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 220> :
  mallocStmt_tree.287_185 = mallocStmt_tree;
  pi1 = mallocStmt_tree.287_185->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 221>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 221> :
  relatemod.288_186 = relatemod;
  if (relatemod.288_186 != 0)
    goto <bb 222>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 222> :
  debugmod.289_187 = debugmod;
  if (debugmod.289_187 != 0)
    goto <bb 223>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 223> :
  D.247384 = gimple_call_num_args (gc);

  <bb 224> :
  _188 = D.247384;
  retval.290 = _188 != 0;
  if (retval.290 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 225> :
  D.247385 = gimple_call_fn (gc);

  <bb 226> :
  _189 = D.247385;
  D.247386 = get_name (_189);

  <bb 227> :
  name = D.247386;
  D.247387 = gimple_call_lhs (gc);

  <bb 228> :
  _190 = D.247387;
  retval.291 = _190 != 0B;
  if (retval.291 != 0)
    goto <bb 229>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 229> :
  D.247388 = gimple_call_lhs (gc);

  <bb 230> :
  _191 = D.247388;
  _192 = _191->base.code;
  if (_192 == 153)
    goto <bb 236>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 231> :
  D.247389 = gimple_call_arg (gc, 0);

  <bb 232> :
  _193 = D.247389;
  _194 = _193->base.code;
  if (_194 == 153)
    goto <bb 236>; [INV]
  else
    goto <bb 233>; [INV]

  <bb 233> :
  D.247390 = gimple_call_arg (gc, 0);

  <bb 234> :
  _195 = D.247390;
  _196 = _195->base.code;
  _197 = (tree_code) _196;
  D.247391 = get_tree_code_name (_197);

  <bb 235> :
  _198 = D.247391;
  _199 = strcmp (_198, "addr_expr");
  if (_199 == 0)
    goto <bb 236>; [INV]
  else
    goto <bb 237>; [INV]

  <bb 236> :
  iftmp.293 = 1;
  goto <bb 238>; [INV]

  <bb 237> :
  iftmp.293 = 0;

  <bb 238> :
  retval.292 = iftmp.293;
  if (retval.292 != 0)
    goto <bb 239>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 239> :
  if (name != 0B)
    goto <bb 240>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 240> :
  _200 = strcmp (name, "pthread_mutex_lock");
  if (_200 == 0)
    goto <bb 243>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 241> :
  _201 = strcmp (name, "pthread_mutex_unlock");
  if (_201 == 0)
    goto <bb 243>; [INV]
  else
    goto <bb 242>; [INV]

  <bb 242> :
  _202 = strcmp (name, "pthread_exit");
  if (_202 == 0)
    goto <bb 243>; [INV]
  else
    goto <bb 244>; [INV]

  <bb 243> :
  // predicted unlikely by continue predictor.
  goto <bb 278>; [INV]

  <bb 244> :
  D.247392 = gimple_call_arg (gc, 0);

  <bb 245> :
  _203 = D.247392;
  pi2 = _203->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 246>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 246> :
  D.247393 = gimple_call_arg (gc, 0);

  <bb 247> :
  _204 = D.247393;
  mallocStmt_tree.295_205 = mallocStmt_tree;
  D.247394 = ptr_derefs_may_alias_p (mallocStmt_tree.295_205, _204);

  <bb 248> :
  retval.294 = D.247394;
  if (retval.294 != 0)
    goto <bb 249>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 249> :
  _206 = rand ();
  x = (long unsigned int) _206;
  freemod.296_207 = freemod;
  _208 = (int) freemod.296_207;
  if (_208 == 1)
    goto <bb 250>; [INV]
  else
    goto <bb 258>; [INV]

  <bb 250> :
  if (seccount == 0)
    goto <bb 251>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 251> :
  stderr.297_209 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.297_209);
  goto <bb 257>; [INV]

  <bb 252> :
  now_laststmt.298_210 = now_laststmt;
  if (now_laststmt.298_210 != 0B)
    goto <bb 253>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 253> :
  now_laststmtid.299_211 = now_laststmtid;
  stderr.300_212 = stderr;
  fprintf (stderr.300_212, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.299_211);

  <bb 254> :
  now_laststmt.301_213 = now_laststmt;
  debug (now_laststmt.301_213);

  <bb 255> :
  now_laststmt.302_214 = now_laststmt;
  _215 = gimple_location (now_laststmt.302_214);
  warning_at (_215, 0, "use location");

  <bb 256> :
  stderr.303_216 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.303_216);

  <bb 257> :
  stderr.304_217 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.304_217);
  goto <bb 268>; [INV]

  <bb 258> :
  fistconunt.305_218 = fistconunt;
  if (fistconunt.305_218 == 0)
    goto <bb 259>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 259> :
  stderr.306_219 = stderr;
  __builtin_fwrite ("dot graph start relate form", 1, 27, stderr.306_219);

  <bb 260> :
  fistconunt.307_220 = fistconunt;
  _221 = fistconunt.307_220 + 1;
  fistconunt = _221;
  goto <bb 268>; [INV]

  <bb 261> :
  now_laststmt.308_222 = now_laststmt;
  if (now_laststmt.308_222 != 0B)
    goto <bb 262>; [INV]
  else
    goto <bb 267>; [INV]

  <bb 262> :
  now_laststmtid.309_223 = now_laststmtid;
  stderr.310_224 = stderr;
  fprintf (stderr.310_224, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.309_223);

  <bb 263> :
  now_laststmt.311_225 = now_laststmt;
  debug (now_laststmt.311_225);

  <bb 264> :
  now_laststmt.312_226 = now_laststmt;
  _227 = gimple_location (now_laststmt.312_226);
  warning_at (_227, 0, "use location");

  <bb 265> :
  stderr.313_228 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.313_228);

  <bb 266> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 267> :
  stderr.314_229 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.314_229);

  <bb 268> :
  fistconunt.315_230 = fistconunt;
  _231 = fistconunt.315_230 + 1;
  fistconunt = _231;
  now_fucntion.316_232 = now_fucntion;
  stderr.317_233 = stderr;
  fprintf (stderr.317_233, "ID : %lu\n", now_fucntion.316_232);

  <bb 269> :
  _234 = gimple_bb (gc);
  _235 = _234->index;
  D.247395 = get_name (function_tree);

  <bb 270> :
  _236 = D.247395;
  stderr.318_237 = stderr;
  fprintf (stderr.318_237, "from %s basic block %d", _236, _235);

  <bb 271> :
  stderr.319_238 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.319_238);

  <bb 272> :
  stderr.320_239 = stderr;
  fprintf (stderr.320_239, "dot graph relate stmt start ID : %lu stmt(call) :", x);

  <bb 273> :
  debug (gc);

  <bb 274> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;
  _240 = gimple_location (gc);
  warning_at (_240, 0, "use location");

  <bb 275> :
  D.247396 = gimple_call_arg (gc, 0);

  <bb 276> :
  _241 = D.247396;
  debug (_241);

  <bb 277> :
  stderr.321_242 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.321_242);

  <bb 278> :
  gsi_next (&gsi);

  <bb 279> :
  _243 = gsi_end_p (gsi);
  retval.322 = ~_243;
  if (retval.322 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 280>; [INV]

  <bb 280> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 281> :
  cfun.323_244 = cfun;
  _245 = cfun.323_244->cfg;
  _246 = _245->x_exit_block_ptr;
  if (bb != _246)
    goto <bb 14>; [INV]
  else
    goto <bb 282>; [INV]

  <bb 282> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  now_relatelaststmt.324_247 = now_relatelaststmt;
  if (now_relatelaststmt.324_247 != 0B)
    goto <bb 283>; [INV]
  else
    goto <bb 292>; [INV]

  <bb 283> :
  function_relate_collect.326_248 = function_relate_collect;
  D.247398 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.326_248, &mallocStmt_tree);

  <bb 284> :
  _249 = D.247398;
  retval.325 = _249 == 0B;
  if (retval.325 != 0)
    goto <bb 285>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 285> :
  std::vector<relate_type>::operator= (&fun_array.relate_type_array, &relate_type_array);
  goto <bb 289>; [INV]

  <bb 286> :
  function_relate_collect.327_250 = function_relate_collect;
  D.247399 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.327_250, &mallocStmt_tree);

  <bb 287> :
  _251 = D.247399;
  function_relate_array::operator= (&fun_array, _251);

  <bb 288> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 289> :
  relate_type::relate_type (&relate_type);
  now_relatelaststmt.328_252 = now_relatelaststmt;
  relate_type.stmt = now_relatelaststmt.328_252;
  mallocStmt_tree.329_253 = mallocStmt_tree;
  relate_type.relate_tree = mallocStmt_tree.329_253;
  relate_type.relate_funtree = function_tree;
  now_fucntion.330_254 = now_fucntion;
  _255 = (unsigned int) now_fucntion.330_254;
  relate_type.now_fucntion = _255;
  now_laststmtid.331_256 = now_laststmtid;
  _257 = (unsigned int) now_laststmtid.331_256;
  relate_type.now_stmt = _257;
  std::vector<relate_type>::push_back (&fun_array.relate_type_array, &relate_type);

  <bb 290> :
  function_relate_collect.332_258 = function_relate_collect;
  hash_map<tree_node*, function_relate_array>::put (function_relate_collect.332_258, &mallocStmt_tree, &fun_array);

  <bb 291> :
  relate_type = {CLOBBER};

  <bb 292> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 293> :
  pop_cfun ();

  <bb 294> :
  symtab.333_259 = symtab;
  D.247404 = symbol_table::next_defined_function (symtab.333_259, node);
  node = D.247404;

  <bb 295> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 296>; [INV]

  <bb 296> :
  stderr.334_260 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.334_260);

  <bb 297> :
<L255>:
  return;

  <bb 298> :
<L256>:
  gsi = {CLOBBER};
  resx 2

  <bb 299> :
<L257>:
  relate_type = {CLOBBER};
  resx 6

  <bb 300> :
<L258>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 5

  <bb 301> :
<L259>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 4

  <bb 302> :
<L260>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 1

}



;; Function is_gimple_assign (_ZL16is_gimple_assignPK6gimple, funcdef_no=2062, decl_uid=92605, cgraph_uid=1199, symbol_order=1359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_assign (const struct gimple * gs)
{
  bool D.247405;

  <bb 2> :
  _1 = gimple_code (gs);
  D.247405 = _1 == 6;

  <bb 3> :
<L0>:
  return D.247405;

}



;; Function is_global_var (_ZL13is_global_varPK9tree_node, funcdef_no=1820, decl_uid=85582, cgraph_uid=968, symbol_order=1128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_global_var (const union tree_node * t)
{
  bool iftmp.335;
  bool D.247407;

  <bb 2> :
  _1 = BIT_FIELD_REF <t->base, 8, 24>;
  _2 = _1 & 4;
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = BIT_FIELD_REF <t->decl_common, 8, 472>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.335 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.335 = 0;

  <bb 6> :
  D.247407 = iftmp.335;

  <bb 7> :
<L4>:
  return D.247407;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK6gimple, funcdef_no=2071, decl_uid=92645, cgraph_uid=1208, symbol_order=1368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gimple * gs)
{
  const struct gassign * D.247416;
  const struct gassign * ass;
  union tree_node * D.247414;

  <bb 2> :
  D.247416 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.247416;
  D.247414 = gimple_assign_rhs1 (ass);

  <bb 3> :
<L0>:
  return D.247414;

}



;; Function GIMPLE_CHECK2<const gassign*> (_Z13GIMPLE_CHECK2IPK7gassignET_PK6gimple, funcdef_no=7043, decl_uid=92617, cgraph_uid=3675, symbol_order=4454)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * GIMPLE_CHECK2<const gassign*> (const struct gimple * gs)
{
  const struct gassign * D.247419;
  const struct gassign * D.247417;

  <bb 2> :
  D.247419 = as_a<const gassign*, const gimple> (gs);
  D.247417 = D.247419;

  <bb 3> :
<L0>:
  return D.247417;

}



;; Function as_a<const gassign*, const gimple> (_Z4as_aIPK7gassignK6gimpleET_PT0_, funcdef_no=8033, decl_uid=205821, cgraph_uid=4665, symbol_order=5447)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * as_a<const gassign*, const gimple> (const struct gimple * p)
{
  const struct gassign * D.247422;
  const struct gassign * D.247420;

  <bb 2> :
  D.247422 = is_a_helper<const gassign*>::cast<gimple> (p);
  D.247420 = D.247422;

  <bb 3> :
<L0>:
  return D.247420;

}



;; Function is_a_helper<const gassign*>::cast<gimple> (_ZN11is_a_helperIPK7gassignE4castI6gimpleEES2_PKT_, funcdef_no=8040, decl_uid=205859, cgraph_uid=4672, symbol_order=5454)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * is_a_helper<const gassign*>::cast<gimple> (const struct gimple * p)
{
  const struct gassign * D.247423;

  <bb 2> :
  D.247423 = reinterpret_is_a_helper<gassign*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.247423;

}



;; Function reinterpret_is_a_helper<gassign*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7gassignE4castI6gimpleEES1_PT_, funcdef_no=8994, decl_uid=217981, cgraph_uid=5626, symbol_order=6412)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gassign * reinterpret_is_a_helper<gassign*>::cast<gimple> (struct gimple * p)
{
  struct gassign * D.247425;

  <bb 2> :
  D.247425 = p;

  <bb 3> :
<L0>:
  return D.247425;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK7gassign, funcdef_no=2070, decl_uid=92642, cgraph_uid=1207, symbol_order=1367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gassign * gs)
{
  union tree_node * D.247427;

  <bb 2> :
  D.247427 = gs->D.90479.op[1];

  <bb 3> :
<L0>:
  return D.247427;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK6gimple, funcdef_no=2065, decl_uid=92614, cgraph_uid=1202, symbol_order=1362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gimple * gs)
{
  const struct gassign * D.247431;
  const struct gassign * ass;
  union tree_node * D.247429;

  <bb 2> :
  D.247431 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.247431;
  D.247429 = gimple_assign_lhs (ass);

  <bb 3> :
<L0>:
  return D.247429;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK7gassign, funcdef_no=2064, decl_uid=92611, cgraph_uid=1201, symbol_order=1361)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gassign * gs)
{
  union tree_node * D.247432;

  <bb 2> :
  D.247432 = gs->D.90479.op[0];

  <bb 3> :
<L0>:
  return D.247432;

}



;; Function is_gimple_call (_ZL14is_gimple_callPK6gimple, funcdef_no=2100, decl_uid=92760, cgraph_uid=1237, symbol_order=1397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_call (const struct gimple * gs)
{
  bool D.247434;

  <bb 2> :
  _1 = gimple_code (gs);
  D.247434 = _1 == 8;

  <bb 3> :
<L0>:
  return D.247434;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK6gimple, funcdef_no=2139, decl_uid=92913, cgraph_uid=1276, symbol_order=1436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gimple * gs)
{
  const struct gcall * D.247438;
  const struct gcall * gc;
  unsigned int D.247436;

  <bb 2> :
  D.247438 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247438;
  D.247436 = gimple_call_num_args (gc);

  <bb 3> :
<L0>:
  return D.247436;

}



;; Function GIMPLE_CHECK2<const gcall*> (_Z13GIMPLE_CHECK2IPK5gcallET_PK6gimple, funcdef_no=7045, decl_uid=92769, cgraph_uid=3677, symbol_order=4456)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * GIMPLE_CHECK2<const gcall*> (const struct gimple * gs)
{
  const struct gcall * D.247441;
  const struct gcall * D.247439;

  <bb 2> :
  D.247441 = as_a<const gcall*, const gimple> (gs);
  D.247439 = D.247441;

  <bb 3> :
<L0>:
  return D.247439;

}



;; Function as_a<const gcall*, const gimple> (_Z4as_aIPK5gcallK6gimpleET_PT0_, funcdef_no=7072, decl_uid=94348, cgraph_uid=3704, symbol_order=4483)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * as_a<const gcall*, const gimple> (const struct gimple * p)
{
  const struct gcall * D.247444;
  const struct gcall * D.247442;

  <bb 2> :
  D.247444 = is_a_helper<const gcall*>::cast<gimple> (p);
  D.247442 = D.247444;

  <bb 3> :
<L0>:
  return D.247442;

}



;; Function is_a_helper<const gcall*>::cast<gimple> (_ZN11is_a_helperIPK5gcallE4castI6gimpleEES2_PKT_, funcdef_no=8037, decl_uid=205845, cgraph_uid=4669, symbol_order=5451)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * is_a_helper<const gcall*>::cast<gimple> (const struct gimple * p)
{
  const struct gcall * D.247445;

  <bb 2> :
  D.247445 = reinterpret_is_a_helper<gcall*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.247445;

}



;; Function reinterpret_is_a_helper<gcall*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcallE4castI6gimpleEES1_PT_, funcdef_no=8996, decl_uid=217989, cgraph_uid=5628, symbol_order=6414)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcall * reinterpret_is_a_helper<gcall*>::cast<gimple> (struct gimple * p)
{
  struct gcall * D.247447;

  <bb 2> :
  D.247447 = p;

  <bb 3> :
<L0>:
  return D.247447;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK5gcall, funcdef_no=2138, decl_uid=92910, cgraph_uid=1275, symbol_order=1435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gcall * gs)
{
  unsigned int D.247449;

  <bb 2> :
  _1 = gimple_num_ops (gs);
  D.247449 = _1 + 4294967293;

  <bb 3> :
<L0>:
  return D.247449;

}



;; Function gimple_num_ops (_ZL14gimple_num_opsPK6gimple, funcdef_no=2056, decl_uid=92581, cgraph_uid=1193, symbol_order=1353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_num_ops (const struct gimple * gs)
{
  unsigned int D.247451;

  <bb 2> :
  D.247451 = gs->num_ops;

  <bb 3> :
<L0>:
  return D.247451;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK6gimple, funcdef_no=2124, decl_uid=92857, cgraph_uid=1261, symbol_order=1421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gimple * gs)
{
  const struct gcall * D.247455;
  const struct gcall * gc;
  union tree_node * D.247453;

  <bb 2> :
  D.247455 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247455;
  D.247453 = gimple_call_fn (gc);

  <bb 3> :
<L0>:
  return D.247453;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK5gcall, funcdef_no=2123, decl_uid=92854, cgraph_uid=1260, symbol_order=1420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gcall * gs)
{
  union tree_node * D.247456;

  <bb 2> :
  D.247456 = gs->op[1];

  <bb 3> :
<L0>:
  return D.247456;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK6gimple, funcdef_no=2102, decl_uid=92766, cgraph_uid=1239, symbol_order=1399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gimple * gs)
{
  const struct gcall * D.247460;
  const struct gcall * gc;
  union tree_node * D.247458;

  <bb 2> :
  D.247460 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247460;
  D.247458 = gimple_call_lhs (gc);

  <bb 3> :
<L0>:
  return D.247458;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK5gcall, funcdef_no=2101, decl_uid=92763, cgraph_uid=1238, symbol_order=1398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gcall * gs)
{
  union tree_node * D.247461;

  <bb 2> :
  D.247461 = gs->op[0];

  <bb 3> :
<L0>:
  return D.247461;

}



;; Function gimple_bb (_ZL9gimple_bbPK6gimple, funcdef_no=2000, decl_uid=92273, cgraph_uid=1137, symbol_order=1297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * gimple_bb (const struct gimple * g)
{
  struct basic_block_def * D.247463;

  <bb 2> :
  D.247463 = g->bb;

  <bb 3> :
<L0>:
  return D.247463;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK6gimplej, funcdef_no=2141, decl_uid=92922, cgraph_uid=1278, symbol_order=1438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gimple * gs, unsigned int index)
{
  const struct gcall * D.247467;
  const struct gcall * gc;
  union tree_node * D.247465;

  <bb 2> :
  D.247467 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247467;
  D.247465 = gimple_call_arg (gc, index);

  <bb 3> :
<L0>:
  return D.247465;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK5gcallj, funcdef_no=2140, decl_uid=92918, cgraph_uid=1277, symbol_order=1437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gcall * gs, unsigned int index)
{
  union tree_node * D.247468;

  <bb 2> :
  _1 = index + 3;
  D.247468 = gs->op[_1];

  <bb 3> :
<L0>:
  return D.247468;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2Ev, funcdef_no=6304, decl_uid=179786, cgraph_uid=3279, symbol_order=4052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179794;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2Ev, funcdef_no=6302, decl_uid=179244, cgraph_uid=3276, symbol_order=4049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7631, decl_uid=179136, cgraph_uid=4263, symbol_order=5045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this);
  _1 = &this->D.179139;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2Ev, funcdef_no=8480, decl_uid=178914, cgraph_uid=5112, symbol_order=5898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2Ev, funcdef_no=9244, decl_uid=178843, cgraph_uid=5876, symbol_order=6662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8483, decl_uid=179086, cgraph_uid=5115, symbol_order=5901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2Ev, funcdef_no=6307, decl_uid=191330, cgraph_uid=3282, symbol_order=4055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::vector (_1);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::get (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7642, decl_uid=191417, cgraph_uid=4274, symbol_order=5056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_relate_array * hash_map<tree_node*, function_relate_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.247478;
  struct hash_entry & D.247477;
  unsigned int D.247476;
  struct hash_entry & e;
  struct function_relate_array * iftmp.336;
  struct function_relate_array * D.247470;

  <bb 2> :
  _1 = &this->m_table;
  D.247476 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.247476;
  D.247477 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.247477;
  D.247478 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  _3 = D.247478;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.336 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.336 = &e->m_value;

  <bb 5> :
  D.247470 = iftmp.336;

  <bb 6> :
<L3>:
  return D.247470;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE4hashERKS2_, funcdef_no=8491, decl_uid=191373, cgraph_uid=5123, symbol_order=5909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (union tree_node * const & h)
{
  hashval_t D.247479;

  <bb 2> :
  D.247479 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.247479;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8492, decl_uid=191560, cgraph_uid=5124, symbol_order=5910)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.247513;
  bool D.247512;
  bool D.247511;
  bool D.247510;
  bool D.247509;
  bool D.247508;
  struct value_type * D.247507;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.340;
  bool retval.339;
  struct value_type & D.247493;
  bool iftmp.338;
  bool retval.337;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.247508 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.247508;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.247509 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.247509;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.247510 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _11 = D.247510;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.338 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.338 = 0;

  <bb 8> :
  retval.337 = iftmp.338;
  if (retval.337 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.247493 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.247511 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.247511;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.247512 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.247512;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.247513 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _23 = D.247513;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.340 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.340 = 0;

  <bb 18> :
  retval.339 = iftmp.340;
  if (retval.339 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.247493 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.247493;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8730, decl_uid=191656, cgraph_uid=5362, symbol_order=6148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.247516;
  bool D.247514;

  <bb 2> :
  D.247516 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (v);
  D.247514 = D.247516;

  <bb 3> :
<L0>:
  return D.247514;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8512, decl_uid=191486, cgraph_uid=5144, symbol_order=5930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.247519;
  bool D.247517;

  <bb 2> :
  D.247519 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.247517 = D.247519;

  <bb 3> :
<L0>:
  return D.247517;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8731, decl_uid=191654, cgraph_uid=5363, symbol_order=6149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.247522;
  bool D.247520;

  <bb 2> :
  D.247522 = hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (v);
  D.247520 = D.247522;

  <bb 3> :
<L0>:
  return D.247520;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9552, decl_uid=191481, cgraph_uid=6184, symbol_order=6970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.247525;
  bool D.247523;

  <bb 2> :
  D.247525 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.247523 = D.247525;

  <bb 3> :
<L0>:
  return D.247523;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10147, decl_uid=235472, cgraph_uid=6779, symbol_order=7569)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.247526;

  <bb 2> :
  _1 = entry->m_key;
  D.247526 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.247526;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9249, decl_uid=191474, cgraph_uid=5881, symbol_order=6667)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.247530;
  bool D.247528;

  <bb 2> :
  _1 = &a->m_key;
  D.247530 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_1, b);
  D.247528 = D.247530;

  <bb 3> :
<L0>:
  return D.247528;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10equal_keysERKS2_S7_, funcdef_no=9944, decl_uid=191375, cgraph_uid=6576, symbol_order=7366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.247531;

  <bb 2> :
  D.247531 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.247531;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8493, decl_uid=210867, cgraph_uid=5125, symbol_order=5911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.247533;

  <bb 2> :
  _1 = entry->m_key;
  D.247533 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.247533;

}



;; Function function_relate_array::operator= (_ZN21function_relate_arrayaSERKS_, funcdef_no=6312, decl_uid=191796, cgraph_uid=3287, symbol_order=4060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_relate_array & function_relate_array::operator= (struct function_relate_array * const this, const struct function_relate_array & D.191797)
{
  struct function_relate_array & D.247535;

  <bb 2> :
  _1 = &D.191797->relate_type_array;
  _2 = &this->relate_type_array;
  std::vector<relate_type>::operator= (_2, _1);
  D.247535 = this;

  <bb 3> :
<L0>:
  return D.247535;

}



;; Function std::vector<relate_type>::operator= (_ZNSt6vectorI11relate_typeSaIS0_EEaSERKS2_, funcdef_no=7643, decl_uid=179372, cgraph_uid=4277, symbol_order=5059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<relate_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.247570;
  struct relate_type * __tmp;
  const size_type __xlen;
  struct vector & D.247568;
  struct __normal_iterator D.247565;
  struct __normal_iterator D.247564;
  struct __normal_iterator D.247563;
  struct __normal_iterator D.247562;
  struct __normal_iterator D.247561;
  bool retval.345;
  struct __normal_iterator D.247556;
  struct __normal_iterator D.247555;
  bool retval.344;
  bool iftmp.343;
  bool retval.342;
  bool retval.341;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.341 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ();
  if (retval.341 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.179794;
  _4 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.179794;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.343 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.343 = 0;

  <bb 8> :
  retval.342 = iftmp.343;
  if (retval.342 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<relate_type>::clear (this);
  _8 = &this->D.179794;
  _9 = this->D.179794._M_impl.D.179139._M_end_of_storage;
  _10 = this->D.179794._M_impl.D.179139._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 48;
  _13 = (long unsigned int) _12;
  _14 = this->D.179794._M_impl.D.179139._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_8, _14, _13);
  this->D.179794._M_impl.D.179139._M_start = 0B;
  this->D.179794._M_impl.D.179139._M_finish = 0B;
  this->D.179794._M_impl.D.179139._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.179794;
  _16 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.179794;
  _18 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<relate_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<relate_type>::size (__x);
  _19 = std::vector<relate_type>::capacity (this);
  retval.344 = __xlen > _19;
  if (retval.344 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.247555 = std::vector<relate_type>::end (__x);
  D.247556 = std::vector<relate_type>::begin (__x);
  D.247570 = std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (this, __xlen, D.247556, D.247555);
  __tmp = D.247570;
  _20 = &this->D.179794;
  _21 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.179794._M_impl.D.179139._M_finish;
  _23 = this->D.179794._M_impl.D.179139._M_start;
  std::_Destroy<relate_type*, relate_type> (_23, _22, _21);
  _24 = &this->D.179794;
  _25 = this->D.179794._M_impl.D.179139._M_end_of_storage;
  _26 = this->D.179794._M_impl.D.179139._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 48;
  _29 = (long unsigned int) _28;
  _30 = this->D.179794._M_impl.D.179139._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_24, _30, _29);
  this->D.179794._M_impl.D.179139._M_start = __tmp;
  _31 = this->D.179794._M_impl.D.179139._M_start;
  _32 = __xlen * 48;
  _33 = _31 + _32;
  this->D.179794._M_impl.D.179139._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<relate_type>::size (this);
  retval.345 = __xlen <= _34;
  if (retval.345 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.179794;
  _36 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_35);
  D.247561 = std::vector<relate_type>::end (this);
  D.247562 = std::vector<relate_type>::begin (this);
  D.247563 = std::vector<relate_type>::end (__x);
  D.247564 = std::vector<relate_type>::begin (__x);
  D.247565 = std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.247564, D.247563, D.247562);
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (D.247565, D.247561, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.179794._M_impl.D.179139._M_start;
  _38 = __x->D.179794._M_impl.D.179139._M_start;
  _39 = std::vector<relate_type>::size (this);
  _40 = _39 * 48;
  _41 = _38 + _40;
  _42 = __x->D.179794._M_impl.D.179139._M_start;
  std::copy<relate_type*, relate_type*> (_42, _41, _37);
  _43 = &this->D.179794;
  _44 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.179794._M_impl.D.179139._M_finish;
  _46 = __x->D.179794._M_impl.D.179139._M_finish;
  _47 = __x->D.179794._M_impl.D.179139._M_start;
  _48 = std::vector<relate_type>::size (this);
  _49 = _48 * 48;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.179794._M_impl.D.179139._M_start;
  _52 = __xlen * 48;
  _53 = _51 + _52;
  this->D.179794._M_impl.D.179139._M_finish = _53;

  <bb 17> :
  D.247568 = this;

  <bb 18> :
<L19>:
  return D.247568;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7644, decl_uid=179006, cgraph_uid=4275, symbol_order=5057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ()
{
  bool D.247571;

  <bb 2> :
  D.247571 = 0;

  <bb 3> :
<L0>:
  return D.247571;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E15_S_always_equalEv, funcdef_no=7645, decl_uid=179009, cgraph_uid=4276, symbol_order=5058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ()
{
  bool D.247573;

  <bb 2> :
  D.247573 = 1;

  <bb 3> :
<L0>:
  return D.247573;

}



;; Function std::operator!= (_ZStneRKSaI11relate_typeES2_, funcdef_no=8495, decl_uid=178892, cgraph_uid=5127, symbol_order=5913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.221179, const struct allocator & D.221180)
{
  bool D.247575;

  <bb 2> :
  D.247575 = 0;

  <bb 3> :
<L0>:
  return D.247575;

}



;; Function std::vector<relate_type>::clear (_ZNSt6vectorI11relate_typeSaIS0_EE5clearEv, funcdef_no=8496, decl_uid=179524, cgraph_uid=5128, symbol_order=5914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.179794._M_impl.D.179139._M_start;
  std::vector<relate_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<relate_type>::_M_erase_at_end (_ZNSt6vectorI11relate_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9250, decl_uid=179652, cgraph_uid=5882, symbol_order=6668)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<relate_type>::_M_erase_at_end (struct vector * const this, struct relate_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.179794._M_impl.D.179139._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 48;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.179794;
  _5 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.179794._M_impl.D.179139._M_finish;
  std::_Destroy<relate_type*, relate_type> (__pos, _6, _5);
  this->D.179794._M_impl.D.179139._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8494, decl_uid=179029, cgraph_uid=5126, symbol_order=5912)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.247580;

  <bb 2> :
  D.247580 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.247580;

}



;; Function std::__alloc_on_copy<std::allocator<relate_type> > (_ZSt15__alloc_on_copyISaI11relate_typeEEvRT_RKS2_, funcdef_no=8497, decl_uid=210892, cgraph_uid=5129, symbol_order=5915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<relate_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<relate_type>::capacity (_ZNKSt6vectorI11relate_typeSaIS0_EE8capacityEv, funcdef_no=8498, decl_uid=179440, cgraph_uid=5130, symbol_order=5916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::capacity (const struct vector * const this)
{
  size_type D.247582;

  <bb 2> :
  _1 = this->D.179794._M_impl.D.179139._M_end_of_storage;
  _2 = this->D.179794._M_impl.D.179139._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.247582 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.247582;

}



;; Function std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZNSt6vectorI11relate_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8501, decl_uid=210992, cgraph_uid=5133, symbol_order=5919)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct relate_type * std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct relate_type * D.247586;
  struct relate_type * __result;
  struct relate_type * D.247584;

  <bb 2> :
  _1 = &this->D.179794;
  D.247586 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_1, __n);
  __result = D.247586;
  _2 = &this->D.179794;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (__first, __last, __result, _3);

  <bb 3> :
  D.247584 = __result;

  <bb 4> :
<L0>:
  return D.247584;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.179794;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE11_M_allocateEm, funcdef_no=9254, decl_uid=179143, cgraph_uid=5886, symbol_order=6672)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.247596;
  struct relate_type * iftmp.346;
  struct relate_type * D.247590;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.247596 = std::allocator_traits<std::allocator<relate_type> >::allocate (_1, __n);
  iftmp.346 = D.247596;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.346 = 0B;

  <bb 5> :
  D.247590 = iftmp.346;

  <bb 6> :
<L3>:
  return D.247590;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::allocate (_ZNSt16allocator_traitsISaI11relate_typeEE8allocateERS1_m, funcdef_no=9945, decl_uid=178944, cgraph_uid=6577, symbol_order=7367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type * std::allocator_traits<std::allocator<relate_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct relate_type * D.247599;
  struct relate_type * D.247597;

  <bb 2> :
  D.247599 = __gnu_cxx::new_allocator<relate_type>::allocate (__a, __n, 0B);
  D.247597 = D.247599;

  <bb 3> :
<L0>:
  return D.247597;

}



;; Function __gnu_cxx::new_allocator<relate_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE8allocateEmPKv, funcdef_no=10466, decl_uid=178798, cgraph_uid=7099, symbol_order=7889)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct relate_type * __gnu_cxx::new_allocator<relate_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.242982)
{
  struct relate_type * D.247610;
  struct relate_type * D.247609;
  align_val_t __al;
  struct relate_type * D.247607;
  bool retval.347;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.347 = _4 != 0;
  if (retval.347 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 384307168202282325)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 48;
  D.247610 = operator new (_6);
  D.247607 = D.247610;

  <bb 7> :
<L6>:
  return D.247607;

}



;; Function __gnu_cxx::new_allocator<relate_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE11_M_max_sizeEv, funcdef_no=10467, decl_uid=178825, cgraph_uid=7098, symbol_order=7888)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.247611;

  <bb 2> :
  D.247611 = 192153584101141162;

  <bb 3> :
<L0>:
  return D.247611;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9255, decl_uid=221221, cgraph_uid=5887, symbol_order=6673)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result, struct allocator & D.232596)
{
  struct relate_type * D.247615;
  struct relate_type * D.247613;

  <bb 2> :
  D.247615 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.247613 = D.247615;

  <bb 3> :
<L0>:
  return D.247613;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9946, decl_uid=232598, cgraph_uid=6578, symbol_order=7368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * D.247618;
  const bool __assignable;
  struct relate_type * D.247616;

  <bb 2> :
  __assignable = 1;
  D.247618 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.247616 = D.247618;

  <bb 3> :
<L0>:
  return D.247616;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10468, decl_uid=239566, cgraph_uid=7100, symbol_order=7890)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.247620;
  bool retval.348;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (&__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, const relate_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (&__first);
  __cur = __cur + 48;

  <bb 4> :
  retval.348 = __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (&__first, &__last);
  if (retval.348 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.247620 = __cur;

  <bb 6> :
<L3>:
  return D.247620;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10775, decl_uid=210930, cgraph_uid=7407, symbol_order=8199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct relate_type & D.247622;

  <bb 2> :
  D.247622 = this->_M_current;

  <bb 3> :
<L0>:
  return D.247622;

}



;; Function std::__addressof<relate_type> (_ZSt11__addressofI11relate_typeEPT_RS1_, funcdef_no=10473, decl_uid=221719, cgraph_uid=7105, symbol_order=7895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__addressof<relate_type> (struct relate_type & __r)
{
  struct relate_type * D.247624;

  <bb 2> :
  D.247624 = __r;

  <bb 3> :
<L0>:
  return D.247624;

}



;; Function std::_Construct<relate_type, const relate_type&> (_ZSt10_ConstructI11relate_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10776, decl_uid=243010, cgraph_uid=7408, symbol_order=8200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, const relate_type&> (struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.244370;
  void * D.244369;
  const struct relate_type * D.244371;

  <bb 2> :
  D.244371 = std::forward<const relate_type&> (__args#0);
  D.244369 = __p;
  D.244370 = operator new (48, D.244369);
  MEM[(struct relate_type *)D.244370] = *D.244371;
  return;

}



;; Function std::forward<const relate_type&> (_ZSt7forwardIRK11relate_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9264, decl_uid=221334, cgraph_uid=5896, symbol_order=6682)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct relate_type & std::forward<const relate_type&> (const struct type & __t)
{
  const struct relate_type & D.247626;

  <bb 2> :
  D.247626 = __t;

  <bb 3> :
<L0>:
  return D.247626;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10774, decl_uid=210934, cgraph_uid=7406, symbol_order=8198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.247628;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.247628 = this;

  <bb 3> :
<L0>:
  return D.247628;

}



;; Function __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIPK11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10773, decl_uid=243003, cgraph_uid=7405, symbol_order=8197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.247630;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.247630 = _2 != _4;

  <bb 3> :
<L0>:
  return D.247630;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10469, decl_uid=210959, cgraph_uid=7101, symbol_order=7891)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * const & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  const struct relate_type * const & D.247632;

  <bb 2> :
  D.247632 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.247632;

}



;; Function std::_Destroy<relate_type*, relate_type> (_ZSt8_DestroyIP11relate_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8490, decl_uid=210851, cgraph_uid=5122, symbol_order=5908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct allocator & D.221159)
{
  <bb 2> :
  std::_Destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<relate_type*> (_ZSt8_DestroyIP11relate_typeEvT_S2_, funcdef_no=9247, decl_uid=221161, cgraph_uid=5879, symbol_order=6665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*> (struct relate_type * __first, struct relate_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<relate_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11relate_typeEEvT_S4_, funcdef_no=9941, decl_uid=232566, cgraph_uid=6573, symbol_order=7363)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<relate_type*> (struct relate_type * D.239507, struct relate_type * D.239508)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8488, decl_uid=179146, cgraph_uid=5120, symbol_order=5906)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (struct _Vector_base * const this, struct relate_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<relate_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::deallocate (_ZNSt16allocator_traitsISaI11relate_typeEE10deallocateERS1_PS0_m, funcdef_no=9246, decl_uid=178951, cgraph_uid=5878, symbol_order=6664)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::deallocate (struct allocator_type & __a, struct relate_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE10deallocateEPS1_m, funcdef_no=9940, decl_uid=178802, cgraph_uid=6572, symbol_order=7362)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::deallocate (struct new_allocator * const this, struct relate_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 48;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<relate_type>::end (_ZNSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=7781, decl_uid=179407, cgraph_uid=4413, symbol_order=5195)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::end (struct vector * const this)
{
  struct iterator D.214420;
  struct iterator D.247640;

  <bb 2> :
  _1 = &this->D.179794._M_impl.D.179139._M_finish;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.214420, _1);
  D.247640 = D.214420;
  D.214420 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247640;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8727, decl_uid=201505, cgraph_uid=5359, symbol_order=6145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=7780, decl_uid=179403, cgraph_uid=4412, symbol_order=5194)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::begin (struct vector * const this)
{
  struct iterator D.214418;
  struct iterator D.247643;

  <bb 2> :
  _1 = &this->D.179794._M_impl.D.179139._M_start;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.214418, _1);
  D.247643 = D.214418;
  D.214418 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247643;

}



;; Function std::vector<relate_type>::end (_ZNKSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=8500, decl_uid=179409, cgraph_uid=5132, symbol_order=5918)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::end (const struct vector * const this)
{
  struct const_iterator D.221215;
  struct const_iterator D.247646;

  <bb 2> :
  _1 = &this->D.179794._M_impl.D.179139._M_finish;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.221215, _1);
  D.247646 = D.221215;
  D.221215 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247646;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9252, decl_uid=210972, cgraph_uid=5884, symbol_order=6670)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, const struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNKSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=8499, decl_uid=179405, cgraph_uid=5131, symbol_order=5917)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::begin (const struct vector * const this)
{
  struct const_iterator D.221213;
  struct const_iterator D.247649;

  <bb 2> :
  _1 = &this->D.179794._M_impl.D.179139._M_start;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.221213, _1);
  D.247649 = D.221213;
  D.221213 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247649;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8502, decl_uid=211000, cgraph_uid=5134, symbol_order=5920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.247654;
  struct __normal_iterator D.247653;
  struct __normal_iterator D.247652;

  <bb 2> :
  D.247653 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__last);
  D.247654 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__first);
  D.247652 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.247654, D.247653, __result);

  <bb 3> :
<L0>:
  return D.247652;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9256, decl_uid=221255, cgraph_uid=5888, symbol_order=6674)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.247656;

  <bb 2> :
  D.247656 = __it;

  <bb 3> :
<L0>:
  return D.247656;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9257, decl_uid=221261, cgraph_uid=5890, symbol_order=6676)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct relate_type * D.247660;
  struct __normal_iterator D.247658;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__result);
  _2 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__last);
  _3 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__first);
  D.247660 = std::__copy_move_a1<false, const relate_type*, relate_type*> (_3, _2, _1);
  _4 = D.247660;
  D.247658 = std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.247658;

}



;; Function std::__niter_base<relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIP11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=9948, decl_uid=232764, cgraph_uid=6580, symbol_order=7370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  struct relate_type * D.247661;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__it);
  D.247661 = *_1;

  <bb 3> :
<L0>:
  return D.247661;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8729, decl_uid=201492, cgraph_uid=5361, symbol_order=6147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * const & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  struct relate_type * const & D.247663;

  <bb 2> :
  D.247663 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.247663;

}



;; Function std::__niter_base<const relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIPK11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=9947, decl_uid=232613, cgraph_uid=6579, symbol_order=7369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * std::__niter_base<const relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  const struct relate_type * D.247665;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (&__it);
  D.247665 = *_1;

  <bb 3> :
<L0>:
  return D.247665;

}



;; Function std::__copy_move_a1<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=9949, decl_uid=232767, cgraph_uid=6581, symbol_order=7371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247669;
  struct relate_type * D.247667;

  <bb 2> :
  D.247669 = std::__copy_move_a2<false, const relate_type*, relate_type*> (__first, __last, __result);
  D.247667 = D.247669;

  <bb 3> :
<L0>:
  return D.247667;

}



;; Function std::__copy_move_a2<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=10470, decl_uid=239580, cgraph_uid=7102, symbol_order=7892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247670;

  <bb 2> :
  D.247670 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.247670;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11relate_typeEEPT_PKS4_S7_S5_, funcdef_no=10777, decl_uid=243034, cgraph_uid=7409, symbol_order=8201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct relate_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  const ptrdiff_t _Num;
  struct relate_type * D.247675;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 48;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.349_2 = (long unsigned int) _Num;
  _3 = _Num.349_2 * 48;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.350_4 = (long unsigned int) _Num;
  _5 = _Num.350_4 * 48;
  D.247675 = __result + _5;

  <bb 5> :
<L3>:
  return D.247675;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=9950, decl_uid=232771, cgraph_uid=6582, symbol_order=7372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __from, struct relate_type * __res)
{
  struct __normal_iterator D.247677;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 48;
  D.247677 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.247677;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10471, decl_uid=201483, cgraph_uid=7103, symbol_order=7893)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct relate_type * const D.243040;
  struct __normal_iterator D.243041;
  struct __normal_iterator D.247679;

  <bb 2> :
  _1 = this->_M_current;
  __n.351_2 = (long unsigned int) __n;
  _3 = __n.351_2 * 48;
  _4 = _1 + _3;
  D.243040 = _4;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.243041, &D.243040);
  D.247679 = D.243041;
  D.243041 = {CLOBBER};
  D.243040 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.247679;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8503, decl_uid=211006, cgraph_uid=5135, symbol_order=5921)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.221290)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9259, decl_uid=221292, cgraph_uid=5891, symbol_order=6677)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=9951, decl_uid=232795, cgraph_uid=6583, symbol_order=7373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator D.239589, struct __normal_iterator D.239590)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<relate_type*, relate_type*> (_ZSt4copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=8504, decl_uid=211014, cgraph_uid=5136, symbol_order=5922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247685;
  struct relate_type * D.247683;

  <bb 2> :
  _1 = std::__miter_base<relate_type*> (__last);
  _2 = std::__miter_base<relate_type*> (__first);
  D.247685 = std::__copy_move_a<false, relate_type*, relate_type*> (_2, _1, __result);
  D.247683 = D.247685;

  <bb 3> :
<L0>:
  return D.247683;

}



;; Function std::__miter_base<relate_type*> (_ZSt12__miter_baseIP11relate_typeET_S2_, funcdef_no=9260, decl_uid=221308, cgraph_uid=5892, symbol_order=6678)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__miter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.247686;

  <bb 2> :
  D.247686 = __it;

  <bb 3> :
<L0>:
  return D.247686;

}



;; Function std::__copy_move_a<false, relate_type*, relate_type*> (_ZSt13__copy_move_aILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=9261, decl_uid=221310, cgraph_uid=5893, symbol_order=6679)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247690;
  struct relate_type * D.247688;

  <bb 2> :
  __result.352_1 = __result;
  _2 = std::__niter_base<relate_type*> (__result.352_1);
  _3 = std::__niter_base<relate_type*> (__last);
  _4 = std::__niter_base<relate_type*> (__first);
  D.247690 = std::__copy_move_a1<false, relate_type*, relate_type*> (_4, _3, _2);
  _5 = D.247690;
  D.247688 = std::__niter_wrap<relate_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.247688;

}



;; Function std::__niter_base<relate_type*> (_ZSt12__niter_baseIP11relate_typeET_S2_, funcdef_no=9952, decl_uid=221518, cgraph_uid=6584, symbol_order=7374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.247691;

  <bb 2> :
  D.247691 = __it;

  <bb 3> :
<L0>:
  return D.247691;

}



;; Function std::__copy_move_a1<false, relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=9953, decl_uid=232806, cgraph_uid=6585, symbol_order=7375)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247695;
  struct relate_type * D.247693;

  <bb 2> :
  D.247695 = std::__copy_move_a2<false, relate_type*, relate_type*> (__first, __last, __result);
  D.247693 = D.247695;

  <bb 3> :
<L0>:
  return D.247693;

}



;; Function std::__copy_move_a2<false, relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=10472, decl_uid=239598, cgraph_uid=7104, symbol_order=7894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247696;

  <bb 2> :
  D.247696 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.247696;

}



;; Function std::__niter_wrap<relate_type*> (_ZSt12__niter_wrapIP11relate_typeET_RKS2_S2_, funcdef_no=9954, decl_uid=232810, cgraph_uid=6586, symbol_order=7376)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_wrap<relate_type*> (struct relate_type * const & D.239602, struct relate_type * __res)
{
  struct relate_type * D.247698;

  <bb 2> :
  D.247698 = __res;

  <bb 3> :
<L0>:
  return D.247698;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8489, decl_uid=179027, cgraph_uid=5121, symbol_order=5907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.247700;

  <bb 2> :
  D.247700 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.247700;

}



;; Function std::vector<relate_type>::size (_ZNKSt6vectorI11relate_typeSaIS0_EE4sizeEv, funcdef_no=7778, decl_uid=179427, cgraph_uid=4410, symbol_order=5192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::size (const struct vector * const this)
{
  size_type D.247702;

  <bb 2> :
  _1 = this->D.179794._M_impl.D.179139._M_finish;
  _2 = this->D.179794._M_impl.D.179139._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.247702 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.247702;

}



;; Function std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIP11relate_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8505, decl_uid=211018, cgraph_uid=5137, symbol_order=5923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & D.221317)
{
  struct relate_type * D.247706;
  struct relate_type * D.247704;

  <bb 2> :
  D.247706 = std::uninitialized_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.247704 = D.247706;

  <bb 3> :
<L0>:
  return D.247704;

}



;; Function std::uninitialized_copy<relate_type*, relate_type*> (_ZSt18uninitialized_copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=9262, decl_uid=221319, cgraph_uid=5895, symbol_order=6681)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247709;
  const bool __assignable;
  struct relate_type * D.247707;

  <bb 2> :
  __assignable = 1;
  D.247709 = std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.247707 = D.247709;

  <bb 3> :
<L0>:
  return D.247707;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11relate_typeS3_EET0_T_S5_S4_, funcdef_no=9955, decl_uid=232909, cgraph_uid=6587, symbol_order=7377)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.247710;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, relate_type&> (_1, __first);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.247710 = __cur;

  <bb 6> :
<L3>:
  return D.247710;

}



;; Function std::_Construct<relate_type, relate_type&> (_ZSt10_ConstructI11relate_typeJRS0_EEvPT_DpOT0_, funcdef_no=10474, decl_uid=239610, cgraph_uid=7106, symbol_order=7896)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, relate_type&> (struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.243064;
  void * D.243063;
  const struct relate_type * D.243065;

  <bb 2> :
  D.243065 = std::forward<relate_type&> (__args#0);
  D.243063 = __p;
  D.243064 = operator new (48, D.243063);
  MEM[(struct relate_type *)D.243064] = *D.243065;
  return;

}



;; Function std::forward<relate_type&> (_ZSt7forwardIR11relate_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10778, decl_uid=243061, cgraph_uid=7410, symbol_order=8202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type&> (struct type & __t)
{
  struct relate_type & D.247712;

  <bb 2> :
  D.247712 = __t;

  <bb 3> :
<L0>:
  return D.247712;

}



;; Function relate_type::relate_type (_ZN11relate_typeC2Ev, funcdef_no=6314, decl_uid=191808, cgraph_uid=3289, symbol_order=4062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void relate_type::relate_type (struct relate_type * const this)
{
  <bb 2> :
  this->now_fucntion = 0;
  this->now_stmt = 0;
  this->now_basicblock = 0;
  return;

}



;; Function std::vector<relate_type>::push_back (_ZNSt6vectorI11relate_typeSaIS0_EE9push_backERKS0_, funcdef_no=7646, decl_uid=179474, cgraph_uid=4279, symbol_order=5061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<relate_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.247717;

  <bb 2> :
  _1 = this->D.179794._M_impl.D.179139._M_finish;
  _2 = this->D.179794._M_impl.D.179139._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.179794._M_impl.D.179139._M_finish;
  _4 = &this->D.179794._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_4, _3, __x);
  _5 = this->D.179794._M_impl.D.179139._M_finish;
  _6 = _5 + 48;
  this->D.179794._M_impl.D.179139._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.247717 = std::vector<relate_type>::end (this);
  std::vector<relate_type>::_M_realloc_insert<const relate_type&> (this, D.247717, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8506, decl_uid=211030, cgraph_uid=5138, symbol_order=5924)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (struct allocator_type & __a, struct relate_type * __p, const struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const relate_type&> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9265, decl_uid=221336, cgraph_uid=5897, symbol_order=6683)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (struct new_allocator * const this, struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.232921;
  void * D.232920;
  const struct relate_type * D.232922;

  <bb 2> :
  D.232922 = std::forward<const relate_type&> (__args#0);
  D.232920 = __p;
  D.232921 = operator new (48, D.232920);
  MEM[(struct relate_type *)D.232921] = *D.232922;
  return;

}



;; Function std::vector<relate_type>::_M_realloc_insert<const relate_type&> (_ZNSt6vectorI11relate_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8507, decl_uid=211199, cgraph_uid=5142, symbol_order=5928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::_M_realloc_insert<const relate_type&> (struct vector * const this, struct iterator __position, const struct relate_type & __args#0)
{
  struct relate_type * D.247722;
  const size_type D.247721;
  struct relate_type * __new_finish;
  struct relate_type * __new_start;
  const size_type __elems_before;
  struct relate_type * __old_finish;
  struct relate_type * __old_start;
  const size_type __len;
  struct iterator D.221347;

  <bb 2> :
  D.247721 = std::vector<relate_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.247721;
  __old_start = this->D.179794._M_impl.D.179139._M_start;
  __old_finish = this->D.179794._M_impl.D.179139._M_finish;
  D.221347 = std::vector<relate_type>::begin (this);
  _1 = __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (&__position, &D.221347);
  __elems_before = (const size_type) _1;
  D.221347 = {CLOBBER};
  _2 = &this->D.179794;
  D.247722 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_2, __len);
  __new_start = D.247722;
  __new_finish = __new_start;
  _3 = std::forward<const relate_type&> (__args#0);
  _4 = __elems_before * 48;
  _5 = __new_start + _4;
  _6 = &this->D.179794._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.179794;
  _8 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<relate_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 48;
  _11 = &this->D.179794;
  _12 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<relate_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.179794;
  _23 = this->D.179794._M_impl.D.179139._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 48;
  _26 = (long unsigned int) _25;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.179794._M_impl.D.179139._M_start = __new_start;
  this->D.179794._M_impl.D.179139._M_finish = __new_finish;
  _27 = __len * 48;
  _28 = __new_start + _27;
  this->D.179794._M_impl.D.179139._M_end_of_storage = _28;
  return;

}



;; Function std::vector<relate_type>::_M_check_len (_ZNKSt6vectorI11relate_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9266, decl_uid=179643, cgraph_uid=5898, symbol_order=6684)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<relate_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.355;
  size_type D.247726;
  const long unsigned int D.232927;
  bool retval.353;

  <bb 2> :
  _1 = std::vector<relate_type>::max_size (this);
  _2 = std::vector<relate_type>::size (this);
  _3 = _1 - _2;
  __n.354_4 = __n;
  retval.353 = _3 < __n.354_4;
  if (retval.353 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<relate_type>::size (this);
  _6 = std::vector<relate_type>::size (this);
  D.232927 = _6;
  _7 = std::max<long unsigned int> (&D.232927, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.232927 = {CLOBBER};
  _9 = std::vector<relate_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<relate_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.355 = std::vector<relate_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.355 = __len;

  <bb 8> :
  D.247726 = iftmp.355;

  <bb 9> :
<L6>:
  return D.247726;

}



;; Function std::vector<relate_type>::max_size (_ZNKSt6vectorI11relate_typeSaIS0_EE8max_sizeEv, funcdef_no=9956, decl_uid=179429, cgraph_uid=6588, symbol_order=7378)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::max_size (const struct vector * const this)
{
  size_type D.247733;

  <bb 2> :
  _1 = &this->D.179794;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  D.247733 = std::vector<relate_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.247733;

}



;; Function std::vector<relate_type>::_S_max_size (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10475, decl_uid=179650, cgraph_uid=7107, symbol_order=7897)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.247735;

  <bb 2> :
  __diffmax = 192153584101141162;
  _1 = std::allocator_traits<std::allocator<relate_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.247735 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247735;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::max_size (_ZNSt16allocator_traitsISaI11relate_typeEE8max_sizeERKS1_, funcdef_no=10779, decl_uid=178964, cgraph_uid=7411, symbol_order=8203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<relate_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.247738;

  <bb 2> :
  D.247738 = __gnu_cxx::new_allocator<relate_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.247738;

}



;; Function __gnu_cxx::new_allocator<relate_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE8max_sizeEv, funcdef_no=10896, decl_uid=178806, cgraph_uid=7528, symbol_order=8320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::max_size (const struct new_allocator * const this)
{
  size_type D.247740;

  <bb 2> :
  D.247740 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.247740;

}



;; Function __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxmiIP11relate_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9267, decl_uid=221348, cgraph_uid=5899, symbol_order=6685)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.247742;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.247742 = _5 /[ex] 48;

  <bb 3> :
<L0>:
  return D.247742;

}



;; Function std::vector<relate_type>::_S_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9268, decl_uid=179301, cgraph_uid=5900, symbol_order=6686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.247745;
  struct relate_type * D.247744;

  <bb 2> :
  D.247744 = std::vector<relate_type>::_S_do_relocate (__first, __last, __result, __alloc, D.247745);

  <bb 3> :
<L0>:
  return D.247744;

}



;; Function std::vector<relate_type>::_S_do_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=9957, decl_uid=179289, cgraph_uid=6589, symbol_order=7379)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_do_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239622)
{
  struct relate_type * D.247747;

  <bb 2> :
  D.247747 = std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.247747;

}



;; Function std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt12__relocate_aIP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10476, decl_uid=221512, cgraph_uid=7108, symbol_order=7898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * D.247749;

  <bb 2> :
  _1 = std::__niter_base<relate_type*> (__result);
  _2 = std::__niter_base<relate_type*> (__last);
  _3 = std::__niter_base<relate_type*> (__first);
  D.247749 = std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.247749;

}



;; Function std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt14__relocate_a_1IP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10780, decl_uid=221663, cgraph_uid=7412, symbol_order=8204)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * __cur;
  struct relate_type * D.247751;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_2, _1, __alloc);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.247751 = __cur;

  <bb 6> :
<L3>:
  return D.247751;

}



;; Function std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_ZSt19__relocate_object_aI11relate_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10897, decl_uid=221692, cgraph_uid=7529, symbol_order=8321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (struct relate_type * restrict __dest, struct relate_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<relate_type&> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (__alloc, __dest, _1);
  _2 = std::__addressof<relate_type> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (__alloc, _2);
  return;

}



;; Function std::move<relate_type&> (_ZSt4moveIR11relate_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10945, decl_uid=221704, cgraph_uid=7577, symbol_order=8369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<relate_type&> (struct relate_type & __t)
{
  struct type & D.247753;

  <bb 2> :
  D.247753 = __t;

  <bb 3> :
<L0>:
  return D.247753;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10946, decl_uid=221706, cgraph_uid=7578, symbol_order=8370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (struct allocator_type & __a, struct relate_type * __p, struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<relate_type> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (__a, __p, _1);
  return;

}



;; Function std::forward<relate_type> (_ZSt7forwardI11relate_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10965, decl_uid=245280, cgraph_uid=7597, symbol_order=8389)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type> (struct type & __t)
{
  struct relate_type & D.247755;

  <bb 2> :
  D.247755 = __t;

  <bb 3> :
<L0>:
  return D.247755;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10966, decl_uid=245282, cgraph_uid=7598, symbol_order=8390)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (struct new_allocator * const this, struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.245711;
  void * D.245710;
  struct relate_type * D.245712;

  <bb 2> :
  D.245712 = std::forward<relate_type> (__args#0);
  D.245710 = __p;
  D.245711 = operator new (48, D.245710);
  MEM[(struct relate_type *)D.245711] = *D.245712;
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9269, decl_uid=221721, cgraph_uid=5901, symbol_order=6687)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (struct allocator_type & __a, struct relate_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE7destroyIS1_EEvPT_, funcdef_no=9958, decl_uid=232941, cgraph_uid=6590, symbol_order=7380)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (struct new_allocator * const this, struct relate_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::put (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7648, decl_uid=191413, cgraph_uid=4283, symbol_order=5065)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_relate_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_relate_array & v)
{
  bool D.247764;
  struct hash_entry * D.247763;
  unsigned int D.247762;
  bool ins;
  struct hash_entry * e;
  bool D.247760;
  void * D.211209;
  void * D.211208;

  <bb 2> :
  _1 = &this->m_table;
  D.247762 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.247762;
  D.247763 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.247763;
  D.247764 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (e);
  ins = D.247764;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.211208 = &e->m_value;
  D.211209 = operator new (24, D.211208);
  function_relate_array::function_relate_array (D.211209, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_relate_array::operator= (_4, v);

  <bb 5> :
  D.247760 = ~ins;

  <bb 6> :
<L3>:
  return D.247760;

  <bb 7> :
<L4>:
  operator delete (D.211209, D.211208);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8511, decl_uid=191571, cgraph_uid=5143, symbol_order=5929)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.247815;
  bool D.247814;
  bool D.247813;
  bool D.247812;
  bool D.247811;
  bool D.247810;
  struct value_type * D.247809;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.361;
  bool retval.360;
  bool retval.359;
  bool retval.358;
  bool retval.357;
  bool retval.356;
  struct value_type * D.247771;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.247810 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.356 = D.247810;
  if (retval.356 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.247811 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.357 = D.247811;
  if (retval.357 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.247812 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.358 = D.247812;
  if (retval.358 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.247771 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.247813 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.359 = D.247813;
  if (retval.359 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.247814 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.360 = D.247814;
  if (retval.360 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.247815 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.361 = D.247815;
  if (retval.361 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.247771 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.247771 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.247771 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.247771 = _37 + _39;

  <bb 27> :
<L37>:
  return D.247771;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9270, decl_uid=191652, cgraph_uid=5914, symbol_order=6700)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.247846;
  unsigned int D.247845;
  bool D.247844;
  bool D.247843;
  struct mem_alloc_description & D.247842;
  struct value_type * D.247841;
  unsigned int D.247840;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.232964;
  void * D.232963;
  struct hash_entry & D.233001;
  bool iftmp.365;
  bool retval.364;
  bool iftmp.363;
  bool retval.362;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.363 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.363 = 0;

  <bb 6> :
  retval.362 = iftmp.363;
  if (retval.362 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.247840 = hash_table_higher_prime_index (_5);
  nindex = D.247840;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.247841 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.247841;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.247843 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.247843;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.247844 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.247844;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.365 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.365 = 0;

  <bb 15> :
  retval.364 = iftmp.365;
  if (retval.364 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.247845 = hash_map<tree_node*, function_relate_array>::hash_entry::hash (x);
  _16 = D.247845;
  D.247846 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.247846;
  D.233001 = std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (x);
  D.232963 = q;
  D.232964 = operator new (32, D.232963);
  hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (D.232964, D.233001);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=9959, decl_uid=191547, cgraph_uid=6591, symbol_order=7381)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.247847;

  <bb 2> :
  D.247847 = this->m_size;

  <bb 3> :
<L0>:
  return D.247847;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=9960, decl_uid=191549, cgraph_uid=6592, symbol_order=7382)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.247849;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.247849 = _1 - _2;

  <bb 3> :
<L0>:
  return D.247849;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=9961, decl_uid=191649, cgraph_uid=6593, symbol_order=7383)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.366;
  bool D.247851;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.366 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.366 = 0;

  <bb 6> :
  D.247851 = iftmp.366;

  <bb 7> :
<L4>:
  return D.247851;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9248, decl_uid=191639, cgraph_uid=5880, symbol_order=6666)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.247873;
  struct value_type * D.247872;
  struct mem_alloc_description & D.247871;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.247869;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.247872 = xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (n);
  nentries = D.247872;
  goto <bb 6>; [INV]

  <bb 5> :
  D.247873 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (n);
  nentries = D.247873;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.247869 = nentries;

  <bb 9> :
<L14>:
  return D.247869;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9942, decl_uid=214431, cgraph_uid=6574, symbol_order=7364)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.247876;
  struct hash_entry * D.247874;

  <bb 2> :
  D.247876 = xcalloc (count, 32);
  D.247874 = D.247876;

  <bb 3> :
<L0>:
  return D.247874;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9943, decl_uid=232573, cgraph_uid=6575, symbol_order=7365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.247883;
  struct hash_entry * D.247882;
  struct hash_entry * D.247880;
  bool retval.367;

  <bb 2> :
  retval.367 = need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ();
  if (retval.367 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.247882 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.247880 = D.247882;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.247883 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.247880 = D.247883;

  <bb 5> :
<L2>:
  return D.247880;

}



;; Function finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10462, decl_uid=239515, cgraph_uid=7097, symbol_order=7887)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10464, decl_uid=242971, cgraph_uid=7095, symbol_order=7885)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_relate_array::~function_relate_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10461, decl_uid=239514, cgraph_uid=7093, symbol_order=7883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ()
{
  bool D.247884;

  <bb 2> :
  D.247884 = 1;

  <bb 3> :
<L0>:
  return D.247884;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=9963, decl_uid=191472, cgraph_uid=6595, symbol_order=7385)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_relate_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.247888;
  hashval_t D.247886;

  <bb 2> :
  _1 = &e->m_key;
  D.247888 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_1);
  D.247886 = D.247888;

  <bb 3> :
<L0>:
  return D.247886;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=9962, decl_uid=191642, cgraph_uid=6594, symbol_order=7384)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.247901;
  bool D.247900;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.369;
  struct value_type * D.247892;
  bool retval.368;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.247900 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.368 = D.247900;
  if (retval.368 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.247892 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.247901 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.369 = D.247901;
  if (retval.369 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.247892 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.247892;

}



;; Function std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=9964, decl_uid=232961, cgraph_uid=6596, symbol_order=7386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.247902;

  <bb 2> :
  D.247902 = __t;

  <bb 3> :
<L0>:
  return D.247902;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9281, decl_uid=232986, cgraph_uid=5912, symbol_order=6698)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.232988)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.232988->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.232988->m_value;
  function_relate_array::function_relate_array (_2, _3);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2EOS_, funcdef_no=9279, decl_uid=191347, cgraph_uid=5909, symbol_order=6695)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, struct function_relate_array & D.191349)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191349->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9277, decl_uid=179751, cgraph_uid=5906, symbol_order=6692)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this, struct vector & D.179753)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179794;
  _2 = &D.179753->D.179794;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9275, decl_uid=179219, cgraph_uid=5903, symbol_order=6689)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.179221)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.179221->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=9966, decl_uid=179125, cgraph_uid=6598, symbol_order=7388)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  std::allocator<relate_type>::allocator (this, _1);
  _2 = &this->D.179139;
  _3 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.179139;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2ERKS0_, funcdef_no=10479, decl_uid=178909, cgraph_uid=7111, symbol_order=7901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2ERKS2_, funcdef_no=10782, decl_uid=178838, cgraph_uid=7414, symbol_order=8206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.178840)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11relate_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10477, decl_uid=239652, cgraph_uid=7109, symbol_order=7899)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.247904;

  <bb 2> :
  D.247904 = __t;

  <bb 3> :
<L0>:
  return D.247904;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10482, decl_uid=179081, cgraph_uid=7114, symbol_order=7904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8733, decl_uid=214433, cgraph_uid=5365, symbol_order=6151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9283, decl_uid=191660, cgraph_uid=5915, symbol_order=6701)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=9968, decl_uid=191484, cgraph_uid=6600, symbol_order=7390)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10484, decl_uid=239667, cgraph_uid=7116, symbol_order=7906)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2ERKS_, funcdef_no=7650, decl_uid=191338, cgraph_uid=4281, symbol_order=5063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, const struct function_relate_array & D.191340)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191340->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2ERKS2_, funcdef_no=8514, decl_uid=179757, cgraph_uid=5146, symbol_order=5932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<relate_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.247911;
  struct __normal_iterator D.247908;
  struct __normal_iterator D.247907;
  struct allocator D.221924;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179794;
  _2 = &__x->D.179794;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  D.221924 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<relate_type>::size (__x);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _4, &D.221924);

  <bb 3> :
  std::allocator<relate_type>::~allocator (&D.221924);
  D.221924 = {CLOBBER};
  _5 = &this->D.179794;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.179794._M_impl.D.179139._M_start;
  D.247907 = std::vector<relate_type>::end (__x);
  D.247908 = std::vector<relate_type>::begin (__x);
  D.247911 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (D.247908, D.247907, _7, _6);

  <bb 4> :
  _8 = D.247911;
  this->D.179794._M_impl.D.179139._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<relate_type>::~allocator (&D.221924);
  resx 2

  <bb 6> :
<L1>:
  D.221924 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.179794;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=9284, decl_uid=179001, cgraph_uid=5916, symbol_order=6702)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11relate_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9969, decl_uid=178966, cgraph_uid=6601, symbol_order=7391)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<relate_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EmRKS1_, funcdef_no=9286, decl_uid=179226, cgraph_uid=5918, symbol_order=6704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9971, decl_uid=179131, cgraph_uid=6603, symbol_order=7393)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this, __a);
  _1 = &this->D.179139;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9973, decl_uid=179150, cgraph_uid=6605, symbol_order=7395)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.247918;

  <bb 2> :
  D.247918 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (this, __n);
  _1 = D.247918;
  this->_M_impl.D.179139._M_start = _1;
  _2 = this->_M_impl.D.179139._M_start;
  this->_M_impl.D.179139._M_finish = _2;
  _3 = this->_M_impl.D.179139._M_start;
  _4 = __n * 48;
  _5 = _3 + _4;
  this->_M_impl.D.179139._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6300, decl_uid=179186, cgraph_uid=3273, symbol_order=4046)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<relate_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<relate_type>::~allocator (_ZNSaI11relate_typeED2Ev, funcdef_no=7634, decl_uid=178919, cgraph_uid=4266, symbol_order=5048)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeED2Ev, funcdef_no=8486, decl_uid=178848, cgraph_uid=5118, symbol_order=5904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EED2Ev, funcdef_no=7637, decl_uid=179249, cgraph_uid=4269, symbol_order=5051)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.179139._M_end_of_storage;
  _2 = this->_M_impl.D.179139._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.179139._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function function_relate_array::~function_relate_array (_ZN21function_relate_arrayD2Ev, funcdef_no=6310, decl_uid=191359, cgraph_uid=3285, symbol_order=4058)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::~function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<relate_type>::~vector (_ZNSt6vectorI11relate_typeSaIS0_EED2Ev, funcdef_no=7640, decl_uid=179791, cgraph_uid=4272, symbol_order=5054)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179794;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.179794._M_impl.D.179139._M_finish;
  _4 = this->D.179794._M_impl.D.179139._M_start;
  std::_Destroy<relate_type*, relate_type> (_4, _3, _2);
  _5 = &this->D.179794;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function trace_function_path (_Z19trace_function_pathP9tree_nodeiS0_Pi, funcdef_no=6316, decl_uid=186996, cgraph_uid=3323, symbol_order=4096)

Merging blocks 4 and 234
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 40
Removing basic block 44
Removing basic block 74
Removing basic block 91
Removing basic block 92
Removing basic block 98
Removing basic block 123
Removing basic block 151
Removing basic block 162
Removing basic block 163
Removing basic block 164
Removing basic block 181
Removing basic block 183
Removing basic block 205
Removing basic block 218
Removing basic block 219
Removing basic block 223
Removing basic block 232
Merging blocks 233 and 235
;; 9 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 6
;;  header 210, latch 209
;;  depth 1, outer 0
;;  nodes: 210 209 203 208 207 206 205 204 179 202 181 180 201 190 200 191 199 192 198 197 196 195 194 193 187 189 188 186 185 184 183 182 176 178 172 177 173 171 170 175 174
;;
;; Loop 8
;;  header 201, latch 200
;;  depth 2, outer 6
;;  nodes: 201 200 191 199 192 198 197 196 195 194 193
;;
;; Loop 7
;;  header 178, latch 177
;;  depth 2, outer 6
;;  nodes: 178 177 173
;;
;; Loop 5
;;  header 141, latch 140
;;  depth 1, outer 0
;;  nodes: 141 140 130 139 138 137 136 135 134 133 132 131 129 128 127
;;
;; Loop 4
;;  header 114, latch 113
;;  depth 1, outer 0
;;  nodes: 114 113 103 112 111 110 109 108 107 106 105 104 102 101 100
;;
;; Loop 3
;;  header 85, latch 84
;;  depth 1, outer 0
;;  nodes: 85 84 56 61 60 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 67 68 64 63 62 66 65 59 58 57 55 54
;;
;; Loop 2
;;  header 52, latch 51
;;  depth 1, outer 0
;;  nodes: 52 51 50 49
;;
;; Loop 1
;;  header 37, latch 36
;;  depth 1, outer 0
;;  nodes: 37 36 21 35 27 29 31 28 30 25 26 22 23 24 34 33 32
;; 2 succs { 240 3 }
;; 3 succs { 4 5 }
;; 4 succs { 212 }
;; 5 succs { 240 6 }
;; 6 succs { 240 7 }
;; 7 succs { 239 8 }
;; 8 succs { 238 9 }
;; 9 succs { 238 10 }
;; 10 succs { 11 39 }
;; 11 succs { 238 12 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 39 }
;; 17 succs { 215 18 }
;; 18 succs { 215 19 }
;; 19 succs { 214 20 }
;; 20 succs { 37 }
;; 21 succs { 22 36 }
;; 22 succs { 23 26 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 36 }
;; 28 succs { 29 36 }
;; 29 succs { 30 36 }
;; 30 succs { 213 31 }
;; 31 succs { 32 36 }
;; 32 succs { 213 33 }
;; 33 succs { 213 34 }
;; 34 succs { 213 35 }
;; 35 succs { 213 36 }
;; 36 succs { 37 }
;; 37 succs { 21 38 }
;; 38 succs { 39 }
;; 39 succs { 40 89 }
;; 40 succs { 41 89 }
;; 41 succs { 238 42 }
;; 42 succs { 43 89 }
;; 43 succs { 224 44 }
;; 44 succs { 224 45 }
;; 45 succs { 223 46 }
;; 46 succs { 222 47 }
;; 47 succs { 216 48 }
;; 48 succs { 52 }
;; 49 succs { 218 50 }
;; 50 succs { 217 51 }
;; 51 succs { 52 }
;; 52 succs { 49 53 }
;; 53 succs { 85 }
;; 54 succs { 222 55 }
;; 55 succs { 222 56 }
;; 56 succs { 57 84 }
;; 57 succs { 222 58 }
;; 58 succs { 222 59 }
;; 59 succs { 222 60 }
;; 60 succs { 61 84 }
;; 61 succs { 62 84 }
;; 62 succs { 222 63 }
;; 63 succs { 219 64 }
;; 64 succs { 65 68 }
;; 65 succs { 221 66 }
;; 66 succs { 220 67 }
;; 67 succs { 222 69 }
;; 68 succs { 222 69 }
;; 69 succs { 222 70 }
;; 70 succs { 222 71 }
;; 71 succs { 222 72 }
;; 72 succs { 222 73 }
;; 73 succs { 222 74 }
;; 74 succs { 222 75 }
;; 75 succs { 222 76 }
;; 76 succs { 222 77 }
;; 77 succs { 222 78 }
;; 78 succs { 222 79 }
;; 79 succs { 222 80 }
;; 80 succs { 222 81 }
;; 81 succs { 222 82 }
;; 82 succs { 222 83 }
;; 83 succs { 222 84 }
;; 84 succs { 85 }
;; 85 succs { 54 86 }
;; 86 succs { 87 88 }
;; 87 succs { 88 }
;; 88 succs { 89 }
;; 89 succs { 238 90 }
;; 90 succs { 91 94 }
;; 91 succs { 92 94 }
;; 92 succs { 93 94 }
;; 93 succs { 95 }
;; 94 succs { 95 }
;; 95 succs { 96 116 }
;; 96 succs { 227 97 }
;; 97 succs { 227 98 }
;; 98 succs { 226 99 }
;; 99 succs { 114 }
;; 100 succs { 225 101 }
;; 101 succs { 225 102 }
;; 102 succs { 225 103 }
;; 103 succs { 104 113 }
;; 104 succs { 225 105 }
;; 105 succs { 225 106 }
;; 106 succs { 225 107 }
;; 107 succs { 225 108 }
;; 108 succs { 225 109 }
;; 109 succs { 225 110 }
;; 110 succs { 225 111 }
;; 111 succs { 225 112 }
;; 112 succs { 225 113 }
;; 113 succs { 114 }
;; 114 succs { 100 115 }
;; 115 succs { 116 }
;; 116 succs { 238 117 }
;; 117 succs { 118 121 }
;; 118 succs { 119 121 }
;; 119 succs { 120 121 }
;; 120 succs { 122 }
;; 121 succs { 122 }
;; 122 succs { 123 143 }
;; 123 succs { 230 124 }
;; 124 succs { 230 125 }
;; 125 succs { 229 126 }
;; 126 succs { 141 }
;; 127 succs { 228 128 }
;; 128 succs { 228 129 }
;; 129 succs { 228 130 }
;; 130 succs { 131 140 }
;; 131 succs { 228 132 }
;; 132 succs { 228 133 }
;; 133 succs { 228 134 }
;; 134 succs { 228 135 }
;; 135 succs { 228 136 }
;; 136 succs { 228 137 }
;; 137 succs { 228 138 }
;; 138 succs { 228 139 }
;; 139 succs { 228 140 }
;; 140 succs { 141 }
;; 141 succs { 127 142 }
;; 142 succs { 143 }
;; 143 succs { 144 150 }
;; 144 succs { 145 150 }
;; 145 succs { 146 150 }
;; 146 succs { 147 150 }
;; 147 succs { 148 150 }
;; 148 succs { 149 150 }
;; 149 succs { 238 150 }
;; 150 succs { 151 153 }
;; 151 succs { 152 153 }
;; 152 succs { 153 }
;; 153 succs { 154 167 }
;; 154 succs { 238 155 }
;; 155 succs { 156 167 }
;; 156 succs { 232 157 }
;; 157 succs { 232 158 }
;; 158 succs { 231 159 }
;; 159 succs { 160 162 }
;; 160 succs { 161 162 }
;; 161 succs { 163 }
;; 162 succs { 163 }
;; 163 succs { 164 166 }
;; 164 succs { 231 165 }
;; 165 succs { 231 166 }
;; 166 succs { 167 }
;; 167 succs { 238 168 }
;; 168 succs { 169 211 }
;; 169 succs { 210 }
;; 170 succs { 236 171 }
;; 171 succs { 236 172 }
;; 172 succs { 178 }
;; 173 succs { 174 177 }
;; 174 succs { 236 175 }
;; 175 succs { 236 176 }
;; 176 succs { 179 }
;; 177 succs { 178 }
;; 178 succs { 173 179 }
;; 179 succs { 180 203 }
;; 180 succs { 236 181 }
;; 181 succs { 182 203 }
;; 182 succs { 235 183 }
;; 183 succs { 235 184 }
;; 184 succs { 235 185 }
;; 185 succs { 233 186 }
;; 186 succs { 187 188 }
;; 187 succs { 233 190 }
;; 188 succs { 233 189 }
;; 189 succs { 233 190 }
;; 190 succs { 201 }
;; 191 succs { 192 200 }
;; 192 succs { 193 200 }
;; 193 succs { 233 194 }
;; 194 succs { 233 195 }
;; 195 succs { 233 196 }
;; 196 succs { 233 197 }
;; 197 succs { 233 198 }
;; 198 succs { 199 200 }
;; 199 succs { 200 }
;; 200 succs { 201 }
;; 201 succs { 191 202 }
;; 202 succs { 203 }
;; 203 succs { 204 209 }
;; 204 succs { 236 205 }
;; 205 succs { 236 206 }
;; 206 succs { 236 207 }
;; 207 succs { 236 208 }
;; 208 succs { 209 }
;; 209 succs { 210 }
;; 210 succs { 170 211 }
;; 211 succs { 1 }
;; 212 succs { 1 }
;; 213 succs { 214 }
;; 214 succs { 215 }
;; 215 succs { 238 }
;; 216 succs { 222 }
;; 217 succs { 218 }
;; 218 succs { 222 }
;; 219 succs { 222 }
;; 220 succs { 221 }
;; 221 succs { 222 }
;; 222 succs { 223 }
;; 223 succs { 224 }
;; 224 succs { 238 }
;; 225 succs { 226 }
;; 226 succs { 227 }
;; 227 succs { 238 }
;; 228 succs { 229 }
;; 229 succs { 230 }
;; 230 succs { 238 }
;; 231 succs { 232 }
;; 232 succs { 238 }
;; 233 succs { 234 }
;; 234 succs { 235 }
;; 235 succs { 236 }
;; 236 succs { 237 }
;; 237 succs { 238 }
;; 238 succs { 239 }
;; 239 succs { 240 }
;; 240 succs { }
int trace_function_path (union tree_node * function_tree, int fucntion_level, union tree_node * mallocStmt_tree, int * freecount)
{
  const char * D.248147;
  const char * D.248143;
  const char * D.248142;
  const char * D.248141;
  struct function_return_array * D.248140;
  struct function_return_array * D.248139;
  struct function_return_array * D.248138;
  struct function_return_array * D.248137;
  const char * D.248136;
  const char * D.248135;
  struct function_return_array * D.248134;
  const char * D.248131;
  struct function_return_array * D.248130;
  struct function_return_array * D.248129;
  struct function_return_array * D.248128;
  const char * D.248124;
  struct function_pthread_exit_array * D.248123;
  struct function_pthread_exit_array * D.248122;
  const char * D.248118;
  struct function_pthread_detched_array * D.248117;
  struct function_pthread_detched_array * D.248116;
  const char * D.248112;
  union tree_node * D.248109;
  int * D.248107;
  union tree_node * D.248106;
  bool D.248105;
  union tree_node * D.248102;
  void * D.248100;
  struct function_free_array * D.248099;
  struct function_free_array * D.248098;
  bool D.248094;
  struct function_return_array * D.248093;
  struct function_return_array * D.248092;
  const char * D.248091;
  struct function_path_array * D.248090;
  struct function_path_array * D.248089;
  int k;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  int o;
  int find;
  int i;
  struct function_return_array callerFunArray;
  struct pt_solution * pt1;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct cgraph_node * node;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_exit_array callerFunArray;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_detched_array callerFunArray;
  long unsigned int x;
  int k;
  int k;
  struct hash_map * function_basicblock_collect;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  struct pt_solution * pt;
  struct ptr_info_def * pi;
  int k;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct function_return_array calleeFunArray;
  struct vector callerRetTypearray;
  struct function_return_array * callerFunArray;
  const char * name;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.488;
  bool retval.486;
  bool retval.478;
  bool retval.475;
  bool retval.472;
  bool retval.471;
  bool retval.470;
  bool retval.468;
  bool iftmp.462;
  bool retval.461;
  bool retval.458;
  bool retval.457;
  bool retval.450;
  bool iftmp.435;
  bool retval.434;
  bool retval.433;
  bool iftmp.418;
  bool retval.417;
  struct hash_map * function_basicblock_collect.416;
  bool retval.415;
  union tree_node * const D.193193;
  const int D.193194;
  union tree_node * const D.193192;
  bool retval.400;
  bool retval.396;
  bool retval.395;
  union tree_node * const D.193189;
  const int D.193190;
  void * D.193187;
  bool retval.392;
  bool retval.389;
  bool retval.386;
  bool retval.385;
  bool iftmp.384;
  bool retval.383;
  bool retval.382;
  bool iftmp.377;
  bool retval.376;
  int D.247922;
  bool retval.370;

  <bb 2> :
  function_path_collect.371_1 = function_path_collect;
  D.248089 = hash_map<tree_node*, function_path_array>::get (function_path_collect.371_1, &function_tree);

  <bb 3> :
  _2 = D.248089;
  retval.370 = _2 == 0B;
  if (retval.370 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.247922 = 0;
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  goto <bb 212>; [INV]

  <bb 5> :
  _3 = rand ();
  _4 = (long unsigned int) _3;
  now_fucntion = _4;
  function_path_collect.372_5 = function_path_collect;
  D.248090 = hash_map<tree_node*, function_path_array>::get (function_path_collect.372_5, &function_tree);

  <bb 6> :
  _6 = D.248090;
  function_path_array::function_path_array (&fun_array, _6);

  <bb 7> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 8> :
  fistconunt = 0;
  _7 = std::vector<function_path>::size (&function_path_array);
  function_tree.373_8 = function_tree;
  D.248091 = get_name (function_tree.373_8);

  <bb 9> :
  _9 = D.248091;
  stderr.374_10 = stderr;
  fprintf (stderr.374_10, "\x1b[40;44m =======trace_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _9, _7, fucntion_level);

  <bb 10> :
  retmod.375_11 = retmod;
  if (retmod.375_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 11> :
  function_return_collect.378_12 = function_return_collect;
  D.248092 = hash_map<tree_node*, function_return_array>::get (function_return_collect.378_12, &function_tree);

  <bb 12> :
  _13 = D.248092;
  if (_13 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  fucntion_level.379_14 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.380_15 = RET_HEAP_OBJECT;
  if (fucntion_level.379_14 == RET_HEAP_OBJECT.380_15)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.377 = 1;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.377 = 0;

  <bb 16> :
  retval.376 = iftmp.377;
  if (retval.376 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 17> :
  function_return_collect.381_16 = function_return_collect;
  D.248093 = hash_map<tree_node*, function_return_array>::get (function_return_collect.381_16, &function_tree);

  <bb 18> :
  _17 = D.248093;
  function_return_array::function_return_array (&callerFunArray, _17);

  <bb 19> :
  std::vector<return_type>::vector (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 20> :
  k = 0;
  goto <bb 37>; [INV]

  <bb 21> :
  _18 = (long unsigned int) k;
  _19 = std::vector<return_type>::operator[] (&callerRetTypearray, _18);
  _20 = _19->return_tree;
  retval.382 = _20 != 0B;
  if (retval.382 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 22> :
  _21 = mallocStmt_tree->base.code;
  if (_21 != 26)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  _22 = mallocStmt_tree->base.code;
  if (_22 != 33)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 24> :
  _23 = (long unsigned int) k;
  _24 = std::vector<return_type>::operator[] (&callerRetTypearray, _23);
  _25 = _24->return_tree;
  _26 = _25->base.code;
  if (_26 != 33)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  iftmp.384 = 1;
  goto <bb 27>; [INV]

  <bb 26> :
  iftmp.384 = 0;

  <bb 27> :
  retval.383 = iftmp.384;
  if (retval.383 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 28> :
  _27 = (long unsigned int) k;
  _28 = std::vector<return_type>::operator[] (&callerRetTypearray, _27);
  _29 = _28->return_tree;
  _30 = _29->base.code;
  retval.385 = _30 != 26;
  if (retval.385 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 29> :
  pi = mallocStmt_tree->ssa_name.info.ptr_info;
  pt = &pi->pt;
  if (pi != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 30> :
  _31 = (long unsigned int) k;
  _32 = std::vector<return_type>::operator[] (&callerRetTypearray, _31);
  _33 = _32->return_tree;
  D.248094 = ptr_derefs_may_alias_p (_33, mallocStmt_tree);

  <bb 31> :
  retval.386 = D.248094;
  if (retval.386 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 32> :
  stderr.387_34 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find return stmt  \x1b[0m\n", 1, 33, stderr.387_34);

  <bb 33> :
  stderr.388_35 = stderr;
  __builtin_fwrite ("\x1b[40;31m  this fucntion return heap-object  \x1b[0m\n", 1, 49, stderr.388_35);

  <bb 34> :
  _36 = (long unsigned int) k;
  _37 = std::vector<return_type>::operator[] (&callerRetTypearray, _36);
  _38 = _37->stmt;
  debug_gimple_stmt (_38);

  <bb 35> :
  _39 = (long unsigned int) k;
  _40 = std::vector<return_type>::operator[] (&callerRetTypearray, _39);
  _41 = _40->stmt;
  _42 = gimple_location (_41);
  warning_at (_42, 0, "use location");

  <bb 36> :
  k = k + 1;

  <bb 37> :
  _43 = (long unsigned int) k;
  _44 = std::vector<return_type>::size (&callerRetTypearray);
  retval.389 = _43 < _44;
  if (retval.389 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 38> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 39> :
  if (mallocStmt_tree != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 40> :
  fucntion_level.390_45 = (unsigned int) fucntion_level;
  DISABLE_TREACE.391_46 = DISABLE_TREACE;
  if (fucntion_level.390_45 != DISABLE_TREACE.391_46)
    goto <bb 41>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 41> :
  function_free_collect.393_47 = function_free_collect;
  D.248098 = hash_map<tree_node*, function_free_array>::get (function_free_collect.393_47, &function_tree);

  <bb 42> :
  _48 = D.248098;
  retval.392 = _48 != 0B;
  if (retval.392 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 43> :
  function_free_collect.394_49 = function_free_collect;
  D.248099 = hash_map<tree_node*, function_free_array>::get (function_free_collect.394_49, &function_tree);

  <bb 44> :
  _50 = D.248099;
  function_free_array::function_free_array (&callerFunArray, _50);

  <bb 45> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 46> :
  D.248100 = operator new (48);

  <bb 47> :
  D.193187 = D.248100;
  hash_map<tree_node*, int>::hash_map (D.193187, 13, 0, 1, 0);

  <bb 48> :
  function_basicblock_collect = D.193187;
  k = 0;
  goto <bb 52>; [INV]

  <bb 49> :
  D.193190 = 0;
  _51 = (long unsigned int) k;
  _52 = std::vector<free_type>::operator[] (&callerRetTypearray, _51);
  _53 = _52->stmt;
  D.248102 = gimple_block (_53);

  <bb 50> :
  _54 = D.248102;
  D.193189 = _54;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193189, &D.193190);

  <bb 51> :
  D.193189 = {CLOBBER};
  D.193190 = {CLOBBER};
  k = k + 1;

  <bb 52> :
  _55 = (long unsigned int) k;
  _56 = std::vector<free_type>::size (&callerRetTypearray);
  retval.395 = _55 < _56;
  if (retval.395 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 53> :
  k = 0;
  goto <bb 85>; [INV]

  <bb 54> :
  _57 = (long unsigned int) k;
  _58 = std::vector<free_type>::operator[] (&callerRetTypearray, _57);
  _59 = _58->stmt;
  debug_gimple_stmt (_59);

  <bb 55> :
  _60 = (long unsigned int) k;
  _61 = std::vector<free_type>::operator[] (&callerRetTypearray, _60);
  _62 = _61->free_tree;
  D.248105 = ptr_derefs_may_alias_p (_62, mallocStmt_tree);

  <bb 56> :
  retval.396 = D.248105;
  if (retval.396 != 0)
    goto <bb 57>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 57> :
  stderr.397_63 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find free stmt free same pointer \x1b[0m\n", 1, 48, stderr.397_63);

  <bb 58> :
  _64 = (long unsigned int) k;
  _65 = std::vector<free_type>::operator[] (&callerRetTypearray, _64);
  _66 = _65->stmt;
  debug_gimple_stmt (_66);

  <bb 59> :
  _67 = (long unsigned int) k;
  _68 = std::vector<free_type>::operator[] (&callerRetTypearray, _67);
  _69 = _68->stmt;
  _70 = gimple_location (_69);
  warning_at (_70, 0, "use location");

  <bb 60> :
  _71 = *freecount;
  _72 = _71 + 1;
  *freecount = _72;
  freemod.398_73 = freemod;
  if (freemod.398_73 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 61> :
  debugmod.399_74 = debugmod;
  if (debugmod.399_74 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 62> :
  _75 = (long unsigned int) k;
  _76 = std::vector<free_type>::operator[] (&callerRetTypearray, _75);
  _77 = _76->stmt;
  D.248106 = gimple_block (_77);

  <bb 63> :
  _78 = D.248106;
  D.193192 = _78;
  D.248107 = hash_map<tree_node*, int>::get (function_basicblock_collect, &D.193192);

  <bb 64> :
  _79 = D.248107;
  _80 = *_79;
  retval.400 = _80 == 0;
  D.193192 = {CLOBBER};
  if (retval.400 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 65> :
  D.193194 = 1;
  _81 = (long unsigned int) k;
  _82 = std::vector<free_type>::operator[] (&callerRetTypearray, _81);
  _83 = _82->stmt;
  D.248109 = gimple_block (_83);

  <bb 66> :
  _84 = D.248109;
  D.193193 = _84;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193193, &D.193194);

  <bb 67> :
  D.193193 = {CLOBBER};
  D.193194 = {CLOBBER};
  stderr.401_85 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.401_85);
  goto <bb 69>; [INV]

  <bb 68> :
  stderr.402_86 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.402_86);

  <bb 69> :
  now_fucntion.403_87 = now_fucntion;
  stderr.404_88 = stderr;
  fprintf (stderr.404_88, "ID : %lu\n", now_fucntion.403_87);

  <bb 70> :
  _89 = (long unsigned int) k;
  _90 = std::vector<free_type>::operator[] (&callerRetTypearray, _89);
  _91 = _90->stmt;
  _92 = gimple_bb (_91);
  _93 = _92->index;
  function_tree.405_94 = function_tree;
  D.248112 = get_name (function_tree.405_94);

  <bb 71> :
  _95 = D.248112;
  stderr.406_96 = stderr;
  fprintf (stderr.406_96, "from %s basic block %d", _95, _93);

  <bb 72> :
  stderr.407_97 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.407_97);

  <bb 73> :
  _98 = (long unsigned int) k;
  _99 = std::vector<free_type>::operator[] (&callerRetTypearray, _98);
  _100 = _99->stmt;
  now_laststmt = _100;
  _101 = rand ();
  x = (long unsigned int) _101;
  now_laststmtid = x;
  stderr.408_102 = stderr;
  fprintf (stderr.408_102, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 74> :
  _103 = (long unsigned int) k;
  _104 = std::vector<free_type>::operator[] (&callerRetTypearray, _103);
  _105 = _104->stmt;
  debug (_105);

  <bb 75> :
  _106 = (long unsigned int) k;
  _107 = std::vector<free_type>::operator[] (&callerRetTypearray, _106);
  _108 = _107->stmt;
  _109 = gimple_location (_108);
  warning_at (_109, 0, "use location");

  <bb 76> :
  stderr.409_110 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.409_110);

  <bb 77> :
  stderr.410_111 = stderr;
  __builtin_fwrite ("dot graph target color desc", 1, 27, stderr.410_111);

  <bb 78> :
  stderr.411_112 = stderr;
  __builtin_fwrite ("green", 1, 5, stderr.411_112);

  <bb 79> :
  stderr.412_113 = stderr;
  __builtin_fwrite ("dot graph target color desend\n\n", 1, 31, stderr.412_113);

  <bb 80> :
  stderr.413_114 = stderr;
  fprintf (stderr.413_114, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 81> :
  _115 = (long unsigned int) k;
  _116 = std::vector<free_type>::operator[] (&callerRetTypearray, _115);
  _117 = _116->stmt;
  debug (_117);

  <bb 82> :
  _118 = (long unsigned int) k;
  _119 = std::vector<free_type>::operator[] (&callerRetTypearray, _118);
  _120 = _119->stmt;
  _121 = gimple_location (_120);
  warning_at (_121, 0, "use location");

  <bb 83> :
  stderr.414_122 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.414_122);

  <bb 84> :
  k = k + 1;

  <bb 85> :
  _123 = (long unsigned int) k;
  _124 = std::vector<free_type>::size (&callerRetTypearray);
  retval.415 = _123 < _124;
  if (retval.415 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  function_basicblock_collect.416 = function_basicblock_collect;
  if (function_basicblock_collect.416 != 0B)
    goto <bb 87>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 87> :
  hash_map<tree_node*, int>::~hash_map (function_basicblock_collect.416);
  operator delete (function_basicblock_collect.416, 48);

  <bb 88> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 89> :
  function_pthread_detched_collect.419_125 = function_pthread_detched_collect;
  D.248116 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.419_125, &function_tree);

  <bb 90> :
  _126 = D.248116;
  if (_126 != 0B)
    goto <bb 91>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 91> :
  if (fucntion_level == -1)
    goto <bb 92>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 92> :
  fucntion_level.420_127 = (unsigned int) fucntion_level;
  DISABLE_TREACE.421_128 = DISABLE_TREACE;
  if (fucntion_level.420_127 != DISABLE_TREACE.421_128)
    goto <bb 93>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 93> :
  iftmp.418 = 1;
  goto <bb 95>; [INV]

  <bb 94> :
  iftmp.418 = 0;

  <bb 95> :
  retval.417 = iftmp.418;
  if (retval.417 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 96> :
  function_pthread_detched_collect.422_129 = function_pthread_detched_collect;
  D.248117 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.422_129, &function_tree);

  <bb 97> :
  _130 = D.248117;
  function_pthread_detched_array::function_pthread_detched_array (&callerFunArray, _130);

  <bb 98> :
  std::vector<pthread_detched_type>::vector (&callerRetTypearray, &callerFunArray.pthread_detched_array);

  <bb 99> :
  k = 0;
  goto <bb 114>; [INV]

  <bb 100> :
  stderr.423_131 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find pthread_detched stmt  \x1b[0m\n", 1, 42, stderr.423_131);

  <bb 101> :
  _132 = (long unsigned int) k;
  _133 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _132);
  _134 = _133->stmt;
  debug_gimple_stmt (_134);

  <bb 102> :
  _135 = (long unsigned int) k;
  _136 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _135);
  _137 = _136->stmt;
  _138 = gimple_location (_137);
  warning_at (_138, 0, "use location");

  <bb 103> :
  _139 = *freecount;
  _140 = _139 + 1;
  *freecount = _140;
  pthread_detachedmod.424_141 = pthread_detachedmod;
  if (pthread_detachedmod.424_141 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 104> :
  stderr.425_142 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.425_142);

  <bb 105> :
  now_fucntion.426_143 = now_fucntion;
  stderr.427_144 = stderr;
  fprintf (stderr.427_144, "ID : %lu\n", now_fucntion.426_143);

  <bb 106> :
  _145 = (long unsigned int) k;
  _146 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _145);
  _147 = _146->stmt;
  _148 = gimple_bb (_147);
  _149 = _148->index;
  function_tree.428_150 = function_tree;
  D.248118 = get_name (function_tree.428_150);

  <bb 107> :
  _151 = D.248118;
  stderr.429_152 = stderr;
  fprintf (stderr.429_152, "from %s basic block %d", _151, _149);

  <bb 108> :
  stderr.430_153 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.430_153);

  <bb 109> :
  _154 = (long unsigned int) k;
  _155 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _154);
  _156 = _155->stmt;
  now_laststmt = _156;
  _157 = rand ();
  x = (long unsigned int) _157;
  now_laststmtid = x;
  stderr.431_158 = stderr;
  fprintf (stderr.431_158, "dot graph relate stmt start ID : %lu stmt(pthread_detched)) :", x);

  <bb 110> :
  _159 = (long unsigned int) k;
  _160 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _159);
  _161 = _160->stmt;
  debug (_161);

  <bb 111> :
  _162 = (long unsigned int) k;
  _163 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _162);
  _164 = _163->stmt;
  _165 = gimple_location (_164);
  warning_at (_165, 0, "use location");

  <bb 112> :
  stderr.432_166 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.432_166);

  <bb 113> :
  k = k + 1;

  <bb 114> :
  _167 = (long unsigned int) k;
  _168 = std::vector<pthread_detched_type>::size (&callerRetTypearray);
  retval.433 = _167 < _168;
  if (retval.433 != 0)
    goto <bb 100>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 115> :
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 116> :
  function_pthread_exit_collect.436_169 = function_pthread_exit_collect;
  D.248122 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.436_169, &function_tree);

  <bb 117> :
  _170 = D.248122;
  if (_170 != 0B)
    goto <bb 118>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 118> :
  if (fucntion_level == -1)
    goto <bb 119>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 119> :
  fucntion_level.437_171 = (unsigned int) fucntion_level;
  DISABLE_TREACE.438_172 = DISABLE_TREACE;
  if (fucntion_level.437_171 != DISABLE_TREACE.438_172)
    goto <bb 120>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 120> :
  iftmp.435 = 1;
  goto <bb 122>; [INV]

  <bb 121> :
  iftmp.435 = 0;

  <bb 122> :
  retval.434 = iftmp.435;
  if (retval.434 != 0)
    goto <bb 123>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 123> :
  function_pthread_exit_collect.439_173 = function_pthread_exit_collect;
  D.248123 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.439_173, &function_tree);

  <bb 124> :
  _174 = D.248123;
  function_pthread_exit_array::function_pthread_exit_array (&callerFunArray, _174);

  <bb 125> :
  std::vector<pthread_exit_type>::vector (&callerRetTypearray, &callerFunArray.pthread_exit_array);

  <bb 126> :
  k = 0;
  goto <bb 141>; [INV]

  <bb 127> :
  stderr.440_175 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find pthread_exit stmt  \x1b[0m\n", 1, 39, stderr.440_175);

  <bb 128> :
  _176 = (long unsigned int) k;
  _177 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _176);
  _178 = _177->stmt;
  debug_gimple_stmt (_178);

  <bb 129> :
  _179 = (long unsigned int) k;
  _180 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _179);
  _181 = _180->stmt;
  _182 = gimple_location (_181);
  warning_at (_182, 0, "use location");

  <bb 130> :
  pthread_exitmod.441_183 = pthread_exitmod;
  if (pthread_exitmod.441_183 != 0)
    goto <bb 131>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 131> :
  stderr.442_184 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.442_184);

  <bb 132> :
  now_fucntion.443_185 = now_fucntion;
  stderr.444_186 = stderr;
  fprintf (stderr.444_186, "ID : %lu\n", now_fucntion.443_185);

  <bb 133> :
  _187 = (long unsigned int) k;
  _188 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _187);
  _189 = _188->stmt;
  _190 = gimple_bb (_189);
  _191 = _190->index;
  function_tree.445_192 = function_tree;
  D.248124 = get_name (function_tree.445_192);

  <bb 134> :
  _193 = D.248124;
  stderr.446_194 = stderr;
  fprintf (stderr.446_194, "from %s basic block %d", _193, _191);

  <bb 135> :
  stderr.447_195 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.447_195);

  <bb 136> :
  _196 = (long unsigned int) k;
  _197 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _196);
  _198 = _197->stmt;
  now_laststmt = _198;
  _199 = rand ();
  x = (long unsigned int) _199;
  now_laststmtid = x;
  stderr.448_200 = stderr;
  fprintf (stderr.448_200, "dot graph relate stmt start ID : %lu stmt(pthread_exit) :", x);

  <bb 137> :
  _201 = (long unsigned int) k;
  _202 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _201);
  _203 = _202->stmt;
  debug (_203);

  <bb 138> :
  _204 = (long unsigned int) k;
  _205 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _204);
  _206 = _205->stmt;
  _207 = gimple_location (_206);
  warning_at (_207, 0, "use location");

  <bb 139> :
  stderr.449_208 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.449_208);

  <bb 140> :
  k = k + 1;

  <bb 141> :
  _209 = (long unsigned int) k;
  _210 = std::vector<pthread_exit_type>::size (&callerRetTypearray);
  retval.450 = _209 < _210;
  if (retval.450 != 0)
    goto <bb 127>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 142> :
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 143> :
  tracerelatestmt.451_211 = tracerelatestmt;
  _212 = (int) tracerelatestmt.451_211;
  if (_212 == 1)
    goto <bb 144>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 144> :
  if (fucntion_level != -1)
    goto <bb 145>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 145> :
  fucntion_level.452_213 = (unsigned int) fucntion_level;
  DISABLE_TREACE.453_214 = DISABLE_TREACE;
  if (fucntion_level.452_213 != DISABLE_TREACE.453_214)
    goto <bb 146>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 146> :
  if (mallocStmt_tree != 0B)
    goto <bb 147>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 147> :
  pi1 = mallocStmt_tree->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 148>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 148> :
  _215 = BIT_FIELD_REF <*pt1, 8, 0>;
  _216 = _215 & 16;
  if (_216 != 0)
    goto <bb 149>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 149> :
  function_tree.454_217 = function_tree;
  trace_fucntion_relate_stmt (node, function_tree.454_217, mallocStmt_tree);

  <bb 150> :
  if (fucntion_level != -1)
    goto <bb 151>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 151> :
  fucntion_level.455_218 = (unsigned int) fucntion_level;
  DISABLE_TREACE.456_219 = DISABLE_TREACE;
  if (fucntion_level.455_218 != DISABLE_TREACE.456_219)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  fucntion_level = fucntion_level + 1;

  <bb 153> :
  _220 = std::vector<function_path>::size (&function_path_array);
  retval.457 = _220 == 0;
  if (retval.457 != 0)
    goto <bb 154>; [INV]
  else
    goto <bb 167>; [INV]

  <bb 154> :
  function_return_collect.459_221 = function_return_collect;
  D.248128 = hash_map<tree_node*, function_return_array>::get (function_return_collect.459_221, &function_tree);

  <bb 155> :
  _222 = D.248128;
  retval.458 = _222 != 0B;
  if (retval.458 != 0)
    goto <bb 156>; [INV]
  else
    goto <bb 167>; [INV]

  <bb 156> :
  function_return_collect.460_223 = function_return_collect;
  D.248129 = hash_map<tree_node*, function_return_array>::get (function_return_collect.460_223, &function_tree);

  <bb 157> :
  _224 = D.248129;
  function_return_array::function_return_array (&callerFunArray, _224);

  <bb 158> :
  function_return_collect.463_225 = function_return_collect;
  D.248130 = hash_map<tree_node*, function_return_array>::get (function_return_collect.463_225, &function_tree);

  <bb 159> :
  _226 = D.248130;
  if (_226 != 0B)
    goto <bb 160>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 160> :
  _227 = callerFunArray.return_type_num;
  if (_227 == 2)
    goto <bb 161>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 161> :
  iftmp.462 = 1;
  goto <bb 163>; [INV]

  <bb 162> :
  iftmp.462 = 0;

  <bb 163> :
  retval.461 = iftmp.462;
  if (retval.461 != 0)
    goto <bb 164>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 164> :
  function_tree.464_228 = function_tree;
  D.248131 = get_name (function_tree.464_228);

  <bb 165> :
  _229 = D.248131;
  stderr.465_230 = stderr;
  fprintf (stderr.465_230, "%s this fucntion return value is heap-object \n", _229);

  <bb 166> :
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};

  <bb 167> :
  function_return_collect.466_231 = function_return_collect;
  D.248134 = hash_map<tree_node*, function_return_array>::get (function_return_collect.466_231, &function_tree);

  <bb 168> :
  callerFunArray = D.248134;
  std::vector<return_type>::vector (&callerRetTypearray);
  function_return_array::function_return_array (&calleeFunArray);
  if (callerFunArray != 0B)
    goto <bb 169>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 169> :
  i = 0;
  goto <bb 210>; [INV]

  <bb 170> :
  find = 0;
  _232 = (long unsigned int) i;
  _233 = std::vector<function_path>::operator[] (&function_path_array, _232);
  _234 = _233->next;
  D.248135 = get_name (_234);

  <bb 171> :
  _235 = D.248135;
  stderr.467_236 = stderr;
  fprintf (stderr.467_236, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _235);

  <bb 172> :
  o = 0;
  goto <bb 178>; [INV]

  <bb 173> :
  _237 = (long unsigned int) o;
  _238 = std::vector<tree_node*>::operator[] (&traceStack, _237);
  _239 = *_238;
  _240 = (long unsigned int) i;
  _241 = std::vector<function_path>::operator[] (&function_path_array, _240);
  _242 = _241->next;
  retval.468 = _239 == _242;
  if (retval.468 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 174> :
  find = 1;
  _243 = (long unsigned int) o;
  _244 = std::vector<tree_node*>::operator[] (&traceStack, _243);
  _245 = *_244;
  D.248136 = get_name (_245);

  <bb 175> :
  _246 = D.248136;
  stderr.469_247 = stderr;
  fprintf (stderr.469_247, "\x1b[40;41m =======recursive_fun2:%s========= \x1b[0m\n", _246);

  <bb 176> :
  goto <bb 179>; [INV]

  <bb 177> :
  o = o + 1;

  <bb 178> :
  _248 = (long unsigned int) o;
  _249 = std::vector<tree_node*>::size (&traceStack);
  retval.470 = _248 < _249;
  if (retval.470 != 0)
    goto <bb 173>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 179> :
  _250 = (long unsigned int) i;
  _251 = std::vector<function_path>::operator[] (&function_path_array, _250);
  _252 = _251->next;
  retval.471 = _252 != 0B;
  if (retval.471 != 0)
    goto <bb 180>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 180> :
  function_return_collect.473_253 = function_return_collect;
  _254 = (long unsigned int) i;
  _255 = std::vector<function_path>::operator[] (&function_path_array, _254);
  _256 = &_255->next;
  D.248137 = hash_map<tree_node*, function_return_array>::get (function_return_collect.473_253, _256);

  <bb 181> :
  _257 = D.248137;
  retval.472 = _257 != 0B;
  if (retval.472 != 0)
    goto <bb 182>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 182> :
  _258 = &callerFunArray->return_type_array;
  std::vector<return_type>::operator= (&callerRetTypearray, _258);

  <bb 183> :
  function_return_collect.474_259 = function_return_collect;
  _260 = (long unsigned int) i;
  _261 = std::vector<function_path>::operator[] (&function_path_array, _260);
  _262 = &_261->next;
  D.248138 = hash_map<tree_node*, function_return_array>::get (function_return_collect.474_259, _262);

  <bb 184> :
  _263 = D.248138;
  function_return_array::operator= (&calleeFunArray, _263);

  <bb 185> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _264 = (long unsigned int) i;
  _265 = std::vector<function_path>::operator[] (&function_path_array, _264);
  _266 = _265->next;
  getFucntionDecl = _266;
  function_return_collect.476_267 = function_return_collect;
  D.248139 = hash_map<tree_node*, function_return_array>::get (function_return_collect.476_267, &getFucntionDecl);

  <bb 186> :
  _268 = D.248139;
  retval.475 = _268 == 0B;
  if (retval.475 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 187> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 190>; [INV]

  <bb 188> :
  function_return_collect.477_269 = function_return_collect;
  D.248140 = hash_map<tree_node*, function_return_array>::get (function_return_collect.477_269, &getFucntionDecl);

  <bb 189> :
  _270 = D.248140;
  function_return_array::operator= (&find_fun_array, _270);

  <bb 190> :
  k = 0;
  goto <bb 201>; [INV]

  <bb 191> :
  _271 = calleeFunArray.return_type_num;
  if (_271 == 2)
    goto <bb 192>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 192> :
  _272 = (long unsigned int) k;
  _273 = std::vector<return_type>::operator[] (&callerRetTypearray, _272);
  _274 = _273->return_tree;
  _275 = (long unsigned int) i;
  _276 = std::vector<function_path>::operator[] (&function_path_array, _275);
  _277 = _276->next;
  retval.478 = _274 == _277;
  if (retval.478 != 0)
    goto <bb 193>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 193> :
  _278 = (long unsigned int) i;
  _279 = std::vector<function_path>::operator[] (&function_path_array, _278);
  _280 = _279->next;
  D.248141 = get_name (_280);

  <bb 194> :
  _281 = D.248141;
  stderr.479_282 = stderr;
  fprintf (stderr.479_282, "%s this fucntion return value is heap-object \n", _281);

  <bb 195> :
  _283 = (long unsigned int) k;
  _284 = std::vector<return_type>::operator[] (&callerRetTypearray, _283);
  _285 = _284->return_tree;
  D.248142 = get_name (_285);

  <bb 196> :
  _286 = D.248142;
  function_tree.480_287 = function_tree;
  D.248143 = get_name (function_tree.480_287);

  <bb 197> :
  _288 = D.248143;
  stderr.481_289 = stderr;
  fprintf (stderr.481_289, "%s this fucntion return value is heap-object %s\n", _288, _286);

  <bb 198> :
  fucntion_level.482_290 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.483_291 = RET_HEAP_OBJECT;
  if (fucntion_level.482_290 == RET_HEAP_OBJECT.483_291)
    goto <bb 199>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 199> :
  EFFECTIVE.484_292 = EFFECTIVE;
  EFFECTIVE.485_293 = (int) EFFECTIVE.484_292;
  *freecount = EFFECTIVE.485_293;

  <bb 200> :
  k = k + 1;

  <bb 201> :
  _294 = (long unsigned int) k;
  _295 = std::vector<return_type>::size (&callerRetTypearray);
  retval.486 = _294 < _295;
  if (retval.486 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 202> :
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};

  <bb 203> :
  if (find == 0)
    goto <bb 204>; [INV]
  else
    goto <bb 209>; [INV]

  <bb 204> :
  _296 = (long unsigned int) i;
  _297 = std::vector<function_path>::operator[] (&function_path_array, _296);
  _298 = _297->next;
  D.248147 = get_name (_298);

  <bb 205> :
  _299 = D.248147;
  stderr.487_300 = stderr;
  fprintf (stderr.487_300, "\x1b[40;46m =======add node_fun stack:%s========= \x1b[0m\n", _299);

  <bb 206> :
  _301 = (long unsigned int) i;
  _302 = std::vector<function_path>::operator[] (&function_path_array, _301);
  _303 = &_302->next;
  std::vector<tree_node*>::push_back (&traceStack, _303);

  <bb 207> :
  _304 = (long unsigned int) i;
  _305 = std::vector<function_path>::operator[] (&function_path_array, _304);
  _306 = _305->next;
  trace_function_path (_306, fucntion_level, mallocStmt_tree, freecount);

  <bb 208> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 209> :
  i = i + 1;

  <bb 210> :
  _307 = (long unsigned int) i;
  _308 = std::vector<function_path>::size (&function_path_array);
  retval.488 = _307 < _308;
  if (retval.488 != 0)
    goto <bb 170>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 211> :
  function_return_array::~function_return_array (&calleeFunArray);
  std::vector<return_type>::~vector (&callerRetTypearray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  return;

  <bb 212> :
<L161>:
  return D.247922;

  <bb 213> :
<L162>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 6

  <bb 214> :
<L163>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 5

  <bb 215> :
<L164>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 4

  <bb 216> :
<L165>:
  operator delete (D.193187, 48);
  resx 13

  <bb 217> :
<L166>:
  D.193189 = {CLOBBER};
  resx 16

  <bb 218> :
<L167>:
  D.193190 = {CLOBBER};
  resx 15

  <bb 219> :
<L168>:
  D.193192 = {CLOBBER};
  resx 19

  <bb 220> :
<L169>:
  D.193193 = {CLOBBER};
  resx 22

  <bb 221> :
<L170>:
  D.193194 = {CLOBBER};
  resx 21

  <bb 222> :
<L171>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 12

  <bb 223> :
<L172>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 11

  <bb 224> :
<L173>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 10

  <bb 225> :
<L174>:
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  resx 31

  <bb 226> :
<L175>:
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  resx 30

  <bb 227> :
<L176>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 29

  <bb 228> :
<L177>:
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  resx 37

  <bb 229> :
<L178>:
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  resx 36

  <bb 230> :
<L179>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 35

  <bb 231> :
<L180>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 42

  <bb 232> :
<L181>:
  callerFunArray = {CLOBBER};
  resx 41

  <bb 233> :
<L182>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 49

  <bb 234> :
<L183>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 48

  <bb 235> :
<L184>:
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  resx 47

  <bb 236> :
<L185>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 46

  <bb 237> :
<L186>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 45

  <bb 238> :
<L187>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 239> :
<L188>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 240> :
<L189>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_path_array>::get (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7652, decl_uid=191906, cgraph_uid=4284, symbol_order=5066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path_array * hash_map<tree_node*, function_path_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248163;
  struct hash_entry & D.248162;
  unsigned int D.248161;
  struct hash_entry & e;
  struct function_path_array * iftmp.489;
  struct function_path_array * D.248155;

  <bb 2> :
  _1 = &this->m_table;
  D.248161 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.248161;
  D.248162 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248162;
  D.248163 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  _3 = D.248163;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.489 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.489 = &e->m_value;

  <bb 5> :
  D.248155 = iftmp.489;

  <bb 6> :
<L3>:
  return D.248155;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE4hashERKS2_, funcdef_no=8516, decl_uid=191862, cgraph_uid=5148, symbol_order=5934)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (union tree_node * const & h)
{
  hashval_t D.248164;

  <bb 2> :
  D.248164 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248164;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8517, decl_uid=192049, cgraph_uid=5149, symbol_order=5935)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248198;
  bool D.248197;
  bool D.248196;
  bool D.248195;
  bool D.248194;
  bool D.248193;
  struct value_type * D.248192;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.493;
  bool retval.492;
  struct value_type & D.248178;
  bool iftmp.491;
  bool retval.490;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.248193 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248193;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248194 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248194;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248195 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _11 = D.248195;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.491 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.491 = 0;

  <bb 8> :
  retval.490 = iftmp.491;
  if (retval.490 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248178 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.248196 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248196;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248197 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248197;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248198 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _23 = D.248198;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.493 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.493 = 0;

  <bb 18> :
  retval.492 = iftmp.493;
  if (retval.492 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248178 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248178;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8921, decl_uid=192145, cgraph_uid=5553, symbol_order=6339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248201;
  bool D.248199;

  <bb 2> :
  D.248201 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (v);
  D.248199 = D.248201;

  <bb 3> :
<L0>:
  return D.248199;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8790, decl_uid=191975, cgraph_uid=5422, symbol_order=6208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248204;
  bool D.248202;

  <bb 2> :
  D.248204 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.248202 = D.248204;

  <bb 3> :
<L0>:
  return D.248202;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8922, decl_uid=192143, cgraph_uid=5554, symbol_order=6340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248207;
  bool D.248205;

  <bb 2> :
  D.248207 = hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (v);
  D.248205 = D.248207;

  <bb 3> :
<L0>:
  return D.248205;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9740, decl_uid=191970, cgraph_uid=6372, symbol_order=7158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248210;
  bool D.248208;

  <bb 2> :
  D.248210 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.248208 = D.248210;

  <bb 3> :
<L0>:
  return D.248208;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10295, decl_uid=237340, cgraph_uid=6927, symbol_order=7717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248211;

  <bb 2> :
  _1 = entry->m_key;
  D.248211 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248211;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9289, decl_uid=191963, cgraph_uid=5921, symbol_order=6707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248215;
  bool D.248213;

  <bb 2> :
  _1 = &a->m_key;
  D.248215 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_1, b);
  D.248213 = D.248215;

  <bb 3> :
<L0>:
  return D.248213;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10equal_keysERKS2_S7_, funcdef_no=9976, decl_uid=191864, cgraph_uid=6608, symbol_order=7398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248216;

  <bb 2> :
  D.248216 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248216;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8518, decl_uid=211216, cgraph_uid=5150, symbol_order=5936)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248218;

  <bb 2> :
  _1 = entry->m_key;
  D.248218 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248218;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2ERKS_, funcdef_no=6318, decl_uid=192244, cgraph_uid=3293, symbol_order=4066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, const struct function_path_array & D.192246)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192246->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192246->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2ERKS2_, funcdef_no=7654, decl_uid=174518, cgraph_uid=4286, symbol_order=5068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<function_path>::vector (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.248224;
  struct __normal_iterator D.248221;
  struct __normal_iterator D.248220;
  struct allocator D.211327;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174555;
  _2 = &__x->D.174555;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  D.211327 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<function_path>::size (__x);
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _4, &D.211327);

  <bb 3> :
  std::allocator<function_path>::~allocator (&D.211327);
  D.211327 = {CLOBBER};
  _5 = &this->D.174555;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = this->D.174555._M_impl.D.173900._M_start;
  D.248220 = std::vector<function_path>::end (__x);
  D.248221 = std::vector<function_path>::begin (__x);
  D.248224 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (D.248221, D.248220, _7, _6);

  <bb 4> :
  _8 = D.248224;
  this->D.174555._M_impl.D.173900._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<function_path>::~allocator (&D.211327);
  resx 2

  <bb 6> :
<L1>:
  D.211327 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.174555;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8520, decl_uid=173790, cgraph_uid=5152, symbol_order=5938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248226;

  <bb 2> :
  D.248226 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248226;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E17_S_select_on_copyERKS2_, funcdef_no=8519, decl_uid=173762, cgraph_uid=5151, symbol_order=5937)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI13function_pathEE37select_on_container_copy_constructionERKS1_, funcdef_no=9290, decl_uid=173727, cgraph_uid=5922, symbol_order=6708)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<function_path>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2ERKS0_, funcdef_no=9978, decl_uid=173670, cgraph_uid=6610, symbol_order=7400)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2ERKS2_, funcdef_no=10491, decl_uid=173599, cgraph_uid=7123, symbol_order=7913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.173601)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EmRKS1_, funcdef_no=8522, decl_uid=173987, cgraph_uid=5154, symbol_order=5940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9292, decl_uid=173892, cgraph_uid=5924, symbol_order=6710)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this, __a);
  _1 = &this->D.173900;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8739, decl_uid=173847, cgraph_uid=5371, symbol_order=6157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_M_create_storageEm, funcdef_no=9294, decl_uid=173911, cgraph_uid=5926, symbol_order=6712)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.248233;

  <bb 2> :
  D.248233 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (this, __n);
  _1 = D.248233;
  this->_M_impl.D.173900._M_start = _1;
  _2 = this->_M_impl.D.173900._M_start;
  this->_M_impl.D.173900._M_finish = _2;
  _3 = this->_M_impl.D.173900._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.173900._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE11_M_allocateEm, funcdef_no=9559, decl_uid=173904, cgraph_uid=6191, symbol_order=6977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path * std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.248240;
  struct function_path * iftmp.494;
  struct function_path * D.248234;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248240 = std::allocator_traits<std::allocator<function_path> >::allocate (_1, __n);
  iftmp.494 = D.248240;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.494 = 0B;

  <bb 5> :
  D.248234 = iftmp.494;

  <bb 6> :
<L3>:
  return D.248234;

}



;; Function std::allocator_traits<std::allocator<function_path> >::allocate (_ZNSt16allocator_traitsISaI13function_pathEE8allocateERS1_m, funcdef_no=10149, decl_uid=173705, cgraph_uid=6781, symbol_order=7571)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct function_path * std::allocator_traits<std::allocator<function_path> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct function_path * D.248243;
  struct function_path * D.248241;

  <bb 2> :
  D.248243 = __gnu_cxx::new_allocator<function_path>::allocate (__a, __n, 0B);
  D.248241 = D.248243;

  <bb 3> :
<L0>:
  return D.248241;

}



;; Function __gnu_cxx::new_allocator<function_path>::allocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE8allocateEmPKv, funcdef_no=10610, decl_uid=173559, cgraph_uid=7243, symbol_order=8033)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct function_path * __gnu_cxx::new_allocator<function_path>::allocate (struct new_allocator * const this, size_type __n, const void * D.243626)
{
  struct function_path * D.248254;
  struct function_path * D.248253;
  align_val_t __al;
  struct function_path * D.248251;
  bool retval.495;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.495 = _4 != 0;
  if (retval.495 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248254 = operator new (_6);
  D.248251 = D.248254;

  <bb 7> :
<L6>:
  return D.248251;

}



;; Function __gnu_cxx::new_allocator<function_path>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE11_M_max_sizeEv, funcdef_no=10611, decl_uid=173586, cgraph_uid=7242, symbol_order=8032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248255;

  <bb 2> :
  D.248255 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248255;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implD2Ev, funcdef_no=6798, decl_uid=173947, cgraph_uid=3426, symbol_order=4200)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<function_path>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<function_path>::~allocator (_ZNSaI13function_pathED2Ev, funcdef_no=7793, decl_uid=173680, cgraph_uid=4425, symbol_order=5207)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathED2Ev, funcdef_no=8742, decl_uid=173609, cgraph_uid=5374, symbol_order=6160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8526, decl_uid=173788, cgraph_uid=5158, symbol_order=5944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248257;

  <bb 2> :
  D.248257 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248257;

}



;; Function std::vector<function_path>::end (_ZNKSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=8525, decl_uid=174170, cgraph_uid=5157, symbol_order=5943)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::end (const struct vector * const this)
{
  struct const_iterator D.221972;
  struct const_iterator D.248259;

  <bb 2> :
  _1 = &this->D.174555._M_impl.D.173900._M_finish;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.221972, _1);
  D.248259 = D.221972;
  D.221972 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248259;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9296, decl_uid=211296, cgraph_uid=5928, symbol_order=6714)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, const struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<function_path>::begin (_ZNKSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=8524, decl_uid=174166, cgraph_uid=5156, symbol_order=5942)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::begin (const struct vector * const this)
{
  struct const_iterator D.221970;
  struct const_iterator D.248262;

  <bb 2> :
  _1 = &this->D.174555._M_impl.D.173900._M_start;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.221970, _1);
  D.248262 = D.221970;
  D.221970 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248262;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8527, decl_uid=211316, cgraph_uid=5159, symbol_order=5945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result, struct allocator & D.221977)
{
  struct function_path * D.248267;
  struct function_path * D.248265;

  <bb 2> :
  D.248267 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.248265 = D.248267;

  <bb 3> :
<L0>:
  return D.248265;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9298, decl_uid=221979, cgraph_uid=5931, symbol_order=6717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248270;
  const bool __assignable;
  struct function_path * D.248268;

  <bb 2> :
  __assignable = 1;
  D.248270 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.248268 = D.248270;

  <bb 3> :
<L0>:
  return D.248268;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9980, decl_uid=233150, cgraph_uid=6612, symbol_order=7402)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248273;
  struct function_path * D.248271;

  <bb 2> :
  D.248273 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.248271 = D.248273;

  <bb 3> :
<L0>:
  return D.248271;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10493, decl_uid=239705, cgraph_uid=7125, symbol_order=7915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248278;
  struct __normal_iterator D.248276;
  struct __normal_iterator D.248275;
  struct function_path * D.248274;

  <bb 2> :
  D.248275 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.248276 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.248278 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (D.248276, D.248275, __result);
  D.248274 = D.248278;

  <bb 3> :
<L0>:
  return D.248274;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9560, decl_uid=227178, cgraph_uid=6192, symbol_order=6978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.248279;

  <bb 2> :
  D.248279 = __it;

  <bb 3> :
<L0>:
  return D.248279;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10784, decl_uid=243130, cgraph_uid=7416, symbol_order=8208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248283;
  struct function_path * D.248281;

  <bb 2> :
  __result.496_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.496_1);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _4 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.248283 = std::__copy_move_a1<false, const function_path*, function_path*> (_4, _3, _2);
  _5 = D.248283;
  D.248281 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.248281;

}



;; Function std::__niter_base<function_path*> (_ZSt12__niter_baseIP13function_pathET_S2_, funcdef_no=10155, decl_uid=227446, cgraph_uid=6787, symbol_order=7577)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.248284;

  <bb 2> :
  D.248284 = __it;

  <bb 3> :
<L0>:
  return D.248284;

}



;; Function std::__niter_base<const function_path*, std::vector<function_path> > (_ZSt12__niter_baseIPK13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10150, decl_uid=235498, cgraph_uid=6782, symbol_order=7572)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * std::__niter_base<const function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  const struct function_path * D.248286;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (&__it);
  D.248286 = *_1;

  <bb 3> :
<L0>:
  return D.248286;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10612, decl_uid=211283, cgraph_uid=7244, symbol_order=8034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * const & __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  const struct function_path * const & D.248288;

  <bb 2> :
  D.248288 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248288;

}



;; Function std::__copy_move_a1<false, const function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10152, decl_uid=235652, cgraph_uid=6784, symbol_order=7574)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.248292;
  struct function_path * D.248290;

  <bb 2> :
  D.248292 = std::__copy_move_a2<false, const function_path*, function_path*> (__first, __last, __result);
  D.248290 = D.248292;

  <bb 3> :
<L0>:
  return D.248290;

}



;; Function std::__copy_move_a2<false, const function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10613, decl_uid=240422, cgraph_uid=7245, symbol_order=8035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.248293;

  <bb 2> :
  D.248293 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.248293;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI13function_pathEEPT_PKS4_S7_S5_, funcdef_no=10811, decl_uid=243649, cgraph_uid=7443, symbol_order=8235)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  const ptrdiff_t _Num;
  struct function_path * D.248298;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.497_2 = (long unsigned int) _Num;
  _3 = _Num.497_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.498_4 = (long unsigned int) _Num;
  _5 = _Num.498_4 * 24;
  D.248298 = __result + _5;

  <bb 5> :
<L3>:
  return D.248298;

}



;; Function std::__niter_wrap<function_path*> (_ZSt12__niter_wrapIP13function_pathET_RKS2_S2_, funcdef_no=10157, decl_uid=235695, cgraph_uid=6789, symbol_order=7579)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_wrap<function_path*> (struct function_path * const & D.240444, struct function_path * __res)
{
  struct function_path * D.248300;

  <bb 2> :
  D.248300 = __res;

  <bb 3> :
<L0>:
  return D.248300;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EED2Ev, funcdef_no=7796, decl_uid=174010, cgraph_uid=4428, symbol_order=5210)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.173900._M_end_of_storage;
  _2 = this->_M_impl.D.173900._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.173900._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8744, decl_uid=173907, cgraph_uid=5376, symbol_order=6162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (struct _Vector_base * const this, struct function_path * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<function_path> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::deallocate (_ZNSt16allocator_traitsISaI13function_pathEE10deallocateERS1_PS0_m, funcdef_no=9557, decl_uid=173712, cgraph_uid=6189, symbol_order=6975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::deallocate (struct allocator_type & __a, struct function_path * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::deallocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE10deallocateEPS1_m, funcdef_no=10148, decl_uid=173563, cgraph_uid=6780, symbol_order=7570)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::deallocate (struct new_allocator * const this, struct function_path * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, function_free_array>::get (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7660, decl_uid=192388, cgraph_uid=4292, symbol_order=5074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_free_array * hash_map<tree_node*, function_free_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248316;
  struct hash_entry & D.248315;
  unsigned int D.248314;
  struct hash_entry & e;
  struct function_free_array * iftmp.499;
  struct function_free_array * D.248308;

  <bb 2> :
  _1 = &this->m_table;
  D.248314 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.248314;
  D.248315 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248315;
  D.248316 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  _3 = D.248316;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.499 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.499 = &e->m_value;

  <bb 5> :
  D.248308 = iftmp.499;

  <bb 6> :
<L3>:
  return D.248308;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE4hashERKS2_, funcdef_no=8529, decl_uid=192344, cgraph_uid=5161, symbol_order=5947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (union tree_node * const & h)
{
  hashval_t D.248317;

  <bb 2> :
  D.248317 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248317;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8530, decl_uid=192531, cgraph_uid=5162, symbol_order=5948)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248351;
  bool D.248350;
  bool D.248349;
  bool D.248348;
  bool D.248347;
  bool D.248346;
  struct value_type * D.248345;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.503;
  bool retval.502;
  struct value_type & D.248331;
  bool iftmp.501;
  bool retval.500;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.248346 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248346;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248347 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248347;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248348 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _11 = D.248348;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.501 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.501 = 0;

  <bb 8> :
  retval.500 = iftmp.501;
  if (retval.500 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248331 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.248349 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248349;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248350 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248350;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248351 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _23 = D.248351;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.503 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.503 = 0;

  <bb 18> :
  retval.502 = iftmp.503;
  if (retval.502 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248331 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248331;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8925, decl_uid=192627, cgraph_uid=5557, symbol_order=6343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248354;
  bool D.248352;

  <bb 2> :
  D.248354 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (v);
  D.248352 = D.248354;

  <bb 3> :
<L0>:
  return D.248352;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8644, decl_uid=192457, cgraph_uid=5276, symbol_order=6062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248357;
  bool D.248355;

  <bb 2> :
  D.248357 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.248355 = D.248357;

  <bb 3> :
<L0>:
  return D.248355;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8926, decl_uid=192625, cgraph_uid=5558, symbol_order=6344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248360;
  bool D.248358;

  <bb 2> :
  D.248360 = hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (v);
  D.248358 = D.248360;

  <bb 3> :
<L0>:
  return D.248358;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9742, decl_uid=192452, cgraph_uid=6374, symbol_order=7160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248363;
  bool D.248361;

  <bb 2> :
  D.248363 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.248361 = D.248363;

  <bb 3> :
<L0>:
  return D.248361;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10296, decl_uid=237346, cgraph_uid=6928, symbol_order=7718)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248364;

  <bb 2> :
  _1 = entry->m_key;
  D.248364 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248364;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9302, decl_uid=192445, cgraph_uid=5934, symbol_order=6720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248368;
  bool D.248366;

  <bb 2> :
  _1 = &a->m_key;
  D.248368 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_1, b);
  D.248366 = D.248368;

  <bb 3> :
<L0>:
  return D.248366;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10equal_keysERKS2_S7_, funcdef_no=9984, decl_uid=192346, cgraph_uid=6616, symbol_order=7406)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248369;

  <bb 2> :
  D.248369 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248369;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8531, decl_uid=211350, cgraph_uid=5163, symbol_order=5949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248371;

  <bb 2> :
  _1 = entry->m_key;
  D.248371 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248371;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2ERKS_, funcdef_no=6324, decl_uid=192726, cgraph_uid=3299, symbol_order=4072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, const struct function_free_array & D.192728)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192728->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2ERKS2_, funcdef_no=7662, decl_uid=176619, cgraph_uid=4294, symbol_order=5076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<free_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.248377;
  struct __normal_iterator D.248374;
  struct __normal_iterator D.248373;
  struct allocator D.211465;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176656;
  _2 = &__x->D.176656;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  D.211465 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<free_type>::size (__x);
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _4, &D.211465);

  <bb 3> :
  std::allocator<free_type>::~allocator (&D.211465);
  D.211465 = {CLOBBER};
  _5 = &this->D.176656;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.176656._M_impl.D.176001._M_start;
  D.248373 = std::vector<free_type>::end (__x);
  D.248374 = std::vector<free_type>::begin (__x);
  D.248377 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (D.248374, D.248373, _7, _6);

  <bb 4> :
  _8 = D.248377;
  this->D.176656._M_impl.D.176001._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<free_type>::~allocator (&D.211465);
  resx 2

  <bb 6> :
<L1>:
  D.211465 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.176656;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8533, decl_uid=175891, cgraph_uid=5165, symbol_order=5951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248379;

  <bb 2> :
  D.248379 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248379;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8532, decl_uid=175863, cgraph_uid=5164, symbol_order=5950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI9free_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9303, decl_uid=175828, cgraph_uid=5935, symbol_order=6721)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<free_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2ERKS0_, funcdef_no=9986, decl_uid=175771, cgraph_uid=6618, symbol_order=7408)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2ERKS2_, funcdef_no=10500, decl_uid=175700, cgraph_uid=7132, symbol_order=7922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.175702)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EmRKS1_, funcdef_no=8535, decl_uid=176088, cgraph_uid=5167, symbol_order=5953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9305, decl_uid=175993, cgraph_uid=5937, symbol_order=6723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this, __a);
  _1 = &this->D.176001;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8621, decl_uid=175948, cgraph_uid=5253, symbol_order=6039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9307, decl_uid=176012, cgraph_uid=5939, symbol_order=6725)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.248386;

  <bb 2> :
  D.248386 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (this, __n);
  _1 = D.248386;
  this->_M_impl.D.176001._M_start = _1;
  _2 = this->_M_impl.D.176001._M_start;
  this->_M_impl.D.176001._M_finish = _2;
  _3 = this->_M_impl.D.176001._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.176001._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE11_M_allocateEm, funcdef_no=9409, decl_uid=176005, cgraph_uid=6041, symbol_order=6827)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.248393;
  struct free_type * iftmp.504;
  struct free_type * D.248387;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248393 = std::allocator_traits<std::allocator<free_type> >::allocate (_1, __n);
  iftmp.504 = D.248393;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.504 = 0B;

  <bb 5> :
  D.248387 = iftmp.504;

  <bb 6> :
<L3>:
  return D.248387;

}



;; Function std::allocator_traits<std::allocator<free_type> >::allocate (_ZNSt16allocator_traitsISaI9free_typeEE8allocateERS1_m, funcdef_no=10059, decl_uid=175806, cgraph_uid=6691, symbol_order=7481)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type * std::allocator_traits<std::allocator<free_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct free_type * D.248396;
  struct free_type * D.248394;

  <bb 2> :
  D.248396 = __gnu_cxx::new_allocator<free_type>::allocate (__a, __n, 0B);
  D.248394 = D.248396;

  <bb 3> :
<L0>:
  return D.248394;

}



;; Function __gnu_cxx::new_allocator<free_type>::allocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE8allocateEmPKv, funcdef_no=10554, decl_uid=175660, cgraph_uid=7187, symbol_order=7977)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct free_type * __gnu_cxx::new_allocator<free_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243374)
{
  struct free_type * D.248407;
  struct free_type * D.248406;
  align_val_t __al;
  struct free_type * D.248404;
  bool retval.505;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.505 = _4 != 0;
  if (retval.505 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248407 = operator new (_6);
  D.248404 = D.248407;

  <bb 7> :
<L6>:
  return D.248404;

}



;; Function __gnu_cxx::new_allocator<free_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE11_M_max_sizeEv, funcdef_no=10555, decl_uid=175687, cgraph_uid=7186, symbol_order=7976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248408;

  <bb 2> :
  D.248408 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248408;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6363, decl_uid=176048, cgraph_uid=3336, symbol_order=4109)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<free_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<free_type>::~allocator (_ZNSaI9free_typeED2Ev, funcdef_no=7719, decl_uid=175781, cgraph_uid=4351, symbol_order=5133)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeED2Ev, funcdef_no=8624, decl_uid=175710, cgraph_uid=5256, symbol_order=6042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8539, decl_uid=175889, cgraph_uid=5171, symbol_order=5957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248410;

  <bb 2> :
  D.248410 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248410;

}



;; Function std::vector<free_type>::end (_ZNKSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8538, decl_uid=176271, cgraph_uid=5170, symbol_order=5956)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::end (const struct vector * const this)
{
  struct const_iterator D.222047;
  struct const_iterator D.248412;

  <bb 2> :
  _1 = &this->D.176656._M_impl.D.176001._M_finish;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.222047, _1);
  D.248412 = D.222047;
  D.222047 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248412;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9309, decl_uid=211434, cgraph_uid=5941, symbol_order=6727)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, const struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNKSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8537, decl_uid=176267, cgraph_uid=5169, symbol_order=5955)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222045;
  struct const_iterator D.248415;

  <bb 2> :
  _1 = &this->D.176656._M_impl.D.176001._M_start;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.222045, _1);
  D.248415 = D.222045;
  D.222045 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248415;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8540, decl_uid=211454, cgraph_uid=5172, symbol_order=5958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result, struct allocator & D.222052)
{
  struct free_type * D.248420;
  struct free_type * D.248418;

  <bb 2> :
  D.248420 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.248418 = D.248420;

  <bb 3> :
<L0>:
  return D.248418;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9311, decl_uid=222054, cgraph_uid=5944, symbol_order=6730)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * D.248423;
  const bool __assignable;
  struct free_type * D.248421;

  <bb 2> :
  __assignable = 1;
  D.248423 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.248421 = D.248423;

  <bb 3> :
<L0>:
  return D.248421;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9988, decl_uid=233319, cgraph_uid=6620, symbol_order=7410)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.248425;
  bool retval.506;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (&__first);
  _2 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, const free_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.506 = __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (&__first, &__last);
  if (retval.506 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248425 = __cur;

  <bb 6> :
<L3>:
  return D.248425;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10505, decl_uid=211392, cgraph_uid=7137, symbol_order=7927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct free_type & D.248427;

  <bb 2> :
  D.248427 = this->_M_current;

  <bb 3> :
<L0>:
  return D.248427;

}



;; Function std::__addressof<free_type> (_ZSt11__addressofI9free_typeEPT_RS1_, funcdef_no=10504, decl_uid=224523, cgraph_uid=7136, symbol_order=7926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__addressof<free_type> (struct free_type & __r)
{
  struct free_type * D.248429;

  <bb 2> :
  D.248429 = __r;

  <bb 3> :
<L0>:
  return D.248429;

}



;; Function std::_Construct<free_type, const free_type&> (_ZSt10_ConstructI9free_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10506, decl_uid=239759, cgraph_uid=7138, symbol_order=7928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, const free_type&> (struct free_type * __p, const struct free_type & __args#0)
{
  void * D.243170;
  void * D.243169;
  const struct free_type * D.243171;

  <bb 2> :
  D.243171 = std::forward<const free_type&> (__args#0);
  D.243169 = __p;
  D.243170 = operator new (24, D.243169);
  MEM[(struct free_type *)D.243170] = *D.243171;
  return;

}



;; Function std::forward<const free_type&> (_ZSt7forwardIRK9free_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9420, decl_uid=224137, cgraph_uid=6052, symbol_order=6838)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct free_type & std::forward<const free_type&> (const struct type & __t)
{
  const struct free_type & D.248431;

  <bb 2> :
  D.248431 = __t;

  <bb 3> :
<L0>:
  return D.248431;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10503, decl_uid=211396, cgraph_uid=7135, symbol_order=7925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.248433;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.248433 = this;

  <bb 3> :
<L0>:
  return D.248433;

}



;; Function __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (_ZN9__gnu_cxxneIPK9free_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10502, decl_uid=239752, cgraph_uid=7134, symbol_order=7924)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.248435;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  D.248435 = _2 != _4;

  <bb 3> :
<L0>:
  return D.248435;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10556, decl_uid=211421, cgraph_uid=7188, symbol_order=7978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * const & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  const struct free_type * const & D.248437;

  <bb 2> :
  D.248437 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248437;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EED2Ev, funcdef_no=7722, decl_uid=176111, cgraph_uid=4354, symbol_order=5136)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.176001._M_end_of_storage;
  _2 = this->_M_impl.D.176001._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.176001._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8626, decl_uid=176008, cgraph_uid=5258, symbol_order=6044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (struct _Vector_base * const this, struct free_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<free_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::deallocate (_ZNSt16allocator_traitsISaI9free_typeEE10deallocateERS1_PS0_m, funcdef_no=9407, decl_uid=175813, cgraph_uid=6039, symbol_order=6825)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::deallocate (struct allocator_type & __a, struct free_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE10deallocateEPS1_m, funcdef_no=10058, decl_uid=175664, cgraph_uid=6690, symbol_order=7480)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::deallocate (struct new_allocator * const this, struct free_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, int>::hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEEC2Embbb, funcdef_no=7668, decl_uid=193179, cgraph_uid=4300, symbol_order=5082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8543, decl_uid=193138, cgraph_uid=5175, symbol_order=5961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.248446;
  unsigned int D.248445;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.248445 = hash_table_higher_prime_index (size);
  size_prime_index = D.248445;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.248446 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.248446;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9314, decl_uid=193084, cgraph_uid=5946, symbol_order=6732)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.248462;
  struct value_type * D.248461;
  struct mem_alloc_description & D.248460;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.248458;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248461 = xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (n);
  nentries = D.248461;
  goto <bb 6>; [INV]

  <bb 5> :
  D.248462 = ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (n);
  nentries = D.248462;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.248458 = nentries;

  <bb 9> :
<L14>:
  return D.248458;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE10data_allocEm, funcdef_no=9990, decl_uid=211511, cgraph_uid=6622, symbol_order=7412)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.248465;
  struct hash_entry * D.248463;

  <bb 2> :
  D.248465 = xcalloc (count, 16);
  D.248463 = D.248465;

  <bb 3> :
<L0>:
  return D.248463;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEPT_m, funcdef_no=9991, decl_uid=233357, cgraph_uid=6623, symbol_order=7413)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (size_t c)
{
  struct hash_entry * D.248472;
  struct hash_entry * D.248471;
  struct hash_entry * D.248469;
  bool retval.507;

  <bb 2> :
  retval.507 = need_finalization_p<hash_map<tree_node*, int>::hash_entry> ();
  if (retval.507 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.248471 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.248469 = D.248471;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.248472 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.248469 = D.248472;

  <bb 5> :
<L2>:
  return D.248469;

}



;; Function finalize<hash_map<tree_node*, int>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEvPv, funcdef_no=10508, decl_uid=239774, cgraph_uid=7140, symbol_order=7930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, int>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, int>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEbv, funcdef_no=10507, decl_uid=239773, cgraph_uid=7139, symbol_order=7929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, int>::hash_entry> ()
{
  bool D.248473;

  <bb 2> :
  D.248473 = 0;

  <bb 3> :
<L0>:
  return D.248473;

}



;; Function hash_map<tree_node*, int>::get (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3getERKS1_, funcdef_no=7673, decl_uid=192865, cgraph_uid=4305, symbol_order=5087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * hash_map<tree_node*, int>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248483;
  struct hash_entry & D.248482;
  unsigned int D.248481;
  struct hash_entry & e;
  int * iftmp.508;
  int * D.248475;

  <bb 2> :
  _1 = &this->m_table;
  D.248481 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.248481;
  D.248482 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248482;
  D.248483 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  _3 = D.248483;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.508 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.508 = &e->m_value;

  <bb 5> :
  D.248475 = iftmp.508;

  <bb 6> :
<L3>:
  return D.248475;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE4hashERKS2_, funcdef_no=8545, decl_uid=192821, cgraph_uid=5177, symbol_order=5963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (union tree_node * const & h)
{
  hashval_t D.248484;

  <bb 2> :
  D.248484 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248484;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8548, decl_uid=193005, cgraph_uid=5180, symbol_order=5966)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248518;
  bool D.248517;
  bool D.248516;
  bool D.248515;
  bool D.248514;
  bool D.248513;
  struct value_type * D.248512;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.512;
  bool retval.511;
  struct value_type & D.248498;
  bool iftmp.510;
  bool retval.509;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 16;
  entry = _5 + _7;
  D.248513 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248513;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248514 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248514;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248515 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _11 = D.248515;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.510 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.510 = 0;

  <bb 8> :
  retval.509 = iftmp.510;
  if (retval.509 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248498 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  entry = _17 + _19;
  D.248516 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248516;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248517 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248517;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248518 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _23 = D.248518;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.512 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.512 = 0;

  <bb 18> :
  retval.511 = iftmp.512;
  if (retval.511 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248498 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248498;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8is_emptyERS8_, funcdef_no=8550, decl_uid=193101, cgraph_uid=5182, symbol_order=5968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248521;
  bool D.248519;

  <bb 2> :
  D.248521 = hash_map<tree_node*, int>::hash_entry::is_empty (v);
  D.248519 = D.248521;

  <bb 3> :
<L0>:
  return D.248519;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry8is_emptyERKS7_, funcdef_no=8547, decl_uid=192934, cgraph_uid=5179, symbol_order=5965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248524;
  bool D.248522;

  <bb 2> :
  D.248524 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  D.248522 = D.248524;

  <bb 3> :
<L0>:
  return D.248522;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10is_deletedERS8_, funcdef_no=8551, decl_uid=193099, cgraph_uid=5183, symbol_order=5969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248527;
  bool D.248525;

  <bb 2> :
  D.248527 = hash_map<tree_node*, int>::hash_entry::is_deleted (v);
  D.248525 = D.248527;

  <bb 3> :
<L0>:
  return D.248525;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10is_deletedERKS7_, funcdef_no=9318, decl_uid=192929, cgraph_uid=5950, symbol_order=6736)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248530;
  bool D.248528;

  <bb 2> :
  D.248530 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (e);
  D.248528 = D.248530;

  <bb 3> :
<L0>:
  return D.248528;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10is_deletedIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=10000, decl_uid=233420, cgraph_uid=6632, symbol_order=7422)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248531;

  <bb 2> :
  _1 = entry->m_key;
  D.248531 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248531;

}



;; Function hash_map<tree_node*, int>::hash_entry::equal (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry5equalERKS7_RKS1_, funcdef_no=9316, decl_uid=192922, cgraph_uid=5948, symbol_order=6734)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248535;
  bool D.248533;

  <bb 2> :
  _1 = &a->m_key;
  D.248535 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_1, b);
  D.248533 = D.248535;

  <bb 3> :
<L0>:
  return D.248533;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10equal_keysERKS2_S6_, funcdef_no=9998, decl_uid=192823, cgraph_uid=6630, symbol_order=7420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248536;

  <bb 2> :
  D.248536 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248536;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE8is_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=8549, decl_uid=211504, cgraph_uid=5181, symbol_order=5967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248538;

  <bb 2> :
  _1 = entry->m_key;
  D.248538 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248538;

}



;; Function gimple_block (_ZL12gimple_blockPK6gimple, funcdef_no=2001, decl_uid=92276, cgraph_uid=1138, symbol_order=1298)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * gimple_block (const struct gimple * g)
{
  union tree_node * D.248546;
  union tree_node * iftmp.513;
  union tree_node * D.248540;

  <bb 2> :
  _1 = g->location;
  _2 = IS_ADHOC_LOC (_1);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = g->location;
  line_table.514_4 = line_table;
  D.248546 = get_data_from_adhoc_loc (line_table.514_4, _3);
  iftmp.513 = D.248546;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.513 = 0B;

  <bb 5> :
  D.248540 = iftmp.513;

  <bb 6> :
<L3>:
  return D.248540;

}



;; Function IS_ADHOC_LOC (_Z12IS_ADHOC_LOCj, funcdef_no=1146, decl_uid=35072, cgraph_uid=320, symbol_order=337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool IS_ADHOC_LOC (location_t loc)
{
  bool D.248547;

  <bb 2> :
  loc.515_1 = (signed int) loc;
  D.248547 = loc.515_1 < 0;

  <bb 3> :
<L0>:
  return D.248547;

}



;; Function hash_map<tree_node*, int>::put (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3putERKS1_RKi, funcdef_no=7672, decl_uid=192861, cgraph_uid=4304, symbol_order=5086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, int>::put (struct hash_map * const this, union tree_node * const & k, const int & v)
{
  bool D.248556;
  struct hash_entry * D.248555;
  unsigned int D.248554;
  bool ins;
  struct hash_entry * e;
  bool D.248552;
  void * D.211500;
  void * D.211499;

  <bb 2> :
  _1 = &this->m_table;
  D.248554 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.248554;
  D.248555 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.248555;
  D.248556 = hash_map<tree_node*, int>::hash_entry::is_empty (e);
  ins = D.248556;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.211499 = &e->m_value;
  D.211500 = operator new (4, D.211499);
  _4 = *v;
  MEM[(int *)D.211500] = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = *v;
  e->m_value = _5;

  <bb 5> :
  D.248552 = ~ins;

  <bb 6> :
<L3>:
  return D.248552;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8546, decl_uid=193016, cgraph_uid=5178, symbol_order=5964)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.248606;
  bool D.248605;
  bool D.248604;
  bool D.248603;
  bool D.248602;
  bool D.248601;
  struct value_type * D.248600;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.521;
  bool retval.520;
  bool retval.519;
  bool retval.518;
  bool retval.517;
  bool retval.516;
  struct value_type * D.248562;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 16;
  entry = _11 + _13;
  size = this->m_size;
  D.248601 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.516 = D.248601;
  if (retval.516 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.248602 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.517 = D.248602;
  if (retval.517 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 16;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.248603 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.518 = D.248603;
  if (retval.518 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  D.248562 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 16;
  entry = _24 + _26;
  D.248604 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.519 = D.248604;
  if (retval.519 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.248605 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.520 = D.248605;
  if (retval.520 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 16;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.248606 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.521 = D.248606;
  if (retval.521 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 16;
  D.248562 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.248562 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.248562 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 16;
  D.248562 = _37 + _39;

  <bb 27> :
<L37>:
  return D.248562;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9315, decl_uid=193097, cgraph_uid=5947, symbol_order=6733)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.248637;
  unsigned int D.248636;
  bool D.248635;
  bool D.248634;
  struct mem_alloc_description & D.248633;
  struct value_type * D.248632;
  unsigned int D.248631;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.233408;
  void * D.233407;
  struct hash_entry * D.233409;
  bool iftmp.525;
  bool retval.524;
  bool iftmp.523;
  bool retval.522;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 16;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.523 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.523 = 0;

  <bb 6> :
  retval.522 = iftmp.523;
  if (retval.522 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.248631 = hash_table_higher_prime_index (_5);
  nindex = D.248631;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.248632 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.248632;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.248634 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.248634;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.248635 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.248635;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.525 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.525 = 0;

  <bb 15> :
  retval.524 = iftmp.525;
  if (retval.524 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.248636 = hash_map<tree_node*, int>::hash_entry::hash (x);
  _16 = D.248636;
  D.248637 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.248637;
  D.233409 = std::move<hash_map<tree_node*, int>::hash_entry&> (x);
  D.233407 = q;
  D.233408 = operator new (16, D.233407);
  MEM[(struct value_type *)D.233408] = *D.233409;

  <bb 17> :
  p = p + 16;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=9992, decl_uid=192992, cgraph_uid=6624, symbol_order=7414)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.248638;

  <bb 2> :
  D.248638 = this->m_size;

  <bb 3> :
<L0>:
  return D.248638;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=9993, decl_uid=192994, cgraph_uid=6625, symbol_order=7415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.248640;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.248640 = _1 - _2;

  <bb 3> :
<L0>:
  return D.248640;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=9994, decl_uid=193094, cgraph_uid=6626, symbol_order=7416)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.526;
  bool D.248642;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.526 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.526 = 0;

  <bb 6> :
  D.248642 = iftmp.526;

  <bb 7> :
<L4>:
  return D.248642;

}



;; Function hash_map<tree_node*, int>::hash_entry::hash (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry4hashERKS7_, funcdef_no=9996, decl_uid=192920, cgraph_uid=6628, symbol_order=7418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, int>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.248651;
  hashval_t D.248649;

  <bb 2> :
  _1 = &e->m_key;
  D.248651 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_1);
  D.248649 = D.248651;

  <bb 3> :
<L0>:
  return D.248649;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=9995, decl_uid=193087, cgraph_uid=6627, symbol_order=7417)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.248664;
  bool D.248663;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.528;
  struct value_type * D.248655;
  bool retval.527;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 16;
  slot = _2 + _4;
  D.248663 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.527 = D.248663;
  if (retval.527 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248655 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 16;
  slot = _8 + _10;
  D.248664 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.528 = D.248664;
  if (retval.528 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.248655 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.248655;

}



;; Function std::move<hash_map<tree_node*, int>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEONSt16remove_referenceIT_E4typeEOSB_, funcdef_no=9997, decl_uid=233381, cgraph_uid=6629, symbol_order=7419)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, int>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.248665;

  <bb 2> :
  D.248665 = __t;

  <bb 3> :
<L0>:
  return D.248665;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE9data_freeEPS8_, funcdef_no=8553, decl_uid=211513, cgraph_uid=5185, symbol_order=5971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10mark_emptyERS8_, funcdef_no=9317, decl_uid=193105, cgraph_uid=5949, symbol_order=6735)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, int>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10mark_emptyERS7_, funcdef_no=9999, decl_uid=192932, cgraph_uid=6631, symbol_order=7421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10mark_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=10509, decl_uid=239800, cgraph_uid=7141, symbol_order=7931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<free_type>::operator[] (_ZNSt6vectorI9free_typeSaIS0_EEixEm, funcdef_no=7671, decl_uid=176309, cgraph_uid=4303, symbol_order=5085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.248668;

  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_start;
  _2 = __n * 24;
  D.248668 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248668;

}



;; Function std::vector<free_type>::size (_ZNKSt6vectorI9free_typeSaIS0_EE4sizeEv, funcdef_no=7670, decl_uid=176289, cgraph_uid=4302, symbol_order=5084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::size (const struct vector * const this)
{
  size_type D.248670;

  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_finish;
  _2 = this->D.176656._M_impl.D.176001._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.248670 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248670;

}



;; Function hash_map<tree_node*, int>::~hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEED2Ev, funcdef_no=6330, decl_uid=193202, cgraph_uid=3305, symbol_order=4078)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7675, decl_uid=193148, cgraph_uid=4307, symbol_order=5089)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.248685;
  bool D.248684;
  size_t i;
  bool iftmp.530;
  bool retval.529;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.248684 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.248684;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.248685 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.248685;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.530 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.530 = 0;

  <bb 7> :
  retval.529 = iftmp.530;
  if (retval.529 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, int>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::remove (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry6removeERS7_, funcdef_no=8552, decl_uid=192925, cgraph_uid=5184, symbol_order=5970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE6removeIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=9319, decl_uid=222123, cgraph_uid=5951, symbol_order=6737)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function ggc_remove<tree_node*>::remove (_ZN10ggc_removeIP9tree_nodeE6removeERS1_, funcdef_no=10001, decl_uid=85315, cgraph_uid=6633, symbol_order=7423)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<tree_node*>::remove (union tree_node * & D.239804)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::get (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7677, decl_uid=193260, cgraph_uid=4309, symbol_order=5091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_detched_array * hash_map<tree_node*, function_pthread_detched_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248694;
  struct hash_entry & D.248693;
  unsigned int D.248692;
  struct hash_entry & e;
  struct function_pthread_detched_array * iftmp.531;
  struct function_pthread_detched_array * D.248686;

  <bb 2> :
  _1 = &this->m_table;
  D.248692 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.248692;
  D.248693 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248693;
  D.248694 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  _3 = D.248694;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.531 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.531 = &e->m_value;

  <bb 5> :
  D.248686 = iftmp.531;

  <bb 6> :
<L3>:
  return D.248686;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE4hashERKS2_, funcdef_no=8554, decl_uid=193216, cgraph_uid=5186, symbol_order=5972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (union tree_node * const & h)
{
  hashval_t D.248695;

  <bb 2> :
  D.248695 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248695;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8555, decl_uid=193403, cgraph_uid=5187, symbol_order=5973)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248729;
  bool D.248728;
  bool D.248727;
  bool D.248726;
  bool D.248725;
  bool D.248724;
  struct value_type * D.248723;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.535;
  bool retval.534;
  struct value_type & D.248709;
  bool iftmp.533;
  bool retval.532;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.248724 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248724;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248725 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248725;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248726 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _11 = D.248726;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.533 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.533 = 0;

  <bb 8> :
  retval.532 = iftmp.533;
  if (retval.532 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248709 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.248727 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248727;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248728 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248728;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248729 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _23 = D.248729;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.535 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.535 = 0;

  <bb 18> :
  retval.534 = iftmp.535;
  if (retval.534 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248709 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248709;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8913, decl_uid=193499, cgraph_uid=5545, symbol_order=6331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248732;
  bool D.248730;

  <bb 2> :
  D.248732 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (v);
  D.248730 = D.248732;

  <bb 3> :
<L0>:
  return D.248730;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8672, decl_uid=193329, cgraph_uid=5304, symbol_order=6090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248735;
  bool D.248733;

  <bb 2> :
  D.248735 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.248733 = D.248735;

  <bb 3> :
<L0>:
  return D.248733;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8914, decl_uid=193497, cgraph_uid=5546, symbol_order=6332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248738;
  bool D.248736;

  <bb 2> :
  D.248738 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (v);
  D.248736 = D.248738;

  <bb 3> :
<L0>:
  return D.248736;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9736, decl_uid=193324, cgraph_uid=6368, symbol_order=7154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248741;
  bool D.248739;

  <bb 2> :
  D.248741 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.248739 = D.248741;

  <bb 3> :
<L0>:
  return D.248739;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10293, decl_uid=237328, cgraph_uid=6925, symbol_order=7715)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248742;

  <bb 2> :
  _1 = entry->m_key;
  D.248742 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248742;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9321, decl_uid=193317, cgraph_uid=5953, symbol_order=6739)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248746;
  bool D.248744;

  <bb 2> :
  _1 = &a->m_key;
  D.248746 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_1, b);
  D.248744 = D.248746;

  <bb 3> :
<L0>:
  return D.248744;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10equal_keysERKS2_S7_, funcdef_no=10004, decl_uid=193218, cgraph_uid=6636, symbol_order=7426)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248747;

  <bb 2> :
  D.248747 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248747;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8556, decl_uid=211533, cgraph_uid=5188, symbol_order=5974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248749;

  <bb 2> :
  _1 = entry->m_key;
  D.248749 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248749;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2ERKS_, funcdef_no=6333, decl_uid=193598, cgraph_uid=3308, symbol_order=4081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.193600)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193600->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2ERKS2_, funcdef_no=7679, decl_uid=177664, cgraph_uid=4311, symbol_order=5093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_detched_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.248755;
  struct __normal_iterator D.248752;
  struct __normal_iterator D.248751;
  struct allocator D.211648;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177701;
  _2 = &__x->D.177701;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  D.211648 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_detched_type>::size (__x);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _4, &D.211648);

  <bb 3> :
  std::allocator<pthread_detched_type>::~allocator (&D.211648);
  D.211648 = {CLOBBER};
  _5 = &this->D.177701;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.177701._M_impl.D.177046._M_start;
  D.248751 = std::vector<pthread_detched_type>::end (__x);
  D.248752 = std::vector<pthread_detched_type>::begin (__x);
  D.248755 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (D.248752, D.248751, _7, _6);

  <bb 4> :
  _8 = D.248755;
  this->D.177701._M_impl.D.177046._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_detched_type>::~allocator (&D.211648);
  resx 2

  <bb 6> :
<L1>:
  D.211648 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.177701;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8558, decl_uid=176936, cgraph_uid=5190, symbol_order=5976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248757;

  <bb 2> :
  D.248757 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248757;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8557, decl_uid=176908, cgraph_uid=5189, symbol_order=5975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9322, decl_uid=176873, cgraph_uid=5954, symbol_order=6740)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2ERKS0_, funcdef_no=10006, decl_uid=176816, cgraph_uid=6638, symbol_order=7428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2ERKS2_, funcdef_no=10517, decl_uid=176745, cgraph_uid=7149, symbol_order=7939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.176747)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EmRKS1_, funcdef_no=8560, decl_uid=177133, cgraph_uid=5192, symbol_order=5978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9324, decl_uid=177038, cgraph_uid=5956, symbol_order=6742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this, __a);
  _1 = &this->D.177046;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8649, decl_uid=176993, cgraph_uid=5281, symbol_order=6067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9326, decl_uid=177057, cgraph_uid=5958, symbol_order=6744)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.248764;

  <bb 2> :
  D.248764 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (this, __n);
  _1 = D.248764;
  this->_M_impl.D.177046._M_start = _1;
  _2 = this->_M_impl.D.177046._M_start;
  this->_M_impl.D.177046._M_finish = _2;
  _3 = this->_M_impl.D.177046._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.177046._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE11_M_allocateEm, funcdef_no=9446, decl_uid=177050, cgraph_uid=6078, symbol_order=6864)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_detched_type * std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.248771;
  struct pthread_detched_type * iftmp.536;
  struct pthread_detched_type * D.248765;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248771 = std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_1, __n);
  iftmp.536 = D.248771;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.536 = 0B;

  <bb 5> :
  D.248765 = iftmp.536;

  <bb 6> :
<L3>:
  return D.248765;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8allocateERS1_m, funcdef_no=10083, decl_uid=176851, cgraph_uid=6715, symbol_order=7505)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_detched_type * D.248774;
  struct pthread_detched_type * D.248772;

  <bb 2> :
  D.248774 = __gnu_cxx::new_allocator<pthread_detched_type>::allocate (__a, __n, 0B);
  D.248772 = D.248774;

  <bb 3> :
<L0>:
  return D.248772;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::allocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE8allocateEmPKv, funcdef_no=10568, decl_uid=176705, cgraph_uid=7201, symbol_order=7991)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * __gnu_cxx::new_allocator<pthread_detched_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243446)
{
  struct pthread_detched_type * D.248785;
  struct pthread_detched_type * D.248784;
  align_val_t __al;
  struct pthread_detched_type * D.248782;
  bool retval.537;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.537 = _4 != 0;
  if (retval.537 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.248785 = operator new (_6);
  D.248782 = D.248785;

  <bb 7> :
<L6>:
  return D.248782;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE11_M_max_sizeEv, funcdef_no=10569, decl_uid=176732, cgraph_uid=7200, symbol_order=7990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248786;

  <bb 2> :
  D.248786 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.248786;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6381, decl_uid=177093, cgraph_uid=3353, symbol_order=4126)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_detched_type>::~allocator (_ZNSaI20pthread_detched_typeED2Ev, funcdef_no=7734, decl_uid=176826, cgraph_uid=4366, symbol_order=5148)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeED2Ev, funcdef_no=8652, decl_uid=176755, cgraph_uid=5284, symbol_order=6070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8564, decl_uid=176934, cgraph_uid=5196, symbol_order=5982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248788;

  <bb 2> :
  D.248788 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248788;

}



;; Function std::vector<pthread_detched_type>::end (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8563, decl_uid=177316, cgraph_uid=5195, symbol_order=5981)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::end (const struct vector * const this)
{
  struct const_iterator D.222171;
  struct const_iterator D.248790;

  <bb 2> :
  _1 = &this->D.177701._M_impl.D.177046._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.222171, _1);
  D.248790 = D.222171;
  D.222171 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248790;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9328, decl_uid=211617, cgraph_uid=5960, symbol_order=6746)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8562, decl_uid=177312, cgraph_uid=5194, symbol_order=5980)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222169;
  struct const_iterator D.248793;

  <bb 2> :
  _1 = &this->D.177701._M_impl.D.177046._M_start;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.222169, _1);
  D.248793 = D.222169;
  D.222169 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248793;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8565, decl_uid=211637, cgraph_uid=5197, symbol_order=5983)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result, struct allocator & D.222176)
{
  struct pthread_detched_type * D.248798;
  struct pthread_detched_type * D.248796;

  <bb 2> :
  D.248798 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.248796 = D.248798;

  <bb 3> :
<L0>:
  return D.248796;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9330, decl_uid=222178, cgraph_uid=5963, symbol_order=6749)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248801;
  const bool __assignable;
  struct pthread_detched_type * D.248799;

  <bb 2> :
  __assignable = 1;
  D.248801 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.248799 = D.248801;

  <bb 3> :
<L0>:
  return D.248799;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10008, decl_uid=233559, cgraph_uid=6640, symbol_order=7430)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248804;
  struct pthread_detched_type * D.248802;

  <bb 2> :
  D.248804 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.248802 = D.248804;

  <bb 3> :
<L0>:
  return D.248802;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10519, decl_uid=239833, cgraph_uid=7151, symbol_order=7941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248809;
  struct __normal_iterator D.248807;
  struct __normal_iterator D.248806;
  struct pthread_detched_type * D.248805;

  <bb 2> :
  D.248806 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.248807 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.248809 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (D.248807, D.248806, __result);
  D.248805 = D.248809;

  <bb 3> :
<L0>:
  return D.248805;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9450, decl_uid=224792, cgraph_uid=6082, symbol_order=6868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.248810;

  <bb 2> :
  D.248810 = __it;

  <bb 3> :
<L0>:
  return D.248810;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10785, decl_uid=243219, cgraph_uid=7417, symbol_order=8209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248814;
  struct pthread_detched_type * D.248812;

  <bb 2> :
  __result.538_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.538_1);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _4 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.248814 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.248814;
  D.248812 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.248812;

}



;; Function std::__niter_base<pthread_detched_type*> (_ZSt12__niter_baseIP20pthread_detched_typeET_S2_, funcdef_no=10089, decl_uid=225058, cgraph_uid=6721, symbol_order=7511)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.248815;

  <bb 2> :
  D.248815 = __it;

  <bb 3> :
<L0>:
  return D.248815;

}



;; Function std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIPK20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10084, decl_uid=234635, cgraph_uid=6716, symbol_order=7506)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  const struct pthread_detched_type * D.248817;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.248817 = *_1;

  <bb 3> :
<L0>:
  return D.248817;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10570, decl_uid=211604, cgraph_uid=7202, symbol_order=7992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_detched_type * const & D.248819;

  <bb 2> :
  D.248819 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248819;

}



;; Function std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10086, decl_uid=234789, cgraph_uid=6718, symbol_order=7508)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248823;
  struct pthread_detched_type * D.248821;

  <bb 2> :
  D.248823 = std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.248821 = D.248823;

  <bb 3> :
<L0>:
  return D.248821;

}



;; Function std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10571, decl_uid=240166, cgraph_uid=7203, symbol_order=7993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248824;

  <bb 2> :
  D.248824 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.248824;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI20pthread_detched_typeEEPT_PKS4_S7_S5_, funcdef_no=10800, decl_uid=243469, cgraph_uid=7432, symbol_order=8224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_detched_type * D.248829;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.539_2 = (long unsigned int) _Num;
  _3 = _Num.539_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.540_4 = (long unsigned int) _Num;
  _5 = _Num.540_4 * 16;
  D.248829 = __result + _5;

  <bb 5> :
<L3>:
  return D.248829;

}



;; Function std::__niter_wrap<pthread_detched_type*> (_ZSt12__niter_wrapIP20pthread_detched_typeET_RKS2_S2_, funcdef_no=10091, decl_uid=234832, cgraph_uid=6723, symbol_order=7513)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_wrap<pthread_detched_type*> (struct pthread_detched_type * const & D.240188, struct pthread_detched_type * __res)
{
  struct pthread_detched_type * D.248831;

  <bb 2> :
  D.248831 = __res;

  <bb 3> :
<L0>:
  return D.248831;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7737, decl_uid=177156, cgraph_uid=4369, symbol_order=5151)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.177046._M_end_of_storage;
  _2 = this->_M_impl.D.177046._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.177046._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8654, decl_uid=177053, cgraph_uid=5286, symbol_order=6072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_detched_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE10deallocateERS1_PS0_m, funcdef_no=9444, decl_uid=176858, cgraph_uid=6076, symbol_order=6862)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (struct allocator_type & __a, struct pthread_detched_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE10deallocateEPS1_m, funcdef_no=10082, decl_uid=176709, cgraph_uid=6714, symbol_order=7504)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (struct new_allocator * const this, struct pthread_detched_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_detched_type>::operator[] (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEixEm, funcdef_no=7685, decl_uid=177354, cgraph_uid=4317, symbol_order=5099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_detched_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.248839;

  <bb 2> :
  _1 = this->D.177701._M_impl.D.177046._M_start;
  _2 = __n * 16;
  D.248839 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248839;

}



;; Function std::vector<pthread_detched_type>::size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE4sizeEv, funcdef_no=7684, decl_uid=177334, cgraph_uid=4316, symbol_order=5098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::size (const struct vector * const this)
{
  size_type D.248841;

  <bb 2> :
  _1 = this->D.177701._M_impl.D.177046._M_finish;
  _2 = this->D.177701._M_impl.D.177046._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.248841 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248841;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::get (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7686, decl_uid=193736, cgraph_uid=4318, symbol_order=5100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_exit_array * hash_map<tree_node*, function_pthread_exit_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248851;
  struct hash_entry & D.248850;
  unsigned int D.248849;
  struct hash_entry & e;
  struct function_pthread_exit_array * iftmp.541;
  struct function_pthread_exit_array * D.248843;

  <bb 2> :
  _1 = &this->m_table;
  D.248849 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.248849;
  D.248850 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248850;
  D.248851 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  _3 = D.248851;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.541 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.541 = &e->m_value;

  <bb 5> :
  D.248843 = iftmp.541;

  <bb 6> :
<L3>:
  return D.248843;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE4hashERKS2_, funcdef_no=8567, decl_uid=193692, cgraph_uid=5199, symbol_order=5985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (union tree_node * const & h)
{
  hashval_t D.248852;

  <bb 2> :
  D.248852 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248852;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8568, decl_uid=193879, cgraph_uid=5200, symbol_order=5986)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248886;
  bool D.248885;
  bool D.248884;
  bool D.248883;
  bool D.248882;
  bool D.248881;
  struct value_type * D.248880;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.545;
  bool retval.544;
  struct value_type & D.248866;
  bool iftmp.543;
  bool retval.542;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.248881 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248881;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248882 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248882;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248883 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _11 = D.248883;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.543 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.543 = 0;

  <bb 8> :
  retval.542 = iftmp.543;
  if (retval.542 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248866 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.248884 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248884;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248885 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248885;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248886 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _23 = D.248886;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.545 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.545 = 0;

  <bb 18> :
  retval.544 = iftmp.545;
  if (retval.544 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248866 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248866;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8917, decl_uid=193975, cgraph_uid=5549, symbol_order=6335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248889;
  bool D.248887;

  <bb 2> :
  D.248889 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (v);
  D.248887 = D.248889;

  <bb 3> :
<L0>:
  return D.248887;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8700, decl_uid=193805, cgraph_uid=5332, symbol_order=6118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248892;
  bool D.248890;

  <bb 2> :
  D.248892 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.248890 = D.248892;

  <bb 3> :
<L0>:
  return D.248890;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8918, decl_uid=193973, cgraph_uid=5550, symbol_order=6336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248895;
  bool D.248893;

  <bb 2> :
  D.248895 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (v);
  D.248893 = D.248895;

  <bb 3> :
<L0>:
  return D.248893;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9738, decl_uid=193800, cgraph_uid=6370, symbol_order=7156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248898;
  bool D.248896;

  <bb 2> :
  D.248898 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.248896 = D.248898;

  <bb 3> :
<L0>:
  return D.248896;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10294, decl_uid=237334, cgraph_uid=6926, symbol_order=7716)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248899;

  <bb 2> :
  _1 = entry->m_key;
  D.248899 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248899;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9334, decl_uid=193793, cgraph_uid=5966, symbol_order=6752)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248903;
  bool D.248901;

  <bb 2> :
  _1 = &a->m_key;
  D.248903 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_1, b);
  D.248901 = D.248903;

  <bb 3> :
<L0>:
  return D.248901;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10equal_keysERKS2_S7_, funcdef_no=10012, decl_uid=193694, cgraph_uid=6644, symbol_order=7434)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248904;

  <bb 2> :
  D.248904 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248904;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8569, decl_uid=211673, cgraph_uid=5201, symbol_order=5987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248906;

  <bb 2> :
  _1 = entry->m_key;
  D.248906 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248906;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2ERKS_, funcdef_no=6339, decl_uid=194074, cgraph_uid=3314, symbol_order=4087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.194076)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194076->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2ERKS2_, funcdef_no=7688, decl_uid=178709, cgraph_uid=4320, symbol_order=5102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_exit_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.248912;
  struct __normal_iterator D.248909;
  struct __normal_iterator D.248908;
  struct allocator D.211788;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178746;
  _2 = &__x->D.178746;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  D.211788 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_exit_type>::size (__x);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _4, &D.211788);

  <bb 3> :
  std::allocator<pthread_exit_type>::~allocator (&D.211788);
  D.211788 = {CLOBBER};
  _5 = &this->D.178746;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.178746._M_impl.D.178091._M_start;
  D.248908 = std::vector<pthread_exit_type>::end (__x);
  D.248909 = std::vector<pthread_exit_type>::begin (__x);
  D.248912 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (D.248909, D.248908, _7, _6);

  <bb 4> :
  _8 = D.248912;
  this->D.178746._M_impl.D.178091._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_exit_type>::~allocator (&D.211788);
  resx 2

  <bb 6> :
<L1>:
  D.211788 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.178746;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8571, decl_uid=177981, cgraph_uid=5203, symbol_order=5989)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248914;

  <bb 2> :
  D.248914 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248914;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8570, decl_uid=177953, cgraph_uid=5202, symbol_order=5988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9335, decl_uid=177918, cgraph_uid=5967, symbol_order=6753)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2ERKS0_, funcdef_no=10014, decl_uid=177861, cgraph_uid=6646, symbol_order=7436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2ERKS2_, funcdef_no=10526, decl_uid=177790, cgraph_uid=7158, symbol_order=7948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.177792)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EmRKS1_, funcdef_no=8573, decl_uid=178178, cgraph_uid=5205, symbol_order=5991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9337, decl_uid=178083, cgraph_uid=5969, symbol_order=6755)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this, __a);
  _1 = &this->D.178091;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8677, decl_uid=178038, cgraph_uid=5309, symbol_order=6095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9339, decl_uid=178102, cgraph_uid=5971, symbol_order=6757)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.248921;

  <bb 2> :
  D.248921 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (this, __n);
  _1 = D.248921;
  this->_M_impl.D.178091._M_start = _1;
  _2 = this->_M_impl.D.178091._M_start;
  this->_M_impl.D.178091._M_finish = _2;
  _3 = this->_M_impl.D.178091._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.178091._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE11_M_allocateEm, funcdef_no=9483, decl_uid=178095, cgraph_uid=6115, symbol_order=6901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_exit_type * std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.248928;
  struct pthread_exit_type * iftmp.546;
  struct pthread_exit_type * D.248922;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248928 = std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_1, __n);
  iftmp.546 = D.248928;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.546 = 0B;

  <bb 5> :
  D.248922 = iftmp.546;

  <bb 6> :
<L3>:
  return D.248922;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8allocateERS1_m, funcdef_no=10107, decl_uid=177896, cgraph_uid=6739, symbol_order=7529)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_exit_type * D.248931;
  struct pthread_exit_type * D.248929;

  <bb 2> :
  D.248931 = __gnu_cxx::new_allocator<pthread_exit_type>::allocate (__a, __n, 0B);
  D.248929 = D.248931;

  <bb 3> :
<L0>:
  return D.248929;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::allocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE8allocateEmPKv, funcdef_no=10581, decl_uid=177750, cgraph_uid=7214, symbol_order=8004)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * __gnu_cxx::new_allocator<pthread_exit_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243507)
{
  struct pthread_exit_type * D.248942;
  struct pthread_exit_type * D.248941;
  align_val_t __al;
  struct pthread_exit_type * D.248939;
  bool retval.547;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.547 = _4 != 0;
  if (retval.547 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.248942 = operator new (_6);
  D.248939 = D.248942;

  <bb 7> :
<L6>:
  return D.248939;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE11_M_max_sizeEv, funcdef_no=10582, decl_uid=177777, cgraph_uid=7213, symbol_order=8003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248943;

  <bb 2> :
  D.248943 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.248943;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6395, decl_uid=178138, cgraph_uid=3367, symbol_order=4140)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_exit_type>::~allocator (_ZNSaI17pthread_exit_typeED2Ev, funcdef_no=7749, decl_uid=177871, cgraph_uid=4381, symbol_order=5163)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeED2Ev, funcdef_no=8680, decl_uid=177800, cgraph_uid=5312, symbol_order=6098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8577, decl_uid=177979, cgraph_uid=5209, symbol_order=5995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248945;

  <bb 2> :
  D.248945 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248945;

}



;; Function std::vector<pthread_exit_type>::end (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8576, decl_uid=178361, cgraph_uid=5208, symbol_order=5994)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::end (const struct vector * const this)
{
  struct const_iterator D.222246;
  struct const_iterator D.248947;

  <bb 2> :
  _1 = &this->D.178746._M_impl.D.178091._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.222246, _1);
  D.248947 = D.222246;
  D.222246 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248947;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9341, decl_uid=211757, cgraph_uid=5973, symbol_order=6759)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8575, decl_uid=178357, cgraph_uid=5207, symbol_order=5993)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222244;
  struct const_iterator D.248950;

  <bb 2> :
  _1 = &this->D.178746._M_impl.D.178091._M_start;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.222244, _1);
  D.248950 = D.222244;
  D.222244 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248950;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8578, decl_uid=211777, cgraph_uid=5210, symbol_order=5996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result, struct allocator & D.222251)
{
  struct pthread_exit_type * D.248955;
  struct pthread_exit_type * D.248953;

  <bb 2> :
  D.248955 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.248953 = D.248955;

  <bb 3> :
<L0>:
  return D.248953;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9343, decl_uid=222253, cgraph_uid=5976, symbol_order=6762)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248958;
  const bool __assignable;
  struct pthread_exit_type * D.248956;

  <bb 2> :
  __assignable = 1;
  D.248958 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.248956 = D.248958;

  <bb 3> :
<L0>:
  return D.248956;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10016, decl_uid=233728, cgraph_uid=6648, symbol_order=7438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248961;
  struct pthread_exit_type * D.248959;

  <bb 2> :
  D.248961 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.248959 = D.248961;

  <bb 3> :
<L0>:
  return D.248959;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10528, decl_uid=239869, cgraph_uid=7160, symbol_order=7950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248966;
  struct __normal_iterator D.248964;
  struct __normal_iterator D.248963;
  struct pthread_exit_type * D.248962;

  <bb 2> :
  D.248963 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.248964 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.248966 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (D.248964, D.248963, __result);
  D.248962 = D.248966;

  <bb 3> :
<L0>:
  return D.248962;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9487, decl_uid=225498, cgraph_uid=6119, symbol_order=6905)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.248967;

  <bb 2> :
  D.248967 = __it;

  <bb 3> :
<L0>:
  return D.248967;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10786, decl_uid=243254, cgraph_uid=7418, symbol_order=8210)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248971;
  struct pthread_exit_type * D.248969;

  <bb 2> :
  __result.548_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.548_1);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _4 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.248971 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.248971;
  D.248969 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.248969;

}



;; Function std::__niter_base<pthread_exit_type*> (_ZSt12__niter_baseIP17pthread_exit_typeET_S2_, funcdef_no=10113, decl_uid=225764, cgraph_uid=6745, symbol_order=7535)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.248972;

  <bb 2> :
  D.248972 = __it;

  <bb 3> :
<L0>:
  return D.248972;

}



;; Function std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIPK17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10108, decl_uid=234991, cgraph_uid=6740, symbol_order=7530)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  const struct pthread_exit_type * D.248974;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.248974 = *_1;

  <bb 3> :
<L0>:
  return D.248974;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10583, decl_uid=211744, cgraph_uid=7215, symbol_order=8005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_exit_type * const & D.248976;

  <bb 2> :
  D.248976 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248976;

}



;; Function std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10110, decl_uid=235145, cgraph_uid=6742, symbol_order=7532)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248980;
  struct pthread_exit_type * D.248978;

  <bb 2> :
  D.248980 = std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.248978 = D.248980;

  <bb 3> :
<L0>:
  return D.248978;

}



;; Function std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10584, decl_uid=240261, cgraph_uid=7216, symbol_order=8006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248981;

  <bb 2> :
  D.248981 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.248981;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI17pthread_exit_typeEEPT_PKS4_S7_S5_, funcdef_no=10803, decl_uid=243530, cgraph_uid=7435, symbol_order=8227)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_exit_type * D.248986;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.549_2 = (long unsigned int) _Num;
  _3 = _Num.549_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.550_4 = (long unsigned int) _Num;
  _5 = _Num.550_4 * 16;
  D.248986 = __result + _5;

  <bb 5> :
<L3>:
  return D.248986;

}



;; Function std::__niter_wrap<pthread_exit_type*> (_ZSt12__niter_wrapIP17pthread_exit_typeET_RKS2_S2_, funcdef_no=10115, decl_uid=235188, cgraph_uid=6747, symbol_order=7537)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_wrap<pthread_exit_type*> (struct pthread_exit_type * const & D.240283, struct pthread_exit_type * __res)
{
  struct pthread_exit_type * D.248988;

  <bb 2> :
  D.248988 = __res;

  <bb 3> :
<L0>:
  return D.248988;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7752, decl_uid=178201, cgraph_uid=4384, symbol_order=5166)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.178091._M_end_of_storage;
  _2 = this->_M_impl.D.178091._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.178091._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8682, decl_uid=178098, cgraph_uid=5314, symbol_order=6100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_exit_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE10deallocateERS1_PS0_m, funcdef_no=9481, decl_uid=177903, cgraph_uid=6113, symbol_order=6899)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (struct allocator_type & __a, struct pthread_exit_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE10deallocateEPS1_m, funcdef_no=10106, decl_uid=177754, cgraph_uid=6738, symbol_order=7528)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (struct new_allocator * const this, struct pthread_exit_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_exit_type>::operator[] (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEixEm, funcdef_no=7694, decl_uid=178399, cgraph_uid=4326, symbol_order=5108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_exit_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.248996;

  <bb 2> :
  _1 = this->D.178746._M_impl.D.178091._M_start;
  _2 = __n * 16;
  D.248996 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248996;

}



;; Function std::vector<pthread_exit_type>::size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE4sizeEv, funcdef_no=7693, decl_uid=178379, cgraph_uid=4325, symbol_order=5107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::size (const struct vector * const this)
{
  size_type D.248998;

  <bb 2> :
  _1 = this->D.178746._M_impl.D.178091._M_finish;
  _2 = this->D.178746._M_impl.D.178091._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.248998 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248998;

}



;; Function std::vector<tree_node*>::operator[] (_ZNSt6vectorIP9tree_nodeSaIS1_EEixEm, funcdef_no=7697, decl_uid=184538, cgraph_uid=4329, symbol_order=5111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * & std::vector<tree_node*>::operator[] (struct vector * const this, size_type __n)
{
  union tree_node * & D.249000;

  <bb 2> :
  _1 = this->D.184885._M_impl.D.184241._M_start;
  _2 = __n * 8;
  D.249000 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249000;

}



;; Function std::vector<tree_node*>::size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE4sizeEv, funcdef_no=7696, decl_uid=184518, cgraph_uid=4328, symbol_order=5110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::size (const struct vector * const this)
{
  size_type D.249002;

  <bb 2> :
  _1 = this->D.184885._M_impl.D.184241._M_finish;
  _2 = this->D.184885._M_impl.D.184241._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.249002 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249002;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2Ev, funcdef_no=6345, decl_uid=189864, cgraph_uid=3320, symbol_order=4093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  this->return_type_num = 0;
  this->pthread_type_num = -1;
  _1 = &this->return_type_array;
  std::vector<return_type>::vector (_1);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2Ev, funcdef_no=6221, decl_uid=173498, cgraph_uid=3197, symbol_order=3954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173506;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2Ev, funcdef_no=6219, decl_uid=172956, cgraph_uid=3194, symbol_order=3951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7570, decl_uid=172848, cgraph_uid=4202, symbol_order=4984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this);
  _1 = &this->D.172851;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2Ev, funcdef_no=8385, decl_uid=172626, cgraph_uid=5017, symbol_order=5803)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2Ev, funcdef_no=9166, decl_uid=172555, cgraph_uid=5798, symbol_order=6584)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::operator= (_ZNSt6vectorI11return_typeSaIS0_EEaSERKS2_, funcdef_no=7698, decl_uid=173084, cgraph_uid=4332, symbol_order=5114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<return_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.249037;
  struct return_type * __tmp;
  const size_type __xlen;
  struct vector & D.249035;
  struct __normal_iterator D.249032;
  struct __normal_iterator D.249031;
  struct __normal_iterator D.249030;
  struct __normal_iterator D.249029;
  struct __normal_iterator D.249028;
  bool retval.555;
  struct __normal_iterator D.249023;
  struct __normal_iterator D.249022;
  bool retval.554;
  bool iftmp.553;
  bool retval.552;
  bool retval.551;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.551 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ();
  if (retval.551 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.173506;
  _4 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.173506;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.553 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.553 = 0;

  <bb 8> :
  retval.552 = iftmp.553;
  if (retval.552 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<return_type>::clear (this);
  _8 = &this->D.173506;
  _9 = this->D.173506._M_impl.D.172851._M_end_of_storage;
  _10 = this->D.173506._M_impl.D.172851._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.173506._M_impl.D.172851._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_8, _14, _13);
  this->D.173506._M_impl.D.172851._M_start = 0B;
  this->D.173506._M_impl.D.172851._M_finish = 0B;
  this->D.173506._M_impl.D.172851._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.173506;
  _16 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.173506;
  _18 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<return_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<return_type>::size (__x);
  _19 = std::vector<return_type>::capacity (this);
  retval.554 = __xlen > _19;
  if (retval.554 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.249022 = std::vector<return_type>::end (__x);
  D.249023 = std::vector<return_type>::begin (__x);
  D.249037 = std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (this, __xlen, D.249023, D.249022);
  __tmp = D.249037;
  _20 = &this->D.173506;
  _21 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.173506._M_impl.D.172851._M_finish;
  _23 = this->D.173506._M_impl.D.172851._M_start;
  std::_Destroy<return_type*, return_type> (_23, _22, _21);
  _24 = &this->D.173506;
  _25 = this->D.173506._M_impl.D.172851._M_end_of_storage;
  _26 = this->D.173506._M_impl.D.172851._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.173506._M_impl.D.172851._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_24, _30, _29);
  this->D.173506._M_impl.D.172851._M_start = __tmp;
  _31 = this->D.173506._M_impl.D.172851._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.173506._M_impl.D.172851._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<return_type>::size (this);
  retval.555 = __xlen <= _34;
  if (retval.555 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.173506;
  _36 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_35);
  D.249028 = std::vector<return_type>::end (this);
  D.249029 = std::vector<return_type>::begin (this);
  D.249030 = std::vector<return_type>::end (__x);
  D.249031 = std::vector<return_type>::begin (__x);
  D.249032 = std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.249031, D.249030, D.249029);
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (D.249032, D.249028, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.173506._M_impl.D.172851._M_start;
  _38 = __x->D.173506._M_impl.D.172851._M_start;
  _39 = std::vector<return_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.173506._M_impl.D.172851._M_start;
  std::copy<return_type*, return_type*> (_42, _41, _37);
  _43 = &this->D.173506;
  _44 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.173506._M_impl.D.172851._M_finish;
  _46 = __x->D.173506._M_impl.D.172851._M_finish;
  _47 = __x->D.173506._M_impl.D.172851._M_start;
  _48 = std::vector<return_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.173506._M_impl.D.172851._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.173506._M_impl.D.172851._M_finish = _53;

  <bb 17> :
  D.249035 = this;

  <bb 18> :
<L19>:
  return D.249035;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7699, decl_uid=172718, cgraph_uid=4330, symbol_order=5112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ()
{
  bool D.249038;

  <bb 2> :
  D.249038 = 0;

  <bb 3> :
<L0>:
  return D.249038;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E15_S_always_equalEv, funcdef_no=7700, decl_uid=172721, cgraph_uid=4331, symbol_order=5113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ()
{
  bool D.249040;

  <bb 2> :
  D.249040 = 1;

  <bb 3> :
<L0>:
  return D.249040;

}



;; Function std::operator!= (_ZStneRKSaI11return_typeES2_, funcdef_no=8580, decl_uid=172604, cgraph_uid=5212, symbol_order=5998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.222277, const struct allocator & D.222278)
{
  bool D.249042;

  <bb 2> :
  D.249042 = 0;

  <bb 3> :
<L0>:
  return D.249042;

}



;; Function std::vector<return_type>::clear (_ZNSt6vectorI11return_typeSaIS0_EE5clearEv, funcdef_no=8581, decl_uid=173236, cgraph_uid=5213, symbol_order=5999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.173506._M_impl.D.172851._M_start;
  std::vector<return_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<return_type>::_M_erase_at_end (_ZNSt6vectorI11return_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9346, decl_uid=173364, cgraph_uid=5978, symbol_order=6764)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<return_type>::_M_erase_at_end (struct vector * const this, struct return_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.173506._M_impl.D.172851._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.173506;
  _5 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.173506._M_impl.D.172851._M_finish;
  std::_Destroy<return_type*, return_type> (__pos, _6, _5);
  this->D.173506._M_impl.D.172851._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<return_type> > (_ZSt15__alloc_on_copyISaI11return_typeEEvRT_RKS2_, funcdef_no=8582, decl_uid=211838, cgraph_uid=5214, symbol_order=6000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<return_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::capacity (_ZNKSt6vectorI11return_typeSaIS0_EE8capacityEv, funcdef_no=8583, decl_uid=173152, cgraph_uid=5215, symbol_order=6001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::capacity (const struct vector * const this)
{
  size_type D.249047;

  <bb 2> :
  _1 = this->D.173506._M_impl.D.172851._M_end_of_storage;
  _2 = this->D.173506._M_impl.D.172851._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249047 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249047;

}



;; Function std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZNSt6vectorI11return_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8584, decl_uid=211845, cgraph_uid=5216, symbol_order=6002)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct return_type * std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct return_type * D.249051;
  struct return_type * __result;
  struct return_type * D.249049;

  <bb 2> :
  _1 = &this->D.173506;
  D.249051 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_1, __n);
  __result = D.249051;
  _2 = &this->D.173506;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (__first, __last, __result, _3);

  <bb 3> :
  D.249049 = __result;

  <bb 4> :
<L0>:
  return D.249049;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.173506;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<return_type>::end (_ZNSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8587, decl_uid=173119, cgraph_uid=5219, symbol_order=6005)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::end (struct vector * const this)
{
  struct iterator D.222364;
  struct iterator D.249055;

  <bb 2> :
  _1 = &this->D.173506._M_impl.D.172851._M_finish;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.222364, _1);
  D.249055 = D.222364;
  D.222364 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249055;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9349, decl_uid=211927, cgraph_uid=5981, symbol_order=6767)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8585, decl_uid=173115, cgraph_uid=5217, symbol_order=6003)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::begin (struct vector * const this)
{
  struct iterator D.222318;
  struct iterator D.249058;

  <bb 2> :
  _1 = &this->D.173506._M_impl.D.172851._M_start;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.222318, _1);
  D.249058 = D.222318;
  D.222318 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249058;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8586, decl_uid=211946, cgraph_uid=5218, symbol_order=6004)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.249063;
  struct __normal_iterator D.249062;
  struct __normal_iterator D.249061;

  <bb 2> :
  D.249062 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__last);
  D.249063 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__first);
  D.249061 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.249063, D.249062, __result);

  <bb 3> :
<L0>:
  return D.249061;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9351, decl_uid=222330, cgraph_uid=5983, symbol_order=6769)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.249065;

  <bb 2> :
  D.249065 = __it;

  <bb 3> :
<L0>:
  return D.249065;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9352, decl_uid=222336, cgraph_uid=5985, symbol_order=6771)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct return_type * D.249069;
  struct __normal_iterator D.249067;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__result);
  _2 = std::__niter_base<const return_type*, std::vector<return_type> > (__last);
  _3 = std::__niter_base<const return_type*, std::vector<return_type> > (__first);
  D.249069 = std::__copy_move_a1<false, const return_type*, return_type*> (_3, _2, _1);
  _4 = D.249069;
  D.249067 = std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.249067;

}



;; Function std::__niter_base<return_type*, std::vector<return_type> > (_ZSt12__niter_baseIP11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10020, decl_uid=233932, cgraph_uid=6652, symbol_order=7442)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  struct return_type * D.249070;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__it);
  D.249070 = *_1;

  <bb 3> :
<L0>:
  return D.249070;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9377, decl_uid=211914, cgraph_uid=6009, symbol_order=6795)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * const & __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  struct return_type * const & D.249072;

  <bb 2> :
  D.249072 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249072;

}



;; Function std::__niter_base<const return_type*, std::vector<return_type> > (_ZSt12__niter_baseIPK11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10019, decl_uid=233781, cgraph_uid=6651, symbol_order=7441)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * std::__niter_base<const return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  const struct return_type * D.249074;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (&__it);
  D.249074 = *_1;

  <bb 3> :
<L0>:
  return D.249074;

}



;; Function std::__copy_move_a1<false, const return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10021, decl_uid=233935, cgraph_uid=6653, symbol_order=7443)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249078;
  struct return_type * D.249076;

  <bb 2> :
  D.249078 = std::__copy_move_a2<false, const return_type*, return_type*> (__first, __last, __result);
  D.249076 = D.249078;

  <bb 3> :
<L0>:
  return D.249076;

}



;; Function std::__copy_move_a2<false, const return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10532, decl_uid=239889, cgraph_uid=7164, symbol_order=7954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249079;

  <bb 2> :
  D.249079 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249079;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11return_typeEEPT_PKS4_S7_S5_, funcdef_no=10787, decl_uid=243282, cgraph_uid=7419, symbol_order=8211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct return_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  const ptrdiff_t _Num;
  struct return_type * D.249084;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.556_2 = (long unsigned int) _Num;
  _3 = _Num.556_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.557_4 = (long unsigned int) _Num;
  _5 = _Num.557_4 * 24;
  D.249084 = __result + _5;

  <bb 5> :
<L3>:
  return D.249084;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10022, decl_uid=233939, cgraph_uid=6654, symbol_order=7444)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __from, struct return_type * __res)
{
  struct __normal_iterator D.249086;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.249086 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.249086;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10533, decl_uid=211905, cgraph_uid=7165, symbol_order=7955)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct return_type * const D.243288;
  struct __normal_iterator D.243289;
  struct __normal_iterator D.249088;

  <bb 2> :
  _1 = this->_M_current;
  __n.558_2 = (long unsigned int) __n;
  _3 = __n.558_2 * 24;
  _4 = _1 + _3;
  D.243288 = _4;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.243289, &D.243288);
  D.249088 = D.243289;
  D.243289 = {CLOBBER};
  D.243288 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.249088;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8588, decl_uid=211952, cgraph_uid=5220, symbol_order=6006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.222367)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9354, decl_uid=222369, cgraph_uid=5986, symbol_order=6772)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10023, decl_uid=233963, cgraph_uid=6655, symbol_order=7445)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator D.239898, struct __normal_iterator D.239899)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<return_type*, return_type*> (_ZSt4copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=8589, decl_uid=211960, cgraph_uid=5221, symbol_order=6007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249094;
  struct return_type * D.249092;

  <bb 2> :
  _1 = std::__miter_base<return_type*> (__last);
  _2 = std::__miter_base<return_type*> (__first);
  D.249094 = std::__copy_move_a<false, return_type*, return_type*> (_2, _1, __result);
  D.249092 = D.249094;

  <bb 3> :
<L0>:
  return D.249092;

}



;; Function std::__miter_base<return_type*> (_ZSt12__miter_baseIP11return_typeET_S2_, funcdef_no=9355, decl_uid=222385, cgraph_uid=5987, symbol_order=6773)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__miter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.249095;

  <bb 2> :
  D.249095 = __it;

  <bb 3> :
<L0>:
  return D.249095;

}



;; Function std::__copy_move_a<false, return_type*, return_type*> (_ZSt13__copy_move_aILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=9356, decl_uid=222387, cgraph_uid=5988, symbol_order=6774)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249099;
  struct return_type * D.249097;

  <bb 2> :
  __result.559_1 = __result;
  _2 = std::__niter_base<return_type*> (__result.559_1);
  _3 = std::__niter_base<return_type*> (__last);
  _4 = std::__niter_base<return_type*> (__first);
  D.249099 = std::__copy_move_a1<false, return_type*, return_type*> (_4, _3, _2);
  _5 = D.249099;
  D.249097 = std::__niter_wrap<return_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.249097;

}



;; Function std::__niter_base<return_type*> (_ZSt12__niter_baseIP11return_typeET_S2_, funcdef_no=10024, decl_uid=223001, cgraph_uid=6656, symbol_order=7446)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.249100;

  <bb 2> :
  D.249100 = __it;

  <bb 3> :
<L0>:
  return D.249100;

}



;; Function std::__copy_move_a1<false, return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10025, decl_uid=233974, cgraph_uid=6657, symbol_order=7447)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249104;
  struct return_type * D.249102;

  <bb 2> :
  D.249104 = std::__copy_move_a2<false, return_type*, return_type*> (__first, __last, __result);
  D.249102 = D.249104;

  <bb 3> :
<L0>:
  return D.249102;

}



;; Function std::__copy_move_a2<false, return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10534, decl_uid=239907, cgraph_uid=7166, symbol_order=7956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249105;

  <bb 2> :
  D.249105 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249105;

}



;; Function std::__niter_wrap<return_type*> (_ZSt12__niter_wrapIP11return_typeET_RKS2_S2_, funcdef_no=10026, decl_uid=233978, cgraph_uid=6658, symbol_order=7448)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_wrap<return_type*> (struct return_type * const & D.239911, struct return_type * __res)
{
  struct return_type * D.249107;

  <bb 2> :
  D.249107 = __res;

  <bb 3> :
<L0>:
  return D.249107;

}



;; Function std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_ZSt22__uninitialized_copy_aIP11return_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8590, decl_uid=211964, cgraph_uid=5222, symbol_order=6008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<return_type*, return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & D.222394)
{
  struct return_type * D.249111;
  struct return_type * D.249109;

  <bb 2> :
  D.249111 = std::uninitialized_copy<return_type*, return_type*> (__first, __last, __result);
  D.249109 = D.249111;

  <bb 3> :
<L0>:
  return D.249109;

}



;; Function std::uninitialized_copy<return_type*, return_type*> (_ZSt18uninitialized_copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=9357, decl_uid=222396, cgraph_uid=5989, symbol_order=6775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249114;
  const bool __assignable;
  struct return_type * D.249112;

  <bb 2> :
  __assignable = 1;
  D.249114 = std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (__first, __last, __result);
  D.249112 = D.249114;

  <bb 3> :
<L0>:
  return D.249112;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11return_typeS3_EET0_T_S5_S4_, funcdef_no=10027, decl_uid=234012, cgraph_uid=6659, symbol_order=7449)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.249115;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, return_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.249115 = __cur;

  <bb 6> :
<L3>:
  return D.249115;

}



;; Function std::_Construct<return_type, return_type&> (_ZSt10_ConstructI11return_typeJRS0_EEvPT_DpOT0_, funcdef_no=10535, decl_uid=239919, cgraph_uid=7167, symbol_order=7957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, return_type&> (struct return_type * __p, struct return_type & __args#0)
{
  void * D.243308;
  void * D.243307;
  const struct return_type * D.243309;

  <bb 2> :
  D.243309 = std::forward<return_type&> (__args#0);
  D.243307 = __p;
  D.243308 = operator new (24, D.243307);
  MEM[(struct return_type *)D.243308] = *D.243309;
  return;

}



;; Function std::forward<return_type&> (_ZSt7forwardIR11return_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10788, decl_uid=243305, cgraph_uid=7420, symbol_order=8212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type&> (struct type & __t)
{
  struct return_type & D.249117;

  <bb 2> :
  D.249117 = __t;

  <bb 3> :
<L0>:
  return D.249117;

}



;; Function function_return_array::operator= (_ZN21function_return_arrayaSERKS_, funcdef_no=6347, decl_uid=194180, cgraph_uid=3322, symbol_order=4095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_return_array & function_return_array::operator= (struct function_return_array * const this, const struct function_return_array & D.194181)
{
  struct function_return_array & D.249119;

  <bb 2> :
  _1 = D.194181->return_type_num;
  this->return_type_num = _1;
  _2 = D.194181->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &D.194181->return_type_array;
  _4 = &this->return_type_array;
  std::vector<return_type>::operator= (_4, _3);
  D.249119 = this;

  <bb 3> :
<L0>:
  return D.249119;

}



;; Function std::vector<tree_node*>::push_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE9push_backERKS1_, funcdef_no=7701, decl_uid=184565, cgraph_uid=4334, symbol_order=5116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<tree_node*>::push_back (struct vector * const this, union tree_node * const & __x)
{
  struct __normal_iterator D.249124;

  <bb 2> :
  _1 = this->D.184885._M_impl.D.184241._M_finish;
  _2 = this->D.184885._M_impl.D.184241._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.184885._M_impl.D.184241._M_finish;
  _4 = &this->D.184885._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_4, _3, __x);
  _5 = this->D.184885._M_impl.D.184241._M_finish;
  _6 = _5 + 8;
  this->D.184885._M_impl.D.184241._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.249124 = std::vector<tree_node*>::end (this);
  std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (this, D.249124, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_ZNSt16allocator_traitsISaIP9tree_nodeEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8591, decl_uid=211976, cgraph_uid=5223, symbol_order=6009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (struct allocator_type & __a, union tree_node * * __p, union tree_node * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<tree_node* const&> (_ZSt7forwardIRKP9tree_nodeEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9358, decl_uid=222411, cgraph_uid=5990, symbol_order=6776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * const & std::forward<tree_node* const&> (union tree_node * const & __t)
{
  union tree_node * const & D.249125;

  <bb 2> :
  D.249125 = __t;

  <bb 3> :
<L0>:
  return D.249125;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9359, decl_uid=222413, cgraph_uid=5991, symbol_order=6777)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (struct new_allocator * const this, union tree_node * * __p, union tree_node * const & __args#0)
{
  void * D.234024;
  void * D.234023;
  union tree_node * D.234025;

  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  D.234025 = *_1;
  D.234023 = __p;
  D.234024 = operator new (8, D.234023);
  MEM[(union tree_node * *)D.234024] = D.234025;
  return;

}



;; Function std::vector<tree_node*>::end (_ZNSt6vectorIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8592, decl_uid=184498, cgraph_uid=5224, symbol_order=6010)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::end (struct vector * const this)
{
  struct iterator D.222436;
  struct iterator D.249127;

  <bb 2> :
  _1 = &this->D.184885._M_impl.D.184241._M_finish;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.222436, _1);
  D.249127 = D.222436;
  D.222436 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249127;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9361, decl_uid=212213, cgraph_uid=5993, symbol_order=6779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (struct __normal_iterator * const this, union tree_node * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (_ZNSt6vectorIP9tree_nodeSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8593, decl_uid=212232, cgraph_uid=5228, symbol_order=6014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (struct vector * const this, struct iterator __position, union tree_node * const & __args#0)
{
  union tree_node * * D.249134;
  const size_type D.249133;
  union tree_node * * __new_finish;
  union tree_node * * __new_start;
  const size_type __elems_before;
  union tree_node * * __old_finish;
  union tree_node * * __old_start;
  const size_type __len;
  struct iterator D.222444;

  <bb 2> :
  D.249133 = std::vector<tree_node*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.249133;
  __old_start = this->D.184885._M_impl.D.184241._M_start;
  __old_finish = this->D.184885._M_impl.D.184241._M_finish;
  D.222444 = std::vector<tree_node*>::begin (this);
  _1 = __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (&__position, &D.222444);
  __elems_before = (const size_type) _1;
  D.222444 = {CLOBBER};
  _2 = &this->D.184885;
  D.249134 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_2, __len);
  __new_start = D.249134;
  __new_finish = __new_start;
  _3 = std::forward<tree_node* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.184885._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.184885;
  _8 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<tree_node*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.184885;
  _12 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<tree_node*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.184885;
  _23 = this->D.184885._M_impl.D.184241._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_22, __old_start, _26);
  this->D.184885._M_impl.D.184241._M_start = __new_start;
  this->D.184885._M_impl.D.184241._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.184885._M_impl.D.184241._M_end_of_storage = _28;
  return;

}



;; Function std::vector<tree_node*>::_M_check_len (_ZNKSt6vectorIP9tree_nodeSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9363, decl_uid=184734, cgraph_uid=5995, symbol_order=6781)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<tree_node*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.562;
  size_type D.249138;
  const long unsigned int D.234034;
  bool retval.560;

  <bb 2> :
  _1 = std::vector<tree_node*>::max_size (this);
  _2 = std::vector<tree_node*>::size (this);
  _3 = _1 - _2;
  __n.561_4 = __n;
  retval.560 = _3 < __n.561_4;
  if (retval.560 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<tree_node*>::size (this);
  _6 = std::vector<tree_node*>::size (this);
  D.234034 = _6;
  _7 = std::max<long unsigned int> (&D.234034, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234034 = {CLOBBER};
  _9 = std::vector<tree_node*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<tree_node*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.562 = std::vector<tree_node*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.562 = __len;

  <bb 8> :
  D.249138 = iftmp.562;

  <bb 9> :
<L6>:
  return D.249138;

}



;; Function std::vector<tree_node*>::max_size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE8max_sizeEv, funcdef_no=10028, decl_uid=184520, cgraph_uid=6660, symbol_order=7450)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::max_size (const struct vector * const this)
{
  size_type D.249145;

  <bb 2> :
  _1 = &this->D.184885;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.249145 = std::vector<tree_node*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.249145;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10537, decl_uid=184131, cgraph_uid=7169, symbol_order=7959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.249147;

  <bb 2> :
  D.249147 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249147;

}



;; Function std::vector<tree_node*>::_S_max_size (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10536, decl_uid=184741, cgraph_uid=7168, symbol_order=7958)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.249149;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<tree_node*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.249149 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249149;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::max_size (_ZNSt16allocator_traitsISaIP9tree_nodeEE8max_sizeERKS2_, funcdef_no=10789, decl_uid=180070, cgraph_uid=7421, symbol_order=8213)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<tree_node*> >::max_size (const struct allocator_type & __a)
{
  size_type D.249152;

  <bb 2> :
  D.249152 = __gnu_cxx::new_allocator<tree_node*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.249152;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE8max_sizeEv, funcdef_no=10898, decl_uid=179912, cgraph_uid=7530, symbol_order=8322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::max_size (const struct new_allocator * const this)
{
  size_type D.249154;

  <bb 2> :
  D.249154 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.249154;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE11_M_max_sizeEv, funcdef_no=10539, decl_uid=179931, cgraph_uid=7170, symbol_order=7960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.249156;

  <bb 2> :
  D.249156 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.249156;

}



;; Function std::vector<tree_node*>::begin (_ZNSt6vectorIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=9364, decl_uid=184494, cgraph_uid=5996, symbol_order=6782)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::begin (struct vector * const this)
{
  struct iterator D.234036;
  struct iterator D.249158;

  <bb 2> :
  _1 = &this->D.184885._M_impl.D.184241._M_start;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.234036, _1);
  D.249158 = D.234036;
  D.234036 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249158;

}



;; Function __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (_ZN9__gnu_cxxmiIPP9tree_nodeSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9365, decl_uid=222445, cgraph_uid=5997, symbol_order=6783)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.249161;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.249161 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.249161;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE11_M_allocateEm, funcdef_no=9366, decl_uid=184245, cgraph_uid=5998, symbol_order=6784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * * std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  union tree_node * * D.249169;
  union tree_node * * iftmp.563;
  union tree_node * * D.249163;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.249169 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_1, __n);
  iftmp.563 = D.249169;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.563 = 0B;

  <bb 5> :
  D.249163 = iftmp.563;

  <bb 6> :
<L3>:
  return D.249163;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::allocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE8allocateERS2_m, funcdef_no=10029, decl_uid=180050, cgraph_uid=6661, symbol_order=7451)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * std::allocator_traits<std::allocator<tree_node*> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * D.249172;
  union tree_node * * D.249170;

  <bb 2> :
  D.249172 = __gnu_cxx::new_allocator<tree_node*>::allocate (__a, __n, 0B);
  D.249170 = D.249172;

  <bb 3> :
<L0>:
  return D.249170;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::allocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE8allocateEmPKv, funcdef_no=10538, decl_uid=179904, cgraph_uid=7171, symbol_order=7961)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * __gnu_cxx::new_allocator<tree_node*>::allocate (struct new_allocator * const this, size_type __n, const void * D.243316)
{
  union tree_node * * D.249183;
  union tree_node * * D.249182;
  align_val_t __al;
  union tree_node * * D.249180;
  bool retval.564;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.564 = _4 != 0;
  if (retval.564 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.249183 = operator new (_6);
  D.249180 = D.249183;

  <bb 7> :
<L6>:
  return D.249180;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9369, decl_uid=184129, cgraph_uid=6001, symbol_order=6787)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.249184;

  <bb 2> :
  D.249184 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249184;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9368, decl_uid=212200, cgraph_uid=6000, symbol_order=6786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * const & __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (const struct __normal_iterator * const this)
{
  union tree_node * * const & D.249186;

  <bb 2> :
  D.249186 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249186;

}



;; Function std::vector<tree_node*>::_S_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9367, decl_uid=184393, cgraph_uid=5999, symbol_order=6785)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.249189;
  union tree_node * * D.249188;

  <bb 2> :
  D.249188 = std::vector<tree_node*>::_S_do_relocate (__first, __last, __result, __alloc, D.249189);

  <bb 3> :
<L0>:
  return D.249188;

}



;; Function std::vector<tree_node*>::_S_do_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10030, decl_uid=184381, cgraph_uid=6662, symbol_order=7452)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_do_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239934)
{
  union tree_node * * D.249191;

  <bb 2> :
  D.249191 = std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.249191;

}



;; Function std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (_ZSt12__relocate_aIPP9tree_nodeS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10540, decl_uid=222609, cgraph_uid=7172, symbol_order=7962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & __alloc)
{
  union tree_node * * D.249193;

  <bb 2> :
  _1 = std::__niter_base<tree_node**> (__result);
  _2 = std::__niter_base<tree_node**> (__last);
  _3 = std::__niter_base<tree_node**> (__first);
  D.249193 = std::__relocate_a_1<tree_node*, tree_node*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.249193;

}



;; Function std::__niter_base<tree_node**> (_ZSt12__niter_baseIPP9tree_nodeET_S3_, funcdef_no=10790, decl_uid=222615, cgraph_uid=7422, symbol_order=8214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__niter_base<tree_node**> (union tree_node * * __it)
{
  union tree_node * * D.249195;

  <bb 2> :
  D.249195 = __it;

  <bb 3> :
<L0>:
  return D.249195;

}



;; Function std::__relocate_a_1<tree_node*, tree_node*> (_ZSt14__relocate_a_1IP9tree_nodeS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10791, decl_uid=222783, cgraph_uid=7423, symbol_order=8215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * * std::__relocate_a_1<tree_node*, tree_node*> (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & D.244471)
{
  ptrdiff_t __count;
  union tree_node * * D.249200;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.565_2 = (long unsigned int) __count;
  _3 = __count.565_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.566_4 = (long unsigned int) __count;
  _5 = __count.566_4 * 8;
  D.249200 = __result + _5;

  <bb 5> :
<L3>:
  return D.249200;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8363, decl_uid=184248, cgraph_uid=4995, symbol_order=5781)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (struct _Vector_base * const this, union tree_node * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::deallocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE10deallocateERS2_PS1_m, funcdef_no=9156, decl_uid=180057, cgraph_uid=5788, symbol_order=6574)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::deallocate (struct allocator_type & __a, union tree_node * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE10deallocateEPS2_m, funcdef_no=9876, decl_uid=179908, cgraph_uid=6508, symbol_order=7298)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::deallocate (struct new_allocator * const this, union tree_node * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<function_path>::operator[] (_ZNSt6vectorI13function_pathSaIS0_EEixEm, funcdef_no=7695, decl_uid=174208, cgraph_uid=4327, symbol_order=5109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<function_path>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249208;

  <bb 2> :
  _1 = this->D.174555._M_impl.D.173900._M_start;
  _2 = __n * 24;
  D.249208 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249208;

}



;; Function std::vector<tree_node*>::pop_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE8pop_backEv, funcdef_no=7703, decl_uid=184575, cgraph_uid=4335, symbol_order=5117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.184885._M_impl.D.184241._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.184885._M_impl.D.184241._M_finish = _2;
  _3 = this->D.184885._M_impl.D.184241._M_finish;
  _4 = &this->D.184885._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_ZNSt16allocator_traitsISaIP9tree_nodeEE7destroyIS1_EEvRS2_PT_, funcdef_no=8597, decl_uid=212237, cgraph_uid=5229, symbol_order=6015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (struct allocator_type & __a, union tree_node * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE7destroyIS2_EEvPT_, funcdef_no=9371, decl_uid=222802, cgraph_uid=6003, symbol_order=6789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (struct new_allocator * const this, union tree_node * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::size (_ZNKSt6vectorI13function_pathSaIS0_EE4sizeEv, funcdef_no=7659, decl_uid=174188, cgraph_uid=4291, symbol_order=5073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::size (const struct vector * const this)
{
  size_type D.249210;

  <bb 2> :
  _1 = this->D.174555._M_impl.D.173900._M_finish;
  _2 = this->D.174555._M_impl.D.173900._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249210 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249210;

}



;; Function std::vector<free_type>::~vector (_ZNSt6vectorI9free_typeSaIS0_EED2Ev, funcdef_no=7665, decl_uid=176653, cgraph_uid=4297, symbol_order=5079)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176656;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.176656._M_impl.D.176001._M_finish;
  _4 = this->D.176656._M_impl.D.176001._M_start;
  std::_Destroy<free_type*, free_type> (_4, _3, _2);
  _5 = &this->D.176656;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<free_type*, free_type> (_ZSt8_DestroyIP9free_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8541, decl_uid=211471, cgraph_uid=5173, symbol_order=5959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct allocator & D.222073)
{
  <bb 2> :
  std::_Destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<free_type*> (_ZSt8_DestroyIP9free_typeEvT_S2_, funcdef_no=9313, decl_uid=222075, cgraph_uid=5945, symbol_order=6731)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*> (struct free_type * __first, struct free_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<free_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP9free_typeEEvT_S4_, funcdef_no=9989, decl_uid=233350, cgraph_uid=6621, symbol_order=7411)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<free_type*> (struct free_type * D.239766, struct free_type * D.239767)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_free_array::~function_free_array (_ZN19function_free_arrayD2Ev, funcdef_no=6327, decl_uid=192748, cgraph_uid=3302, symbol_order=4075)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::~function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_detched_type>::~vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7682, decl_uid=177698, cgraph_uid=4314, symbol_order=5096)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177701;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.177701._M_impl.D.177046._M_finish;
  _4 = this->D.177701._M_impl.D.177046._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_4, _3, _2);
  _5 = &this->D.177701;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_detched_type*, pthread_detched_type> (_ZSt8_DestroyIP20pthread_detched_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8566, decl_uid=211654, cgraph_uid=5198, symbol_order=5984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct allocator & D.222197)
{
  <bb 2> :
  std::_Destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_detched_type*> (_ZSt8_DestroyIP20pthread_detched_typeEvT_S2_, funcdef_no=9332, decl_uid=222199, cgraph_uid=5964, symbol_order=6750)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP20pthread_detched_typeEEvT_S4_, funcdef_no=10009, decl_uid=233590, cgraph_uid=6641, symbol_order=7431)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (struct pthread_detched_type * D.239839, struct pthread_detched_type * D.239840)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_detched_array::~function_pthread_detched_array (_ZN30function_pthread_detched_arrayD2Ev, funcdef_no=6336, decl_uid=193620, cgraph_uid=3311, symbol_order=4084)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::~function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_exit_type>::~vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7691, decl_uid=178743, cgraph_uid=4323, symbol_order=5105)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178746;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.178746._M_impl.D.178091._M_finish;
  _4 = this->D.178746._M_impl.D.178091._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_4, _3, _2);
  _5 = &this->D.178746;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_exit_type*, pthread_exit_type> (_ZSt8_DestroyIP17pthread_exit_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8579, decl_uid=211794, cgraph_uid=5211, symbol_order=5997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct allocator & D.222272)
{
  <bb 2> :
  std::_Destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_exit_type*> (_ZSt8_DestroyIP17pthread_exit_typeEvT_S2_, funcdef_no=9345, decl_uid=222274, cgraph_uid=5977, symbol_order=6763)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP17pthread_exit_typeEEvT_S4_, funcdef_no=10017, decl_uid=233759, cgraph_uid=6649, symbol_order=7439)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (struct pthread_exit_type * D.239875, struct pthread_exit_type * D.239876)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_exit_array::~function_pthread_exit_array (_ZN27function_pthread_exit_arrayD2Ev, funcdef_no=6342, decl_uid=194096, cgraph_uid=3317, symbol_order=4090)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::~function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::~vector (_ZNSt6vectorI13function_pathSaIS0_EED2Ev, funcdef_no=7657, decl_uid=174552, cgraph_uid=4289, symbol_order=5071)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174555;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  _3 = this->D.174555._M_impl.D.173900._M_finish;
  _4 = this->D.174555._M_impl.D.173900._M_start;
  std::_Destroy<function_path*, function_path> (_4, _3, _2);
  _5 = &this->D.174555;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<function_path*, function_path> (_ZSt8_DestroyIP13function_pathS0_EvT_S2_RSaIT0_E, funcdef_no=8528, decl_uid=211333, cgraph_uid=5160, symbol_order=5946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct allocator & D.221998)
{
  <bb 2> :
  std::_Destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy<function_path*> (_ZSt8_DestroyIP13function_pathEvT_S2_, funcdef_no=9300, decl_uid=222000, cgraph_uid=5932, symbol_order=6718)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*> (struct function_path * __first, struct function_path * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<function_path*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP13function_pathEEvT_S4_, funcdef_no=9981, decl_uid=233181, cgraph_uid=6613, symbol_order=7403)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<function_path*> (struct function_path * D.239711, struct function_path * D.239712)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_path_array::~function_path_array (_ZN19function_path_arrayD2Ev, funcdef_no=6321, decl_uid=192266, cgraph_uid=3296, symbol_order=4069)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::~function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  _1 = &this->function_path_array;
  std::vector<function_path>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function tracefree_fucntion (_Z18tracefree_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6348, decl_uid=187005, cgraph_uid=3324, symbol_order=4097)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
void tracefree_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.249217;
  const char * D.249216;
  struct function * D.249215;
  struct cgraph_node * D.249214;
  availability avail;
  int fucntion_level;
  struct cgraph_edge * e;

  <bb 2> :
  symtab.567_1 = symtab;
  D.249214 = symbol_table::first_defined_function (symtab.567_1);
  node = D.249214;
  goto <bb 7>; [INV]

  <bb 3> :
  fucntion_level = 0;
  D.249215 = cgraph_node::get_fun (node);
  _2 = D.249215;
  push_cfun (_2);
  cfun.568_3 = cfun;
  _4 = cfun.568_3->decl;
  D.249216 = get_name (_4);
  _5 = D.249216;
  stderr.569_6 = stderr;
  fprintf (stderr.569_6, "=======node_fun:%s=========\n", _5);
  cfun.570_7 = cfun;
  if (cfun.570_7 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  stderr.571_8 = stderr;
  __builtin_fwrite ("fucntion collect path \n", 1, 23, stderr.571_8);
  cfun.572_9 = cfun;
  _10 = &cfun.572_9->decl;
  std::vector<tree_node*>::push_back (&pathStack, _10);
  cfun.573_11 = cfun;
  _12 = cfun.573_11->decl;
  walk_function_path (_12, fucntion_level, ptable, user_tmp);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 6> :
  symtab.574_13 = symtab;
  D.249217 = symbol_table::next_defined_function (symtab.574_13, node);
  node = D.249217;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  stderr.575_14 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.575_14);
  return;

}



;; Function walk_function_path (_Z18walk_function_pathP9tree_nodeiP3ptbP12gimple_array, funcdef_no=6349, decl_uid=187001, cgraph_uid=3328, symbol_order=4101)

Merging blocks 4 and 70
Removing basic block 18
Removing basic block 19
Removing basic block 40
Removing basic block 55
Removing basic block 67
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
;;
;; Loop 1
;;  header 60, latch 59
;;  depth 1, outer 0
;;  nodes: 60 59 28 58 57 56 55 31 54 53 41 52 42 51 48 47 43 46 44 45 50 49 40 37 39 38 36 35 34 33 32 30 29 25 27 21 26 22 20 19 24 23
;;
;; Loop 3
;;  header 53, latch 52
;;  depth 2, outer 1
;;  nodes: 53 52 42 51 48 47 43 46 44 45 50 49
;;
;; Loop 4
;;  header 47, latch 46
;;  depth 3, outer 3
;;  nodes: 47 46 44 45
;;
;; Loop 2
;;  header 27, latch 26
;;  depth 2, outer 1
;;  nodes: 27 26 22
;; 2 succs { 76 3 }
;; 3 succs { 4 5 }
;; 4 succs { 65 }
;; 5 succs { 76 6 }
;; 6 succs { 76 7 }
;; 7 succs { 75 8 }
;; 8 succs { 72 9 }
;; 9 succs { 72 10 }
;; 10 succs { 72 11 }
;; 11 succs { 12 18 }
;; 12 succs { 72 13 }
;; 13 succs { 72 14 }
;; 14 succs { 72 15 }
;; 15 succs { 72 16 }
;; 16 succs { 17 18 }
;; 17 succs { 72 18 }
;; 18 succs { 60 }
;; 19 succs { 72 20 }
;; 20 succs { 72 21 }
;; 21 succs { 27 }
;; 22 succs { 23 26 }
;; 23 succs { 72 24 }
;; 24 succs { 72 25 }
;; 25 succs { 28 }
;; 26 succs { 27 }
;; 27 succs { 22 28 }
;; 28 succs { 29 59 }
;; 29 succs { 72 30 }
;; 30 succs { 72 31 }
;; 31 succs { 32 55 }
;; 32 succs { 71 33 }
;; 33 succs { 71 34 }
;; 34 succs { 70 35 }
;; 35 succs { 68 36 }
;; 36 succs { 37 38 }
;; 37 succs { 68 40 }
;; 38 succs { 68 39 }
;; 39 succs { 68 40 }
;; 40 succs { 68 41 }
;; 41 succs { 53 }
;; 42 succs { 43 52 }
;; 43 succs { 47 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 }
;; 47 succs { 44 48 }
;; 48 succs { 49 52 }
;; 49 succs { 66 50 }
;; 50 succs { 66 51 }
;; 51 succs { 52 }
;; 52 succs { 53 }
;; 53 succs { 42 54 }
;; 54 succs { 55 }
;; 55 succs { 72 56 }
;; 56 succs { 72 57 }
;; 57 succs { 72 58 }
;; 58 succs { 59 }
;; 59 succs { 60 }
;; 60 succs { 19 61 }
;; 61 succs { 62 63 }
;; 62 succs { 72 64 }
;; 63 succs { 72 64 }
;; 64 succs { 65 }
;; 65 succs { 1 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 }
;; 72 succs { 73 }
;; 73 succs { 74 }
;; 74 succs { 75 }
;; 75 succs { 76 }
;; 76 succs { }
void walk_function_path (union tree_node * function_tree, int fucntion_level, struct ptb * ptable, struct gimple_array * user_tmp)
{
  const char * D.249278;
  struct function_return_array * D.249271;
  struct function_return_array * D.249270;
  struct function_return_array * D.249269;
  struct function_return_array * D.249268;
  const char * D.249267;
  const char * D.249266;
  struct function_return_array * D.249265;
  struct function_return_array * D.249264;
  const char * D.249263;
  struct function_path_array * D.249262;
  struct function_path_array * D.249261;
  struct return_type ret_type;
  int k2;
  int find_diff;
  int k;
  struct vector funcalleeRetTypearray;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  struct function_return_array calleeFunArray;
  int o;
  int i;
  int find_thread;
  int find;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.608;
  bool retval.606;
  bool retval.601;
  bool retval.600;
  bool retval.598;
  bool retval.595;
  bool retval.591;
  bool retval.590;
  bool retval.588;
  bool retval.581;
  bool retval.576;

  <bb 2> :
  function_path_collect.577_1 = function_path_collect;
  D.249261 = hash_map<tree_node*, function_path_array>::get (function_path_collect.577_1, &function_tree);

  <bb 3> :
  _2 = D.249261;
  retval.576 = _2 == 0B;
  if (retval.576 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  goto <bb 65>; [INV]

  <bb 5> :
  function_path_collect.578_3 = function_path_collect;
  D.249262 = hash_map<tree_node*, function_path_array>::get (function_path_collect.578_3, &function_tree);

  <bb 6> :
  _4 = D.249262;
  function_path_array::function_path_array (&fun_array, _4);

  <bb 7> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 8> :
  function_return_array::function_return_array (&callerFunArray);
  std::vector<return_type>::vector (&callerRetTypearray);
  _5 = std::vector<function_path>::size (&function_path_array);
  function_tree.579_6 = function_tree;
  D.249263 = get_name (function_tree.579_6);

  <bb 9> :
  _7 = D.249263;
  stderr.580_8 = stderr;
  fprintf (stderr.580_8, "\x1b[40;44m =======print_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _7, _5, fucntion_level);

  <bb 10> :
  function_return_collect.582_9 = function_return_collect;
  D.249264 = hash_map<tree_node*, function_return_array>::get (function_return_collect.582_9, &function_tree);

  <bb 11> :
  _10 = D.249264;
  retval.581 = _10 != 0B;
  if (retval.581 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 12> :
  function_return_collect.583_11 = function_return_collect;
  D.249265 = hash_map<tree_node*, function_return_array>::get (function_return_collect.583_11, &function_tree);

  <bb 13> :
  _12 = D.249265;
  function_return_array::operator= (&callerFunArray, _12);

  <bb 14> :
  std::vector<return_type>::operator= (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 15> :
  _13 = callerFunArray.return_type_num;
  stderr.584_14 = stderr;
  fprintf (stderr.584_14, "\x1b[40;44m =======print_function_type %d  ========  \x1b[0m\n", _13);

  <bb 16> :
  _15 = callerFunArray.pthread_type_num;
  _16 = (unsigned int) _15;
  FUNCITON_THREAD.585_17 = FUNCITON_THREAD;
  if (_16 == FUNCITON_THREAD.585_17)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  stderr.586_18 = stderr;
  __builtin_fwrite ("\x1b[40;44m =======print_pthread_type_is thread_fucntion  ========  \x1b[0m\n", 1, 70, stderr.586_18);

  <bb 18> :
  fucntion_level = fucntion_level + 1;
  find = 0;
  find_thread = 0;
  i = 0;
  goto <bb 60>; [INV]

  <bb 19> :
  find = 0;
  _19 = (long unsigned int) i;
  _20 = std::vector<function_path>::operator[] (&function_path_array, _19);
  _21 = _20->next;
  D.249266 = get_name (_21);

  <bb 20> :
  _22 = D.249266;
  stderr.587_23 = stderr;
  fprintf (stderr.587_23, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _22);

  <bb 21> :
  o = 0;
  goto <bb 27>; [INV]

  <bb 22> :
  _24 = (long unsigned int) o;
  _25 = std::vector<tree_node*>::operator[] (&pathStack, _24);
  _26 = *_25;
  _27 = (long unsigned int) i;
  _28 = std::vector<function_path>::operator[] (&function_path_array, _27);
  _29 = _28->next;
  retval.588 = _26 == _29;
  if (retval.588 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  find = 1;
  _30 = (long unsigned int) o;
  _31 = std::vector<tree_node*>::operator[] (&pathStack, _30);
  _32 = *_31;
  D.249267 = get_name (_32);

  <bb 24> :
  _33 = D.249267;
  stderr.589_34 = stderr;
  fprintf (stderr.589_34, "\x1b[40;41m =======recursive_fun:%s========= \x1b[0m\n", _33);

  <bb 25> :
  goto <bb 28>; [INV]

  <bb 26> :
  o = o + 1;

  <bb 27> :
  _35 = (long unsigned int) o;
  _36 = std::vector<tree_node*>::size (&pathStack);
  retval.590 = _35 < _36;
  if (retval.590 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  if (find == 0)
    goto <bb 29>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 29> :
  _37 = (long unsigned int) i;
  _38 = std::vector<function_path>::operator[] (&function_path_array, _37);
  _39 = &_38->next;
  std::vector<tree_node*>::push_back (&pathStack, _39);

  <bb 30> :
  function_return_collect.592_40 = function_return_collect;
  _41 = (long unsigned int) i;
  _42 = std::vector<function_path>::operator[] (&function_path_array, _41);
  _43 = &_42->next;
  D.249268 = hash_map<tree_node*, function_return_array>::get (function_return_collect.592_40, _43);

  <bb 31> :
  _44 = D.249268;
  retval.591 = _44 != 0B;
  if (retval.591 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 32> :
  function_return_collect.593_45 = function_return_collect;
  _46 = (long unsigned int) i;
  _47 = std::vector<function_path>::operator[] (&function_path_array, _46);
  _48 = &_47->next;
  D.249269 = hash_map<tree_node*, function_return_array>::get (function_return_collect.593_45, _48);

  <bb 33> :
  _49 = D.249269;
  function_return_array::function_return_array (&calleeFunArray, _49);

  <bb 34> :
  _50 = calleeFunArray.return_type_num;
  stderr.594_51 = stderr;
  fprintf (stderr.594_51, "\x1b[40;44m =======print_function_type %d  ========  \x1b[0m\n", _50);

  <bb 35> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _52 = (long unsigned int) i;
  _53 = std::vector<function_path>::operator[] (&function_path_array, _52);
  _54 = _53->next;
  getFucntionDecl = _54;
  function_return_collect.596_55 = function_return_collect;
  D.249270 = hash_map<tree_node*, function_return_array>::get (function_return_collect.596_55, &getFucntionDecl);

  <bb 36> :
  _56 = D.249270;
  retval.595 = _56 == 0B;
  if (retval.595 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 40>; [INV]

  <bb 38> :
  function_return_collect.597_57 = function_return_collect;
  D.249271 = hash_map<tree_node*, function_return_array>::get (function_return_collect.597_57, &getFucntionDecl);

  <bb 39> :
  _58 = D.249271;
  function_return_array::operator= (&find_fun_array, _58);

  <bb 40> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 41> :
  k = 0;
  goto <bb 53>; [INV]

  <bb 42> :
  _59 = (long unsigned int) k;
  _60 = std::vector<return_type>::operator[] (&callerRetTypearray, _59);
  _61 = _60->return_type_stmt_num;
  _62 = (unsigned int) _61;
  FUNCITON_THREAD.599_63 = FUNCITON_THREAD;
  retval.598 = _62 == FUNCITON_THREAD.599_63;
  if (retval.598 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 43> :
  find_diff = 0;
  k2 = 0;
  goto <bb 47>; [INV]

  <bb 44> :
  _64 = (long unsigned int) k;
  _65 = std::vector<return_type>::operator[] (&callerRetTypearray, _64);
  _66 = _65->return_tree;
  _67 = (long unsigned int) k2;
  _68 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _67);
  _69 = _68->return_tree;
  retval.600 = _66 == _69;
  if (retval.600 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  find_diff = 1;

  <bb 46> :
  k2 = k2 + 1;

  <bb 47> :
  _70 = (long unsigned int) k2;
  _71 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.601 = _70 < _71;
  if (retval.601 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  if (find_diff == 0)
    goto <bb 49>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 49> :
  return_type::return_type (&ret_type);
  _72 = (long unsigned int) k;
  _73 = std::vector<return_type>::operator[] (&callerRetTypearray, _72);
  _74 = _73->stmt;
  ret_type.stmt = _74;
  _75 = (long unsigned int) k;
  _76 = std::vector<return_type>::operator[] (&callerRetTypearray, _75);
  _77 = _76->return_tree;
  ret_type.return_tree = _77;
  FUNCITON_THREAD.602_78 = FUNCITON_THREAD;
  FUNCITON_THREAD.603_79 = (int) FUNCITON_THREAD.602_78;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.603_79;
  std::vector<return_type>::push_back (&find_fun_array.return_type_array, &ret_type);

  <bb 50> :
  function_return_collect.604_80 = function_return_collect;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.604_80, &getFucntionDecl, &find_fun_array);

  <bb 51> :
  FUNCITON_THREAD.605_81 = FUNCITON_THREAD;
  find_thread = (int) FUNCITON_THREAD.605_81;
  ret_type = {CLOBBER};

  <bb 52> :
  k = k + 1;

  <bb 53> :
  _82 = (long unsigned int) k;
  _83 = std::vector<return_type>::size (&callerRetTypearray);
  retval.606 = _82 < _83;
  if (retval.606 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  function_return_array::~function_return_array (&calleeFunArray);
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 55> :
  _84 = (long unsigned int) i;
  _85 = std::vector<function_path>::operator[] (&function_path_array, _84);
  _86 = _85->next;
  walk_function_path (_86, fucntion_level, ptable, user_tmp);

  <bb 56> :
  _87 = std::vector<tree_node*>::back (&pathStack);
  _88 = *_87;
  D.249278 = get_name (_88);

  <bb 57> :
  _89 = D.249278;
  stderr.607_90 = stderr;
  fprintf (stderr.607_90, "\x1b[40;33m =======POP node_fun stack:%s========= \x1b[0m\n", _89);

  <bb 58> :
  std::vector<tree_node*>::pop_back (&pathStack);

  <bb 59> :
  i = i + 1;

  <bb 60> :
  _91 = (long unsigned int) i;
  _92 = std::vector<function_path>::size (&function_path_array);
  retval.608 = _91 < _92;
  if (retval.608 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 61> :
  find_thread.609_93 = (unsigned int) find_thread;
  FUNCITON_THREAD.610_94 = FUNCITON_THREAD;
  if (find_thread.609_93 == FUNCITON_THREAD.610_94)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  FUNCITON_THREAD.611_95 = FUNCITON_THREAD;
  FUNCITON_THREAD.612_96 = (int) FUNCITON_THREAD.611_95;
  function_tree.613_97 = function_tree;
  checkPointerConstraint (function_tree.613_97, ptable, user_tmp, 0B, FUNCITON_THREAD.612_96);
  goto <bb 64>; [INV]

  <bb 63> :
  function_tree.614_98 = function_tree;
  checkPointerConstraint (function_tree.614_98, ptable, user_tmp, 0B, 0);

  <bb 64> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 65> :
<L45>:
  return;

  <bb 66> :
<L46>:
  ret_type = {CLOBBER};
  resx 11

  <bb 67> :
<L47>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 10

  <bb 68> :
<L48>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 9

  <bb 69> :
<L49>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 8

  <bb 70> :
<L50>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 7

  <bb 71> :
<L51>:
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 6

  <bb 72> :
<L52>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 5

  <bb 73> :
<L53>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 4

  <bb 74> :
<L54>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 75> :
<L55>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 76> :
<L56>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 1

}



;; Function return_type::return_type (_ZN11return_typeC2Ev, funcdef_no=6351, decl_uid=194266, cgraph_uid=3326, symbol_order=4099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void return_type::return_type (struct return_type * const this)
{
  <bb 2> :
  this->return_type_stmt_num = 0;
  return;

}



;; Function std::vector<return_type>::push_back (_ZNSt6vectorI11return_typeSaIS0_EE9push_backERKS0_, funcdef_no=7704, decl_uid=173186, cgraph_uid=4337, symbol_order=5119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<return_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.249289;

  <bb 2> :
  _1 = this->D.173506._M_impl.D.172851._M_finish;
  _2 = this->D.173506._M_impl.D.172851._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.173506._M_impl.D.172851._M_finish;
  _4 = &this->D.173506._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_4, _3, __x);
  _5 = this->D.173506._M_impl.D.172851._M_finish;
  _6 = _5 + 24;
  this->D.173506._M_impl.D.172851._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.249289 = std::vector<return_type>::end (this);
  std::vector<return_type>::_M_realloc_insert<const return_type&> (this, D.249289, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8598, decl_uid=212373, cgraph_uid=5230, symbol_order=6016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (struct allocator_type & __a, struct return_type * __p, const struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const return_type&> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9373, decl_uid=222818, cgraph_uid=6005, symbol_order=6791)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (struct new_allocator * const this, struct return_type * __p, const struct return_type & __args#0)
{
  void * D.234069;
  void * D.234068;
  const struct return_type * D.234070;

  <bb 2> :
  D.234070 = std::forward<const return_type&> (__args#0);
  D.234068 = __p;
  D.234069 = operator new (24, D.234068);
  MEM[(struct return_type *)D.234069] = *D.234070;
  return;

}



;; Function std::vector<return_type>::_M_realloc_insert<const return_type&> (_ZNSt6vectorI11return_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8599, decl_uid=212542, cgraph_uid=5234, symbol_order=6020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::_M_realloc_insert<const return_type&> (struct vector * const this, struct iterator __position, const struct return_type & __args#0)
{
  struct return_type * D.249294;
  const size_type D.249293;
  struct return_type * __new_finish;
  struct return_type * __new_start;
  const size_type __elems_before;
  struct return_type * __old_finish;
  struct return_type * __old_start;
  const size_type __len;
  struct iterator D.222829;

  <bb 2> :
  D.249293 = std::vector<return_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.249293;
  __old_start = this->D.173506._M_impl.D.172851._M_start;
  __old_finish = this->D.173506._M_impl.D.172851._M_finish;
  D.222829 = std::vector<return_type>::begin (this);
  _1 = __gnu_cxx::operator-<return_type*, std::vector<return_type> > (&__position, &D.222829);
  __elems_before = (const size_type) _1;
  D.222829 = {CLOBBER};
  _2 = &this->D.173506;
  D.249294 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_2, __len);
  __new_start = D.249294;
  __new_finish = __new_start;
  _3 = std::forward<const return_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.173506._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.173506;
  _8 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<return_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.173506;
  _12 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<return_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.173506;
  _23 = this->D.173506._M_impl.D.172851._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.173506._M_impl.D.172851._M_start = __new_start;
  this->D.173506._M_impl.D.172851._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.173506._M_impl.D.172851._M_end_of_storage = _28;
  return;

}



;; Function std::vector<return_type>::_M_check_len (_ZNKSt6vectorI11return_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9374, decl_uid=173355, cgraph_uid=6006, symbol_order=6792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<return_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.617;
  size_type D.249298;
  const long unsigned int D.234075;
  bool retval.615;

  <bb 2> :
  _1 = std::vector<return_type>::max_size (this);
  _2 = std::vector<return_type>::size (this);
  _3 = _1 - _2;
  __n.616_4 = __n;
  retval.615 = _3 < __n.616_4;
  if (retval.615 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<return_type>::size (this);
  _6 = std::vector<return_type>::size (this);
  D.234075 = _6;
  _7 = std::max<long unsigned int> (&D.234075, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234075 = {CLOBBER};
  _9 = std::vector<return_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<return_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.617 = std::vector<return_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.617 = __len;

  <bb 8> :
  D.249298 = iftmp.617;

  <bb 9> :
<L6>:
  return D.249298;

}



;; Function std::vector<return_type>::max_size (_ZNKSt6vectorI11return_typeSaIS0_EE8max_sizeEv, funcdef_no=10032, decl_uid=173141, cgraph_uid=6664, symbol_order=7454)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::max_size (const struct vector * const this)
{
  size_type D.249305;

  <bb 2> :
  _1 = &this->D.173506;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  D.249305 = std::vector<return_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.249305;

}



;; Function std::vector<return_type>::_S_max_size (_ZNSt6vectorI11return_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10542, decl_uid=173362, cgraph_uid=7174, symbol_order=7964)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.249307;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<return_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.249307 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249307;

}



;; Function std::allocator_traits<std::allocator<return_type> >::max_size (_ZNSt16allocator_traitsISaI11return_typeEE8max_sizeERKS1_, funcdef_no=10792, decl_uid=172676, cgraph_uid=7424, symbol_order=8216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<return_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.249310;

  <bb 2> :
  D.249310 = __gnu_cxx::new_allocator<return_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.249310;

}



;; Function __gnu_cxx::new_allocator<return_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE8max_sizeEv, funcdef_no=10899, decl_uid=172518, cgraph_uid=7531, symbol_order=8323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::max_size (const struct new_allocator * const this)
{
  size_type D.249312;

  <bb 2> :
  D.249312 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.249312;

}



;; Function __gnu_cxx::operator-<return_type*, std::vector<return_type> > (_ZN9__gnu_cxxmiIP11return_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9375, decl_uid=222830, cgraph_uid=6007, symbol_order=6793)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.249314;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.249314 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.249314;

}



;; Function std::vector<return_type>::_S_relocate (_ZNSt6vectorI11return_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9376, decl_uid=173013, cgraph_uid=6008, symbol_order=6794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.249317;
  struct return_type * D.249316;

  <bb 2> :
  D.249316 = std::vector<return_type>::_S_do_relocate (__first, __last, __result, __alloc, D.249317);

  <bb 3> :
<L0>:
  return D.249316;

}



;; Function std::vector<return_type>::_S_do_relocate (_ZNSt6vectorI11return_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10033, decl_uid=173001, cgraph_uid=6665, symbol_order=7455)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_do_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239960)
{
  struct return_type * D.249319;

  <bb 2> :
  D.249319 = std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.249319;

}



;; Function std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (_ZSt12__relocate_aIP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10543, decl_uid=222995, cgraph_uid=7175, symbol_order=7965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * D.249321;

  <bb 2> :
  _1 = std::__niter_base<return_type*> (__result);
  _2 = std::__niter_base<return_type*> (__last);
  _3 = std::__niter_base<return_type*> (__first);
  D.249321 = std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.249321;

}



;; Function std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_ZSt14__relocate_a_1IP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10793, decl_uid=223146, cgraph_uid=7425, symbol_order=8217)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * __cur;
  struct return_type * D.249323;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__first);
  _2 = std::__addressof<return_type> (__cur);
  std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.249323 = __cur;

  <bb 6> :
<L3>:
  return D.249323;

}



;; Function std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_ZSt19__relocate_object_aI11return_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10900, decl_uid=223175, cgraph_uid=7532, symbol_order=8324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (struct return_type * restrict __dest, struct return_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<return_type&> (__orig);
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (__alloc, __dest, _1);
  _2 = std::__addressof<return_type> (__orig);
  std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (__alloc, _2);
  return;

}



;; Function std::move<return_type&> (_ZSt4moveIR11return_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10947, decl_uid=223187, cgraph_uid=7579, symbol_order=8371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<return_type&> (struct return_type & __t)
{
  struct type & D.249325;

  <bb 2> :
  D.249325 = __t;

  <bb 3> :
<L0>:
  return D.249325;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10948, decl_uid=223189, cgraph_uid=7580, symbol_order=8372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (struct allocator_type & __a, struct return_type * __p, struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<return_type> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (__a, __p, _1);
  return;

}



;; Function std::forward<return_type> (_ZSt7forwardI11return_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10967, decl_uid=245301, cgraph_uid=7599, symbol_order=8391)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type> (struct type & __t)
{
  struct return_type & D.249327;

  <bb 2> :
  D.249327 = __t;

  <bb 3> :
<L0>:
  return D.249327;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10968, decl_uid=245303, cgraph_uid=7600, symbol_order=8392)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (struct new_allocator * const this, struct return_type * __p, struct return_type & __args#0)
{
  void * D.245721;
  void * D.245720;
  struct return_type * D.245722;

  <bb 2> :
  D.245722 = std::forward<return_type> (__args#0);
  D.245720 = __p;
  D.245721 = operator new (24, D.245720);
  MEM[(struct return_type *)D.245721] = *D.245722;
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (_ZNSt16allocator_traitsISaI11return_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9378, decl_uid=223204, cgraph_uid=6010, symbol_order=6796)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (struct allocator_type & __a, struct return_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::destroy<return_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::destroy<return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE7destroyIS1_EEvPT_, funcdef_no=10034, decl_uid=234090, cgraph_uid=6666, symbol_order=7456)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::destroy<return_type> (struct new_allocator * const this, struct return_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::put (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7706, decl_uid=189530, cgraph_uid=4338, symbol_order=5120)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_return_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_return_array & v)
{
  bool D.249336;
  struct hash_entry * D.249335;
  unsigned int D.249334;
  bool ins;
  struct hash_entry * e;
  bool D.249332;
  void * D.212552;
  void * D.212551;

  <bb 2> :
  _1 = &this->m_table;
  D.249334 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.249334;
  D.249335 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.249335;
  D.249336 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (e);
  ins = D.249336;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212551 = &e->m_value;
  D.212552 = operator new (32, D.212551);
  function_return_array::function_return_array (D.212552, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_return_array::operator= (_4, v);

  <bb 5> :
  D.249332 = ~ins;

  <bb 6> :
<L3>:
  return D.249332;

  <bb 7> :
<L4>:
  operator delete (D.212552, D.212551);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8603, decl_uid=189688, cgraph_uid=5235, symbol_order=6021)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.249387;
  bool D.249386;
  bool D.249385;
  bool D.249384;
  bool D.249383;
  bool D.249382;
  struct value_type * D.249381;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.623;
  bool retval.622;
  bool retval.621;
  bool retval.620;
  bool retval.619;
  bool retval.618;
  struct value_type * D.249343;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.249382 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.618 = D.249382;
  if (retval.618 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.249383 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.619 = D.249383;
  if (retval.619 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.249384 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.620 = D.249384;
  if (retval.620 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.249343 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.249385 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.621 = D.249385;
  if (retval.621 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.249386 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.622 = D.249386;
  if (retval.622 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.249387 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.623 = D.249387;
  if (retval.623 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.249343 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.249343 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.249343 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.249343 = _37 + _39;

  <bb 27> :
<L37>:
  return D.249343;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9379, decl_uid=189769, cgraph_uid=6023, symbol_order=6809)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.249418;
  unsigned int D.249417;
  bool D.249416;
  bool D.249415;
  struct mem_alloc_description & D.249414;
  struct value_type * D.249413;
  unsigned int D.249412;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234113;
  void * D.234112;
  struct hash_entry & D.234150;
  bool iftmp.627;
  bool retval.626;
  bool iftmp.625;
  bool retval.624;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.625 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.625 = 0;

  <bb 6> :
  retval.624 = iftmp.625;
  if (retval.624 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.249412 = hash_table_higher_prime_index (_5);
  nindex = D.249412;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.249413 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.249413;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.249415 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.249415;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.249416 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.249416;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.627 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.627 = 0;

  <bb 15> :
  retval.626 = iftmp.627;
  if (retval.626 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.249417 = hash_map<tree_node*, function_return_array>::hash_entry::hash (x);
  _16 = D.249417;
  D.249418 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.249418;
  D.234150 = std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (x);
  D.234112 = q;
  D.234113 = operator new (40, D.234112);
  hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (D.234113, D.234150);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10035, decl_uid=189664, cgraph_uid=6667, symbol_order=7457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.249419;

  <bb 2> :
  D.249419 = this->m_size;

  <bb 3> :
<L0>:
  return D.249419;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10036, decl_uid=189666, cgraph_uid=6668, symbol_order=7458)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.249421;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.249421 = _1 - _2;

  <bb 3> :
<L0>:
  return D.249421;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10037, decl_uid=189766, cgraph_uid=6669, symbol_order=7459)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.628;
  bool D.249423;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.628 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.628 = 0;

  <bb 6> :
  D.249423 = iftmp.628;

  <bb 7> :
<L4>:
  return D.249423;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9190, decl_uid=189756, cgraph_uid=5822, symbol_order=6608)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.249445;
  struct value_type * D.249444;
  struct mem_alloc_description & D.249443;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.249441;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.249444 = xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (n);
  nentries = D.249444;
  goto <bb 6>; [INV]

  <bb 5> :
  D.249445 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (n);
  nentries = D.249445;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.249441 = nentries;

  <bb 9> :
<L14>:
  return D.249441;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9906, decl_uid=216700, cgraph_uid=6538, symbol_order=7328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.249448;
  struct hash_entry * D.249446;

  <bb 2> :
  D.249448 = xcalloc (count, 40);
  D.249446 = D.249448;

  <bb 3> :
<L0>:
  return D.249446;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9907, decl_uid=231854, cgraph_uid=6539, symbol_order=7329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.249455;
  struct hash_entry * D.249454;
  struct hash_entry * D.249452;
  bool retval.629;

  <bb 2> :
  retval.629 = need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ();
  if (retval.629 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.249454 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.249452 = D.249454;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.249455 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.249452 = D.249455;

  <bb 5> :
<L2>:
  return D.249452;

}



;; Function finalize<hash_map<tree_node*, function_return_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10433, decl_uid=239355, cgraph_uid=7068, symbol_order=7858)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_return_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10435, decl_uid=242834, cgraph_uid=7066, symbol_order=7856)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_return_array::~function_return_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10432, decl_uid=239354, cgraph_uid=7064, symbol_order=7854)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ()
{
  bool D.249456;

  <bb 2> :
  D.249456 = 1;

  <bb 3> :
<L0>:
  return D.249456;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10039, decl_uid=189589, cgraph_uid=6671, symbol_order=7461)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_return_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.249460;
  hashval_t D.249458;

  <bb 2> :
  _1 = &e->m_key;
  D.249460 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_1);
  D.249458 = D.249460;

  <bb 3> :
<L0>:
  return D.249458;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10038, decl_uid=189759, cgraph_uid=6670, symbol_order=7460)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.249473;
  bool D.249472;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.631;
  struct value_type * D.249464;
  bool retval.630;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.249472 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.630 = D.249472;
  if (retval.630 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.249464 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.249473 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.631 = D.249473;
  if (retval.631 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.249464 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.249464;

}



;; Function std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10040, decl_uid=234110, cgraph_uid=6672, symbol_order=7462)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.249474;

  <bb 2> :
  D.249474 = __t;

  <bb 3> :
<L0>:
  return D.249474;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9390, decl_uid=234135, cgraph_uid=6021, symbol_order=6807)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234137)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234137->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234137->m_value;
  function_return_array::function_return_array (_2, _3);
  return;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2EOS_, funcdef_no=9388, decl_uid=189881, cgraph_uid=6018, symbol_order=6804)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, struct function_return_array & D.189883)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.189883->return_type_num;
  this->return_type_num = _1;
  _2 = D.189883->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.189883->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9386, decl_uid=173463, cgraph_uid=6015, symbol_order=6801)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this, struct vector & D.173465)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173506;
  _2 = &D.173465->D.173506;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9384, decl_uid=172931, cgraph_uid=6012, symbol_order=6798)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.172933)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.172933->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10042, decl_uid=172837, cgraph_uid=6674, symbol_order=7464)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  std::allocator<return_type>::allocator (this, _1);
  _2 = &this->D.172851;
  _3 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.172851;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11return_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10544, decl_uid=239990, cgraph_uid=7176, symbol_order=7966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.249476;

  <bb 2> :
  D.249476 = __t;

  <bb 3> :
<L0>:
  return D.249476;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10546, decl_uid=172793, cgraph_uid=7178, symbol_order=7968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8904, decl_uid=216702, cgraph_uid=5536, symbol_order=6322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9392, decl_uid=189777, cgraph_uid=6024, symbol_order=6810)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10044, decl_uid=189601, cgraph_uid=6676, symbol_order=7466)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10548, decl_uid=240005, cgraph_uid=7180, symbol_order=7970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<tree_node*>::back (_ZNSt6vectorIP9tree_nodeSaIS1_EE4backEv, funcdef_no=7707, decl_uid=184557, cgraph_uid=4339, symbol_order=5121)

Merging blocks 3 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
union tree_node * & std::vector<tree_node*>::back (struct vector * const this)
{
  struct iterator D.212554;
  struct __normal_iterator D.212556;
  union tree_node * & D.249479;

  <bb 2> :
  D.212554 = std::vector<tree_node*>::end (this);
  D.212556 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator- (&D.212554, 1);
  D.249479 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator* (&D.212556);

  <bb 3> :
  D.212556 = {CLOBBER};
  D.212554 = {CLOBBER};

  <bb 4> :
<L2>:
  return D.249479;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator- (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEmiEl, funcdef_no=8605, decl_uid=212197, cgraph_uid=5237, symbol_order=6023)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator- (const struct __normal_iterator * const this, difference_type __n)
{
  union tree_node * * const D.223403;
  struct __normal_iterator D.223404;
  struct __normal_iterator D.249483;

  <bb 2> :
  _1 = this->_M_current;
  __n.632_2 = (long unsigned int) __n;
  _3 = __n.632_2 * 8;
  _4 = -_3;
  _5 = _1 + _4;
  D.223403 = _5;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.223404, &D.223403);
  D.249483 = D.223404;
  D.223404 = {CLOBBER};
  D.223403 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.249483;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEdeEv, funcdef_no=8606, decl_uid=212171, cgraph_uid=5238, symbol_order=6024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * & __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator* (const struct __normal_iterator * const this)
{
  union tree_node * & D.249487;

  <bb 2> :
  D.249487 = this->_M_current;

  <bb 3> :
<L0>:
  return D.249487;

}



;; Function dump_fucntion (_Z13dump_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6353, decl_uid=187030, cgraph_uid=3329, symbol_order=4102)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 6 8 9 7 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 11 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 5 12 }
;; 12 succs { 1 }
void dump_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.249504;
  const char * D.249503;
  const char * D.249502;
  struct function * D.249501;
  struct function * D.249500;
  bool D.249499;
  struct cgraph_node * D.249498;
  int fucntion_level;
  struct cgraph_edge * e;
  bool retval.636;
  bool retval.635;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stderr.633_1 = stderr;
  __builtin_fwrite ("=======node_fun: =========\n", 1, 27, stderr.633_1);

  <bb 4> :
  symtab.634_2 = symtab;
  D.249498 = symbol_table::first_defined_function (symtab.634_2);
  node = D.249498;
  goto <bb 11>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.249499 = gimple_has_body_p (_3);
  _4 = D.249499;
  retval.635 = ~_4;
  if (retval.635 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  fucntion_level = 0;
  D.249500 = cgraph_node::get_fun (node);
  _5 = D.249500;
  push_cfun (_5);
  D.249501 = cgraph_node::get_fun (node);
  _6 = D.249501;
  _7 = _6->decl;
  retval.636 = _7 == 0B;
  if (retval.636 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  cfun.637_8 = cfun;
  _9 = cfun.637_8->decl;
  D.249502 = get_name (_9);
  _10 = D.249502;
  stderr.638_11 = stderr;
  fprintf (stderr.638_11, "\x1b[40;44m =======node_fun:%s========= \x1b[0m\n", _10);
  stderr.639_12 = stderr;
  __builtin_fwrite ("\x1b[40;44m fucntion collect path  \x1b[0m\n", 1, 37, stderr.639_12);
  cfun.640_13 = cfun;
  _14 = &cfun.640_13->decl;
  std::vector<tree_node*>::push_back (&pathStack, _14);
  cfun.641_15 = cfun;
  _16 = cfun.641_15->decl;
  walk_function_path (_16, fucntion_level, ptable, user_tmp);
  _17 = std::vector<tree_node*>::back (&pathStack);
  _18 = *_17;
  D.249503 = get_name (_18);
  _19 = D.249503;
  stderr.642_20 = stderr;
  fprintf (stderr.642_20, "\x1b[40;33m =======POP node_fun stack:%s========= \x1b[0m\n", _19);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 10> :
  symtab.643_21 = symtab;
  D.249504 = symbol_table::next_defined_function (symtab.643_21, node);
  node = D.249504;

  <bb 11> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  stderr.644_22 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.644_22);
  return;

}



;; Function collect_function_call (_Z21collect_function_callP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6354, decl_uid=186986, cgraph_uid=3333, symbol_order=4106)

Removing basic block 5
Removing basic block 11
Removing basic block 16
Removing basic block 22
Removing basic block 42
Removing basic block 45
Removing basic block 63
Removing basic block 65
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 7 9 8
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 58 }
;; 5 succs { 6 14 }
;; 6 succs { 11 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 7 12 }
;; 12 succs { 13 14 }
;; 13 succs { 58 }
;; 14 succs { 15 58 }
;; 15 succs { 16 58 }
;; 16 succs { 18 17 }
;; 17 succs { 18 21 }
;; 18 succs { 20 19 }
;; 19 succs { 20 }
;; 20 succs { 57 }
;; 21 succs { 28 22 }
;; 22 succs { 28 23 }
;; 23 succs { 28 24 }
;; 24 succs { 28 25 }
;; 25 succs { 28 26 }
;; 26 succs { 28 27 }
;; 27 succs { 28 29 }
;; 28 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 57 }
;; 32 succs { 33 34 }
;; 33 succs { 57 }
;; 34 succs { 35 50 }
;; 35 succs { 59 36 }
;; 36 succs { 59 37 }
;; 37 succs { 38 }
;; 38 succs { 59 39 }
;; 39 succs { 42 40 }
;; 40 succs { 59 41 }
;; 41 succs { 42 }
;; 42 succs { 59 43 }
;; 43 succs { 59 44 }
;; 44 succs { 45 48 }
;; 45 succs { 59 46 }
;; 46 succs { 59 47 }
;; 47 succs { 48 }
;; 48 succs { 59 49 }
;; 49 succs { 57 }
;; 50 succs { 51 53 }
;; 51 succs { 52 53 }
;; 52 succs { 54 }
;; 53 succs { 54 }
;; 54 succs { 55 57 }
;; 55 succs { 56 57 }
;; 56 succs { 57 }
;; 57 succs { 58 }
;; 58 succs { 1 }
;; 59 succs { }
void collect_function_call (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  union tree_node * D.249607;
  union tree_node * D.249606;
  union tree_node * D.249605;
  union tree_node * D.249604;
  long int D.249602;
  union tree_node * D.249601;
  union tree_node * D.249600;
  union tree_node * D.249599;
  struct pthread_attr_array * D.249598;
  struct pthread_attr_array * D.249597;
  union tree_node * D.249596;
  union tree_node * D.249595;
  union tree_node * D.249594;
  union tree_node * D.249593;
  const char * D.249592;
  union tree_node * D.249591;
  union tree_node * D.249590;
  union tree_node * D.249589;
  const char * D.249588;
  union tree_node * D.249587;
  union tree_node * D.249586;
  struct pthread_attr_array pthread_attr_array;
  union tree_node * getvardecl;
  size_t found;
  int i;
  int find;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.670;
  bool iftmp.669;
  bool retval.668;
  bool retval.666;
  bool retval.663;
  bool retval.662;
  bool iftmp.656;
  bool retval.655;
  bool retval.653;
  bool retval.651;
  bool retval.650;
  struct expanded_location D.194547;
  bool retval.648;
  struct expanded_location D.194337;
  bool retval.646;
  bool retval.645;

  <bb 2> :
  loc = gimple_location (gc);
  retval.645 = is_gimple_call (gc);
  if (retval.645 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  D.249586 = gimple_call_fn (gc);
  _1 = D.249586;
  retval.646 = _1 == 0B;
  if (retval.646 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 58>; [INV]

  <bb 5> :
  vscode_extensionmod.647_2 = vscode_extensionmod;
  if (vscode_extensionmod.647_2 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  find = 0;
  i = 0;
  goto <bb 11>; [INV]

  <bb 7> :
  _3 = (long unsigned int) i;
  _4 = std::vector<breakpoint>::operator[] (&vbreakpoint, _3);
  _5 = &_4->name;
  D.194337 = expand_location (loc); [return slot optimization]
  _6 = D.194337.file;
  found = std::__cxx11::basic_string<char>::find (_5, _6, 0);
  D.194337 = {CLOBBER};
  if (found != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  _7 = (long unsigned int) i;
  _8 = std::vector<breakpoint>::operator[] (&vbreakpoint, _7);
  _9 = _8->line;
  D.194547 = expand_location (loc); [return slot optimization]
  _10 = D.194547.line;
  retval.648 = _9 == _10;
  D.194547 = {CLOBBER};
  if (retval.648 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  debug_gimple_stmt (gc);
  _11 = (long unsigned int) i;
  _12 = std::vector<breakpoint>::operator[] (&vbreakpoint, _11);
  _13 = _12->line;
  _14 = (long unsigned int) i;
  _15 = std::vector<breakpoint>::operator[] (&vbreakpoint, _14);
  _16 = &_15->name;
  _17 = std::__cxx11::basic_string<char>::c_str (_16);
  stderr.649_18 = stderr;
  fprintf (stderr.649_18, "set breakpoint %s %d\n", _17, _13);
  find = 1;

  <bb 10> :
  i = i + 1;

  <bb 11> :
  _19 = (long unsigned int) i;
  _20 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.650 = _19 < _20;
  if (retval.650 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  if (find == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 58>; [INV]

  <bb 14> :
  retval.651 = is_gimple_call (gc);
  if (retval.651 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 15> :
  D.249587 = gimple_call_fn (gc);
  _21 = D.249587;
  D.249588 = get_name (_21);
  name = D.249588;
  if (name != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 16> :
  _22 = strcmp (name, "free");
  if (_22 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  _23 = strcmp (name, "xfree");
  if (_23 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  GIMPLE_FREE_COUNT.652_24 = GIMPLE_FREE_COUNT;
  _25 = GIMPLE_FREE_COUNT.652_24 + 1;
  GIMPLE_FREE_COUNT = _25;
  D.249589 = gimple_call_arg (gc, 0);
  _26 = D.249589;
  _27 = _26->base.code;
  retval.653 = _27 == 131;
  if (retval.653 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  D.249590 = gimple_call_arg (gc, 0);
  _28 = D.249590;
  ftable.654_29 = ftable;
  set_ptb (bb, ftable.654_29, _28, loc, 0, gc, node);

  <bb 20> :
  goto <bb 57>; [INV]

  <bb 21> :
  _30 = strcmp (name, "realloc");
  if (_30 == 0)
    goto <bb 28>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  _31 = strcmp (name, "malloc");
  if (_31 == 0)
    goto <bb 28>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  D.249591 = gimple_call_fn (gc);
  _32 = D.249591;
  D.249592 = get_name (_32);
  _33 = D.249592;
  _34 = strcmp (_33, "calloc");
  if (_34 == 0)
    goto <bb 28>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  _35 = strcmp (name, "xcalloc");
  if (_35 == 0)
    goto <bb 28>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  _36 = strcmp (name, "xmalloc");
  if (_36 == 0)
    goto <bb 28>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  _37 = strcmp (name, "strdup");
  if (_37 == 0)
    goto <bb 28>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _38 = strcmp (name, "xstrdup");
  if (_38 == 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  iftmp.656 = 1;
  goto <bb 30>; [INV]

  <bb 29> :
  iftmp.656 = 0;

  <bb 30> :
  retval.655 = iftmp.656;
  if (retval.655 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  GIMPLE_MALLOC_COUNT.657_39 = GIMPLE_MALLOC_COUNT;
  _40 = GIMPLE_MALLOC_COUNT.657_39 + 1;
  GIMPLE_MALLOC_COUNT = _40;
  D.249593 = gimple_call_lhs (gc);
  _41 = D.249593;
  ptable.658_42 = ptable;
  set_ptb (bb, ptable.658_42, _41, loc, 0, gc, node);
  goto <bb 57>; [INV]

  <bb 32> :
  _43 = strcmp (name, "pthread_create");
  if (_43 == 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  IS_PTHREAD_FUCNTION.659_44 = IS_PTHREAD_FUCNTION;
  IS_PTHREAD_FUCNTION.660_45 = (int) IS_PTHREAD_FUCNTION.659_44;
  D.249594 = gimple_call_arg (gc, 0);
  _46 = D.249594;
  ptable.661_47 = ptable;
  set_ptb (bb, ptable.661_47, _46, loc, IS_PTHREAD_FUCNTION.660_45, gc, node);
  goto <bb 57>; [INV]

  <bb 34> :
  _48 = strcmp (name, "pthread_attr_setdetachstate");
  if (_48 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 35> :
  D.249595 = gimple_call_arg (gc, 0);

  <bb 36> :
  _49 = D.249595;
  _50 = _49->exp.operands[0];
  getvardecl = _50;
  D.249596 = gimple_call_arg (gc, 1);

  <bb 37> :
  _51 = D.249596;
  _52 = _51->base.code;
  retval.662 = _52 == 26;

  <bb 38> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  pthread_attr_setdetachstates.664_53 = pthread_attr_setdetachstates;
  D.249597 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.664_53, &getvardecl);

  <bb 39> :
  _54 = D.249597;
  retval.663 = _54 == 0B;
  if (retval.663 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 40> :
  pthread_attr_setdetachstates.665_55 = pthread_attr_setdetachstates;
  D.249598 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.665_55, &getvardecl);

  <bb 41> :
  _56 = D.249598;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_56];

  <bb 42> :
  pthread_attr_array.stmt = gc;
  D.249599 = gimple_call_arg (gc, 0);

  <bb 43> :
  _57 = D.249599;
  pthread_attr_array.attr_tree = _57;
  D.249600 = gimple_call_arg (gc, 1);

  <bb 44> :
  _58 = D.249600;
  _59 = _58->base.code;
  retval.666 = _59 == 26;
  if (retval.666 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 45> :
  D.249601 = gimple_call_arg (gc, 1);

  <bb 46> :
  _60 = D.249601;
  D.249602 = int_cst_value (_60);

  <bb 47> :
  _61 = D.249602;
  _62 = (int) _61;
  pthread_attr_array.attr_type_num = _62;

  <bb 48> :
  pthread_attr_setdetachstates.667_63 = pthread_attr_setdetachstates;
  hash_map<tree_node*, pthread_attr_array>::put (pthread_attr_setdetachstates.667_63, &getvardecl, &pthread_attr_array);

  <bb 49> :
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  goto <bb 57>; [INV]

  <bb 50> :
  D.249604 = gimple_call_lhs (gc);
  _64 = D.249604;
  if (_64 != 0B)
    goto <bb 51>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 51> :
  D.249605 = gimple_call_fn (gc);
  _65 = D.249605;
  if (_65 != 0B)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  iftmp.669 = 1;
  goto <bb 54>; [INV]

  <bb 53> :
  iftmp.669 = 0;

  <bb 54> :
  retval.668 = iftmp.669;
  if (retval.668 != 0)
    goto <bb 55>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 55> :
  D.249606 = gimple_call_lhs (gc);
  _66 = D.249606;
  _67 = _66->base.code;
  retval.670 = _67 == 153;
  if (retval.670 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  D.249607 = gimple_call_lhs (gc);
  _68 = D.249607;
  ptable.671_69 = ptable;
  set_ptb (bb, ptable.671_69, _68, loc, 0, gc, node);

  <bb 57> :

  <bb 58> :
<L69>:
  return;

  <bb 59> :
<L70>:
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  resx 3

}



;; Function std::vector<breakpoint>::operator[] (_ZNSt6vectorI10breakpointSaIS0_EEixEm, funcdef_no=7709, decl_uid=185876, cgraph_uid=4341, symbol_order=5123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<breakpoint>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249608;

  <bb 2> :
  _1 = this->D.186223._M_impl.D.185568._M_start;
  _2 = __n * 40;
  D.249608 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249608;

}



;; Function std::vector<breakpoint>::size (_ZNKSt6vectorI10breakpointSaIS0_EE4sizeEv, funcdef_no=7708, decl_uid=185856, cgraph_uid=4340, symbol_order=5122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::size (const struct vector * const this)
{
  size_type D.249610;

  <bb 2> :
  _1 = this->D.186223._M_impl.D.185568._M_finish;
  _2 = this->D.186223._M_impl.D.185568._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.249610 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249610;

}



;; Function pthread_attr_array::pthread_attr_array (_ZN18pthread_attr_arrayC2Ev, funcdef_no=6356, decl_uid=194554, cgraph_uid=3331, symbol_order=4104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pthread_attr_array::pthread_attr_array (struct pthread_attr_array * const this)
{
  <bb 2> :
  this->attr_type_num = 0;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::get (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7711, decl_uid=194634, cgraph_uid=4343, symbol_order=5125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_attr_array * hash_map<tree_node*, pthread_attr_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.249620;
  struct hash_entry & D.249619;
  unsigned int D.249618;
  struct hash_entry & e;
  struct pthread_attr_array * iftmp.672;
  struct pthread_attr_array * D.249612;

  <bb 2> :
  _1 = &this->m_table;
  D.249618 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.249618;
  D.249619 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.249619;
  D.249620 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  _3 = D.249620;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.672 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.672 = &e->m_value;

  <bb 5> :
  D.249612 = iftmp.672;

  <bb 6> :
<L3>:
  return D.249612;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE4hashERKS2_, funcdef_no=8607, decl_uid=194590, cgraph_uid=5239, symbol_order=6025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (union tree_node * const & h)
{
  hashval_t D.249621;

  <bb 2> :
  D.249621 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.249621;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8608, decl_uid=194774, cgraph_uid=5240, symbol_order=6026)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.249655;
  bool D.249654;
  bool D.249653;
  bool D.249652;
  bool D.249651;
  bool D.249650;
  struct value_type * D.249649;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.676;
  bool retval.675;
  struct value_type & D.249635;
  bool iftmp.674;
  bool retval.673;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.249650 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.249650;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.249651 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.249651;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.249652 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _11 = D.249652;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.674 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.674 = 0;

  <bb 8> :
  retval.673 = iftmp.674;
  if (retval.673 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.249635 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.249653 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.249653;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.249654 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.249654;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.249655 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _23 = D.249655;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.676 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.676 = 0;

  <bb 18> :
  retval.675 = iftmp.676;
  if (retval.675 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.249635 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.249635;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8909, decl_uid=194870, cgraph_uid=5541, symbol_order=6327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.249658;
  bool D.249656;

  <bb 2> :
  D.249658 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (v);
  D.249656 = D.249658;

  <bb 3> :
<L0>:
  return D.249656;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8611, decl_uid=194703, cgraph_uid=5243, symbol_order=6029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.249661;
  bool D.249659;

  <bb 2> :
  D.249661 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.249659 = D.249661;

  <bb 3> :
<L0>:
  return D.249659;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8910, decl_uid=194868, cgraph_uid=5542, symbol_order=6328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.249664;
  bool D.249662;

  <bb 2> :
  D.249664 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (v);
  D.249662 = D.249664;

  <bb 3> :
<L0>:
  return D.249662;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9734, decl_uid=194698, cgraph_uid=6366, symbol_order=7152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.249667;
  bool D.249665;

  <bb 2> :
  D.249667 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.249665 = D.249667;

  <bb 3> :
<L0>:
  return D.249665;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10292, decl_uid=237322, cgraph_uid=6924, symbol_order=7714)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249668;

  <bb 2> :
  _1 = entry->m_key;
  D.249668 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.249668;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9394, decl_uid=194691, cgraph_uid=6026, symbol_order=6812)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.249672;
  bool D.249670;

  <bb 2> :
  _1 = &a->m_key;
  D.249672 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_1, b);
  D.249670 = D.249672;

  <bb 3> :
<L0>:
  return D.249670;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10equal_keysERKS2_S7_, funcdef_no=10047, decl_uid=194592, cgraph_uid=6679, symbol_order=7469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.249673;

  <bb 2> :
  D.249673 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.249673;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8609, decl_uid=212566, cgraph_uid=5241, symbol_order=6027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249675;

  <bb 2> :
  _1 = entry->m_key;
  D.249675 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.249675;

}



;; Function hash_map<tree_node*, pthread_attr_array>::put (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7712, decl_uid=194630, cgraph_uid=4344, symbol_order=5126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::put (struct hash_map * const this, union tree_node * const & k, const struct pthread_attr_array & v)
{
  bool D.249684;
  struct hash_entry * D.249683;
  unsigned int D.249682;
  bool ins;
  struct hash_entry * e;
  bool D.249680;
  void * D.212574;
  void * D.212573;

  <bb 2> :
  _1 = &this->m_table;
  D.249682 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.249682;
  D.249683 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.249683;
  D.249684 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (e);
  ins = D.249684;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212573 = &e->m_value;
  D.212574 = operator new (24, D.212573);
  MEM[(struct pthread_attr_array *)D.212574] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.249680 = ~ins;

  <bb 6> :
<L3>:
  return D.249680;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8610, decl_uid=194785, cgraph_uid=5242, symbol_order=6028)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.249734;
  bool D.249733;
  bool D.249732;
  bool D.249731;
  bool D.249730;
  bool D.249729;
  struct value_type * D.249728;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.682;
  bool retval.681;
  bool retval.680;
  bool retval.679;
  bool retval.678;
  bool retval.677;
  struct value_type * D.249690;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.249729 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.677 = D.249729;
  if (retval.677 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.249730 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.678 = D.249730;
  if (retval.678 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.249731 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.679 = D.249731;
  if (retval.679 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.249690 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.249732 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.680 = D.249732;
  if (retval.680 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.249733 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.681 = D.249733;
  if (retval.681 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.249734 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.682 = D.249734;
  if (retval.682 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.249690 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.249690 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.249690 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.249690 = _37 + _39;

  <bb 27> :
<L37>:
  return D.249690;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9395, decl_uid=194866, cgraph_uid=6027, symbol_order=6813)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.249765;
  unsigned int D.249764;
  bool D.249763;
  bool D.249762;
  struct mem_alloc_description & D.249761;
  struct value_type * D.249760;
  unsigned int D.249759;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234190;
  void * D.234189;
  struct hash_entry * D.234215;
  bool iftmp.686;
  bool retval.685;
  bool iftmp.684;
  bool retval.683;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.684 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.684 = 0;

  <bb 6> :
  retval.683 = iftmp.684;
  if (retval.683 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.249759 = hash_table_higher_prime_index (_5);
  nindex = D.249759;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.249760 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.249760;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.249762 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.249762;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.249763 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.249763;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.686 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.686 = 0;

  <bb 15> :
  retval.685 = iftmp.686;
  if (retval.685 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.249764 = hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (x);
  _16 = D.249764;
  D.249765 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.249765;
  D.234215 = std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (x);
  D.234189 = q;
  D.234190 = operator new (32, D.234189);
  MEM[(struct value_type *)D.234190] = *D.234215;

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10048, decl_uid=194761, cgraph_uid=6680, symbol_order=7470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.249766;

  <bb 2> :
  D.249766 = this->m_size;

  <bb 3> :
<L0>:
  return D.249766;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10049, decl_uid=194763, cgraph_uid=6681, symbol_order=7471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.249768;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.249768 = _1 - _2;

  <bb 3> :
<L0>:
  return D.249768;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10050, decl_uid=194863, cgraph_uid=6682, symbol_order=7472)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.687;
  bool D.249770;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.687 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.687 = 0;

  <bb 6> :
  D.249770 = iftmp.687;

  <bb 7> :
<L4>:
  return D.249770;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9393, decl_uid=194853, cgraph_uid=6025, symbol_order=6811)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.249792;
  struct value_type * D.249791;
  struct mem_alloc_description & D.249790;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.249788;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.249791 = xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (n);
  nentries = D.249791;
  goto <bb 6>; [INV]

  <bb 5> :
  D.249792 = ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (n);
  nentries = D.249792;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.249788 = nentries;

  <bb 9> :
<L14>:
  return D.249788;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10045, decl_uid=216748, cgraph_uid=6677, symbol_order=7467)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.249795;
  struct hash_entry * D.249793;

  <bb 2> :
  D.249795 = xcalloc (count, 32);
  D.249793 = D.249795;

  <bb 3> :
<L0>:
  return D.249793;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10046, decl_uid=234160, cgraph_uid=6678, symbol_order=7468)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.249802;
  struct hash_entry * D.249801;
  struct hash_entry * D.249799;
  bool retval.688;

  <bb 2> :
  retval.688 = need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ();
  if (retval.688 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.249801 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.249799 = D.249801;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.249802 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.249799 = D.249802;

  <bb 5> :
<L2>:
  return D.249799;

}



;; Function finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10550, decl_uid=240012, cgraph_uid=7182, symbol_order=7972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10549, decl_uid=240011, cgraph_uid=7181, symbol_order=7971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ()
{
  bool D.249803;

  <bb 2> :
  D.249803 = 0;

  <bb 3> :
<L0>:
  return D.249803;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10052, decl_uid=194689, cgraph_uid=6684, symbol_order=7474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.249807;
  hashval_t D.249805;

  <bb 2> :
  _1 = &e->m_key;
  D.249807 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_1);
  D.249805 = D.249807;

  <bb 3> :
<L0>:
  return D.249805;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10051, decl_uid=194856, cgraph_uid=6683, symbol_order=7473)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.249820;
  bool D.249819;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.690;
  struct value_type * D.249811;
  bool retval.689;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.249819 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.689 = D.249819;
  if (retval.689 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.249811 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.249820 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.690 = D.249820;
  if (retval.690 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.249811 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.249811;

}



;; Function std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10053, decl_uid=234187, cgraph_uid=6685, symbol_order=7475)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.249821;

  <bb 2> :
  D.249821 = __t;

  <bb 3> :
<L0>:
  return D.249821;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8912, decl_uid=216750, cgraph_uid=5544, symbol_order=6330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9396, decl_uid=194874, cgraph_uid=6028, symbol_order=6814)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10054, decl_uid=194701, cgraph_uid=6686, symbol_order=7476)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10551, decl_uid=240038, cgraph_uid=7183, symbol_order=7973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function collect_FunctionMapping_Assign (_Z30collect_FunctionMapping_AssignP6gimpleP11cgraph_nodeP15basic_block_defP3ptb, funcdef_no=6358, decl_uid=186991, cgraph_uid=3379, symbol_order=4152)

Removing basic block 15
Removing basic block 29
Removing basic block 49
Removing basic block 60
Removing basic block 61
Removing basic block 80
Removing basic block 93
Removing basic block 107
Removing basic block 122
Removing basic block 135
Removing basic block 161
Removing basic block 181
Removing basic block 192
Removing basic block 194
Removing basic block 206
Removing basic block 211
Removing basic block 222
Removing basic block 223
Removing basic block 224
Removing basic block 232
Removing basic block 236
Removing basic block 237
Removing basic block 238
Merging blocks 242 and 255
Removing basic block 247
Merging blocks 254 and 256
Removing basic block 260
Removing basic block 261
Merging blocks 270 and 572
Removing basic block 279
Removing basic block 289
Removing basic block 294
Removing basic block 304
Removing basic block 310
Removing basic block 320
Removing basic block 327
Removing basic block 347
Removing basic block 358
Removing basic block 359
Removing basic block 360
Removing basic block 362
Removing basic block 369
Removing basic block 378
Removing basic block 383
Removing basic block 396
Removing basic block 402
Removing basic block 408
Removing basic block 429
Removing basic block 440
Removing basic block 441
Removing basic block 442
Removing basic block 443
Removing basic block 448
Removing basic block 468
Removing basic block 479
Removing basic block 480
Removing basic block 481
Removing basic block 482
Removing basic block 483
Removing basic block 484
Removing basic block 485
Removing basic block 491
Removing basic block 499
Removing basic block 501
Removing basic block 514
Removing basic block 525
Removing basic block 526
Removing basic block 527
Removing basic block 528
Removing basic block 533
Removing basic block 541
Removing basic block 547
Removing basic block 555
Removing basic block 562
Merging blocks 571 and 573
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 4
;;  header 214, latch 213
;;  depth 1, outer 0
;;  nodes: 214 213 210 212 211 209 215
;;
;; Loop 3
;;  header 193, latch 192
;;  depth 1, outer 0
;;  nodes: 193 192 186 191 188 187 190 189 185
;;
;; Loop 2
;;  header 160, latch 159
;;  depth 1, outer 0
;;  nodes: 160 159 141 158 157 156 155 154 150 153 152 151 149 148 145 147 146 143 142 144 139 140 138 137 136 135 161
;;
;; Loop 1
;;  header 357, latch 356
;;  depth 1, outer 0
;;  nodes: 357 356 354 355 353 349 352 350 351
;; 2 succs { 3 234 }
;; 3 succs { 4 5 }
;; 4 succs { 499 }
;; 5 succs { 6 499 }
;; 6 succs { 7 499 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 60 }
;; 10 succs { 11 23 }
;; 11 succs { 503 12 }
;; 12 succs { 500 13 }
;; 13 succs { 14 15 }
;; 14 succs { 500 18 }
;; 15 succs { 500 16 }
;; 16 succs { 500 17 }
;; 17 succs { 500 18 }
;; 18 succs { 500 19 }
;; 19 succs { 500 20 }
;; 20 succs { 500 21 }
;; 21 succs { 500 22 }
;; 22 succs { 59 }
;; 23 succs { 24 59 }
;; 24 succs { 513 25 }
;; 25 succs { 511 26 }
;; 26 succs { 27 28 }
;; 27 succs { 511 31 }
;; 28 succs { 511 29 }
;; 29 succs { 511 30 }
;; 30 succs { 511 31 }
;; 31 succs { 511 32 }
;; 32 succs { 511 33 }
;; 33 succs { 511 34 }
;; 34 succs { 511 35 }
;; 35 succs { 36 58 }
;; 36 succs { 508 37 }
;; 37 succs { 38 57 }
;; 38 succs { 39 57 }
;; 39 succs { 508 40 }
;; 40 succs { 41 57 }
;; 41 succs { 507 42 }
;; 42 succs { 507 43 }
;; 43 succs { 507 44 }
;; 44 succs { 504 45 }
;; 45 succs { 46 47 }
;; 46 succs { 507 51 }
;; 47 succs { 507 48 }
;; 48 succs { 505 49 }
;; 49 succs { 505 50 }
;; 50 succs { 507 51 }
;; 51 succs { 507 52 }
;; 52 succs { 507 53 }
;; 53 succs { 507 54 }
;; 54 succs { 507 55 }
;; 55 succs { 506 56 }
;; 56 succs { 57 }
;; 57 succs { 58 }
;; 58 succs { 59 }
;; 59 succs { 233 }
;; 60 succs { 61 69 }
;; 61 succs { 516 62 }
;; 62 succs { 63 68 }
;; 63 succs { 514 64 }
;; 64 succs { 514 65 }
;; 65 succs { 514 66 }
;; 66 succs { 514 67 }
;; 67 succs { 68 }
;; 68 succs { 233 }
;; 69 succs { 71 70 }
;; 70 succs { 71 82 }
;; 71 succs { 518 72 }
;; 72 succs { 518 73 }
;; 73 succs { 74 75 }
;; 74 succs { 518 77 }
;; 75 succs { 518 76 }
;; 76 succs { 518 77 }
;; 77 succs { 518 78 }
;; 78 succs { 518 79 }
;; 79 succs { 518 80 }
;; 80 succs { 518 81 }
;; 81 succs { 233 }
;; 82 succs { 83 109 }
;; 83 succs { 524 84 }
;; 84 succs { 522 85 }
;; 85 succs { 86 87 }
;; 86 succs { 522 90 }
;; 87 succs { 522 88 }
;; 88 succs { 522 89 }
;; 89 succs { 522 90 }
;; 90 succs { 522 91 }
;; 91 succs { 522 92 }
;; 92 succs { 522 93 }
;; 93 succs { 522 94 }
;; 94 succs { 522 95 }
;; 95 succs { 96 108 }
;; 96 succs { 521 97 }
;; 97 succs { 521 98 }
;; 98 succs { 99 100 }
;; 99 succs { 521 103 }
;; 100 succs { 521 101 }
;; 101 succs { 521 102 }
;; 102 succs { 521 103 }
;; 103 succs { 521 104 }
;; 104 succs { 521 105 }
;; 105 succs { 521 106 }
;; 106 succs { 521 107 }
;; 107 succs { 108 }
;; 108 succs { 233 }
;; 109 succs { 110 121 }
;; 110 succs { 527 111 }
;; 111 succs { 525 112 }
;; 112 succs { 113 114 }
;; 113 succs { 525 117 }
;; 114 succs { 525 115 }
;; 115 succs { 525 116 }
;; 116 succs { 525 117 }
;; 117 succs { 525 118 }
;; 118 succs { 525 119 }
;; 119 succs { 525 120 }
;; 120 succs { 233 }
;; 121 succs { 122 133 }
;; 122 succs { 530 123 }
;; 123 succs { 528 124 }
;; 124 succs { 125 126 }
;; 125 succs { 528 129 }
;; 126 succs { 528 127 }
;; 127 succs { 528 128 }
;; 128 succs { 528 129 }
;; 129 succs { 528 130 }
;; 130 succs { 528 131 }
;; 131 succs { 528 132 }
;; 132 succs { 233 }
;; 133 succs { 543 134 }
;; 134 succs { 160 }
;; 135 succs { 534 136 }
;; 136 succs { 139 137 }
;; 137 succs { 534 138 }
;; 138 succs { 139 140 }
;; 139 succs { 141 }
;; 140 succs { 141 }
;; 141 succs { 142 159 }
;; 142 succs { 533 143 }
;; 143 succs { 144 146 }
;; 144 succs { 533 145 }
;; 145 succs { 148 }
;; 146 succs { 533 147 }
;; 147 succs { 148 }
;; 148 succs { 531 149 }
;; 149 succs { 150 151 }
;; 150 succs { 531 154 }
;; 151 succs { 531 152 }
;; 152 succs { 531 153 }
;; 153 succs { 531 154 }
;; 154 succs { 531 155 }
;; 155 succs { 531 156 }
;; 156 succs { 531 157 }
;; 157 succs { 531 158 }
;; 158 succs { 159 }
;; 159 succs { 160 }
;; 160 succs { 543 161 }
;; 161 succs { 135 162 }
;; 162 succs { 543 163 }
;; 163 succs { 164 181 }
;; 164 succs { 543 165 }
;; 165 succs { 166 181 }
;; 166 succs { 537 167 }
;; 167 succs { 535 168 }
;; 168 succs { 169 170 }
;; 169 succs { 537 174 }
;; 170 succs { 537 171 }
;; 171 succs { 536 172 }
;; 172 succs { 536 173 }
;; 173 succs { 537 174 }
;; 174 succs { 537 175 }
;; 175 succs { 537 176 }
;; 176 succs { 537 177 }
;; 177 succs { 537 178 }
;; 178 succs { 179 180 }
;; 179 succs { 537 180 }
;; 180 succs { 181 }
;; 181 succs { 543 182 }
;; 182 succs { 183 216 }
;; 183 succs { 184 196 }
;; 184 succs { 193 }
;; 185 succs { 543 186 }
;; 186 succs { 187 192 }
;; 187 succs { 543 188 }
;; 188 succs { 189 192 }
;; 189 succs { 543 190 }
;; 190 succs { 543 191 }
;; 191 succs { 192 }
;; 192 succs { 193 }
;; 193 succs { 185 194 }
;; 194 succs { 195 196 }
;; 195 succs { 232 }
;; 196 succs { 543 197 }
;; 197 succs { 543 198 }
;; 198 succs { 199 216 }
;; 199 succs { 200 206 }
;; 200 succs { 543 201 }
;; 201 succs { 202 206 }
;; 202 succs { 543 203 }
;; 203 succs { 204 206 }
;; 204 succs { 543 205 }
;; 205 succs { 543 206 }
;; 206 succs { 543 207 }
;; 207 succs { 208 216 }
;; 208 succs { 214 }
;; 209 succs { 543 210 }
;; 210 succs { 211 213 }
;; 211 succs { 543 212 }
;; 212 succs { 543 213 }
;; 213 succs { 214 }
;; 214 succs { 543 215 }
;; 215 succs { 209 216 }
;; 216 succs { 217 231 }
;; 217 succs { 542 218 }
;; 218 succs { 219 220 }
;; 219 succs { 232 }
;; 220 succs { 542 221 }
;; 221 succs { 540 222 }
;; 222 succs { 223 224 }
;; 223 succs { 540 227 }
;; 224 succs { 540 225 }
;; 225 succs { 540 226 }
;; 226 succs { 540 227 }
;; 227 succs { 540 228 }
;; 228 succs { 540 229 }
;; 229 succs { 540 230 }
;; 230 succs { 231 }
;; 231 succs { 233 }
;; 232 succs { 499 }
;; 233 succs { 499 }
;; 234 succs { 235 499 }
;; 235 succs { 607 236 }
;; 236 succs { 239 237 }
;; 237 succs { 607 238 }
;; 238 succs { 239 240 }
;; 239 succs { 241 }
;; 240 succs { 241 }
;; 241 succs { 242 243 }
;; 242 succs { 499 }
;; 243 succs { 607 244 }
;; 244 succs { 607 245 }
;; 245 succs { 246 273 }
;; 246 succs { 247 260 }
;; 247 succs { 248 498 }
;; 248 succs { 544 249 }
;; 249 succs { 250 251 }
;; 250 succs { 544 254 }
;; 251 succs { 544 252 }
;; 252 succs { 544 253 }
;; 253 succs { 544 254 }
;; 254 succs { 544 255 }
;; 255 succs { 544 256 }
;; 256 succs { 544 257 }
;; 257 succs { 544 258 }
;; 258 succs { 544 259 }
;; 259 succs { 498 }
;; 260 succs { 261 498 }
;; 261 succs { 547 262 }
;; 262 succs { 263 264 }
;; 263 succs { 547 267 }
;; 264 succs { 547 265 }
;; 265 succs { 547 266 }
;; 266 succs { 547 267 }
;; 267 succs { 547 268 }
;; 268 succs { 547 269 }
;; 269 succs { 547 270 }
;; 270 succs { 547 271 }
;; 271 succs { 547 272 }
;; 272 succs { 498 }
;; 273 succs { 274 287 }
;; 274 succs { 275 498 }
;; 275 succs { 550 276 }
;; 276 succs { 277 278 }
;; 277 succs { 550 281 }
;; 278 succs { 550 279 }
;; 279 succs { 550 280 }
;; 280 succs { 550 281 }
;; 281 succs { 550 282 }
;; 282 succs { 550 283 }
;; 283 succs { 550 284 }
;; 284 succs { 550 285 }
;; 285 succs { 550 286 }
;; 286 succs { 498 }
;; 287 succs { 288 323 }
;; 288 succs { 607 289 }
;; 289 succs { 290 301 }
;; 290 succs { 553 291 }
;; 291 succs { 292 293 }
;; 292 succs { 553 296 }
;; 293 succs { 553 294 }
;; 294 succs { 553 295 }
;; 295 succs { 553 296 }
;; 296 succs { 553 297 }
;; 297 succs { 553 298 }
;; 298 succs { 553 299 }
;; 299 succs { 553 300 }
;; 300 succs { 301 }
;; 301 succs { 302 498 }
;; 302 succs { 562 303 }
;; 303 succs { 304 322 }
;; 304 succs { 305 322 }
;; 305 succs { 306 322 }
;; 306 succs { 560 307 }
;; 307 succs { 308 322 }
;; 308 succs { 559 309 }
;; 309 succs { 556 310 }
;; 310 succs { 311 312 }
;; 311 succs { 559 316 }
;; 312 succs { 559 313 }
;; 313 succs { 557 314 }
;; 314 succs { 557 315 }
;; 315 succs { 559 316 }
;; 316 succs { 559 317 }
;; 317 succs { 559 318 }
;; 318 succs { 559 319 }
;; 319 succs { 559 320 }
;; 320 succs { 558 321 }
;; 321 succs { 322 }
;; 322 succs { 498 }
;; 323 succs { 324 439 }
;; 324 succs { 325 337 }
;; 325 succs { 326 498 }
;; 326 succs { 563 327 }
;; 327 succs { 328 329 }
;; 328 succs { 563 332 }
;; 329 succs { 563 330 }
;; 330 succs { 563 331 }
;; 331 succs { 563 332 }
;; 332 succs { 563 333 }
;; 333 succs { 563 334 }
;; 334 succs { 563 335 }
;; 335 succs { 563 336 }
;; 336 succs { 498 }
;; 337 succs { 338 359 }
;; 338 succs { 566 339 }
;; 339 succs { 340 341 }
;; 340 succs { 566 344 }
;; 341 succs { 566 342 }
;; 342 succs { 566 343 }
;; 343 succs { 566 344 }
;; 344 succs { 345 358 }
;; 345 succs { 346 347 }
;; 346 succs { 348 }
;; 347 succs { 348 }
;; 348 succs { 357 }
;; 349 succs { 350 353 }
;; 350 succs { 351 353 }
;; 351 succs { 566 352 }
;; 352 succs { 353 }
;; 353 succs { 354 355 }
;; 354 succs { 356 }
;; 355 succs { 356 }
;; 356 succs { 357 }
;; 357 succs { 349 358 }
;; 358 succs { 498 }
;; 359 succs { 360 371 }
;; 360 succs { 569 361 }
;; 361 succs { 362 363 }
;; 362 succs { 569 366 }
;; 363 succs { 569 364 }
;; 364 succs { 569 365 }
;; 365 succs { 569 366 }
;; 366 succs { 569 367 }
;; 367 succs { 569 368 }
;; 368 succs { 569 369 }
;; 369 succs { 569 370 }
;; 370 succs { 498 }
;; 371 succs { 372 498 }
;; 372 succs { 373 426 }
;; 373 succs { 374 393 }
;; 374 succs { 375 426 }
;; 375 succs { 376 426 }
;; 376 succs { 377 426 }
;; 377 succs { 590 378 }
;; 378 succs { 379 426 }
;; 379 succs { 575 380 }
;; 380 succs { 572 381 }
;; 381 succs { 382 383 }
;; 382 succs { 575 387 }
;; 383 succs { 575 384 }
;; 384 succs { 573 385 }
;; 385 succs { 573 386 }
;; 386 succs { 575 387 }
;; 387 succs { 575 388 }
;; 388 succs { 575 389 }
;; 389 succs { 575 390 }
;; 390 succs { 575 391 }
;; 391 succs { 574 392 }
;; 392 succs { 426 }
;; 393 succs { 394 404 }
;; 394 succs { 578 395 }
;; 395 succs { 396 397 }
;; 396 succs { 578 400 }
;; 397 succs { 578 398 }
;; 398 succs { 578 399 }
;; 399 succs { 578 400 }
;; 400 succs { 578 401 }
;; 401 succs { 578 402 }
;; 402 succs { 578 403 }
;; 403 succs { 426 }
;; 404 succs { 405 426 }
;; 405 succs { 406 426 }
;; 406 succs { 407 426 }
;; 407 succs { 408 426 }
;; 408 succs { 409 426 }
;; 409 succs { 410 426 }
;; 410 succs { 590 411 }
;; 411 succs { 412 426 }
;; 412 succs { 584 413 }
;; 413 succs { 581 414 }
;; 414 succs { 415 416 }
;; 415 succs { 584 420 }
;; 416 succs { 584 417 }
;; 417 succs { 582 418 }
;; 418 succs { 582 419 }
;; 419 succs { 584 420 }
;; 420 succs { 584 421 }
;; 421 succs { 584 422 }
;; 422 succs { 584 423 }
;; 423 succs { 584 424 }
;; 424 succs { 583 425 }
;; 425 succs { 426 }
;; 426 succs { 427 438 }
;; 427 succs { 428 438 }
;; 428 succs { 587 429 }
;; 429 succs { 430 431 }
;; 430 succs { 587 434 }
;; 431 succs { 587 432 }
;; 432 succs { 587 433 }
;; 433 succs { 587 434 }
;; 434 succs { 587 435 }
;; 435 succs { 587 436 }
;; 436 succs { 587 437 }
;; 437 succs { 438 }
;; 438 succs { 498 }
;; 439 succs { 440 485 }
;; 440 succs { 441 472 }
;; 441 succs { 442 461 }
;; 442 succs { 443 472 }
;; 443 succs { 444 472 }
;; 444 succs { 445 472 }
;; 445 succs { 603 446 }
;; 446 succs { 447 472 }
;; 447 succs { 594 448 }
;; 448 succs { 591 449 }
;; 449 succs { 450 451 }
;; 450 succs { 594 455 }
;; 451 succs { 594 452 }
;; 452 succs { 592 453 }
;; 453 succs { 592 454 }
;; 454 succs { 594 455 }
;; 455 succs { 594 456 }
;; 456 succs { 594 457 }
;; 457 succs { 594 458 }
;; 458 succs { 594 459 }
;; 459 succs { 593 460 }
;; 460 succs { 472 }
;; 461 succs { 462 472 }
;; 462 succs { 597 463 }
;; 463 succs { 464 465 }
;; 464 succs { 597 468 }
;; 465 succs { 597 466 }
;; 466 succs { 597 467 }
;; 467 succs { 597 468 }
;; 468 succs { 597 469 }
;; 469 succs { 597 470 }
;; 470 succs { 597 471 }
;; 471 succs { 472 }
;; 472 succs { 473 484 }
;; 473 succs { 474 484 }
;; 474 succs { 600 475 }
;; 475 succs { 476 477 }
;; 476 succs { 600 480 }
;; 477 succs { 600 478 }
;; 478 succs { 600 479 }
;; 479 succs { 600 480 }
;; 480 succs { 600 481 }
;; 481 succs { 600 482 }
;; 482 succs { 600 483 }
;; 483 succs { 484 }
;; 484 succs { 498 }
;; 485 succs { 486 498 }
;; 486 succs { 606 487 }
;; 487 succs { 604 488 }
;; 488 succs { 489 490 }
;; 489 succs { 604 493 }
;; 490 succs { 604 491 }
;; 491 succs { 604 492 }
;; 492 succs { 604 493 }
;; 493 succs { 604 494 }
;; 494 succs { 604 495 }
;; 495 succs { 604 496 }
;; 496 succs { 604 497 }
;; 497 succs { 498 }
;; 498 succs { 499 }
;; 499 succs { 1 }
;; 500 succs { 501 }
;; 501 succs { 502 }
;; 502 succs { 503 }
;; 503 succs { }
;; 504 succs { 507 }
;; 505 succs { 507 }
;; 506 succs { 507 }
;; 507 succs { 508 }
;; 508 succs { 509 }
;; 509 succs { 510 }
;; 510 succs { 511 }
;; 511 succs { 512 }
;; 512 succs { 513 }
;; 513 succs { }
;; 514 succs { 515 }
;; 515 succs { 516 }
;; 516 succs { 517 }
;; 517 succs { }
;; 518 succs { 519 }
;; 519 succs { 520 }
;; 520 succs { }
;; 521 succs { 522 }
;; 522 succs { 523 }
;; 523 succs { 524 }
;; 524 succs { }
;; 525 succs { 526 }
;; 526 succs { 527 }
;; 527 succs { }
;; 528 succs { 529 }
;; 529 succs { 530 }
;; 530 succs { }
;; 531 succs { 532 }
;; 532 succs { 533 }
;; 533 succs { 534 }
;; 534 succs { 543 }
;; 535 succs { 537 }
;; 536 succs { 537 }
;; 537 succs { 538 }
;; 538 succs { 539 }
;; 539 succs { 543 }
;; 540 succs { 541 }
;; 541 succs { 542 }
;; 542 succs { 543 }
;; 543 succs { }
;; 544 succs { 545 }
;; 545 succs { 546 }
;; 546 succs { 607 }
;; 547 succs { 548 }
;; 548 succs { 549 }
;; 549 succs { 607 }
;; 550 succs { 551 }
;; 551 succs { 552 }
;; 552 succs { 607 }
;; 553 succs { 554 }
;; 554 succs { 555 }
;; 555 succs { 607 }
;; 556 succs { 559 }
;; 557 succs { 559 }
;; 558 succs { 559 }
;; 559 succs { 560 }
;; 560 succs { 561 }
;; 561 succs { 562 }
;; 562 succs { 607 }
;; 563 succs { 564 }
;; 564 succs { 565 }
;; 565 succs { 607 }
;; 566 succs { 567 }
;; 567 succs { 568 }
;; 568 succs { 607 }
;; 569 succs { 570 }
;; 570 succs { 571 }
;; 571 succs { 607 }
;; 572 succs { 575 }
;; 573 succs { 575 }
;; 574 succs { 575 }
;; 575 succs { 576 }
;; 576 succs { 577 }
;; 577 succs { 590 }
;; 578 succs { 579 }
;; 579 succs { 580 }
;; 580 succs { 590 }
;; 581 succs { 584 }
;; 582 succs { 584 }
;; 583 succs { 584 }
;; 584 succs { 585 }
;; 585 succs { 586 }
;; 586 succs { 590 }
;; 587 succs { 588 }
;; 588 succs { 589 }
;; 589 succs { 590 }
;; 590 succs { 607 }
;; 591 succs { 594 }
;; 592 succs { 594 }
;; 593 succs { 594 }
;; 594 succs { 595 }
;; 595 succs { 596 }
;; 596 succs { 603 }
;; 597 succs { 598 }
;; 598 succs { 599 }
;; 599 succs { 603 }
;; 600 succs { 601 }
;; 601 succs { 602 }
;; 602 succs { 603 }
;; 603 succs { 607 }
;; 604 succs { 605 }
;; 605 succs { 606 }
;; 606 succs { 607 }
;; 607 succs { }
void collect_FunctionMapping_Assign (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb, struct ptb * ptable)
{
  struct function * D.250519;
  union tree_node * D.250518;
  struct function_assign_array * D.250517;
  struct function_assign_array * D.250516;
  struct function * D.250511;
  struct function_assign_array * D.250510;
  struct function_assign_array * D.250509;
  struct function * D.250505;
  struct function_assign_array * D.250504;
  struct function_assign_array * D.250503;
  union tree_node * D.250498;
  struct function * D.250497;
  union tree_node * D.250496;
  struct function_assign_array * D.250494;
  union tree_node * D.250493;
  struct function_assign_array * D.250491;
  union tree_node * D.250490;
  union tree_node * D.250489;
  struct function * D.250484;
  struct function_assign_array * D.250483;
  struct function_assign_array * D.250482;
  union tree_node * D.250477;
  struct function * D.250476;
  union tree_node * D.250475;
  struct function_assign_array * D.250473;
  union tree_node * D.250472;
  struct function_assign_array * D.250470;
  union tree_node * D.250469;
  union tree_node * D.250468;
  struct function * D.250464;
  struct function_assign_array * D.250463;
  struct function_assign_array * D.250462;
  union tree_node * D.250457;
  struct function * D.250456;
  union tree_node * D.250455;
  struct function_assign_array * D.250453;
  union tree_node * D.250452;
  struct function_assign_array * D.250450;
  union tree_node * D.250449;
  union tree_node * D.250448;
  struct function * D.250444;
  union tree_node * D.250443;
  struct function_assign_array * D.250442;
  struct function_assign_array * D.250441;
  struct function * D.250437;
  struct function_assign_array * D.250436;
  struct function_assign_array * D.250435;
  struct function * D.250431;
  union tree_node * D.250430;
  struct function_assign_array * D.250429;
  struct function_assign_array * D.250428;
  union tree_node * D.250422;
  struct function * D.250421;
  union tree_node * D.250420;
  struct function_assign_array * D.250418;
  union tree_node * D.250417;
  struct function_assign_array * D.250415;
  union tree_node * D.250414;
  union tree_node * D.250413;
  union tree_node * D.250412;
  struct function * D.250408;
  union tree_node * D.250407;
  struct function_assign_array * D.250406;
  struct function_assign_array * D.250405;
  union tree_node * D.250404;
  struct function * D.250400;
  union tree_node * D.250399;
  union tree_node * D.250398;
  struct function_assign_array * D.250397;
  struct function_assign_array * D.250396;
  struct function * D.250392;
  union tree_node * D.250391;
  union tree_node * D.250390;
  struct function_assign_array * D.250389;
  struct function_assign_array * D.250388;
  struct function * D.250384;
  union tree_node * D.250383;
  union tree_node * D.250382;
  struct function_assign_array * D.250381;
  struct function_assign_array * D.250380;
  union tree_node * D.250379;
  union tree_node * D.250378;
  union tree_node * D.250377;
  union tree_node * D.250376;
  struct function * D.250367;
  struct function_return_array * D.250366;
  struct function_return_array * D.250365;
  struct function * D.250364;
  struct function_return_array * D.250363;
  unsigned int D.250362;
  union tree_node * D.250361;
  union tree_node * D.250360;
  unsigned int D.250359;
  union tree_node * D.250358;
  union tree_node * D.250357;
  union tree_node * D.250356;
  const char * D.250355;
  union tree_node * D.250354;
  union tree_node * D.250353;
  union tree_node * D.250349;
  struct function * D.250348;
  union tree_node * D.250347;
  struct function_assign_array * D.250345;
  union tree_node * D.250344;
  struct function_assign_array * D.250342;
  union tree_node * D.250341;
  union tree_node * D.250340;
  unsigned int D.250339;
  unsigned int D.250338;
  struct function * D.250333;
  union tree_node * D.250332;
  struct function_assign_array * D.250331;
  struct function_assign_array * D.250330;
  union tree_node * D.250329;
  union tree_node * D.250328;
  union tree_node * D.250327;
  union tree_node * D.250326;
  union tree_node * D.250325;
  union tree_node * D.250321;
  struct function_pthread_exit_array * D.250320;
  struct function_pthread_exit_array * D.250319;
  struct function * D.250318;
  union tree_node * D.250314;
  struct function_pthread_detched_array * D.250313;
  struct function_pthread_detched_array * D.250312;
  struct function * D.250311;
  struct function * D.250306;
  union tree_node * D.250305;
  struct function_assign_array * D.250304;
  struct function_assign_array * D.250303;
  union tree_node * D.250302;
  union tree_node * D.250301;
  struct function * D.250300;
  union tree_node * D.250299;
  struct function_assign_array * D.250298;
  struct function_assign_array * D.250297;
  union tree_node * D.250296;
  struct function * D.250292;
  union tree_node * D.250291;
  struct function_return_array * D.250290;
  struct function_return_array * D.250289;
  struct function * D.250288;
  struct function * D.250283;
  union tree_node * D.250282;
  union tree_node * D.250273;
  struct function * D.250272;
  union tree_node * D.250271;
  struct function_assign_array * D.250269;
  union tree_node * D.250268;
  struct function_assign_array * D.250266;
  union tree_node * D.250265;
  union tree_node * D.250264;
  union tree_node * D.250263;
  union tree_node * D.250262;
  union tree_node * D.250261;
  union tree_node * D.250260;
  struct function_free_array * D.250259;
  struct function_free_array * D.250258;
  struct function * D.250257;
  union tree_node * D.250256;
  struct function * D.250251;
  union tree_node * D.250250;
  struct function_assign_array * D.250249;
  struct function_assign_array * D.250248;
  union tree_node * D.250247;
  union tree_node * D.250246;
  union tree_node * D.250245;
  const char * D.250244;
  union tree_node * D.250243;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * four;
  union tree_node * three;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * second;
  union tree_node * t2;
  struct ptb * table1;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * getFunctionAssignLHS;
  union tree_node * getFunctionAssignRHS;
  struct return_type ret_type;
  struct function_return_array fun_array;
  struct vector ret_type_array;
  union tree_node * getFucntionDecl;
  int i;
  size_t found;
  int i;
  int find;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getVARDECLtree;
  int i;
  union tree_node * getreturnFucntionDecl;
  union tree_node * checklhstree;
  union tree_node * getVARDECLtree;
  struct pthread_exit_type pthread_exit_type;
  struct vector pthread_exit_array;
  struct function_pthread_exit_array fun_array;
  union tree_node * getFucntionDecl;
  struct pthread_detched_type pthread_detched_type;
  struct vector pthread_detched_array;
  struct function_pthread_detched_array fun_array;
  union tree_node * getFucntionDecl;
  struct assign_type assign_type;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignRHS;
  struct return_type ret_type;
  union tree_node * getFucntionDecl;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_arg_tree;
  struct function_return_array fun_array;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct free_type free_type;
  struct function_free_array fun_array;
  struct vector free_type_array;
  union tree_node * getFucntionDecl;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * get_function_return_tree;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.896;
  bool retval.889;
  bool retval.882;
  union tree_node * const D.195719;
  union tree_node * const D.195717;
  union tree_node * const D.195716;
  bool retval.877;
  bool retval.876;
  bool retval.875;
  bool retval.864;
  union tree_node * const D.195706;
  union tree_node * const D.195704;
  union tree_node * const D.195703;
  bool retval.858;
  bool retval.857;
  bool retval.856;
  bool retval.848;
  union tree_node * const D.195694;
  union tree_node * const D.195692;
  union tree_node * const D.195691;
  bool retval.843;
  bool retval.842;
  bool retval.841;
  bool retval.831;
  union tree_node * iftmp.828;
  union tree_node * iftmp.823;
  bool retval.820;
  bool retval.815;
  union tree_node * const D.195669;
  union tree_node * const D.195667;
  union tree_node * const D.195666;
  bool retval.808;
  bool retval.807;
  bool retval.806;
  bool retval.801;
  bool retval.796;
  bool retval.790;
  bool retval.785;
  bool iftmp.781;
  bool retval.780;
  bool retval.779;
  bool retval.774;
  bool retval.772;
  bool retval.769;
  bool retval.766;
  bool retval.765;
  bool retval.764;
  bool retval.763;
  bool retval.762;
  bool retval.761;
  struct expanded_location D.195635;
  bool retval.759;
  struct expanded_location D.195632;
  bool retval.757;
  union tree_node * const D.195625;
  union tree_node * const D.195624;
  bool retval.752;
  bool retval.751;
  bool retval.750;
  bool retval.748;
  bool retval.743;
  bool retval.739;
  bool iftmp.736;
  bool retval.735;
  bool retval.731;
  bool retval.727;
  bool retval.723;
  bool retval.721;
  bool retval.717;
  bool retval.710;
  union tree_node * const D.195216;
  union tree_node * const D.195214;
  union tree_node * const D.195213;
  bool retval.705;
  bool retval.704;
  bool retval.703;
  bool retval.702;
  bool retval.698;
  bool retval.697;
  bool retval.693;
  bool retval.692;
  bool retval.691;

  <bb 2> :
  loc = gimple_location (gc);
  _1 = gimple_code (gc);
  retval.691 = _1 == 8;
  if (retval.691 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 234>; [INV]

  <bb 3> :
  D.250243 = gimple_call_fn (gc);
  _2 = D.250243;
  D.250244 = get_name (_2);
  name = D.250244;
  D.250245 = gimple_call_fn (gc);
  get_function_return_tree = D.250245;
  _3 = get_function_return_tree->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 499>; [INV]

  <bb 5> :
  if (name != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 6> :
  _4 = strcmp (name, "printf");
  if (_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 7> :
  _5 = strcmp (name, "free");
  if (_5 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _6 = strcmp (name, "xfree");
  if (_6 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _7 = strcmp (name, "realloc");
  if (_7 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 10> :
  D.250246 = gimple_call_arg (gc, 0);
  _8 = D.250246;
  _9 = _8->base.code;
  retval.692 = _9 == 131;
  if (retval.692 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 11> :
  D.250247 = gimple_call_arg (gc, 0);

  <bb 12> :
  _10 = D.250247;
  _11 = _10->exp.operands[0];
  second = _11;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.694_12 = function_assign_collect;
  D.250248 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.694_12, &second);

  <bb 13> :
  _13 = D.250248;
  retval.693 = _13 == 0B;
  if (retval.693 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 18>; [INV]

  <bb 15> :
  function_assign_collect.695_14 = function_assign_collect;
  D.250249 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.695_14, &second);

  <bb 16> :
  _15 = D.250249;
  function_assign_array::operator= (&assign_array, _15);

  <bb 17> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 18> :
  assign_type.stmt = gc;
  D.250250 = gimple_call_arg (gc, 0);

  <bb 19> :
  _16 = D.250250;
  assign_type.assign_tree = _16;
  D.250251 = cgraph_node::get_fun (node);

  <bb 20> :
  _17 = D.250251;
  _18 = _17->decl;
  assign_type.form_tree = _18;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 21> :
  function_assign_collect.696_19 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.696_19, &second, &assign_array);

  <bb 22> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  goto <bb 59>; [INV]

  <bb 23> :
  D.250256 = gimple_call_arg (gc, 0);
  _20 = D.250256;
  _21 = _20->base.code;
  retval.697 = _21 == 153;
  if (retval.697 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 24> :
  D.250257 = cgraph_node::get_fun (node);

  <bb 25> :
  _22 = D.250257;
  _23 = _22->decl;
  getFucntionDecl = _23;
  std::vector<free_type>::vector (&free_type_array);
  function_free_array::function_free_array (&fun_array);
  function_free_collect.699_24 = function_free_collect;
  D.250258 = hash_map<tree_node*, function_free_array>::get (function_free_collect.699_24, &getFucntionDecl);

  <bb 26> :
  _25 = D.250258;
  retval.698 = _25 == 0B;
  if (retval.698 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  std::vector<free_type>::operator= (&fun_array.free_type_array, &free_type_array);
  goto <bb 31>; [INV]

  <bb 28> :
  function_free_collect.700_26 = function_free_collect;
  D.250259 = hash_map<tree_node*, function_free_array>::get (function_free_collect.700_26, &getFucntionDecl);

  <bb 29> :
  _27 = D.250259;
  function_free_array::operator= (&fun_array, _27);

  <bb 30> :
  std::vector<free_type>::operator= (&free_type_array, &fun_array.free_type_array);

  <bb 31> :
  free_type::free_type (&free_type);
  free_type.stmt = gc;
  D.250260 = gimple_call_arg (gc, 0);

  <bb 32> :
  _28 = D.250260;
  free_type.free_tree = _28;
  std::vector<free_type>::push_back (&fun_array.free_type_array, &free_type);

  <bb 33> :
  function_free_collect.701_29 = function_free_collect;
  hash_map<tree_node*, function_free_array>::put (function_free_collect.701_29, &getFucntionDecl, &fun_array);

  <bb 34> :
  D.250261 = gimple_call_arg (gc, 0);

  <bb 35> :
  _30 = D.250261;
  _31 = _30->base.code;
  retval.702 = _31 == 153;
  if (retval.702 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 36> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  D.250262 = gimple_call_arg (gc, 0);

  <bb 37> :
  _32 = D.250262;
  def_stmt = _32->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 38>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 38> :
  retval.703 = is_gimple_assign (def_stmt);
  if (retval.703 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 39> :
  D.250263 = gimple_assign_rhs1 (def_stmt);

  <bb 40> :
  _33 = D.250263;
  _34 = _33->base.code;
  retval.704 = _34 == 36;
  if (retval.704 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 41> :
  D.250264 = gimple_assign_rhs1 (def_stmt);

  <bb 42> :
  _35 = D.250264;
  debug_tree (_35);

  <bb 43> :
  function_assign_collect.706_36 = function_assign_collect;
  D.250265 = gimple_assign_rhs1 (def_stmt);

  <bb 44> :
  _37 = D.250265;
  D.195213 = _37;
  D.250266 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.706_36, &D.195213);

  <bb 45> :
  _38 = D.250266;
  retval.705 = _38 == 0B;
  D.195213 = {CLOBBER};
  if (retval.705 != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 46> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 51>; [INV]

  <bb 47> :
  function_assign_collect.707_39 = function_assign_collect;
  D.250268 = gimple_assign_rhs1 (def_stmt);

  <bb 48> :
  _40 = D.250268;
  D.195214 = _40;
  D.250269 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.707_39, &D.195214);

  <bb 49> :
  _41 = D.250269;
  function_assign_array::operator= (&assign_array, _41);

  <bb 50> :
  D.195214 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 51> :
  assign_type.stmt = gc;
  D.250271 = gimple_call_arg (gc, 0);

  <bb 52> :
  _42 = D.250271;
  assign_type.assign_tree = _42;
  D.250272 = cgraph_node::get_fun (node);

  <bb 53> :
  _43 = D.250272;
  _44 = _43->decl;
  assign_type.form_tree = _44;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 54> :
  function_assign_collect.708_45 = function_assign_collect;
  D.250273 = gimple_assign_rhs1 (def_stmt);

  <bb 55> :
  _46 = D.250273;
  D.195216 = _46;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.708_45, &D.195216, &assign_array);

  <bb 56> :
  D.195216 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 57> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 58> :
  function_free_array::~function_free_array (&fun_array);
  std::vector<free_type>::~vector (&free_type_array);
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};

  <bb 59> :
  goto <bb 233>; [INV]

  <bb 60> :
  _47 = strcmp (name, "exit");
  if (_47 == 0)
    goto <bb 61>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 61> :
  function_return_array::function_return_array (&fun_array);
  D.250282 = gimple_call_arg (gc, 0);

  <bb 62> :
  get_function_arg_tree = D.250282;
  std::vector<return_type>::vector (&ret_type_array);
  if (get_function_return_tree != 0B)
    goto <bb 63>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 63> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 64> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 65> :
  function_return_collect.709_48 = function_return_collect;
  D.250283 = cgraph_node::get_fun (node);

  <bb 66> :
  _49 = D.250283;
  _50 = &_49->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.709_48, _50, &fun_array);

  <bb 67> :
  ret_type = {CLOBBER};

  <bb 68> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 69> :
  _51 = strcmp (name, "pthread_mutex_lock");
  if (_51 == 0)
    goto <bb 71>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 70> :
  _52 = strcmp (name, "pthread_mutex_unlock");
  if (_52 == 0)
    goto <bb 71>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 71> :
  function_return_array::function_return_array (&fun_array);
  std::vector<return_type>::vector (&ret_type_array);
  D.250288 = cgraph_node::get_fun (node);

  <bb 72> :
  _53 = D.250288;
  _54 = _53->decl;
  getFucntionDecl = _54;
  function_return_collect.711_55 = function_return_collect;
  D.250289 = hash_map<tree_node*, function_return_array>::get (function_return_collect.711_55, &getFucntionDecl);

  <bb 73> :
  _56 = D.250289;
  retval.710 = _56 == 0B;
  if (retval.710 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 77>; [INV]

  <bb 75> :
  function_return_collect.712_57 = function_return_collect;
  D.250290 = hash_map<tree_node*, function_return_array>::get (function_return_collect.712_57, &getFucntionDecl);

  <bb 76> :
  _58 = D.250290;
  function_return_array::operator= (&fun_array, _58);

  <bb 77> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  D.250291 = gimple_call_arg (gc, 0);

  <bb 78> :
  _59 = D.250291;
  ret_type.return_tree = _59;
  FUNCITON_THREAD.713_60 = FUNCITON_THREAD;
  FUNCITON_THREAD.714_61 = (int) FUNCITON_THREAD.713_60;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.714_61;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 79> :
  function_return_collect.715_62 = function_return_collect;
  D.250292 = cgraph_node::get_fun (node);

  <bb 80> :
  _63 = D.250292;
  _64 = &_63->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.715_62, _64, &fun_array);

  <bb 81> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 82> :
  _65 = strcmp (name, "pthread_create");
  if (_65 == 0)
    goto <bb 83>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 83> :
  D.250296 = gimple_call_arg (gc, 0);

  <bb 84> :
  _66 = D.250296;
  getFunctionAssignRHS = _66;
  getFunctionAssignRHS.716_67 = getFunctionAssignRHS;
  _68 = getFunctionAssignRHS.716_67->exp.operands[0];
  getFunctionAssignRHS = _68;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.718_69 = function_assign_collect;
  D.250297 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.718_69, &getFunctionAssignRHS);

  <bb 85> :
  _70 = D.250297;
  retval.717 = _70 == 0B;
  if (retval.717 != 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 90>; [INV]

  <bb 87> :
  function_assign_collect.719_71 = function_assign_collect;
  D.250298 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.719_71, &getFunctionAssignRHS);

  <bb 88> :
  _72 = D.250298;
  function_assign_array::operator= (&assign_array, _72);

  <bb 89> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 90> :
  assign_type.stmt = gc;
  D.250299 = gimple_call_arg (gc, 0);

  <bb 91> :
  _73 = D.250299;
  assign_type.assign_tree = _73;
  D.250300 = cgraph_node::get_fun (node);

  <bb 92> :
  _74 = D.250300;
  _75 = _74->decl;
  assign_type.form_tree = _75;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 93> :
  function_assign_collect.720_76 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.720_76, &getFunctionAssignRHS, &assign_array);

  <bb 94> :
  D.250301 = gimple_call_arg (gc, 3);

  <bb 95> :
  _77 = D.250301;
  retval.721 = _77 != 0B;
  if (retval.721 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 96> :
  D.250302 = gimple_call_arg (gc, 3);

  <bb 97> :
  _78 = D.250302;
  getFunctionAssignRHS = _78;
  getFunctionAssignRHS.722_79 = getFunctionAssignRHS;
  _80 = getFunctionAssignRHS.722_79->exp.operands[0];
  getFunctionAssignRHS = _80;
  function_assign_collect.724_81 = function_assign_collect;
  D.250303 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.724_81, &getFunctionAssignRHS);

  <bb 98> :
  _82 = D.250303;
  retval.723 = _82 == 0B;
  if (retval.723 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 103>; [INV]

  <bb 100> :
  function_assign_collect.725_83 = function_assign_collect;
  D.250304 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.725_83, &getFunctionAssignRHS);

  <bb 101> :
  _84 = D.250304;
  function_assign_array::operator= (&assign_array, _84);

  <bb 102> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 103> :
  assign_type.stmt = gc;
  D.250305 = gimple_call_arg (gc, 3);

  <bb 104> :
  _85 = D.250305;
  assign_type.assign_tree = _85;
  D.250306 = cgraph_node::get_fun (node);

  <bb 105> :
  _86 = D.250306;
  _87 = _86->decl;
  assign_type.form_tree = _87;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 106> :
  function_assign_collect.726_88 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.726_88, &getFunctionAssignRHS, &assign_array);

  <bb 107> :
  assign_type = {CLOBBER};

  <bb 108> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignRHS = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 109> :
  _89 = strcmp (name, "pthread_detach");
  if (_89 == 0)
    goto <bb 110>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 110> :
  D.250311 = cgraph_node::get_fun (node);

  <bb 111> :
  _90 = D.250311;
  _91 = _90->decl;
  getFucntionDecl = _91;
  function_pthread_detched_array::function_pthread_detched_array (&fun_array);
  std::vector<pthread_detched_type>::vector (&pthread_detched_array);
  function_pthread_detched_collect.728_92 = function_pthread_detched_collect;
  D.250312 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.728_92, &getFucntionDecl);

  <bb 112> :
  _93 = D.250312;
  retval.727 = _93 == 0B;
  if (retval.727 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 113> :
  std::vector<pthread_detched_type>::operator= (&fun_array.pthread_detched_array, &pthread_detched_array);
  goto <bb 117>; [INV]

  <bb 114> :
  function_pthread_detched_collect.729_94 = function_pthread_detched_collect;
  D.250313 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.729_94, &getFucntionDecl);

  <bb 115> :
  _95 = D.250313;
  function_pthread_detched_array::operator= (&fun_array, _95);

  <bb 116> :
  std::vector<pthread_detched_type>::operator= (&pthread_detched_array, &fun_array.pthread_detched_array);

  <bb 117> :
  pthread_detched_type.stmt = gc;
  D.250314 = gimple_call_arg (gc, 0);

  <bb 118> :
  _96 = D.250314;
  pthread_detched_type.pthread_detched_tree = _96;
  std::vector<pthread_detched_type>::push_back (&fun_array.pthread_detched_array, &pthread_detched_type);

  <bb 119> :
  function_pthread_detched_collect.730_97 = function_pthread_detched_collect;
  hash_map<tree_node*, function_pthread_detched_array>::put (function_pthread_detched_collect.730_97, &getFucntionDecl, &fun_array);

  <bb 120> :
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 121> :
  _98 = strcmp (name, "pthread_exit");
  if (_98 == 0)
    goto <bb 122>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 122> :
  D.250318 = cgraph_node::get_fun (node);

  <bb 123> :
  _99 = D.250318;
  _100 = _99->decl;
  getFucntionDecl = _100;
  function_pthread_exit_array::function_pthread_exit_array (&fun_array);
  std::vector<pthread_exit_type>::vector (&pthread_exit_array);
  function_pthread_exit_collect.732_101 = function_pthread_exit_collect;
  D.250319 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.732_101, &getFucntionDecl);

  <bb 124> :
  _102 = D.250319;
  retval.731 = _102 == 0B;
  if (retval.731 != 0)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  std::vector<pthread_exit_type>::operator= (&fun_array.pthread_exit_array, &pthread_exit_array);
  goto <bb 129>; [INV]

  <bb 126> :
  function_pthread_exit_collect.733_103 = function_pthread_exit_collect;
  D.250320 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.733_103, &getFucntionDecl);

  <bb 127> :
  _104 = D.250320;
  function_pthread_exit_array::operator= (&fun_array, _104);

  <bb 128> :
  std::vector<pthread_exit_type>::operator= (&pthread_exit_array, &fun_array.pthread_exit_array);

  <bb 129> :
  pthread_exit_type.stmt = gc;
  D.250321 = gimple_call_arg (gc, 0);

  <bb 130> :
  _105 = D.250321;
  pthread_exit_type.pthread_exit_tree = _105;
  std::vector<pthread_exit_type>::push_back (&fun_array.pthread_exit_array, &pthread_exit_type);

  <bb 131> :
  function_pthread_exit_collect.734_106 = function_pthread_exit_collect;
  hash_map<tree_node*, function_pthread_exit_array>::put (function_pthread_exit_collect.734_106, &getFucntionDecl, &fun_array);

  <bb 132> :
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 133> :
  debug_gimple_stmt (gc);

  <bb 134> :
  i = 0;
  goto <bb 160>; [INV]

  <bb 135> :
  i.737_107 = (unsigned int) i;
  D.250325 = gimple_call_arg (gc, i.737_107);

  <bb 136> :
  _108 = D.250325;
  _109 = _108->base.code;
  if (_109 == 131)
    goto <bb 139>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 137> :
  i.738_110 = (unsigned int) i;
  D.250326 = gimple_call_arg (gc, i.738_110);

  <bb 138> :
  _111 = D.250326;
  _112 = _111->base.code;
  if (_112 == 36)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
  iftmp.736 = 1;
  goto <bb 141>; [INV]

  <bb 140> :
  iftmp.736 = 0;

  <bb 141> :
  retval.735 = iftmp.736;
  if (retval.735 != 0)
    goto <bb 142>; [INV]
  else
    goto <bb 159>; [INV]

  <bb 142> :
  i.740_113 = (unsigned int) i;
  D.250327 = gimple_call_arg (gc, i.740_113);

  <bb 143> :
  _114 = D.250327;
  _115 = _114->base.code;
  retval.739 = _115 == 131;
  if (retval.739 != 0)
    goto <bb 144>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 144> :
  i.741_116 = (unsigned int) i;
  D.250328 = gimple_call_arg (gc, i.741_116);

  <bb 145> :
  _117 = D.250328;
  _118 = _117->exp.operands[0];
  getVARDECLtree = _118;
  goto <bb 148>; [INV]

  <bb 146> :
  i.742_119 = (unsigned int) i;
  D.250329 = gimple_call_arg (gc, i.742_119);

  <bb 147> :
  _120 = D.250329;
  getVARDECLtree = _120;

  <bb 148> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.744_121 = function_assign_collect;
  D.250330 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.744_121, &getVARDECLtree);

  <bb 149> :
  _122 = D.250330;
  retval.743 = _122 == 0B;
  if (retval.743 != 0)
    goto <bb 150>; [INV]
  else
    goto <bb 151>; [INV]

  <bb 150> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 154>; [INV]

  <bb 151> :
  function_assign_collect.745_123 = function_assign_collect;
  D.250331 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.745_123, &getVARDECLtree);

  <bb 152> :
  _124 = D.250331;
  function_assign_array::operator= (&assign_array, _124);

  <bb 153> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 154> :
  assign_type.stmt = gc;
  i.746_125 = (unsigned int) i;
  D.250332 = gimple_call_arg (gc, i.746_125);

  <bb 155> :
  _126 = D.250332;
  assign_type.assign_tree = _126;
  D.250333 = cgraph_node::get_fun (node);

  <bb 156> :
  _127 = D.250333;
  _128 = _127->decl;
  assign_type.form_tree = _128;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 157> :
  function_assign_collect.747_129 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.747_129, &getVARDECLtree, &assign_array);

  <bb 158> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 159> :
  getVARDECLtree = {CLOBBER};
  i = i + 1;

  <bb 160> :
  D.250338 = gimple_call_num_args (gc);

  <bb 161> :
  _130 = D.250338;
  i.749_131 = (unsigned int) i;
  retval.748 = _130 > i.749_131;
  if (retval.748 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 162> :
  D.250339 = gimple_call_num_args (gc);

  <bb 163> :
  _132 = D.250339;
  retval.750 = _132 != 0;
  if (retval.750 != 0)
    goto <bb 164>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 164> :
  D.250340 = gimple_call_arg (gc, 0);

  <bb 165> :
  _133 = D.250340;
  _134 = _133->base.code;
  retval.751 = _134 == 131;
  if (retval.751 != 0)
    goto <bb 166>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 166> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.753_135 = function_assign_collect;
  D.250341 = gimple_call_fn (gc);

  <bb 167> :
  _136 = D.250341;
  D.195624 = _136;
  D.250342 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.753_135, &D.195624);

  <bb 168> :
  _137 = D.250342;
  retval.752 = _137 == 0B;
  D.195624 = {CLOBBER};
  if (retval.752 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 174>; [INV]

  <bb 170> :
  function_assign_collect.754_138 = function_assign_collect;
  D.250344 = gimple_call_fn (gc);

  <bb 171> :
  _139 = D.250344;
  D.195625 = _139;
  D.250345 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.754_138, &D.195625);

  <bb 172> :
  _140 = D.250345;
  function_assign_array::operator= (&assign_array, _140);

  <bb 173> :
  D.195625 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 174> :
  assign_type.stmt = gc;
  D.250347 = gimple_call_arg (gc, 0);

  <bb 175> :
  _141 = D.250347;
  assign_type.assign_tree = _141;
  D.250348 = cgraph_node::get_fun (node);

  <bb 176> :
  _142 = D.250348;
  _143 = _142->decl;
  assign_type.form_tree = _143;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 177> :
  D.250349 = gimple_call_arg (gc, 0);

  <bb 178> :
  _144 = D.250349;
  _145 = _144->exp.operands[0];
  second = _145;
  second.755_146 = second;
  _147 = second.755_146->base.code;
  if (_147 == 36)
    goto <bb 179>; [INV]
  else
    goto <bb 180>; [INV]

  <bb 179> :
  function_assign_collect.756_148 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.756_148, &second, &assign_array);

  <bb 180> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};

  <bb 181> :
  D.250353 = gimple_call_lhs (gc);

  <bb 182> :
  checklhstree = D.250353;
  _149 = gimple_code (gc);
  retval.757 = _149 == 8;
  if (retval.757 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 183> :
  vscode_extensionmod.758_150 = vscode_extensionmod;
  if (vscode_extensionmod.758_150 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 184> :
  find = 0;
  i = 0;
  goto <bb 193>; [INV]

  <bb 185> :
  _151 = (long unsigned int) i;
  _152 = std::vector<breakpoint>::operator[] (&vbreakpoint, _151);
  _153 = &_152->name;
  D.195632 = expand_location (loc); [return slot optimization]

  <bb 186> :
  _154 = D.195632.file;
  found = std::__cxx11::basic_string<char>::find (_153, _154, 0);
  D.195632 = {CLOBBER};
  if (found != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 187> :
  _155 = (long unsigned int) i;
  _156 = std::vector<breakpoint>::operator[] (&vbreakpoint, _155);
  _157 = _156->line;
  D.195635 = expand_location (loc); [return slot optimization]

  <bb 188> :
  _158 = D.195635.line;
  retval.759 = _157 == _158;
  D.195635 = {CLOBBER};
  if (retval.759 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 189> :
  debug_gimple_stmt (gc);

  <bb 190> :
  _159 = (long unsigned int) i;
  _160 = std::vector<breakpoint>::operator[] (&vbreakpoint, _159);
  _161 = _160->line;
  _162 = (long unsigned int) i;
  _163 = std::vector<breakpoint>::operator[] (&vbreakpoint, _162);
  _164 = &_163->name;
  _165 = std::__cxx11::basic_string<char>::c_str (_164);
  stderr.760_166 = stderr;
  fprintf (stderr.760_166, "set breakpoint %s %d\n", _165, _161);

  <bb 191> :
  find = 1;

  <bb 192> :
  i = i + 1;

  <bb 193> :
  _167 = (long unsigned int) i;
  _168 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.761 = _167 < _168;
  if (retval.761 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 194> :
  if (find == 0)
    goto <bb 195>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 195> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 232>; [INV]

  <bb 196> :
  D.250354 = gimple_call_fn (gc);

  <bb 197> :
  _169 = D.250354;
  D.250355 = get_name (_169);

  <bb 198> :
  name = D.250355;
  if (name != 0B)
    goto <bb 199>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 199> :
  _170 = gimple_code (gc);
  retval.762 = _170 == 8;
  if (retval.762 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 200> :
  D.250356 = gimple_call_lhs (gc);

  <bb 201> :
  _171 = D.250356;
  retval.763 = _171 != 0B;
  if (retval.763 != 0)
    goto <bb 202>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 202> :
  D.250357 = gimple_call_lhs (gc);

  <bb 203> :
  _172 = D.250357;
  _173 = _172->base.code;
  retval.764 = _173 == 153;
  if (retval.764 != 0)
    goto <bb 204>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 204> :
  D.250358 = gimple_call_lhs (gc);

  <bb 205> :
  _174 = D.250358;
  set_ptb (bb, ptable, _174, loc, 0, gc, node);

  <bb 206> :
  D.250359 = gimple_call_num_args (gc);

  <bb 207> :
  _175 = D.250359;
  retval.765 = _175 != 0;
  if (retval.765 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 208> :
  i = 0;
  goto <bb 214>; [INV]

  <bb 209> :
  i.767_176 = (unsigned int) i;
  D.250360 = gimple_call_arg (gc, i.767_176);

  <bb 210> :
  _177 = D.250360;
  _178 = _177->base.code;
  retval.766 = _178 == 153;
  if (retval.766 != 0)
    goto <bb 211>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 211> :
  i.768_179 = (unsigned int) i;
  D.250361 = gimple_call_arg (gc, i.768_179);

  <bb 212> :
  _180 = D.250361;
  set_ptb (bb, ptable, _180, loc, 0, gc, node);

  <bb 213> :
  i = i + 1;

  <bb 214> :
  D.250362 = gimple_call_num_args (gc);

  <bb 215> :
  _181 = D.250362;
  i.770_182 = (unsigned int) i;
  retval.769 = _181 > i.770_182;
  if (retval.769 != 0)
    goto <bb 209>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 216> :
  _183 = get_function_return_tree->exp.operands[0];
  getreturnFucntionDecl = _183;
  getreturnFucntionDecl.771_184 = getreturnFucntionDecl;
  if (getreturnFucntionDecl.771_184 != 0B)
    goto <bb 217>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 217> :
  function_return_collect.773_185 = function_return_collect;
  D.250363 = hash_map<tree_node*, function_return_array>::get (function_return_collect.773_185, &getreturnFucntionDecl);

  <bb 218> :
  _186 = D.250363;
  retval.772 = _186 == 0B;
  if (retval.772 != 0)
    goto <bb 219>; [INV]
  else
    goto <bb 220>; [INV]

  <bb 219> :
  // predicted unlikely by early return (on trees) predictor.
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 232>; [INV]

  <bb 220> :
  D.250364 = cgraph_node::get_fun (node);

  <bb 221> :
  _187 = D.250364;
  _188 = _187->decl;
  getFucntionDecl = _188;
  std::vector<return_type>::vector (&ret_type_array);
  function_return_array::function_return_array (&fun_array);
  function_return_collect.775_189 = function_return_collect;
  D.250365 = hash_map<tree_node*, function_return_array>::get (function_return_collect.775_189, &getFucntionDecl);

  <bb 222> :
  _190 = D.250365;
  retval.774 = _190 == 0B;
  if (retval.774 != 0)
    goto <bb 223>; [INV]
  else
    goto <bb 224>; [INV]

  <bb 223> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 227>; [INV]

  <bb 224> :
  function_return_collect.776_191 = function_return_collect;
  D.250366 = hash_map<tree_node*, function_return_array>::get (function_return_collect.776_191, &getFucntionDecl);

  <bb 225> :
  _192 = D.250366;
  function_return_array::operator= (&fun_array, _192);

  <bb 226> :
  std::vector<return_type>::operator= (&ret_type_array, &fun_array.return_type_array);

  <bb 227> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  getreturnFucntionDecl.777_193 = getreturnFucntionDecl;
  ret_type.return_tree = getreturnFucntionDecl.777_193;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 228> :
  function_return_collect.778_194 = function_return_collect;
  D.250367 = cgraph_node::get_fun (node);

  <bb 229> :
  _195 = D.250367;
  _196 = &_195->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.778_194, _196, &fun_array);

  <bb 230> :
  function_return_array::~function_return_array (&fun_array);
  std::vector<return_type>::~vector (&ret_type_array);
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};

  <bb 231> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 232> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 499>; [INV]

  <bb 233> :
  goto <bb 499>; [INV]

  <bb 234> :
  _197 = gimple_code (gc);
  retval.779 = _197 == 6;
  if (retval.779 != 0)
    goto <bb 235>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 235> :
  D.250376 = gimple_assign_lhs (gc);

  <bb 236> :
  _198 = D.250376;
  if (_198 == 0B)
    goto <bb 239>; [INV]
  else
    goto <bb 237>; [INV]

  <bb 237> :
  D.250377 = gimple_assign_rhs1 (gc);

  <bb 238> :
  _199 = D.250377;
  if (_199 == 0B)
    goto <bb 239>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 239> :
  iftmp.781 = 1;
  goto <bb 241>; [INV]

  <bb 240> :
  iftmp.781 = 0;

  <bb 241> :
  retval.780 = iftmp.781;
  if (retval.780 != 0)
    goto <bb 242>; [INV]
  else
    goto <bb 243>; [INV]

  <bb 242> :
  // predicted unlikely by early return (on trees) predictor.
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  goto <bb 499>; [INV]

  <bb 243> :
  D.250378 = gimple_assign_rhs1 (gc);

  <bb 244> :
  _200 = D.250378;
  getFunctionAssignRHS = _200;
  D.250379 = gimple_assign_lhs (gc);

  <bb 245> :
  _201 = D.250379;
  getFunctionAssignLHS = _201;
  getFunctionAssignLHS.782_202 = getFunctionAssignLHS;
  _203 = getFunctionAssignLHS.782_202->base.code;
  if (_203 == 36)
    goto <bb 246>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 246> :
  getFunctionAssignRHS.783_204 = getFunctionAssignRHS;
  _205 = getFunctionAssignRHS.783_204->base.code;
  if (_205 == 131)
    goto <bb 247>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 247> :
  getFunctionAssignRHS.784_206 = getFunctionAssignRHS;
  second = getFunctionAssignRHS.784_206->exp.operands[0];
  _207 = second->base.code;
  if (_207 == 36)
    goto <bb 248>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 248> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.786_208 = function_assign_collect;
  D.250380 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.786_208, &getFunctionAssignLHS);

  <bb 249> :
  _209 = D.250380;
  retval.785 = _209 == 0B;
  if (retval.785 != 0)
    goto <bb 250>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 250> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 254>; [INV]

  <bb 251> :
  function_assign_collect.787_210 = function_assign_collect;
  D.250381 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.787_210, &getFunctionAssignLHS);

  <bb 252> :
  _211 = D.250381;
  function_assign_array::operator= (&assign_array, _211);

  <bb 253> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 254> :
  D.250382 = gimple_call_lhs (gc);

  <bb 255> :
  function_return_lhstree = D.250382;
  assign_type.stmt = gc;
  D.250383 = gimple_assign_lhs (gc);

  <bb 256> :
  _212 = D.250383;
  assign_type.assign_tree = _212;
  D.250384 = cgraph_node::get_fun (node);

  <bb 257> :
  _213 = D.250384;
  _214 = _213->decl;
  assign_type.form_tree = _214;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 258> :
  function_assign_collect.788_215 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.788_215, &getFunctionAssignLHS, &assign_array);

  <bb 259> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 260> :
  getFunctionAssignRHS.789_216 = getFunctionAssignRHS;
  _217 = getFunctionAssignRHS.789_216->base.code;
  if (_217 == 153)
    goto <bb 261>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 261> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.791_218 = function_assign_collect;
  D.250388 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.791_218, &getFunctionAssignLHS);

  <bb 262> :
  _219 = D.250388;
  retval.790 = _219 == 0B;
  if (retval.790 != 0)
    goto <bb 263>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 263> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 267>; [INV]

  <bb 264> :
  function_assign_collect.792_220 = function_assign_collect;
  D.250389 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.792_220, &getFunctionAssignLHS);

  <bb 265> :
  _221 = D.250389;
  function_assign_array::operator= (&assign_array, _221);

  <bb 266> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 267> :
  D.250390 = gimple_assign_rhs1 (gc);

  <bb 268> :
  function_return_lhstree = D.250390;
  assign_type.stmt = gc;
  D.250391 = gimple_assign_rhs1 (gc);

  <bb 269> :
  _222 = D.250391;
  assign_type.assign_tree = _222;
  D.250392 = cgraph_node::get_fun (node);

  <bb 270> :
  _223 = D.250392;
  _224 = _223->decl;
  assign_type.form_tree = _224;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 271> :
  function_assign_collect.793_225 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.793_225, &getFunctionAssignLHS, &assign_array);

  <bb 272> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 273> :
  getFunctionAssignRHS.794_226 = getFunctionAssignRHS;
  _227 = getFunctionAssignRHS.794_226->base.code;
  if (_227 == 36)
    goto <bb 274>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 274> :
  getFunctionAssignLHS.795_228 = getFunctionAssignLHS;
  _229 = getFunctionAssignLHS.795_228->base.code;
  if (_229 == 153)
    goto <bb 275>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 275> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.797_230 = function_assign_collect;
  D.250396 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.797_230, &getFunctionAssignRHS);

  <bb 276> :
  _231 = D.250396;
  retval.796 = _231 == 0B;
  if (retval.796 != 0)
    goto <bb 277>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 277> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 281>; [INV]

  <bb 278> :
  function_assign_collect.798_232 = function_assign_collect;
  D.250397 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.798_232, &getFunctionAssignRHS);

  <bb 279> :
  _233 = D.250397;
  function_assign_array::operator= (&assign_array, _233);

  <bb 280> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 281> :
  D.250398 = gimple_assign_lhs (gc);

  <bb 282> :
  function_return_lhstree = D.250398;
  assign_type.stmt = gc;
  D.250399 = gimple_assign_lhs (gc);

  <bb 283> :
  _234 = D.250399;
  assign_type.assign_tree = _234;
  D.250400 = cgraph_node::get_fun (node);

  <bb 284> :
  _235 = D.250400;
  _236 = _235->decl;
  assign_type.form_tree = _236;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 285> :
  function_assign_collect.799_237 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.799_237, &getFunctionAssignRHS, &assign_array);

  <bb 286> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 287> :
  getFunctionAssignLHS.800_238 = getFunctionAssignLHS;
  _239 = getFunctionAssignLHS.800_238->base.code;
  if (_239 == 165)
    goto <bb 288>; [INV]
  else
    goto <bb 323>; [INV]

  <bb 288> :
  D.250404 = gimple_assign_lhs (gc);

  <bb 289> :
  _240 = D.250404;
  first = _240->exp.operands[0];
  _241 = first->base.code;
  if (_241 == 131)
    goto <bb 290>; [INV]
  else
    goto <bb 301>; [INV]

  <bb 290> :
  _242 = first->exp.operands[0];
  second = _242;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.802_243 = function_assign_collect;
  D.250405 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.802_243, &second);

  <bb 291> :
  _244 = D.250405;
  retval.801 = _244 == 0B;
  if (retval.801 != 0)
    goto <bb 292>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 292> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 296>; [INV]

  <bb 293> :
  function_assign_collect.803_245 = function_assign_collect;
  D.250406 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.803_245, &second);

  <bb 294> :
  _246 = D.250406;
  function_assign_array::operator= (&assign_array, _246);

  <bb 295> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 296> :
  assign_type.stmt = gc;
  D.250407 = gimple_assign_lhs (gc);

  <bb 297> :
  _247 = D.250407;
  assign_type.assign_tree = _247;
  D.250408 = cgraph_node::get_fun (node);

  <bb 298> :
  _248 = D.250408;
  _249 = _248->decl;
  assign_type.form_tree = _249;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 299> :
  function_assign_collect.804_250 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.804_250, &second, &assign_array);

  <bb 300> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 301> :
  getFunctionAssignRHS.805_251 = getFunctionAssignRHS;
  _252 = getFunctionAssignRHS.805_251->base.code;
  if (_252 == 26)
    goto <bb 302>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 302> :
  second = 0B;
  D.250412 = gimple_assign_lhs (gc);

  <bb 303> :
  _253 = D.250412;
  second = _253->exp.operands[0];
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  _254 = second->base.code;
  if (_254 == 153)
    goto <bb 304>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 304> :
  def_stmt = second->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 305>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 305> :
  retval.806 = is_gimple_assign (def_stmt);
  if (retval.806 != 0)
    goto <bb 306>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 306> :
  D.250413 = gimple_assign_rhs1 (def_stmt);

  <bb 307> :
  _255 = D.250413;
  _256 = _255->base.code;
  retval.807 = _256 == 36;
  if (retval.807 != 0)
    goto <bb 308>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 308> :
  function_assign_collect.809_257 = function_assign_collect;
  D.250414 = gimple_assign_rhs1 (def_stmt);

  <bb 309> :
  _258 = D.250414;
  D.195666 = _258;
  D.250415 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.809_257, &D.195666);

  <bb 310> :
  _259 = D.250415;
  retval.808 = _259 == 0B;
  D.195666 = {CLOBBER};
  if (retval.808 != 0)
    goto <bb 311>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 311> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 316>; [INV]

  <bb 312> :
  function_assign_collect.810_260 = function_assign_collect;
  D.250417 = gimple_assign_rhs1 (def_stmt);

  <bb 313> :
  _261 = D.250417;
  D.195667 = _261;
  D.250418 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.810_260, &D.195667);

  <bb 314> :
  _262 = D.250418;
  function_assign_array::operator= (&assign_array, _262);

  <bb 315> :
  D.195667 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 316> :
  assign_type.stmt = gc;
  D.250420 = gimple_assign_lhs (gc);

  <bb 317> :
  _263 = D.250420;
  assign_type.assign_tree = _263;
  D.250421 = cgraph_node::get_fun (node);

  <bb 318> :
  _264 = D.250421;
  _265 = _264->decl;
  assign_type.form_tree = _265;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 319> :
  function_assign_collect.811_266 = function_assign_collect;
  D.250422 = gimple_assign_rhs1 (def_stmt);

  <bb 320> :
  _267 = D.250422;
  D.195669 = _267;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.811_266, &D.195669, &assign_array);

  <bb 321> :
  D.195669 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 322> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 323> :
  getFunctionAssignLHS.812_268 = getFunctionAssignLHS;
  _269 = getFunctionAssignLHS.812_268->base.code;
  if (_269 == 153)
    goto <bb 324>; [INV]
  else
    goto <bb 439>; [INV]

  <bb 324> :
  getFunctionAssignRHS.813_270 = getFunctionAssignRHS;
  _271 = getFunctionAssignRHS.813_270->base.code;
  if (_271 == 165)
    goto <bb 325>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 325> :
  getFunctionAssignRHS.814_272 = getFunctionAssignRHS;
  first = getFunctionAssignRHS.814_272->exp.operands[0];
  _273 = first->base.code;
  if (_273 == 131)
    goto <bb 326>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 326> :
  _274 = first->exp.operands[0];
  second = _274;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.816_275 = function_assign_collect;
  D.250428 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.816_275, &second);

  <bb 327> :
  _276 = D.250428;
  retval.815 = _276 == 0B;
  if (retval.815 != 0)
    goto <bb 328>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 328> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 332>; [INV]

  <bb 329> :
  function_assign_collect.817_277 = function_assign_collect;
  D.250429 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.817_277, &second);

  <bb 330> :
  _278 = D.250429;
  function_assign_array::operator= (&assign_array, _278);

  <bb 331> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 332> :
  assign_type.stmt = gc;
  D.250430 = gimple_assign_lhs (gc);

  <bb 333> :
  _279 = D.250430;
  assign_type.assign_tree = _279;
  D.250431 = cgraph_node::get_fun (node);

  <bb 334> :
  _280 = D.250431;
  _281 = _280->decl;
  assign_type.form_tree = _281;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 335> :
  function_assign_collect.818_282 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.818_282, &second, &assign_array);

  <bb 336> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 337> :
  getFunctionAssignRHS.819_283 = getFunctionAssignRHS;
  _284 = getFunctionAssignRHS.819_283->base.code;
  if (_284 == 36)
    goto <bb 338>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 338> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.821_285 = function_assign_collect;
  D.250435 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.821_285, &getFunctionAssignRHS);

  <bb 339> :
  _286 = D.250435;
  retval.820 = _286 == 0B;
  if (retval.820 != 0)
    goto <bb 340>; [INV]
  else
    goto <bb 341>; [INV]

  <bb 340> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 344>; [INV]

  <bb 341> :
  function_assign_collect.822_287 = function_assign_collect;
  D.250436 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.822_287, &getFunctionAssignRHS);

  <bb 342> :
  _288 = D.250436;
  function_assign_array::operator= (&assign_array, _288);

  <bb 343> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 344> :
  table1 = ptable;
  t2 = 0B;
  _289 = ptable->size;
  if (_289 >= 0)
    goto <bb 345>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 345> :
  if (table1 != 0B)
    goto <bb 346>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 346> :
  iftmp.823 = table1->target;
  goto <bb 348>; [INV]

  <bb 347> :
  iftmp.823 = 0B;

  <bb 348> :
  t2 = iftmp.823;
  goto <bb 357>; [INV]

  <bb 349> :
  _290 = table1->target;
  _291 = _290->base.code;
  if (_291 == 131)
    goto <bb 350>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 350> :
  _292 = table1->target;
  second = _292->exp.operands[0];
  getFunctionAssignRHS.824_293 = getFunctionAssignRHS;
  if (second == getFunctionAssignRHS.824_293)
    goto <bb 351>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 351> :
  _294 = table1->target;
  table1->swap_target = _294;
  _295 = table1->last_stmt;
  table1->swap_stmt = _295;
  getFunctionAssignLHS.825_296 = getFunctionAssignLHS;
  table1->target = getFunctionAssignLHS.825_296;
  table1->last_stmt = gc;
  FUNCITON_THREAD.826_297 = FUNCITON_THREAD;
  FUNCITON_THREAD.827_298 = (int) FUNCITON_THREAD.826_297;
  table1->swap_type = FUNCITON_THREAD.827_298;
  _299 = table1->last_stmt;
  assign_type.stmt = _299;
  _300 = table1->target;
  assign_type.assign_tree = _300;
  D.250437 = cgraph_node::get_fun (node);

  <bb 352> :
  _301 = D.250437;
  _302 = _301->decl;
  assign_type.form_tree = _302;

  <bb 353> :
  table1 = table1->next;
  if (table1 != 0B)
    goto <bb 354>; [INV]
  else
    goto <bb 355>; [INV]

  <bb 354> :
  iftmp.828 = table1->target;
  goto <bb 356>; [INV]

  <bb 355> :
  iftmp.828 = 0B;

  <bb 356> :
  t2 = iftmp.828;

  <bb 357> :
  if (t2 != 0B)
    goto <bb 349>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 358> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 359> :
  getFunctionAssignRHS.829_303 = getFunctionAssignRHS;
  _304 = getFunctionAssignRHS.829_303->base.code;
  if (_304 == 49)
    goto <bb 360>; [INV]
  else
    goto <bb 371>; [INV]

  <bb 360> :
  getFunctionAssignRHS.830_305 = getFunctionAssignRHS;
  _306 = getFunctionAssignRHS.830_305->exp.operands[0];
  second = _306;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.832_307 = function_assign_collect;
  D.250441 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.832_307, &second);

  <bb 361> :
  _308 = D.250441;
  retval.831 = _308 == 0B;
  if (retval.831 != 0)
    goto <bb 362>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 362> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 366>; [INV]

  <bb 363> :
  function_assign_collect.833_309 = function_assign_collect;
  D.250442 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.833_309, &second);

  <bb 364> :
  _310 = D.250442;
  function_assign_array::operator= (&assign_array, _310);

  <bb 365> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 366> :
  assign_type.stmt = gc;
  D.250443 = gimple_assign_lhs (gc);

  <bb 367> :
  _311 = D.250443;
  assign_type.assign_tree = _311;
  D.250444 = cgraph_node::get_fun (node);

  <bb 368> :
  _312 = D.250444;
  _313 = _312->decl;
  assign_type.form_tree = _313;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 369> :
  function_assign_collect.834_314 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.834_314, &second, &assign_array);

  <bb 370> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 371> :
  getFunctionAssignRHS.835_315 = getFunctionAssignRHS;
  _316 = getFunctionAssignRHS.835_315->base.code;
  if (_316 == 47)
    goto <bb 372>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 372> :
  getFunctionAssignRHS.836_317 = getFunctionAssignRHS;
  _318 = getFunctionAssignRHS.836_317->exp.operands[0];
  second = _318;
  getFunctionAssignRHS.837_319 = getFunctionAssignRHS;
  _320 = getFunctionAssignRHS.837_319->exp.operands[1];
  second2 = _320;
  second.838_321 = second;
  if (second.838_321 != 0B)
    goto <bb 373>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 373> :
  second.839_322 = second;
  _323 = second.839_322->base.code;
  if (_323 == 165)
    goto <bb 374>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 374> :
  second.840_324 = second;
  three = second.840_324->exp.operands[0];
  if (three != 0B)
    goto <bb 375>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 375> :
  _325 = three->base.code;
  if (_325 == 153)
    goto <bb 376>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 376> :
  def_stmt = three->ssa_name.def_stmt;
  retval.841 = is_gimple_assign (def_stmt);
  if (retval.841 != 0)
    goto <bb 377>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 377> :
  D.250448 = gimple_assign_rhs1 (def_stmt);

  <bb 378> :
  _326 = D.250448;
  _327 = _326->base.code;
  retval.842 = _327 == 36;
  if (retval.842 != 0)
    goto <bb 379>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 379> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.844_328 = function_assign_collect;
  D.250449 = gimple_assign_rhs1 (def_stmt);

  <bb 380> :
  _329 = D.250449;
  D.195691 = _329;
  D.250450 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.844_328, &D.195691);

  <bb 381> :
  _330 = D.250450;
  retval.843 = _330 == 0B;
  D.195691 = {CLOBBER};
  if (retval.843 != 0)
    goto <bb 382>; [INV]
  else
    goto <bb 383>; [INV]

  <bb 382> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 387>; [INV]

  <bb 383> :
  function_assign_collect.845_331 = function_assign_collect;
  D.250452 = gimple_assign_rhs1 (def_stmt);

  <bb 384> :
  _332 = D.250452;
  D.195692 = _332;
  D.250453 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.845_331, &D.195692);

  <bb 385> :
  _333 = D.250453;
  function_assign_array::operator= (&assign_array, _333);

  <bb 386> :
  D.195692 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 387> :
  assign_type.stmt = gc;
  D.250455 = gimple_assign_lhs (def_stmt);

  <bb 388> :
  _334 = D.250455;
  assign_type.assign_tree = _334;
  D.250456 = cgraph_node::get_fun (node);

  <bb 389> :
  _335 = D.250456;
  _336 = _335->decl;
  assign_type.form_tree = _336;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 390> :
  function_assign_collect.846_337 = function_assign_collect;
  D.250457 = gimple_assign_rhs1 (def_stmt);

  <bb 391> :
  _338 = D.250457;
  D.195694 = _338;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.846_337, &D.195694, &assign_array);

  <bb 392> :
  D.195694 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 426>; [INV]

  <bb 393> :
  second.847_339 = second;
  _340 = second.847_339->base.code;
  if (_340 == 36)
    goto <bb 394>; [INV]
  else
    goto <bb 404>; [INV]

  <bb 394> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.849_341 = function_assign_collect;
  D.250462 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.849_341, &second);

  <bb 395> :
  _342 = D.250462;
  retval.848 = _342 == 0B;
  if (retval.848 != 0)
    goto <bb 396>; [INV]
  else
    goto <bb 397>; [INV]

  <bb 396> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 400>; [INV]

  <bb 397> :
  function_assign_collect.850_343 = function_assign_collect;
  D.250463 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.850_343, &second);

  <bb 398> :
  _344 = D.250463;
  function_assign_array::operator= (&assign_array, _344);

  <bb 399> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 400> :
  assign_type.stmt = gc;
  second.851_345 = second;
  assign_type.assign_tree = second.851_345;
  D.250464 = cgraph_node::get_fun (node);

  <bb 401> :
  _346 = D.250464;
  _347 = _346->decl;
  assign_type.form_tree = _347;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 402> :
  function_assign_collect.852_348 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.852_348, &second, &assign_array);

  <bb 403> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 426>; [INV]

  <bb 404> :
  second.853_349 = second;
  _350 = second.853_349->base.code;
  if (_350 == 47)
    goto <bb 405>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 405> :
  getFunctionAssignLHS.854_351 = getFunctionAssignLHS;
  three = getFunctionAssignLHS.854_351->exp.operands[0];
  if (three != 0B)
    goto <bb 406>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 406> :
  _352 = three->base.code;
  if (_352 == 165)
    goto <bb 407>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 407> :
  second.855_353 = second;
  four = second.855_353->exp.operands[0];
  if (four != 0B)
    goto <bb 408>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 408> :
  _354 = four->base.code;
  if (_354 == 153)
    goto <bb 409>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 409> :
  def_stmt = four->ssa_name.def_stmt;
  retval.856 = is_gimple_assign (def_stmt);
  if (retval.856 != 0)
    goto <bb 410>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 410> :
  D.250468 = gimple_assign_rhs1 (def_stmt);

  <bb 411> :
  _355 = D.250468;
  _356 = _355->base.code;
  retval.857 = _356 == 36;
  if (retval.857 != 0)
    goto <bb 412>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 412> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.859_357 = function_assign_collect;
  D.250469 = gimple_assign_rhs1 (def_stmt);

  <bb 413> :
  _358 = D.250469;
  D.195703 = _358;
  D.250470 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.859_357, &D.195703);

  <bb 414> :
  _359 = D.250470;
  retval.858 = _359 == 0B;
  D.195703 = {CLOBBER};
  if (retval.858 != 0)
    goto <bb 415>; [INV]
  else
    goto <bb 416>; [INV]

  <bb 415> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 420>; [INV]

  <bb 416> :
  function_assign_collect.860_360 = function_assign_collect;
  D.250472 = gimple_assign_rhs1 (def_stmt);

  <bb 417> :
  _361 = D.250472;
  D.195704 = _361;
  D.250473 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.860_360, &D.195704);

  <bb 418> :
  _362 = D.250473;
  function_assign_array::operator= (&assign_array, _362);

  <bb 419> :
  D.195704 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 420> :
  assign_type.stmt = gc;
  D.250475 = gimple_assign_lhs (def_stmt);

  <bb 421> :
  _363 = D.250475;
  assign_type.assign_tree = _363;
  D.250476 = cgraph_node::get_fun (node);

  <bb 422> :
  _364 = D.250476;
  _365 = _364->decl;
  assign_type.form_tree = _365;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 423> :
  function_assign_collect.861_366 = function_assign_collect;
  D.250477 = gimple_assign_rhs1 (def_stmt);

  <bb 424> :
  _367 = D.250477;
  D.195706 = _367;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.861_366, &D.195706, &assign_array);

  <bb 425> :
  D.195706 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 426> :
  second2.862_368 = second2;
  if (second2.862_368 != 0B)
    goto <bb 427>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 427> :
  second2.863_369 = second2;
  _370 = second2.863_369->base.code;
  if (_370 == 35)
    goto <bb 428>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 428> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.865_371 = function_assign_collect;
  D.250482 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.865_371, &second2);

  <bb 429> :
  _372 = D.250482;
  retval.864 = _372 == 0B;
  if (retval.864 != 0)
    goto <bb 430>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 430> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 434>; [INV]

  <bb 431> :
  function_assign_collect.866_373 = function_assign_collect;
  D.250483 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.866_373, &second2);

  <bb 432> :
  _374 = D.250483;
  function_assign_array::operator= (&assign_array, _374);

  <bb 433> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 434> :
  assign_type.stmt = gc;
  getFunctionAssignRHS.867_375 = getFunctionAssignRHS;
  assign_type.assign_tree = getFunctionAssignRHS.867_375;
  D.250484 = cgraph_node::get_fun (node);

  <bb 435> :
  _376 = D.250484;
  _377 = _376->decl;
  assign_type.form_tree = _377;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 436> :
  function_assign_collect.868_378 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.868_378, &second2, &assign_array);

  <bb 437> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 438> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 439> :
  getFunctionAssignLHS.869_379 = getFunctionAssignLHS;
  _380 = getFunctionAssignLHS.869_379->base.code;
  if (_380 == 47)
    goto <bb 440>; [INV]
  else
    goto <bb 485>; [INV]

  <bb 440> :
  getFunctionAssignLHS.870_381 = getFunctionAssignLHS;
  _382 = getFunctionAssignLHS.870_381->exp.operands[0];
  second = _382;
  getFunctionAssignLHS.871_383 = getFunctionAssignLHS;
  _384 = getFunctionAssignLHS.871_383->exp.operands[1];
  second2 = _384;
  second.872_385 = second;
  if (second.872_385 != 0B)
    goto <bb 441>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 441> :
  second.873_386 = second;
  _387 = second.873_386->base.code;
  if (_387 == 165)
    goto <bb 442>; [INV]
  else
    goto <bb 461>; [INV]

  <bb 442> :
  second.874_388 = second;
  three = second.874_388->exp.operands[0];
  if (three != 0B)
    goto <bb 443>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 443> :
  _389 = three->base.code;
  if (_389 == 153)
    goto <bb 444>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 444> :
  def_stmt = three->ssa_name.def_stmt;
  retval.875 = is_gimple_assign (def_stmt);
  if (retval.875 != 0)
    goto <bb 445>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 445> :
  D.250489 = gimple_assign_rhs1 (def_stmt);

  <bb 446> :
  _390 = D.250489;
  _391 = _390->base.code;
  retval.876 = _391 == 36;
  if (retval.876 != 0)
    goto <bb 447>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 447> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.878_392 = function_assign_collect;
  D.250490 = gimple_assign_rhs1 (def_stmt);

  <bb 448> :
  _393 = D.250490;
  D.195716 = _393;
  D.250491 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.878_392, &D.195716);

  <bb 449> :
  _394 = D.250491;
  retval.877 = _394 == 0B;
  D.195716 = {CLOBBER};
  if (retval.877 != 0)
    goto <bb 450>; [INV]
  else
    goto <bb 451>; [INV]

  <bb 450> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 455>; [INV]

  <bb 451> :
  function_assign_collect.879_395 = function_assign_collect;
  D.250493 = gimple_assign_rhs1 (def_stmt);

  <bb 452> :
  _396 = D.250493;
  D.195717 = _396;
  D.250494 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.879_395, &D.195717);

  <bb 453> :
  _397 = D.250494;
  function_assign_array::operator= (&assign_array, _397);

  <bb 454> :
  D.195717 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 455> :
  assign_type.stmt = gc;
  D.250496 = gimple_assign_lhs (def_stmt);

  <bb 456> :
  _398 = D.250496;
  assign_type.assign_tree = _398;
  D.250497 = cgraph_node::get_fun (node);

  <bb 457> :
  _399 = D.250497;
  _400 = _399->decl;
  assign_type.form_tree = _400;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 458> :
  function_assign_collect.880_401 = function_assign_collect;
  D.250498 = gimple_assign_rhs1 (def_stmt);

  <bb 459> :
  _402 = D.250498;
  D.195719 = _402;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.880_401, &D.195719, &assign_array);

  <bb 460> :
  D.195719 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 472>; [INV]

  <bb 461> :
  second.881_403 = second;
  _404 = second.881_403->base.code;
  if (_404 == 36)
    goto <bb 462>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 462> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.883_405 = function_assign_collect;
  D.250503 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.883_405, &second);

  <bb 463> :
  _406 = D.250503;
  retval.882 = _406 == 0B;
  if (retval.882 != 0)
    goto <bb 464>; [INV]
  else
    goto <bb 465>; [INV]

  <bb 464> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 468>; [INV]

  <bb 465> :
  function_assign_collect.884_407 = function_assign_collect;
  D.250504 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.884_407, &second);

  <bb 466> :
  _408 = D.250504;
  function_assign_array::operator= (&assign_array, _408);

  <bb 467> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 468> :
  assign_type.stmt = gc;
  second.885_409 = second;
  assign_type.assign_tree = second.885_409;
  D.250505 = cgraph_node::get_fun (node);

  <bb 469> :
  _410 = D.250505;
  _411 = _410->decl;
  assign_type.form_tree = _411;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 470> :
  function_assign_collect.886_412 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.886_412, &second, &assign_array);

  <bb 471> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 472> :
  second2.887_413 = second2;
  if (second2.887_413 != 0B)
    goto <bb 473>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 473> :
  second2.888_414 = second2;
  _415 = second2.888_414->base.code;
  if (_415 == 35)
    goto <bb 474>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 474> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.890_416 = function_assign_collect;
  D.250509 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.890_416, &second2);

  <bb 475> :
  _417 = D.250509;
  retval.889 = _417 == 0B;
  if (retval.889 != 0)
    goto <bb 476>; [INV]
  else
    goto <bb 477>; [INV]

  <bb 476> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 480>; [INV]

  <bb 477> :
  function_assign_collect.891_418 = function_assign_collect;
  D.250510 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.891_418, &second2);

  <bb 478> :
  _419 = D.250510;
  function_assign_array::operator= (&assign_array, _419);

  <bb 479> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 480> :
  assign_type.stmt = gc;
  getFunctionAssignLHS.892_420 = getFunctionAssignLHS;
  assign_type.assign_tree = getFunctionAssignLHS.892_420;
  D.250511 = cgraph_node::get_fun (node);

  <bb 481> :
  _421 = D.250511;
  _422 = _421->decl;
  assign_type.form_tree = _422;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 482> :
  function_assign_collect.893_423 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.893_423, &second2, &assign_array);

  <bb 483> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 484> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 485> :
  getFunctionAssignLHS.894_424 = getFunctionAssignLHS;
  _425 = getFunctionAssignLHS.894_424->base.code;
  if (_425 == 49)
    goto <bb 486>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 486> :
  debug_gimple_stmt (gc);

  <bb 487> :
  getFunctionAssignLHS.895_426 = getFunctionAssignLHS;
  _427 = getFunctionAssignLHS.895_426->exp.operands[0];
  second = _427;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.897_428 = function_assign_collect;
  D.250516 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.897_428, &second);

  <bb 488> :
  _429 = D.250516;
  retval.896 = _429 == 0B;
  if (retval.896 != 0)
    goto <bb 489>; [INV]
  else
    goto <bb 490>; [INV]

  <bb 489> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 493>; [INV]

  <bb 490> :
  function_assign_collect.898_430 = function_assign_collect;
  D.250517 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.898_430, &second);

  <bb 491> :
  _431 = D.250517;
  function_assign_array::operator= (&assign_array, _431);

  <bb 492> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 493> :
  assign_type.stmt = gc;
  D.250518 = gimple_assign_rhs1 (gc);

  <bb 494> :
  _432 = D.250518;
  assign_type.assign_tree = _432;
  D.250519 = cgraph_node::get_fun (node);

  <bb 495> :
  _433 = D.250519;
  _434 = _433->decl;
  assign_type.form_tree = _434;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 496> :
  function_assign_collect.899_435 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.899_435, &second, &assign_array);

  <bb 497> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 498> :
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};

  <bb 499> :
<L373>:
  return;

  <bb 500> :
<L374>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 4

  <bb 501> :
<L375>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 502> :
<L376>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 2

  <bb 503> :
<L377>:
  second = {CLOBBER};
  resx 1

  <bb 504> :
<L378>:
  D.195213 = {CLOBBER};
  resx 16

  <bb 505> :
<L379>:
  D.195214 = {CLOBBER};
  resx 18

  <bb 506> :
<L380>:
  D.195216 = {CLOBBER};
  resx 20

  <bb 507> :
<L381>:
  assign_type = {CLOBBER};
  resx 15

  <bb 508> :
<L382>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 14

  <bb 509> :
<L383>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 13

  <bb 510> :
<L384>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 12

  <bb 511> :
<L385>:
  function_free_array::~function_free_array (&fun_array);
  resx 11

  <bb 512> :
<L386>:
  std::vector<free_type>::~vector (&free_type_array);
  resx 10

  <bb 513> :
<L387>:
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};
  resx 9

  <bb 514> :
<L388>:
  ret_type = {CLOBBER};
  resx 32

  <bb 515> :
<L389>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 31

  <bb 516> :
<L390>:
  function_return_array::~function_return_array (&fun_array);
  resx 30

  <bb 517> :
<L391>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 29

  <bb 518> :
<L392>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 39

  <bb 519> :
<L393>:
  function_return_array::~function_return_array (&fun_array);
  resx 38

  <bb 520> :
<L394>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  resx 37

  <bb 521> :
<L395>:
  assign_type = {CLOBBER};
  resx 46

  <bb 522> :
<L396>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 45

  <bb 523> :
<L397>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 44

  <bb 524> :
<L398>:
  getFunctionAssignRHS = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 43

  <bb 525> :
<L399>:
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  resx 53

  <bb 526> :
<L400>:
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  resx 52

  <bb 527> :
<L401>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  resx 51

  <bb 528> :
<L402>:
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  resx 59

  <bb 529> :
<L403>:
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  resx 58

  <bb 530> :
<L404>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  resx 57

  <bb 531> :
<L405>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 67

  <bb 532> :
<L406>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 66

  <bb 533> :
<L407>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 65

  <bb 534> :
<L408>:
  getVARDECLtree = {CLOBBER};
  resx 64

  <bb 535> :
<L409>:
  D.195624 = {CLOBBER};
  resx 75

  <bb 536> :
<L410>:
  D.195625 = {CLOBBER};
  resx 77

  <bb 537> :
<L411>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 74

  <bb 538> :
<L412>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 73

  <bb 539> :
<L413>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  resx 72

  <bb 540> :
<L414>:
  function_return_array::~function_return_array (&fun_array);
  resx 86

  <bb 541> :
<L415>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 85

  <bb 542> :
<L416>:
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 84

  <bb 543> :
<L417>:
  getreturnFucntionDecl = {CLOBBER};
  resx 63

  <bb 544> :
<L418>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 94

  <bb 545> :
<L419>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 93

  <bb 546> :
<L420>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 92

  <bb 547> :
<L421>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 100

  <bb 548> :
<L422>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 99

  <bb 549> :
<L423>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 98

  <bb 550> :
<L424>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 106

  <bb 551> :
<L425>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 105

  <bb 552> :
<L426>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 104

  <bb 553> :
<L427>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 112

  <bb 554> :
<L428>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 111

  <bb 555> :
<L429>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 110

  <bb 556> :
<L430>:
  D.195666 = {CLOBBER};
  resx 120

  <bb 557> :
<L431>:
  D.195667 = {CLOBBER};
  resx 122

  <bb 558> :
<L432>:
  D.195669 = {CLOBBER};
  resx 124

  <bb 559> :
<L433>:
  assign_type = {CLOBBER};
  resx 119

  <bb 560> :
<L434>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 118

  <bb 561> :
<L435>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 117

  <bb 562> :
<L436>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 116

  <bb 563> :
<L437>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 132

  <bb 564> :
<L438>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 131

  <bb 565> :
<L439>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 130

  <bb 566> :
<L440>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 138

  <bb 567> :
<L441>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 137

  <bb 568> :
<L442>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 136

  <bb 569> :
<L443>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 144

  <bb 570> :
<L444>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 143

  <bb 571> :
<L445>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 142

  <bb 572> :
<L446>:
  D.195691 = {CLOBBER};
  resx 152

  <bb 573> :
<L447>:
  D.195692 = {CLOBBER};
  resx 154

  <bb 574> :
<L448>:
  D.195694 = {CLOBBER};
  resx 156

  <bb 575> :
<L449>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 151

  <bb 576> :
<L450>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 150

  <bb 577> :
<L451>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 149

  <bb 578> :
<L452>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 163

  <bb 579> :
<L453>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 162

  <bb 580> :
<L454>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 161

  <bb 581> :
<L455>:
  D.195703 = {CLOBBER};
  resx 170

  <bb 582> :
<L456>:
  D.195704 = {CLOBBER};
  resx 172

  <bb 583> :
<L457>:
  D.195706 = {CLOBBER};
  resx 174

  <bb 584> :
<L458>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 169

  <bb 585> :
<L459>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 168

  <bb 586> :
<L460>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 167

  <bb 587> :
<L461>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 181

  <bb 588> :
<L462>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 180

  <bb 589> :
<L463>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 179

  <bb 590> :
<L464>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 148

  <bb 591> :
<L465>:
  D.195716 = {CLOBBER};
  resx 190

  <bb 592> :
<L466>:
  D.195717 = {CLOBBER};
  resx 192

  <bb 593> :
<L467>:
  D.195719 = {CLOBBER};
  resx 194

  <bb 594> :
<L468>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 189

  <bb 595> :
<L469>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 188

  <bb 596> :
<L470>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 187

  <bb 597> :
<L471>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 201

  <bb 598> :
<L472>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 200

  <bb 599> :
<L473>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 199

  <bb 600> :
<L474>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 207

  <bb 601> :
<L475>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 206

  <bb 602> :
<L476>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 205

  <bb 603> :
<L477>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 186

  <bb 604> :
<L478>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 214

  <bb 605> :
<L479>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 213

  <bb 606> :
<L480>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 212

  <bb 607> :
<L481>:
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  resx 91

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2Ev, funcdef_no=6367, decl_uid=176648, cgraph_uid=3342, symbol_order=4115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176656;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2Ev, funcdef_no=6365, decl_uid=176106, cgraph_uid=3339, symbol_order=4112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7716, decl_uid=175998, cgraph_uid=4348, symbol_order=5130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this);
  _1 = &this->D.176001;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2Ev, funcdef_no=8618, decl_uid=175776, cgraph_uid=5250, symbol_order=6036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2Ev, funcdef_no=9405, decl_uid=175705, cgraph_uid=6037, symbol_order=6823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2Ev, funcdef_no=6370, decl_uid=192718, cgraph_uid=3345, symbol_order=4118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::vector (_1);
  return;

}



;; Function function_free_array::operator= (_ZN19function_free_arrayaSERKS_, funcdef_no=6372, decl_uid=195166, cgraph_uid=3347, symbol_order=4120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_free_array & function_free_array::operator= (struct function_free_array * const this, const struct function_free_array & D.195167)
{
  struct function_free_array & D.250526;

  <bb 2> :
  _1 = &D.195167->free_type_array;
  _2 = &this->free_type_array;
  std::vector<free_type>::operator= (_2, _1);
  D.250526 = this;

  <bb 3> :
<L0>:
  return D.250526;

}



;; Function std::vector<free_type>::operator= (_ZNSt6vectorI9free_typeSaIS0_EEaSERKS2_, funcdef_no=7724, decl_uid=176234, cgraph_uid=4358, symbol_order=5140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<free_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.250561;
  struct free_type * __tmp;
  const size_type __xlen;
  struct vector & D.250559;
  struct __normal_iterator D.250556;
  struct __normal_iterator D.250555;
  struct __normal_iterator D.250554;
  struct __normal_iterator D.250553;
  struct __normal_iterator D.250552;
  bool retval.904;
  struct __normal_iterator D.250547;
  struct __normal_iterator D.250546;
  bool retval.903;
  bool iftmp.902;
  bool retval.901;
  bool retval.900;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.900 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ();
  if (retval.900 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.176656;
  _4 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.176656;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.902 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.902 = 0;

  <bb 8> :
  retval.901 = iftmp.902;
  if (retval.901 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<free_type>::clear (this);
  _8 = &this->D.176656;
  _9 = this->D.176656._M_impl.D.176001._M_end_of_storage;
  _10 = this->D.176656._M_impl.D.176001._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.176656._M_impl.D.176001._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_8, _14, _13);
  this->D.176656._M_impl.D.176001._M_start = 0B;
  this->D.176656._M_impl.D.176001._M_finish = 0B;
  this->D.176656._M_impl.D.176001._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.176656;
  _16 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.176656;
  _18 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<free_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<free_type>::size (__x);
  _19 = std::vector<free_type>::capacity (this);
  retval.903 = __xlen > _19;
  if (retval.903 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.250546 = std::vector<free_type>::end (__x);
  D.250547 = std::vector<free_type>::begin (__x);
  D.250561 = std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (this, __xlen, D.250547, D.250546);
  __tmp = D.250561;
  _20 = &this->D.176656;
  _21 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.176656._M_impl.D.176001._M_finish;
  _23 = this->D.176656._M_impl.D.176001._M_start;
  std::_Destroy<free_type*, free_type> (_23, _22, _21);
  _24 = &this->D.176656;
  _25 = this->D.176656._M_impl.D.176001._M_end_of_storage;
  _26 = this->D.176656._M_impl.D.176001._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.176656._M_impl.D.176001._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_24, _30, _29);
  this->D.176656._M_impl.D.176001._M_start = __tmp;
  _31 = this->D.176656._M_impl.D.176001._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.176656._M_impl.D.176001._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<free_type>::size (this);
  retval.904 = __xlen <= _34;
  if (retval.904 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.176656;
  _36 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_35);
  D.250552 = std::vector<free_type>::end (this);
  D.250553 = std::vector<free_type>::begin (this);
  D.250554 = std::vector<free_type>::end (__x);
  D.250555 = std::vector<free_type>::begin (__x);
  D.250556 = std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.250555, D.250554, D.250553);
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (D.250556, D.250552, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.176656._M_impl.D.176001._M_start;
  _38 = __x->D.176656._M_impl.D.176001._M_start;
  _39 = std::vector<free_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.176656._M_impl.D.176001._M_start;
  std::copy<free_type*, free_type*> (_42, _41, _37);
  _43 = &this->D.176656;
  _44 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.176656._M_impl.D.176001._M_finish;
  _46 = __x->D.176656._M_impl.D.176001._M_finish;
  _47 = __x->D.176656._M_impl.D.176001._M_start;
  _48 = std::vector<free_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.176656._M_impl.D.176001._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.176656._M_impl.D.176001._M_finish = _53;

  <bb 17> :
  D.250559 = this;

  <bb 18> :
<L19>:
  return D.250559;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7725, decl_uid=175868, cgraph_uid=4356, symbol_order=5138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ()
{
  bool D.250562;

  <bb 2> :
  D.250562 = 0;

  <bb 3> :
<L0>:
  return D.250562;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E15_S_always_equalEv, funcdef_no=7726, decl_uid=175871, cgraph_uid=4357, symbol_order=5139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ()
{
  bool D.250564;

  <bb 2> :
  D.250564 = 1;

  <bb 3> :
<L0>:
  return D.250564;

}



;; Function std::operator!= (_ZStneRKSaI9free_typeES2_, funcdef_no=8627, decl_uid=175754, cgraph_uid=5259, symbol_order=6045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.224003, const struct allocator & D.224004)
{
  bool D.250566;

  <bb 2> :
  D.250566 = 0;

  <bb 3> :
<L0>:
  return D.250566;

}



;; Function std::vector<free_type>::clear (_ZNSt6vectorI9free_typeSaIS0_EE5clearEv, funcdef_no=8628, decl_uid=176386, cgraph_uid=5260, symbol_order=6046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_start;
  std::vector<free_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<free_type>::_M_erase_at_end (_ZNSt6vectorI9free_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9408, decl_uid=176514, cgraph_uid=6040, symbol_order=6826)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<free_type>::_M_erase_at_end (struct vector * const this, struct free_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.176656;
  _5 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.176656._M_impl.D.176001._M_finish;
  std::_Destroy<free_type*, free_type> (__pos, _6, _5);
  this->D.176656._M_impl.D.176001._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<free_type> > (_ZSt15__alloc_on_copyISaI9free_typeEEvRT_RKS2_, funcdef_no=8629, decl_uid=212790, cgraph_uid=5261, symbol_order=6047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<free_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<free_type>::capacity (_ZNKSt6vectorI9free_typeSaIS0_EE8capacityEv, funcdef_no=8630, decl_uid=176302, cgraph_uid=5262, symbol_order=6048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::capacity (const struct vector * const this)
{
  size_type D.250571;

  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_end_of_storage;
  _2 = this->D.176656._M_impl.D.176001._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.250571 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.250571;

}



;; Function std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZNSt6vectorI9free_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8631, decl_uid=212797, cgraph_uid=5263, symbol_order=6049)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct free_type * std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct free_type * D.250575;
  struct free_type * __result;
  struct free_type * D.250573;

  <bb 2> :
  _1 = &this->D.176656;
  D.250575 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_1, __n);
  __result = D.250575;
  _2 = &this->D.176656;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (__first, __last, __result, _3);

  <bb 3> :
  D.250573 = __result;

  <bb 4> :
<L0>:
  return D.250573;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.176656;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<free_type>::end (_ZNSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8634, decl_uid=176269, cgraph_uid=5266, symbol_order=6052)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::end (struct vector * const this)
{
  struct iterator D.224090;
  struct iterator D.250579;

  <bb 2> :
  _1 = &this->D.176656._M_impl.D.176001._M_finish;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.224090, _1);
  D.250579 = D.224090;
  D.224090 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250579;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9411, decl_uid=212879, cgraph_uid=6043, symbol_order=6829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8632, decl_uid=176265, cgraph_uid=5264, symbol_order=6050)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::begin (struct vector * const this)
{
  struct iterator D.224044;
  struct iterator D.250582;

  <bb 2> :
  _1 = &this->D.176656._M_impl.D.176001._M_start;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.224044, _1);
  D.250582 = D.224044;
  D.224044 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250582;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8633, decl_uid=212898, cgraph_uid=5265, symbol_order=6051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.250587;
  struct __normal_iterator D.250586;
  struct __normal_iterator D.250585;

  <bb 2> :
  D.250586 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__last);
  D.250587 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__first);
  D.250585 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.250587, D.250586, __result);

  <bb 3> :
<L0>:
  return D.250585;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9413, decl_uid=224056, cgraph_uid=6045, symbol_order=6831)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.250589;

  <bb 2> :
  D.250589 = __it;

  <bb 3> :
<L0>:
  return D.250589;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9414, decl_uid=224062, cgraph_uid=6047, symbol_order=6833)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct free_type * D.250593;
  struct __normal_iterator D.250591;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__result);
  _2 = std::__niter_base<const free_type*, std::vector<free_type> > (__last);
  _3 = std::__niter_base<const free_type*, std::vector<free_type> > (__first);
  D.250593 = std::__copy_move_a1<false, const free_type*, free_type*> (_3, _2, _1);
  _4 = D.250593;
  D.250591 = std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.250591;

}



;; Function std::__niter_base<free_type*, std::vector<free_type> > (_ZSt12__niter_baseIP9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10061, decl_uid=234430, cgraph_uid=6693, symbol_order=7483)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  struct free_type * D.250594;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__it);
  D.250594 = *_1;

  <bb 3> :
<L0>:
  return D.250594;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9425, decl_uid=212866, cgraph_uid=6057, symbol_order=6843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * const & __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  struct free_type * const & D.250596;

  <bb 2> :
  D.250596 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250596;

}



;; Function std::__niter_base<const free_type*, std::vector<free_type> > (_ZSt12__niter_baseIPK9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10060, decl_uid=234279, cgraph_uid=6692, symbol_order=7482)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * std::__niter_base<const free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  const struct free_type * D.250598;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (&__it);
  D.250598 = *_1;

  <bb 3> :
<L0>:
  return D.250598;

}



;; Function std::__copy_move_a1<false, const free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10062, decl_uid=234433, cgraph_uid=6694, symbol_order=7484)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250602;
  struct free_type * D.250600;

  <bb 2> :
  D.250602 = std::__copy_move_a2<false, const free_type*, free_type*> (__first, __last, __result);
  D.250600 = D.250602;

  <bb 3> :
<L0>:
  return D.250600;

}



;; Function std::__copy_move_a2<false, const free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10557, decl_uid=240063, cgraph_uid=7189, symbol_order=7979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250603;

  <bb 2> :
  D.250603 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250603;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI9free_typeEEPT_PKS4_S7_S5_, funcdef_no=10796, decl_uid=243397, cgraph_uid=7428, symbol_order=8220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct free_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  const ptrdiff_t _Num;
  struct free_type * D.250608;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.905_2 = (long unsigned int) _Num;
  _3 = _Num.905_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.906_4 = (long unsigned int) _Num;
  _5 = _Num.906_4 * 24;
  D.250608 = __result + _5;

  <bb 5> :
<L3>:
  return D.250608;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10063, decl_uid=234437, cgraph_uid=6695, symbol_order=7485)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __from, struct free_type * __res)
{
  struct __normal_iterator D.250610;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.250610 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.250610;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10558, decl_uid=212857, cgraph_uid=7190, symbol_order=7980)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct free_type * const D.243403;
  struct __normal_iterator D.243404;
  struct __normal_iterator D.250612;

  <bb 2> :
  _1 = this->_M_current;
  __n.907_2 = (long unsigned int) __n;
  _3 = __n.907_2 * 24;
  _4 = _1 + _3;
  D.243403 = _4;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.243404, &D.243403);
  D.250612 = D.243404;
  D.243404 = {CLOBBER};
  D.243403 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.250612;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8635, decl_uid=212904, cgraph_uid=5267, symbol_order=6053)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.224093)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9416, decl_uid=224095, cgraph_uid=6048, symbol_order=6834)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10064, decl_uid=234461, cgraph_uid=6696, symbol_order=7486)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator D.240072, struct __normal_iterator D.240073)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<free_type*, free_type*> (_ZSt4copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=8636, decl_uid=212912, cgraph_uid=5268, symbol_order=6054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250618;
  struct free_type * D.250616;

  <bb 2> :
  _1 = std::__miter_base<free_type*> (__last);
  _2 = std::__miter_base<free_type*> (__first);
  D.250618 = std::__copy_move_a<false, free_type*, free_type*> (_2, _1, __result);
  D.250616 = D.250618;

  <bb 3> :
<L0>:
  return D.250616;

}



;; Function std::__miter_base<free_type*> (_ZSt12__miter_baseIP9free_typeET_S2_, funcdef_no=9417, decl_uid=224111, cgraph_uid=6049, symbol_order=6835)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__miter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.250619;

  <bb 2> :
  D.250619 = __it;

  <bb 3> :
<L0>:
  return D.250619;

}



;; Function std::__copy_move_a<false, free_type*, free_type*> (_ZSt13__copy_move_aILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=9418, decl_uid=224113, cgraph_uid=6050, symbol_order=6836)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250623;
  struct free_type * D.250621;

  <bb 2> :
  __result.908_1 = __result;
  _2 = std::__niter_base<free_type*> (__result.908_1);
  _3 = std::__niter_base<free_type*> (__last);
  _4 = std::__niter_base<free_type*> (__first);
  D.250623 = std::__copy_move_a1<false, free_type*, free_type*> (_4, _3, _2);
  _5 = D.250623;
  D.250621 = std::__niter_wrap<free_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250621;

}



;; Function std::__niter_base<free_type*> (_ZSt12__niter_baseIP9free_typeET_S2_, funcdef_no=10065, decl_uid=224322, cgraph_uid=6697, symbol_order=7487)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.250624;

  <bb 2> :
  D.250624 = __it;

  <bb 3> :
<L0>:
  return D.250624;

}



;; Function std::__copy_move_a1<false, free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10066, decl_uid=234472, cgraph_uid=6698, symbol_order=7488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250628;
  struct free_type * D.250626;

  <bb 2> :
  D.250628 = std::__copy_move_a2<false, free_type*, free_type*> (__first, __last, __result);
  D.250626 = D.250628;

  <bb 3> :
<L0>:
  return D.250626;

}



;; Function std::__copy_move_a2<false, free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10559, decl_uid=240081, cgraph_uid=7191, symbol_order=7981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250629;

  <bb 2> :
  D.250629 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250629;

}



;; Function std::__niter_wrap<free_type*> (_ZSt12__niter_wrapIP9free_typeET_RKS2_S2_, funcdef_no=10067, decl_uid=234476, cgraph_uid=6699, symbol_order=7489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_wrap<free_type*> (struct free_type * const & D.240085, struct free_type * __res)
{
  struct free_type * D.250631;

  <bb 2> :
  D.250631 = __res;

  <bb 3> :
<L0>:
  return D.250631;

}



;; Function std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_ZSt22__uninitialized_copy_aIP9free_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8637, decl_uid=212916, cgraph_uid=5269, symbol_order=6055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<free_type*, free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & D.224120)
{
  struct free_type * D.250635;
  struct free_type * D.250633;

  <bb 2> :
  D.250635 = std::uninitialized_copy<free_type*, free_type*> (__first, __last, __result);
  D.250633 = D.250635;

  <bb 3> :
<L0>:
  return D.250633;

}



;; Function std::uninitialized_copy<free_type*, free_type*> (_ZSt18uninitialized_copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=9419, decl_uid=224122, cgraph_uid=6051, symbol_order=6837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250638;
  const bool __assignable;
  struct free_type * D.250636;

  <bb 2> :
  __assignable = 1;
  D.250638 = std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (__first, __last, __result);
  D.250636 = D.250638;

  <bb 3> :
<L0>:
  return D.250636;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP9free_typeS3_EET0_T_S5_S4_, funcdef_no=10068, decl_uid=234510, cgraph_uid=6700, symbol_order=7490)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.250639;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, free_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250639 = __cur;

  <bb 6> :
<L3>:
  return D.250639;

}



;; Function std::_Construct<free_type, free_type&> (_ZSt10_ConstructI9free_typeJRS0_EEvPT_DpOT0_, funcdef_no=10560, decl_uid=240093, cgraph_uid=7192, symbol_order=7982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, free_type&> (struct free_type * __p, struct free_type & __args#0)
{
  void * D.243423;
  void * D.243422;
  const struct free_type * D.243424;

  <bb 2> :
  D.243424 = std::forward<free_type&> (__args#0);
  D.243422 = __p;
  D.243423 = operator new (24, D.243422);
  MEM[(struct free_type *)D.243423] = *D.243424;
  return;

}



;; Function std::forward<free_type&> (_ZSt7forwardIR9free_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10797, decl_uid=243420, cgraph_uid=7429, symbol_order=8221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type&> (struct type & __t)
{
  struct free_type & D.250641;

  <bb 2> :
  D.250641 = __t;

  <bb 3> :
<L0>:
  return D.250641;

}



;; Function free_type::free_type (_ZN9free_typeC2Ev, funcdef_no=6374, decl_uid=195178, cgraph_uid=3349, symbol_order=4122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void free_type::free_type (struct free_type * const this)
{
  <bb 2> :
  this->Looserulesfree = 0;
  return;

}



;; Function std::vector<free_type>::push_back (_ZNSt6vectorI9free_typeSaIS0_EE9push_backERKS0_, funcdef_no=7727, decl_uid=176336, cgraph_uid=4360, symbol_order=5142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<free_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.250646;

  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_finish;
  _2 = this->D.176656._M_impl.D.176001._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.176656._M_impl.D.176001._M_finish;
  _4 = &this->D.176656._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_4, _3, __x);
  _5 = this->D.176656._M_impl.D.176001._M_finish;
  _6 = _5 + 24;
  this->D.176656._M_impl.D.176001._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.250646 = std::vector<free_type>::end (this);
  std::vector<free_type>::_M_realloc_insert<const free_type&> (this, D.250646, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8638, decl_uid=212928, cgraph_uid=5270, symbol_order=6056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (struct allocator_type & __a, struct free_type * __p, const struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const free_type&> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9421, decl_uid=224139, cgraph_uid=6053, symbol_order=6839)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (struct new_allocator * const this, struct free_type * __p, const struct free_type & __args#0)
{
  void * D.234522;
  void * D.234521;
  const struct free_type * D.234523;

  <bb 2> :
  D.234523 = std::forward<const free_type&> (__args#0);
  D.234521 = __p;
  D.234522 = operator new (24, D.234521);
  MEM[(struct free_type *)D.234522] = *D.234523;
  return;

}



;; Function std::vector<free_type>::_M_realloc_insert<const free_type&> (_ZNSt6vectorI9free_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8639, decl_uid=213097, cgraph_uid=5274, symbol_order=6060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::_M_realloc_insert<const free_type&> (struct vector * const this, struct iterator __position, const struct free_type & __args#0)
{
  struct free_type * D.250651;
  const size_type D.250650;
  struct free_type * __new_finish;
  struct free_type * __new_start;
  const size_type __elems_before;
  struct free_type * __old_finish;
  struct free_type * __old_start;
  const size_type __len;
  struct iterator D.224150;

  <bb 2> :
  D.250650 = std::vector<free_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.250650;
  __old_start = this->D.176656._M_impl.D.176001._M_start;
  __old_finish = this->D.176656._M_impl.D.176001._M_finish;
  D.224150 = std::vector<free_type>::begin (this);
  _1 = __gnu_cxx::operator-<free_type*, std::vector<free_type> > (&__position, &D.224150);
  __elems_before = (const size_type) _1;
  D.224150 = {CLOBBER};
  _2 = &this->D.176656;
  D.250651 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_2, __len);
  __new_start = D.250651;
  __new_finish = __new_start;
  _3 = std::forward<const free_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.176656._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.176656;
  _8 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<free_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.176656;
  _12 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<free_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.176656;
  _23 = this->D.176656._M_impl.D.176001._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.176656._M_impl.D.176001._M_start = __new_start;
  this->D.176656._M_impl.D.176001._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.176656._M_impl.D.176001._M_end_of_storage = _28;
  return;

}



;; Function std::vector<free_type>::_M_check_len (_ZNKSt6vectorI9free_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9422, decl_uid=176505, cgraph_uid=6054, symbol_order=6840)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<free_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.911;
  size_type D.250655;
  const long unsigned int D.234528;
  bool retval.909;

  <bb 2> :
  _1 = std::vector<free_type>::max_size (this);
  _2 = std::vector<free_type>::size (this);
  _3 = _1 - _2;
  __n.910_4 = __n;
  retval.909 = _3 < __n.910_4;
  if (retval.909 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<free_type>::size (this);
  _6 = std::vector<free_type>::size (this);
  D.234528 = _6;
  _7 = std::max<long unsigned int> (&D.234528, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234528 = {CLOBBER};
  _9 = std::vector<free_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<free_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.911 = std::vector<free_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.911 = __len;

  <bb 8> :
  D.250655 = iftmp.911;

  <bb 9> :
<L6>:
  return D.250655;

}



;; Function std::vector<free_type>::max_size (_ZNKSt6vectorI9free_typeSaIS0_EE8max_sizeEv, funcdef_no=10069, decl_uid=176291, cgraph_uid=6701, symbol_order=7491)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::max_size (const struct vector * const this)
{
  size_type D.250662;

  <bb 2> :
  _1 = &this->D.176656;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  D.250662 = std::vector<free_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.250662;

}



;; Function std::vector<free_type>::_S_max_size (_ZNSt6vectorI9free_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10561, decl_uid=176512, cgraph_uid=7193, symbol_order=7983)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.250664;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<free_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.250664 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250664;

}



;; Function std::allocator_traits<std::allocator<free_type> >::max_size (_ZNSt16allocator_traitsISaI9free_typeEE8max_sizeERKS1_, funcdef_no=10798, decl_uid=175826, cgraph_uid=7430, symbol_order=8222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<free_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.250667;

  <bb 2> :
  D.250667 = __gnu_cxx::new_allocator<free_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.250667;

}



;; Function __gnu_cxx::new_allocator<free_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE8max_sizeEv, funcdef_no=10902, decl_uid=175668, cgraph_uid=7534, symbol_order=8326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::max_size (const struct new_allocator * const this)
{
  size_type D.250669;

  <bb 2> :
  D.250669 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.250669;

}



;; Function __gnu_cxx::operator-<free_type*, std::vector<free_type> > (_ZN9__gnu_cxxmiIP9free_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9423, decl_uid=224151, cgraph_uid=6055, symbol_order=6841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.250671;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.250671 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.250671;

}



;; Function std::vector<free_type>::_S_relocate (_ZNSt6vectorI9free_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9424, decl_uid=176163, cgraph_uid=6056, symbol_order=6842)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.250674;
  struct free_type * D.250673;

  <bb 2> :
  D.250673 = std::vector<free_type>::_S_do_relocate (__first, __last, __result, __alloc, D.250674);

  <bb 3> :
<L0>:
  return D.250673;

}



;; Function std::vector<free_type>::_S_do_relocate (_ZNSt6vectorI9free_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10070, decl_uid=176151, cgraph_uid=6702, symbol_order=7492)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_do_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240105)
{
  struct free_type * D.250676;

  <bb 2> :
  D.250676 = std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.250676;

}



;; Function std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (_ZSt12__relocate_aIP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10562, decl_uid=224316, cgraph_uid=7194, symbol_order=7984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * D.250678;

  <bb 2> :
  _1 = std::__niter_base<free_type*> (__result);
  _2 = std::__niter_base<free_type*> (__last);
  _3 = std::__niter_base<free_type*> (__first);
  D.250678 = std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.250678;

}



;; Function std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_ZSt14__relocate_a_1IP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10799, decl_uid=224467, cgraph_uid=7431, symbol_order=8223)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * __cur;
  struct free_type * D.250680;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__first);
  _2 = std::__addressof<free_type> (__cur);
  std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250680 = __cur;

  <bb 6> :
<L3>:
  return D.250680;

}



;; Function std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_ZSt19__relocate_object_aI9free_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10903, decl_uid=224496, cgraph_uid=7535, symbol_order=8327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (struct free_type * restrict __dest, struct free_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<free_type&> (__orig);
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (__alloc, __dest, _1);
  _2 = std::__addressof<free_type> (__orig);
  std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (__alloc, _2);
  return;

}



;; Function std::move<free_type&> (_ZSt4moveIR9free_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10949, decl_uid=224508, cgraph_uid=7581, symbol_order=8373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<free_type&> (struct free_type & __t)
{
  struct type & D.250682;

  <bb 2> :
  D.250682 = __t;

  <bb 3> :
<L0>:
  return D.250682;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10950, decl_uid=224510, cgraph_uid=7582, symbol_order=8374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (struct allocator_type & __a, struct free_type * __p, struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<free_type> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (__a, __p, _1);
  return;

}



;; Function std::forward<free_type> (_ZSt7forwardI9free_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10969, decl_uid=245322, cgraph_uid=7601, symbol_order=8393)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type> (struct type & __t)
{
  struct free_type & D.250684;

  <bb 2> :
  D.250684 = __t;

  <bb 3> :
<L0>:
  return D.250684;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10970, decl_uid=245324, cgraph_uid=7602, symbol_order=8394)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (struct new_allocator * const this, struct free_type * __p, struct free_type & __args#0)
{
  void * D.245731;
  void * D.245730;
  struct free_type * D.245732;

  <bb 2> :
  D.245732 = std::forward<free_type> (__args#0);
  D.245730 = __p;
  D.245731 = operator new (24, D.245730);
  MEM[(struct free_type *)D.245731] = *D.245732;
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (_ZNSt16allocator_traitsISaI9free_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9426, decl_uid=224525, cgraph_uid=6058, symbol_order=6844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (struct allocator_type & __a, struct free_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::destroy<free_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::destroy<free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE7destroyIS1_EEvPT_, funcdef_no=10071, decl_uid=234543, cgraph_uid=6703, symbol_order=7493)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::destroy<free_type> (struct new_allocator * const this, struct free_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::put (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7729, decl_uid=192384, cgraph_uid=4361, symbol_order=5143)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_free_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_free_array & v)
{
  bool D.250693;
  struct hash_entry * D.250692;
  unsigned int D.250691;
  bool ins;
  struct hash_entry * e;
  bool D.250689;
  void * D.213107;
  void * D.213106;

  <bb 2> :
  _1 = &this->m_table;
  D.250691 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.250691;
  D.250692 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.250692;
  D.250693 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (e);
  ins = D.250693;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213106 = &e->m_value;
  D.213107 = operator new (24, D.213106);
  function_free_array::function_free_array (D.213107, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_free_array::operator= (_4, v);

  <bb 5> :
  D.250689 = ~ins;

  <bb 6> :
<L3>:
  return D.250689;

  <bb 7> :
<L4>:
  operator delete (D.213107, D.213106);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8643, decl_uid=192542, cgraph_uid=5275, symbol_order=6061)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.250744;
  bool D.250743;
  bool D.250742;
  bool D.250741;
  bool D.250740;
  bool D.250739;
  struct value_type * D.250738;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.917;
  bool retval.916;
  bool retval.915;
  bool retval.914;
  bool retval.913;
  bool retval.912;
  struct value_type * D.250700;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.250739 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.912 = D.250739;
  if (retval.912 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.250740 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.913 = D.250740;
  if (retval.913 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.250741 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.914 = D.250741;
  if (retval.914 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.250700 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.250742 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.915 = D.250742;
  if (retval.915 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.250743 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.916 = D.250743;
  if (retval.916 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.250744 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.917 = D.250744;
  if (retval.917 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.250700 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.250700 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.250700 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.250700 = _37 + _39;

  <bb 27> :
<L37>:
  return D.250700;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9427, decl_uid=192623, cgraph_uid=6071, symbol_order=6857)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.250775;
  unsigned int D.250774;
  bool D.250773;
  bool D.250772;
  struct mem_alloc_description & D.250771;
  struct value_type * D.250770;
  unsigned int D.250769;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234566;
  void * D.234565;
  struct hash_entry & D.234603;
  bool iftmp.921;
  bool retval.920;
  bool iftmp.919;
  bool retval.918;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.919 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.919 = 0;

  <bb 6> :
  retval.918 = iftmp.919;
  if (retval.918 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.250769 = hash_table_higher_prime_index (_5);
  nindex = D.250769;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.250770 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.250770;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.250772 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.250772;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.250773 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.250773;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.921 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.921 = 0;

  <bb 15> :
  retval.920 = iftmp.921;
  if (retval.920 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.250774 = hash_map<tree_node*, function_free_array>::hash_entry::hash (x);
  _16 = D.250774;
  D.250775 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.250775;
  D.234603 = std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (x);
  D.234565 = q;
  D.234566 = operator new (32, D.234565);
  hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (D.234566, D.234603);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10072, decl_uid=192518, cgraph_uid=6704, symbol_order=7494)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.250776;

  <bb 2> :
  D.250776 = this->m_size;

  <bb 3> :
<L0>:
  return D.250776;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10073, decl_uid=192520, cgraph_uid=6705, symbol_order=7495)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.250778;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.250778 = _1 - _2;

  <bb 3> :
<L0>:
  return D.250778;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10074, decl_uid=192620, cgraph_uid=6706, symbol_order=7496)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.922;
  bool D.250780;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.922 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.922 = 0;

  <bb 6> :
  D.250780 = iftmp.922;

  <bb 7> :
<L4>:
  return D.250780;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9301, decl_uid=192610, cgraph_uid=5933, symbol_order=6719)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.250802;
  struct value_type * D.250801;
  struct mem_alloc_description & D.250800;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.250798;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.250801 = xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (n);
  nentries = D.250801;
  goto <bb 6>; [INV]

  <bb 5> :
  D.250802 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (n);
  nentries = D.250802;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.250798 = nentries;

  <bb 9> :
<L14>:
  return D.250798;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9982, decl_uid=216844, cgraph_uid=6614, symbol_order=7404)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.250805;
  struct hash_entry * D.250803;

  <bb 2> :
  D.250805 = xcalloc (count, 32);
  D.250803 = D.250805;

  <bb 3> :
<L0>:
  return D.250803;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9983, decl_uid=233188, cgraph_uid=6615, symbol_order=7405)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.250812;
  struct hash_entry * D.250811;
  struct hash_entry * D.250809;
  bool retval.923;

  <bb 2> :
  retval.923 = need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ();
  if (retval.923 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.250811 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.250809 = D.250811;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.250812 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.250809 = D.250812;

  <bb 5> :
<L2>:
  return D.250809;

}



;; Function finalize<hash_map<tree_node*, function_free_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10495, decl_uid=239719, cgraph_uid=7130, symbol_order=7920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_free_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10497, decl_uid=243143, cgraph_uid=7128, symbol_order=7918)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_free_array::~function_free_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10494, decl_uid=239718, cgraph_uid=7126, symbol_order=7916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ()
{
  bool D.250813;

  <bb 2> :
  D.250813 = 1;

  <bb 3> :
<L0>:
  return D.250813;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10076, decl_uid=192443, cgraph_uid=6708, symbol_order=7498)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_free_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.250817;
  hashval_t D.250815;

  <bb 2> :
  _1 = &e->m_key;
  D.250817 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_1);
  D.250815 = D.250817;

  <bb 3> :
<L0>:
  return D.250815;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10075, decl_uid=192613, cgraph_uid=6707, symbol_order=7497)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.250830;
  bool D.250829;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.925;
  struct value_type * D.250821;
  bool retval.924;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.250829 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.924 = D.250829;
  if (retval.924 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.250821 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.250830 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.925 = D.250830;
  if (retval.925 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.250821 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.250821;

}



;; Function std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10077, decl_uid=234563, cgraph_uid=6709, symbol_order=7499)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.250831;

  <bb 2> :
  D.250831 = __t;

  <bb 3> :
<L0>:
  return D.250831;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9438, decl_uid=234588, cgraph_uid=6069, symbol_order=6855)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234590)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234590->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234590->m_value;
  function_free_array::function_free_array (_2, _3);
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2EOS_, funcdef_no=9436, decl_uid=192735, cgraph_uid=6066, symbol_order=6852)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, struct function_free_array & D.192737)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192737->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9434, decl_uid=176613, cgraph_uid=6063, symbol_order=6849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this, struct vector & D.176615)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176656;
  _2 = &D.176615->D.176656;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9432, decl_uid=176081, cgraph_uid=6060, symbol_order=6846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.176083)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.176083->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10079, decl_uid=175987, cgraph_uid=6711, symbol_order=7501)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  std::allocator<free_type>::allocator (this, _1);
  _2 = &this->D.176001;
  _3 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.176001;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI9free_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10563, decl_uid=240135, cgraph_uid=7195, symbol_order=7985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.250833;

  <bb 2> :
  D.250833 = __t;

  <bb 3> :
<L0>:
  return D.250833;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10565, decl_uid=175943, cgraph_uid=7197, symbol_order=7987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8928, decl_uid=216846, cgraph_uid=5560, symbol_order=6346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9440, decl_uid=192631, cgraph_uid=6072, symbol_order=6858)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10081, decl_uid=192455, cgraph_uid=6713, symbol_order=7503)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10567, decl_uid=240150, cgraph_uid=7199, symbol_order=7989)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2Ev, funcdef_no=6387, decl_uid=193590, cgraph_uid=3362, symbol_order=4135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6385, decl_uid=177693, cgraph_uid=3359, symbol_order=4132)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177701;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6383, decl_uid=177151, cgraph_uid=3356, symbol_order=4129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7731, decl_uid=177043, cgraph_uid=4363, symbol_order=5145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this);
  _1 = &this->D.177046;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2Ev, funcdef_no=8646, decl_uid=176821, cgraph_uid=5278, symbol_order=6064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2Ev, funcdef_no=9442, decl_uid=176750, cgraph_uid=6074, symbol_order=6860)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_detched_array::operator= (_ZN30function_pthread_detched_arrayaSERKS_, funcdef_no=6389, decl_uid=195382, cgraph_uid=3364, symbol_order=4137)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_detched_array & function_pthread_detched_array::operator= (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.195383)
{
  struct function_pthread_detched_array & D.250836;

  <bb 2> :
  _1 = &D.195383->pthread_detched_array;
  _2 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::operator= (_2, _1);
  D.250836 = this;

  <bb 3> :
<L0>:
  return D.250836;

}



;; Function std::vector<pthread_detched_type>::operator= (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEaSERKS2_, funcdef_no=7739, decl_uid=177279, cgraph_uid=4373, symbol_order=5155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_detched_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.250871;
  struct pthread_detched_type * __tmp;
  const size_type __xlen;
  struct vector & D.250869;
  struct __normal_iterator D.250866;
  struct __normal_iterator D.250865;
  struct __normal_iterator D.250864;
  struct __normal_iterator D.250863;
  struct __normal_iterator D.250862;
  bool retval.930;
  struct __normal_iterator D.250857;
  struct __normal_iterator D.250856;
  bool retval.929;
  bool iftmp.928;
  bool retval.927;
  bool retval.926;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.926 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ();
  if (retval.926 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.177701;
  _4 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.177701;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.928 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.928 = 0;

  <bb 8> :
  retval.927 = iftmp.928;
  if (retval.927 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_detched_type>::clear (this);
  _8 = &this->D.177701;
  _9 = this->D.177701._M_impl.D.177046._M_end_of_storage;
  _10 = this->D.177701._M_impl.D.177046._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.177701._M_impl.D.177046._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_8, _14, _13);
  this->D.177701._M_impl.D.177046._M_start = 0B;
  this->D.177701._M_impl.D.177046._M_finish = 0B;
  this->D.177701._M_impl.D.177046._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.177701;
  _16 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.177701;
  _18 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_detched_type>::size (__x);
  _19 = std::vector<pthread_detched_type>::capacity (this);
  retval.929 = __xlen > _19;
  if (retval.929 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.250856 = std::vector<pthread_detched_type>::end (__x);
  D.250857 = std::vector<pthread_detched_type>::begin (__x);
  D.250871 = std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (this, __xlen, D.250857, D.250856);
  __tmp = D.250871;
  _20 = &this->D.177701;
  _21 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.177701._M_impl.D.177046._M_finish;
  _23 = this->D.177701._M_impl.D.177046._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_23, _22, _21);
  _24 = &this->D.177701;
  _25 = this->D.177701._M_impl.D.177046._M_end_of_storage;
  _26 = this->D.177701._M_impl.D.177046._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.177701._M_impl.D.177046._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_24, _30, _29);
  this->D.177701._M_impl.D.177046._M_start = __tmp;
  _31 = this->D.177701._M_impl.D.177046._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.177701._M_impl.D.177046._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_detched_type>::size (this);
  retval.930 = __xlen <= _34;
  if (retval.930 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.177701;
  _36 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_35);
  D.250862 = std::vector<pthread_detched_type>::end (this);
  D.250863 = std::vector<pthread_detched_type>::begin (this);
  D.250864 = std::vector<pthread_detched_type>::end (__x);
  D.250865 = std::vector<pthread_detched_type>::begin (__x);
  D.250866 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.250865, D.250864, D.250863);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (D.250866, D.250862, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.177701._M_impl.D.177046._M_start;
  _38 = __x->D.177701._M_impl.D.177046._M_start;
  _39 = std::vector<pthread_detched_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.177701._M_impl.D.177046._M_start;
  std::copy<pthread_detched_type*, pthread_detched_type*> (_42, _41, _37);
  _43 = &this->D.177701;
  _44 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.177701._M_impl.D.177046._M_finish;
  _46 = __x->D.177701._M_impl.D.177046._M_finish;
  _47 = __x->D.177701._M_impl.D.177046._M_start;
  _48 = std::vector<pthread_detched_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.177701._M_impl.D.177046._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.177701._M_impl.D.177046._M_finish = _53;

  <bb 17> :
  D.250869 = this;

  <bb 18> :
<L19>:
  return D.250869;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7740, decl_uid=176913, cgraph_uid=4371, symbol_order=5153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ()
{
  bool D.250872;

  <bb 2> :
  D.250872 = 0;

  <bb 3> :
<L0>:
  return D.250872;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E15_S_always_equalEv, funcdef_no=7741, decl_uid=176916, cgraph_uid=4372, symbol_order=5154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ()
{
  bool D.250874;

  <bb 2> :
  D.250874 = 1;

  <bb 3> :
<L0>:
  return D.250874;

}



;; Function std::operator!= (_ZStneRKSaI20pthread_detched_typeES2_, funcdef_no=8655, decl_uid=176799, cgraph_uid=5287, symbol_order=6073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.224739, const struct allocator & D.224740)
{
  bool D.250876;

  <bb 2> :
  D.250876 = 0;

  <bb 3> :
<L0>:
  return D.250876;

}



;; Function std::vector<pthread_detched_type>::clear (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5clearEv, funcdef_no=8656, decl_uid=177431, cgraph_uid=5288, symbol_order=6074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.177701._M_impl.D.177046._M_start;
  std::vector<pthread_detched_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_detched_type>::_M_erase_at_end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9445, decl_uid=177559, cgraph_uid=6077, symbol_order=6863)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_detched_type>::_M_erase_at_end (struct vector * const this, struct pthread_detched_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.177701._M_impl.D.177046._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.177701;
  _5 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.177701._M_impl.D.177046._M_finish;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (__pos, _6, _5);
  this->D.177701._M_impl.D.177046._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_ZSt15__alloc_on_copyISaI20pthread_detched_typeEEvRT_RKS2_, funcdef_no=8657, decl_uid=213148, cgraph_uid=5289, symbol_order=6075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_detched_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_detched_type>::capacity (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8capacityEv, funcdef_no=8658, decl_uid=177347, cgraph_uid=5290, symbol_order=6076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::capacity (const struct vector * const this)
{
  size_type D.250881;

  <bb 2> :
  _1 = this->D.177701._M_impl.D.177046._M_end_of_storage;
  _2 = this->D.177701._M_impl.D.177046._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.250881 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.250881;

}



;; Function std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8659, decl_uid=213155, cgraph_uid=5291, symbol_order=6077)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_detched_type * std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_detched_type * D.250885;
  struct pthread_detched_type * __result;
  struct pthread_detched_type * D.250883;

  <bb 2> :
  _1 = &this->D.177701;
  D.250885 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_1, __n);
  __result = D.250885;
  _2 = &this->D.177701;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (__first, __last, __result, _3);

  <bb 3> :
  D.250883 = __result;

  <bb 4> :
<L0>:
  return D.250883;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.177701;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_detched_type>::end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8662, decl_uid=177314, cgraph_uid=5294, symbol_order=6080)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::end (struct vector * const this)
{
  struct iterator D.224826;
  struct iterator D.250889;

  <bb 2> :
  _1 = &this->D.177701._M_impl.D.177046._M_finish;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.224826, _1);
  D.250889 = D.224826;
  D.224826 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250889;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9448, decl_uid=213237, cgraph_uid=6080, symbol_order=6866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8660, decl_uid=177310, cgraph_uid=5292, symbol_order=6078)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::begin (struct vector * const this)
{
  struct iterator D.224780;
  struct iterator D.250892;

  <bb 2> :
  _1 = &this->D.177701._M_impl.D.177046._M_start;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.224780, _1);
  D.250892 = D.224780;
  D.224780 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250892;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8661, decl_uid=213256, cgraph_uid=5293, symbol_order=6079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.250897;
  struct __normal_iterator D.250896;
  struct __normal_iterator D.250895;

  <bb 2> :
  D.250896 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.250897 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.250895 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.250897, D.250896, __result);

  <bb 3> :
<L0>:
  return D.250895;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9451, decl_uid=224798, cgraph_uid=6084, symbol_order=6870)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_detched_type * D.250901;
  struct __normal_iterator D.250899;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__result);
  _2 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.250901 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_3, _2, _1);
  _4 = D.250901;
  D.250899 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.250899;

}



;; Function std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIP20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10085, decl_uid=234786, cgraph_uid=6717, symbol_order=7507)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  struct pthread_detched_type * D.250902;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.250902 = *_1;

  <bb 3> :
<L0>:
  return D.250902;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9462, decl_uid=213224, cgraph_uid=6094, symbol_order=6880)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_detched_type * const & D.250904;

  <bb 2> :
  D.250904 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250904;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10087, decl_uid=234793, cgraph_uid=6719, symbol_order=7509)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __from, struct pthread_detched_type * __res)
{
  struct __normal_iterator D.250906;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.250906 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.250906;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10572, decl_uid=213215, cgraph_uid=7204, symbol_order=7994)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_detched_type * const D.243475;
  struct __normal_iterator D.243476;
  struct __normal_iterator D.250908;

  <bb 2> :
  _1 = this->_M_current;
  __n.931_2 = (long unsigned int) __n;
  _3 = __n.931_2 * 16;
  _4 = _1 + _3;
  D.243475 = _4;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.243476, &D.243475);
  D.250908 = D.243476;
  D.243476 = {CLOBBER};
  D.243475 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.250908;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8663, decl_uid=213262, cgraph_uid=5295, symbol_order=6081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.224829)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9453, decl_uid=224831, cgraph_uid=6085, symbol_order=6871)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10088, decl_uid=234817, cgraph_uid=6720, symbol_order=7510)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator D.240175, struct __normal_iterator D.240176)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_detched_type*, pthread_detched_type*> (_ZSt4copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=8664, decl_uid=213270, cgraph_uid=5296, symbol_order=6082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250914;
  struct pthread_detched_type * D.250912;

  <bb 2> :
  _1 = std::__miter_base<pthread_detched_type*> (__last);
  _2 = std::__miter_base<pthread_detched_type*> (__first);
  D.250914 = std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_2, _1, __result);
  D.250912 = D.250914;

  <bb 3> :
<L0>:
  return D.250912;

}



;; Function std::__miter_base<pthread_detched_type*> (_ZSt12__miter_baseIP20pthread_detched_typeET_S2_, funcdef_no=9454, decl_uid=224847, cgraph_uid=6086, symbol_order=6872)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__miter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.250915;

  <bb 2> :
  D.250915 = __it;

  <bb 3> :
<L0>:
  return D.250915;

}



;; Function std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_ZSt13__copy_move_aILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=9455, decl_uid=224849, cgraph_uid=6087, symbol_order=6873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250919;
  struct pthread_detched_type * D.250917;

  <bb 2> :
  __result.932_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.932_1);
  _3 = std::__niter_base<pthread_detched_type*> (__last);
  _4 = std::__niter_base<pthread_detched_type*> (__first);
  D.250919 = std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.250919;
  D.250917 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250917;

}



;; Function std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10090, decl_uid=234828, cgraph_uid=6722, symbol_order=7512)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250922;
  struct pthread_detched_type * D.250920;

  <bb 2> :
  D.250922 = std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.250920 = D.250922;

  <bb 3> :
<L0>:
  return D.250920;

}



;; Function std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10573, decl_uid=240184, cgraph_uid=7205, symbol_order=7995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250923;

  <bb 2> :
  D.250923 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250923;

}



;; Function std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIP20pthread_detched_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8665, decl_uid=213274, cgraph_uid=5297, symbol_order=6083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.224856)
{
  struct pthread_detched_type * D.250927;
  struct pthread_detched_type * D.250925;

  <bb 2> :
  D.250927 = std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.250925 = D.250927;

  <bb 3> :
<L0>:
  return D.250925;

}



;; Function std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (_ZSt18uninitialized_copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=9456, decl_uid=224858, cgraph_uid=6088, symbol_order=6874)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250930;
  const bool __assignable;
  struct pthread_detched_type * D.250928;

  <bb 2> :
  __assignable = 1;
  D.250930 = std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.250928 = D.250930;

  <bb 3> :
<L0>:
  return D.250928;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP20pthread_detched_typeS3_EET0_T_S5_S4_, funcdef_no=10092, decl_uid=234866, cgraph_uid=6724, symbol_order=7514)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250933;
  struct pthread_detched_type * D.250931;

  <bb 2> :
  D.250933 = std::copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.250931 = D.250933;

  <bb 3> :
<L0>:
  return D.250931;

}



;; Function std::vector<pthread_detched_type>::push_back (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE9push_backERKS0_, funcdef_no=7742, decl_uid=177381, cgraph_uid=4375, symbol_order=5157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_detched_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.250937;

  <bb 2> :
  _1 = this->D.177701._M_impl.D.177046._M_finish;
  _2 = this->D.177701._M_impl.D.177046._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.177701._M_impl.D.177046._M_finish;
  _4 = &this->D.177701._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_4, _3, __x);
  _5 = this->D.177701._M_impl.D.177046._M_finish;
  _6 = _5 + 16;
  this->D.177701._M_impl.D.177046._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.250937 = std::vector<pthread_detched_type>::end (this);
  std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (this, D.250937, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8666, decl_uid=213286, cgraph_uid=5298, symbol_order=6084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (struct allocator_type & __a, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_detched_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_detched_type&> (_ZSt7forwardIRK20pthread_detched_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9457, decl_uid=224873, cgraph_uid=6089, symbol_order=6875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_detched_type & std::forward<const pthread_detched_type&> (const struct type & __t)
{
  const struct pthread_detched_type & D.250938;

  <bb 2> :
  D.250938 = __t;

  <bb 3> :
<L0>:
  return D.250938;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9458, decl_uid=224875, cgraph_uid=6090, symbol_order=6876)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (struct new_allocator * const this, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  void * D.234878;
  void * D.234877;
  const struct pthread_detched_type * D.234879;

  <bb 2> :
  D.234879 = std::forward<const pthread_detched_type&> (__args#0);
  D.234877 = __p;
  D.234878 = operator new (16, D.234877);
  MEM[(struct pthread_detched_type *)D.234878] = *D.234879;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8667, decl_uid=213455, cgraph_uid=5302, symbol_order=6088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (struct vector * const this, struct iterator __position, const struct pthread_detched_type & __args#0)
{
  struct pthread_detched_type * D.250944;
  const size_type D.250943;
  struct pthread_detched_type * __new_finish;
  struct pthread_detched_type * __new_start;
  const size_type __elems_before;
  struct pthread_detched_type * __old_finish;
  struct pthread_detched_type * __old_start;
  const size_type __len;
  struct iterator D.224886;

  <bb 2> :
  D.250943 = std::vector<pthread_detched_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.250943;
  __old_start = this->D.177701._M_impl.D.177046._M_start;
  __old_finish = this->D.177701._M_impl.D.177046._M_finish;
  D.224886 = std::vector<pthread_detched_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (&__position, &D.224886);
  __elems_before = (const size_type) _1;
  D.224886 = {CLOBBER};
  _2 = &this->D.177701;
  D.250944 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_2, __len);
  __new_start = D.250944;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_detched_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.177701._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.177701;
  _8 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.177701;
  _12 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.177701;
  _23 = this->D.177701._M_impl.D.177046._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.177701._M_impl.D.177046._M_start = __new_start;
  this->D.177701._M_impl.D.177046._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.177701._M_impl.D.177046._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_check_len (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9459, decl_uid=177550, cgraph_uid=6091, symbol_order=6877)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_detched_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.935;
  size_type D.250948;
  const long unsigned int D.234884;
  bool retval.933;

  <bb 2> :
  _1 = std::vector<pthread_detched_type>::max_size (this);
  _2 = std::vector<pthread_detched_type>::size (this);
  _3 = _1 - _2;
  __n.934_4 = __n;
  retval.933 = _3 < __n.934_4;
  if (retval.933 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_detched_type>::size (this);
  _6 = std::vector<pthread_detched_type>::size (this);
  D.234884 = _6;
  _7 = std::max<long unsigned int> (&D.234884, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234884 = {CLOBBER};
  _9 = std::vector<pthread_detched_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_detched_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.935 = std::vector<pthread_detched_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.935 = __len;

  <bb 8> :
  D.250948 = iftmp.935;

  <bb 9> :
<L6>:
  return D.250948;

}



;; Function std::vector<pthread_detched_type>::max_size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8max_sizeEv, funcdef_no=10093, decl_uid=177336, cgraph_uid=6725, symbol_order=7515)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::max_size (const struct vector * const this)
{
  size_type D.250955;

  <bb 2> :
  _1 = &this->D.177701;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  D.250955 = std::vector<pthread_detched_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.250955;

}



;; Function std::vector<pthread_detched_type>::_S_max_size (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10574, decl_uid=177557, cgraph_uid=7206, symbol_order=7996)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.250957;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.250957 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250957;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8max_sizeERKS1_, funcdef_no=10801, decl_uid=176871, cgraph_uid=7433, symbol_order=8225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.250960;

  <bb 2> :
  D.250960 = __gnu_cxx::new_allocator<pthread_detched_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.250960;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE8max_sizeEv, funcdef_no=10904, decl_uid=176713, cgraph_uid=7536, symbol_order=8328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::max_size (const struct new_allocator * const this)
{
  size_type D.250962;

  <bb 2> :
  D.250962 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.250962;

}



;; Function __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZN9__gnu_cxxmiIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9460, decl_uid=224887, cgraph_uid=6092, symbol_order=6878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.250964;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.250964 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.250964;

}



;; Function std::vector<pthread_detched_type>::_S_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9461, decl_uid=177208, cgraph_uid=6093, symbol_order=6879)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.250967;
  struct pthread_detched_type * D.250966;

  <bb 2> :
  D.250966 = std::vector<pthread_detched_type>::_S_do_relocate (__first, __last, __result, __alloc, D.250967);

  <bb 3> :
<L0>:
  return D.250966;

}



;; Function std::vector<pthread_detched_type>::_S_do_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10094, decl_uid=177196, cgraph_uid=6726, symbol_order=7516)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_do_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240200)
{
  struct pthread_detched_type * D.250969;

  <bb 2> :
  D.250969 = std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.250969;

}



;; Function std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (_ZSt12__relocate_aIP20pthread_detched_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10575, decl_uid=225052, cgraph_uid=7207, symbol_order=7997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & __alloc)
{
  struct pthread_detched_type * D.250971;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*> (__result);
  _2 = std::__niter_base<pthread_detched_type*> (__last);
  _3 = std::__niter_base<pthread_detched_type*> (__first);
  D.250971 = std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.250971;

}



;; Function std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_ZSt14__relocate_a_1I20pthread_detched_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10802, decl_uid=225226, cgraph_uid=7434, symbol_order=8226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.244567)
{
  ptrdiff_t __count;
  struct pthread_detched_type * D.250976;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.936_2 = (long unsigned int) __count;
  _3 = __count.936_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.937_4 = (long unsigned int) __count;
  _5 = __count.937_4 * 16;
  D.250976 = __result + _5;

  <bb 5> :
<L3>:
  return D.250976;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::put (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7744, decl_uid=193256, cgraph_uid=4376, symbol_order=5158)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_detched_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_detched_array & v)
{
  bool D.250985;
  struct hash_entry * D.250984;
  unsigned int D.250983;
  bool ins;
  struct hash_entry * e;
  bool D.250981;
  void * D.213465;
  void * D.213464;

  <bb 2> :
  _1 = &this->m_table;
  D.250983 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.250983;
  D.250984 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.250984;
  D.250985 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (e);
  ins = D.250985;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213464 = &e->m_value;
  D.213465 = operator new (24, D.213464);
  function_pthread_detched_array::function_pthread_detched_array (D.213465, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_detched_array::operator= (_4, v);

  <bb 5> :
  D.250981 = ~ins;

  <bb 6> :
<L3>:
  return D.250981;

  <bb 7> :
<L4>:
  operator delete (D.213465, D.213464);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8671, decl_uid=193414, cgraph_uid=5303, symbol_order=6089)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251036;
  bool D.251035;
  bool D.251034;
  bool D.251033;
  bool D.251032;
  bool D.251031;
  struct value_type * D.251030;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.943;
  bool retval.942;
  bool retval.941;
  bool retval.940;
  bool retval.939;
  bool retval.938;
  struct value_type * D.250992;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.251031 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.938 = D.251031;
  if (retval.938 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251032 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.939 = D.251032;
  if (retval.939 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251033 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.940 = D.251033;
  if (retval.940 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.250992 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.251034 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.941 = D.251034;
  if (retval.941 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251035 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.942 = D.251035;
  if (retval.942 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251036 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.943 = D.251036;
  if (retval.943 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.250992 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.250992 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.250992 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.250992 = _37 + _39;

  <bb 27> :
<L37>:
  return D.250992;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9464, decl_uid=193495, cgraph_uid=6108, symbol_order=6894)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251067;
  unsigned int D.251066;
  bool D.251065;
  bool D.251064;
  struct mem_alloc_description & D.251063;
  struct value_type * D.251062;
  unsigned int D.251061;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234922;
  void * D.234921;
  struct hash_entry & D.234959;
  bool iftmp.947;
  bool retval.946;
  bool iftmp.945;
  bool retval.944;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.945 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.945 = 0;

  <bb 6> :
  retval.944 = iftmp.945;
  if (retval.944 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251061 = hash_table_higher_prime_index (_5);
  nindex = D.251061;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251062 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251062;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251064 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251064;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251065 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251065;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.947 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.947 = 0;

  <bb 15> :
  retval.946 = iftmp.947;
  if (retval.946 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251066 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (x);
  _16 = D.251066;
  D.251067 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251067;
  D.234959 = std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (x);
  D.234921 = q;
  D.234922 = operator new (32, D.234921);
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (D.234922, D.234959);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10096, decl_uid=193390, cgraph_uid=6728, symbol_order=7518)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251068;

  <bb 2> :
  D.251068 = this->m_size;

  <bb 3> :
<L0>:
  return D.251068;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10097, decl_uid=193392, cgraph_uid=6729, symbol_order=7519)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251070;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251070 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251070;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10098, decl_uid=193492, cgraph_uid=6730, symbol_order=7520)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.948;
  bool D.251072;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.948 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.948 = 0;

  <bb 6> :
  D.251072 = iftmp.948;

  <bb 7> :
<L4>:
  return D.251072;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9320, decl_uid=193482, cgraph_uid=5952, symbol_order=6738)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.251094;
  struct value_type * D.251093;
  struct mem_alloc_description & D.251092;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.251090;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.251093 = xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (n);
  nentries = D.251093;
  goto <bb 6>; [INV]

  <bb 5> :
  D.251094 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (n);
  nentries = D.251094;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.251090 = nentries;

  <bb 9> :
<L14>:
  return D.251090;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10002, decl_uid=216772, cgraph_uid=6634, symbol_order=7424)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.251097;
  struct hash_entry * D.251095;

  <bb 2> :
  D.251097 = xcalloc (count, 32);
  D.251095 = D.251097;

  <bb 3> :
<L0>:
  return D.251095;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10003, decl_uid=233428, cgraph_uid=6635, symbol_order=7425)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.251104;
  struct hash_entry * D.251103;
  struct hash_entry * D.251101;
  bool retval.949;

  <bb 2> :
  retval.949 = need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ();
  if (retval.949 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.251103 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.251101 = D.251103;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.251104 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.251101 = D.251104;

  <bb 5> :
<L2>:
  return D.251101;

}



;; Function finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10512, decl_uid=239811, cgraph_uid=7147, symbol_order=7937)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10514, decl_uid=243197, cgraph_uid=7145, symbol_order=7935)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10511, decl_uid=239810, cgraph_uid=7143, symbol_order=7933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ()
{
  bool D.251105;

  <bb 2> :
  D.251105 = 1;

  <bb 3> :
<L0>:
  return D.251105;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10100, decl_uid=193315, cgraph_uid=6732, symbol_order=7522)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251109;
  hashval_t D.251107;

  <bb 2> :
  _1 = &e->m_key;
  D.251109 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_1);
  D.251107 = D.251109;

  <bb 3> :
<L0>:
  return D.251107;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10099, decl_uid=193485, cgraph_uid=6731, symbol_order=7521)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251122;
  bool D.251121;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.951;
  struct value_type * D.251113;
  bool retval.950;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.251121 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.950 = D.251121;
  if (retval.950 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251113 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.251122 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.951 = D.251122;
  if (retval.951 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251113 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251113;

}



;; Function std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10101, decl_uid=234919, cgraph_uid=6733, symbol_order=7523)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251123;

  <bb 2> :
  D.251123 = __t;

  <bb 3> :
<L0>:
  return D.251123;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9475, decl_uid=234944, cgraph_uid=6106, symbol_order=6892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234946)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234946->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234946->m_value;
  function_pthread_detched_array::function_pthread_detched_array (_2, _3);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2EOS_, funcdef_no=9473, decl_uid=193607, cgraph_uid=6103, symbol_order=6889)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, struct function_pthread_detched_array & D.193609)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193609->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9471, decl_uid=177658, cgraph_uid=6100, symbol_order=6886)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this, struct vector & D.177660)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177701;
  _2 = &D.177660->D.177701;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9469, decl_uid=177126, cgraph_uid=6097, symbol_order=6883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.177128)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.177128->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10103, decl_uid=177032, cgraph_uid=6735, symbol_order=7525)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_detched_type>::allocator (this, _1);
  _2 = &this->D.177046;
  _3 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.177046;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI20pthread_detched_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10576, decl_uid=240230, cgraph_uid=7208, symbol_order=7998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.251125;

  <bb 2> :
  D.251125 = __t;

  <bb 3> :
<L0>:
  return D.251125;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10578, decl_uid=176988, cgraph_uid=7210, symbol_order=8000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8916, decl_uid=216774, cgraph_uid=5548, symbol_order=6334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9477, decl_uid=193503, cgraph_uid=6109, symbol_order=6895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10105, decl_uid=193327, cgraph_uid=6737, symbol_order=7527)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10580, decl_uid=240245, cgraph_uid=7212, symbol_order=8002)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2Ev, funcdef_no=6401, decl_uid=194066, cgraph_uid=3376, symbol_order=4149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6399, decl_uid=178738, cgraph_uid=3373, symbol_order=4146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178746;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6397, decl_uid=178196, cgraph_uid=3370, symbol_order=4143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7746, decl_uid=178088, cgraph_uid=4378, symbol_order=5160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this);
  _1 = &this->D.178091;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2Ev, funcdef_no=8674, decl_uid=177866, cgraph_uid=5306, symbol_order=6092)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2Ev, funcdef_no=9479, decl_uid=177795, cgraph_uid=6111, symbol_order=6897)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_exit_array::operator= (_ZN27function_pthread_exit_arrayaSERKS_, funcdef_no=6403, decl_uid=195575, cgraph_uid=3378, symbol_order=4151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_exit_array & function_pthread_exit_array::operator= (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.195576)
{
  struct function_pthread_exit_array & D.251128;

  <bb 2> :
  _1 = &D.195576->pthread_exit_array;
  _2 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::operator= (_2, _1);
  D.251128 = this;

  <bb 3> :
<L0>:
  return D.251128;

}



;; Function std::vector<pthread_exit_type>::operator= (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEaSERKS2_, funcdef_no=7754, decl_uid=178324, cgraph_uid=4388, symbol_order=5170)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_exit_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.251163;
  struct pthread_exit_type * __tmp;
  const size_type __xlen;
  struct vector & D.251161;
  struct __normal_iterator D.251158;
  struct __normal_iterator D.251157;
  struct __normal_iterator D.251156;
  struct __normal_iterator D.251155;
  struct __normal_iterator D.251154;
  bool retval.956;
  struct __normal_iterator D.251149;
  struct __normal_iterator D.251148;
  bool retval.955;
  bool iftmp.954;
  bool retval.953;
  bool retval.952;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.952 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ();
  if (retval.952 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.178746;
  _4 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.178746;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.954 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.954 = 0;

  <bb 8> :
  retval.953 = iftmp.954;
  if (retval.953 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_exit_type>::clear (this);
  _8 = &this->D.178746;
  _9 = this->D.178746._M_impl.D.178091._M_end_of_storage;
  _10 = this->D.178746._M_impl.D.178091._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.178746._M_impl.D.178091._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_8, _14, _13);
  this->D.178746._M_impl.D.178091._M_start = 0B;
  this->D.178746._M_impl.D.178091._M_finish = 0B;
  this->D.178746._M_impl.D.178091._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.178746;
  _16 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.178746;
  _18 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_exit_type>::size (__x);
  _19 = std::vector<pthread_exit_type>::capacity (this);
  retval.955 = __xlen > _19;
  if (retval.955 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.251148 = std::vector<pthread_exit_type>::end (__x);
  D.251149 = std::vector<pthread_exit_type>::begin (__x);
  D.251163 = std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (this, __xlen, D.251149, D.251148);
  __tmp = D.251163;
  _20 = &this->D.178746;
  _21 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.178746._M_impl.D.178091._M_finish;
  _23 = this->D.178746._M_impl.D.178091._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_23, _22, _21);
  _24 = &this->D.178746;
  _25 = this->D.178746._M_impl.D.178091._M_end_of_storage;
  _26 = this->D.178746._M_impl.D.178091._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.178746._M_impl.D.178091._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_24, _30, _29);
  this->D.178746._M_impl.D.178091._M_start = __tmp;
  _31 = this->D.178746._M_impl.D.178091._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.178746._M_impl.D.178091._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_exit_type>::size (this);
  retval.956 = __xlen <= _34;
  if (retval.956 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.178746;
  _36 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_35);
  D.251154 = std::vector<pthread_exit_type>::end (this);
  D.251155 = std::vector<pthread_exit_type>::begin (this);
  D.251156 = std::vector<pthread_exit_type>::end (__x);
  D.251157 = std::vector<pthread_exit_type>::begin (__x);
  D.251158 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.251157, D.251156, D.251155);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (D.251158, D.251154, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.178746._M_impl.D.178091._M_start;
  _38 = __x->D.178746._M_impl.D.178091._M_start;
  _39 = std::vector<pthread_exit_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.178746._M_impl.D.178091._M_start;
  std::copy<pthread_exit_type*, pthread_exit_type*> (_42, _41, _37);
  _43 = &this->D.178746;
  _44 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.178746._M_impl.D.178091._M_finish;
  _46 = __x->D.178746._M_impl.D.178091._M_finish;
  _47 = __x->D.178746._M_impl.D.178091._M_start;
  _48 = std::vector<pthread_exit_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.178746._M_impl.D.178091._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.178746._M_impl.D.178091._M_finish = _53;

  <bb 17> :
  D.251161 = this;

  <bb 18> :
<L19>:
  return D.251161;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7755, decl_uid=177958, cgraph_uid=4386, symbol_order=5168)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ()
{
  bool D.251164;

  <bb 2> :
  D.251164 = 0;

  <bb 3> :
<L0>:
  return D.251164;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E15_S_always_equalEv, funcdef_no=7756, decl_uid=177961, cgraph_uid=4387, symbol_order=5169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ()
{
  bool D.251166;

  <bb 2> :
  D.251166 = 1;

  <bb 3> :
<L0>:
  return D.251166;

}



;; Function std::operator!= (_ZStneRKSaI17pthread_exit_typeES2_, funcdef_no=8683, decl_uid=177844, cgraph_uid=5315, symbol_order=6101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.225445, const struct allocator & D.225446)
{
  bool D.251168;

  <bb 2> :
  D.251168 = 0;

  <bb 3> :
<L0>:
  return D.251168;

}



;; Function std::vector<pthread_exit_type>::clear (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5clearEv, funcdef_no=8684, decl_uid=178476, cgraph_uid=5316, symbol_order=6102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.178746._M_impl.D.178091._M_start;
  std::vector<pthread_exit_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_exit_type>::_M_erase_at_end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9482, decl_uid=178604, cgraph_uid=6114, symbol_order=6900)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_exit_type>::_M_erase_at_end (struct vector * const this, struct pthread_exit_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.178746._M_impl.D.178091._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.178746;
  _5 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.178746._M_impl.D.178091._M_finish;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (__pos, _6, _5);
  this->D.178746._M_impl.D.178091._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_ZSt15__alloc_on_copyISaI17pthread_exit_typeEEvRT_RKS2_, funcdef_no=8685, decl_uid=213506, cgraph_uid=5317, symbol_order=6103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_exit_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_exit_type>::capacity (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8capacityEv, funcdef_no=8686, decl_uid=178392, cgraph_uid=5318, symbol_order=6104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::capacity (const struct vector * const this)
{
  size_type D.251173;

  <bb 2> :
  _1 = this->D.178746._M_impl.D.178091._M_end_of_storage;
  _2 = this->D.178746._M_impl.D.178091._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.251173 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251173;

}



;; Function std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8687, decl_uid=213513, cgraph_uid=5319, symbol_order=6105)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_exit_type * std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_exit_type * D.251177;
  struct pthread_exit_type * __result;
  struct pthread_exit_type * D.251175;

  <bb 2> :
  _1 = &this->D.178746;
  D.251177 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_1, __n);
  __result = D.251177;
  _2 = &this->D.178746;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (__first, __last, __result, _3);

  <bb 3> :
  D.251175 = __result;

  <bb 4> :
<L0>:
  return D.251175;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.178746;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_exit_type>::end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8690, decl_uid=178359, cgraph_uid=5322, symbol_order=6108)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::end (struct vector * const this)
{
  struct iterator D.225532;
  struct iterator D.251181;

  <bb 2> :
  _1 = &this->D.178746._M_impl.D.178091._M_finish;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.225532, _1);
  D.251181 = D.225532;
  D.225532 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251181;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9485, decl_uid=213595, cgraph_uid=6117, symbol_order=6903)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8688, decl_uid=178355, cgraph_uid=5320, symbol_order=6106)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::begin (struct vector * const this)
{
  struct iterator D.225486;
  struct iterator D.251184;

  <bb 2> :
  _1 = &this->D.178746._M_impl.D.178091._M_start;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.225486, _1);
  D.251184 = D.225486;
  D.225486 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251184;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8689, decl_uid=213614, cgraph_uid=5321, symbol_order=6107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.251189;
  struct __normal_iterator D.251188;
  struct __normal_iterator D.251187;

  <bb 2> :
  D.251188 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.251189 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.251187 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.251189, D.251188, __result);

  <bb 3> :
<L0>:
  return D.251187;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9488, decl_uid=225504, cgraph_uid=6121, symbol_order=6907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_exit_type * D.251193;
  struct __normal_iterator D.251191;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__result);
  _2 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.251193 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_3, _2, _1);
  _4 = D.251193;
  D.251191 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.251191;

}



;; Function std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIP17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10109, decl_uid=235142, cgraph_uid=6741, symbol_order=7531)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  struct pthread_exit_type * D.251194;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.251194 = *_1;

  <bb 3> :
<L0>:
  return D.251194;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9499, decl_uid=213582, cgraph_uid=6131, symbol_order=6917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_exit_type * const & D.251196;

  <bb 2> :
  D.251196 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251196;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10111, decl_uid=235149, cgraph_uid=6743, symbol_order=7533)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __from, struct pthread_exit_type * __res)
{
  struct __normal_iterator D.251198;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.251198 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.251198;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10585, decl_uid=213573, cgraph_uid=7217, symbol_order=8007)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_exit_type * const D.243536;
  struct __normal_iterator D.243537;
  struct __normal_iterator D.251200;

  <bb 2> :
  _1 = this->_M_current;
  __n.957_2 = (long unsigned int) __n;
  _3 = __n.957_2 * 16;
  _4 = _1 + _3;
  D.243536 = _4;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.243537, &D.243536);
  D.251200 = D.243537;
  D.243537 = {CLOBBER};
  D.243536 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.251200;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8691, decl_uid=213620, cgraph_uid=5323, symbol_order=6109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.225535)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9490, decl_uid=225537, cgraph_uid=6122, symbol_order=6908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10112, decl_uid=235173, cgraph_uid=6744, symbol_order=7534)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator D.240270, struct __normal_iterator D.240271)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_exit_type*, pthread_exit_type*> (_ZSt4copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=8692, decl_uid=213628, cgraph_uid=5324, symbol_order=6110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251206;
  struct pthread_exit_type * D.251204;

  <bb 2> :
  _1 = std::__miter_base<pthread_exit_type*> (__last);
  _2 = std::__miter_base<pthread_exit_type*> (__first);
  D.251206 = std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_2, _1, __result);
  D.251204 = D.251206;

  <bb 3> :
<L0>:
  return D.251204;

}



;; Function std::__miter_base<pthread_exit_type*> (_ZSt12__miter_baseIP17pthread_exit_typeET_S2_, funcdef_no=9491, decl_uid=225553, cgraph_uid=6123, symbol_order=6909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__miter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.251207;

  <bb 2> :
  D.251207 = __it;

  <bb 3> :
<L0>:
  return D.251207;

}



;; Function std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_ZSt13__copy_move_aILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=9492, decl_uid=225555, cgraph_uid=6124, symbol_order=6910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251211;
  struct pthread_exit_type * D.251209;

  <bb 2> :
  __result.958_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.958_1);
  _3 = std::__niter_base<pthread_exit_type*> (__last);
  _4 = std::__niter_base<pthread_exit_type*> (__first);
  D.251211 = std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.251211;
  D.251209 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251209;

}



;; Function std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10114, decl_uid=235184, cgraph_uid=6746, symbol_order=7536)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251214;
  struct pthread_exit_type * D.251212;

  <bb 2> :
  D.251214 = std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251212 = D.251214;

  <bb 3> :
<L0>:
  return D.251212;

}



;; Function std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10586, decl_uid=240279, cgraph_uid=7218, symbol_order=8008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251215;

  <bb 2> :
  D.251215 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251215;

}



;; Function std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIP17pthread_exit_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8693, decl_uid=213632, cgraph_uid=5325, symbol_order=6111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.225562)
{
  struct pthread_exit_type * D.251219;
  struct pthread_exit_type * D.251217;

  <bb 2> :
  D.251219 = std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251217 = D.251219;

  <bb 3> :
<L0>:
  return D.251217;

}



;; Function std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (_ZSt18uninitialized_copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=9493, decl_uid=225564, cgraph_uid=6125, symbol_order=6911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251222;
  const bool __assignable;
  struct pthread_exit_type * D.251220;

  <bb 2> :
  __assignable = 1;
  D.251222 = std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251220 = D.251222;

  <bb 3> :
<L0>:
  return D.251220;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP17pthread_exit_typeS3_EET0_T_S5_S4_, funcdef_no=10116, decl_uid=235222, cgraph_uid=6748, symbol_order=7538)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251225;
  struct pthread_exit_type * D.251223;

  <bb 2> :
  D.251225 = std::copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251223 = D.251225;

  <bb 3> :
<L0>:
  return D.251223;

}



;; Function std::vector<pthread_exit_type>::push_back (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE9push_backERKS0_, funcdef_no=7757, decl_uid=178426, cgraph_uid=4390, symbol_order=5172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_exit_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.251229;

  <bb 2> :
  _1 = this->D.178746._M_impl.D.178091._M_finish;
  _2 = this->D.178746._M_impl.D.178091._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.178746._M_impl.D.178091._M_finish;
  _4 = &this->D.178746._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_4, _3, __x);
  _5 = this->D.178746._M_impl.D.178091._M_finish;
  _6 = _5 + 16;
  this->D.178746._M_impl.D.178091._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251229 = std::vector<pthread_exit_type>::end (this);
  std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (this, D.251229, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8694, decl_uid=213644, cgraph_uid=5326, symbol_order=6112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (struct allocator_type & __a, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_exit_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_exit_type&> (_ZSt7forwardIRK17pthread_exit_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9494, decl_uid=225579, cgraph_uid=6126, symbol_order=6912)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_exit_type & std::forward<const pthread_exit_type&> (const struct type & __t)
{
  const struct pthread_exit_type & D.251230;

  <bb 2> :
  D.251230 = __t;

  <bb 3> :
<L0>:
  return D.251230;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9495, decl_uid=225581, cgraph_uid=6127, symbol_order=6913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (struct new_allocator * const this, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  void * D.235234;
  void * D.235233;
  const struct pthread_exit_type * D.235235;

  <bb 2> :
  D.235235 = std::forward<const pthread_exit_type&> (__args#0);
  D.235233 = __p;
  D.235234 = operator new (16, D.235233);
  MEM[(struct pthread_exit_type *)D.235234] = *D.235235;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8695, decl_uid=213813, cgraph_uid=5330, symbol_order=6116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (struct vector * const this, struct iterator __position, const struct pthread_exit_type & __args#0)
{
  struct pthread_exit_type * D.251236;
  const size_type D.251235;
  struct pthread_exit_type * __new_finish;
  struct pthread_exit_type * __new_start;
  const size_type __elems_before;
  struct pthread_exit_type * __old_finish;
  struct pthread_exit_type * __old_start;
  const size_type __len;
  struct iterator D.225592;

  <bb 2> :
  D.251235 = std::vector<pthread_exit_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251235;
  __old_start = this->D.178746._M_impl.D.178091._M_start;
  __old_finish = this->D.178746._M_impl.D.178091._M_finish;
  D.225592 = std::vector<pthread_exit_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (&__position, &D.225592);
  __elems_before = (const size_type) _1;
  D.225592 = {CLOBBER};
  _2 = &this->D.178746;
  D.251236 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_2, __len);
  __new_start = D.251236;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_exit_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.178746._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.178746;
  _8 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.178746;
  _12 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.178746;
  _23 = this->D.178746._M_impl.D.178091._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.178746._M_impl.D.178091._M_start = __new_start;
  this->D.178746._M_impl.D.178091._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.178746._M_impl.D.178091._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_check_len (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9496, decl_uid=178595, cgraph_uid=6128, symbol_order=6914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_exit_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.961;
  size_type D.251240;
  const long unsigned int D.235240;
  bool retval.959;

  <bb 2> :
  _1 = std::vector<pthread_exit_type>::max_size (this);
  _2 = std::vector<pthread_exit_type>::size (this);
  _3 = _1 - _2;
  __n.960_4 = __n;
  retval.959 = _3 < __n.960_4;
  if (retval.959 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_exit_type>::size (this);
  _6 = std::vector<pthread_exit_type>::size (this);
  D.235240 = _6;
  _7 = std::max<long unsigned int> (&D.235240, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235240 = {CLOBBER};
  _9 = std::vector<pthread_exit_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_exit_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.961 = std::vector<pthread_exit_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.961 = __len;

  <bb 8> :
  D.251240 = iftmp.961;

  <bb 9> :
<L6>:
  return D.251240;

}



;; Function std::vector<pthread_exit_type>::max_size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8max_sizeEv, funcdef_no=10117, decl_uid=178381, cgraph_uid=6749, symbol_order=7539)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::max_size (const struct vector * const this)
{
  size_type D.251247;

  <bb 2> :
  _1 = &this->D.178746;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  D.251247 = std::vector<pthread_exit_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251247;

}



;; Function std::vector<pthread_exit_type>::_S_max_size (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10587, decl_uid=178602, cgraph_uid=7219, symbol_order=8009)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251249;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251249 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251249;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8max_sizeERKS1_, funcdef_no=10804, decl_uid=177916, cgraph_uid=7436, symbol_order=8228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251252;

  <bb 2> :
  D.251252 = __gnu_cxx::new_allocator<pthread_exit_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251252;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE8max_sizeEv, funcdef_no=10905, decl_uid=177758, cgraph_uid=7537, symbol_order=8329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251254;

  <bb 2> :
  D.251254 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251254;

}



;; Function __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZN9__gnu_cxxmiIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9497, decl_uid=225593, cgraph_uid=6129, symbol_order=6915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251256;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251256 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.251256;

}



;; Function std::vector<pthread_exit_type>::_S_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9498, decl_uid=178253, cgraph_uid=6130, symbol_order=6916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251259;
  struct pthread_exit_type * D.251258;

  <bb 2> :
  D.251258 = std::vector<pthread_exit_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251259);

  <bb 3> :
<L0>:
  return D.251258;

}



;; Function std::vector<pthread_exit_type>::_S_do_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10118, decl_uid=178241, cgraph_uid=6750, symbol_order=7540)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_do_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240295)
{
  struct pthread_exit_type * D.251261;

  <bb 2> :
  D.251261 = std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251261;

}



;; Function std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (_ZSt12__relocate_aIP17pthread_exit_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10588, decl_uid=225758, cgraph_uid=7220, symbol_order=8010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & __alloc)
{
  struct pthread_exit_type * D.251263;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*> (__result);
  _2 = std::__niter_base<pthread_exit_type*> (__last);
  _3 = std::__niter_base<pthread_exit_type*> (__first);
  D.251263 = std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251263;

}



;; Function std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_ZSt14__relocate_a_1I17pthread_exit_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10805, decl_uid=225932, cgraph_uid=7437, symbol_order=8229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.244599)
{
  ptrdiff_t __count;
  struct pthread_exit_type * D.251268;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.962_2 = (long unsigned int) __count;
  _3 = __count.962_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.963_4 = (long unsigned int) __count;
  _5 = __count.963_4 * 16;
  D.251268 = __result + _5;

  <bb 5> :
<L3>:
  return D.251268;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::put (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7759, decl_uid=193732, cgraph_uid=4391, symbol_order=5173)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_exit_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_exit_array & v)
{
  bool D.251277;
  struct hash_entry * D.251276;
  unsigned int D.251275;
  bool ins;
  struct hash_entry * e;
  bool D.251273;
  void * D.213823;
  void * D.213822;

  <bb 2> :
  _1 = &this->m_table;
  D.251275 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.251275;
  D.251276 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.251276;
  D.251277 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (e);
  ins = D.251277;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213822 = &e->m_value;
  D.213823 = operator new (24, D.213822);
  function_pthread_exit_array::function_pthread_exit_array (D.213823, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_exit_array::operator= (_4, v);

  <bb 5> :
  D.251273 = ~ins;

  <bb 6> :
<L3>:
  return D.251273;

  <bb 7> :
<L4>:
  operator delete (D.213823, D.213822);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8699, decl_uid=193890, cgraph_uid=5331, symbol_order=6117)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251328;
  bool D.251327;
  bool D.251326;
  bool D.251325;
  bool D.251324;
  bool D.251323;
  struct value_type * D.251322;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.969;
  bool retval.968;
  bool retval.967;
  bool retval.966;
  bool retval.965;
  bool retval.964;
  struct value_type * D.251284;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.251323 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.964 = D.251323;
  if (retval.964 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251324 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.965 = D.251324;
  if (retval.965 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251325 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.966 = D.251325;
  if (retval.966 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.251284 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.251326 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.967 = D.251326;
  if (retval.967 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251327 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.968 = D.251327;
  if (retval.968 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251328 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.969 = D.251328;
  if (retval.969 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.251284 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.251284 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.251284 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.251284 = _37 + _39;

  <bb 27> :
<L37>:
  return D.251284;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9501, decl_uid=193971, cgraph_uid=6145, symbol_order=6931)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251359;
  unsigned int D.251358;
  bool D.251357;
  bool D.251356;
  struct mem_alloc_description & D.251355;
  struct value_type * D.251354;
  unsigned int D.251353;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.235278;
  void * D.235277;
  struct hash_entry & D.235315;
  bool iftmp.973;
  bool retval.972;
  bool iftmp.971;
  bool retval.970;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.971 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.971 = 0;

  <bb 6> :
  retval.970 = iftmp.971;
  if (retval.970 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251353 = hash_table_higher_prime_index (_5);
  nindex = D.251353;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251354 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251354;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251356 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251356;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251357 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251357;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.973 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.973 = 0;

  <bb 15> :
  retval.972 = iftmp.973;
  if (retval.972 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251358 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (x);
  _16 = D.251358;
  D.251359 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251359;
  D.235315 = std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (x);
  D.235277 = q;
  D.235278 = operator new (32, D.235277);
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (D.235278, D.235315);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10120, decl_uid=193866, cgraph_uid=6752, symbol_order=7542)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251360;

  <bb 2> :
  D.251360 = this->m_size;

  <bb 3> :
<L0>:
  return D.251360;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10121, decl_uid=193868, cgraph_uid=6753, symbol_order=7543)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251362;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251362 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251362;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10122, decl_uid=193968, cgraph_uid=6754, symbol_order=7544)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.974;
  bool D.251364;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.974 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.974 = 0;

  <bb 6> :
  D.251364 = iftmp.974;

  <bb 7> :
<L4>:
  return D.251364;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9333, decl_uid=193958, cgraph_uid=5965, symbol_order=6751)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.251386;
  struct value_type * D.251385;
  struct mem_alloc_description & D.251384;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.251382;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.251385 = xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (n);
  nentries = D.251385;
  goto <bb 6>; [INV]

  <bb 5> :
  D.251386 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (n);
  nentries = D.251386;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.251382 = nentries;

  <bb 9> :
<L14>:
  return D.251382;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10010, decl_uid=216796, cgraph_uid=6642, symbol_order=7432)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.251389;
  struct hash_entry * D.251387;

  <bb 2> :
  D.251389 = xcalloc (count, 32);
  D.251387 = D.251389;

  <bb 3> :
<L0>:
  return D.251387;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10011, decl_uid=233597, cgraph_uid=6643, symbol_order=7433)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.251396;
  struct hash_entry * D.251395;
  struct hash_entry * D.251393;
  bool retval.975;

  <bb 2> :
  retval.975 = need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ();
  if (retval.975 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.251395 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.251393 = D.251395;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.251396 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.251393 = D.251396;

  <bb 5> :
<L2>:
  return D.251393;

}



;; Function finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10521, decl_uid=239847, cgraph_uid=7156, symbol_order=7946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10523, decl_uid=243232, cgraph_uid=7154, symbol_order=7944)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10520, decl_uid=239846, cgraph_uid=7152, symbol_order=7942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ()
{
  bool D.251397;

  <bb 2> :
  D.251397 = 1;

  <bb 3> :
<L0>:
  return D.251397;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10124, decl_uid=193791, cgraph_uid=6756, symbol_order=7546)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251401;
  hashval_t D.251399;

  <bb 2> :
  _1 = &e->m_key;
  D.251401 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_1);
  D.251399 = D.251401;

  <bb 3> :
<L0>:
  return D.251399;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10123, decl_uid=193961, cgraph_uid=6755, symbol_order=7545)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251414;
  bool D.251413;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.977;
  struct value_type * D.251405;
  bool retval.976;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.251413 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.976 = D.251413;
  if (retval.976 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251405 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.251414 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.977 = D.251414;
  if (retval.977 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251405 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251405;

}



;; Function std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10125, decl_uid=235275, cgraph_uid=6757, symbol_order=7547)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251415;

  <bb 2> :
  D.251415 = __t;

  <bb 3> :
<L0>:
  return D.251415;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9512, decl_uid=235300, cgraph_uid=6143, symbol_order=6929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.235302)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.235302->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.235302->m_value;
  function_pthread_exit_array::function_pthread_exit_array (_2, _3);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2EOS_, funcdef_no=9510, decl_uid=194083, cgraph_uid=6140, symbol_order=6926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, struct function_pthread_exit_array & D.194085)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194085->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9508, decl_uid=178703, cgraph_uid=6137, symbol_order=6923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this, struct vector & D.178705)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178746;
  _2 = &D.178705->D.178746;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9506, decl_uid=178171, cgraph_uid=6134, symbol_order=6920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.178173)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.178173->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10127, decl_uid=178077, cgraph_uid=6759, symbol_order=7549)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_exit_type>::allocator (this, _1);
  _2 = &this->D.178091;
  _3 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.178091;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI17pthread_exit_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10589, decl_uid=240325, cgraph_uid=7221, symbol_order=8011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.251417;

  <bb 2> :
  D.251417 = __t;

  <bb 3> :
<L0>:
  return D.251417;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10591, decl_uid=178033, cgraph_uid=7223, symbol_order=8013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8920, decl_uid=216798, cgraph_uid=5552, symbol_order=6338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9514, decl_uid=193979, cgraph_uid=6146, symbol_order=6932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10129, decl_uid=193803, cgraph_uid=6761, symbol_order=7551)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10593, decl_uid=240340, cgraph_uid=7225, symbol_order=8015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<assign_type>::push_back (_ZNSt6vectorI11assign_typeSaIS0_EE9push_backERKS0_, funcdef_no=7713, decl_uid=175283, cgraph_uid=4346, symbol_order=5128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<assign_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.251423;

  <bb 2> :
  _1 = this->D.175603._M_impl.D.174948._M_finish;
  _2 = this->D.175603._M_impl.D.174948._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.175603._M_impl.D.174948._M_finish;
  _4 = &this->D.175603._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_4, _3, __x);
  _5 = this->D.175603._M_impl.D.174948._M_finish;
  _6 = _5 + 24;
  this->D.175603._M_impl.D.174948._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251423 = std::vector<assign_type>::end (this);
  std::vector<assign_type>::_M_realloc_insert<const assign_type&> (this, D.251423, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_ZNSt16allocator_traitsISaI11assign_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8612, decl_uid=212577, cgraph_uid=5244, symbol_order=6030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (struct allocator_type & __a, struct assign_type * __p, const struct assign_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const assign_type&> (__args#0);
  __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const assign_type&> (_ZSt7forwardIRK11assign_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9397, decl_uid=223446, cgraph_uid=6029, symbol_order=6815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct assign_type & std::forward<const assign_type&> (const struct type & __t)
{
  const struct assign_type & D.251424;

  <bb 2> :
  D.251424 = __t;

  <bb 3> :
<L0>:
  return D.251424;

}



;; Function __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (_ZN9__gnu_cxx13new_allocatorI11assign_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9398, decl_uid=223448, cgraph_uid=6030, symbol_order=6816)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (struct new_allocator * const this, struct assign_type * __p, const struct assign_type & __args#0)
{
  void * D.234229;
  void * D.234228;
  const struct assign_type * D.234230;

  <bb 2> :
  D.234230 = std::forward<const assign_type&> (__args#0);
  D.234228 = __p;
  D.234229 = operator new (24, D.234228);
  MEM[(struct assign_type *)D.234229] = *D.234230;
  return;

}



;; Function std::vector<assign_type>::_M_realloc_insert<const assign_type&> (_ZNSt6vectorI11assign_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8613, decl_uid=212746, cgraph_uid=5248, symbol_order=6034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_realloc_insert<const assign_type&> (struct vector * const this, struct iterator __position, const struct assign_type & __args#0)
{
  struct assign_type * D.251430;
  const size_type D.251429;
  struct assign_type * __new_finish;
  struct assign_type * __new_start;
  const size_type __elems_before;
  struct assign_type * __old_finish;
  struct assign_type * __old_start;
  const size_type __len;
  struct iterator D.223459;

  <bb 2> :
  D.251429 = std::vector<assign_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251429;
  __old_start = this->D.175603._M_impl.D.174948._M_start;
  __old_finish = this->D.175603._M_impl.D.174948._M_finish;
  D.223459 = std::vector<assign_type>::begin (this);
  _1 = __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (&__position, &D.223459);
  __elems_before = (const size_type) _1;
  D.223459 = {CLOBBER};
  _2 = &this->D.175603;
  D.251430 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_2, __len);
  __new_start = D.251430;
  __new_finish = __new_start;
  _3 = std::forward<const assign_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.175603._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.175603;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<assign_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.175603;
  _12 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<assign_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.175603;
  _23 = this->D.175603._M_impl.D.174948._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.175603._M_impl.D.174948._M_start = __new_start;
  this->D.175603._M_impl.D.174948._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.175603._M_impl.D.174948._M_end_of_storage = _28;
  return;

}



;; Function std::vector<assign_type>::_M_check_len (_ZNKSt6vectorI11assign_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9399, decl_uid=175452, cgraph_uid=6031, symbol_order=6817)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<assign_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.980;
  size_type D.251434;
  const long unsigned int D.234235;
  bool retval.978;

  <bb 2> :
  _1 = std::vector<assign_type>::max_size (this);
  _2 = std::vector<assign_type>::size (this);
  _3 = _1 - _2;
  __n.979_4 = __n;
  retval.978 = _3 < __n.979_4;
  if (retval.978 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<assign_type>::size (this);
  _6 = std::vector<assign_type>::size (this);
  D.234235 = _6;
  _7 = std::max<long unsigned int> (&D.234235, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234235 = {CLOBBER};
  _9 = std::vector<assign_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<assign_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.980 = std::vector<assign_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.980 = __len;

  <bb 8> :
  D.251434 = iftmp.980;

  <bb 9> :
<L6>:
  return D.251434;

}



;; Function std::vector<assign_type>::max_size (_ZNKSt6vectorI11assign_typeSaIS0_EE8max_sizeEv, funcdef_no=10055, decl_uid=175238, cgraph_uid=6687, symbol_order=7477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::max_size (const struct vector * const this)
{
  size_type D.251441;

  <bb 2> :
  _1 = &this->D.175603;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  D.251441 = std::vector<assign_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251441;

}



;; Function std::vector<assign_type>::_S_max_size (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10552, decl_uid=175459, cgraph_uid=7184, symbol_order=7974)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251443;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<assign_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251443 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251443;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::max_size (_ZNSt16allocator_traitsISaI11assign_typeEE8max_sizeERKS1_, funcdef_no=10794, decl_uid=174773, cgraph_uid=7426, symbol_order=8218)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<assign_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251446;

  <bb 2> :
  D.251446 = __gnu_cxx::new_allocator<assign_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251446;

}



;; Function __gnu_cxx::new_allocator<assign_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE8max_sizeEv, funcdef_no=10901, decl_uid=174615, cgraph_uid=7533, symbol_order=8325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251448;

  <bb 2> :
  D.251448 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251448;

}



;; Function __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (_ZN9__gnu_cxxmiIP11assign_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9400, decl_uid=223460, cgraph_uid=6032, symbol_order=6818)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251450;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251450 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.251450;

}



;; Function std::vector<assign_type>::_S_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9401, decl_uid=175110, cgraph_uid=6033, symbol_order=6819)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251453;
  struct assign_type * D.251452;

  <bb 2> :
  D.251452 = std::vector<assign_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251453);

  <bb 3> :
<L0>:
  return D.251452;

}



;; Function std::vector<assign_type>::_S_do_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10056, decl_uid=175098, cgraph_uid=6688, symbol_order=7478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_do_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240045)
{
  struct assign_type * D.251455;

  <bb 2> :
  D.251455 = std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251455;

}



;; Function std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (_ZSt12__relocate_aIP11assign_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10553, decl_uid=223625, cgraph_uid=7185, symbol_order=7975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & __alloc)
{
  struct assign_type * D.251457;

  <bb 2> :
  _1 = std::__niter_base<assign_type*> (__result);
  _2 = std::__niter_base<assign_type*> (__last);
  _3 = std::__niter_base<assign_type*> (__first);
  D.251457 = std::__relocate_a_1<assign_type, assign_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251457;

}



;; Function std::__relocate_a_1<assign_type, assign_type> (_ZSt14__relocate_a_1I11assign_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10795, decl_uid=223799, cgraph_uid=7427, symbol_order=8219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__relocate_a_1<assign_type, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.244493)
{
  ptrdiff_t __count;
  struct assign_type * D.251462;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.981_2 = (long unsigned int) __count;
  _3 = __count.981_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.982_4 = (long unsigned int) __count;
  _5 = __count.982_4 * 24;
  D.251462 = __result + _5;

  <bb 5> :
<L3>:
  return D.251462;

}



;; Function collect_function_return (_Z23collect_function_returnP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6404, decl_uid=187015, cgraph_uid=3380, symbol_order=4153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 14 3 }
;; 3 succs { 4 6 }
;; 4 succs { 14 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 13 8 }
;; 8 succs { 13 9 }
;; 9 succs { 13 10 }
;; 10 succs { 13 11 }
;; 11 succs { 13 12 }
;; 12 succs { 1 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { }
void collect_function_return (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  struct function * D.251470;
  struct greturn * D.251469;
  struct greturn * D.251468;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_return_tree;
  struct function_return_array fun_array;
  bool retval.983;

  <bb 2> :
  function_return_array::function_return_array (&fun_array);
  D.251468 = as_a<greturn*, gimple> (gc);

  <bb 3> :
  _1 = D.251468;
  _2 = gimple_return_retval (_1);
  retval.983 = _2 != 0B;
  if (retval.983 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  D.251469 = as_a<greturn*, gimple> (gc);

  <bb 5> :
  _3 = D.251469;
  get_function_return_tree = gimple_return_retval (_3);
  goto <bb 7>; [INV]

  <bb 6> :
  get_function_return_tree = 0B;

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array);
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);

  <bb 8> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 9> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 10> :
  function_return_collect.984_4 = function_return_collect;
  D.251470 = cgraph_node::get_fun (node);

  <bb 11> :
  _5 = D.251470;
  _6 = &_5->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.984_4, _6, &fun_array);

  <bb 12> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  return;

  <bb 13> :
<L3>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 14> :
<L4>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 15> :
<L5>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 1

}



;; Function as_a<greturn*, gimple> (_Z4as_aIP7greturn6gimpleET_PT0_, funcdef_no=7760, decl_uid=195753, cgraph_uid=4392, symbol_order=5174)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * as_a<greturn*, gimple> (struct gimple * p)
{
  struct greturn * D.251474;

  <bb 2> :
  D.251474 = reinterpret_is_a_helper<greturn*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.251474;

}



;; Function reinterpret_is_a_helper<greturn*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7greturnE4castI6gimpleEES1_PT_, funcdef_no=8702, decl_uid=213830, cgraph_uid=5334, symbol_order=6120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * reinterpret_is_a_helper<greturn*>::cast<gimple> (struct gimple * p)
{
  struct greturn * D.251476;

  <bb 2> :
  D.251476 = p;

  <bb 3> :
<L0>:
  return D.251476;

}



;; Function gimple_return_retval (_ZL20gimple_return_retvalPK7greturn, funcdef_no=2464, decl_uid=94269, cgraph_uid=1601, symbol_order=1761)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_return_retval (const struct greturn * gs)
{
  union tree_node * D.251478;

  <bb 2> :
  D.251478 = gs->D.90483.op[0];

  <bb 3> :
<L0>:
  return D.251478;

}



;; Function FunctionStmtMappingRet (_Z22FunctionStmtMappingRetP3ptbS0_P12gimple_array, funcdef_no=6405, decl_uid=187019, cgraph_uid=3381, symbol_order=4154)

Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 55
Removing basic block 69
Removing basic block 70
Removing basic block 76
Removing basic block 82
Merging blocks 83 and 85
Removing basic block 86
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
;;
;; Loop 1
;;  header 81, latch 80
;;  depth 1, outer 0
;;  nodes: 81 80 78 79 77 6 76 75 8 7 74 73 19 72 71 23 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32 21 22 20 18 17 16 15 13 12 11 10 9 14
;;
;; Loop 2
;;  header 71, latch 70
;;  depth 2, outer 1
;;  nodes: 71 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 81 }
;; 6 succs { 7 77 }
;; 7 succs { 88 8 }
;; 8 succs { 9 77 }
;; 9 succs { 87 10 }
;; 10 succs { 87 11 }
;; 11 succs { 87 12 }
;; 12 succs { 87 13 }
;; 13 succs { 14 15 }
;; 14 succs { 76 }
;; 15 succs { 87 16 }
;; 16 succs { 87 17 }
;; 17 succs { 87 18 }
;; 18 succs { 19 20 }
;; 19 succs { 73 }
;; 20 succs { 86 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 71 }
;; 24 succs { 25 52 }
;; 25 succs { 26 70 }
;; 26 succs { 31 27 }
;; 27 succs { 31 28 }
;; 28 succs { 31 29 }
;; 29 succs { 31 30 }
;; 30 succs { 31 42 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 41 }
;; 36 succs { 37 41 }
;; 37 succs { 85 38 }
;; 38 succs { 39 41 }
;; 39 succs { 85 40 }
;; 40 succs { 85 41 }
;; 41 succs { 51 }
;; 42 succs { 44 43 }
;; 43 succs { 44 51 }
;; 44 succs { 45 51 }
;; 45 succs { 83 46 }
;; 46 succs { 83 47 }
;; 47 succs { 48 50 }
;; 48 succs { 83 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 70 }
;; 52 succs { 53 65 }
;; 53 succs { 54 70 }
;; 54 succs { 85 55 }
;; 55 succs { 85 56 }
;; 56 succs { 58 57 }
;; 57 succs { 58 70 }
;; 58 succs { 59 70 }
;; 59 succs { 84 60 }
;; 60 succs { 84 61 }
;; 61 succs { 62 64 }
;; 62 succs { 84 63 }
;; 63 succs { 64 }
;; 64 succs { 70 }
;; 65 succs { 66 70 }
;; 66 succs { 85 67 }
;; 67 succs { 68 70 }
;; 68 succs { 85 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 24 72 }
;; 72 succs { 73 }
;; 73 succs { 76 74 }
;; 74 succs { 75 }
;; 75 succs { 77 }
;; 76 succs { 77 }
;; 77 succs { 78 79 }
;; 78 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 81 }
;; 81 succs { 6 82 }
;; 82 succs { 1 }
;; 83 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 86 }
;; 86 succs { 87 }
;; 87 succs { 88 }
;; 88 succs { }
void FunctionStmtMappingRet (struct ptb * ptable, struct ptb * ftable, struct gimple_array * user_tmp)
{
  int finally_tmp.1010;
  union tree_node * D.251587;
  struct pthread_attr_array * D.251585;
  struct pthread_attr_array * D.251584;
  union tree_node * D.251583;
  const char * D.251582;
  union tree_node * D.251581;
  struct pthread_attr_array * D.251579;
  struct pthread_attr_array * D.251578;
  union tree_node * D.251577;
  struct function * D.251576;
  bool D.251575;
  struct function_return_array * D.251574;
  struct function * D.251573;
  struct function_return_array * D.251572;
  struct function * D.251571;
  const char * D.251570;
  union tree_node * D.251569;
  struct gimple_array * D.251568;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  const char * name;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  int i;
  struct gimple * def_stmt;
  union tree_node * second;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  const char * name;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.1009;
  bool retval.1008;
  bool retval.1007;
  bool retval.1006;
  bool retval.1003;
  bool retval.1001;
  bool retval.996;
  bool retval.994;
  bool retval.993;
  bool iftmp.992;
  bool retval.991;
  bool retval.990;
  bool retval.987;
  union tree_node * iftmp.985;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.985 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.985 = 0B;

  <bb 5> :
  t = iftmp.985;
  goto <bb 81>; [INV]

  <bb 6> :
  _1 = table_temp->target;
  if (_1 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 7> :
  treeGimpleArray.986_2 = treeGimpleArray;
  _3 = &table_temp->target;
  D.251568 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.986_2, _3);

  <bb 8> :
  user_tmp = D.251568;
  if (user_tmp != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 9> :
  _4 = table_temp->last_stmt;
  D.251569 = gimple_call_fn (_4);

  <bb 10> :
  _5 = D.251569;
  D.251570 = get_name (_5);

  <bb 11> :
  name = D.251570;
  function_return_collect.988_6 = function_return_collect;
  _7 = table_temp->node;
  D.251571 = cgraph_node::get_fun (_7);

  <bb 12> :
  _8 = D.251571;
  _9 = &_8->decl;
  D.251572 = hash_map<tree_node*, function_return_array>::get (function_return_collect.988_6, _9);

  <bb 13> :
  _10 = D.251572;
  retval.987 = _10 == 0B;
  if (retval.987 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  // predicted unlikely by continue predictor.
  goto <bb 76>; [INV]

  <bb 15> :
  function_return_collect.989_11 = function_return_collect;
  _12 = table_temp->node;
  D.251573 = cgraph_node::get_fun (_12);

  <bb 16> :
  _13 = D.251573;
  _14 = &_13->decl;
  D.251574 = hash_map<tree_node*, function_return_array>::get (function_return_collect.989_11, _14);

  <bb 17> :
  _15 = D.251574;
  function_return_array::function_return_array (&fun_array, _15);

  <bb 18> :
  _16 = fun_array.return_type_num;
  if (_16 == 2)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  // predicted unlikely by continue predictor.
  finally_tmp.1010 = 0;
  goto <bb 73>; [INV]

  <bb 20> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 21> :
  _17 = table_temp->target;
  _18 = _17->base.code;
  if (_18 == 131)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _19 = table_temp->target;
  second = _19->exp.operands[0];
  _20 = table_temp->target;
  def_stmt = _20->ssa_name.def_stmt;
  table_temp->target = second;
  table_temp->last_stmt = def_stmt;

  <bb 23> :
  i = 0;
  goto <bb 71>; [INV]

  <bb 24> :
  _21 = table_temp->last_stmt;
  _22 = gimple_code (_21);
  retval.990 = _22 == 8;
  if (retval.990 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 25> :
  if (name != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 26> :
  _23 = strcmp (name, "realloc");
  if (_23 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _24 = strcmp (name, "malloc");
  if (_24 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  _25 = strcmp (name, "calloc");
  if (_25 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _26 = strcmp (name, "xmalloc");
  if (_26 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _27 = strcmp (name, "strdup");
  if (_27 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 31> :
  _28 = (long unsigned int) i;
  _29 = std::vector<return_type>::operator[] (&ret_type_array, _28);
  _30 = _29->return_tree;
  if (_30 != 0B)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _31 = table_temp->target;
  if (_31 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  iftmp.992 = 1;
  goto <bb 35>; [INV]

  <bb 34> :
  iftmp.992 = 0;

  <bb 35> :
  retval.991 = iftmp.992;
  if (retval.991 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 36> :
  _32 = (long unsigned int) i;
  _33 = std::vector<return_type>::operator[] (&ret_type_array, _32);
  _34 = _33->return_tree;
  _35 = _34->base.code;
  retval.993 = _35 == 153;
  if (retval.993 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  _36 = (long unsigned int) i;
  _37 = std::vector<return_type>::operator[] (&ret_type_array, _36);
  _38 = _37->return_tree;
  _39 = table_temp->target;
  D.251575 = ptr_derefs_may_alias_p (_39, _38);

  <bb 38> :
  retval.994 = D.251575;
  if (retval.994 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 39> :
  fun_array.return_type_num = 2;
  function_return_collect.995_40 = function_return_collect;
  _41 = table_temp->node;
  D.251576 = cgraph_node::get_fun (_41);

  <bb 40> :
  _42 = D.251576;
  _43 = &_42->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.995_40, _43, &fun_array);

  <bb 41> :
  goto <bb 51>; [INV]

  <bb 42> :
  _44 = strcmp (name, "pthread_create");
  if (_44 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  _45 = strcmp (name, "pthread_join");
  if (_45 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 44> :
  _46 = strcmp (name, "pthread_create");
  if (_46 == 0)
    goto <bb 45>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 45> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _47 = table_temp->last_stmt;
  D.251577 = gimple_call_arg (_47, 1);

  <bb 46> :
  _48 = D.251577;
  _49 = _48->exp.operands[0];
  getvardecl = _49;
  pthread_attr_setdetachstates.997_50 = pthread_attr_setdetachstates;
  D.251578 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.997_50, &getvardecl);

  <bb 47> :
  _51 = D.251578;
  retval.996 = _51 != 0B;
  if (retval.996 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 48> :
  pthread_attr_setdetachstates.998_52 = pthread_attr_setdetachstates;
  D.251579 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.998_52, &getvardecl);

  <bb 49> :
  _53 = D.251579;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_53];
  FUNCITON_THREAD.999_54 = FUNCITON_THREAD;
  FUNCITON_THREAD.1000_55 = (int) FUNCITON_THREAD.999_54;
  table_temp->swap_type = FUNCITON_THREAD.1000_55;
  _56 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _56;

  <bb 50> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};

  <bb 51> :
  goto <bb 70>; [INV]

  <bb 52> :
  _57 = table_temp->last_stmt;
  _58 = gimple_code (_57);
  retval.1001 = _58 == 6;
  if (retval.1001 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 53> :
  _59 = table_temp->swap_type;
  _60 = (unsigned int) _59;
  FUNCITON_THREAD.1002_61 = FUNCITON_THREAD;
  if (_60 == FUNCITON_THREAD.1002_61)
    goto <bb 54>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 54> :
  _62 = table_temp->swap_stmt;
  D.251581 = gimple_call_fn (_62);

  <bb 55> :
  _63 = D.251581;
  D.251582 = get_name (_63);

  <bb 56> :
  name = D.251582;
  _64 = strcmp (name, "pthread_create");
  if (_64 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  _65 = strcmp (name, "pthread_join");
  if (_65 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 58> :
  _66 = strcmp (name, "pthread_create");
  if (_66 == 0)
    goto <bb 59>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 59> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _67 = table_temp->swap_stmt;
  D.251583 = gimple_call_arg (_67, 1);

  <bb 60> :
  _68 = D.251583;
  _69 = _68->exp.operands[0];
  getvardecl = _69;
  pthread_attr_setdetachstates.1004_70 = pthread_attr_setdetachstates;
  D.251584 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1004_70, &getvardecl);

  <bb 61> :
  _71 = D.251584;
  retval.1003 = _71 != 0B;
  if (retval.1003 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 62> :
  pthread_attr_setdetachstates.1005_72 = pthread_attr_setdetachstates;
  D.251585 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1005_72, &getvardecl);

  <bb 63> :
  _73 = D.251585;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_73];
  _74 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _74;

  <bb 64> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  goto <bb 70>; [INV]

  <bb 65> :
  _75 = table_temp->last_stmt;
  _76 = gimple_code (_75);
  retval.1006 = _76 == 18;
  if (retval.1006 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 66> :
  _77 = (long unsigned int) i;
  _78 = std::vector<return_type>::operator[] (&ret_type_array, _77);
  _79 = _78->return_tree;
  _80 = table_temp->last_stmt;
  D.251587 = gimple_phi_result (_80);

  <bb 67> :
  _81 = D.251587;
  retval.1007 = _79 == _81;
  if (retval.1007 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 68> :
  _82 = (long unsigned int) i;
  _83 = std::vector<return_type>::operator[] (&ret_type_array, _82);
  _84 = _83->stmt;
  _85 = (long unsigned int) i;
  _86 = std::vector<return_type>::operator[] (&ret_type_array, _85);
  _87 = _86->return_tree;
  _88 = (long unsigned int) i;
  _89 = std::vector<return_type>::operator[] (&ret_type_array, _88);
  _90 = _89->return_tree;
  _91 = table_temp->last_stmt;
  set_gimple_array (user_tmp, _91, _90, _87, _84);

  <bb 69> :
  // predicted unlikely by continue predictor.

  <bb 70> :
  i = i + 1;

  <bb 71> :
  _92 = (long unsigned int) i;
  _93 = std::vector<return_type>::size (&ret_type_array);
  retval.1008 = _92 < _93;
  if (retval.1008 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  std::vector<return_type>::~vector (&ret_type_array);
  finally_tmp.1010 = 1;

  <bb 73> :
  function_return_array::~function_return_array (&fun_array);
  if (finally_tmp.1010 == 1)
    goto <bb 74>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 74> :
<L73>:

  <bb 75> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 77>; [INV]

  <bb 76> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 77> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 78> :
  iftmp.1009 = table_temp->target;
  goto <bb 80>; [INV]

  <bb 79> :
  iftmp.1009 = 0B;

  <bb 80> :
  t = iftmp.1009;

  <bb 81> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 82> :
  start = {CLOBBER};
  return;

  <bb 83> :
<L88>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 5

  <bb 84> :
<L89>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 7

  <bb 85> :
<L90>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 4

  <bb 86> :
<L91>:
  function_return_array::~function_return_array (&fun_array);
  resx 3

  <bb 87> :
<L92>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 2

  <bb 88> :
<L93>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK6gimple, funcdef_no=2265, decl_uid=93420, cgraph_uid=1402, symbol_order=1562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gimple * gs)
{
  const struct gphi * D.251601;
  const struct gphi * phi_stmt;
  union tree_node * D.251599;

  <bb 2> :
  D.251601 = as_a<const gphi*, const gimple> (gs);
  phi_stmt = D.251601;
  D.251599 = gimple_phi_result (phi_stmt);

  <bb 3> :
<L0>:
  return D.251599;

}



;; Function as_a<const gphi*, const gimple> (_Z4as_aIPK4gphiK6gimpleET_PT0_, funcdef_no=7055, decl_uid=93408, cgraph_uid=3687, symbol_order=4466)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * as_a<const gphi*, const gimple> (const struct gimple * p)
{
  const struct gphi * D.251604;
  const struct gphi * D.251602;

  <bb 2> :
  D.251604 = is_a_helper<const gphi*>::cast<gimple> (p);
  D.251602 = D.251604;

  <bb 3> :
<L0>:
  return D.251602;

}



;; Function is_a_helper<const gphi*>::cast<gimple> (_ZN11is_a_helperIPK4gphiE4castI6gimpleEES2_PKT_, funcdef_no=8052, decl_uid=205907, cgraph_uid=4684, symbol_order=5466)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * is_a_helper<const gphi*>::cast<gimple> (const struct gimple * p)
{
  const struct gphi * D.251605;

  <bb 2> :
  D.251605 = reinterpret_is_a_helper<gphi*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.251605;

}



;; Function reinterpret_is_a_helper<gphi*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP4gphiE4castI6gimpleEES1_PT_, funcdef_no=8054, decl_uid=205915, cgraph_uid=4686, symbol_order=5468)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gphi * reinterpret_is_a_helper<gphi*>::cast<gimple> (struct gimple * p)
{
  struct gphi * D.251607;

  <bb 2> :
  D.251607 = p;

  <bb 3> :
<L0>:
  return D.251607;

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK4gphi, funcdef_no=2264, decl_uid=93417, cgraph_uid=1401, symbol_order=1561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gphi * gs)
{
  union tree_node * D.251609;

  <bb 2> :
  D.251609 = gs->result;

  <bb 3> :
<L0>:
  return D.251609;

}



;; Function FunctionStmtMappingAssign (_Z25FunctionStmtMappingAssignP3ptbP12gimple_array, funcdef_no=6406, decl_uid=187022, cgraph_uid=3382, symbol_order=4155)

Removing basic block 21
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 1
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 26 6 11 25 24 13 23 22 14 21 19 20 17 18 16 15 12 9 8 7 5 4 10
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 22 14 21 19 20 17 18 16 15
;;
;; Loop 3
;;  header 22, latch 21
;;  depth 3, outer 2
;;  nodes: 22 21 19 20 17 18 16 15
;; 2 succs { 31 3 }
;; 3 succs { 28 }
;; 4 succs { 31 5 }
;; 5 succs { 6 7 }
;; 6 succs { 26 }
;; 7 succs { 31 8 }
;; 8 succs { 31 9 }
;; 9 succs { 10 12 }
;; 10 succs { 31 11 }
;; 11 succs { 26 }
;; 12 succs { 31 13 }
;; 13 succs { 24 }
;; 14 succs { 22 }
;; 15 succs { 17 16 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 30 21 }
;; 21 succs { 22 }
;; 22 succs { 15 23 }
;; 23 succs { 24 }
;; 24 succs { 14 25 }
;; 25 succs { 31 26 }
;; 26 succs { 31 27 }
;; 27 succs { 28 }
;; 28 succs { 4 29 }
;; 29 succs { 1 }
;; 30 succs { 31 }
;; 31 succs { }
void FunctionStmtMappingAssign (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.251630;
  struct function * D.251628;
  bool D.251627;
  struct cgraph_node * D.251626;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.1017;
  bool iftmp.1016;
  bool retval.1015;
  bool retval.1012;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.1011_1 = symtab;
  D.251626 = symbol_table::first_defined_function (symtab.1011_1);

  <bb 3> :
  node = D.251626;
  goto <bb 28>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.251627 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.251627;
  retval.1012 = ~_3;
  if (retval.1012 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 7> :
  D.251628 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.251628;
  push_cfun (_4);

  <bb 9> :
  cfun.1013_5 = cfun;
  if (cfun.1013_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 12> :
  calculate_dominance_info (1);

  <bb 13> :
  cfun.1014_6 = cfun;
  _7 = cfun.1014_6->cfg;
  _8 = _7->x_entry_block_ptr;
  bb = _8->next_bb;
  goto <bb 24>; [INV]

  <bb 14> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 22>; [INV]

  <bb 15> :
  gc = gsi_stmt (gsi);
  _9 = is_gimple_call (gc);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _10 = is_gimple_assign (gc);
  if (_10 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1016 = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.1016 = 0;

  <bb 19> :
  retval.1015 = iftmp.1016;
  if (retval.1015 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  collect_FunctionMapping_Assign (gc, node, bb, ptable);

  <bb 21> :
  gsi_next (&gsi);

  <bb 22> :
  _11 = gsi_end_p (gsi);
  retval.1017 = ~_11;
  if (retval.1017 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 24> :
  cfun.1018_12 = cfun;
  _13 = cfun.1018_12->cfg;
  _14 = _13->x_exit_block_ptr;
  if (bb != _14)
    goto <bb 14>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  pop_cfun ();

  <bb 26> :
  symtab.1019_15 = symtab;
  D.251630 = symbol_table::next_defined_function (symtab.1019_15, node);

  <bb 27> :
  node = D.251630;

  <bb 28> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  start = {CLOBBER};
  return;

  <bb 30> :
<L21>:
  gsi = {CLOBBER};
  resx 2

  <bb 31> :
<L22>:
  start = {CLOBBER};
  resx 1

}



;; Function parseLine (_Z9parseLinePc, funcdef_no=6407, decl_uid=195819, cgraph_uid=3383, symbol_order=4156)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 3 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
int parseLine (char * line)
{
  const char * p;
  int i;
  int D.251633;

  <bb 2> :
  _1 = strlen (line);
  i = (int) _1;
  p = line;
  goto <bb 4>; [INV]

  <bb 3> :
  p = p + 1;

  <bb 4> :
  _2 = *p;
  if (_2 <= 47)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = *p;
  if (_3 > 57)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _4 = (sizetype) i;
  _5 = _4 + 18446744073709551613;
  _6 = line + _5;
  *_6 = 0;
  i = atoi (p);
  D.251633 = i;

  <bb 7> :
<L4>:
  return D.251633;

}



;; Function GetProcessMemory (_Z16GetProcessMemoryv, funcdef_no=6408, decl_uid=195831, cgraph_uid=3384, symbol_order=4157)

Merging blocks 13 and 14
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 10, latch 7
;;  depth 1, outer 0
;;  nodes: 10 7 4 11
;; 2 succs { 15 3 }
;; 3 succs { 10 }
;; 4 succs { 5 7 }
;; 5 succs { 15 6 }
;; 6 succs { 12 }
;; 7 succs { 8 10 }
;; 8 succs { 15 9 }
;; 9 succs { 12 }
;; 10 succs { 15 11 }
;; 11 succs { 4 12 }
;; 12 succs { 15 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
;; 15 succs { }
struct processMem_t GetProcessMemory ()
{
  char * D.251645;
  int D.251644;
  int D.251643;
  struct FILE * D.251642;
  struct processMem_t processMem;
  char line[128];
  struct FILE * file;
  struct processMem_t D.251640;
  bool retval.1020;

  <bb 2> :
  D.251642 = fopen ("/proc/self/status", "r");

  <bb 3> :
  file = D.251642;
  goto <bb 10>; [INV]

  <bb 4> :
  _1 = strncmp (&line, "VmSize:", 7);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251643 = parseLine (&line);

  <bb 6> :
  _2 = D.251643;
  _3 = (unsigned int) _2;
  processMem.virtualMem = _3;
  goto <bb 12>; [INV]

  <bb 7> :
  _4 = strncmp (&line, "VmRSS:", 6);
  if (_4 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  D.251644 = parseLine (&line);

  <bb 9> :
  _5 = D.251644;
  _6 = (unsigned int) _5;
  processMem.physicalMem = _6;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251645 = fgets (&line, 128, file);

  <bb 11> :
  _7 = D.251645;
  retval.1020 = _7 != 0B;
  if (retval.1020 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  fclose (file);

  <bb 13> :
  D.251640 = processMem;
  line = {CLOBBER};
  processMem = {CLOBBER};

  <bb 14> :
<L8>:
  return D.251640;

  <bb 15> :
<L9>:
  line = {CLOBBER};
  processMem = {CLOBBER};
  resx 1

}



;; Function diff (_Z4diff8timespecS_, funcdef_no=6409, decl_uid=187025, cgraph_uid=3385, symbol_order=4158)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct timespec diff (struct timespec start, struct timespec end)
{
  struct timespec temp;
  struct timespec D.251651;

  <bb 2> :
  _1 = end.tv_nsec;
  _2 = start.tv_nsec;
  _3 = _1 - _2;
  if (_3 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = end.tv_sec;
  _5 = start.tv_sec;
  _6 = _4 - _5;
  _7 = _6 + -1;
  temp.tv_sec = _7;
  _8 = end.tv_nsec;
  _9 = _8 + 1000000000;
  _10 = start.tv_nsec;
  _11 = _9 - _10;
  temp.tv_nsec = _11;
  goto <bb 5>; [INV]

  <bb 4> :
  _12 = end.tv_sec;
  _13 = start.tv_sec;
  _14 = _12 - _13;
  temp.tv_sec = _14;
  _15 = end.tv_nsec;
  _16 = start.tv_nsec;
  _17 = _15 - _16;
  temp.tv_nsec = _17;

  <bb 5> :
  D.251651 = temp;
  temp = {CLOBBER};

  <bb 6> :
<L4>:
  return D.251651;

}



;; Function Varnew_search_imm_use (_Z21Varnew_search_imm_useP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6412, decl_uid=196146, cgraph_uid=3392, symbol_order=4165)

Removing basic block 43
Removing basic block 44
Removing basic block 52
Removing basic block 53
Removing basic block 69
Removing basic block 70
Removing basic block 73
Removing basic block 74
Removing basic block 108
Removing basic block 109
Removing basic block 110
Removing basic block 111
Removing basic block 112
Removing basic block 126
Removing basic block 127
Removing basic block 128
Removing basic block 129
Removing basic block 152
Removing basic block 153
Removing basic block 154
Removing basic block 155
Removing basic block 173
Removing basic block 174
Removing basic block 175
Removing basic block 176
Removing basic block 177
Removing basic block 191
Removing basic block 192
Removing basic block 193
Removing basic block 194
Removing basic block 217
Removing basic block 218
Removing basic block 219
Removing basic block 220
Removing basic block 221
Removing basic block 224
Removing basic block 225
Removing basic block 226
Removing basic block 228
Removing basic block 229
Removing basic block 231
Removing basic block 247
Removing basic block 258
Removing basic block 259
Removing basic block 260
Removing basic block 263
Removing basic block 264
Removing basic block 298
Removing basic block 299
Removing basic block 300
Removing basic block 301
Removing basic block 302
Removing basic block 316
Removing basic block 317
Removing basic block 318
Removing basic block 319
Removing basic block 342
Removing basic block 343
Removing basic block 344
Removing basic block 345
Removing basic block 363
Removing basic block 364
Removing basic block 365
Removing basic block 366
Removing basic block 367
Removing basic block 381
Removing basic block 382
Removing basic block 383
Removing basic block 384
Removing basic block 385
Removing basic block 386
Removing basic block 408
Removing basic block 409
Removing basic block 410
Removing basic block 411
Removing basic block 412
Removing basic block 415
Removing basic block 416
Removing basic block 417
Removing basic block 419
Removing basic block 420
Removing basic block 424
Removing basic block 425
Removing basic block 436
Removing basic block 447
Removing basic block 461
Removing basic block 475
Removing basic block 476
Removing basic block 477
Removing basic block 478
Removing basic block 479
Removing basic block 480
Removing basic block 481
Removing basic block 489
Removing basic block 504
Removing basic block 505
Removing basic block 506
Removing basic block 530
Removing basic block 531
Removing basic block 532
Removing basic block 533
Removing basic block 534
Removing basic block 535
Removing basic block 536
Removing basic block 537
Removing basic block 538
Removing basic block 551
Removing basic block 564
Removing basic block 565
Removing basic block 566
Removing basic block 567
Removing basic block 568
Removing basic block 569
Removing basic block 582
Removing basic block 585
Removing basic block 586
Removing basic block 587
Removing basic block 595
Removing basic block 612
Removing basic block 613
Removing basic block 614
Removing basic block 615
Removing basic block 639
Removing basic block 640
Removing basic block 641
Removing basic block 642
Removing basic block 643
Removing basic block 644
Removing basic block 645
Removing basic block 646
Removing basic block 647
Removing basic block 668
Removing basic block 669
Removing basic block 670
Removing basic block 671
Removing basic block 672
Removing basic block 673
Removing basic block 681
Removing basic block 684
Removing basic block 685
Removing basic block 686
Removing basic block 687
Removing basic block 710
Removing basic block 711
Removing basic block 714
Removing basic block 717
Removing basic block 730
Removing basic block 731
Removing basic block 736
Removing basic block 737
Removing basic block 740
Removing basic block 747
Removing basic block 763
Removing basic block 764
Removing basic block 765
Removing basic block 766
Removing basic block 769
Removing basic block 770
Removing basic block 771
Removing basic block 772
Removing basic block 773
Removing basic block 776
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 614, latch 613
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 5
;;  header 589, latch 588
;;  depth 2, outer 3
;;  nodes: 589 588 576 585 583 580 587 586 579 578 577 582 581 584 575 574
;;
;; Loop 4
;;  header 612, latch 611
;;  depth 2, outer 3
;;  nodes: 612 611 600 610 602 607 605 604 603 606 601 609 608 599 598
;;
;; Loop 2
;;  header 338, latch 337
;;  depth 1, outer 0
;;  nodes: 338 337 233 287 285 324 331 321 273 280 270 336 335 334 333 332 268 269 266 267 264 265 252 253 250 251 241 244 249 246 242 245 248 247 243 240 238 239 236 237 235 234 254 263 255 259 262 257 256 261 260 258 278 279 275 277 276 274 272 271 319 320 317 318 315 316 305 307 311 314 309 306 308 313 312 310 304 302 303 293 296 301 298 294 297 300 299 295 292 290 291 288 289 329 330 326 328 327 325 323 322 284 283 282 281 286
;;
;; Loop 1
;;  header 188, latch 187
;;  depth 1, outer 0
;;  nodes: 188 187 82 136 134 174 181 171 122 129 119 186 185 184 183 182 117 118 115 116 113 114 101 102 99 100 90 93 98 95 91 94 97 96 92 89 87 88 85 86 84 83 103 112 104 108 111 106 105 110 109 107 127 128 124 126 125 123 121 120 169 170 167 168 165 166 153 154 151 152 142 145 150 147 143 146 149 148 144 141 139 140 137 138 155 164 156 160 163 158 157 162 161 159 179 180 176 178 177 175 173 172 133 132 131 130 135
;; 2 succs { 3 4 }
;; 3 succs { 14 4 }
;; 4 succs { 5 6 }
;; 5 succs { 14 6 }
;; 6 succs { 7 8 }
;; 7 succs { 14 8 }
;; 8 succs { 9 10 }
;; 9 succs { 14 10 }
;; 10 succs { 11 12 }
;; 11 succs { 14 12 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 617 }
;; 17 succs { 18 343 }
;; 18 succs { 628 19 }
;; 19 succs { 20 23 }
;; 20 succs { 628 21 }
;; 21 succs { 22 23 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 25 27 }
;; 25 succs { 628 26 }
;; 26 succs { 27 }
;; 27 succs { 628 28 }
;; 28 succs { 29 32 }
;; 29 succs { 628 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 36 }
;; 34 succs { 628 35 }
;; 35 succs { 36 }
;; 36 succs { 628 37 }
;; 37 succs { 38 43 }
;; 38 succs { 628 39 }
;; 39 succs { 40 43 }
;; 40 succs { 628 41 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 628 44 }
;; 44 succs { 45 50 }
;; 45 succs { 628 46 }
;; 46 succs { 47 50 }
;; 47 succs { 628 48 }
;; 48 succs { 49 50 }
;; 49 succs { 50 }
;; 50 succs { 628 51 }
;; 51 succs { 52 191 }
;; 52 succs { 628 53 }
;; 53 succs { 54 191 }
;; 54 succs { 621 55 }
;; 55 succs { 621 56 }
;; 56 succs { 57 190 }
;; 57 succs { 58 67 }
;; 58 succs { 59 69 }
;; 59 succs { 60 65 }
;; 60 succs { 61 69 }
;; 61 succs { 621 62 }
;; 62 succs { 63 69 }
;; 63 succs { 621 64 }
;; 64 succs { 69 }
;; 65 succs { 66 69 }
;; 66 succs { 69 }
;; 67 succs { 68 69 }
;; 68 succs { 69 }
;; 69 succs { 70 190 }
;; 70 succs { 71 190 }
;; 71 succs { 72 73 }
;; 72 succs { 73 }
;; 73 succs { 618 74 }
;; 74 succs { 75 189 }
;; 75 succs { 618 76 }
;; 76 succs { 618 77 }
;; 77 succs { 618 78 }
;; 78 succs { 618 79 }
;; 79 succs { 80 189 }
;; 80 succs { 81 189 }
;; 81 succs { 188 }
;; 82 succs { 83 187 }
;; 83 succs { 618 84 }
;; 84 succs { 85 135 }
;; 85 succs { 86 87 }
;; 86 succs { 87 }
;; 87 succs { 88 89 }
;; 88 succs { 89 }
;; 89 succs { 90 100 }
;; 90 succs { 91 101 }
;; 91 succs { 92 101 }
;; 92 succs { 618 93 }
;; 93 succs { 94 101 }
;; 94 succs { 618 95 }
;; 95 succs { 96 101 }
;; 96 succs { 97 99 }
;; 97 succs { 618 98 }
;; 98 succs { 101 }
;; 99 succs { 101 }
;; 100 succs { 101 }
;; 101 succs { 102 114 }
;; 102 succs { 103 114 }
;; 103 succs { 104 113 }
;; 104 succs { 105 113 }
;; 105 succs { 618 106 }
;; 106 succs { 107 113 }
;; 107 succs { 618 108 }
;; 108 succs { 109 113 }
;; 109 succs { 110 112 }
;; 110 succs { 618 111 }
;; 111 succs { 113 }
;; 112 succs { 113 }
;; 113 succs { 115 }
;; 114 succs { 115 }
;; 115 succs { 116 117 }
;; 116 succs { 117 }
;; 117 succs { 118 119 }
;; 118 succs { 119 }
;; 119 succs { 120 187 }
;; 120 succs { 618 121 }
;; 121 succs { 618 122 }
;; 122 succs { 123 187 }
;; 123 succs { 618 124 }
;; 124 succs { 125 128 }
;; 125 succs { 618 126 }
;; 126 succs { 127 128 }
;; 127 succs { 129 }
;; 128 succs { 129 }
;; 129 succs { 130 187 }
;; 130 succs { 618 131 }
;; 131 succs { 618 132 }
;; 132 succs { 618 133 }
;; 133 succs { 618 134 }
;; 134 succs { 618 187 }
;; 135 succs { 618 136 }
;; 136 succs { 137 187 }
;; 137 succs { 138 139 }
;; 138 succs { 139 }
;; 139 succs { 140 141 }
;; 140 succs { 141 }
;; 141 succs { 142 152 }
;; 142 succs { 143 153 }
;; 143 succs { 144 153 }
;; 144 succs { 618 145 }
;; 145 succs { 146 153 }
;; 146 succs { 618 147 }
;; 147 succs { 148 153 }
;; 148 succs { 149 151 }
;; 149 succs { 618 150 }
;; 150 succs { 153 }
;; 151 succs { 153 }
;; 152 succs { 153 }
;; 153 succs { 154 166 }
;; 154 succs { 155 166 }
;; 155 succs { 156 165 }
;; 156 succs { 157 165 }
;; 157 succs { 618 158 }
;; 158 succs { 159 165 }
;; 159 succs { 618 160 }
;; 160 succs { 161 165 }
;; 161 succs { 162 164 }
;; 162 succs { 618 163 }
;; 163 succs { 165 }
;; 164 succs { 165 }
;; 165 succs { 167 }
;; 166 succs { 167 }
;; 167 succs { 168 169 }
;; 168 succs { 169 }
;; 169 succs { 170 171 }
;; 170 succs { 171 }
;; 171 succs { 172 187 }
;; 172 succs { 618 173 }
;; 173 succs { 618 174 }
;; 174 succs { 175 187 }
;; 175 succs { 618 176 }
;; 176 succs { 177 180 }
;; 177 succs { 618 178 }
;; 178 succs { 179 180 }
;; 179 succs { 181 }
;; 180 succs { 181 }
;; 181 succs { 182 187 }
;; 182 succs { 618 183 }
;; 183 succs { 618 184 }
;; 184 succs { 618 185 }
;; 185 succs { 618 186 }
;; 186 succs { 618 187 }
;; 187 succs { 188 }
;; 188 succs { 82 189 }
;; 189 succs { 190 }
;; 190 succs { 191 }
;; 191 succs { 628 192 }
;; 192 succs { 193 343 }
;; 193 succs { 628 194 }
;; 194 succs { 195 343 }
;; 195 succs { 625 196 }
;; 196 succs { 625 197 }
;; 197 succs { 198 340 }
;; 198 succs { 199 218 }
;; 199 succs { 200 218 }
;; 200 succs { 201 216 }
;; 201 succs { 202 206 }
;; 202 succs { 625 203 }
;; 203 succs { 204 206 }
;; 204 succs { 625 205 }
;; 205 succs { 206 }
;; 206 succs { 625 207 }
;; 207 succs { 208 218 }
;; 208 succs { 209 212 }
;; 209 succs { 625 210 }
;; 210 succs { 211 212 }
;; 211 succs { 213 }
;; 212 succs { 213 }
;; 213 succs { 214 218 }
;; 214 succs { 625 215 }
;; 215 succs { 625 218 }
;; 216 succs { 217 218 }
;; 217 succs { 218 }
;; 218 succs { 219 342 }
;; 219 succs { 220 342 }
;; 220 succs { 221 222 }
;; 221 succs { 222 }
;; 222 succs { 622 223 }
;; 223 succs { 224 339 }
;; 224 succs { 622 225 }
;; 225 succs { 622 226 }
;; 226 succs { 622 227 }
;; 227 succs { 622 228 }
;; 228 succs { 229 339 }
;; 229 succs { 230 231 }
;; 230 succs { 231 }
;; 231 succs { 232 339 }
;; 232 succs { 338 }
;; 233 succs { 234 337 }
;; 234 succs { 622 235 }
;; 235 succs { 236 286 }
;; 236 succs { 237 238 }
;; 237 succs { 238 }
;; 238 succs { 239 240 }
;; 239 succs { 240 }
;; 240 succs { 241 251 }
;; 241 succs { 242 252 }
;; 242 succs { 243 252 }
;; 243 succs { 622 244 }
;; 244 succs { 245 252 }
;; 245 succs { 622 246 }
;; 246 succs { 247 252 }
;; 247 succs { 248 250 }
;; 248 succs { 622 249 }
;; 249 succs { 252 }
;; 250 succs { 252 }
;; 251 succs { 252 }
;; 252 succs { 253 265 }
;; 253 succs { 254 265 }
;; 254 succs { 255 264 }
;; 255 succs { 256 264 }
;; 256 succs { 622 257 }
;; 257 succs { 258 264 }
;; 258 succs { 622 259 }
;; 259 succs { 260 264 }
;; 260 succs { 261 263 }
;; 261 succs { 622 262 }
;; 262 succs { 264 }
;; 263 succs { 264 }
;; 264 succs { 266 }
;; 265 succs { 266 }
;; 266 succs { 267 268 }
;; 267 succs { 268 }
;; 268 succs { 269 270 }
;; 269 succs { 270 }
;; 270 succs { 271 337 }
;; 271 succs { 622 272 }
;; 272 succs { 622 273 }
;; 273 succs { 274 337 }
;; 274 succs { 622 275 }
;; 275 succs { 276 279 }
;; 276 succs { 622 277 }
;; 277 succs { 278 279 }
;; 278 succs { 280 }
;; 279 succs { 280 }
;; 280 succs { 281 337 }
;; 281 succs { 622 282 }
;; 282 succs { 622 283 }
;; 283 succs { 622 284 }
;; 284 succs { 622 285 }
;; 285 succs { 622 337 }
;; 286 succs { 622 287 }
;; 287 succs { 288 337 }
;; 288 succs { 289 290 }
;; 289 succs { 290 }
;; 290 succs { 291 292 }
;; 291 succs { 292 }
;; 292 succs { 293 303 }
;; 293 succs { 294 304 }
;; 294 succs { 295 304 }
;; 295 succs { 622 296 }
;; 296 succs { 297 304 }
;; 297 succs { 622 298 }
;; 298 succs { 299 304 }
;; 299 succs { 300 302 }
;; 300 succs { 622 301 }
;; 301 succs { 304 }
;; 302 succs { 304 }
;; 303 succs { 304 }
;; 304 succs { 305 316 }
;; 305 succs { 306 317 }
;; 306 succs { 307 317 }
;; 307 succs { 308 317 }
;; 308 succs { 622 309 }
;; 309 succs { 310 317 }
;; 310 succs { 622 311 }
;; 311 succs { 312 317 }
;; 312 succs { 313 315 }
;; 313 succs { 622 314 }
;; 314 succs { 317 }
;; 315 succs { 317 }
;; 316 succs { 317 }
;; 317 succs { 318 319 }
;; 318 succs { 319 }
;; 319 succs { 320 321 }
;; 320 succs { 321 }
;; 321 succs { 322 337 }
;; 322 succs { 622 323 }
;; 323 succs { 622 324 }
;; 324 succs { 325 337 }
;; 325 succs { 622 326 }
;; 326 succs { 327 330 }
;; 327 succs { 622 328 }
;; 328 succs { 329 330 }
;; 329 succs { 331 }
;; 330 succs { 331 }
;; 331 succs { 332 337 }
;; 332 succs { 622 333 }
;; 333 succs { 622 334 }
;; 334 succs { 622 335 }
;; 335 succs { 622 336 }
;; 336 succs { 622 337 }
;; 337 succs { 338 }
;; 338 succs { 233 339 }
;; 339 succs { 342 }
;; 340 succs { 341 342 }
;; 341 succs { 342 }
;; 342 succs { 343 }
;; 343 succs { 628 344 }
;; 344 succs { 628 345 }
;; 345 succs { 346 349 }
;; 346 succs { 628 347 }
;; 347 succs { 348 349 }
;; 348 succs { 350 }
;; 349 succs { 350 }
;; 350 succs { 351 353 }
;; 351 succs { 628 352 }
;; 352 succs { 628 363 }
;; 353 succs { 628 354 }
;; 354 succs { 628 355 }
;; 355 succs { 356 359 }
;; 356 succs { 628 357 }
;; 357 succs { 358 359 }
;; 358 succs { 360 }
;; 359 succs { 360 }
;; 360 succs { 361 363 }
;; 361 succs { 628 362 }
;; 362 succs { 628 363 }
;; 363 succs { 364 616 }
;; 364 succs { 626 365 }
;; 365 succs { 366 615 }
;; 366 succs { 626 367 }
;; 367 succs { 614 }
;; 368 succs { 369 546 }
;; 369 succs { 626 370 }
;; 370 succs { 371 389 }
;; 371 succs { 626 372 }
;; 372 succs { 626 373 }
;; 373 succs { 374 613 }
;; 374 succs { 375 376 }
;; 375 succs { 626 378 }
;; 376 succs { 626 377 }
;; 377 succs { 626 378 }
;; 378 succs { 626 379 }
;; 379 succs { 380 613 }
;; 380 succs { 381 613 }
;; 381 succs { 382 613 }
;; 382 succs { 626 383 }
;; 383 succs { 384 613 }
;; 384 succs { 626 385 }
;; 385 succs { 386 613 }
;; 386 succs { 626 387 }
;; 387 succs { 626 388 }
;; 388 succs { 626 613 }
;; 389 succs { 626 390 }
;; 390 succs { 391 471 }
;; 391 succs { 626 392 }
;; 392 succs { 626 393 }
;; 393 succs { 394 410 }
;; 394 succs { 395 396 }
;; 395 succs { 626 398 }
;; 396 succs { 626 397 }
;; 397 succs { 626 398 }
;; 398 succs { 626 399 }
;; 399 succs { 400 410 }
;; 400 succs { 626 401 }
;; 401 succs { 402 405 }
;; 402 succs { 626 403 }
;; 403 succs { 404 405 }
;; 404 succs { 406 }
;; 405 succs { 406 }
;; 406 succs { 407 410 }
;; 407 succs { 626 408 }
;; 408 succs { 626 409 }
;; 409 succs { 626 410 }
;; 410 succs { 626 411 }
;; 411 succs { 412 415 }
;; 412 succs { 626 413 }
;; 413 succs { 414 415 }
;; 414 succs { 416 }
;; 415 succs { 416 }
;; 416 succs { 417 433 }
;; 417 succs { 626 418 }
;; 418 succs { 626 419 }
;; 419 succs { 420 613 }
;; 420 succs { 626 421 }
;; 421 succs { 422 613 }
;; 422 succs { 423 613 }
;; 423 succs { 424 613 }
;; 424 succs { 425 613 }
;; 425 succs { 426 613 }
;; 426 succs { 626 427 }
;; 427 succs { 428 613 }
;; 428 succs { 626 429 }
;; 429 succs { 430 613 }
;; 430 succs { 626 431 }
;; 431 succs { 626 432 }
;; 432 succs { 626 613 }
;; 433 succs { 626 434 }
;; 434 succs { 435 438 }
;; 435 succs { 626 436 }
;; 436 succs { 437 438 }
;; 437 succs { 439 }
;; 438 succs { 439 }
;; 439 succs { 440 457 }
;; 440 succs { 626 441 }
;; 441 succs { 626 442 }
;; 442 succs { 443 613 }
;; 443 succs { 444 445 }
;; 444 succs { 626 447 }
;; 445 succs { 626 446 }
;; 446 succs { 626 447 }
;; 447 succs { 626 448 }
;; 448 succs { 449 613 }
;; 449 succs { 450 613 }
;; 450 succs { 626 451 }
;; 451 succs { 452 613 }
;; 452 succs { 626 453 }
;; 453 succs { 454 613 }
;; 454 succs { 626 455 }
;; 455 succs { 626 456 }
;; 456 succs { 626 613 }
;; 457 succs { 626 458 }
;; 458 succs { 459 462 }
;; 459 succs { 626 460 }
;; 460 succs { 461 462 }
;; 461 succs { 463 }
;; 462 succs { 463 }
;; 463 succs { 464 613 }
;; 464 succs { 626 465 }
;; 465 succs { 626 466 }
;; 466 succs { 467 613 }
;; 467 succs { 468 469 }
;; 468 succs { 626 613 }
;; 469 succs { 626 470 }
;; 470 succs { 626 613 }
;; 471 succs { 626 472 }
;; 472 succs { 473 613 }
;; 473 succs { 626 474 }
;; 474 succs { 626 475 }
;; 475 succs { 476 494 }
;; 476 succs { 477 478 }
;; 477 succs { 626 480 }
;; 478 succs { 626 479 }
;; 479 succs { 626 480 }
;; 480 succs { 626 481 }
;; 481 succs { 482 494 }
;; 482 succs { 626 483 }
;; 483 succs { 484 494 }
;; 484 succs { 626 485 }
;; 485 succs { 486 489 }
;; 486 succs { 626 487 }
;; 487 succs { 488 489 }
;; 488 succs { 490 }
;; 489 succs { 490 }
;; 490 succs { 491 494 }
;; 491 succs { 626 492 }
;; 492 succs { 626 493 }
;; 493 succs { 626 494 }
;; 494 succs { 626 495 }
;; 495 succs { 496 499 }
;; 496 succs { 626 497 }
;; 497 succs { 498 499 }
;; 498 succs { 500 }
;; 499 succs { 500 }
;; 500 succs { 501 517 }
;; 501 succs { 626 502 }
;; 502 succs { 626 503 }
;; 503 succs { 504 613 }
;; 504 succs { 626 505 }
;; 505 succs { 506 613 }
;; 506 succs { 507 613 }
;; 507 succs { 508 613 }
;; 508 succs { 509 613 }
;; 509 succs { 510 613 }
;; 510 succs { 626 511 }
;; 511 succs { 512 613 }
;; 512 succs { 626 513 }
;; 513 succs { 514 613 }
;; 514 succs { 626 515 }
;; 515 succs { 626 516 }
;; 516 succs { 626 613 }
;; 517 succs { 626 518 }
;; 518 succs { 519 522 }
;; 519 succs { 626 520 }
;; 520 succs { 521 522 }
;; 521 succs { 523 }
;; 522 succs { 523 }
;; 523 succs { 524 537 }
;; 524 succs { 626 525 }
;; 525 succs { 626 526 }
;; 526 succs { 527 613 }
;; 527 succs { 626 528 }
;; 528 succs { 529 613 }
;; 529 succs { 530 613 }
;; 530 succs { 626 531 }
;; 531 succs { 532 613 }
;; 532 succs { 626 533 }
;; 533 succs { 534 613 }
;; 534 succs { 626 535 }
;; 535 succs { 626 536 }
;; 536 succs { 626 613 }
;; 537 succs { 626 538 }
;; 538 succs { 539 613 }
;; 539 succs { 626 540 }
;; 540 succs { 626 541 }
;; 541 succs { 542 613 }
;; 542 succs { 543 544 }
;; 543 succs { 626 613 }
;; 544 succs { 626 545 }
;; 545 succs { 626 613 }
;; 546 succs { 547 613 }
;; 547 succs { 548 613 }
;; 548 succs { 626 549 }
;; 549 succs { 550 613 }
;; 550 succs { 626 551 }
;; 551 succs { 626 552 }
;; 552 succs { 626 553 }
;; 553 succs { 556 554 }
;; 554 succs { 626 555 }
;; 555 succs { 556 557 }
;; 556 succs { 558 }
;; 557 succs { 558 }
;; 558 succs { 559 613 }
;; 559 succs { 626 560 }
;; 560 succs { 626 561 }
;; 561 succs { 562 590 }
;; 562 succs { 563 572 }
;; 563 succs { 564 568 }
;; 564 succs { 626 565 }
;; 565 succs { 566 572 }
;; 566 succs { 626 567 }
;; 567 succs { 626 572 }
;; 568 succs { 569 570 }
;; 569 succs { 626 572 }
;; 570 succs { 626 571 }
;; 571 succs { 626 572 }
;; 572 succs { 626 573 }
;; 573 succs { 589 }
;; 574 succs { 626 575 }
;; 575 succs { 626 576 }
;; 576 succs { 577 588 }
;; 577 succs { 626 578 }
;; 578 succs { 579 584 }
;; 579 succs { 626 580 }
;; 580 succs { 581 588 }
;; 581 succs { 626 582 }
;; 582 succs { 626 583 }
;; 583 succs { 626 588 }
;; 584 succs { 626 585 }
;; 585 succs { 586 588 }
;; 586 succs { 626 587 }
;; 587 succs { 626 588 }
;; 588 succs { 589 }
;; 589 succs { 574 613 }
;; 590 succs { 626 591 }
;; 591 succs { 592 613 }
;; 592 succs { 626 593 }
;; 593 succs { 594 596 }
;; 594 succs { 626 595 }
;; 595 succs { 626 596 }
;; 596 succs { 626 597 }
;; 597 succs { 612 }
;; 598 succs { 626 599 }
;; 599 succs { 626 600 }
;; 600 succs { 601 611 }
;; 601 succs { 626 602 }
;; 602 succs { 603 611 }
;; 603 succs { 626 604 }
;; 604 succs { 626 605 }
;; 605 succs { 606 611 }
;; 606 succs { 626 607 }
;; 607 succs { 608 611 }
;; 608 succs { 626 609 }
;; 609 succs { 626 610 }
;; 610 succs { 626 611 }
;; 611 succs { 612 }
;; 612 succs { 598 613 }
;; 613 succs { 614 }
;; 614 succs { 368 615 }
;; 615 succs { 616 }
;; 616 succs { 617 }
;; 617 succs { 1 }
;; 618 succs { 619 }
;; 619 succs { 620 }
;; 620 succs { 621 }
;; 621 succs { 628 }
;; 622 succs { 623 }
;; 623 succs { 624 }
;; 624 succs { 625 }
;; 625 succs { 628 }
;; 626 succs { 627 }
;; 627 succs { 628 }
;; 628 succs { }
void Varnew_search_imm_use (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.252730;
  union tree_node * D.252729;
  union tree_node * D.252728;
  int D.252727;
  union tree_node * D.252726;
  union tree_node * D.252725;
  int D.252724;
  union tree_node * D.252723;
  unsigned int D.252722;
  union tree_node * D.252721;
  union tree_node * D.252720;
  int D.252719;
  union tree_node * D.252718;
  union tree_node * D.252717;
  union tree_node * D.252716;
  union tree_node * D.252715;
  union tree_node * D.252714;
  union tree_node * D.252713;
  int D.252712;
  union tree_node * D.252711;
  unsigned int D.252710;
  union tree_node * D.252709;
  union tree_node * D.252708;
  int D.252707;
  int D.252706;
  union tree_node * D.252705;
  union tree_node * D.252704;
  union tree_node * D.252703;
  const char * D.252702;
  union tree_node * D.252701;
  union tree_node * D.252700;
  union tree_node * D.252699;
  int D.252698;
  union tree_node * D.252697;
  union tree_node * D.252696;
  union tree_node * D.252695;
  union tree_node * D.252694;
  union tree_node * D.252693;
  union tree_node * D.252692;
  union tree_node * D.252691;
  int D.252690;
  union tree_node * D.252689;
  union tree_node * D.252688;
  union tree_node * D.252687;
  union tree_node * D.252686;
  union tree_node * D.252685;
  union tree_node * D.252684;
  union tree_node * D.252683;
  union tree_node * D.252682;
  int D.252681;
  union tree_node * D.252680;
  union tree_node * D.252679;
  union tree_node * D.252678;
  union tree_node * D.252677;
  union tree_node * D.252676;
  int D.252675;
  union tree_node * D.252674;
  int D.252673;
  union tree_node * D.252672;
  union tree_node * D.252671;
  int D.252670;
  union tree_node * D.252669;
  union tree_node * D.252668;
  union tree_node * D.252667;
  int D.252666;
  union tree_node * D.252665;
  union tree_node * D.252664;
  union tree_node * D.252663;
  union tree_node * D.252662;
  union tree_node * D.252661;
  union tree_node * D.252660;
  union tree_node * D.252659;
  union tree_node * D.252658;
  union tree_node * D.252657;
  int D.252656;
  union tree_node * D.252655;
  union tree_node * D.252654;
  union tree_node * D.252653;
  union tree_node * D.252652;
  union tree_node * D.252651;
  union tree_node * D.252650;
  union tree_node * D.252649;
  union tree_node * D.252648;
  int D.252647;
  union tree_node * D.252646;
  union tree_node * D.252645;
  union tree_node * D.252644;
  union tree_node * D.252643;
  union tree_node * D.252642;
  int D.252641;
  union tree_node * D.252640;
  int D.252639;
  union tree_node * D.252638;
  int D.252637;
  union tree_node * D.252636;
  union tree_node * D.252635;
  union tree_node * D.252634;
  union tree_node * D.252633;
  union tree_node * D.252632;
  union tree_node * D.252631;
  union tree_node * D.252630;
  union tree_node * D.252629;
  int D.252628;
  union tree_node * D.252627;
  union tree_node * D.252626;
  struct function_assign_array * D.252625;
  union tree_node * D.252624;
  int D.252623;
  int D.252622;
  union tree_node * D.252621;
  union tree_node * D.252620;
  int D.252619;
  int D.252618;
  union tree_node * D.252617;
  union tree_node * D.252612;
  union tree_node * D.252611;
  union tree_node * D.252610;
  int D.252609;
  union tree_node * D.252608;
  int D.252607;
  union tree_node * D.252606;
  union tree_node * D.252605;
  union tree_node * D.252604;
  union tree_node * D.252603;
  union tree_node * D.252602;
  union tree_node * D.252601;
  union tree_node * D.252600;
  union tree_node * D.252599;
  union tree_node * D.252598;
  union tree_node * D.252597;
  union tree_node * D.252596;
  int D.252595;
  union tree_node * D.252594;
  int D.252593;
  union tree_node * D.252592;
  union tree_node * D.252591;
  union tree_node * D.252590;
  union tree_node * D.252589;
  union tree_node * D.252588;
  union tree_node * D.252587;
  union tree_node * D.252586;
  union tree_node * D.252585;
  struct function_assign_array * D.252584;
  struct function_assign_array * D.252583;
  struct function_assign_array * D.252582;
  int D.252581;
  int D.252580;
  union tree_node * D.252579;
  union tree_node * D.252578;
  union tree_node * D.252577;
  union tree_node * D.252576;
  union tree_node * D.252575;
  union tree_node * D.252574;
  union tree_node * D.252569;
  union tree_node * D.252568;
  union tree_node * D.252567;
  int D.252566;
  union tree_node * D.252565;
  int D.252564;
  union tree_node * D.252563;
  union tree_node * D.252562;
  union tree_node * D.252561;
  union tree_node * D.252560;
  union tree_node * D.252559;
  union tree_node * D.252558;
  union tree_node * D.252557;
  union tree_node * D.252556;
  union tree_node * D.252555;
  union tree_node * D.252554;
  union tree_node * D.252553;
  int D.252552;
  union tree_node * D.252551;
  int D.252550;
  union tree_node * D.252549;
  union tree_node * D.252548;
  union tree_node * D.252547;
  union tree_node * D.252546;
  union tree_node * D.252545;
  union tree_node * D.252544;
  union tree_node * D.252543;
  union tree_node * D.252542;
  struct function_assign_array * D.252541;
  struct function_assign_array * D.252540;
  struct function_assign_array * D.252539;
  union tree_node * D.252538;
  union tree_node * D.252537;
  union tree_node * D.252536;
  union tree_node * D.252535;
  union tree_node * D.252534;
  union tree_node * D.252533;
  union tree_node * D.252532;
  union tree_node * D.252531;
  union tree_node * D.252530;
  union tree_node * D.252529;
  union tree_node * D.252528;
  union tree_node * D.252527;
  union tree_node * D.252526;
  union tree_node * D.252525;
  union tree_node * D.252524;
  union tree_node * D.252523;
  union tree_node * D.252522;
  union tree_node * D.252521;
  union tree_node * D.252520;
  union tree_node * D.252519;
  union tree_node * D.252518;
  union tree_node * D.252517;
  union tree_node * D.252516;
  union tree_node * D.252515;
  union tree_node * D.252514;
  union tree_node * D.252513;
  union tree_node * D.252512;
  union tree_node * D.252511;
  union tree_node * D.252510;
  union tree_node * D.252509;
  int i;
  int size;
  int i;
  int size;
  const char * name;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * nowstmt;
  int i;
  struct function_assign_array assign_array;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * second;
  union tree_node * second;
  union tree_node * getFunctionAssignVAR;
  bool retval.1192;
  bool retval.1188;
  bool retval.1186;
  bool retval.1184;
  bool retval.1182;
  bool retval.1181;
  bool retval.1180;
  bool retval.1177;
  bool retval.1173;
  bool retval.1171;
  bool retval.1169;
  bool retval.1168;
  bool retval.1167;
  bool retval.1166;
  bool iftmp.1165;
  bool retval.1164;
  bool retval.1163;
  bool retval.1162;
  bool retval.1161;
  bool retval.1160;
  bool retval.1159;
  bool retval.1158;
  bool retval.1157;
  bool retval.1156;
  bool retval.1155;
  bool retval.1154;
  bool iftmp.1153;
  bool retval.1152;
  bool retval.1151;
  bool retval.1150;
  bool retval.1149;
  bool retval.1148;
  bool iftmp.1147;
  bool retval.1146;
  bool iftmp.1145;
  bool retval.1144;
  bool retval.1143;
  bool retval.1142;
  bool retval.1141;
  bool retval.1140;
  bool retval.1139;
  bool retval.1138;
  bool retval.1137;
  bool iftmp.1136;
  bool retval.1135;
  bool retval.1134;
  bool retval.1133;
  bool retval.1132;
  bool retval.1131;
  bool retval.1130;
  bool iftmp.1129;
  bool retval.1128;
  bool retval.1127;
  bool retval.1126;
  bool retval.1125;
  bool retval.1124;
  bool iftmp.1123;
  bool retval.1122;
  bool iftmp.1121;
  bool retval.1120;
  bool retval.1119;
  bool retval.1118;
  bool retval.1117;
  bool retval.1116;
  bool retval.1115;
  bool retval.1114;
  bool retval.1113;
  bool retval.1112;
  bool retval.1111;
  bool retval.1110;
  bool retval.1109;
  struct function_assign_array D.196194;
  bool retval.1106;
  bool iftmp.1104;
  bool retval.1103;
  bool iftmp.1102;
  bool retval.1101;
  bool retval.1100;
  bool iftmp.1099;
  bool retval.1098;
  bool retval.1097;
  bool retval.1096;
  bool retval.1095;
  bool retval.1094;
  bool retval.1093;
  bool retval.1092;
  bool retval.1091;
  bool retval.1090;
  bool iftmp.1089;
  bool retval.1088;
  bool retval.1087;
  bool retval.1086;
  bool retval.1085;
  bool retval.1084;
  bool retval.1083;
  bool retval.1082;
  bool retval.1081;
  bool retval.1080;
  bool retval.1079;
  bool retval.1077;
  bool retval.1074;
  bool iftmp.1071;
  bool retval.1070;
  bool retval.1069;
  bool retval.1068;
  bool retval.1067;
  bool retval.1066;
  bool retval.1065;
  bool retval.1064;
  bool iftmp.1063;
  bool retval.1062;
  bool retval.1061;
  bool retval.1060;
  bool retval.1059;
  bool retval.1058;
  bool retval.1057;
  bool retval.1056;
  bool retval.1055;
  bool retval.1054;
  bool iftmp.1053;
  bool retval.1052;
  bool retval.1051;
  bool retval.1050;
  bool retval.1049;
  bool retval.1048;
  bool retval.1047;
  bool retval.1046;
  bool retval.1045;
  bool retval.1044;
  bool retval.1043;
  bool retval.1041;
  bool retval.1038;
  bool retval.1035;
  bool retval.1034;
  bool retval.1033;
  bool retval.1032;
  bool retval.1031;
  bool retval.1030;
  bool retval.1029;
  bool retval.1028;
  bool iftmp.1027;
  bool retval.1026;
  bool iftmp.1025;
  bool retval.1024;
  bool retval.1023;
  bool iftmp.1022;
  bool retval.1021;

  <bb 2> :
  D.252509 = gimple_assign_lhs (use_stmt);
  _1 = D.252509;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.252510 = gimple_assign_lhs (use_stmt);
  _2 = D.252510;
  _3 = _2->base.code;
  if (_3 == 36)
    goto <bb 14>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.252511 = gimple_assign_rhs1 (use_stmt);
  _4 = D.252511;
  if (_4 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.252512 = gimple_assign_rhs1 (use_stmt);
  _5 = D.252512;
  _6 = _5->base.code;
  if (_6 == 36)
    goto <bb 14>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  D.252513 = gimple_assign_rhs1 (use_stmt);
  _7 = D.252513;
  if (_7 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.252514 = gimple_assign_rhs1 (use_stmt);
  _8 = D.252514;
  _9 = _8->base.code;
  if (_9 == 49)
    goto <bb 14>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.252515 = gimple_assign_lhs (use_stmt);
  _10 = D.252515;
  if (_10 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.252516 = gimple_assign_lhs (use_stmt);
  _11 = D.252516;
  _12 = _11->base.code;
  if (_12 == 49)
    goto <bb 14>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  D.252517 = gimple_assign_rhs1 (use_stmt);
  _13 = D.252517;
  if (_13 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.252518 = gimple_assign_rhs1 (use_stmt);
  _14 = D.252518;
  _15 = _14->base.code;
  if (_15 == 47)
    goto <bb 14>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  D.252519 = gimple_assign_lhs (use_stmt);
  _16 = D.252519;
  if (_16 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  D.252520 = gimple_assign_lhs (use_stmt);
  _17 = D.252520;
  _18 = _17->base.code;
  if (_18 == 47)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1022 = 1;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1022 = 0;

  <bb 16> :
  retval.1021 = iftmp.1022;
  if (retval.1021 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 617>; [INV]

  <bb 17> :
  _19 = gimple_code (use_stmt);
  retval.1023 = _19 == 6;
  if (retval.1023 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 343>; [INV]

  <bb 18> :
  D.252521 = gimple_assign_lhs (use_stmt);

  <bb 19> :
  _20 = D.252521;
  if (_20 != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  D.252522 = gimple_assign_lhs (use_stmt);

  <bb 21> :
  _21 = D.252522;
  _22 = _21->base.code;
  if (_22 == 36)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  iftmp.1025 = 1;
  goto <bb 24>; [INV]

  <bb 23> :
  iftmp.1025 = 0;

  <bb 24> :
  retval.1024 = iftmp.1025;
  if (retval.1024 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  D.252523 = gimple_assign_lhs (use_stmt);

  <bb 26> :
  _23 = D.252523;
  getFunctionAssignVAR = _23;

  <bb 27> :
  D.252524 = gimple_assign_rhs1 (use_stmt);

  <bb 28> :
  _24 = D.252524;
  if (_24 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 29> :
  D.252525 = gimple_assign_rhs1 (use_stmt);

  <bb 30> :
  _25 = D.252525;
  _26 = _25->base.code;
  if (_26 == 36)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1027 = 1;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.1027 = 0;

  <bb 33> :
  retval.1026 = iftmp.1027;
  if (retval.1026 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 34> :
  D.252526 = gimple_assign_rhs1 (use_stmt);

  <bb 35> :
  _27 = D.252526;
  getFunctionAssignVAR = _27;

  <bb 36> :
  D.252527 = gimple_assign_rhs1 (use_stmt);

  <bb 37> :
  _28 = D.252527;
  retval.1028 = _28 != 0B;
  if (retval.1028 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 38> :
  D.252528 = gimple_assign_rhs1 (use_stmt);

  <bb 39> :
  _29 = D.252528;
  _30 = _29->base.code;
  retval.1029 = _30 == 49;
  if (retval.1029 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 40> :
  D.252529 = gimple_assign_rhs1 (use_stmt);

  <bb 41> :
  _31 = D.252529;
  second = _31->exp.operands[0];
  if (second != 0B)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  getFunctionAssignVAR = second;

  <bb 43> :
  D.252530 = gimple_assign_lhs (use_stmt);

  <bb 44> :
  _32 = D.252530;
  retval.1030 = _32 != 0B;
  if (retval.1030 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 45> :
  D.252531 = gimple_assign_lhs (use_stmt);

  <bb 46> :
  _33 = D.252531;
  _34 = _33->base.code;
  retval.1031 = _34 == 49;
  if (retval.1031 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 47> :
  D.252532 = gimple_assign_lhs (use_stmt);

  <bb 48> :
  _35 = D.252532;
  second = _35->exp.operands[0];
  if (second != 0B)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  getFunctionAssignVAR = second;

  <bb 50> :
  D.252533 = gimple_assign_rhs1 (use_stmt);

  <bb 51> :
  _36 = D.252533;
  retval.1032 = _36 != 0B;
  if (retval.1032 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 52> :
  D.252534 = gimple_assign_rhs1 (use_stmt);

  <bb 53> :
  _37 = D.252534;
  _38 = _37->base.code;
  retval.1033 = _38 == 47;
  if (retval.1033 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 54> :
  D.252535 = gimple_assign_rhs1 (use_stmt);

  <bb 55> :
  _39 = D.252535;
  second = _39->exp.operands[0];
  D.252536 = gimple_assign_rhs1 (use_stmt);

  <bb 56> :
  _40 = D.252536;
  _41 = _40->exp.operands[1];
  second2 = _41;
  if (second != 0B)
    goto <bb 57>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 57> :
  _42 = second->base.code;
  if (_42 == 165)
    goto <bb 58>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 58> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 59> :
  _43 = three->base.code;
  if (_43 == 153)
    goto <bb 60>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 60> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1034 = is_gimple_assign (def_stmt);
  if (retval.1034 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 61> :
  D.252537 = gimple_assign_rhs1 (def_stmt);

  <bb 62> :
  _44 = D.252537;
  _45 = _44->base.code;
  retval.1035 = _45 == 36;
  if (retval.1035 != 0)
    goto <bb 63>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 63> :
  D.252538 = gimple_assign_rhs1 (def_stmt);

  <bb 64> :
  _46 = D.252538;
  getFunctionAssignVAR = _46;
  goto <bb 69>; [INV]

  <bb 65> :
  _47 = three->base.code;
  if (_47 == 36)
    goto <bb 66>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 66> :
  getFunctionAssignVAR = three;
  goto <bb 69>; [INV]

  <bb 67> :
  _48 = second->base.code;
  if (_48 == 36)
    goto <bb 68>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 68> :
  getFunctionAssignVAR = second;

  <bb 69> :
  second2.1036_49 = second2;
  if (second2.1036_49 != 0B)
    goto <bb 70>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 70> :
  second2.1037_50 = second2;
  _51 = second2.1037_50->base.code;
  if (_51 == 35)
    goto <bb 71>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 71> :
  _52 = second->base.code;
  if (_52 == 36)
    goto <bb 72>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 72> :
  getFunctionAssignVAR = second;

  <bb 73> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1039_53 = function_assign_collect;
  D.252539 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1039_53, &second2);

  <bb 74> :
  _54 = D.252539;
  retval.1038 = _54 != 0B;
  if (retval.1038 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 75> :
  function_assign_collect.1040_55 = function_assign_collect;
  D.252540 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1040_55, &second2);

  <bb 76> :
  _56 = D.252540;
  function_assign_array::operator= (&assign_array, _56);

  <bb 77> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 78> :
  function_assign_collect.1042_57 = function_assign_collect;
  D.252541 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1042_57, &second2);

  <bb 79> :
  _58 = D.252541;
  retval.1041 = _58 != 0B;
  if (retval.1041 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 80> :
  _59 = second->base.code;
  if (_59 != 36)
    goto <bb 81>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 81> :
  i = 0;
  goto <bb 188>; [INV]

  <bb 82> :
  _60 = (long unsigned int) i;
  _61 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _60);
  _62 = _61->stmt;
  _63 = gimple_code (_62);
  retval.1043 = _63 == 6;
  if (retval.1043 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 83> :
  _64 = (long unsigned int) i;
  _65 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _64);
  _66 = _65->stmt;
  D.252542 = gimple_assign_rhs1 (_66);

  <bb 84> :
  _67 = D.252542;
  _68 = _67->base.code;
  retval.1044 = _68 == 153;
  if (retval.1044 != 0)
    goto <bb 85>; [INV]
  else
    goto <bb 135>; [INV]

  <bb 85> :
  filed_from = second->exp.operands[0];
  _69 = (long unsigned int) i;
  _70 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _69);
  _71 = _70->assign_tree;
  filed_from2 = _71->exp.operands[0];
  _72 = filed_from2->base.code;
  if (_72 == 165)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 87> :
  _73 = filed_from->base.code;
  if (_73 == 165)
    goto <bb 88>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 88> :
  filed_from = filed_from->exp.operands[0];

  <bb 89> :
  _74 = filed_from2->base.code;
  if (_74 == 153)
    goto <bb 90>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 90> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 91>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 91> :
  _75 = gimple_code (def_stmt);
  retval.1045 = _75 != 20;
  if (retval.1045 != 0)
    goto <bb 92>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 92> :
  D.252543 = gimple_assign_rhs1 (def_stmt);

  <bb 93> :
  _76 = D.252543;
  retval.1046 = _76 != 0B;
  if (retval.1046 != 0)
    goto <bb 94>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 94> :
  D.252544 = gimple_assign_rhs1 (def_stmt);

  <bb 95> :
  _77 = D.252544;
  _78 = _77->base.code;
  retval.1047 = _78 != 0;
  if (retval.1047 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 96> :
  if (def_stmt != 0B)
    goto <bb 97>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 97> :
  D.252545 = gimple_assign_rhs1 (def_stmt);

  <bb 98> :
  treecheck = D.252545;
  goto <bb 101>; [INV]

  <bb 99> :
  treecheck = filed_from2;
  goto <bb 101>; [INV]

  <bb 100> :
  treecheck = filed_from2;

  <bb 101> :
  _79 = second->base.code;
  if (_79 != 36)
    goto <bb 102>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 102> :
  _80 = filed_from->base.code;
  if (_80 != 26)
    goto <bb 103>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 103> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 104>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 104> :
  _81 = gimple_code (def_stmt2);
  retval.1048 = _81 != 20;
  if (retval.1048 != 0)
    goto <bb 105>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 105> :
  D.252546 = gimple_assign_rhs1 (def_stmt2);

  <bb 106> :
  _82 = D.252546;
  retval.1049 = _82 != 0B;
  if (retval.1049 != 0)
    goto <bb 107>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 107> :
  D.252547 = gimple_assign_rhs1 (def_stmt2);

  <bb 108> :
  _83 = D.252547;
  _84 = _83->base.code;
  retval.1050 = _84 != 0;
  if (retval.1050 != 0)
    goto <bb 109>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 109> :
  if (def_stmt2 != 0B)
    goto <bb 110>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 110> :
  D.252548 = gimple_assign_rhs1 (def_stmt2);

  <bb 111> :
  treecheck2 = D.252548;
  goto <bb 113>; [INV]

  <bb 112> :
  treecheck2 = filed_from;

  <bb 113> :
  goto <bb 115>; [INV]

  <bb 114> :
  treecheck2 = filed_from;

  <bb 115> :
  if (treecheck == 0B)
    goto <bb 116>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 116> :
  treecheck = filed_from2;

  <bb 117> :
  if (treecheck2 == 0B)
    goto <bb 118>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 118> :
  treecheck2 = filed_from;

  <bb 119> :
  if (treecheck2 == treecheck)
    goto <bb 120>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 120> :
  _85 = (long unsigned int) i;
  _86 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _85);
  _87 = _86->stmt;
  D.252549 = gimple_assign_rhs1 (_87);

  <bb 121> :
  _88 = D.252549;
  D.252550 = check_stmtStack (_88);

  <bb 122> :
  _89 = D.252550;
  retval.1051 = _89 == 0;
  if (retval.1051 != 0)
    goto <bb 123>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 123> :
  _90 = (long unsigned int) i;
  _91 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _90);
  _92 = _91->stmt;
  D.252551 = gimple_assign_rhs1 (_92);

  <bb 124> :
  _93 = D.252551;
  if (target2 != _93)
    goto <bb 125>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 125> :
  _94 = (long unsigned int) i;
  _95 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _94);
  _96 = _95->stmt;
  D.252552 = check_stmtStack2 (_96);

  <bb 126> :
  _97 = D.252552;
  if (_97 == 0)
    goto <bb 127>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 127> :
  iftmp.1053 = 1;
  goto <bb 129>; [INV]

  <bb 128> :
  iftmp.1053 = 0;

  <bb 129> :
  retval.1052 = iftmp.1053;
  if (retval.1052 != 0)
    goto <bb 130>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 130> :
  _98 = (long unsigned int) i;
  _99 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _98);
  _100 = _99->stmt;
  D.252553 = gimple_assign_rhs1 (_100);

  <bb 131> :
  _101 = D.252553;
  _102 = (long unsigned int) i;
  _103 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _102);
  _104 = _103->stmt;
  set_gimple_array (used_stmt, _104, _101, target, 0B);

  <bb 132> :
  _105 = (long unsigned int) i;
  _106 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _105);
  _107 = _106->stmt;
  D.252554 = gimple_assign_rhs1 (_107);

  <bb 133> :
  _108 = D.252554;
  _109 = (long unsigned int) i;
  _110 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _109);
  _111 = _110->stmt;
  D.252555 = gimple_assign_rhs1 (_111);

  <bb 134> :
  _112 = D.252555;
  new_search_imm_use (used_stmt, _112, _108);
  goto <bb 187>; [INV]

  <bb 135> :
  _113 = (long unsigned int) i;
  _114 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _113);
  _115 = _114->stmt;
  D.252556 = gimple_assign_lhs (_115);

  <bb 136> :
  _116 = D.252556;
  _117 = _116->base.code;
  retval.1054 = _117 == 153;
  if (retval.1054 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 137> :
  filed_from = second->exp.operands[0];
  _118 = (long unsigned int) i;
  _119 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _118);
  _120 = _119->assign_tree;
  filed_from2 = _120->exp.operands[0];
  _121 = filed_from2->base.code;
  if (_121 == 165)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 139> :
  _122 = filed_from->base.code;
  if (_122 == 165)
    goto <bb 140>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 140> :
  filed_from = filed_from->exp.operands[0];

  <bb 141> :
  _123 = filed_from2->base.code;
  if (_123 == 153)
    goto <bb 142>; [INV]
  else
    goto <bb 152>; [INV]

  <bb 142> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 143>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 143> :
  _124 = gimple_code (def_stmt);
  retval.1055 = _124 != 20;
  if (retval.1055 != 0)
    goto <bb 144>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 144> :
  D.252557 = gimple_assign_rhs1 (def_stmt);

  <bb 145> :
  _125 = D.252557;
  retval.1056 = _125 != 0B;
  if (retval.1056 != 0)
    goto <bb 146>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 146> :
  D.252558 = gimple_assign_rhs1 (def_stmt);

  <bb 147> :
  _126 = D.252558;
  _127 = _126->base.code;
  retval.1057 = _127 != 0;
  if (retval.1057 != 0)
    goto <bb 148>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 148> :
  if (def_stmt != 0B)
    goto <bb 149>; [INV]
  else
    goto <bb 151>; [INV]

  <bb 149> :
  D.252559 = gimple_assign_rhs1 (def_stmt);

  <bb 150> :
  treecheck = D.252559;
  goto <bb 153>; [INV]

  <bb 151> :
  treecheck = filed_from2;
  goto <bb 153>; [INV]

  <bb 152> :
  treecheck = filed_from2;

  <bb 153> :
  _128 = second->base.code;
  if (_128 != 36)
    goto <bb 154>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 154> :
  _129 = filed_from->base.code;
  if (_129 != 26)
    goto <bb 155>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 155> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 156>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 156> :
  _130 = gimple_code (def_stmt2);
  retval.1058 = _130 != 20;
  if (retval.1058 != 0)
    goto <bb 157>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 157> :
  D.252560 = gimple_assign_rhs1 (def_stmt2);

  <bb 158> :
  _131 = D.252560;
  retval.1059 = _131 != 0B;
  if (retval.1059 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 159> :
  D.252561 = gimple_assign_rhs1 (def_stmt2);

  <bb 160> :
  _132 = D.252561;
  _133 = _132->base.code;
  retval.1060 = _133 != 0;
  if (retval.1060 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 161> :
  if (def_stmt2 != 0B)
    goto <bb 162>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 162> :
  D.252562 = gimple_assign_rhs1 (def_stmt2);

  <bb 163> :
  treecheck2 = D.252562;
  goto <bb 165>; [INV]

  <bb 164> :
  treecheck2 = filed_from;

  <bb 165> :
  goto <bb 167>; [INV]

  <bb 166> :
  treecheck2 = filed_from;

  <bb 167> :
  if (treecheck == 0B)
    goto <bb 168>; [INV]
  else
    goto <bb 169>; [INV]

  <bb 168> :
  treecheck = filed_from2;

  <bb 169> :
  if (treecheck2 == 0B)
    goto <bb 170>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 170> :
  treecheck2 = filed_from;

  <bb 171> :
  if (treecheck2 == treecheck)
    goto <bb 172>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 172> :
  _134 = (long unsigned int) i;
  _135 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _134);
  _136 = _135->stmt;
  D.252563 = gimple_assign_lhs (_136);

  <bb 173> :
  _137 = D.252563;
  D.252564 = check_stmtStack (_137);

  <bb 174> :
  _138 = D.252564;
  retval.1061 = _138 == 0;
  if (retval.1061 != 0)
    goto <bb 175>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 175> :
  _139 = (long unsigned int) i;
  _140 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _139);
  _141 = _140->stmt;
  D.252565 = gimple_assign_lhs (_141);

  <bb 176> :
  _142 = D.252565;
  if (target2 != _142)
    goto <bb 177>; [INV]
  else
    goto <bb 180>; [INV]

  <bb 177> :
  _143 = (long unsigned int) i;
  _144 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _143);
  _145 = _144->stmt;
  D.252566 = check_stmtStack2 (_145);

  <bb 178> :
  _146 = D.252566;
  if (_146 == 0)
    goto <bb 179>; [INV]
  else
    goto <bb 180>; [INV]

  <bb 179> :
  iftmp.1063 = 1;
  goto <bb 181>; [INV]

  <bb 180> :
  iftmp.1063 = 0;

  <bb 181> :
  retval.1062 = iftmp.1063;
  if (retval.1062 != 0)
    goto <bb 182>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 182> :
  _147 = (long unsigned int) i;
  _148 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _147);
  _149 = _148->stmt;
  D.252567 = gimple_assign_rhs1 (_149);

  <bb 183> :
  _150 = D.252567;
  _151 = (long unsigned int) i;
  _152 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _151);
  _153 = _152->stmt;
  set_gimple_array (used_stmt, _153, _150, target, 0B);

  <bb 184> :
  _154 = (long unsigned int) i;
  _155 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _154);
  _156 = _155->stmt;
  D.252568 = gimple_assign_lhs (_156);

  <bb 185> :
  _157 = D.252568;
  _158 = (long unsigned int) i;
  _159 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _158);
  _160 = _159->stmt;
  D.252569 = gimple_assign_lhs (_160);

  <bb 186> :
  _161 = D.252569;
  new_search_imm_use (used_stmt, _161, _157);

  <bb 187> :
  i = i + 1;

  <bb 188> :
  _162 = (long unsigned int) i;
  _163 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1064 = _162 < _163;
  if (retval.1064 != 0)
    goto <bb 82>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 189> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 190> :
  second2 = {CLOBBER};

  <bb 191> :
  D.252574 = gimple_assign_lhs (use_stmt);

  <bb 192> :
  _164 = D.252574;
  retval.1065 = _164 != 0B;
  if (retval.1065 != 0)
    goto <bb 193>; [INV]
  else
    goto <bb 343>; [INV]

  <bb 193> :
  D.252575 = gimple_assign_lhs (use_stmt);

  <bb 194> :
  _165 = D.252575;
  _166 = _165->base.code;
  retval.1066 = _166 == 47;
  if (retval.1066 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 343>; [INV]

  <bb 195> :
  D.252576 = gimple_assign_lhs (use_stmt);

  <bb 196> :
  _167 = D.252576;
  second = _167->exp.operands[0];
  D.252577 = gimple_assign_lhs (use_stmt);

  <bb 197> :
  _168 = D.252577;
  _169 = _168->exp.operands[1];
  second2 = _169;
  if (second != 0B)
    goto <bb 198>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 198> :
  three = second->exp.operands[0];
  _170 = second->base.code;
  if (_170 == 165)
    goto <bb 199>; [INV]
  else
    goto <bb 218>; [INV]

  <bb 199> :
  if (three != 0B)
    goto <bb 200>; [INV]
  else
    goto <bb 218>; [INV]

  <bb 200> :
  _171 = three->base.code;
  if (_171 == 153)
    goto <bb 201>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 201> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1067 = is_gimple_assign (def_stmt);
  if (retval.1067 != 0)
    goto <bb 202>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 202> :
  D.252578 = gimple_assign_rhs1 (def_stmt);

  <bb 203> :
  _172 = D.252578;
  _173 = _172->base.code;
  retval.1068 = _173 == 36;
  if (retval.1068 != 0)
    goto <bb 204>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 204> :
  D.252579 = gimple_assign_rhs1 (def_stmt);

  <bb 205> :
  _174 = D.252579;
  getFunctionAssignVAR = _174;

  <bb 206> :
  D.252580 = check_stmtStack (three);

  <bb 207> :
  _175 = D.252580;
  retval.1069 = _175 == 0;
  if (retval.1069 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 218>; [INV]

  <bb 208> :
  if (three != target2)
    goto <bb 209>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 209> :
  D.252581 = check_stmtStack2 (use_stmt);

  <bb 210> :
  _176 = D.252581;
  if (_176 == 0)
    goto <bb 211>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 211> :
  iftmp.1071 = 1;
  goto <bb 213>; [INV]

  <bb 212> :
  iftmp.1071 = 0;

  <bb 213> :
  retval.1070 = iftmp.1071;
  if (retval.1070 != 0)
    goto <bb 214>; [INV]
  else
    goto <bb 218>; [INV]

  <bb 214> :
  set_gimple_array (used_stmt, use_stmt, three, target, 0B);

  <bb 215> :
  new_search_imm_use (used_stmt, three, three);
  goto <bb 218>; [INV]

  <bb 216> :
  _177 = three->base.code;
  if (_177 == 36)
    goto <bb 217>; [INV]
  else
    goto <bb 218>; [INV]

  <bb 217> :
  getFunctionAssignVAR = three;

  <bb 218> :
  second2.1072_178 = second2;
  if (second2.1072_178 != 0B)
    goto <bb 219>; [INV]
  else
    goto <bb 342>; [INV]

  <bb 219> :
  second2.1073_179 = second2;
  _180 = second2.1073_179->base.code;
  if (_180 == 35)
    goto <bb 220>; [INV]
  else
    goto <bb 342>; [INV]

  <bb 220> :
  _181 = second->base.code;
  if (_181 == 36)
    goto <bb 221>; [INV]
  else
    goto <bb 222>; [INV]

  <bb 221> :
  getFunctionAssignVAR = second;

  <bb 222> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1075_182 = function_assign_collect;
  D.252582 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1075_182, &second2);

  <bb 223> :
  _183 = D.252582;
  retval.1074 = _183 != 0B;
  if (retval.1074 != 0)
    goto <bb 224>; [INV]
  else
    goto <bb 339>; [INV]

  <bb 224> :
  function_assign_collect.1076_184 = function_assign_collect;
  D.252583 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1076_184, &second2);

  <bb 225> :
  _185 = D.252583;
  function_assign_array::operator= (&assign_array, _185);

  <bb 226> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 227> :
  function_assign_collect.1078_186 = function_assign_collect;
  D.252584 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1078_186, &second2);

  <bb 228> :
  _187 = D.252584;
  retval.1077 = _187 != 0B;
  if (retval.1077 != 0)
    goto <bb 229>; [INV]
  else
    goto <bb 339>; [INV]

  <bb 229> :
  _188 = second->base.code;
  if (_188 == 36)
    goto <bb 230>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 230> :
  getFunctionAssignVAR = second;

  <bb 231> :
  _189 = second->base.code;
  if (_189 != 36)
    goto <bb 232>; [INV]
  else
    goto <bb 339>; [INV]

  <bb 232> :
  i = 0;
  goto <bb 338>; [INV]

  <bb 233> :
  _190 = (long unsigned int) i;
  _191 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _190);
  _192 = _191->stmt;
  _193 = gimple_code (_192);
  retval.1079 = _193 == 6;
  if (retval.1079 != 0)
    goto <bb 234>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 234> :
  _194 = (long unsigned int) i;
  _195 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _194);
  _196 = _195->stmt;
  D.252585 = gimple_assign_rhs1 (_196);

  <bb 235> :
  _197 = D.252585;
  _198 = _197->base.code;
  retval.1080 = _198 == 153;
  if (retval.1080 != 0)
    goto <bb 236>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 236> :
  filed_from = second->exp.operands[0];
  _199 = (long unsigned int) i;
  _200 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _199);
  _201 = _200->assign_tree;
  filed_from2 = _201->exp.operands[0];
  _202 = filed_from2->base.code;
  if (_202 == 165)
    goto <bb 237>; [INV]
  else
    goto <bb 238>; [INV]

  <bb 237> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 238> :
  _203 = filed_from->base.code;
  if (_203 == 165)
    goto <bb 239>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 239> :
  filed_from = filed_from->exp.operands[0];

  <bb 240> :
  _204 = filed_from2->base.code;
  if (_204 == 153)
    goto <bb 241>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 241> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 242>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 242> :
  _205 = gimple_code (def_stmt);
  retval.1081 = _205 != 20;
  if (retval.1081 != 0)
    goto <bb 243>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 243> :
  D.252586 = gimple_assign_rhs1 (def_stmt);

  <bb 244> :
  _206 = D.252586;
  retval.1082 = _206 != 0B;
  if (retval.1082 != 0)
    goto <bb 245>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 245> :
  D.252587 = gimple_assign_rhs1 (def_stmt);

  <bb 246> :
  _207 = D.252587;
  _208 = _207->base.code;
  retval.1083 = _208 != 0;
  if (retval.1083 != 0)
    goto <bb 247>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 247> :
  if (def_stmt != 0B)
    goto <bb 248>; [INV]
  else
    goto <bb 250>; [INV]

  <bb 248> :
  D.252588 = gimple_assign_rhs1 (def_stmt);

  <bb 249> :
  treecheck = D.252588;
  goto <bb 252>; [INV]

  <bb 250> :
  treecheck = filed_from2;
  goto <bb 252>; [INV]

  <bb 251> :
  treecheck = filed_from2;

  <bb 252> :
  _209 = second->base.code;
  if (_209 != 36)
    goto <bb 253>; [INV]
  else
    goto <bb 265>; [INV]

  <bb 253> :
  _210 = filed_from->base.code;
  if (_210 != 26)
    goto <bb 254>; [INV]
  else
    goto <bb 265>; [INV]

  <bb 254> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 255>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 255> :
  _211 = gimple_code (def_stmt2);
  retval.1084 = _211 != 20;
  if (retval.1084 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 256> :
  D.252589 = gimple_assign_rhs1 (def_stmt2);

  <bb 257> :
  _212 = D.252589;
  retval.1085 = _212 != 0B;
  if (retval.1085 != 0)
    goto <bb 258>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 258> :
  D.252590 = gimple_assign_rhs1 (def_stmt2);

  <bb 259> :
  _213 = D.252590;
  _214 = _213->base.code;
  retval.1086 = _214 != 0;
  if (retval.1086 != 0)
    goto <bb 260>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 260> :
  if (def_stmt2 != 0B)
    goto <bb 261>; [INV]
  else
    goto <bb 263>; [INV]

  <bb 261> :
  D.252591 = gimple_assign_rhs1 (def_stmt2);

  <bb 262> :
  treecheck2 = D.252591;
  goto <bb 264>; [INV]

  <bb 263> :
  treecheck2 = filed_from;

  <bb 264> :
  goto <bb 266>; [INV]

  <bb 265> :
  treecheck2 = filed_from;

  <bb 266> :
  if (treecheck == 0B)
    goto <bb 267>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 267> :
  treecheck = filed_from2;

  <bb 268> :
  if (treecheck2 == 0B)
    goto <bb 269>; [INV]
  else
    goto <bb 270>; [INV]

  <bb 269> :
  treecheck2 = filed_from;

  <bb 270> :
  if (treecheck2 == treecheck)
    goto <bb 271>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 271> :
  _215 = (long unsigned int) i;
  _216 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _215);
  _217 = _216->stmt;
  D.252592 = gimple_assign_rhs1 (_217);

  <bb 272> :
  _218 = D.252592;
  D.252593 = check_stmtStack (_218);

  <bb 273> :
  _219 = D.252593;
  retval.1087 = _219 == 0;
  if (retval.1087 != 0)
    goto <bb 274>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 274> :
  _220 = (long unsigned int) i;
  _221 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _220);
  _222 = _221->stmt;
  D.252594 = gimple_assign_rhs1 (_222);

  <bb 275> :
  _223 = D.252594;
  if (target2 != _223)
    goto <bb 276>; [INV]
  else
    goto <bb 279>; [INV]

  <bb 276> :
  _224 = (long unsigned int) i;
  _225 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _224);
  _226 = _225->stmt;
  D.252595 = check_stmtStack2 (_226);

  <bb 277> :
  _227 = D.252595;
  if (_227 == 0)
    goto <bb 278>; [INV]
  else
    goto <bb 279>; [INV]

  <bb 278> :
  iftmp.1089 = 1;
  goto <bb 280>; [INV]

  <bb 279> :
  iftmp.1089 = 0;

  <bb 280> :
  retval.1088 = iftmp.1089;
  if (retval.1088 != 0)
    goto <bb 281>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 281> :
  _228 = (long unsigned int) i;
  _229 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _228);
  _230 = _229->stmt;
  D.252596 = gimple_assign_rhs1 (_230);

  <bb 282> :
  _231 = D.252596;
  _232 = (long unsigned int) i;
  _233 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _232);
  _234 = _233->stmt;
  set_gimple_array (used_stmt, _234, _231, target, 0B);

  <bb 283> :
  _235 = (long unsigned int) i;
  _236 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _235);
  _237 = _236->stmt;
  D.252597 = gimple_assign_rhs1 (_237);

  <bb 284> :
  _238 = D.252597;
  _239 = (long unsigned int) i;
  _240 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _239);
  _241 = _240->stmt;
  D.252598 = gimple_assign_rhs1 (_241);

  <bb 285> :
  _242 = D.252598;
  new_search_imm_use (used_stmt, _242, _238);
  goto <bb 337>; [INV]

  <bb 286> :
  _243 = (long unsigned int) i;
  _244 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _243);
  _245 = _244->stmt;
  D.252599 = gimple_assign_lhs (_245);

  <bb 287> :
  _246 = D.252599;
  _247 = _246->base.code;
  retval.1090 = _247 == 153;
  if (retval.1090 != 0)
    goto <bb 288>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 288> :
  filed_from = second->exp.operands[0];
  _248 = (long unsigned int) i;
  _249 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _248);
  _250 = _249->assign_tree;
  filed_from2 = _250->exp.operands[0];
  _251 = filed_from2->base.code;
  if (_251 == 165)
    goto <bb 289>; [INV]
  else
    goto <bb 290>; [INV]

  <bb 289> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 290> :
  _252 = filed_from->base.code;
  if (_252 == 165)
    goto <bb 291>; [INV]
  else
    goto <bb 292>; [INV]

  <bb 291> :
  filed_from = filed_from->exp.operands[0];

  <bb 292> :
  _253 = filed_from2->base.code;
  if (_253 == 153)
    goto <bb 293>; [INV]
  else
    goto <bb 303>; [INV]

  <bb 293> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 294>; [INV]
  else
    goto <bb 304>; [INV]

  <bb 294> :
  _254 = gimple_code (def_stmt);
  retval.1091 = _254 != 20;
  if (retval.1091 != 0)
    goto <bb 295>; [INV]
  else
    goto <bb 304>; [INV]

  <bb 295> :
  D.252600 = gimple_assign_rhs1 (def_stmt);

  <bb 296> :
  _255 = D.252600;
  retval.1092 = _255 != 0B;
  if (retval.1092 != 0)
    goto <bb 297>; [INV]
  else
    goto <bb 304>; [INV]

  <bb 297> :
  D.252601 = gimple_assign_rhs1 (def_stmt);

  <bb 298> :
  _256 = D.252601;
  _257 = _256->base.code;
  retval.1093 = _257 != 0;
  if (retval.1093 != 0)
    goto <bb 299>; [INV]
  else
    goto <bb 304>; [INV]

  <bb 299> :
  if (def_stmt != 0B)
    goto <bb 300>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 300> :
  D.252602 = gimple_assign_rhs1 (def_stmt);

  <bb 301> :
  treecheck = D.252602;
  goto <bb 304>; [INV]

  <bb 302> :
  treecheck = filed_from2;
  goto <bb 304>; [INV]

  <bb 303> :
  treecheck = filed_from2;

  <bb 304> :
  _258 = filed_from->base.code;
  if (_258 == 153)
    goto <bb 305>; [INV]
  else
    goto <bb 316>; [INV]

  <bb 305> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 306>; [INV]
  else
    goto <bb 317>; [INV]

  <bb 306> :
  _259 = filed_from->base.code;
  if (_259 != 20)
    goto <bb 307>; [INV]
  else
    goto <bb 317>; [INV]

  <bb 307> :
  _260 = gimple_code (def_stmt2);
  retval.1094 = _260 != 20;
  if (retval.1094 != 0)
    goto <bb 308>; [INV]
  else
    goto <bb 317>; [INV]

  <bb 308> :
  D.252603 = gimple_assign_rhs1 (def_stmt2);

  <bb 309> :
  _261 = D.252603;
  retval.1095 = _261 != 0B;
  if (retval.1095 != 0)
    goto <bb 310>; [INV]
  else
    goto <bb 317>; [INV]

  <bb 310> :
  D.252604 = gimple_assign_rhs1 (def_stmt2);

  <bb 311> :
  _262 = D.252604;
  _263 = _262->base.code;
  retval.1096 = _263 != 0;
  if (retval.1096 != 0)
    goto <bb 312>; [INV]
  else
    goto <bb 317>; [INV]

  <bb 312> :
  if (def_stmt2 != 0B)
    goto <bb 313>; [INV]
  else
    goto <bb 315>; [INV]

  <bb 313> :
  D.252605 = gimple_assign_rhs1 (def_stmt2);

  <bb 314> :
  treecheck2 = D.252605;
  goto <bb 317>; [INV]

  <bb 315> :
  treecheck2 = filed_from;
  goto <bb 317>; [INV]

  <bb 316> :
  treecheck2 = filed_from;

  <bb 317> :
  if (treecheck == 0B)
    goto <bb 318>; [INV]
  else
    goto <bb 319>; [INV]

  <bb 318> :
  treecheck = filed_from2;

  <bb 319> :
  if (treecheck2 == 0B)
    goto <bb 320>; [INV]
  else
    goto <bb 321>; [INV]

  <bb 320> :
  treecheck2 = filed_from;

  <bb 321> :
  if (treecheck2 == treecheck)
    goto <bb 322>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 322> :
  _264 = (long unsigned int) i;
  _265 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _264);
  _266 = _265->stmt;
  D.252606 = gimple_assign_lhs (_266);

  <bb 323> :
  _267 = D.252606;
  D.252607 = check_stmtStack (_267);

  <bb 324> :
  _268 = D.252607;
  retval.1097 = _268 == 0;
  if (retval.1097 != 0)
    goto <bb 325>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 325> :
  _269 = (long unsigned int) i;
  _270 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _269);
  _271 = _270->stmt;
  D.252608 = gimple_assign_lhs (_271);

  <bb 326> :
  _272 = D.252608;
  if (target2 != _272)
    goto <bb 327>; [INV]
  else
    goto <bb 330>; [INV]

  <bb 327> :
  _273 = (long unsigned int) i;
  _274 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _273);
  _275 = _274->stmt;
  D.252609 = check_stmtStack2 (_275);

  <bb 328> :
  _276 = D.252609;
  if (_276 == 0)
    goto <bb 329>; [INV]
  else
    goto <bb 330>; [INV]

  <bb 329> :
  iftmp.1099 = 1;
  goto <bb 331>; [INV]

  <bb 330> :
  iftmp.1099 = 0;

  <bb 331> :
  retval.1098 = iftmp.1099;
  if (retval.1098 != 0)
    goto <bb 332>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 332> :
  _277 = (long unsigned int) i;
  _278 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _277);
  _279 = _278->stmt;
  D.252610 = gimple_assign_rhs1 (_279);

  <bb 333> :
  _280 = D.252610;
  _281 = (long unsigned int) i;
  _282 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _281);
  _283 = _282->stmt;
  set_gimple_array (used_stmt, _283, _280, target, 0B);

  <bb 334> :
  _284 = (long unsigned int) i;
  _285 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _284);
  _286 = _285->stmt;
  D.252611 = gimple_assign_lhs (_286);

  <bb 335> :
  _287 = D.252611;
  _288 = (long unsigned int) i;
  _289 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _288);
  _290 = _289->stmt;
  D.252612 = gimple_assign_lhs (_290);

  <bb 336> :
  _291 = D.252612;
  new_search_imm_use (used_stmt, _291, _287);

  <bb 337> :
  i = i + 1;

  <bb 338> :
  _292 = (long unsigned int) i;
  _293 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1100 = _292 < _293;
  if (retval.1100 != 0)
    goto <bb 233>; [INV]
  else
    goto <bb 339>; [INV]

  <bb 339> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 342>; [INV]

  <bb 340> :
  _294 = second->base.code;
  if (_294 == 36)
    goto <bb 341>; [INV]
  else
    goto <bb 342>; [INV]

  <bb 341> :
  getFunctionAssignVAR = second;

  <bb 342> :
  second2 = {CLOBBER};

  <bb 343> :
  D.252617 = gimple_assign_lhs (use_stmt);

  <bb 344> :
  _295 = D.252617;
  D.252618 = check_stmtStack (_295);

  <bb 345> :
  _296 = D.252618;
  if (_296 == 0)
    goto <bb 346>; [INV]
  else
    goto <bb 349>; [INV]

  <bb 346> :
  D.252619 = check_stmtStack2 (use_stmt);

  <bb 347> :
  _297 = D.252619;
  if (_297 == 0)
    goto <bb 348>; [INV]
  else
    goto <bb 349>; [INV]

  <bb 348> :
  iftmp.1102 = 1;
  goto <bb 350>; [INV]

  <bb 349> :
  iftmp.1102 = 0;

  <bb 350> :
  retval.1101 = iftmp.1102;
  if (retval.1101 != 0)
    goto <bb 351>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 351> :
  D.252620 = gimple_assign_lhs (use_stmt);

  <bb 352> :
  _298 = D.252620;
  set_gimple_array (used_stmt, use_stmt, _298, target, 0B);
  goto <bb 363>; [INV]

  <bb 353> :
  D.252621 = gimple_assign_rhs1 (use_stmt);

  <bb 354> :
  _299 = D.252621;
  D.252622 = check_stmtStack (_299);

  <bb 355> :
  _300 = D.252622;
  if (_300 == 0)
    goto <bb 356>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 356> :
  D.252623 = check_stmtStack2 (use_stmt);

  <bb 357> :
  _301 = D.252623;
  if (_301 == 0)
    goto <bb 358>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 358> :
  iftmp.1104 = 1;
  goto <bb 360>; [INV]

  <bb 359> :
  iftmp.1104 = 0;

  <bb 360> :
  retval.1103 = iftmp.1104;
  if (retval.1103 != 0)
    goto <bb 361>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 361> :
  D.252624 = gimple_assign_rhs1 (use_stmt);

  <bb 362> :
  _302 = D.252624;
  set_gimple_array (used_stmt, use_stmt, _302, target, 0B);

  <bb 363> :
  getFunctionAssignVAR.1105_303 = getFunctionAssignVAR;
  if (getFunctionAssignVAR.1105_303 != 0B)
    goto <bb 364>; [INV]
  else
    goto <bb 616>; [INV]

  <bb 364> :
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1107_304 = function_assign_collect;
  D.252625 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1107_304, &getFunctionAssignVAR);

  <bb 365> :
  _305 = D.252625;
  retval.1106 = _305 != 0B;
  if (retval.1106 != 0)
    goto <bb 366>; [INV]
  else
    goto <bb 615>; [INV]

  <bb 366> :
  getFunctionAssignVAR.1108_306 = getFunctionAssignVAR;
  D.196194 = ret_function_varstmt (getFunctionAssignVAR.1108_306); [return slot optimization]

  <bb 367> :
  function_assign_array::operator= (&assign_array, &D.196194);
  function_assign_array::~function_assign_array (&D.196194);
  D.196194 = {CLOBBER};
  i = 0;
  goto <bb 614>; [INV]

  <bb 368> :
  _307 = (long unsigned int) i;
  _308 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _307);
  nowstmt = _308->stmt;
  _309 = gimple_code (nowstmt);
  retval.1109 = _309 == 6;
  if (retval.1109 != 0)
    goto <bb 369>; [INV]
  else
    goto <bb 546>; [INV]

  <bb 369> :
  D.252626 = gimple_assign_lhs (nowstmt);

  <bb 370> :
  _310 = D.252626;
  _311 = _310->base.code;
  retval.1110 = _311 == 165;
  if (retval.1110 != 0)
    goto <bb 371>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 371> :
  D.252627 = gimple_assign_lhs (nowstmt);

  <bb 372> :
  _312 = D.252627;
  D.252628 = check_stmtStack (_312);

  <bb 373> :
  _313 = D.252628;
  retval.1111 = _313 == 0;
  if (retval.1111 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 374> :
  _314 = (long unsigned int) i;
  _315 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _314);
  _316 = _315->form_tree;
  retval.1112 = _316 != 0B;
  if (retval.1112 != 0)
    goto <bb 375>; [INV]
  else
    goto <bb 376>; [INV]

  <bb 375> :
  _317 = (long unsigned int) i;
  _318 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _317);
  _319 = _318->form_tree;
  set_gimple_array (used_stmt, nowstmt, _319, target, 0B);
  goto <bb 378>; [INV]

  <bb 376> :
  D.252629 = gimple_assign_lhs (nowstmt);

  <bb 377> :
  _320 = D.252629;
  set_gimple_array (used_stmt, nowstmt, _320, target, 0B);

  <bb 378> :
  D.252630 = gimple_assign_lhs (nowstmt);

  <bb 379> :
  _321 = D.252630;
  second = _321->exp.operands[0];
  if (second != 0B)
    goto <bb 380>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 380> :
  _322 = second->base.code;
  if (_322 == 153)
    goto <bb 381>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 381> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1113 = is_gimple_assign (def_stmt);
  if (retval.1113 != 0)
    goto <bb 382>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 382> :
  D.252631 = gimple_assign_lhs (def_stmt);

  <bb 383> :
  _323 = D.252631;
  _324 = _323->base.code;
  retval.1114 = _324 == 153;
  if (retval.1114 != 0)
    goto <bb 384>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 384> :
  D.252632 = gimple_assign_lhs (def_stmt);

  <bb 385> :
  _325 = D.252632;
  retval.1115 = target2 != _325;
  if (retval.1115 != 0)
    goto <bb 386>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 386> :
  D.252633 = gimple_assign_lhs (def_stmt);

  <bb 387> :
  _326 = D.252633;
  D.252634 = gimple_assign_lhs (def_stmt);

  <bb 388> :
  _327 = D.252634;
  new_search_imm_use (used_stmt, _327, _326);
  goto <bb 613>; [INV]

  <bb 389> :
  D.252635 = gimple_assign_lhs (nowstmt);

  <bb 390> :
  _328 = D.252635;
  _329 = _328->base.code;
  retval.1116 = _329 == 153;
  if (retval.1116 != 0)
    goto <bb 391>; [INV]
  else
    goto <bb 471>; [INV]

  <bb 391> :
  D.252636 = gimple_assign_lhs (nowstmt);

  <bb 392> :
  _330 = D.252636;
  D.252637 = check_stmtStack (_330);

  <bb 393> :
  _331 = D.252637;
  retval.1117 = _331 == 0;
  if (retval.1117 != 0)
    goto <bb 394>; [INV]
  else
    goto <bb 410>; [INV]

  <bb 394> :
  _332 = (long unsigned int) i;
  _333 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _332);
  _334 = _333->form_tree;
  retval.1118 = _334 != 0B;
  if (retval.1118 != 0)
    goto <bb 395>; [INV]
  else
    goto <bb 396>; [INV]

  <bb 395> :
  _335 = (long unsigned int) i;
  _336 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _335);
  _337 = _336->form_tree;
  set_gimple_array (used_stmt, nowstmt, _337, target, 0B);
  goto <bb 398>; [INV]

  <bb 396> :
  D.252638 = gimple_assign_lhs (nowstmt);

  <bb 397> :
  _338 = D.252638;
  set_gimple_array (used_stmt, nowstmt, _338, target, 0B);

  <bb 398> :
  D.252639 = check_stmtStack4 (nowstmt);

  <bb 399> :
  _339 = D.252639;
  retval.1119 = _339 == 0;
  if (retval.1119 != 0)
    goto <bb 400>; [INV]
  else
    goto <bb 410>; [INV]

  <bb 400> :
  D.252640 = gimple_assign_lhs (nowstmt);

  <bb 401> :
  _340 = D.252640;
  if (target2 != _340)
    goto <bb 402>; [INV]
  else
    goto <bb 405>; [INV]

  <bb 402> :
  D.252641 = check_stmtStack2 (nowstmt);

  <bb 403> :
  _341 = D.252641;
  if (_341 == 0)
    goto <bb 404>; [INV]
  else
    goto <bb 405>; [INV]

  <bb 404> :
  iftmp.1121 = 1;
  goto <bb 406>; [INV]

  <bb 405> :
  iftmp.1121 = 0;

  <bb 406> :
  retval.1120 = iftmp.1121;
  if (retval.1120 != 0)
    goto <bb 407>; [INV]
  else
    goto <bb 410>; [INV]

  <bb 407> :
  D.252642 = gimple_assign_lhs (nowstmt);

  <bb 408> :
  _342 = D.252642;
  D.252643 = gimple_assign_lhs (nowstmt);

  <bb 409> :
  _343 = D.252643;
  new_search_imm_use (used_stmt, _343, _342);

  <bb 410> :
  D.252644 = gimple_assign_rhs1 (nowstmt);

  <bb 411> :
  _344 = D.252644;
  if (_344 != 0B)
    goto <bb 412>; [INV]
  else
    goto <bb 415>; [INV]

  <bb 412> :
  D.252645 = gimple_assign_rhs1 (nowstmt);

  <bb 413> :
  _345 = D.252645;
  _346 = _345->base.code;
  if (_346 == 47)
    goto <bb 414>; [INV]
  else
    goto <bb 415>; [INV]

  <bb 414> :
  iftmp.1123 = 1;
  goto <bb 416>; [INV]

  <bb 415> :
  iftmp.1123 = 0;

  <bb 416> :
  retval.1122 = iftmp.1123;
  if (retval.1122 != 0)
    goto <bb 417>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 417> :
  D.252646 = gimple_assign_rhs1 (nowstmt);

  <bb 418> :
  _347 = D.252646;
  D.252647 = check_stmtStack (_347);

  <bb 419> :
  _348 = D.252647;
  retval.1124 = _348 == 0;
  if (retval.1124 != 0)
    goto <bb 420>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 420> :
  D.252648 = gimple_assign_rhs1 (nowstmt);

  <bb 421> :
  _349 = D.252648;
  second = _349->exp.operands[0];
  if (second != 0B)
    goto <bb 422>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 422> :
  _350 = second->base.code;
  if (_350 == 165)
    goto <bb 423>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 423> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 424>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 424> :
  _351 = three->base.code;
  if (_351 == 153)
    goto <bb 425>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 425> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1125 = is_gimple_assign (def_stmt);
  if (retval.1125 != 0)
    goto <bb 426>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 426> :
  D.252649 = gimple_assign_lhs (def_stmt);

  <bb 427> :
  _352 = D.252649;
  _353 = _352->base.code;
  retval.1126 = _353 == 153;
  if (retval.1126 != 0)
    goto <bb 428>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 428> :
  D.252650 = gimple_assign_lhs (def_stmt);

  <bb 429> :
  _354 = D.252650;
  retval.1127 = target2 != _354;
  if (retval.1127 != 0)
    goto <bb 430>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 430> :
  D.252651 = gimple_assign_lhs (def_stmt);

  <bb 431> :
  _355 = D.252651;
  D.252652 = gimple_assign_lhs (def_stmt);

  <bb 432> :
  _356 = D.252652;
  new_search_imm_use (used_stmt, _356, _355);
  goto <bb 613>; [INV]

  <bb 433> :
  D.252653 = gimple_assign_rhs1 (nowstmt);

  <bb 434> :
  _357 = D.252653;
  if (_357 != 0B)
    goto <bb 435>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 435> :
  D.252654 = gimple_assign_rhs1 (nowstmt);

  <bb 436> :
  _358 = D.252654;
  _359 = _358->base.code;
  if (_359 == 165)
    goto <bb 437>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 437> :
  iftmp.1129 = 1;
  goto <bb 439>; [INV]

  <bb 438> :
  iftmp.1129 = 0;

  <bb 439> :
  retval.1128 = iftmp.1129;
  if (retval.1128 != 0)
    goto <bb 440>; [INV]
  else
    goto <bb 457>; [INV]

  <bb 440> :
  D.252655 = gimple_assign_rhs1 (nowstmt);

  <bb 441> :
  _360 = D.252655;
  D.252656 = check_stmtStack (_360);

  <bb 442> :
  _361 = D.252656;
  retval.1130 = _361 == 0;
  if (retval.1130 != 0)
    goto <bb 443>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 443> :
  _362 = (long unsigned int) i;
  _363 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _362);
  _364 = _363->form_tree;
  retval.1131 = _364 != 0B;
  if (retval.1131 != 0)
    goto <bb 444>; [INV]
  else
    goto <bb 445>; [INV]

  <bb 444> :
  _365 = (long unsigned int) i;
  _366 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _365);
  _367 = _366->form_tree;
  set_gimple_array (used_stmt, nowstmt, _367, target, 0B);
  goto <bb 447>; [INV]

  <bb 445> :
  D.252657 = gimple_assign_rhs1 (nowstmt);

  <bb 446> :
  _368 = D.252657;
  set_gimple_array (used_stmt, nowstmt, _368, target, 0B);

  <bb 447> :
  D.252658 = gimple_assign_rhs1 (nowstmt);

  <bb 448> :
  _369 = D.252658;
  second = _369->exp.operands[0];
  _370 = second->base.code;
  if (_370 == 165)
    goto <bb 449>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 449> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1132 = is_gimple_assign (def_stmt);
  if (retval.1132 != 0)
    goto <bb 450>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 450> :
  D.252659 = gimple_assign_lhs (def_stmt);

  <bb 451> :
  _371 = D.252659;
  _372 = _371->base.code;
  retval.1133 = _372 == 153;
  if (retval.1133 != 0)
    goto <bb 452>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 452> :
  D.252660 = gimple_assign_lhs (def_stmt);

  <bb 453> :
  _373 = D.252660;
  retval.1134 = target2 != _373;
  if (retval.1134 != 0)
    goto <bb 454>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 454> :
  D.252661 = gimple_assign_lhs (def_stmt);

  <bb 455> :
  _374 = D.252661;
  D.252662 = gimple_assign_lhs (def_stmt);

  <bb 456> :
  _375 = D.252662;
  new_search_imm_use (used_stmt, _375, _374);
  goto <bb 613>; [INV]

  <bb 457> :
  D.252663 = gimple_assign_rhs1 (nowstmt);

  <bb 458> :
  _376 = D.252663;
  if (_376 != 0B)
    goto <bb 459>; [INV]
  else
    goto <bb 462>; [INV]

  <bb 459> :
  D.252664 = gimple_assign_rhs1 (nowstmt);

  <bb 460> :
  _377 = D.252664;
  _378 = _377->base.code;
  if (_378 == 49)
    goto <bb 461>; [INV]
  else
    goto <bb 462>; [INV]

  <bb 461> :
  iftmp.1136 = 1;
  goto <bb 463>; [INV]

  <bb 462> :
  iftmp.1136 = 0;

  <bb 463> :
  retval.1135 = iftmp.1136;
  if (retval.1135 != 0)
    goto <bb 464>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 464> :
  D.252665 = gimple_assign_rhs1 (nowstmt);

  <bb 465> :
  _379 = D.252665;
  D.252666 = check_stmtStack (_379);

  <bb 466> :
  _380 = D.252666;
  retval.1137 = _380 == 0;
  if (retval.1137 != 0)
    goto <bb 467>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 467> :
  _381 = (long unsigned int) i;
  _382 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _381);
  _383 = _382->form_tree;
  retval.1138 = _383 != 0B;
  if (retval.1138 != 0)
    goto <bb 468>; [INV]
  else
    goto <bb 469>; [INV]

  <bb 468> :
  _384 = (long unsigned int) i;
  _385 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _384);
  _386 = _385->form_tree;
  set_gimple_array (used_stmt, nowstmt, _386, target, 0B);
  goto <bb 613>; [INV]

  <bb 469> :
  D.252667 = gimple_assign_rhs1 (nowstmt);

  <bb 470> :
  _387 = D.252667;
  set_gimple_array (used_stmt, nowstmt, _387, target, 0B);
  goto <bb 613>; [INV]

  <bb 471> :
  D.252668 = gimple_assign_rhs1 (nowstmt);

  <bb 472> :
  _388 = D.252668;
  _389 = _388->base.code;
  retval.1139 = _389 == 153;
  if (retval.1139 != 0)
    goto <bb 473>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 473> :
  D.252669 = gimple_assign_rhs1 (nowstmt);

  <bb 474> :
  _390 = D.252669;
  D.252670 = check_stmtStack (_390);

  <bb 475> :
  _391 = D.252670;
  retval.1140 = _391 == 0;
  if (retval.1140 != 0)
    goto <bb 476>; [INV]
  else
    goto <bb 494>; [INV]

  <bb 476> :
  _392 = (long unsigned int) i;
  _393 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _392);
  _394 = _393->form_tree;
  retval.1141 = _394 != 0B;
  if (retval.1141 != 0)
    goto <bb 477>; [INV]
  else
    goto <bb 478>; [INV]

  <bb 477> :
  _395 = (long unsigned int) i;
  _396 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _395);
  _397 = _396->form_tree;
  set_gimple_array (used_stmt, nowstmt, _397, target, 0B);
  goto <bb 480>; [INV]

  <bb 478> :
  D.252671 = gimple_assign_rhs1 (nowstmt);

  <bb 479> :
  _398 = D.252671;
  set_gimple_array (used_stmt, nowstmt, _398, target, 0B);

  <bb 480> :
  D.252672 = gimple_assign_rhs1 (nowstmt);

  <bb 481> :
  _399 = D.252672;
  retval.1142 = target2 != _399;
  if (retval.1142 != 0)
    goto <bb 482>; [INV]
  else
    goto <bb 494>; [INV]

  <bb 482> :
  D.252673 = check_stmtStack4 (nowstmt);

  <bb 483> :
  _400 = D.252673;
  retval.1143 = _400 == 0;
  if (retval.1143 != 0)
    goto <bb 484>; [INV]
  else
    goto <bb 494>; [INV]

  <bb 484> :
  D.252674 = gimple_assign_rhs1 (nowstmt);

  <bb 485> :
  _401 = D.252674;
  if (target2 != _401)
    goto <bb 486>; [INV]
  else
    goto <bb 489>; [INV]

  <bb 486> :
  D.252675 = check_stmtStack2 (nowstmt);

  <bb 487> :
  _402 = D.252675;
  if (_402 == 0)
    goto <bb 488>; [INV]
  else
    goto <bb 489>; [INV]

  <bb 488> :
  iftmp.1145 = 1;
  goto <bb 490>; [INV]

  <bb 489> :
  iftmp.1145 = 0;

  <bb 490> :
  retval.1144 = iftmp.1145;
  if (retval.1144 != 0)
    goto <bb 491>; [INV]
  else
    goto <bb 494>; [INV]

  <bb 491> :
  D.252676 = gimple_assign_rhs1 (nowstmt);

  <bb 492> :
  _403 = D.252676;
  D.252677 = gimple_assign_rhs1 (nowstmt);

  <bb 493> :
  _404 = D.252677;
  new_search_imm_use (used_stmt, _404, _403);

  <bb 494> :
  D.252678 = gimple_assign_lhs (nowstmt);

  <bb 495> :
  _405 = D.252678;
  if (_405 != 0B)
    goto <bb 496>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 496> :
  D.252679 = gimple_assign_lhs (nowstmt);

  <bb 497> :
  _406 = D.252679;
  _407 = _406->base.code;
  if (_407 == 47)
    goto <bb 498>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 498> :
  iftmp.1147 = 1;
  goto <bb 500>; [INV]

  <bb 499> :
  iftmp.1147 = 0;

  <bb 500> :
  retval.1146 = iftmp.1147;
  if (retval.1146 != 0)
    goto <bb 501>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 501> :
  D.252680 = gimple_assign_lhs (nowstmt);

  <bb 502> :
  _408 = D.252680;
  D.252681 = check_stmtStack (_408);

  <bb 503> :
  _409 = D.252681;
  retval.1148 = _409 == 0;
  if (retval.1148 != 0)
    goto <bb 504>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 504> :
  D.252682 = gimple_assign_lhs (nowstmt);

  <bb 505> :
  _410 = D.252682;
  second = _410->exp.operands[0];
  if (second != 0B)
    goto <bb 506>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 506> :
  _411 = second->base.code;
  if (_411 == 165)
    goto <bb 507>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 507> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 508>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 508> :
  _412 = three->base.code;
  if (_412 == 153)
    goto <bb 509>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 509> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1149 = is_gimple_assign (def_stmt);
  if (retval.1149 != 0)
    goto <bb 510>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 510> :
  D.252683 = gimple_assign_lhs (def_stmt);

  <bb 511> :
  _413 = D.252683;
  _414 = _413->base.code;
  retval.1150 = _414 == 153;
  if (retval.1150 != 0)
    goto <bb 512>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 512> :
  D.252684 = gimple_assign_lhs (def_stmt);

  <bb 513> :
  _415 = D.252684;
  retval.1151 = target2 != _415;
  if (retval.1151 != 0)
    goto <bb 514>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 514> :
  D.252685 = gimple_assign_lhs (def_stmt);

  <bb 515> :
  _416 = D.252685;
  D.252686 = gimple_assign_lhs (def_stmt);

  <bb 516> :
  _417 = D.252686;
  new_search_imm_use (used_stmt, _417, _416);
  goto <bb 613>; [INV]

  <bb 517> :
  D.252687 = gimple_assign_lhs (nowstmt);

  <bb 518> :
  _418 = D.252687;
  if (_418 != 0B)
    goto <bb 519>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 519> :
  D.252688 = gimple_assign_lhs (nowstmt);

  <bb 520> :
  _419 = D.252688;
  _420 = _419->base.code;
  if (_420 == 165)
    goto <bb 521>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 521> :
  iftmp.1153 = 1;
  goto <bb 523>; [INV]

  <bb 522> :
  iftmp.1153 = 0;

  <bb 523> :
  retval.1152 = iftmp.1153;
  if (retval.1152 != 0)
    goto <bb 524>; [INV]
  else
    goto <bb 537>; [INV]

  <bb 524> :
  D.252689 = gimple_assign_lhs (nowstmt);

  <bb 525> :
  _421 = D.252689;
  D.252690 = check_stmtStack (_421);

  <bb 526> :
  _422 = D.252690;
  retval.1154 = _422 == 0;
  if (retval.1154 != 0)
    goto <bb 527>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 527> :
  D.252691 = gimple_assign_lhs (nowstmt);

  <bb 528> :
  _423 = D.252691;
  second = _423->exp.operands[0];
  _424 = second->base.code;
  if (_424 == 165)
    goto <bb 529>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 529> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1155 = is_gimple_assign (def_stmt);
  if (retval.1155 != 0)
    goto <bb 530>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 530> :
  D.252692 = gimple_assign_lhs (def_stmt);

  <bb 531> :
  _425 = D.252692;
  _426 = _425->base.code;
  retval.1156 = _426 == 153;
  if (retval.1156 != 0)
    goto <bb 532>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 532> :
  D.252693 = gimple_assign_lhs (def_stmt);

  <bb 533> :
  _427 = D.252693;
  retval.1157 = target2 != _427;
  if (retval.1157 != 0)
    goto <bb 534>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 534> :
  D.252694 = gimple_assign_lhs (def_stmt);

  <bb 535> :
  _428 = D.252694;
  D.252695 = gimple_assign_lhs (def_stmt);

  <bb 536> :
  _429 = D.252695;
  new_search_imm_use (used_stmt, _429, _428);
  goto <bb 613>; [INV]

  <bb 537> :
  D.252696 = gimple_assign_lhs (nowstmt);

  <bb 538> :
  _430 = D.252696;
  _431 = _430->base.code;
  retval.1158 = _431 == 49;
  if (retval.1158 != 0)
    goto <bb 539>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 539> :
  D.252697 = gimple_assign_lhs (nowstmt);

  <bb 540> :
  _432 = D.252697;
  D.252698 = check_stmtStack (_432);

  <bb 541> :
  _433 = D.252698;
  retval.1159 = _433 == 0;
  if (retval.1159 != 0)
    goto <bb 542>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 542> :
  _434 = (long unsigned int) i;
  _435 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _434);
  _436 = _435->form_tree;
  retval.1160 = _436 != 0B;
  if (retval.1160 != 0)
    goto <bb 543>; [INV]
  else
    goto <bb 544>; [INV]

  <bb 543> :
  _437 = (long unsigned int) i;
  _438 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _437);
  _439 = _438->form_tree;
  set_gimple_array (used_stmt, nowstmt, _439, target, 0B);
  goto <bb 613>; [INV]

  <bb 544> :
  D.252699 = gimple_assign_lhs (nowstmt);

  <bb 545> :
  _440 = D.252699;
  set_gimple_array (used_stmt, nowstmt, _440, target, 0B);
  goto <bb 613>; [INV]

  <bb 546> :
  _441 = gimple_code (nowstmt);
  retval.1161 = _441 == 8;
  if (retval.1161 != 0)
    goto <bb 547>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 547> :
  _442 = gimple_code (nowstmt);
  retval.1162 = _442 == 8;
  if (retval.1162 != 0)
    goto <bb 548>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 548> :
  D.252700 = gimple_call_fn (nowstmt);

  <bb 549> :
  _443 = D.252700;
  retval.1163 = _443 != 0B;
  if (retval.1163 != 0)
    goto <bb 550>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 550> :
  D.252701 = gimple_call_fn (nowstmt);

  <bb 551> :
  _444 = D.252701;
  D.252702 = get_name (_444);

  <bb 552> :
  name = D.252702;
  D.252703 = gimple_call_lhs (nowstmt);

  <bb 553> :
  _445 = D.252703;
  if (_445 != 0B)
    goto <bb 556>; [INV]
  else
    goto <bb 554>; [INV]

  <bb 554> :
  D.252704 = gimple_call_fndecl (nowstmt);

  <bb 555> :
  _446 = D.252704;
  if (_446 != 0B)
    goto <bb 556>; [INV]
  else
    goto <bb 557>; [INV]

  <bb 556> :
  iftmp.1165 = 1;
  goto <bb 558>; [INV]

  <bb 557> :
  iftmp.1165 = 0;

  <bb 558> :
  retval.1164 = iftmp.1165;
  if (retval.1164 != 0)
    goto <bb 559>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 559> :
  D.252705 = gimple_call_lhs (nowstmt);

  <bb 560> :
  _447 = D.252705;
  D.252706 = check_stmtStack (_447);

  <bb 561> :
  _448 = D.252706;
  retval.1166 = _448 == 0;
  if (retval.1166 != 0)
    goto <bb 562>; [INV]
  else
    goto <bb 590>; [INV]

  <bb 562> :
  if (name != 0B)
    goto <bb 563>; [INV]
  else
    goto <bb 572>; [INV]

  <bb 563> :
  _449 = strcmp (name, "free");
  if (_449 == 0)
    goto <bb 564>; [INV]
  else
    goto <bb 568>; [INV]

  <bb 564> :
  D.252707 = check_stmtStack2 (nowstmt);

  <bb 565> :
  _450 = D.252707;
  retval.1167 = _450 == 0;
  if (retval.1167 != 0)
    goto <bb 566>; [INV]
  else
    goto <bb 572>; [INV]

  <bb 566> :
  D.252708 = gimple_call_arg (nowstmt, 0);

  <bb 567> :
  _451 = D.252708;
  set_gimple_array (used_stmt, nowstmt, _451, target, 0B);
  goto <bb 572>; [INV]

  <bb 568> :
  _452 = (long unsigned int) i;
  _453 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _452);
  _454 = _453->form_tree;
  retval.1168 = _454 != 0B;
  if (retval.1168 != 0)
    goto <bb 569>; [INV]
  else
    goto <bb 570>; [INV]

  <bb 569> :
  _455 = (long unsigned int) i;
  _456 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _455);
  _457 = _456->form_tree;
  set_gimple_array (used_stmt, nowstmt, _457, target, 0B);
  goto <bb 572>; [INV]

  <bb 570> :
  D.252709 = gimple_call_lhs (nowstmt);

  <bb 571> :
  _458 = D.252709;
  set_gimple_array (used_stmt, nowstmt, _458, target, 0B);

  <bb 572> :
  D.252710 = gimple_call_num_args (nowstmt);

  <bb 573> :
  _459 = D.252710;
  size = (int) _459;
  i = 0;
  goto <bb 589>; [INV]

  <bb 574> :
  i.1170_460 = (unsigned int) i;
  D.252711 = gimple_call_arg (nowstmt, i.1170_460);

  <bb 575> :
  _461 = D.252711;
  D.252712 = check_stmtStack (_461);

  <bb 576> :
  _462 = D.252712;
  retval.1169 = _462 == 0;
  if (retval.1169 != 0)
    goto <bb 577>; [INV]
  else
    goto <bb 588>; [INV]

  <bb 577> :
  i.1172_463 = (unsigned int) i;
  D.252713 = gimple_call_arg (nowstmt, i.1172_463);

  <bb 578> :
  _464 = D.252713;
  _465 = _464->base.code;
  retval.1171 = _465 == 153;
  if (retval.1171 != 0)
    goto <bb 579>; [INV]
  else
    goto <bb 584>; [INV]

  <bb 579> :
  i.1174_466 = (unsigned int) i;
  D.252714 = gimple_call_arg (nowstmt, i.1174_466);

  <bb 580> :
  _467 = D.252714;
  retval.1173 = target2 != _467;
  if (retval.1173 != 0)
    goto <bb 581>; [INV]
  else
    goto <bb 588>; [INV]

  <bb 581> :
  i.1175_468 = (unsigned int) i;
  D.252715 = gimple_call_arg (nowstmt, i.1175_468);

  <bb 582> :
  _469 = D.252715;
  i.1176_470 = (unsigned int) i;
  D.252716 = gimple_call_arg (nowstmt, i.1176_470);

  <bb 583> :
  _471 = D.252716;
  new_search_imm_use (used_stmt, _471, _469);
  goto <bb 588>; [INV]

  <bb 584> :
  i.1178_472 = (unsigned int) i;
  D.252717 = gimple_call_arg (nowstmt, i.1178_472);

  <bb 585> :
  _473 = D.252717;
  _474 = _473->base.code;
  retval.1177 = _474 == 131;
  if (retval.1177 != 0)
    goto <bb 586>; [INV]
  else
    goto <bb 588>; [INV]

  <bb 586> :
  i.1179_475 = (unsigned int) i;
  D.252718 = gimple_call_arg (nowstmt, i.1179_475);

  <bb 587> :
  _476 = D.252718;
  set_gimple_array (used_stmt, nowstmt, _476, target, 0B);

  <bb 588> :
  i = i + 1;

  <bb 589> :
  if (i < size)
    goto <bb 574>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 590> :
  D.252719 = check_stmtStack2 (nowstmt);

  <bb 591> :
  _477 = D.252719;
  retval.1180 = _477 == 0;
  if (retval.1180 != 0)
    goto <bb 592>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 592> :
  D.252720 = gimple_call_arg (nowstmt, 0);

  <bb 593> :
  _478 = D.252720;
  _479 = _478->base.code;
  retval.1181 = _479 == 131;
  if (retval.1181 != 0)
    goto <bb 594>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 594> :
  D.252721 = gimple_call_arg (nowstmt, 0);

  <bb 595> :
  _480 = D.252721;
  set_gimple_array (used_stmt, nowstmt, _480, target, 0B);

  <bb 596> :
  D.252722 = gimple_call_num_args (nowstmt);

  <bb 597> :
  _481 = D.252722;
  size = (int) _481;
  i = 0;
  goto <bb 612>; [INV]

  <bb 598> :
  i.1183_482 = (unsigned int) i;
  D.252723 = gimple_call_arg (nowstmt, i.1183_482);

  <bb 599> :
  _483 = D.252723;
  D.252724 = check_stmtStack (_483);

  <bb 600> :
  _484 = D.252724;
  retval.1182 = _484 == 0;
  if (retval.1182 != 0)
    goto <bb 601>; [INV]
  else
    goto <bb 611>; [INV]

  <bb 601> :
  i.1185_485 = (unsigned int) i;
  D.252725 = gimple_call_arg (nowstmt, i.1185_485);

  <bb 602> :
  _486 = D.252725;
  _487 = _486->base.code;
  retval.1184 = _487 == 153;
  if (retval.1184 != 0)
    goto <bb 603>; [INV]
  else
    goto <bb 611>; [INV]

  <bb 603> :
  i.1187_488 = (unsigned int) i;
  D.252726 = gimple_call_arg (nowstmt, i.1187_488);

  <bb 604> :
  _489 = D.252726;
  D.252727 = check_stmtStack (_489);

  <bb 605> :
  _490 = D.252727;
  retval.1186 = _490 == 0;
  if (retval.1186 != 0)
    goto <bb 606>; [INV]
  else
    goto <bb 611>; [INV]

  <bb 606> :
  i.1189_491 = (unsigned int) i;
  D.252728 = gimple_call_arg (nowstmt, i.1189_491);

  <bb 607> :
  _492 = D.252728;
  retval.1188 = target2 != _492;
  if (retval.1188 != 0)
    goto <bb 608>; [INV]
  else
    goto <bb 611>; [INV]

  <bb 608> :
  i.1190_493 = (unsigned int) i;
  D.252729 = gimple_call_arg (nowstmt, i.1190_493);

  <bb 609> :
  _494 = D.252729;
  i.1191_495 = (unsigned int) i;
  D.252730 = gimple_call_arg (nowstmt, i.1191_495);

  <bb 610> :
  _496 = D.252730;
  new_search_imm_use (used_stmt, _496, _494);

  <bb 611> :
  i = i + 1;

  <bb 612> :
  if (i < size)
    goto <bb 598>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 613> :
  i = i + 1;

  <bb 614> :
  _497 = (long unsigned int) i;
  _498 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1192 = _497 < _498;
  if (retval.1192 != 0)
    goto <bb 368>; [INV]
  else
    goto <bb 615>; [INV]

  <bb 615> :
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};

  <bb 616> :
  getFunctionAssignVAR = {CLOBBER};

  <bb 617> :
  return;

  <bb 618> :
<L724>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 5

  <bb 619> :
<L725>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 4

  <bb 620> :
<L726>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 3

  <bb 621> :
<L727>:
  second2 = {CLOBBER};
  resx 2

  <bb 622> :
<L728>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 13

  <bb 623> :
<L729>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 12

  <bb 624> :
<L730>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 11

  <bb 625> :
<L731>:
  second2 = {CLOBBER};
  resx 10

  <bb 626> :
<L732>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 19

  <bb 627> :
<L733>:
  assign_array = {CLOBBER};
  resx 18

  <bb 628> :
<L734>:
  getFunctionAssignVAR = {CLOBBER};
  resx 1

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSEOS_, funcdef_no=6416, decl_uid=191023, cgraph_uid=3391, symbol_order=4164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, struct function_assign_array & D.191024)
{
  struct function_assign_array & D.252734;

  <bb 2> :
  _1 = D.191024->pass;
  this->pass = _1;
  _2 = &D.191024->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.252734 = this;

  <bb 3> :
<L0>:
  return D.252734;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSEOS2_, funcdef_no=7761, decl_uid=175193, cgraph_uid=4393, symbol_order=5175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, struct vector & __x)
{
  const bool __move_storage;
  struct vector & D.252737;
  struct integral_constant D.252736;

  <bb 2> :
  __move_storage = 1;
  _1 = std::move<std::vector<assign_type>&> (__x);
  std::vector<assign_type>::_M_move_assign (this, _1, D.252736);
  D.252737 = this;

  <bb 3> :
<L0>:
  return D.252737;

}



;; Function std::move<std::vector<assign_type>&> (_ZSt4moveIRSt6vectorI11assign_typeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=8703, decl_uid=213840, cgraph_uid=5335, symbol_order=6121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::vector<assign_type>&> (struct vector & __t)
{
  struct type & D.252739;

  <bb 2> :
  D.252739 = __t;

  <bb 3> :
<L0>:
  return D.252739;

}



;; Function std::vector<assign_type>::_M_move_assign (_ZNSt6vectorI11assign_typeSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE, funcdef_no=8704, decl_uid=175471, cgraph_uid=5336, symbol_order=6122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_move_assign (struct vector * const this, struct vector & __x, struct true_type D.226143)
{
  struct vector __tmp;
  struct allocator_type D.226146;

  <bb 2> :
  _1 = &this->D.175603;
  D.226146 = std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_1); [return slot optimization]
  std::vector<assign_type>::vector (&__tmp, &D.226146);
  std::allocator<assign_type>::~allocator (&D.226146);
  D.226146 = {CLOBBER};
  _2 = &this->D.175603._M_impl.D.174948;
  _3 = &__x->D.175603._M_impl.D.174948;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_2, _3);
  _4 = &__x->D.175603._M_impl.D.174948;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (&__tmp.D.175603._M_impl.D.174948, _4);
  _5 = &__x->D.175603;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = &this->D.175603;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  std::__alloc_on_move<std::allocator<assign_type> > (_8, _6);
  std::vector<assign_type>::~vector (&__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE13get_allocatorEv, funcdef_no=9515, decl_uid=174840, cgraph_uid=6147, symbol_order=6933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (const struct _Vector_base * const this)
{
  <bb 2> :
  _1 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (this);
  std::allocator<assign_type>::allocator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=9517, decl_uid=175590, cgraph_uid=6149, symbol_order=6935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175603;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=10131, decl_uid=175048, cgraph_uid=6763, symbol_order=7553)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_, funcdef_no=9519, decl_uid=174884, cgraph_uid=6151, symbol_order=6937)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  struct _Vector_impl_data __tmp;

  <bb 2> :
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (&__tmp);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (&__tmp, this);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (this, __x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (__x, &__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_, funcdef_no=10133, decl_uid=174881, cgraph_uid=6765, symbol_order=7555)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (struct _Vector_impl_data * const this, const struct _Vector_impl_data & __x)
{
  <bb 2> :
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  return;

}



;; Function std::__alloc_on_move<std::allocator<assign_type> > (_ZSt15__alloc_on_moveISaI11assign_typeEEvRT_S3_, funcdef_no=9520, decl_uid=226147, cgraph_uid=6152, symbol_order=6938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_move<std::allocator<assign_type> > (struct allocator & __one, struct allocator & __two)
{
  <bb 2> :
  std::move<std::allocator<assign_type>&> (__two);
  return;

}



;; Function std::move<std::allocator<assign_type>&> (_ZSt4moveIRSaI11assign_typeEEONSt16remove_referenceIT_E4typeEOS4_, funcdef_no=10134, decl_uid=235340, cgraph_uid=6766, symbol_order=7556)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<assign_type>&> (struct allocator & __t)
{
  struct type & D.252743;

  <bb 2> :
  D.252743 = __t;

  <bb 3> :
<L0>:
  return D.252743;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK6gimple, funcdef_no=2132, decl_uid=92888, cgraph_uid=1269, symbol_order=1429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gimple * gs)
{
  union tree_node * D.252748;
  const struct gcall * D.252747;
  const struct gcall * gc;
  union tree_node * D.252745;

  <bb 2> :
  D.252747 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.252747;
  D.252748 = gimple_call_fndecl (gc);
  D.252745 = D.252748;

  <bb 3> :
<L0>:
  return D.252745;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK5gcall, funcdef_no=2131, decl_uid=92885, cgraph_uid=1268, symbol_order=1428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gcall * gs)
{
  union tree_node * D.252751;
  union tree_node * D.252749;

  <bb 2> :
  _1 = gimple_call_fn (gs);
  D.252751 = gimple_call_addr_fndecl (_1);
  D.252749 = D.252751;

  <bb 3> :
<L0>:
  return D.252749;

}



;; Function gimple_call_addr_fndecl (_ZL23gimple_call_addr_fndeclPK9tree_node, funcdef_no=1909, decl_uid=89977, cgraph_uid=1048, symbol_order=1208)

Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 13 }
;; 3 succs { 4 13 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
union tree_node * gimple_call_addr_fndecl (const union tree_node * fn)
{
  bool D.252771;
  union tree_node * fndecl;
  union tree_node * D.252768;
  bool iftmp.1194;
  bool retval.1193;

  <bb 2> :
  if (fn != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  _1 = fn->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 4> :
  fndecl = fn->exp.operands[0];
  _2 = fndecl->base.code;
  if (_2 == 165)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _3 = fndecl->exp.operands[0];
  _4 = _3->base.code;
  if (_4 == 131)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _5 = fndecl->exp.operands[1];
  D.252771 = integer_zerop (_5);
  _6 = D.252771;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1194 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1194 = 0;

  <bb 9> :
  retval.1193 = iftmp.1194;
  if (retval.1193 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _7 = fndecl->exp.operands[0];
  fndecl = _7->exp.operands[0];

  <bb 11> :
  _8 = fndecl->base.code;
  if (_8 == 33)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.252768 = fndecl;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 13> :
  D.252768 = 0B;

  <bb 14> :
<L15>:
  return D.252768;

}



;; Function Prenew_search_imm_use (_Z21Prenew_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6417, decl_uid=187038, cgraph_uid=3393, symbol_order=4166)

Removing basic block 36
Removing basic block 39
Removing basic block 40
Removing basic block 48
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 89
Removing basic block 90
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 118
Removing basic block 119
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 132
Removing basic block 149
Removing basic block 150
Removing basic block 151
Removing basic block 152
Removing basic block 176
Removing basic block 177
Removing basic block 178
Removing basic block 179
Removing basic block 180
Removing basic block 181
Removing basic block 182
Removing basic block 183
Removing basic block 184
Removing basic block 205
Removing basic block 206
Removing basic block 207
Removing basic block 208
Removing basic block 209
Removing basic block 210
Removing basic block 211
Removing basic block 212
Removing basic block 221
Removing basic block 222
Removing basic block 230
Removing basic block 233
Removing basic block 234
Removing basic block 235
Removing basic block 238
Removing basic block 243
Removing basic block 246
Removing basic block 247
Removing basic block 248
Removing basic block 249
Removing basic block 250
Removing basic block 251
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 192, latch 191
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 186, latch 185
;;  depth 2, outer 1
;;  nodes: 186 185 88 168 184 37 167 134 137 139 142 144 140 138 136 157 160 164 162 159 147 101 68 71 73 76 78 74 72 70 91 94 98 96 93 81 35 33 154 103 178 182 180 179 181 177 176 170 175 173 172 171 174 169 102 39 38 30 29 28 152 153 149 151 150 148 131 129 130 126 128 127 125 106 124 112 121 114 113 119 120 116 118 117 115 111 108 110 109 107 123 122 105 104 32 31 34 80 79 92 95 97 90 89 69 77 75 67 66 65 63 64 60 62 61 59 42 58 48 55 53 54 50 52 51 49 47 44 46 45 43 57 56 41 40 100 99 146 145 158 161 163 156 155 135 143 141 133 132 166 165 36 183 86 87 83 85 84 82
;; 2 succs { 3 193 }
;; 3 succs { 4 193 }
;; 4 succs { 5 193 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 193 }
;; 10 succs { 11 193 }
;; 11 succs { 12 193 }
;; 12 succs { 192 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 188 }
;; 18 succs { 195 19 }
;; 19 succs { 20 22 }
;; 20 succs { 195 21 }
;; 21 succs { 24 }
;; 22 succs { 195 23 }
;; 23 succs { 24 }
;; 24 succs { 194 25 }
;; 25 succs { 26 187 }
;; 26 succs { 194 27 }
;; 27 succs { 186 }
;; 28 succs { 29 168 }
;; 29 succs { 194 30 }
;; 30 succs { 31 38 }
;; 31 succs { 194 32 }
;; 32 succs { 194 33 }
;; 33 succs { 34 185 }
;; 34 succs { 35 36 }
;; 35 succs { 194 185 }
;; 36 succs { 194 37 }
;; 37 succs { 194 185 }
;; 38 succs { 194 39 }
;; 39 succs { 40 102 }
;; 40 succs { 194 41 }
;; 41 succs { 194 42 }
;; 42 succs { 43 59 }
;; 43 succs { 44 45 }
;; 44 succs { 194 47 }
;; 45 succs { 194 46 }
;; 46 succs { 194 47 }
;; 47 succs { 194 48 }
;; 48 succs { 49 59 }
;; 49 succs { 194 50 }
;; 50 succs { 51 54 }
;; 51 succs { 194 52 }
;; 52 succs { 53 54 }
;; 53 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 56 59 }
;; 56 succs { 194 57 }
;; 57 succs { 194 58 }
;; 58 succs { 194 59 }
;; 59 succs { 194 60 }
;; 60 succs { 61 64 }
;; 61 succs { 194 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 82 }
;; 66 succs { 194 67 }
;; 67 succs { 194 68 }
;; 68 succs { 69 185 }
;; 69 succs { 194 70 }
;; 70 succs { 71 185 }
;; 71 succs { 72 185 }
;; 72 succs { 73 185 }
;; 73 succs { 74 185 }
;; 74 succs { 75 185 }
;; 75 succs { 194 76 }
;; 76 succs { 77 185 }
;; 77 succs { 194 78 }
;; 78 succs { 79 185 }
;; 79 succs { 194 80 }
;; 80 succs { 194 81 }
;; 81 succs { 194 185 }
;; 82 succs { 194 83 }
;; 83 succs { 84 87 }
;; 84 succs { 194 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 185 }
;; 89 succs { 194 90 }
;; 90 succs { 194 91 }
;; 91 succs { 92 185 }
;; 92 succs { 194 93 }
;; 93 succs { 94 185 }
;; 94 succs { 95 185 }
;; 95 succs { 194 96 }
;; 96 succs { 97 185 }
;; 97 succs { 194 98 }
;; 98 succs { 99 185 }
;; 99 succs { 194 100 }
;; 100 succs { 194 101 }
;; 101 succs { 194 185 }
;; 102 succs { 194 103 }
;; 103 succs { 104 185 }
;; 104 succs { 194 105 }
;; 105 succs { 194 106 }
;; 106 succs { 107 125 }
;; 107 succs { 108 109 }
;; 108 succs { 194 111 }
;; 109 succs { 194 110 }
;; 110 succs { 194 111 }
;; 111 succs { 194 112 }
;; 112 succs { 113 125 }
;; 113 succs { 194 114 }
;; 114 succs { 115 125 }
;; 115 succs { 194 116 }
;; 116 succs { 117 120 }
;; 117 succs { 194 118 }
;; 118 succs { 119 120 }
;; 119 succs { 121 }
;; 120 succs { 121 }
;; 121 succs { 122 125 }
;; 122 succs { 194 123 }
;; 123 succs { 194 124 }
;; 124 succs { 194 125 }
;; 125 succs { 194 126 }
;; 126 succs { 127 130 }
;; 127 succs { 194 128 }
;; 128 succs { 129 130 }
;; 129 succs { 131 }
;; 130 succs { 131 }
;; 131 succs { 132 148 }
;; 132 succs { 194 133 }
;; 133 succs { 194 134 }
;; 134 succs { 135 185 }
;; 135 succs { 194 136 }
;; 136 succs { 137 185 }
;; 137 succs { 138 185 }
;; 138 succs { 139 185 }
;; 139 succs { 140 185 }
;; 140 succs { 141 185 }
;; 141 succs { 194 142 }
;; 142 succs { 143 185 }
;; 143 succs { 194 144 }
;; 144 succs { 145 185 }
;; 145 succs { 194 146 }
;; 146 succs { 194 147 }
;; 147 succs { 194 185 }
;; 148 succs { 194 149 }
;; 149 succs { 150 153 }
;; 150 succs { 194 151 }
;; 151 succs { 152 153 }
;; 152 succs { 154 }
;; 153 succs { 154 }
;; 154 succs { 155 185 }
;; 155 succs { 194 156 }
;; 156 succs { 194 157 }
;; 157 succs { 158 185 }
;; 158 succs { 194 159 }
;; 159 succs { 160 185 }
;; 160 succs { 161 185 }
;; 161 succs { 194 162 }
;; 162 succs { 163 185 }
;; 163 succs { 194 164 }
;; 164 succs { 165 185 }
;; 165 succs { 194 166 }
;; 166 succs { 194 167 }
;; 167 succs { 194 185 }
;; 168 succs { 169 185 }
;; 169 succs { 194 170 }
;; 170 succs { 171 176 }
;; 171 succs { 194 172 }
;; 172 succs { 194 173 }
;; 173 succs { 174 176 }
;; 174 succs { 194 175 }
;; 175 succs { 194 176 }
;; 176 succs { 194 177 }
;; 177 succs { 194 178 }
;; 178 succs { 179 185 }
;; 179 succs { 194 180 }
;; 180 succs { 181 185 }
;; 181 succs { 182 183 }
;; 182 succs { 194 185 }
;; 183 succs { 194 184 }
;; 184 succs { 194 185 }
;; 185 succs { 186 }
;; 186 succs { 28 187 }
;; 187 succs { 191 }
;; 188 succs { 189 191 }
;; 189 succs { 190 191 }
;; 190 succs { 191 }
;; 191 succs { 192 }
;; 192 succs { 13 193 }
;; 193 succs { 1 }
;; 194 succs { 195 }
;; 195 succs { }
void Prenew_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  unsigned int D.253136;
  union tree_node * D.253135;
  union tree_node * D.253134;
  int D.253133;
  union tree_node * D.253132;
  union tree_node * D.253131;
  union tree_node * D.253128;
  union tree_node * D.253127;
  int D.253126;
  union tree_node * D.253125;
  union tree_node * D.253124;
  int D.253123;
  union tree_node * D.253122;
  union tree_node * D.253121;
  union tree_node * D.253120;
  union tree_node * D.253119;
  union tree_node * D.253118;
  union tree_node * D.253117;
  union tree_node * D.253116;
  int D.253115;
  union tree_node * D.253114;
  union tree_node * D.253113;
  union tree_node * D.253112;
  union tree_node * D.253111;
  union tree_node * D.253110;
  union tree_node * D.253109;
  union tree_node * D.253108;
  union tree_node * D.253107;
  int D.253106;
  union tree_node * D.253105;
  union tree_node * D.253104;
  union tree_node * D.253103;
  union tree_node * D.253102;
  union tree_node * D.253101;
  int D.253100;
  union tree_node * D.253099;
  int D.253098;
  union tree_node * D.253097;
  union tree_node * D.253096;
  int D.253095;
  union tree_node * D.253094;
  union tree_node * D.253093;
  union tree_node * D.253092;
  union tree_node * D.253091;
  union tree_node * D.253090;
  union tree_node * D.253089;
  union tree_node * D.253088;
  int D.253087;
  union tree_node * D.253086;
  union tree_node * D.253085;
  union tree_node * D.253084;
  union tree_node * D.253083;
  union tree_node * D.253082;
  union tree_node * D.253081;
  union tree_node * D.253080;
  union tree_node * D.253079;
  int D.253078;
  union tree_node * D.253077;
  union tree_node * D.253076;
  union tree_node * D.253075;
  union tree_node * D.253074;
  union tree_node * D.253073;
  int D.253072;
  union tree_node * D.253071;
  int D.253070;
  union tree_node * D.253069;
  int D.253068;
  union tree_node * D.253067;
  union tree_node * D.253066;
  union tree_node * D.253065;
  int D.253064;
  union tree_node * D.253063;
  union tree_node * D.253062;
  struct function_assign_array * D.253061;
  union tree_node * D.253060;
  union tree_node * D.253059;
  union tree_node * D.253058;
  union tree_node * D.253057;
  union tree_node * D.253056;
  unsigned int D.253055;
  union tree_node * D.253054;
  union tree_node * D.253053;
  union tree_node * D.253052;
  union tree_node * D.253051;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  union tree_node * second;
  int i;
  struct gimple * def_stmt;
  bool retval.1266;
  bool retval.1262;
  bool retval.1260;
  bool retval.1259;
  bool retval.1258;
  bool retval.1257;
  bool retval.1256;
  bool retval.1255;
  bool retval.1254;
  bool retval.1253;
  bool retval.1252;
  bool retval.1251;
  bool retval.1250;
  bool retval.1249;
  bool iftmp.1248;
  bool retval.1247;
  bool retval.1246;
  bool retval.1245;
  bool retval.1244;
  bool retval.1243;
  bool iftmp.1242;
  bool retval.1241;
  bool iftmp.1240;
  bool retval.1239;
  bool retval.1238;
  bool retval.1237;
  bool retval.1236;
  bool retval.1235;
  bool retval.1234;
  bool retval.1233;
  bool retval.1232;
  bool retval.1231;
  bool retval.1230;
  bool iftmp.1229;
  bool retval.1228;
  bool retval.1227;
  bool retval.1226;
  bool retval.1225;
  bool retval.1224;
  bool iftmp.1223;
  bool retval.1222;
  bool iftmp.1221;
  bool retval.1220;
  bool retval.1219;
  bool retval.1218;
  bool retval.1217;
  bool retval.1216;
  bool retval.1215;
  bool retval.1214;
  bool retval.1213;
  bool retval.1212;
  struct function_assign_array D.196251;
  bool retval.1209;
  bool retval.1205;
  bool iftmp.1202;
  bool retval.1201;
  bool retval.1200;
  bool retval.1199;
  bool iftmp.1198;
  bool retval.1197;
  bool retval.1196;
  bool retval.1195;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 3> :
  _1 = gimple_code (def_stmt);
  retval.1195 = _1 == 8;
  if (retval.1195 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 4> :
  D.253051 = gimple_call_lhs (def_stmt);
  _2 = D.253051;
  retval.1196 = _2 != 0B;
  if (retval.1196 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 5> :
  D.253052 = gimple_call_lhs (def_stmt);
  _3 = D.253052;
  if (_3 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  D.253053 = gimple_call_lhs (def_stmt);
  _4 = D.253053;
  _5 = _4->base.code;
  if (_5 == 153)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1198 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1198 = 0;

  <bb 9> :
  retval.1197 = iftmp.1198;
  if (retval.1197 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 10> :
  D.253054 = gimple_assign_rhs1 (def_stmt);
  _6 = D.253054;
  retval.1199 = _6 != 0B;
  if (retval.1199 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 11> :
  D.253055 = gimple_call_num_args (def_stmt);
  _7 = D.253055;
  retval.1200 = _7 != 0;
  if (retval.1200 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 12> :
  i = 0;
  goto <bb 192>; [INV]

  <bb 13> :
  i.1203_8 = (unsigned int) i;
  D.253056 = gimple_call_arg (def_stmt, i.1203_8);
  _9 = D.253056;
  _10 = _9->base.code;
  if (_10 == 131)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  i.1204_11 = (unsigned int) i;
  D.253057 = gimple_call_arg (def_stmt, i.1204_11);
  _12 = D.253057;
  _13 = _12->base.code;
  if (_13 == 36)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1202 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1202 = 0;

  <bb 17> :
  retval.1201 = iftmp.1202;
  if (retval.1201 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 18> :
  i.1206_14 = (unsigned int) i;
  D.253058 = gimple_call_arg (def_stmt, i.1206_14);

  <bb 19> :
  _15 = D.253058;
  _16 = _15->base.code;
  retval.1205 = _16 == 131;
  if (retval.1205 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  i.1207_17 = (unsigned int) i;
  D.253059 = gimple_call_arg (def_stmt, i.1207_17);

  <bb 21> :
  _18 = D.253059;
  second = _18->exp.operands[0];
  goto <bb 24>; [INV]

  <bb 22> :
  i.1208_19 = (unsigned int) i;
  D.253060 = gimple_call_arg (def_stmt, i.1208_19);

  <bb 23> :
  second = D.253060;

  <bb 24> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1210_20 = function_assign_collect;
  D.253061 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1210_20, &getFunctionAssignVAR);

  <bb 25> :
  _21 = D.253061;
  retval.1209 = _21 != 0B;
  if (retval.1209 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 26> :
  getFunctionAssignVAR.1211_22 = getFunctionAssignVAR;
  D.196251 = ret_function_varstmt (getFunctionAssignVAR.1211_22); [return slot optimization]

  <bb 27> :
  function_assign_array::operator= (&assign_array, &D.196251);
  function_assign_array::~function_assign_array (&D.196251);
  D.196251 = {CLOBBER};
  i = 0;
  goto <bb 186>; [INV]

  <bb 28> :
  _23 = (long unsigned int) i;
  _24 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _23);
  _25 = _24->stmt;
  _26 = gimple_code (_25);
  retval.1212 = _26 == 6;
  if (retval.1212 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 29> :
  _27 = (long unsigned int) i;
  _28 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _27);
  _29 = _28->stmt;
  D.253062 = gimple_assign_lhs (_29);

  <bb 30> :
  _30 = D.253062;
  _31 = _30->base.code;
  retval.1213 = _31 == 165;
  if (retval.1213 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 31> :
  _32 = (long unsigned int) i;
  _33 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _32);
  _34 = _33->stmt;
  D.253063 = gimple_assign_lhs (_34);

  <bb 32> :
  _35 = D.253063;
  D.253064 = check_stmtStack (_35);

  <bb 33> :
  _36 = D.253064;
  retval.1214 = _36 == 0;
  if (retval.1214 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 34> :
  _37 = (long unsigned int) i;
  _38 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _37);
  _39 = _38->form_tree;
  retval.1215 = _39 != 0B;
  if (retval.1215 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _40 = (long unsigned int) i;
  _41 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _40);
  _42 = _41->form_tree;
  _43 = (long unsigned int) i;
  _44 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _43);
  _45 = _44->stmt;
  set_gimple_array (used_stmt, _45, _42, target, 0B);
  goto <bb 185>; [INV]

  <bb 36> :
  _46 = (long unsigned int) i;
  _47 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _46);
  _48 = _47->stmt;
  D.253065 = gimple_assign_lhs (_48);

  <bb 37> :
  _49 = D.253065;
  _50 = (long unsigned int) i;
  _51 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _50);
  _52 = _51->stmt;
  set_gimple_array (used_stmt, _52, _49, target, 0B);
  goto <bb 185>; [INV]

  <bb 38> :
  _53 = (long unsigned int) i;
  _54 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _53);
  _55 = _54->stmt;
  D.253066 = gimple_assign_lhs (_55);

  <bb 39> :
  _56 = D.253066;
  _57 = _56->base.code;
  retval.1216 = _57 == 153;
  if (retval.1216 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 40> :
  _58 = (long unsigned int) i;
  _59 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _58);
  _60 = _59->stmt;
  D.253067 = gimple_assign_lhs (_60);

  <bb 41> :
  _61 = D.253067;
  D.253068 = check_stmtStack (_61);

  <bb 42> :
  _62 = D.253068;
  retval.1217 = _62 == 0;
  if (retval.1217 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 43> :
  _63 = (long unsigned int) i;
  _64 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _63);
  _65 = _64->form_tree;
  retval.1218 = _65 != 0B;
  if (retval.1218 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  _66 = (long unsigned int) i;
  _67 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _66);
  _68 = _67->form_tree;
  _69 = (long unsigned int) i;
  _70 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _69);
  _71 = _70->stmt;
  set_gimple_array (used_stmt, _71, _68, target, 0B);
  goto <bb 47>; [INV]

  <bb 45> :
  _72 = (long unsigned int) i;
  _73 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _72);
  _74 = _73->stmt;
  D.253069 = gimple_assign_lhs (_74);

  <bb 46> :
  _75 = D.253069;
  _76 = (long unsigned int) i;
  _77 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _76);
  _78 = _77->stmt;
  set_gimple_array (used_stmt, _78, _75, target, 0B);

  <bb 47> :
  _79 = (long unsigned int) i;
  _80 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _79);
  _81 = _80->stmt;
  D.253070 = check_stmtStack4 (_81);

  <bb 48> :
  _82 = D.253070;
  retval.1219 = _82 == 0;
  if (retval.1219 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 49> :
  _83 = (long unsigned int) i;
  _84 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _83);
  _85 = _84->stmt;
  D.253071 = gimple_assign_lhs (_85);

  <bb 50> :
  _86 = D.253071;
  if (target2 != _86)
    goto <bb 51>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 51> :
  _87 = (long unsigned int) i;
  _88 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _87);
  _89 = _88->stmt;
  D.253072 = check_stmtStack2 (_89);

  <bb 52> :
  _90 = D.253072;
  if (_90 == 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  iftmp.1221 = 1;
  goto <bb 55>; [INV]

  <bb 54> :
  iftmp.1221 = 0;

  <bb 55> :
  retval.1220 = iftmp.1221;
  if (retval.1220 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 56> :
  _91 = (long unsigned int) i;
  _92 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _91);
  _93 = _92->stmt;
  D.253073 = gimple_assign_lhs (_93);

  <bb 57> :
  _94 = D.253073;
  _95 = (long unsigned int) i;
  _96 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _95);
  _97 = _96->stmt;
  D.253074 = gimple_assign_lhs (_97);

  <bb 58> :
  _98 = D.253074;
  new_search_imm_use (used_stmt, _98, _94);

  <bb 59> :
  _99 = (long unsigned int) i;
  _100 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _99);
  _101 = _100->stmt;
  D.253075 = gimple_assign_rhs1 (_101);

  <bb 60> :
  _102 = D.253075;
  if (_102 != 0B)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  _103 = (long unsigned int) i;
  _104 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _103);
  _105 = _104->stmt;
  D.253076 = gimple_assign_rhs1 (_105);

  <bb 62> :
  _106 = D.253076;
  _107 = _106->base.code;
  if (_107 == 47)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1223 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.1223 = 0;

  <bb 65> :
  retval.1222 = iftmp.1223;
  if (retval.1222 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 66> :
  _108 = (long unsigned int) i;
  _109 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _108);
  _110 = _109->stmt;
  D.253077 = gimple_assign_rhs1 (_110);

  <bb 67> :
  _111 = D.253077;
  D.253078 = check_stmtStack (_111);

  <bb 68> :
  _112 = D.253078;
  retval.1224 = _112 == 0;
  if (retval.1224 != 0)
    goto <bb 69>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 69> :
  _113 = (long unsigned int) i;
  _114 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _113);
  _115 = _114->stmt;
  D.253079 = gimple_assign_rhs1 (_115);

  <bb 70> :
  _116 = D.253079;
  second = _116->exp.operands[0];
  if (second != 0B)
    goto <bb 71>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 71> :
  _117 = second->base.code;
  if (_117 == 165)
    goto <bb 72>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 72> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 73>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 73> :
  _118 = three->base.code;
  if (_118 == 153)
    goto <bb 74>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 74> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1225 = is_gimple_assign (def_stmt);
  if (retval.1225 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 75> :
  D.253080 = gimple_assign_lhs (def_stmt);

  <bb 76> :
  _119 = D.253080;
  _120 = _119->base.code;
  retval.1226 = _120 == 153;
  if (retval.1226 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 77> :
  D.253081 = gimple_assign_lhs (def_stmt);

  <bb 78> :
  _121 = D.253081;
  retval.1227 = target2 != _121;
  if (retval.1227 != 0)
    goto <bb 79>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 79> :
  D.253082 = gimple_assign_lhs (def_stmt);

  <bb 80> :
  _122 = D.253082;
  D.253083 = gimple_assign_lhs (def_stmt);

  <bb 81> :
  _123 = D.253083;
  new_search_imm_use (used_stmt, _123, _122);
  goto <bb 185>; [INV]

  <bb 82> :
  _124 = (long unsigned int) i;
  _125 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _124);
  _126 = _125->stmt;
  D.253084 = gimple_assign_rhs1 (_126);

  <bb 83> :
  _127 = D.253084;
  if (_127 != 0B)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  _128 = (long unsigned int) i;
  _129 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _128);
  _130 = _129->stmt;
  D.253085 = gimple_assign_rhs1 (_130);

  <bb 85> :
  _131 = D.253085;
  _132 = _131->base.code;
  if (_132 == 165)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1229 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1229 = 0;

  <bb 88> :
  retval.1228 = iftmp.1229;
  if (retval.1228 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 89> :
  _133 = (long unsigned int) i;
  _134 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _133);
  _135 = _134->stmt;
  D.253086 = gimple_assign_rhs1 (_135);

  <bb 90> :
  _136 = D.253086;
  D.253087 = check_stmtStack (_136);

  <bb 91> :
  _137 = D.253087;
  retval.1230 = _137 == 0;
  if (retval.1230 != 0)
    goto <bb 92>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 92> :
  _138 = (long unsigned int) i;
  _139 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _138);
  _140 = _139->stmt;
  D.253088 = gimple_assign_rhs1 (_140);

  <bb 93> :
  _141 = D.253088;
  second = _141->exp.operands[0];
  _142 = second->base.code;
  if (_142 == 165)
    goto <bb 94>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 94> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1231 = is_gimple_assign (def_stmt);
  if (retval.1231 != 0)
    goto <bb 95>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 95> :
  D.253089 = gimple_assign_lhs (def_stmt);

  <bb 96> :
  _143 = D.253089;
  _144 = _143->base.code;
  retval.1232 = _144 == 153;
  if (retval.1232 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 97> :
  D.253090 = gimple_assign_lhs (def_stmt);

  <bb 98> :
  _145 = D.253090;
  retval.1233 = target2 != _145;
  if (retval.1233 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 99> :
  D.253091 = gimple_assign_lhs (def_stmt);

  <bb 100> :
  _146 = D.253091;
  D.253092 = gimple_assign_lhs (def_stmt);

  <bb 101> :
  _147 = D.253092;
  new_search_imm_use (used_stmt, _147, _146);
  goto <bb 185>; [INV]

  <bb 102> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.253093 = gimple_assign_rhs1 (_150);

  <bb 103> :
  _151 = D.253093;
  _152 = _151->base.code;
  retval.1234 = _152 == 153;
  if (retval.1234 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 104> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.253094 = gimple_assign_rhs1 (_155);

  <bb 105> :
  _156 = D.253094;
  D.253095 = check_stmtStack (_156);

  <bb 106> :
  _157 = D.253095;
  retval.1235 = _157 == 0;
  if (retval.1235 != 0)
    goto <bb 107>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 107> :
  _158 = (long unsigned int) i;
  _159 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _158);
  _160 = _159->form_tree;
  retval.1236 = _160 != 0B;
  if (retval.1236 != 0)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->form_tree;
  _164 = (long unsigned int) i;
  _165 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _164);
  _166 = _165->stmt;
  set_gimple_array (used_stmt, _166, _163, target, 0B);
  goto <bb 111>; [INV]

  <bb 109> :
  _167 = (long unsigned int) i;
  _168 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _167);
  _169 = _168->stmt;
  D.253096 = gimple_assign_rhs1 (_169);

  <bb 110> :
  _170 = D.253096;
  _171 = (long unsigned int) i;
  _172 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _171);
  _173 = _172->stmt;
  set_gimple_array (used_stmt, _173, _170, target, 0B);

  <bb 111> :
  _174 = (long unsigned int) i;
  _175 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _174);
  _176 = _175->stmt;
  D.253097 = gimple_assign_rhs1 (_176);

  <bb 112> :
  _177 = D.253097;
  retval.1237 = target2 != _177;
  if (retval.1237 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 113> :
  _178 = (long unsigned int) i;
  _179 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _178);
  _180 = _179->stmt;
  D.253098 = check_stmtStack4 (_180);

  <bb 114> :
  _181 = D.253098;
  retval.1238 = _181 == 0;
  if (retval.1238 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 115> :
  _182 = (long unsigned int) i;
  _183 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _182);
  _184 = _183->stmt;
  D.253099 = gimple_assign_rhs1 (_184);

  <bb 116> :
  _185 = D.253099;
  if (target2 != _185)
    goto <bb 117>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 117> :
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->stmt;
  D.253100 = check_stmtStack2 (_188);

  <bb 118> :
  _189 = D.253100;
  if (_189 == 0)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  iftmp.1240 = 1;
  goto <bb 121>; [INV]

  <bb 120> :
  iftmp.1240 = 0;

  <bb 121> :
  retval.1239 = iftmp.1240;
  if (retval.1239 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 122> :
  _190 = (long unsigned int) i;
  _191 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _190);
  _192 = _191->stmt;
  D.253101 = gimple_assign_rhs1 (_192);

  <bb 123> :
  _193 = D.253101;
  _194 = (long unsigned int) i;
  _195 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _194);
  _196 = _195->stmt;
  D.253102 = gimple_assign_rhs1 (_196);

  <bb 124> :
  _197 = D.253102;
  new_search_imm_use (used_stmt, _197, _193);

  <bb 125> :
  _198 = (long unsigned int) i;
  _199 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _198);
  _200 = _199->stmt;
  D.253103 = gimple_assign_lhs (_200);

  <bb 126> :
  _201 = D.253103;
  if (_201 != 0B)
    goto <bb 127>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 127> :
  _202 = (long unsigned int) i;
  _203 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _202);
  _204 = _203->stmt;
  D.253104 = gimple_assign_lhs (_204);

  <bb 128> :
  _205 = D.253104;
  _206 = _205->base.code;
  if (_206 == 47)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  iftmp.1242 = 1;
  goto <bb 131>; [INV]

  <bb 130> :
  iftmp.1242 = 0;

  <bb 131> :
  retval.1241 = iftmp.1242;
  if (retval.1241 != 0)
    goto <bb 132>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 132> :
  _207 = (long unsigned int) i;
  _208 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _207);
  _209 = _208->stmt;
  D.253105 = gimple_assign_lhs (_209);

  <bb 133> :
  _210 = D.253105;
  D.253106 = check_stmtStack (_210);

  <bb 134> :
  _211 = D.253106;
  retval.1243 = _211 == 0;
  if (retval.1243 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 135> :
  _212 = (long unsigned int) i;
  _213 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _212);
  _214 = _213->stmt;
  D.253107 = gimple_assign_lhs (_214);

  <bb 136> :
  _215 = D.253107;
  second = _215->exp.operands[0];
  if (second != 0B)
    goto <bb 137>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 137> :
  _216 = second->base.code;
  if (_216 == 165)
    goto <bb 138>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 138> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 139>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 139> :
  _217 = three->base.code;
  if (_217 == 153)
    goto <bb 140>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 140> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1244 = is_gimple_assign (def_stmt);
  if (retval.1244 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 141> :
  D.253108 = gimple_assign_lhs (def_stmt);

  <bb 142> :
  _218 = D.253108;
  _219 = _218->base.code;
  retval.1245 = _219 == 153;
  if (retval.1245 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 143> :
  D.253109 = gimple_assign_lhs (def_stmt);

  <bb 144> :
  _220 = D.253109;
  retval.1246 = target2 != _220;
  if (retval.1246 != 0)
    goto <bb 145>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 145> :
  D.253110 = gimple_assign_lhs (def_stmt);

  <bb 146> :
  _221 = D.253110;
  D.253111 = gimple_assign_lhs (def_stmt);

  <bb 147> :
  _222 = D.253111;
  new_search_imm_use (used_stmt, _222, _221);
  goto <bb 185>; [INV]

  <bb 148> :
  _223 = (long unsigned int) i;
  _224 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _223);
  _225 = _224->stmt;
  D.253112 = gimple_assign_lhs (_225);

  <bb 149> :
  _226 = D.253112;
  if (_226 != 0B)
    goto <bb 150>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 150> :
  _227 = (long unsigned int) i;
  _228 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _227);
  _229 = _228->stmt;
  D.253113 = gimple_assign_lhs (_229);

  <bb 151> :
  _230 = D.253113;
  _231 = _230->base.code;
  if (_231 == 165)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  iftmp.1248 = 1;
  goto <bb 154>; [INV]

  <bb 153> :
  iftmp.1248 = 0;

  <bb 154> :
  retval.1247 = iftmp.1248;
  if (retval.1247 != 0)
    goto <bb 155>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 155> :
  _232 = (long unsigned int) i;
  _233 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _232);
  _234 = _233->stmt;
  D.253114 = gimple_assign_lhs (_234);

  <bb 156> :
  _235 = D.253114;
  D.253115 = check_stmtStack (_235);

  <bb 157> :
  _236 = D.253115;
  retval.1249 = _236 == 0;
  if (retval.1249 != 0)
    goto <bb 158>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 158> :
  _237 = (long unsigned int) i;
  _238 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _237);
  _239 = _238->stmt;
  D.253116 = gimple_assign_lhs (_239);

  <bb 159> :
  _240 = D.253116;
  second = _240->exp.operands[0];
  _241 = second->base.code;
  if (_241 == 165)
    goto <bb 160>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 160> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1250 = is_gimple_assign (def_stmt);
  if (retval.1250 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 161> :
  D.253117 = gimple_assign_lhs (def_stmt);

  <bb 162> :
  _242 = D.253117;
  _243 = _242->base.code;
  retval.1251 = _243 == 153;
  if (retval.1251 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 163> :
  D.253118 = gimple_assign_lhs (def_stmt);

  <bb 164> :
  _244 = D.253118;
  retval.1252 = target2 != _244;
  if (retval.1252 != 0)
    goto <bb 165>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 165> :
  D.253119 = gimple_assign_lhs (def_stmt);

  <bb 166> :
  _245 = D.253119;
  D.253120 = gimple_assign_lhs (def_stmt);

  <bb 167> :
  _246 = D.253120;
  new_search_imm_use (used_stmt, _246, _245);
  goto <bb 185>; [INV]

  <bb 168> :
  _247 = (long unsigned int) i;
  _248 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _247);
  _249 = _248->stmt;
  _250 = gimple_code (_249);
  retval.1253 = _250 == 8;
  if (retval.1253 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 169> :
  _251 = (long unsigned int) i;
  _252 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _251);
  _253 = _252->stmt;
  D.253121 = gimple_call_arg (_253, 0);

  <bb 170> :
  _254 = D.253121;
  _255 = _254->base.code;
  retval.1254 = _255 == 131;
  if (retval.1254 != 0)
    goto <bb 171>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 171> :
  _256 = (long unsigned int) i;
  _257 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _256);
  _258 = _257->stmt;
  D.253122 = gimple_call_arg (_258, 0);

  <bb 172> :
  _259 = D.253122;
  D.253123 = check_stmtStack (_259);

  <bb 173> :
  _260 = D.253123;
  retval.1255 = _260 == 0;
  if (retval.1255 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 174> :
  _261 = (long unsigned int) i;
  _262 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _261);
  _263 = _262->stmt;
  D.253124 = gimple_call_arg (_263, 0);

  <bb 175> :
  _264 = D.253124;
  _265 = (long unsigned int) i;
  _266 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _265);
  _267 = _266->stmt;
  set_gimple_array (used_stmt, _267, _264, target, 0B);

  <bb 176> :
  _268 = (long unsigned int) i;
  _269 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _268);
  _270 = _269->stmt;
  D.253125 = gimple_call_arg (_270, 0);

  <bb 177> :
  _271 = D.253125;
  D.253126 = check_stmtStack (_271);

  <bb 178> :
  _272 = D.253126;
  retval.1256 = _272 == 0;
  if (retval.1256 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 179> :
  _273 = (long unsigned int) i;
  _274 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _273);
  _275 = _274->stmt;
  D.253127 = gimple_call_arg (_275, 0);

  <bb 180> :
  _276 = D.253127;
  _277 = _276->base.code;
  retval.1257 = _277 == 153;
  if (retval.1257 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 181> :
  _278 = (long unsigned int) i;
  _279 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _278);
  _280 = _279->form_tree;
  retval.1258 = _280 != 0B;
  if (retval.1258 != 0)
    goto <bb 182>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 182> :
  _281 = (long unsigned int) i;
  _282 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _281);
  _283 = _282->form_tree;
  _284 = (long unsigned int) i;
  _285 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _284);
  _286 = _285->stmt;
  set_gimple_array (used_stmt, _286, _283, target, 0B);
  goto <bb 185>; [INV]

  <bb 183> :
  _287 = (long unsigned int) i;
  _288 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _287);
  _289 = _288->stmt;
  D.253128 = gimple_call_arg (_289, 0);

  <bb 184> :
  _290 = D.253128;
  _291 = (long unsigned int) i;
  _292 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _291);
  _293 = _292->stmt;
  set_gimple_array (used_stmt, _293, _290, target, 0B);

  <bb 185> :
  i = i + 1;

  <bb 186> :
  _294 = (long unsigned int) i;
  _295 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1259 = _294 < _295;
  if (retval.1259 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 187> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  goto <bb 191>; [INV]

  <bb 188> :
  i.1261_296 = (unsigned int) i;
  D.253131 = gimple_call_arg (def_stmt, i.1261_296);
  _297 = D.253131;
  _298 = _297->base.code;
  retval.1260 = _298 == 153;
  if (retval.1260 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 189> :
  i.1263_299 = (unsigned int) i;
  D.253132 = gimple_call_arg (def_stmt, i.1263_299);
  _300 = D.253132;
  D.253133 = check_stmtStack (_300);
  _301 = D.253133;
  retval.1262 = _301 == 0;
  if (retval.1262 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 190> :
  i.1264_302 = (unsigned int) i;
  D.253134 = gimple_call_arg (def_stmt, i.1264_302);
  _303 = D.253134;
  i.1265_304 = (unsigned int) i;
  D.253135 = gimple_call_arg (def_stmt, i.1265_304);
  _305 = D.253135;
  new_search_imm_use (used_stmt, _305, _303);

  <bb 191> :
  i = i + 1;

  <bb 192> :
  D.253136 = gimple_call_num_args (def_stmt);
  _306 = D.253136;
  i.1267_307 = (unsigned int) i;
  retval.1266 = _306 > i.1267_307;
  if (retval.1266 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 193> :
  return;

  <bb 194> :
<L224>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 195> :
<L225>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 1

}



;; Function new_search_imm_use (_Z18new_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6418, decl_uid=187034, cgraph_uid=3394, symbol_order=4167)

Removing basic block 11
Removing basic block 12
Removing basic block 16
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 49
Removing basic block 50
Removing basic block 76
Removing basic block 78
Removing basic block 90
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 103
Removing basic block 105
Removing basic block 106
Removing basic block 110
Removing basic block 117
Removing basic block 127
Removing basic block 128
Removing basic block 129
Removing basic block 144
Removing basic block 145
Removing basic block 146
Removing basic block 147
Removing basic block 174
Removing basic block 175
Removing basic block 176
Removing basic block 177
Removing basic block 178
Removing basic block 199
Removing basic block 200
Removing basic block 213
Removing basic block 214
Removing basic block 215
Removing basic block 216
Removing basic block 217
Removing basic block 230
Removing basic block 231
Removing basic block 241
Removing basic block 269
Removing basic block 275
Removing basic block 276
Removing basic block 289
Removing basic block 295
Removing basic block 296
Removing basic block 297
Removing basic block 306
Removing basic block 307
Removing basic block 308
Removing basic block 311
Removing basic block 313
Removing basic block 323
Removing basic block 324
Removing basic block 347
Removing basic block 348
Removing basic block 371
Removing basic block 372
Removing basic block 373
Removing basic block 374
Removing basic block 375
Removing basic block 379
Removing basic block 380
Removing basic block 381
Removing basic block 382
Removing basic block 383
Removing basic block 394
Removing basic block 395
Removing basic block 397
Removing basic block 398
Removing basic block 402
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334
;;
;; Loop 2
;;  header 313, latch 312
;;  depth 1, outer 0
;;  nodes: 313 312 299 311 301 306 308 303 302 307 305 304 300 310 309 298 314
;;
;; Loop 1
;;  header 257, latch 256
;;  depth 1, outer 0
;;  nodes: 257 256 237 248 255 230 240 223 247 250 253 252 251 249 246 245 242 244 243 241 222 221 220 218 219 215 217 216 214 213 239 238 229 228 225 227 226 224 254 235 236 232 234 233 231
;; 2 succs { 4 3 }
;; 3 succs { 4 329 }
;; 4 succs { 5 7 }
;; 5 succs { 334 6 }
;; 6 succs { 196 }
;; 7 succs { 8 11 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 22 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 330 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 329 }
;; 19 succs { 328 }
;; 20 succs { 334 21 }
;; 21 succs { 22 326 }
;; 22 succs { 334 23 }
;; 23 succs { 24 36 }
;; 24 succs { 25 36 }
;; 25 succs { 334 26 }
;; 26 succs { 27 36 }
;; 27 succs { 334 28 }
;; 28 succs { 29 31 }
;; 29 succs { 30 31 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 36 }
;; 33 succs { 334 34 }
;; 34 succs { 35 36 }
;; 35 succs { 334 36 }
;; 36 succs { 37 41 }
;; 37 succs { 334 38 }
;; 38 succs { 334 39 }
;; 39 succs { 40 326 }
;; 40 succs { 334 326 }
;; 41 succs { 42 121 }
;; 42 succs { 334 43 }
;; 43 succs { 334 44 }
;; 44 succs { 334 45 }
;; 45 succs { 334 46 }
;; 46 succs { 47 80 }
;; 47 succs { 48 80 }
;; 48 succs { 334 49 }
;; 49 succs { 50 79 }
;; 50 succs { 334 51 }
;; 51 succs { 52 56 }
;; 52 succs { 334 53 }
;; 53 succs { 334 54 }
;; 54 succs { 55 56 }
;; 55 succs { 57 }
;; 56 succs { 57 }
;; 57 succs { 58 67 }
;; 58 succs { 334 59 }
;; 59 succs { 60 63 }
;; 60 succs { 334 61 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 334 66 }
;; 66 succs { 334 79 }
;; 67 succs { 68 79 }
;; 68 succs { 69 79 }
;; 69 succs { 334 70 }
;; 70 succs { 71 79 }
;; 71 succs { 72 75 }
;; 72 succs { 334 73 }
;; 73 succs { 74 75 }
;; 74 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 77 78 }
;; 77 succs { 334 78 }
;; 78 succs { 334 79 }
;; 79 succs { 88 }
;; 80 succs { 81 88 }
;; 81 succs { 82 88 }
;; 82 succs { 334 83 }
;; 83 succs { 84 88 }
;; 84 succs { 334 85 }
;; 85 succs { 86 87 }
;; 86 succs { 334 87 }
;; 87 succs { 334 88 }
;; 88 succs { 334 89 }
;; 89 succs { 90 91 }
;; 90 succs { 334 91 }
;; 91 succs { 334 92 }
;; 92 succs { 93 98 }
;; 93 succs { 94 98 }
;; 94 succs { 334 95 }
;; 95 succs { 96 97 }
;; 96 succs { 334 97 }
;; 97 succs { 120 }
;; 98 succs { 99 107 }
;; 99 succs { 100 107 }
;; 100 succs { 101 106 }
;; 101 succs { 334 102 }
;; 102 succs { 103 106 }
;; 103 succs { 334 104 }
;; 104 succs { 105 106 }
;; 105 succs { 334 106 }
;; 106 succs { 120 }
;; 107 succs { 108 120 }
;; 108 succs { 109 120 }
;; 109 succs { 110 120 }
;; 110 succs { 334 111 }
;; 111 succs { 114 112 }
;; 112 succs { 334 113 }
;; 113 succs { 114 115 }
;; 114 succs { 116 }
;; 115 succs { 116 }
;; 116 succs { 117 120 }
;; 117 succs { 334 118 }
;; 118 succs { 119 120 }
;; 119 succs { 334 120 }
;; 120 succs { 326 }
;; 121 succs { 122 146 }
;; 122 succs { 334 123 }
;; 123 succs { 124 127 }
;; 124 succs { 334 125 }
;; 125 succs { 126 127 }
;; 126 succs { 128 }
;; 127 succs { 128 }
;; 128 succs { 129 326 }
;; 129 succs { 334 130 }
;; 130 succs { 131 326 }
;; 131 succs { 334 132 }
;; 132 succs { 334 133 }
;; 133 succs { 134 137 }
;; 134 succs { 334 135 }
;; 135 succs { 136 137 }
;; 136 succs { 138 }
;; 137 succs { 138 }
;; 138 succs { 139 326 }
;; 139 succs { 334 140 }
;; 140 succs { 334 141 }
;; 141 succs { 334 142 }
;; 142 succs { 143 326 }
;; 143 succs { 334 144 }
;; 144 succs { 334 145 }
;; 145 succs { 334 326 }
;; 146 succs { 147 326 }
;; 147 succs { 334 148 }
;; 148 succs { 149 150 }
;; 149 succs { 330 }
;; 150 succs { 334 151 }
;; 151 succs { 334 152 }
;; 152 succs { 153 326 }
;; 153 succs { 154 178 }
;; 154 succs { 334 155 }
;; 155 succs { 156 325 }
;; 156 succs { 334 157 }
;; 157 succs { 334 158 }
;; 158 succs { 159 166 }
;; 159 succs { 334 160 }
;; 160 succs { 334 161 }
;; 161 succs { 334 162 }
;; 162 succs { 163 325 }
;; 163 succs { 334 164 }
;; 164 succs { 334 165 }
;; 165 succs { 334 325 }
;; 166 succs { 334 167 }
;; 167 succs { 168 325 }
;; 168 succs { 334 169 }
;; 169 succs { 334 170 }
;; 170 succs { 171 325 }
;; 171 succs { 334 172 }
;; 172 succs { 334 173 }
;; 173 succs { 334 174 }
;; 174 succs { 175 325 }
;; 175 succs { 334 176 }
;; 176 succs { 334 177 }
;; 177 succs { 334 325 }
;; 178 succs { 180 179 }
;; 179 succs { 180 191 }
;; 180 succs { 334 181 }
;; 181 succs { 334 182 }
;; 182 succs { 183 190 }
;; 183 succs { 334 184 }
;; 184 succs { 334 185 }
;; 185 succs { 334 186 }
;; 186 succs { 187 190 }
;; 187 succs { 334 188 }
;; 188 succs { 334 189 }
;; 189 succs { 334 190 }
;; 190 succs { 325 }
;; 191 succs { 193 192 }
;; 192 succs { 193 269 }
;; 193 succs { 334 194 }
;; 194 succs { 334 195 }
;; 195 succs { 196 268 }
;; 196 succs { 197 199 }
;; 197 succs { 198 199 }
;; 198 succs { 199 }
;; 199 succs { 334 200 }
;; 200 succs { 201 203 }
;; 201 succs { 334 202 }
;; 202 succs { 207 }
;; 203 succs { 334 204 }
;; 204 succs { 205 207 }
;; 205 succs { 334 206 }
;; 206 succs { 207 }
;; 207 succs { 208 259 }
;; 208 succs { 209 259 }
;; 209 succs { 332 210 }
;; 210 succs { 211 258 }
;; 211 succs { 332 212 }
;; 212 succs { 257 }
;; 213 succs { 214 248 }
;; 214 succs { 332 215 }
;; 215 succs { 216 219 }
;; 216 succs { 332 217 }
;; 217 succs { 218 219 }
;; 218 succs { 220 }
;; 219 succs { 220 }
;; 220 succs { 221 231 }
;; 221 succs { 332 222 }
;; 222 succs { 332 223 }
;; 223 succs { 224 256 }
;; 224 succs { 225 226 }
;; 225 succs { 332 228 }
;; 226 succs { 332 227 }
;; 227 succs { 332 228 }
;; 228 succs { 332 229 }
;; 229 succs { 332 230 }
;; 230 succs { 332 256 }
;; 231 succs { 332 232 }
;; 232 succs { 233 236 }
;; 233 succs { 332 234 }
;; 234 succs { 235 236 }
;; 235 succs { 237 }
;; 236 succs { 237 }
;; 237 succs { 238 256 }
;; 238 succs { 332 239 }
;; 239 succs { 332 240 }
;; 240 succs { 241 256 }
;; 241 succs { 242 243 }
;; 242 succs { 332 245 }
;; 243 succs { 332 244 }
;; 244 succs { 332 245 }
;; 245 succs { 332 246 }
;; 246 succs { 332 247 }
;; 247 succs { 332 256 }
;; 248 succs { 249 256 }
;; 249 succs { 332 250 }
;; 250 succs { 251 256 }
;; 251 succs { 332 252 }
;; 252 succs { 332 253 }
;; 253 succs { 254 256 }
;; 254 succs { 332 255 }
;; 255 succs { 332 256 }
;; 256 succs { 257 }
;; 257 succs { 213 258 }
;; 258 succs { 259 }
;; 259 succs { 260 261 }
;; 260 succs { 330 }
;; 261 succs { 334 262 }
;; 262 succs { 334 263 }
;; 263 succs { 334 264 }
;; 264 succs { 265 268 }
;; 265 succs { 334 266 }
;; 266 succs { 334 267 }
;; 267 succs { 334 268 }
;; 268 succs { 325 }
;; 269 succs { 334 270 }
;; 270 succs { 271 276 }
;; 271 succs { 334 272 }
;; 272 succs { 273 276 }
;; 273 succs { 334 274 }
;; 274 succs { 275 276 }
;; 275 succs { 277 }
;; 276 succs { 277 }
;; 277 succs { 278 315 }
;; 278 succs { 334 279 }
;; 279 succs { 334 280 }
;; 280 succs { 281 325 }
;; 281 succs { 334 282 }
;; 282 succs { 334 283 }
;; 283 succs { 334 284 }
;; 284 succs { 285 290 }
;; 285 succs { 334 286 }
;; 286 succs { 287 290 }
;; 287 succs { 334 288 }
;; 288 succs { 334 289 }
;; 289 succs { 334 290 }
;; 290 succs { 334 291 }
;; 291 succs { 292 325 }
;; 292 succs { 334 293 }
;; 293 succs { 334 294 }
;; 294 succs { 295 325 }
;; 295 succs { 334 296 }
;; 296 succs { 297 325 }
;; 297 succs { 313 }
;; 298 succs { 334 299 }
;; 299 succs { 300 312 }
;; 300 succs { 334 301 }
;; 301 succs { 302 312 }
;; 302 succs { 334 303 }
;; 303 succs { 304 312 }
;; 304 succs { 334 305 }
;; 305 succs { 334 306 }
;; 306 succs { 307 312 }
;; 307 succs { 334 308 }
;; 308 succs { 309 312 }
;; 309 succs { 334 310 }
;; 310 succs { 334 311 }
;; 311 succs { 334 312 }
;; 312 succs { 313 }
;; 313 succs { 334 314 }
;; 314 succs { 298 325 }
;; 315 succs { 334 316 }
;; 316 succs { 334 317 }
;; 317 succs { 318 325 }
;; 318 succs { 334 319 }
;; 319 succs { 334 320 }
;; 320 succs { 334 321 }
;; 321 succs { 322 325 }
;; 322 succs { 334 323 }
;; 323 succs { 334 324 }
;; 324 succs { 334 325 }
;; 325 succs { 326 }
;; 326 succs { 334 327 }
;; 327 succs { 328 }
;; 328 succs { 20 329 }
;; 329 succs { 331 }
;; 330 succs { 331 }
;; 331 succs { 1 }
;; 332 succs { 333 }
;; 333 succs { 334 }
;; 334 succs { }
void new_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  struct ssa_use_operand_t * D.253658;
  union tree_node * D.253657;
  union tree_node * D.253656;
  union tree_node * D.253655;
  union tree_node * D.253654;
  int D.253653;
  union tree_node * D.253652;
  unsigned int D.253651;
  union tree_node * D.253650;
  union tree_node * D.253649;
  union tree_node * D.253648;
  int D.253647;
  union tree_node * D.253646;
  union tree_node * D.253645;
  union tree_node * D.253644;
  union tree_node * D.253643;
  unsigned int D.253642;
  int D.253641;
  union tree_node * D.253640;
  union tree_node * D.253639;
  union tree_node * D.253638;
  union tree_node * D.253637;
  int D.253636;
  union tree_node * D.253635;
  union tree_node * D.253634;
  int D.253633;
  union tree_node * D.253632;
  union tree_node * D.253631;
  union tree_node * D.253630;
  union tree_node * D.253629;
  union tree_node * D.253628;
  union tree_node * D.253627;
  union tree_node * D.253626;
  union tree_node * D.253625;
  union tree_node * D.253622;
  int D.253621;
  union tree_node * D.253620;
  union tree_node * D.253619;
  union tree_node * D.253618;
  union tree_node * D.253617;
  union tree_node * D.253616;
  int D.253615;
  union tree_node * D.253614;
  union tree_node * D.253613;
  union tree_node * D.253612;
  union tree_node * D.253611;
  union tree_node * D.253610;
  union tree_node * D.253609;
  int D.253608;
  union tree_node * D.253607;
  union tree_node * D.253606;
  union tree_node * D.253605;
  struct function_assign_array * D.253604;
  union tree_node * D.253603;
  union tree_node * D.253602;
  union tree_node * D.253601;
  union tree_node * D.253600;
  int D.253599;
  union tree_node * D.253598;
  union tree_node * D.253597;
  union tree_node * D.253596;
  union tree_node * D.253595;
  union tree_node * D.253594;
  int D.253593;
  union tree_node * D.253592;
  union tree_node * D.253591;
  union tree_node * D.253590;
  union tree_node * D.253589;
  union tree_node * D.253588;
  int D.253587;
  union tree_node * D.253586;
  union tree_node * D.253585;
  union tree_node * D.253584;
  union tree_node * D.253583;
  union tree_node * D.253582;
  union tree_node * D.253581;
  int D.253580;
  union tree_node * D.253579;
  union tree_node * D.253578;
  const char * D.253577;
  union tree_node * D.253576;
  union tree_node * D.253575;
  union tree_node * D.253574;
  union tree_node * D.253573;
  union tree_node * D.253572;
  union tree_node * D.253571;
  int D.253570;
  int D.253569;
  union tree_node * D.253568;
  union tree_node * D.253567;
  union tree_node * D.253566;
  union tree_node * D.253565;
  int D.253564;
  int D.253563;
  int D.253562;
  int D.253561;
  int D.253560;
  int D.253559;
  int D.253558;
  int D.253557;
  int D.253556;
  int D.253555;
  union tree_node * D.253554;
  int D.253553;
  union tree_node * D.253552;
  union tree_node * D.253551;
  union tree_node * D.253550;
  union tree_node * D.253549;
  union tree_node * D.253548;
  int D.253547;
  struct greturn * D.253546;
  int D.253545;
  const struct gcond * D.253544;
  union tree_node * D.253543;
  tree_code D.253542;
  int D.253541;
  int i;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  int isVardecl;
  union tree_node * second;
  union tree_node * fundecl;
  union tree_node * gimpleassignrhs;
  union tree_node * gimpleassignlhs;
  int ssa_name_assign;
  union tree_node * return_tree;
  const struct gcond * gc;
  const struct ssa_use_operand_t * const head;
  int has_single_use_flag;
  int var_declsuperjump;
  int size;
  struct gimple * def_stmt;
  const char * name;
  struct gimple * gc;
  struct gimple * use_stmt;
  struct ssa_use_operand_t * use_p;
  struct imm_use_iterator imm_iter;
  bool retval.1360;
  bool retval.1359;
  bool retval.1358;
  bool retval.1356;
  bool retval.1352;
  bool retval.1350;
  bool retval.1348;
  bool retval.1346;
  bool retval.1344;
  bool retval.1343;
  bool retval.1342;
  bool retval.1341;
  bool retval.1340;
  bool retval.1339;
  bool retval.1338;
  bool iftmp.1337;
  bool retval.1336;
  bool retval.1335;
  bool retval.1334;
  bool retval.1333;
  bool retval.1332;
  bool retval.1331;
  bool retval.1330;
  bool retval.1329;
  bool iftmp.1328;
  bool retval.1327;
  bool retval.1326;
  bool retval.1325;
  bool iftmp.1324;
  bool retval.1323;
  bool retval.1322;
  struct function_assign_array D.196331;
  bool retval.1319;
  bool retval.1318;
  bool retval.1317;
  bool retval.1316;
  bool retval.1315;
  bool retval.1314;
  bool retval.1313;
  bool retval.1312;
  bool retval.1311;
  bool retval.1310;
  bool retval.1309;
  bool retval.1308;
  bool retval.1307;
  bool retval.1306;
  bool retval.1305;
  bool iftmp.1304;
  bool retval.1303;
  bool retval.1302;
  bool iftmp.1301;
  bool retval.1300;
  bool retval.1299;
  bool iftmp.1298;
  bool retval.1297;
  bool retval.1296;
  bool retval.1295;
  bool retval.1294;
  bool retval.1293;
  bool iftmp.1292;
  bool retval.1291;
  bool retval.1290;
  bool iftmp.1289;
  bool retval.1288;
  bool iftmp.1287;
  bool retval.1286;
  bool retval.1285;
  bool retval.1284;
  bool retval.1283;
  bool retval.1282;
  bool retval.1281;
  bool iftmp.1280;
  bool retval.1279;
  bool retval.1278;
  bool retval.1277;
  bool retval.1276;
  bool retval.1275;
  bool iftmp.1274;
  bool retval.1273;
  bool retval.1270;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  size = 8;
  var_declsuperjump = 0;
  has_single_use_flag = 0;
  levelsize.1268_1 = levelsize;
  _2 = levelsize.1268_1 + 1;
  levelsize = _2;
  _3 = target->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _4 = target->base.code;
  if (_4 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 4> :
  head = &target->ssa_name.imm_uses;
  _5 = target->base.code;
  if (_5 == 131)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  stderr.1269_6 = stderr;
  __builtin_fwrite ("GIMPLE CODE :var_declsuperjump-------\n", 1, 38, stderr.1269_6);

  <bb 6> :
  var_declsuperjump = 1;
  // predicted unlikely by goto predictor.
  goto <bb 196>; [INV]

  <bb 7> :
  _7 = head->next;
  _8 = _7->loc.stmt;
  if (_8 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _9 = num_imm_uses (target);
  retval.1270 = _9 == 1;
  if (retval.1270 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  has_single_use_flag = 1;
  if (target != target2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _10 = head->next;
  use_stmt = _10->loc.stmt;
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 11> :
  levelsize.1271_11 = levelsize;
  if (levelsize.1271_11 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  now_tree.1272_12 = now_tree;
  if (target == now_tree.1272_12)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 330>; [INV]

  <bb 14> :
  _13 = num_imm_uses (target);
  if (_13 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = head->next;
  if (_14 != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1274 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1274 = 0;

  <bb 18> :
  retval.1273 = iftmp.1274;
  if (retval.1273 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 19> :
  use_p = first_readonly_imm_use (&imm_iter, target);
  goto <bb 328>; [INV]

  <bb 20> :
  use_stmt = use_p->loc.stmt;
  D.253541 = check_stmtStack4 (use_stmt);

  <bb 21> :
  _15 = D.253541;
  retval.1275 = _15 == 0;
  if (retval.1275 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 22> :
has_single_use_jump:
  D.253542 = gimple_cond_code (use_stmt);

  <bb 23> :
  _16 = D.253542;
  retval.1276 = _16 != 0;
  if (retval.1276 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 24> :
  _17 = is_gimple_assign (use_stmt);
  retval.1277 = ~_17;
  if (retval.1277 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 25> :
  D.253543 = gimple_cond_lhs (use_stmt);

  <bb 26> :
  _18 = D.253543;
  retval.1278 = _18 != 0B;
  if (retval.1278 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 27> :
  D.253544 = GIMPLE_CHECK2<const gcond*> (use_stmt);

  <bb 28> :
  gc = D.253544;
  _19 = gimple_cond_rhs (gc);
  if (_19 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 29> :
  _20 = gimple_cond_lhs (gc);
  if (_20 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  iftmp.1280 = 1;
  goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1280 = 0;

  <bb 32> :
  retval.1279 = iftmp.1280;
  if (retval.1279 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 33> :
  _21 = gimple_cond_rhs (gc);
  D.253545 = check_stmtStack (_21);

  <bb 34> :
  _22 = D.253545;
  retval.1281 = _22 == 0;
  if (retval.1281 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _23 = gimple_cond_lhs (gc);
  set_gimple_array (used_stmt, use_stmt, _23, target, 0B);

  <bb 36> :
  _24 = gimple_code (use_stmt);
  retval.1282 = _24 == 10;
  if (retval.1282 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  D.253546 = as_a<greturn*, gimple> (use_stmt);

  <bb 38> :
  _25 = D.253546;
  return_tree = gimple_return_retval (_25);
  D.253547 = check_stmtStack (return_tree);

  <bb 39> :
  _26 = D.253547;
  retval.1283 = _26 == 0;
  if (retval.1283 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 40> :
  set_gimple_array (used_stmt, use_stmt, return_tree, return_tree, 0B);
  goto <bb 326>; [INV]

  <bb 41> :
  _27 = gimple_code (use_stmt);
  retval.1284 = _27 == 6;
  if (retval.1284 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 42> :
  ssa_name_assign = 0;
  D.253548 = gimple_assign_lhs (use_stmt);

  <bb 43> :
  _28 = D.253548;
  D.253549 = prechecktree (_28);

  <bb 44> :
  gimpleassignlhs = D.253549;
  D.253550 = gimple_assign_rhs1 (use_stmt);

  <bb 45> :
  _29 = D.253550;
  D.253551 = prechecktree (_29);

  <bb 46> :
  gimpleassignrhs = D.253551;
  if (gimpleassignlhs != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 47> :
  _30 = gimpleassignlhs->base.code;
  if (_30 == 153)
    goto <bb 48>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 48> :
  D.253552 = gimple_call_fn (use_stmt);

  <bb 49> :
  _31 = D.253552;
  retval.1285 = _31 != 0B;
  if (retval.1285 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 50> :
  D.253553 = check_stmtStack (gimpleassignlhs);

  <bb 51> :
  _32 = D.253553;
  if (_32 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 52> :
  D.253554 = gimple_call_fn (use_stmt);

  <bb 53> :
  _33 = D.253554;
  D.253555 = check_stmtStack (_33);

  <bb 54> :
  _34 = D.253555;
  if (_34 == 0)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  iftmp.1287 = 1;
  goto <bb 57>; [INV]

  <bb 56> :
  iftmp.1287 = 0;

  <bb 57> :
  retval.1286 = iftmp.1287;
  if (retval.1286 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 58> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 59> :
  ssa_name_assign = 1;
  if (gimpleassignlhs != target2)
    goto <bb 60>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 60> :
  D.253556 = check_stmtStack2 (use_stmt);

  <bb 61> :
  _35 = D.253556;
  if (_35 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  iftmp.1289 = 1;
  goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1289 = 0;

  <bb 64> :
  retval.1288 = iftmp.1289;
  if (retval.1288 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 66> :
  Checknew_search_imm_use_lhs (used_stmt, use_stmt, target, target2);
  goto <bb 79>; [INV]

  <bb 67> :
  if (gimpleassignrhs != 0B)
    goto <bb 68>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 68> :
  _36 = gimpleassignrhs->base.code;
  if (_36 == 153)
    goto <bb 69>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 69> :
  D.253557 = check_stmtStack (gimpleassignrhs);

  <bb 70> :
  _37 = D.253557;
  retval.1290 = _37 == 0;
  if (retval.1290 != 0)
    goto <bb 71>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 71> :
  if (gimpleassignrhs != target2)
    goto <bb 72>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 72> :
  D.253558 = check_stmtStack2 (use_stmt);

  <bb 73> :
  _38 = D.253558;
  if (_38 == 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  iftmp.1292 = 1;
  goto <bb 76>; [INV]

  <bb 75> :
  iftmp.1292 = 0;

  <bb 76> :
  retval.1291 = iftmp.1292;
  if (retval.1291 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 78> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 79> :
  goto <bb 88>; [INV]

  <bb 80> :
  if (gimpleassignrhs != 0B)
    goto <bb 81>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 81> :
  _39 = gimpleassignrhs->base.code;
  if (_39 == 153)
    goto <bb 82>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 82> :
  D.253559 = check_stmtStack (gimpleassignrhs);

  <bb 83> :
  _40 = D.253559;
  retval.1293 = _40 == 0;
  if (retval.1293 != 0)
    goto <bb 84>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 84> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 85> :
  if (gimpleassignrhs != target2)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 87> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 88> :
  D.253560 = check_stmtStack (target);

  <bb 89> :
  _41 = D.253560;
  retval.1294 = _41 == 0;
  if (retval.1294 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 90> :
  set_gimple_array (used_stmt, use_stmt, target, target2, 0B);

  <bb 91> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 92> :
  if (gimpleassignlhs != 0B)
    goto <bb 93>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 93> :
  _42 = gimpleassignlhs->base.code;
  if (_42 == 165)
    goto <bb 94>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 94> :
  fundecl = gimpleassignlhs->exp.operands[0];
  D.253561 = check_stmtStack (gimpleassignlhs);

  <bb 95> :
  _43 = D.253561;
  retval.1295 = _43 == 0;
  if (retval.1295 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 97>; [INV]

  <bb 96> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 97> :
  goto <bb 120>; [INV]

  <bb 98> :
  if (gimpleassignlhs != 0B)
    goto <bb 99>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 99> :
  _44 = gimpleassignlhs->base.code;
  if (_44 == 47)
    goto <bb 100>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 100> :
  _45 = gimpleassignrhs->base.code;
  if (_45 == 153)
    goto <bb 101>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 101> :
  D.253562 = check_stmtStack (gimpleassignrhs);

  <bb 102> :
  _46 = D.253562;
  retval.1296 = _46 == 0;
  if (retval.1296 != 0)
    goto <bb 103>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 103> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 104> :
  if (gimpleassignrhs != target2)
    goto <bb 105>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 105> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 106> :
  goto <bb 120>; [INV]

  <bb 107> :
  if (gimpleassignrhs != 0B)
    goto <bb 108>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 108> :
  _47 = gimpleassignrhs->base.code;
  if (_47 == 47)
    goto <bb 109>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 109> :
  _48 = gimpleassignlhs->base.code;
  if (_48 == 153)
    goto <bb 110>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 110> :
  D.253563 = check_stmtStack (gimpleassignlhs);

  <bb 111> :
  _49 = D.253563;
  if (_49 == 0)
    goto <bb 114>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 112> :
  D.253564 = check_stmtStack2 (use_stmt);

  <bb 113> :
  _50 = D.253564;
  if (_50 == 0)
    goto <bb 114>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 114> :
  iftmp.1298 = 1;
  goto <bb 116>; [INV]

  <bb 115> :
  iftmp.1298 = 0;

  <bb 116> :
  retval.1297 = iftmp.1298;
  if (retval.1297 != 0)
    goto <bb 117>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 117> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 118> :
  if (gimpleassignlhs != target2)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 120> :
  goto <bb 326>; [INV]

  <bb 121> :
  _51 = gimple_code (use_stmt);
  retval.1299 = _51 == 18;
  if (retval.1299 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 122> :
  D.253565 = gimple_phi_result (use_stmt);

  <bb 123> :
  _52 = D.253565;
  if (_52 != 0B)
    goto <bb 124>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 124> :
  D.253566 = gimple_phi_result (use_stmt);

  <bb 125> :
  _53 = D.253566;
  _54 = _53->base.code;
  if (_54 == 153)
    goto <bb 126>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 126> :
  iftmp.1301 = 1;
  goto <bb 128>; [INV]

  <bb 127> :
  iftmp.1301 = 0;

  <bb 128> :
  retval.1300 = iftmp.1301;
  if (retval.1300 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 129> :
  D.253567 = gimple_phi_result (use_stmt);

  <bb 130> :
  _55 = D.253567;
  _56 = _55->base.code;
  retval.1302 = _56 == 153;
  if (retval.1302 != 0)
    goto <bb 131>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 131> :
  D.253568 = gimple_phi_result (use_stmt);

  <bb 132> :
  _57 = D.253568;
  D.253569 = check_stmtStack (_57);

  <bb 133> :
  _58 = D.253569;
  if (_58 == 0)
    goto <bb 134>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 134> :
  D.253570 = check_stmtStack2 (use_stmt);

  <bb 135> :
  _59 = D.253570;
  if (_59 == 0)
    goto <bb 136>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 136> :
  iftmp.1304 = 1;
  goto <bb 138>; [INV]

  <bb 137> :
  iftmp.1304 = 0;

  <bb 138> :
  retval.1303 = iftmp.1304;
  if (retval.1303 != 0)
    goto <bb 139>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 139> :
  D.253571 = gimple_phi_result (use_stmt);

  <bb 140> :
  _60 = D.253571;
  set_gimple_array (used_stmt, use_stmt, _60, target, 0B);

  <bb 141> :
  D.253572 = gimple_phi_result (use_stmt);

  <bb 142> :
  _61 = D.253572;
  retval.1305 = target2 != _61;
  if (retval.1305 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 143> :
  D.253573 = gimple_phi_result (use_stmt);

  <bb 144> :
  _62 = D.253573;
  D.253574 = gimple_phi_result (use_stmt);

  <bb 145> :
  _63 = D.253574;
  new_search_imm_use (used_stmt, _63, _62);
  goto <bb 326>; [INV]

  <bb 146> :
  _64 = gimple_code (use_stmt);
  retval.1306 = _64 == 8;
  if (retval.1306 != 0)
    goto <bb 147>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 147> :
  D.253575 = gimple_call_fn (use_stmt);

  <bb 148> :
  _65 = D.253575;
  retval.1307 = _65 == 0B;
  if (retval.1307 != 0)
    goto <bb 149>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 149> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 330>; [INV]

  <bb 150> :
  D.253576 = gimple_call_fn (use_stmt);

  <bb 151> :
  _66 = D.253576;
  D.253577 = get_name (_66);

  <bb 152> :
  name = D.253577;
  if (name != 0B)
    goto <bb 153>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 153> :
  _67 = strcmp (name, "realloc");
  if (_67 == 0)
    goto <bb 154>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 154> :
  D.253578 = gimple_call_lhs (use_stmt);

  <bb 155> :
  _68 = D.253578;
  retval.1308 = _68 != 0B;
  if (retval.1308 != 0)
    goto <bb 156>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 156> :
  D.253579 = gimple_call_lhs (use_stmt);

  <bb 157> :
  _69 = D.253579;
  D.253580 = check_stmtStack (_69);

  <bb 158> :
  _70 = D.253580;
  retval.1309 = _70 == 0;
  if (retval.1309 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 159> :
  D.253581 = gimple_call_lhs (use_stmt);

  <bb 160> :
  _71 = D.253581;
  set_gimple_array (used_stmt, use_stmt, _71, target, 0B);

  <bb 161> :
  D.253582 = gimple_call_lhs (use_stmt);

  <bb 162> :
  _72 = D.253582;
  _73 = _72->base.code;
  retval.1310 = _73 == 153;
  if (retval.1310 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 163> :
  D.253583 = gimple_call_lhs (use_stmt);

  <bb 164> :
  _74 = D.253583;
  D.253584 = gimple_call_lhs (use_stmt);

  <bb 165> :
  _75 = D.253584;
  new_search_imm_use (used_stmt, _75, _74);
  goto <bb 325>; [INV]

  <bb 166> :
  D.253585 = gimple_call_fn (use_stmt);

  <bb 167> :
  _76 = D.253585;
  retval.1311 = _76 != 0B;
  if (retval.1311 != 0)
    goto <bb 168>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 168> :
  D.253586 = gimple_call_arg (use_stmt, 0);

  <bb 169> :
  _77 = D.253586;
  D.253587 = check_stmtStack (_77);

  <bb 170> :
  _78 = D.253587;
  retval.1312 = _78 == 0;
  if (retval.1312 != 0)
    goto <bb 171>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 171> :
  D.253588 = gimple_call_arg (use_stmt, 0);

  <bb 172> :
  _79 = D.253588;
  set_gimple_array (used_stmt, use_stmt, _79, target, 0B);

  <bb 173> :
  D.253589 = gimple_call_arg (use_stmt, 0);

  <bb 174> :
  _80 = D.253589;
  _81 = _80->base.code;
  retval.1313 = _81 == 153;
  if (retval.1313 != 0)
    goto <bb 175>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 175> :
  D.253590 = gimple_call_arg (use_stmt, 0);

  <bb 176> :
  _82 = D.253590;
  D.253591 = gimple_call_arg (use_stmt, 0);

  <bb 177> :
  _83 = D.253591;
  new_search_imm_use (used_stmt, _83, _82);
  goto <bb 325>; [INV]

  <bb 178> :
  _84 = strcmp (name, "free");
  if (_84 == 0)
    goto <bb 180>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 179> :
  _85 = strcmp (name, "xfree");
  if (_85 == 0)
    goto <bb 180>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 180> :
  D.253592 = gimple_call_fn (use_stmt);

  <bb 181> :
  _86 = D.253592;
  D.253593 = check_stmtStack (_86);

  <bb 182> :
  _87 = D.253593;
  retval.1314 = _87 == 0;
  if (retval.1314 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 183> :
  D.253594 = gimple_call_fn (use_stmt);

  <bb 184> :
  _88 = D.253594;
  set_gimple_array (used_stmt, use_stmt, _88, target, 0B);

  <bb 185> :
  D.253595 = gimple_call_fn (use_stmt);

  <bb 186> :
  _89 = D.253595;
  _90 = _89->base.code;
  retval.1315 = _90 == 153;
  if (retval.1315 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 187> :
  D.253596 = gimple_call_fn (use_stmt);

  <bb 188> :
  _91 = D.253596;
  D.253597 = gimple_call_fn (use_stmt);

  <bb 189> :
  _92 = D.253597;
  new_search_imm_use (used_stmt, _92, _91);

  <bb 190> :
  goto <bb 325>; [INV]

  <bb 191> :
  _93 = strcmp (name, "pthread_create");
  if (_93 == 0)
    goto <bb 193>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 192> :
  _94 = strcmp (name, "pthread_join");
  if (_94 == 0)
    goto <bb 193>; [INV]
  else
    goto <bb 269>; [INV]

  <bb 193> :
  D.253598 = gimple_call_fn (use_stmt);

  <bb 194> :
  _95 = D.253598;
  D.253599 = check_stmtStack (_95);

  <bb 195> :
  _96 = D.253599;
  retval.1316 = _96 == 0;
  if (retval.1316 != 0)
    goto <bb 196>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 196> :
has_single_use_addr_expr_jump:
  second = 0B;
  isVardecl = 0;
  if (var_declsuperjump == 1)
    goto <bb 197>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 197> :
  _97 = target->base.code;
  if (_97 == 131)
    goto <bb 198>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 198> :
  second = target->exp.operands[0];
  target = target;
  isVardecl = 1;

  <bb 199> :
  D.253600 = gimple_assign_rhs1 (def_stmt);

  <bb 200> :
  _98 = D.253600;
  _99 = _98->base.code;
  retval.1317 = _99 == 131;
  if (retval.1317 != 0)
    goto <bb 201>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 201> :
  D.253601 = gimple_assign_rhs1 (def_stmt);

  <bb 202> :
  _100 = D.253601;
  second = _100->exp.operands[0];
  second = second->exp.operands[0];
  isVardecl = 1;
  goto <bb 207>; [INV]

  <bb 203> :
  D.253602 = gimple_assign_rhs1 (def_stmt);

  <bb 204> :
  _101 = D.253602;
  _102 = _101->base.code;
  retval.1318 = _102 == 36;
  if (retval.1318 != 0)
    goto <bb 205>; [INV]
  else
    goto <bb 207>; [INV]

  <bb 205> :
  D.253603 = gimple_assign_rhs1 (def_stmt);

  <bb 206> :
  second = D.253603;
  isVardecl = 1;

  <bb 207> :
  if (second != 0B)
    goto <bb 208>; [INV]
  else
    goto <bb 259>; [INV]

  <bb 208> :
  _103 = second->base.code;
  if (_103 == 36)
    goto <bb 209>; [INV]
  else
    goto <bb 259>; [INV]

  <bb 209> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1320_104 = function_assign_collect;
  D.253604 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1320_104, &getFunctionAssignVAR);

  <bb 210> :
  _105 = D.253604;
  retval.1319 = _105 != 0B;
  if (retval.1319 != 0)
    goto <bb 211>; [INV]
  else
    goto <bb 258>; [INV]

  <bb 211> :
  getFunctionAssignVAR.1321_106 = getFunctionAssignVAR;
  D.196331 = ret_function_varstmt (getFunctionAssignVAR.1321_106); [return slot optimization]

  <bb 212> :
  function_assign_array::operator= (&assign_array, &D.196331);
  function_assign_array::~function_assign_array (&D.196331);
  D.196331 = {CLOBBER};
  i = 0;
  goto <bb 257>; [INV]

  <bb 213> :
  _107 = (long unsigned int) i;
  _108 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _107);
  _109 = _108->stmt;
  _110 = gimple_code (_109);
  retval.1322 = _110 == 6;
  if (retval.1322 != 0)
    goto <bb 214>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 214> :
  _111 = (long unsigned int) i;
  _112 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _111);
  _113 = _112->stmt;
  D.253605 = gimple_assign_lhs (_113);

  <bb 215> :
  _114 = D.253605;
  if (target != _114)
    goto <bb 216>; [INV]
  else
    goto <bb 219>; [INV]

  <bb 216> :
  _115 = (long unsigned int) i;
  _116 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _115);
  _117 = _116->stmt;
  D.253606 = gimple_assign_lhs (_117);

  <bb 217> :
  _118 = D.253606;
  _119 = _118->base.code;
  if (_119 == 153)
    goto <bb 218>; [INV]
  else
    goto <bb 219>; [INV]

  <bb 218> :
  iftmp.1324 = 1;
  goto <bb 220>; [INV]

  <bb 219> :
  iftmp.1324 = 0;

  <bb 220> :
  retval.1323 = iftmp.1324;
  if (retval.1323 != 0)
    goto <bb 221>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 221> :
  _120 = (long unsigned int) i;
  _121 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _120);
  _122 = _121->stmt;
  D.253607 = gimple_assign_lhs (_122);

  <bb 222> :
  _123 = D.253607;
  D.253608 = check_stmtStack (_123);

  <bb 223> :
  _124 = D.253608;
  retval.1325 = _124 == 0;
  if (retval.1325 != 0)
    goto <bb 224>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 224> :
  _125 = (long unsigned int) i;
  _126 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _125);
  _127 = _126->form_tree;
  retval.1326 = _127 != 0B;
  if (retval.1326 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 225> :
  _128 = (long unsigned int) i;
  _129 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _128);
  _130 = _129->form_tree;
  _131 = (long unsigned int) i;
  _132 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _131);
  _133 = _132->stmt;
  set_gimple_array (used_stmt, _133, _130, target, 0B);
  goto <bb 228>; [INV]

  <bb 226> :
  _134 = (long unsigned int) i;
  _135 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _134);
  _136 = _135->stmt;
  D.253609 = gimple_assign_lhs (_136);

  <bb 227> :
  _137 = D.253609;
  _138 = (long unsigned int) i;
  _139 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _138);
  _140 = _139->stmt;
  set_gimple_array (used_stmt, _140, _137, target, 0B);

  <bb 228> :
  _141 = (long unsigned int) i;
  _142 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _141);
  _143 = _142->stmt;
  D.253610 = gimple_assign_lhs (_143);

  <bb 229> :
  _144 = D.253610;
  _145 = (long unsigned int) i;
  _146 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _145);
  _147 = _146->stmt;
  D.253611 = gimple_assign_lhs (_147);

  <bb 230> :
  _148 = D.253611;
  new_search_imm_use (used_stmt, _148, _144);
  goto <bb 256>; [INV]

  <bb 231> :
  _149 = (long unsigned int) i;
  _150 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _149);
  _151 = _150->stmt;
  D.253612 = gimple_assign_rhs1 (_151);

  <bb 232> :
  _152 = D.253612;
  if (target != _152)
    goto <bb 233>; [INV]
  else
    goto <bb 236>; [INV]

  <bb 233> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.253613 = gimple_assign_rhs1 (_155);

  <bb 234> :
  _156 = D.253613;
  _157 = _156->base.code;
  if (_157 == 153)
    goto <bb 235>; [INV]
  else
    goto <bb 236>; [INV]

  <bb 235> :
  iftmp.1328 = 1;
  goto <bb 237>; [INV]

  <bb 236> :
  iftmp.1328 = 0;

  <bb 237> :
  retval.1327 = iftmp.1328;
  if (retval.1327 != 0)
    goto <bb 238>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 238> :
  _158 = (long unsigned int) i;
  _159 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _158);
  _160 = _159->stmt;
  D.253614 = gimple_assign_rhs1 (_160);

  <bb 239> :
  _161 = D.253614;
  D.253615 = check_stmtStack (_161);

  <bb 240> :
  _162 = D.253615;
  retval.1329 = _162 == 0;
  if (retval.1329 != 0)
    goto <bb 241>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 241> :
  _163 = (long unsigned int) i;
  _164 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _163);
  _165 = _164->form_tree;
  retval.1330 = _165 != 0B;
  if (retval.1330 != 0)
    goto <bb 242>; [INV]
  else
    goto <bb 243>; [INV]

  <bb 242> :
  _166 = (long unsigned int) i;
  _167 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _166);
  _168 = _167->form_tree;
  _169 = (long unsigned int) i;
  _170 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _169);
  _171 = _170->stmt;
  set_gimple_array (used_stmt, _171, _168, target, 0B);
  goto <bb 245>; [INV]

  <bb 243> :
  _172 = (long unsigned int) i;
  _173 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _172);
  _174 = _173->stmt;
  D.253616 = gimple_assign_rhs1 (_174);

  <bb 244> :
  _175 = D.253616;
  _176 = (long unsigned int) i;
  _177 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _176);
  _178 = _177->stmt;
  set_gimple_array (used_stmt, _178, _175, target, 0B);

  <bb 245> :
  _179 = (long unsigned int) i;
  _180 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _179);
  _181 = _180->stmt;
  D.253617 = gimple_assign_rhs1 (_181);

  <bb 246> :
  _182 = D.253617;
  _183 = (long unsigned int) i;
  _184 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _183);
  _185 = _184->stmt;
  D.253618 = gimple_assign_rhs1 (_185);

  <bb 247> :
  _186 = D.253618;
  new_search_imm_use (used_stmt, _186, _182);
  goto <bb 256>; [INV]

  <bb 248> :
  _187 = (long unsigned int) i;
  _188 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _187);
  _189 = _188->stmt;
  _190 = gimple_code (_189);
  retval.1331 = _190 == 8;
  if (retval.1331 != 0)
    goto <bb 249>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 249> :
  _191 = (long unsigned int) i;
  _192 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _191);
  _193 = _192->stmt;
  D.253619 = gimple_call_arg (_193, 0);

  <bb 250> :
  _194 = D.253619;
  _195 = _194->base.code;
  retval.1332 = _195 == 131;
  if (retval.1332 != 0)
    goto <bb 251>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 251> :
  _196 = (long unsigned int) i;
  _197 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _196);
  _198 = _197->stmt;
  D.253620 = gimple_call_arg (_198, 0);

  <bb 252> :
  _199 = D.253620;
  D.253621 = check_stmtStack (_199);

  <bb 253> :
  _200 = D.253621;
  retval.1333 = _200 == 0;
  if (retval.1333 != 0)
    goto <bb 254>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 254> :
  _201 = (long unsigned int) i;
  _202 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _201);
  _203 = _202->stmt;
  D.253622 = gimple_call_arg (_203, 0);

  <bb 255> :
  _204 = D.253622;
  _205 = (long unsigned int) i;
  _206 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _205);
  _207 = _206->stmt;
  set_gimple_array (used_stmt, _207, _204, target, 0B);

  <bb 256> :
  i = i + 1;

  <bb 257> :
  _208 = (long unsigned int) i;
  _209 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1334 = _208 < _209;
  if (retval.1334 != 0)
    goto <bb 213>; [INV]
  else
    goto <bb 258>; [INV]

  <bb 258> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};

  <bb 259> :
  if (var_declsuperjump == 1)
    goto <bb 260>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 260> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 330>; [INV]

  <bb 261> :
  D.253625 = gimple_call_fn (use_stmt);

  <bb 262> :
  _210 = D.253625;
  set_gimple_array (used_stmt, use_stmt, _210, target, 0B);

  <bb 263> :
  D.253626 = gimple_call_fn (use_stmt);

  <bb 264> :
  _211 = D.253626;
  _212 = _211->base.code;
  retval.1335 = _212 == 153;
  if (retval.1335 != 0)
    goto <bb 265>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 265> :
  D.253627 = gimple_call_fn (use_stmt);

  <bb 266> :
  _213 = D.253627;
  D.253628 = gimple_call_fn (use_stmt);

  <bb 267> :
  _214 = D.253628;
  new_search_imm_use (used_stmt, _214, _213);

  <bb 268> :
  goto <bb 325>; [INV]

  <bb 269> :
  D.253629 = gimple_call_fn (use_stmt);

  <bb 270> :
  _215 = D.253629;
  if (_215 != 0B)
    goto <bb 271>; [INV]
  else
    goto <bb 276>; [INV]

  <bb 271> :
  D.253630 = gimple_call_lhs (use_stmt);

  <bb 272> :
  _216 = D.253630;
  if (_216 != 0B)
    goto <bb 273>; [INV]
  else
    goto <bb 276>; [INV]

  <bb 273> :
  D.253631 = gimple_call_lhs (use_stmt);

  <bb 274> :
  _217 = D.253631;
  _218 = _217->base.code;
  if (_218 == 153)
    goto <bb 275>; [INV]
  else
    goto <bb 276>; [INV]

  <bb 275> :
  iftmp.1337 = 1;
  goto <bb 277>; [INV]

  <bb 276> :
  iftmp.1337 = 0;

  <bb 277> :
  retval.1336 = iftmp.1337;
  if (retval.1336 != 0)
    goto <bb 278>; [INV]
  else
    goto <bb 315>; [INV]

  <bb 278> :
  D.253632 = gimple_call_lhs (use_stmt);

  <bb 279> :
  _219 = D.253632;
  D.253633 = check_stmtStack (_219);

  <bb 280> :
  _220 = D.253633;
  retval.1338 = _220 == 0;
  if (retval.1338 != 0)
    goto <bb 281>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 281> :
  D.253634 = gimple_call_lhs (use_stmt);

  <bb 282> :
  _221 = D.253634;
  set_gimple_array (used_stmt, use_stmt, _221, target, 0B);

  <bb 283> :
  D.253635 = gimple_call_lhs (use_stmt);

  <bb 284> :
  _222 = D.253635;
  retval.1339 = target2 != _222;
  if (retval.1339 != 0)
    goto <bb 285>; [INV]
  else
    goto <bb 290>; [INV]

  <bb 285> :
  D.253636 = check_stmtStack2 (use_stmt);

  <bb 286> :
  _223 = D.253636;
  retval.1340 = _223 == 0;
  if (retval.1340 != 0)
    goto <bb 287>; [INV]
  else
    goto <bb 290>; [INV]

  <bb 287> :
  D.253637 = gimple_call_lhs (use_stmt);

  <bb 288> :
  _224 = D.253637;
  D.253638 = gimple_call_lhs (use_stmt);

  <bb 289> :
  _225 = D.253638;
  new_search_imm_use (used_stmt, _225, _224);

  <bb 290> :
  D.253639 = gimple_call_fn (use_stmt);

  <bb 291> :
  _226 = D.253639;
  retval.1341 = _226 != 0B;
  if (retval.1341 != 0)
    goto <bb 292>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 292> :
  D.253640 = gimple_call_fn (use_stmt);

  <bb 293> :
  _227 = D.253640;
  D.253641 = check_stmtStack (_227);

  <bb 294> :
  _228 = D.253641;
  retval.1342 = _228 == 0;
  if (retval.1342 != 0)
    goto <bb 295>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 295> :
  D.253642 = gimple_call_num_args (use_stmt);

  <bb 296> :
  _229 = D.253642;
  retval.1343 = _229 != 0;
  if (retval.1343 != 0)
    goto <bb 297>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 297> :
  i = 0;
  goto <bb 313>; [INV]

  <bb 298> :
  i.1345_230 = (unsigned int) i;
  D.253643 = gimple_call_arg (use_stmt, i.1345_230);

  <bb 299> :
  _231 = D.253643;
  retval.1344 = _231 != 0B;
  if (retval.1344 != 0)
    goto <bb 300>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 300> :
  i.1347_232 = (unsigned int) i;
  D.253644 = gimple_call_arg (use_stmt, i.1347_232);

  <bb 301> :
  _233 = D.253644;
  retval.1346 = target2 != _233;
  if (retval.1346 != 0)
    goto <bb 302>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 302> :
  i.1349_234 = (unsigned int) i;
  D.253645 = gimple_call_arg (use_stmt, i.1349_234);

  <bb 303> :
  _235 = D.253645;
  _236 = _235->base.code;
  retval.1348 = _236 == 153;
  if (retval.1348 != 0)
    goto <bb 304>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 304> :
  i.1351_237 = (unsigned int) i;
  D.253646 = gimple_call_arg (use_stmt, i.1351_237);

  <bb 305> :
  _238 = D.253646;
  D.253647 = check_stmtStack (_238);

  <bb 306> :
  _239 = D.253647;
  retval.1350 = _239 == 0;
  if (retval.1350 != 0)
    goto <bb 307>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 307> :
  i.1353_240 = (unsigned int) i;
  D.253648 = gimple_call_arg (use_stmt, i.1353_240);

  <bb 308> :
  _241 = D.253648;
  retval.1352 = target2 != _241;
  if (retval.1352 != 0)
    goto <bb 309>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 309> :
  i.1354_242 = (unsigned int) i;
  D.253649 = gimple_call_arg (use_stmt, i.1354_242);

  <bb 310> :
  _243 = D.253649;
  i.1355_244 = (unsigned int) i;
  D.253650 = gimple_call_arg (use_stmt, i.1355_244);

  <bb 311> :
  _245 = D.253650;
  new_search_imm_use (used_stmt, _245, _243);

  <bb 312> :
  i = i + 1;

  <bb 313> :
  D.253651 = gimple_call_num_args (use_stmt);

  <bb 314> :
  _246 = D.253651;
  i.1357_247 = (unsigned int) i;
  retval.1356 = _246 > i.1357_247;
  if (retval.1356 != 0)
    goto <bb 298>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 315> :
  D.253652 = gimple_call_fn (use_stmt);

  <bb 316> :
  _248 = D.253652;
  D.253653 = check_stmtStack (_248);

  <bb 317> :
  _249 = D.253653;
  retval.1358 = _249 == 0;
  if (retval.1358 != 0)
    goto <bb 318>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 318> :
  D.253654 = gimple_call_fn (use_stmt);

  <bb 319> :
  _250 = D.253654;
  set_gimple_array (used_stmt, use_stmt, _250, target, 0B);

  <bb 320> :
  D.253655 = gimple_call_fn (use_stmt);

  <bb 321> :
  _251 = D.253655;
  _252 = _251->base.code;
  retval.1359 = _252 == 153;
  if (retval.1359 != 0)
    goto <bb 322>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 322> :
  D.253656 = gimple_call_fn (use_stmt);

  <bb 323> :
  _253 = D.253656;
  D.253657 = gimple_call_fn (use_stmt);

  <bb 324> :
  _254 = D.253657;
  new_search_imm_use (used_stmt, _254, _253);

  <bb 325> :

  <bb 326> :
  D.253658 = next_readonly_imm_use (&imm_iter);

  <bb 327> :
  use_p = D.253658;

  <bb 328> :
  _255 = end_readonly_imm_use_p (&imm_iter);
  retval.1360 = ~_255;
  if (retval.1360 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 329> :
  imm_iter = {CLOBBER};
  goto <bb 331>; [INV]

  <bb 330> :
  imm_iter = {CLOBBER};

  <bb 331> :
<L337>:
  return;

  <bb 332> :
<L338>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 333> :
<L339>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 2

  <bb 334> :
<L340>:
  imm_iter = {CLOBBER};
  resx 1

}



;; Function num_imm_uses (_ZL12num_imm_usesPK9tree_node, funcdef_no=2993, decl_uid=109485, cgraph_uid=2095, symbol_order=2260)

Removing basic block 8
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5
;;
;; Loop 1
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 13 14 11 12 9 10
;; 2 succs { 3 8 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 4 17 }
;; 8 succs { 16 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 9 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
unsigned int num_imm_uses (const union tree_node * var)
{
  unsigned int num;
  const struct ssa_use_operand_t * ptr;
  const struct ssa_use_operand_t * const start;
  unsigned int D.253677;
  bool iftmp.1362;
  bool retval.1361;

  <bb 2> :
  start = &var->ssa_name.imm_uses;
  num = 0;
  _1 = global_options.x_flag_var_tracking_assignments;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  ptr = start->next;
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = ptr->loc.stmt;
  if (_2 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  num = num + 1;

  <bb 6> :
  ptr = ptr->next;

  <bb 7> :
  if (ptr != start)
    goto <bb 4>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  ptr = start->next;
  goto <bb 16>; [INV]

  <bb 9> :
  _3 = ptr->loc.stmt;
  if (_3 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _4 = ptr->loc.stmt;
  _5 = is_gimple_debug (_4);
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.1362 = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.1362 = 0;

  <bb 13> :
  retval.1361 = iftmp.1362;
  if (retval.1361 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  num = num + 1;

  <bb 15> :
  ptr = ptr->next;

  <bb 16> :
  if (ptr != start)
    goto <bb 9>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  D.253677 = num;

  <bb 18> :
<L19>:
  return D.253677;

}



;; Function is_gimple_debug (_ZL15is_gimple_debugPK6gimple, funcdef_no=2297, decl_uid=93567, cgraph_uid=1434, symbol_order=1594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_debug (const struct gimple * gs)
{
  bool D.253679;

  <bb 2> :
  _1 = gimple_code (gs);
  D.253679 = _1 == 2;

  <bb 3> :
<L0>:
  return D.253679;

}



;; Function first_readonly_imm_use (_ZL22first_readonly_imm_useP16imm_use_iteratorP9tree_node, funcdef_no=2988, decl_uid=109451, cgraph_uid=2090, symbol_order=2255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct ssa_use_operand_t * first_readonly_imm_use (struct imm_use_iterator * imm, union tree_node * var)
{
  struct ssa_use_operand_t * D.253684;
  bool retval.1363;

  <bb 2> :
  _1 = &var->ssa_name.imm_uses;
  imm->end_p = _1;
  _2 = imm->end_p;
  _3 = _2->next;
  imm->imm_use = _3;
  _4 = imm->imm_use;
  _5 = _4->next;
  imm->iter_node.next = _5;
  retval.1363 = end_readonly_imm_use_p (imm);
  if (retval.1363 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253684 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.253684 = imm->imm_use;

  <bb 5> :
<L2>:
  return D.253684;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK6gimple, funcdef_no=2174, decl_uid=93048, cgraph_uid=1311, symbol_order=1471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gimple * gs)
{
  const struct gcond * D.253688;
  const struct gcond * gc;
  tree_code D.253686;

  <bb 2> :
  D.253688 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.253688;
  D.253686 = gimple_cond_code (gc);

  <bb 3> :
<L0>:
  return D.253686;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_PK6gimple, funcdef_no=7048, decl_uid=93051, cgraph_uid=3680, symbol_order=4459)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (const struct gimple * gs)
{
  const struct gcond * D.253691;
  const struct gcond * D.253689;

  <bb 2> :
  D.253691 = as_a<const gcond*, const gimple> (gs);
  D.253689 = D.253691;

  <bb 3> :
<L0>:
  return D.253689;

}



;; Function as_a<const gcond*, const gimple> (_Z4as_aIPK5gcondK6gimpleET_PT0_, funcdef_no=8038, decl_uid=205849, cgraph_uid=4670, symbol_order=5452)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, const gimple> (const struct gimple * p)
{
  const struct gcond * D.253694;
  const struct gcond * D.253692;

  <bb 2> :
  D.253694 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.253692 = D.253694;

  <bb 3> :
<L0>:
  return D.253692;

}



;; Function is_a_helper<const gcond*>::cast<gimple> (_ZN11is_a_helperIPK5gcondE4castI6gimpleEES2_PKT_, funcdef_no=8042, decl_uid=205867, cgraph_uid=4674, symbol_order=5456)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * is_a_helper<const gcond*>::cast<gimple> (const struct gimple * p)
{
  const struct gcond * D.253695;

  <bb 2> :
  D.253695 = reinterpret_is_a_helper<gcond*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.253695;

}



;; Function reinterpret_is_a_helper<gcond*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcondE4castI6gimpleEES1_PT_, funcdef_no=8997, decl_uid=218005, cgraph_uid=5629, symbol_order=6415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcond * reinterpret_is_a_helper<gcond*>::cast<gimple> (struct gimple * p)
{
  struct gcond * D.253697;

  <bb 2> :
  D.253697 = p;

  <bb 3> :
<L0>:
  return D.253697;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK5gcond, funcdef_no=2173, decl_uid=93045, cgraph_uid=1310, symbol_order=1470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gcond * gs)
{
  tree_code D.253699;

  <bb 2> :
  _1 = gs->D.90458.D.90144.D.90137.subcode;
  D.253699 = (tree_code) _1;

  <bb 3> :
<L0>:
  return D.253699;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK6gimple, funcdef_no=2177, decl_uid=93063, cgraph_uid=1314, symbol_order=1474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gimple * gs)
{
  const struct gcond * D.253703;
  const struct gcond * gc;
  union tree_node * D.253701;

  <bb 2> :
  D.253703 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.253703;
  D.253701 = gimple_cond_lhs (gc);

  <bb 3> :
<L0>:
  return D.253701;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_P6gimple, funcdef_no=7762, decl_uid=93053, cgraph_uid=4394, symbol_order=5176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (struct gimple * gs)
{
  const struct gcond * D.253706;
  const struct gcond * D.253704;

  <bb 2> :
  D.253706 = as_a<const gcond*, gimple> (gs);
  D.253704 = D.253706;

  <bb 3> :
<L0>:
  return D.253704;

}



;; Function as_a<const gcond*, gimple> (_Z4as_aIPK5gcond6gimpleET_PT0_, funcdef_no=8705, decl_uid=213845, cgraph_uid=5337, symbol_order=6123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, gimple> (struct gimple * p)
{
  const struct gcond * D.253709;
  const struct gcond * D.253707;

  <bb 2> :
  D.253709 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.253707 = D.253709;

  <bb 3> :
<L0>:
  return D.253707;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK5gcond, funcdef_no=2180, decl_uid=93074, cgraph_uid=1317, symbol_order=1477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gcond * gs)
{
  union tree_node * D.253710;

  <bb 2> :
  D.253710 = gs->D.90458.op[1];

  <bb 3> :
<L0>:
  return D.253710;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK5gcond, funcdef_no=2176, decl_uid=93060, cgraph_uid=1313, symbol_order=1473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gcond * gs)
{
  union tree_node * D.253712;

  <bb 2> :
  D.253712 = gs->D.90458.op[0];

  <bb 3> :
<L0>:
  return D.253712;

}



;; Function next_readonly_imm_use (_ZL21next_readonly_imm_useP16imm_use_iterator, funcdef_no=2989, decl_uid=109454, cgraph_uid=2091, symbol_order=2256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct ssa_use_operand_t * next_readonly_imm_use (struct imm_use_iterator * imm)
{
  static const char __FUNCTION__[22] [value-expr: "next_readonly_imm_use"];
  struct ssa_use_operand_t * old;
  struct ssa_use_operand_t * D.253722;
  bool retval.1364;

  <bb 2> :
  old = imm->imm_use;
  _1 = global_options.x_flag_checking;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = imm->iter_node.next;
  _3 = old->next;
  if (_2 != _3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/ssa-iterators.h", 374, "next_readonly_imm_use");

  <bb 5> :
  _4 = old->next;
  _5 = _4->next;
  imm->iter_node.next = _5;

  <bb 6> :
  _6 = old->next;
  imm->imm_use = _6;
  retval.1364 = end_readonly_imm_use_p (imm);
  if (retval.1364 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.253722 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  D.253722 = imm->imm_use;

  <bb 9> :
<L7>:
  return D.253722;

}



;; Function end_readonly_imm_use_p (_ZL22end_readonly_imm_use_pPK16imm_use_iterator, funcdef_no=2987, decl_uid=109447, cgraph_uid=2089, symbol_order=2254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool end_readonly_imm_use_p (const struct imm_use_iterator * imm)
{
  bool D.253724;

  <bb 2> :
  _1 = imm->imm_use;
  _2 = imm->end_p;
  D.253724 = _1 == _2;

  <bb 3> :
<L0>:
  return D.253724;

}



;; Function check_bbStack (_Z13check_bbStackP15basic_block_def, funcdef_no=6419, decl_uid=196347, cgraph_uid=3395, symbol_order=4168)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_bbStack (struct basic_block_def * target)
{
  int o;
  int size;
  int D.253729;
  bool retval.1365;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::size (&new_path_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&new_path_array, _4);
  _6 = *_5;
  target.1366_7 = target;
  retval.1365 = _6 == target.1366_7;
  if (retval.1365 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253729 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1367_8 = totalsize;
  _9 = size + totalsize.1367_8;
  totalsize = _9;
  std::vector<basic_block_def*>::push_back (&new_path_array, &target);
  D.253729 = 0;

  <bb 8> :
<L5>:
  return D.253729;

}



;; Function std::vector<basic_block_def*>::size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE4sizeEv, funcdef_no=7763, decl_uid=169931, cgraph_uid=4395, symbol_order=5177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::size (const struct vector * const this)
{
  size_type D.253731;

  <bb 2> :
  _1 = this->D.170298._M_impl.D.169643._M_finish;
  _2 = this->D.170298._M_impl.D.169643._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.253731 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253731;

}



;; Function std::vector<basic_block_def*>::operator[] (_ZNSt6vectorIP15basic_block_defSaIS1_EEixEm, funcdef_no=7764, decl_uid=169951, cgraph_uid=4396, symbol_order=5178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * & std::vector<basic_block_def*>::operator[] (struct vector * const this, size_type __n)
{
  struct basic_block_def * & D.253733;

  <bb 2> :
  _1 = this->D.170298._M_impl.D.169643._M_start;
  _2 = __n * 8;
  D.253733 = _1 + _2;

  <bb 3> :
<L0>:
  return D.253733;

}



;; Function std::vector<basic_block_def*>::push_back (_ZNSt6vectorIP15basic_block_defSaIS1_EE9push_backERKS1_, funcdef_no=7765, decl_uid=169978, cgraph_uid=4398, symbol_order=5180)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<basic_block_def*>::push_back (struct vector * const this, struct basic_block_def * const & __x)
{
  struct __normal_iterator D.253738;

  <bb 2> :
  _1 = this->D.170298._M_impl.D.169643._M_finish;
  _2 = this->D.170298._M_impl.D.169643._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.170298._M_impl.D.169643._M_finish;
  _4 = &this->D.170298._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_4, _3, __x);
  _5 = this->D.170298._M_impl.D.169643._M_finish;
  _6 = _5 + 8;
  this->D.170298._M_impl.D.169643._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253738 = std::vector<basic_block_def*>::end (this);
  std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (this, D.253738, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_ZNSt16allocator_traitsISaIP15basic_block_defEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8706, decl_uid=213852, cgraph_uid=5338, symbol_order=6124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (struct allocator_type & __a, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<basic_block_def* const&> (_ZSt7forwardIRKP15basic_block_defEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9522, decl_uid=226165, cgraph_uid=6154, symbol_order=6940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * const & std::forward<basic_block_def* const&> (struct basic_block_def * const & __t)
{
  struct basic_block_def * const & D.253739;

  <bb 2> :
  D.253739 = __t;

  <bb 3> :
<L0>:
  return D.253739;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9523, decl_uid=226167, cgraph_uid=6155, symbol_order=6941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (struct new_allocator * const this, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  void * D.235357;
  void * D.235356;
  struct basic_block_def * D.235358;

  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  D.235358 = *_1;
  D.235356 = __p;
  D.235357 = operator new (8, D.235356);
  MEM[(struct basic_block_def * *)D.235357] = D.235358;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=8707, decl_uid=169911, cgraph_uid=5339, symbol_order=6125)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::end (struct vector * const this)
{
  struct iterator D.226190;
  struct iterator D.253741;

  <bb 2> :
  _1 = &this->D.170298._M_impl.D.169643._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.226190, _1);
  D.253741 = D.226190;
  D.226190 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253741;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9525, decl_uid=214099, cgraph_uid=6157, symbol_order=6943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (_ZNSt6vectorIP15basic_block_defSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8708, decl_uid=214118, cgraph_uid=5343, symbol_order=6129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (struct vector * const this, struct iterator __position, struct basic_block_def * const & __args#0)
{
  struct basic_block_def * * D.253748;
  const size_type D.253747;
  struct basic_block_def * * __new_finish;
  struct basic_block_def * * __new_start;
  const size_type __elems_before;
  struct basic_block_def * * __old_finish;
  struct basic_block_def * * __old_start;
  const size_type __len;
  struct iterator D.226198;

  <bb 2> :
  D.253747 = std::vector<basic_block_def*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253747;
  __old_start = this->D.170298._M_impl.D.169643._M_start;
  __old_finish = this->D.170298._M_impl.D.169643._M_finish;
  D.226198 = std::vector<basic_block_def*>::begin (this);
  _1 = __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (&__position, &D.226198);
  __elems_before = (const size_type) _1;
  D.226198 = {CLOBBER};
  _2 = &this->D.170298;
  D.253748 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_2, __len);
  __new_start = D.253748;
  __new_finish = __new_start;
  _3 = std::forward<basic_block_def* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.170298._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.170298;
  _8 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.170298;
  _12 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.170298;
  _23 = this->D.170298._M_impl.D.169643._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_22, __old_start, _26);
  this->D.170298._M_impl.D.169643._M_start = __new_start;
  this->D.170298._M_impl.D.169643._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.170298._M_impl.D.169643._M_end_of_storage = _28;
  return;

}



;; Function std::vector<basic_block_def*>::_M_check_len (_ZNKSt6vectorIP15basic_block_defSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9527, decl_uid=170147, cgraph_uid=6159, symbol_order=6945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<basic_block_def*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1370;
  size_type D.253752;
  const long unsigned int D.235367;
  bool retval.1368;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::max_size (this);
  _2 = std::vector<basic_block_def*>::size (this);
  _3 = _1 - _2;
  __n.1369_4 = __n;
  retval.1368 = _3 < __n.1369_4;
  if (retval.1368 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<basic_block_def*>::size (this);
  _6 = std::vector<basic_block_def*>::size (this);
  D.235367 = _6;
  _7 = std::max<long unsigned int> (&D.235367, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235367 = {CLOBBER};
  _9 = std::vector<basic_block_def*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<basic_block_def*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1370 = std::vector<basic_block_def*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1370 = __len;

  <bb 8> :
  D.253752 = iftmp.1370;

  <bb 9> :
<L6>:
  return D.253752;

}



;; Function std::vector<basic_block_def*>::max_size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8max_sizeEv, funcdef_no=10135, decl_uid=169933, cgraph_uid=6767, symbol_order=7557)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::max_size (const struct vector * const this)
{
  size_type D.253759;

  <bb 2> :
  _1 = &this->D.170298;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  D.253759 = std::vector<basic_block_def*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253759;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9600, decl_uid=169533, cgraph_uid=6232, symbol_order=7018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.253761;

  <bb 2> :
  D.253761 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.253761;

}



;; Function std::vector<basic_block_def*>::_S_max_size (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10594, decl_uid=170154, cgraph_uid=7226, symbol_order=8016)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253763;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<basic_block_def*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253763 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253763;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::max_size (_ZNSt16allocator_traitsISaIP15basic_block_defEE8max_sizeERKS2_, funcdef_no=10806, decl_uid=169468, cgraph_uid=7438, symbol_order=8230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<basic_block_def*> >::max_size (const struct allocator_type & __a)
{
  size_type D.253766;

  <bb 2> :
  D.253766 = __gnu_cxx::new_allocator<basic_block_def*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253766;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE8max_sizeEv, funcdef_no=10906, decl_uid=169310, cgraph_uid=7538, symbol_order=8330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::max_size (const struct new_allocator * const this)
{
  size_type D.253768;

  <bb 2> :
  D.253768 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253768;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE11_M_max_sizeEv, funcdef_no=10596, decl_uid=169329, cgraph_uid=7227, symbol_order=8017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.253770;

  <bb 2> :
  D.253770 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.253770;

}



;; Function std::vector<basic_block_def*>::begin (_ZNSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9528, decl_uid=169907, cgraph_uid=6160, symbol_order=6946)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::begin (struct vector * const this)
{
  struct iterator D.235369;
  struct iterator D.253772;

  <bb 2> :
  _1 = &this->D.170298._M_impl.D.169643._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.235369, _1);
  D.253772 = D.235369;
  D.235369 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253772;

}



;; Function __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (_ZN9__gnu_cxxmiIPP15basic_block_defSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9529, decl_uid=226199, cgraph_uid=6161, symbol_order=6947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253775;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253775 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.253775;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE11_M_allocateEm, funcdef_no=9530, decl_uid=169647, cgraph_uid=6162, symbol_order=6948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct basic_block_def * * std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.253783;
  struct basic_block_def * * iftmp.1371;
  struct basic_block_def * * D.253777;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.253783 = std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_1, __n);
  iftmp.1371 = D.253783;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1371 = 0B;

  <bb 5> :
  D.253777 = iftmp.1371;

  <bb 6> :
<L3>:
  return D.253777;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE8allocateERS2_m, funcdef_no=10136, decl_uid=169448, cgraph_uid=6768, symbol_order=7558)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * std::allocator_traits<std::allocator<basic_block_def*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct basic_block_def * * D.253786;
  struct basic_block_def * * D.253784;

  <bb 2> :
  D.253786 = __gnu_cxx::new_allocator<basic_block_def*>::allocate (__a, __n, 0B);
  D.253784 = D.253786;

  <bb 3> :
<L0>:
  return D.253784;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::allocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE8allocateEmPKv, funcdef_no=10595, decl_uid=169302, cgraph_uid=7228, symbol_order=8018)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * __gnu_cxx::new_allocator<basic_block_def*>::allocate (struct new_allocator * const this, size_type __n, const void * D.243572)
{
  struct basic_block_def * * D.253797;
  struct basic_block_def * * D.253796;
  align_val_t __al;
  struct basic_block_def * * D.253794;
  bool retval.1372;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1372 = _4 != 0;
  if (retval.1372 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.253797 = operator new (_6);
  D.253794 = D.253797;

  <bb 7> :
<L6>:
  return D.253794;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8721, decl_uid=169531, cgraph_uid=5353, symbol_order=6139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.253798;

  <bb 2> :
  D.253798 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.253798;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9532, decl_uid=214086, cgraph_uid=6164, symbol_order=6950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * const & __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * * const & D.253800;

  <bb 2> :
  D.253800 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253800;

}



;; Function std::vector<basic_block_def*>::_S_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9531, decl_uid=169805, cgraph_uid=6163, symbol_order=6949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253803;
  struct basic_block_def * * D.253802;

  <bb 2> :
  D.253802 = std::vector<basic_block_def*>::_S_do_relocate (__first, __last, __result, __alloc, D.253803);

  <bb 3> :
<L0>:
  return D.253802;

}



;; Function std::vector<basic_block_def*>::_S_do_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10137, decl_uid=169793, cgraph_uid=6769, symbol_order=7559)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_do_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240360)
{
  struct basic_block_def * * D.253805;

  <bb 2> :
  D.253805 = std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253805;

}



;; Function std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (_ZSt12__relocate_aIPP15basic_block_defS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10597, decl_uid=226364, cgraph_uid=7229, symbol_order=8019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & __alloc)
{
  struct basic_block_def * * D.253807;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**> (__result);
  _2 = std::__niter_base<basic_block_def**> (__last);
  _3 = std::__niter_base<basic_block_def**> (__first);
  D.253807 = std::__relocate_a_1<basic_block_def*, basic_block_def*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253807;

}



;; Function std::__niter_base<basic_block_def**> (_ZSt12__niter_baseIPP15basic_block_defET_S3_, funcdef_no=10640, decl_uid=226370, cgraph_uid=7272, symbol_order=8062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.253809;

  <bb 2> :
  D.253809 = __it;

  <bb 3> :
<L0>:
  return D.253809;

}



;; Function std::__relocate_a_1<basic_block_def*, basic_block_def*> (_ZSt14__relocate_a_1IP15basic_block_defS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10807, decl_uid=226538, cgraph_uid=7439, symbol_order=8231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__relocate_a_1<basic_block_def*, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.244607)
{
  ptrdiff_t __count;
  struct basic_block_def * * D.253814;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1373_2 = (long unsigned int) __count;
  _3 = __count.1373_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1374_4 = (long unsigned int) __count;
  _5 = __count.1374_4 * 8;
  D.253814 = __result + _5;

  <bb 5> :
<L3>:
  return D.253814;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8373, decl_uid=169650, cgraph_uid=5005, symbol_order=5791)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (struct _Vector_base * const this, struct basic_block_def * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE10deallocateERS2_PS1_m, funcdef_no=9160, decl_uid=169455, cgraph_uid=5792, symbol_order=6578)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (struct allocator_type & __a, struct basic_block_def * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE10deallocateEPS2_m, funcdef_no=9877, decl_uid=169306, cgraph_uid=6509, symbol_order=7299)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::deallocate (struct new_allocator * const this, struct basic_block_def * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack (_Z15check_stmtStackP9tree_node, funcdef_no=6420, decl_uid=186964, cgraph_uid=3396, symbol_order=4169)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack (union tree_node * target)
{
  int o;
  int size;
  int D.253825;
  bool retval.1375;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  target.1376_7 = target;
  retval.1375 = _6 == target.1376_7;
  if (retval.1375 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253825 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1377_8 = totalsize;
  _9 = size + totalsize.1377_8;
  totalsize = _9;
  std::vector<tree_node*>::push_back (&new_gimpletree_array, &target);
  D.253825 = 0;

  <bb 8> :
<L5>:
  return D.253825;

}



;; Function check_stmtStack2 (_Z16check_stmtStack2P6gimple, funcdef_no=6421, decl_uid=186962, cgraph_uid=3397, symbol_order=4170)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack2 (struct gimple * stmt)
{
  int o;
  int size;
  int D.253830;
  bool retval.1378;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  stmt.1379_7 = stmt;
  retval.1378 = _6 == stmt.1379_7;
  if (retval.1378 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253830 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1380_8 = totalsize;
  _9 = size + totalsize.1380_8;
  totalsize = _9;
  std::vector<gimple*>::push_back (&new_gimple_array, &stmt);
  D.253830 = 0;

  <bb 8> :
<L5>:
  return D.253830;

}



;; Function std::vector<gimple*>::size (_ZNKSt6vectorIP6gimpleSaIS1_EE4sizeEv, funcdef_no=7767, decl_uid=183604, cgraph_uid=4399, symbol_order=5181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::size (const struct vector * const this)
{
  size_type D.253832;

  <bb 2> :
  _1 = this->D.183971._M_impl.D.183327._M_finish;
  _2 = this->D.183971._M_impl.D.183327._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.253832 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253832;

}



;; Function std::vector<gimple*>::operator[] (_ZNSt6vectorIP6gimpleSaIS1_EEixEm, funcdef_no=7768, decl_uid=183624, cgraph_uid=4400, symbol_order=5182)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * & std::vector<gimple*>::operator[] (struct vector * const this, size_type __n)
{
  struct gimple * & D.253834;

  <bb 2> :
  _1 = this->D.183971._M_impl.D.183327._M_start;
  _2 = __n * 8;
  D.253834 = _1 + _2;

  <bb 3> :
<L0>:
  return D.253834;

}



;; Function std::vector<gimple*>::push_back (_ZNSt6vectorIP6gimpleSaIS1_EE9push_backERKS1_, funcdef_no=7769, decl_uid=183651, cgraph_uid=4402, symbol_order=5184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<gimple*>::push_back (struct vector * const this, struct gimple * const & __x)
{
  struct __normal_iterator D.253839;

  <bb 2> :
  _1 = this->D.183971._M_impl.D.183327._M_finish;
  _2 = this->D.183971._M_impl.D.183327._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.183971._M_impl.D.183327._M_finish;
  _4 = &this->D.183971._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_4, _3, __x);
  _5 = this->D.183971._M_impl.D.183327._M_finish;
  _6 = _5 + 8;
  this->D.183971._M_impl.D.183327._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253839 = std::vector<gimple*>::end (this);
  std::vector<gimple*>::_M_realloc_insert<gimple* const&> (this, D.253839, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_ZNSt16allocator_traitsISaIP6gimpleEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8712, decl_uid=214127, cgraph_uid=5344, symbol_order=6130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (struct allocator_type & __a, struct gimple * * __p, struct gimple * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<gimple* const&> (_ZSt7forwardIRKP6gimpleEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9534, decl_uid=226690, cgraph_uid=6166, symbol_order=6952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * const & std::forward<gimple* const&> (struct gimple * const & __t)
{
  struct gimple * const & D.253840;

  <bb 2> :
  D.253840 = __t;

  <bb 3> :
<L0>:
  return D.253840;

}



;; Function __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9535, decl_uid=226692, cgraph_uid=6167, symbol_order=6953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (struct new_allocator * const this, struct gimple * * __p, struct gimple * const & __args#0)
{
  void * D.235398;
  void * D.235397;
  struct gimple * D.235399;

  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  D.235399 = *_1;
  D.235397 = __p;
  D.235398 = operator new (8, D.235397);
  MEM[(struct gimple * *)D.235398] = D.235399;
  return;

}



;; Function std::vector<gimple*>::end (_ZNSt6vectorIP6gimpleSaIS1_EE3endEv, funcdef_no=8713, decl_uid=183584, cgraph_uid=5345, symbol_order=6131)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::end (struct vector * const this)
{
  struct iterator D.226715;
  struct iterator D.253842;

  <bb 2> :
  _1 = &this->D.183971._M_impl.D.183327._M_finish;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.226715, _1);
  D.253842 = D.226715;
  D.226715 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253842;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9537, decl_uid=214364, cgraph_uid=6169, symbol_order=6955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (struct __normal_iterator * const this, struct gimple * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<gimple*>::_M_realloc_insert<gimple* const&> (_ZNSt6vectorIP6gimpleSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8714, decl_uid=214383, cgraph_uid=5349, symbol_order=6135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::_M_realloc_insert<gimple* const&> (struct vector * const this, struct iterator __position, struct gimple * const & __args#0)
{
  struct gimple * * D.253849;
  const size_type D.253848;
  struct gimple * * __new_finish;
  struct gimple * * __new_start;
  const size_type __elems_before;
  struct gimple * * __old_finish;
  struct gimple * * __old_start;
  const size_type __len;
  struct iterator D.226723;

  <bb 2> :
  D.253848 = std::vector<gimple*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253848;
  __old_start = this->D.183971._M_impl.D.183327._M_start;
  __old_finish = this->D.183971._M_impl.D.183327._M_finish;
  D.226723 = std::vector<gimple*>::begin (this);
  _1 = __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (&__position, &D.226723);
  __elems_before = (const size_type) _1;
  D.226723 = {CLOBBER};
  _2 = &this->D.183971;
  D.253849 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_2, __len);
  __new_start = D.253849;
  __new_finish = __new_start;
  _3 = std::forward<gimple* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.183971._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.183971;
  _8 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<gimple*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.183971;
  _12 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<gimple*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.183971;
  _23 = this->D.183971._M_impl.D.183327._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_22, __old_start, _26);
  this->D.183971._M_impl.D.183327._M_start = __new_start;
  this->D.183971._M_impl.D.183327._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.183971._M_impl.D.183327._M_end_of_storage = _28;
  return;

}



;; Function std::vector<gimple*>::_M_check_len (_ZNKSt6vectorIP6gimpleSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9539, decl_uid=183820, cgraph_uid=6171, symbol_order=6957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<gimple*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1383;
  size_type D.253853;
  const long unsigned int D.235408;
  bool retval.1381;

  <bb 2> :
  _1 = std::vector<gimple*>::max_size (this);
  _2 = std::vector<gimple*>::size (this);
  _3 = _1 - _2;
  __n.1382_4 = __n;
  retval.1381 = _3 < __n.1382_4;
  if (retval.1381 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<gimple*>::size (this);
  _6 = std::vector<gimple*>::size (this);
  D.235408 = _6;
  _7 = std::max<long unsigned int> (&D.235408, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235408 = {CLOBBER};
  _9 = std::vector<gimple*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<gimple*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1383 = std::vector<gimple*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1383 = __len;

  <bb 8> :
  D.253853 = iftmp.1383;

  <bb 9> :
<L6>:
  return D.253853;

}



;; Function std::vector<gimple*>::max_size (_ZNKSt6vectorIP6gimpleSaIS1_EE8max_sizeEv, funcdef_no=10139, decl_uid=183606, cgraph_uid=6771, symbol_order=7561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::max_size (const struct vector * const this)
{
  size_type D.253860;

  <bb 2> :
  _1 = &this->D.183971;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.253860 = std::vector<gimple*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253860;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10599, decl_uid=183217, cgraph_uid=7231, symbol_order=8021)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.253862;

  <bb 2> :
  D.253862 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.253862;

}



;; Function std::vector<gimple*>::_S_max_size (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10598, decl_uid=183827, cgraph_uid=7230, symbol_order=8020)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253864;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<gimple*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253864 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253864;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::max_size (_ZNSt16allocator_traitsISaIP6gimpleEE8max_sizeERKS2_, funcdef_no=10808, decl_uid=181783, cgraph_uid=7440, symbol_order=8232)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<gimple*> >::max_size (const struct allocator_type & __a)
{
  size_type D.253867;

  <bb 2> :
  D.253867 = __gnu_cxx::new_allocator<gimple*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253867;

}



;; Function __gnu_cxx::new_allocator<gimple*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE8max_sizeEv, funcdef_no=10907, decl_uid=181625, cgraph_uid=7539, symbol_order=8331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::max_size (const struct new_allocator * const this)
{
  size_type D.253869;

  <bb 2> :
  D.253869 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253869;

}



;; Function __gnu_cxx::new_allocator<gimple*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE11_M_max_sizeEv, funcdef_no=10601, decl_uid=181644, cgraph_uid=7232, symbol_order=8022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.253871;

  <bb 2> :
  D.253871 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.253871;

}



;; Function std::vector<gimple*>::begin (_ZNSt6vectorIP6gimpleSaIS1_EE5beginEv, funcdef_no=9540, decl_uid=183580, cgraph_uid=6172, symbol_order=6958)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::begin (struct vector * const this)
{
  struct iterator D.235410;
  struct iterator D.253873;

  <bb 2> :
  _1 = &this->D.183971._M_impl.D.183327._M_start;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.235410, _1);
  D.253873 = D.235410;
  D.235410 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253873;

}



;; Function __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (_ZN9__gnu_cxxmiIPP6gimpleSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9541, decl_uid=226724, cgraph_uid=6173, symbol_order=6959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253876;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253876 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.253876;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE11_M_allocateEm, funcdef_no=9542, decl_uid=183331, cgraph_uid=6174, symbol_order=6960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct gimple * * D.253884;
  struct gimple * * iftmp.1384;
  struct gimple * * D.253878;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.253884 = std::allocator_traits<std::allocator<gimple*> >::allocate (_1, __n);
  iftmp.1384 = D.253884;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1384 = 0B;

  <bb 5> :
  D.253878 = iftmp.1384;

  <bb 6> :
<L3>:
  return D.253878;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::allocate (_ZNSt16allocator_traitsISaIP6gimpleEE8allocateERS2_m, funcdef_no=10140, decl_uid=181763, cgraph_uid=6772, symbol_order=7562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * std::allocator_traits<std::allocator<gimple*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * D.253887;
  struct gimple * * D.253885;

  <bb 2> :
  D.253887 = __gnu_cxx::new_allocator<gimple*>::allocate (__a, __n, 0B);
  D.253885 = D.253887;

  <bb 3> :
<L0>:
  return D.253885;

}



;; Function __gnu_cxx::new_allocator<gimple*>::allocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE8allocateEmPKv, funcdef_no=10600, decl_uid=181617, cgraph_uid=7233, symbol_order=8023)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * __gnu_cxx::new_allocator<gimple*>::allocate (struct new_allocator * const this, size_type __n, const void * D.243589)
{
  struct gimple * * D.253898;
  struct gimple * * D.253897;
  align_val_t __al;
  struct gimple * * D.253895;
  bool retval.1385;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1385 = _4 != 0;
  if (retval.1385 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.253898 = operator new (_6);
  D.253895 = D.253898;

  <bb 7> :
<L6>:
  return D.253895;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9545, decl_uid=183215, cgraph_uid=6177, symbol_order=6963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.253899;

  <bb 2> :
  D.253899 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.253899;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9544, decl_uid=214351, cgraph_uid=6176, symbol_order=6962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * const & __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (const struct __normal_iterator * const this)
{
  struct gimple * * const & D.253901;

  <bb 2> :
  D.253901 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253901;

}



;; Function std::vector<gimple*>::_S_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9543, decl_uid=183479, cgraph_uid=6175, symbol_order=6961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253904;
  struct gimple * * D.253903;

  <bb 2> :
  D.253903 = std::vector<gimple*>::_S_do_relocate (__first, __last, __result, __alloc, D.253904);

  <bb 3> :
<L0>:
  return D.253903;

}



;; Function std::vector<gimple*>::_S_do_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10141, decl_uid=183467, cgraph_uid=6773, symbol_order=7563)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_do_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240372)
{
  struct gimple * * D.253906;

  <bb 2> :
  D.253906 = std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253906;

}



;; Function std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (_ZSt12__relocate_aIPP6gimpleS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10602, decl_uid=226889, cgraph_uid=7234, symbol_order=8024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & __alloc)
{
  struct gimple * * D.253908;

  <bb 2> :
  _1 = std::__niter_base<gimple**> (__result);
  _2 = std::__niter_base<gimple**> (__last);
  _3 = std::__niter_base<gimple**> (__first);
  D.253908 = std::__relocate_a_1<gimple*, gimple*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253908;

}



;; Function std::__niter_base<gimple**> (_ZSt12__niter_baseIPP6gimpleET_S3_, funcdef_no=10809, decl_uid=226895, cgraph_uid=7441, symbol_order=8233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__niter_base<gimple**> (struct gimple * * __it)
{
  struct gimple * * D.253910;

  <bb 2> :
  D.253910 = __it;

  <bb 3> :
<L0>:
  return D.253910;

}



;; Function std::__relocate_a_1<gimple*, gimple*> (_ZSt14__relocate_a_1IP6gimpleS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10810, decl_uid=227063, cgraph_uid=7442, symbol_order=8234)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct gimple * * std::__relocate_a_1<gimple*, gimple*> (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & D.244617)
{
  ptrdiff_t __count;
  struct gimple * * D.253915;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1386_2 = (long unsigned int) __count;
  _3 = __count.1386_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1387_4 = (long unsigned int) __count;
  _5 = __count.1387_4 * 8;
  D.253915 = __result + _5;

  <bb 5> :
<L3>:
  return D.253915;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8353, decl_uid=183334, cgraph_uid=4985, symbol_order=5771)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (struct _Vector_base * const this, struct gimple * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::deallocate (_ZNSt16allocator_traitsISaIP6gimpleEE10deallocateERS2_PS1_m, funcdef_no=9152, decl_uid=181770, cgraph_uid=5784, symbol_order=6570)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::deallocate (struct allocator_type & __a, struct gimple * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE10deallocateEPS2_m, funcdef_no=9875, decl_uid=181621, cgraph_uid=6507, symbol_order=7297)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::deallocate (struct new_allocator * const this, struct gimple * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack3 (_Z16check_stmtStack3P9tree_node, funcdef_no=6422, decl_uid=186960, cgraph_uid=3398, symbol_order=4171)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack3 (union tree_node * target)
{
  int o;
  int D.253926;
  bool retval.1388;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  retval.1388 = target == _6;
  if (retval.1388 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253926 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.253926 = 0;

  <bb 8> :
<L5>:
  return D.253926;

}



;; Function check_stmtStack4 (_Z16check_stmtStack4P6gimple, funcdef_no=6423, decl_uid=186958, cgraph_uid=3399, symbol_order=4172)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack4 (struct gimple * stmt)
{
  int o;
  int D.253931;
  bool retval.1389;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  retval.1389 = stmt == _6;
  if (retval.1389 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253931 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.253931 = 0;

  <bb 8> :
<L5>:
  return D.253931;

}



;; Function Checknew_search_imm_use_lhs (_Z27Checknew_search_imm_use_lhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6424, decl_uid=186956, cgraph_uid=3400, symbol_order=4173)

Removing basic block 10
Removing basic block 11
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 10 }
;; 3 succs { 4 10 }
;; 4 succs { 5 6 }
;; 5 succs { 10 }
;; 6 succs { 7 8 }
;; 7 succs { 10 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
void Checknew_search_imm_use_lhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.253956;
  union tree_node * D.253955;
  union tree_node * D.253954;
  union tree_node * D.253953;
  union tree_node * D.253952;
  struct gimple * def_stmt;
  bool retval.1393;
  bool retval.1392;
  bool retval.1391;
  bool retval.1390;

  <bb 2> :
  D.253952 = gimple_assign_lhs (use_stmt);
  _1 = D.253952;
  def_stmt = _1->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  D.253953 = gimple_assign_lhs (def_stmt);
  _2 = D.253953;
  retval.1390 = _2 != 0B;
  if (retval.1390 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 4> :
  D.253954 = gimple_assign_lhs (def_stmt);
  _3 = D.253954;
  _4 = _3->base.code;
  retval.1391 = _4 == 49;
  if (retval.1391 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 10>; [INV]

  <bb 6> :
  D.253955 = gimple_assign_lhs (def_stmt);
  _5 = D.253955;
  _6 = _5->base.code;
  retval.1392 = _6 == 47;
  if (retval.1392 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 10>; [INV]

  <bb 8> :
  D.253956 = gimple_assign_lhs (def_stmt);
  _7 = D.253956;
  _8 = _7->base.code;
  retval.1393 = _8 == 165;
  if (retval.1393 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);

  <bb 10> :
  return;

}



;; Function Checknew_search_imm_use_rhs (_Z27Checknew_search_imm_use_rhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6425, decl_uid=186951, cgraph_uid=3401, symbol_order=4174)

Removing basic block 12
Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 12 }
;; 3 succs { 4 12 }
;; 4 succs { 5 6 }
;; 5 succs { 12 }
;; 6 succs { 7 8 }
;; 7 succs { 12 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
void Checknew_search_imm_use_rhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.253983;
  union tree_node * D.253982;
  union tree_node * D.253981;
  union tree_node * D.253980;
  union tree_node * D.253979;
  struct gimple * def_stmt;
  bool retval.1397;
  bool retval.1396;
  bool retval.1395;
  bool retval.1394;

  <bb 2> :
  D.253979 = gimple_assign_rhs1 (use_stmt);
  _1 = D.253979;
  def_stmt = _1->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  D.253980 = gimple_assign_rhs1 (def_stmt);
  _2 = D.253980;
  retval.1394 = _2 != 0B;
  if (retval.1394 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 4> :
  D.253981 = gimple_assign_rhs1 (def_stmt);
  _3 = D.253981;
  _4 = _3->base.code;
  retval.1395 = _4 == 49;
  if (retval.1395 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 12>; [INV]

  <bb 6> :
  D.253982 = gimple_assign_rhs1 (def_stmt);
  _5 = D.253982;
  _6 = _5->base.code;
  retval.1396 = _6 == 47;
  if (retval.1396 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 12>; [INV]

  <bb 8> :
  D.253983 = gimple_assign_rhs1 (def_stmt);
  _7 = D.253983;
  _8 = _7->base.code;
  retval.1397 = _8 == 165;
  if (retval.1397 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 12>; [INV]

  <bb 10> :
  _9 = target->base.code;
  if (_9 == 36)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 12> :
  return;

}



;; Function prechecktree (_Z12prechecktreeP9tree_node, funcdef_no=6426, decl_uid=186940, cgraph_uid=3402, symbol_order=4176)

Removing basic block 7
Removing basic block 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
union tree_node * prechecktree (union tree_node * tree)
{
  union tree_node * D.253992;

  <bb 2> :
  if (tree != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _1 = tree->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _2 = tree->exp.operands[0];
  gettree = _2;
  gettree.1398_3 = gettree;
  if (gettree.1398_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  gettree.1399_4 = gettree;
  _5 = gettree.1399_4->base.code;
  if (_5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.253992 = gettree;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  D.253992 = tree;

  <bb 8> :
<L10>:
  return D.253992;

}



;; Function check_bbinfo (_Z12check_bbinfoP11cgraph_nodeP15basic_block_def, funcdef_no=6427, decl_uid=186946, cgraph_uid=3403, symbol_order=4177)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 21 17 20 18 19 15 16 14 13 9 12 10 11 7 8 6 5
;; 2 succs { 3 28 }
;; 3 succs { 23 }
;; 4 succs { 5 22 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 13 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 21 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 4 24 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 1 }
void check_bbinfo (struct cgraph_node * m, struct basic_block_def * bb)
{
  bool D.254037;
  bool D.254036;
  struct function * D.254035;
  struct symbolicinfo * D.254034;
  struct symbolicinfo * D.254033;
  struct symbolicinfo * symbolicinfotmp;
  int o;
  int find_path_constraint;
  bool retval.1411;
  bool retval.1410;
  bool iftmp.1409;
  bool retval.1408;
  bool retval.1407;
  bool iftmp.1406;
  bool retval.1405;
  bool retval.1402;

  <bb 2> :
  pathconstraint.1400_1 = pathconstraint;
  if (pathconstraint.1400_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 3> :
  find_path_constraint = 0;
  stderr.1401_2 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1401_2);
  o = 0;
  goto <bb 23>; [INV]

  <bb 4> :
  syminfo.1403_3 = syminfo;
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _4);
  D.254033 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1403_3, _5);
  _6 = D.254033;
  retval.1402 = _6 != 0B;
  if (retval.1402 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 5> :
  syminfo.1404_7 = syminfo;
  _8 = (long unsigned int) o;
  _9 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _8);
  D.254034 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1404_7, _9);
  symbolicinfotmp = D.254034;
  _10 = symbolicinfotmp->node;
  D.254035 = cgraph_node::get_fun (_10);
  _11 = D.254035;
  push_cfun (_11);
  calculate_dominance_info (1);
  _12 = symbolicinfotmp->cond_truebranch;
  if (bb == _12)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _13 = symbolicinfotmp->cond_truebranch;
  D.254036 = dominated_by_p (1, bb, _13);
  _14 = D.254036;
  if (_14 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1406 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1406 = 0;

  <bb 9> :
  retval.1405 = iftmp.1406;
  if (retval.1405 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  _15 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_15);
  retval.1407 = 1;
  if (retval.1407 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _16 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_16);

  <bb 12> :
  _17 = symbolicinfotmp->cond_stmt;
  _18 = gimple_location_safe (_17);
  warning_at (_18, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 13> :
  _19 = symbolicinfotmp->cond_falsebranch;
  if (bb == _19)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _20 = symbolicinfotmp->cond_falsebranch;
  D.254037 = dominated_by_p (1, bb, _20);
  _21 = D.254037;
  if (_21 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1409 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1409 = 0;

  <bb 17> :
  retval.1408 = iftmp.1409;
  if (retval.1408 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _22 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_22);
  retval.1410 = 1;
  if (retval.1410 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _23 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_23);

  <bb 20> :
  _24 = symbolicinfotmp->cond_stmt;
  _25 = gimple_location_safe (_24);
  warning_at (_25, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  o = o + 1;

  <bb 23> :
  _26 = (long unsigned int) o;
  _27 = std::vector<basic_block_def*>::size (&symbolicExecution);
  retval.1411 = _26 < _27;
  if (retval.1411 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find_path_constraint == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  stderr.1412_28 = stderr;
  __builtin_fwrite ("=======================NO find Path Constaint===========================\n\n", 1, 74, stderr.1412_28);
  goto <bb 27>; [INV]

  <bb 26> :
  stderr.1413_29 = stderr;
  fprintf (stderr.1413_29, "=======================Path Constaint=====%d======================\n\n", find_path_constraint);

  <bb 27> :
  stderr.1414_30 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1414_30);

  <bb 28> :
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::get (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7771, decl_uid=196508, cgraph_uid=4403, symbol_order=5185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfo * hash_map<basic_block_def*, symbolicinfo>::get (struct hash_map * const this, struct basic_block_def * const & k)
{
  bool D.254046;
  struct hash_entry & D.254045;
  unsigned int D.254044;
  struct hash_entry & e;
  struct symbolicinfo * iftmp.1415;
  struct symbolicinfo * D.254038;

  <bb 2> :
  _1 = &this->m_table;
  D.254044 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.254044;
  D.254045 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.254045;
  D.254046 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  _3 = D.254046;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1415 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1415 = &e->m_value;

  <bb 5> :
  D.254038 = iftmp.1415;

  <bb 6> :
<L3>:
  return D.254038;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE4hashERKS2_, funcdef_no=8718, decl_uid=196464, cgraph_uid=5350, symbol_order=6136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (struct basic_block_def * const & h)
{
  hashval_t D.254047;

  <bb 2> :
  D.254047 = pointer_hash<basic_block_def>::hash (h);

  <bb 3> :
<L0>:
  return D.254047;

}



;; Function pointer_hash<basic_block_def>::hash (_ZN12pointer_hashI15basic_block_defE4hashERKPS0_, funcdef_no=9547, decl_uid=196421, cgraph_uid=6179, symbol_order=6965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<basic_block_def>::hash (struct basic_block_def * const & candidate)
{
  hashval_t D.254049;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.254049 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.254049;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8719, decl_uid=196651, cgraph_uid=5351, symbol_order=6137)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash)
{
  bool D.254083;
  bool D.254082;
  bool D.254081;
  bool D.254080;
  bool D.254079;
  bool D.254078;
  struct value_type * D.254077;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.1419;
  bool retval.1418;
  struct value_type & D.254063;
  bool iftmp.1417;
  bool retval.1416;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 168;
  entry = _5 + _7;
  D.254078 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.254078;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.254079 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.254079;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.254080 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _11 = D.254080;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1417 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1417 = 0;

  <bb 8> :
  retval.1416 = iftmp.1417;
  if (retval.1416 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.254063 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  entry = _17 + _19;
  D.254081 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.254081;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.254082 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.254082;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.254083 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _23 = D.254083;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1419 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1419 = 0;

  <bb 18> :
  retval.1418 = iftmp.1419;
  if (retval.1418 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.254063 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.254063;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8893, decl_uid=196747, cgraph_uid=5525, symbol_order=6311)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.254086;
  bool D.254084;

  <bb 2> :
  D.254086 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (v);
  D.254084 = D.254086;

  <bb 3> :
<L0>:
  return D.254084;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8776, decl_uid=196577, cgraph_uid=5408, symbol_order=6194)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.254089;
  bool D.254087;

  <bb 2> :
  D.254089 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.254087 = D.254089;

  <bb 3> :
<L0>:
  return D.254087;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8894, decl_uid=196745, cgraph_uid=5526, symbol_order=6312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.254092;
  bool D.254090;

  <bb 2> :
  D.254092 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (v);
  D.254090 = D.254092;

  <bb 3> :
<L0>:
  return D.254090;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9726, decl_uid=196572, cgraph_uid=6358, symbol_order=7144)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.254095;
  bool D.254093;

  <bb 2> :
  D.254095 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.254093 = D.254095;

  <bb 3> :
<L0>:
  return D.254093;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10286, decl_uid=237298, cgraph_uid=6918, symbol_order=7708)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.254096;

  <bb 2> :
  _1 = entry->m_key;
  D.254096 = pointer_hash<basic_block_def>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.254096;

}



;; Function pointer_hash<basic_block_def>::is_deleted (_ZN12pointer_hashI15basic_block_defE10is_deletedEPS0_, funcdef_no=10701, decl_uid=196431, cgraph_uid=7333, symbol_order=8123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_deleted (struct basic_block_def * e)
{
  bool D.254098;

  <bb 2> :
  D.254098 = e == 1B;

  <bb 3> :
<L0>:
  return D.254098;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9549, decl_uid=196565, cgraph_uid=6181, symbol_order=6967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (const struct hash_entry & a, struct basic_block_def * const & b)
{
  bool D.254102;
  bool D.254100;

  <bb 2> :
  _1 = &a->m_key;
  D.254102 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_1, b);
  D.254100 = D.254102;

  <bb 3> :
<L0>:
  return D.254100;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10equal_keysERKS2_S7_, funcdef_no=10145, decl_uid=196466, cgraph_uid=6777, symbol_order=7567)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (struct basic_block_def * const & k1, struct basic_block_def * const & k2)
{
  bool D.254103;

  <bb 2> :
  D.254103 = pointer_hash<basic_block_def>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.254103;

}



;; Function pointer_hash<basic_block_def>::equal (_ZN12pointer_hashI15basic_block_defE5equalERKPS0_S4_, funcdef_no=10609, decl_uid=196423, cgraph_uid=7241, symbol_order=8031)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::equal (struct basic_block_def * const & existing, struct basic_block_def * const & candidate)
{
  bool D.254105;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.254105 = _1 == _2;

  <bb 3> :
<L0>:
  return D.254105;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8720, decl_uid=214390, cgraph_uid=5352, symbol_order=6138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.254107;

  <bb 2> :
  _1 = entry->m_key;
  D.254107 = pointer_hash<basic_block_def>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.254107;

}



;; Function pointer_hash<basic_block_def>::is_empty (_ZN12pointer_hashI15basic_block_defE8is_emptyEPS0_, funcdef_no=9550, decl_uid=196433, cgraph_uid=6182, symbol_order=6968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_empty (struct basic_block_def * e)
{
  bool D.254109;

  <bb 2> :
  D.254109 = e == 0B;

  <bb 3> :
<L0>:
  return D.254109;

}



;; Function gimple_location_safe (_ZL20gimple_location_safePK6gimple, funcdef_no=2004, decl_uid=92286, cgraph_uid=1141, symbol_order=1301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
location_t gimple_location_safe (const struct gimple * g)
{
  location_t iftmp.1420;
  location_t D.254111;

  <bb 2> :
  if (g != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1420 = gimple_location (g);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1420 = 0;

  <bb 5> :
  D.254111 = iftmp.1420;

  <bb 6> :
<L3>:
  return D.254111;

}



;; Function checkPointerConstraint (_Z22checkPointerConstraintP9tree_nodeP3ptbP12gimple_arrayS0_i, funcdef_no=6785, decl_uid=186980, cgraph_uid=3423, symbol_order=4197)

Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Removing basic block 69
Removing basic block 70
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 87
Removing basic block 88
Removing basic block 89
Removing basic block 110
Removing basic block 116
Removing basic block 139
Removing basic block 148
Removing basic block 174
Removing basic block 175
Removing basic block 176
Removing basic block 188
Removing basic block 189
Removing basic block 199
Removing basic block 206
Removing basic block 207
Removing basic block 220
Removing basic block 221
Removing basic block 237
Removing basic block 238
Removing basic block 239
Removing basic block 240
Removing basic block 241
Removing basic block 242
Removing basic block 249
Removing basic block 285
Removing basic block 286
Removing basic block 291
Removing basic block 292
Removing basic block 293
Removing basic block 299
Removing basic block 336
Removing basic block 345
Removing basic block 360
Removing basic block 363
Removing basic block 366
Removing basic block 373
Removing basic block 379
Removing basic block 385
Removing basic block 394
Removing basic block 396
Removing basic block 397
Removing basic block 400
Removing basic block 414
Removing basic block 433
Removing basic block 434
Removing basic block 454
Removing basic block 470
Removing basic block 473
Removing basic block 482
Removing basic block 485
Removing basic block 486
Removing basic block 487
Removing basic block 497
Removing basic block 498
Removing basic block 513
Removing basic block 514
Removing basic block 522
Removing basic block 526
Removing basic block 527
Removing basic block 532
Removing basic block 542
Removing basic block 550
Removing basic block 551
Removing basic block 553
Removing basic block 554
Removing basic block 555
Removing basic block 577
Removing basic block 578
Removing basic block 595
Removing basic block 601
Removing basic block 602
Removing basic block 623
Removing basic block 625
Removing basic block 651
Removing basic block 660
Removing basic block 661
Removing basic block 682
Removing basic block 690
Removing basic block 701
Removing basic block 702
Removing basic block 712
Removing basic block 715
Removing basic block 716
Removing basic block 717
Removing basic block 725
Removing basic block 736
Removing basic block 740
Removing basic block 744
Removing basic block 754
Removing basic block 757
Removing basic block 759
Removing basic block 765
Removing basic block 770
Removing basic block 773
Removing basic block 778
Removing basic block 779
Removing basic block 784
Removing basic block 792
Removing basic block 794
Removing basic block 803
Removing basic block 809
Removing basic block 812
Removing basic block 818
Removing basic block 819
Removing basic block 824
Merging blocks 825 and 827
Merging blocks 826 and 830
Removing basic block 828
;; 16 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 717, latch 716
;;  depth 1, outer 0
;;  nodes: 717 716 714 715 713 712 711 708 39 707 669 677 685 706 663 673 670 664 660 659 650 658 656 657 654 655 653 652 651 647 648 649 635 646 643 640 639 638 637 636 642 641 645 644 633 634 91 90 78 89 87 88 85 84 83 82 81 80 79 86 77 40 65 41 64 69 75 67 63 76 66 58 57 42 48 47 51 53 49 56 55 54 52 50 44 46 45 43 62 61 60 59 74 73 72 71 70 68 36 35 34 33 32 31 30 576 632 631 579 630 583 629 627 628 626 625 584 624 587 595 623 589 598 597 596 590 594 593 592 591 588 621 622 620 619 618 617 616 615 614 613 609 612 611 610 608 607 606 605 604 603 601 602 600 599 586 585 581 582 580 578 577 543 550 549 554 575 574 558 573 560 572 571 570 569 567 568 565 561 564 563 562 566 559 557 556 555 553 552 551 548 547 546 545 544 523 542 524 526 541 530 540 539 538 537 536 535 534 533 532 531 529 528 527 525 521 522 487 488 486 108 485 483 484 482 480 481 209 371 370 369 368 367 366 365 364 363 362 360 349 359 357 358 356 355 354 353 352 351 350 347 348 339 346 341 345 344 343 342 340 338 255 337 262 261 260 256 259 258 257 327 336 306 305 304 299 303 302 301 300 298 297 296 280 295 294 293 292 291 290 289 288 287 285 286 282 284 283 281 279 278 277 276 275 274 273 272 271 270 269 268 267 266 265 264 263 335 334 333 328 332 331 330 329 322 326 325 324 323 309 308 307 320 321 314 319 317 318 316 315 313 312 311 310 211 210 183 197 184 187 194 193 200 189 185 188 199 198 192 191 190 186 196 195 177 182 179 178 181 180 109 176 175 113 174 173 172 115 171 170 169 116 168 128 167 134 139 137 138 136 135 132 133 129 131 130 166 165 140 164 156 157 158 163 143 145 144 142 141 162 161 160 159 155 154 153 152 151 150 149 148 147 146 126 127 125 124 118 123 120 119 122 121 117 114 112 111 110 208 207 206 205 204 203 202 201 254 388 385 220 216 479 401 458 462 464 466 403 460 465 478 477 471 470 469 468 467 476 475 474 473 472 459 402 391 390 389 463 461 455 457 454 453 451 452 450 449 440 448 446 445 444 443 442 441 447 438 439 435 437 436 426 434 432 430 431 428 429 427 433 418 424 420 425 423 422 421 419 417 416 410 415 413 412 411 414 409 408 407 406 405 404 456 400 398 399 396 395 394 393 392 397 212 215 214 213 219 218 217 383 384 380 382 381 361 379 378 377 376 375 374 373 372 387 386 253 252 251 238 250 245 243 244 240 242 241 239 249 248 247 246 237 236 235 234 233 232 231 230 229 228 227 226 225 224 223 222 221 106 107 105 104 103 101 102 100 96 99 98 97 95 94 93 92 519 520 518 505 517 507 516 515 514 513 512 511 510 509 508 506 504 494 503 502 496 501 497 500 499 498 495 493 492 491 490 489 672 671 662 661 688 700 693 705 701 694 689 704 703 702 692 691 690 698 699 697 696 695 687 686 678 674 683 684 682 681 680 679 676 675 667 668 666 665 38 37 710 709
;;
;; Loop 9
;;  header 630, latch 629
;;  depth 2, outer 3
;;  nodes: 630 629 627 628 626 625 584 624 587 595 623 589 598 597 596 590 594 593 592 591 588 621 622 620 619 618 617 616 615 614 613 609 612 611 610 608 607 606 605 604 603 601 602 600 599 586 585
;;
;; Loop 10
;;  header 625, latch 624
;;  depth 3, outer 9
;;  nodes: 625 624 587 595 623 589 598 597 596 590 594 593 592 591 588 621 622 620 619 618 617 616 615 614 613 609 612 611 610 608 607 606 605 604 603 601 602 600 599 586 585
;;
;; Loop 8
;;  header 574, latch 573
;;  depth 2, outer 3
;;  nodes: 574 573 560 572 571 570 569 567 568 565 561 564 563 562 566 559
;;
;; Loop 7
;;  header 541, latch 540
;;  depth 2, outer 3
;;  nodes: 541 540 539 538 537 536 535 534 533 532 531
;;
;; Loop 6
;;  header 518, latch 517
;;  depth 2, outer 3
;;  nodes: 518 517 507 516 515 514 513 512 511 510 509 508 506
;;
;; Loop 5
;;  header 504, latch 503
;;  depth 2, outer 3
;;  nodes: 504 503 502 496 501 497 500 499 498 495
;;
;; Loop 11
;;  header 502, latch 501
;;  depth 3, outer 5
;;  nodes: 502 501 497 500 499 498
;;
;; Loop 4
;;  header 486, latch 485
;;  depth 2, outer 3
;;  nodes
;;
;; Loop 12
;;  header 175, latch 174
;;  depth 3, outer 4
;;  nodes: 175 174 173 172 115 171 170 169 116 168 128 167 134 139 137 138 136 135 132 133 129 131 130 166 165 140 164 156 157 158 163 143 145 144 142 141 162 161 160 159 155 154 153 152 151 150 149 148 147 146 126 127 125 124 118 123 120 119 122 121 117 114
;;
;; Loop 13
;;  header 172, latch 171
;;  depth 4, outer 12
;;  nodes: 172 171 170 169 116 168 128 167 134 139 137 138 136 135 132 133 129 131 130 166 165 140 164 156 157 158 163 143 145 144 142 141 162 161 160 159 155 154 153 152 151 150 149 148 147 146 126 127 125 124 118 123 120 119 122 121 117 173
;;
;; Loop 14
;;  header 169, latch 168
;;  depth 5, outer 13
;;  nodes: 169 168 128 167 134 139 137 138 136 135 132 133 129 131 130 166 165 140 164 156 157 158 163 143 145 144 142 141 162 161 160 159 155 154 153 152 151 150 149 148 147 146 126 127 125 124 118 123 120 119 122 121 117 170
;;
;; Loop 15
;;  header 165, latch 164
;;  depth 6, outer 14
;;  nodes: 165 164 156 157 158 163 143 145 144 142 141 166 162 161 160 159 155 154 153 152 151 150 149 148 147 146
;;
;; Loop 2
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 15 19 18 17 16
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 744 6 }
;; 6 succs { 744 7 }
;; 7 succs { 8 24 }
;; 8 succs { 9 24 }
;; 9 succs { 720 10 }
;; 10 succs { 720 11 }
;; 11 succs { 720 12 }
;; 12 succs { 720 13 }
;; 13 succs { 720 14 }
;; 14 succs { 21 }
;; 15 succs { 16 20 }
;; 16 succs { 719 17 }
;; 17 succs { 719 18 }
;; 18 succs { 719 19 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 15 22 }
;; 22 succs { 719 23 }
;; 23 succs { 24 }
;; 24 succs { 744 25 }
;; 25 succs { 744 26 }
;; 26 succs { 27 28 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 717 }
;; 30 succs { 743 31 }
;; 31 succs { 32 712 }
;; 32 succs { 33 712 }
;; 33 succs { 741 34 }
;; 34 succs { 741 35 }
;; 35 succs { 37 36 }
;; 36 succs { 37 40 }
;; 37 succs { 741 38 }
;; 38 succs { 741 39 }
;; 39 succs { 708 }
;; 40 succs { 41 77 }
;; 41 succs { 42 77 }
;; 42 succs { 43 57 }
;; 43 succs { 741 44 }
;; 44 succs { 45 47 }
;; 45 succs { 741 46 }
;; 46 succs { 47 }
;; 47 succs { 48 57 }
;; 48 succs { 49 57 }
;; 49 succs { 50 57 }
;; 50 succs { 741 51 }
;; 51 succs { 52 57 }
;; 52 succs { 741 53 }
;; 53 succs { 54 57 }
;; 54 succs { 741 55 }
;; 55 succs { 741 56 }
;; 56 succs { 57 }
;; 57 succs { 741 58 }
;; 58 succs { 59 77 }
;; 59 succs { 60 65 }
;; 60 succs { 741 61 }
;; 61 succs { 741 62 }
;; 62 succs { 741 63 }
;; 63 succs { 64 77 }
;; 64 succs { 741 77 }
;; 65 succs { 66 77 }
;; 66 succs { 67 77 }
;; 67 succs { 68 77 }
;; 68 succs { 741 69 }
;; 69 succs { 70 77 }
;; 70 succs { 741 71 }
;; 71 succs { 741 72 }
;; 72 succs { 741 73 }
;; 73 succs { 741 74 }
;; 74 succs { 741 75 }
;; 75 succs { 76 77 }
;; 76 succs { 741 77 }
;; 77 succs { 741 78 }
;; 78 succs { 79 90 }
;; 79 succs { 86 80 }
;; 80 succs { 86 81 }
;; 81 succs { 86 82 }
;; 82 succs { 86 83 }
;; 83 succs { 86 84 }
;; 84 succs { 86 85 }
;; 85 succs { 86 88 }
;; 86 succs { 741 87 }
;; 87 succs { 89 }
;; 88 succs { 741 89 }
;; 89 succs { 90 }
;; 90 succs { 741 91 }
;; 91 succs { 92 634 }
;; 92 succs { 739 93 }
;; 93 succs { 722 94 }
;; 94 succs { 737 95 }
;; 95 succs { 96 97 }
;; 96 succs { 737 100 }
;; 97 succs { 737 98 }
;; 98 succs { 737 99 }
;; 99 succs { 737 100 }
;; 100 succs { 101 102 }
;; 101 succs { 737 103 }
;; 102 succs { 737 103 }
;; 103 succs { 737 104 }
;; 104 succs { 105 522 }
;; 105 succs { 106 107 }
;; 106 succs { 108 }
;; 107 succs { 108 }
;; 108 succs { 486 }
;; 109 succs { 110 177 }
;; 110 succs { 726 111 }
;; 111 succs { 726 112 }
;; 112 succs { 726 113 }
;; 113 succs { 175 }
;; 114 succs { 726 115 }
;; 115 succs { 172 }
;; 116 succs { 169 }
;; 117 succs { 724 118 }
;; 118 succs { 119 124 }
;; 119 succs { 724 120 }
;; 120 succs { 121 124 }
;; 121 succs { 724 122 }
;; 122 succs { 724 123 }
;; 123 succs { 124 }
;; 124 succs { 126 125 }
;; 125 succs { 126 127 }
;; 126 succs { 128 }
;; 127 succs { 128 }
;; 128 succs { 129 168 }
;; 129 succs { 130 132 }
;; 130 succs { 131 132 }
;; 131 succs { 132 }
;; 132 succs { 133 134 }
;; 133 succs { 134 }
;; 134 succs { 135 168 }
;; 135 succs { 137 136 }
;; 136 succs { 137 138 }
;; 137 succs { 139 }
;; 138 succs { 139 }
;; 139 succs { 140 168 }
;; 140 succs { 165 }
;; 141 succs { 142 157 }
;; 142 succs { 723 143 }
;; 143 succs { 144 164 }
;; 144 succs { 723 145 }
;; 145 succs { 146 164 }
;; 146 succs { 723 147 }
;; 147 succs { 723 148 }
;; 148 succs { 723 149 }
;; 149 succs { 723 150 }
;; 150 succs { 723 151 }
;; 151 succs { 723 152 }
;; 152 succs { 723 153 }
;; 153 succs { 723 154 }
;; 154 succs { 723 155 }
;; 155 succs { 723 156 }
;; 156 succs { 723 164 }
;; 157 succs { 158 164 }
;; 158 succs { 159 164 }
;; 159 succs { 723 160 }
;; 160 succs { 723 161 }
;; 161 succs { 723 162 }
;; 162 succs { 723 163 }
;; 163 succs { 164 }
;; 164 succs { 723 165 }
;; 165 succs { 723 166 }
;; 166 succs { 141 167 }
;; 167 succs { 168 }
;; 168 succs { 724 169 }
;; 169 succs { 724 170 }
;; 170 succs { 117 171 }
;; 171 succs { 172 }
;; 172 succs { 726 173 }
;; 173 succs { 116 174 }
;; 174 succs { 175 }
;; 175 succs { 114 176 }
;; 176 succs { 726 177 }
;; 177 succs { 178 183 }
;; 178 succs { 726 179 }
;; 179 succs { 180 183 }
;; 180 succs { 726 181 }
;; 181 succs { 726 182 }
;; 182 succs { 726 183 }
;; 183 succs { 184 210 }
;; 184 succs { 185 210 }
;; 185 succs { 186 210 }
;; 186 succs { 726 187 }
;; 187 succs { 188 210 }
;; 188 succs { 726 189 }
;; 189 succs { 190 210 }
;; 190 succs { 726 191 }
;; 191 succs { 726 192 }
;; 192 succs { 193 195 }
;; 193 succs { 194 210 }
;; 194 succs { 726 210 }
;; 195 succs { 726 196 }
;; 196 succs { 726 197 }
;; 197 succs { 198 210 }
;; 198 succs { 726 199 }
;; 199 succs { 726 200 }
;; 200 succs { 201 210 }
;; 201 succs { 726 202 }
;; 202 succs { 726 203 }
;; 203 succs { 726 204 }
;; 204 succs { 726 205 }
;; 205 succs { 726 206 }
;; 206 succs { 726 207 }
;; 207 succs { 726 208 }
;; 208 succs { 726 209 }
;; 209 succs { 481 }
;; 210 succs { 211 480 }
;; 211 succs { 212 255 }
;; 212 succs { 213 216 }
;; 213 succs { 726 214 }
;; 214 succs { 726 215 }
;; 215 succs { 726 216 }
;; 216 succs { 217 480 }
;; 217 succs { 726 218 }
;; 218 succs { 726 219 }
;; 219 succs { 726 220 }
;; 220 succs { 221 480 }
;; 221 succs { 726 222 }
;; 222 succs { 726 223 }
;; 223 succs { 726 224 }
;; 224 succs { 726 225 }
;; 225 succs { 726 226 }
;; 226 succs { 726 227 }
;; 227 succs { 726 228 }
;; 228 succs { 726 229 }
;; 229 succs { 726 230 }
;; 230 succs { 726 231 }
;; 231 succs { 726 232 }
;; 232 succs { 726 233 }
;; 233 succs { 726 234 }
;; 234 succs { 726 235 }
;; 235 succs { 726 236 }
;; 236 succs { 726 237 }
;; 237 succs { 726 238 }
;; 238 succs { 239 251 }
;; 239 succs { 726 240 }
;; 240 succs { 241 244 }
;; 241 succs { 726 242 }
;; 242 succs { 243 244 }
;; 243 succs { 245 }
;; 244 succs { 245 }
;; 245 succs { 246 251 }
;; 246 succs { 726 247 }
;; 247 succs { 726 248 }
;; 248 succs { 726 249 }
;; 249 succs { 726 250 }
;; 250 succs { 726 251 }
;; 251 succs { 726 252 }
;; 252 succs { 726 253 }
;; 253 succs { 726 254 }
;; 254 succs { 726 480 }
;; 255 succs { 256 338 }
;; 256 succs { 257 260 }
;; 257 succs { 726 258 }
;; 258 succs { 726 259 }
;; 259 succs { 726 260 }
;; 260 succs { 726 261 }
;; 261 succs { 726 262 }
;; 262 succs { 263 338 }
;; 263 succs { 725 264 }
;; 264 succs { 725 265 }
;; 265 succs { 725 266 }
;; 266 succs { 725 267 }
;; 267 succs { 725 268 }
;; 268 succs { 725 269 }
;; 269 succs { 725 270 }
;; 270 succs { 725 271 }
;; 271 succs { 725 272 }
;; 272 succs { 725 273 }
;; 273 succs { 725 274 }
;; 274 succs { 725 275 }
;; 275 succs { 725 276 }
;; 276 succs { 725 277 }
;; 277 succs { 725 278 }
;; 278 succs { 725 279 }
;; 279 succs { 725 280 }
;; 280 succs { 281 296 }
;; 281 succs { 725 282 }
;; 282 succs { 283 286 }
;; 283 succs { 725 284 }
;; 284 succs { 285 286 }
;; 285 succs { 287 }
;; 286 succs { 287 }
;; 287 succs { 288 295 }
;; 288 succs { 725 289 }
;; 289 succs { 725 290 }
;; 290 succs { 725 291 }
;; 291 succs { 725 292 }
;; 292 succs { 725 293 }
;; 293 succs { 725 294 }
;; 294 succs { 296 }
;; 295 succs { 296 }
;; 296 succs { 725 297 }
;; 297 succs { 725 298 }
;; 298 succs { 299 328 }
;; 299 succs { 300 304 }
;; 300 succs { 725 301 }
;; 301 succs { 725 302 }
;; 302 succs { 725 303 }
;; 303 succs { 725 304 }
;; 304 succs { 725 305 }
;; 305 succs { 725 306 }
;; 306 succs { 307 337 }
;; 307 succs { 310 308 }
;; 308 succs { 310 309 }
;; 309 succs { 310 323 }
;; 310 succs { 725 311 }
;; 311 succs { 725 312 }
;; 312 succs { 725 313 }
;; 313 succs { 725 314 }
;; 314 succs { 315 320 }
;; 315 succs { 725 316 }
;; 316 succs { 317 318 }
;; 317 succs { 725 319 }
;; 318 succs { 725 319 }
;; 319 succs { 725 320 }
;; 320 succs { 321 322 }
;; 321 succs { 725 322 }
;; 322 succs { 327 }
;; 323 succs { 725 324 }
;; 324 succs { 725 325 }
;; 325 succs { 725 326 }
;; 326 succs { 725 327 }
;; 327 succs { 337 }
;; 328 succs { 329 333 }
;; 329 succs { 725 330 }
;; 330 succs { 725 331 }
;; 331 succs { 725 332 }
;; 332 succs { 725 333 }
;; 333 succs { 725 334 }
;; 334 succs { 725 335 }
;; 335 succs { 725 336 }
;; 336 succs { 725 337 }
;; 337 succs { 338 }
;; 338 succs { 339 480 }
;; 339 succs { 340 347 }
;; 340 succs { 726 341 }
;; 341 succs { 342 347 }
;; 342 succs { 726 343 }
;; 343 succs { 726 344 }
;; 344 succs { 345 346 }
;; 345 succs { 726 347 }
;; 346 succs { 726 347 }
;; 347 succs { 348 349 }
;; 348 succs { 726 349 }
;; 349 succs { 350 360 }
;; 350 succs { 357 351 }
;; 351 succs { 357 352 }
;; 352 succs { 357 353 }
;; 353 succs { 357 354 }
;; 354 succs { 357 355 }
;; 355 succs { 357 356 }
;; 356 succs { 357 358 }
;; 357 succs { 359 }
;; 358 succs { 359 }
;; 359 succs { 360 }
;; 360 succs { 361 362 }
;; 361 succs { 726 380 }
;; 362 succs { 363 380 }
;; 363 succs { 364 380 }
;; 364 succs { 365 380 }
;; 365 succs { 726 366 }
;; 366 succs { 367 372 }
;; 367 succs { 726 368 }
;; 368 succs { 726 369 }
;; 369 succs { 726 370 }
;; 370 succs { 726 371 }
;; 371 succs { 481 }
;; 372 succs { 726 373 }
;; 373 succs { 726 374 }
;; 374 succs { 726 375 }
;; 375 succs { 726 376 }
;; 376 succs { 726 377 }
;; 377 succs { 726 378 }
;; 378 succs { 726 379 }
;; 379 succs { 726 380 }
;; 380 succs { 381 384 }
;; 381 succs { 383 382 }
;; 382 succs { 383 384 }
;; 383 succs { 385 }
;; 384 succs { 385 }
;; 385 succs { 386 480 }
;; 386 succs { 726 387 }
;; 387 succs { 726 388 }
;; 388 succs { 389 480 }
;; 389 succs { 392 390 }
;; 390 succs { 392 391 }
;; 391 succs { 392 402 }
;; 392 succs { 726 393 }
;; 393 succs { 726 394 }
;; 394 succs { 726 395 }
;; 395 succs { 726 396 }
;; 396 succs { 397 399 }
;; 397 succs { 726 398 }
;; 398 succs { 726 400 }
;; 399 succs { 726 400 }
;; 400 succs { 726 401 }
;; 401 succs { 479 }
;; 402 succs { 403 459 }
;; 403 succs { 404 479 }
;; 404 succs { 726 405 }
;; 405 succs { 726 406 }
;; 406 succs { 726 407 }
;; 407 succs { 726 408 }
;; 408 succs { 726 409 }
;; 409 succs { 726 410 }
;; 410 succs { 411 416 }
;; 411 succs { 412 414 }
;; 412 succs { 726 413 }
;; 413 succs { 726 416 }
;; 414 succs { 726 415 }
;; 415 succs { 726 416 }
;; 416 succs { 726 417 }
;; 417 succs { 726 418 }
;; 418 succs { 419 426 }
;; 419 succs { 726 420 }
;; 420 succs { 421 426 }
;; 421 succs { 726 422 }
;; 422 succs { 423 424 }
;; 423 succs { 726 426 }
;; 424 succs { 425 426 }
;; 425 succs { 726 426 }
;; 426 succs { 427 435 }
;; 427 succs { 726 428 }
;; 428 succs { 429 431 }
;; 429 succs { 430 431 }
;; 430 succs { 432 }
;; 431 succs { 432 }
;; 432 succs { 433 435 }
;; 433 succs { 726 434 }
;; 434 succs { 726 435 }
;; 435 succs { 436 439 }
;; 436 succs { 726 437 }
;; 437 succs { 438 439 }
;; 438 succs { 440 }
;; 439 succs { 440 }
;; 440 succs { 441 449 }
;; 441 succs { 726 442 }
;; 442 succs { 726 443 }
;; 443 succs { 726 444 }
;; 444 succs { 726 445 }
;; 445 succs { 726 446 }
;; 446 succs { 447 449 }
;; 447 succs { 726 448 }
;; 448 succs { 726 449 }
;; 449 succs { 450 456 }
;; 450 succs { 451 452 }
;; 451 succs { 453 }
;; 452 succs { 453 }
;; 453 succs { 726 454 }
;; 454 succs { 455 458 }
;; 455 succs { 458 }
;; 456 succs { 726 457 }
;; 457 succs { 458 }
;; 458 succs { 726 479 }
;; 459 succs { 460 463 }
;; 460 succs { 461 479 }
;; 461 succs { 726 462 }
;; 462 succs { 479 }
;; 463 succs { 726 464 }
;; 464 succs { 465 479 }
;; 465 succs { 479 466 }
;; 466 succs { 479 467 }
;; 467 succs { 479 468 }
;; 468 succs { 479 469 }
;; 469 succs { 479 470 }
;; 470 succs { 479 471 }
;; 471 succs { 479 472 }
;; 472 succs { 726 473 }
;; 473 succs { 726 474 }
;; 474 succs { 726 475 }
;; 475 succs { 726 476 }
;; 476 succs { 726 477 }
;; 477 succs { 478 479 }
;; 478 succs { 726 479 }
;; 479 succs { 480 }
;; 480 succs { 482 }
;; 481 succs { 482 }
;; 482 succs { 483 484 }
;; 483 succs { 485 }
;; 484 succs { 485 }
;; 485 succs { 486 }
;; 486 succs { 109 487 }
;; 487 succs { 488 523 }
;; 488 succs { 489 523 }
;; 489 succs { 728 490 }
;; 490 succs { 728 491 }
;; 491 succs { 728 492 }
;; 492 succs { 728 493 }
;; 493 succs { 727 494 }
;; 494 succs { 504 }
;; 495 succs { 728 496 }
;; 496 succs { 502 }
;; 497 succs { 498 501 }
;; 498 succs { 728 499 }
;; 499 succs { 500 501 }
;; 500 succs { 728 501 }
;; 501 succs { 502 }
;; 502 succs { 497 503 }
;; 503 succs { 504 }
;; 504 succs { 495 505 }
;; 505 succs { 518 }
;; 506 succs { 728 507 }
;; 507 succs { 508 517 }
;; 508 succs { 728 509 }
;; 509 succs { 728 510 }
;; 510 succs { 728 511 }
;; 511 succs { 728 512 }
;; 512 succs { 728 513 }
;; 513 succs { 728 514 }
;; 514 succs { 728 515 }
;; 515 succs { 728 516 }
;; 516 succs { 728 517 }
;; 517 succs { 518 }
;; 518 succs { 506 519 }
;; 519 succs { 520 521 }
;; 520 succs { 521 }
;; 521 succs { 523 }
;; 522 succs { 523 }
;; 523 succs { 524 543 }
;; 524 succs { 525 543 }
;; 525 succs { 729 526 }
;; 526 succs { 527 542 }
;; 527 succs { 729 528 }
;; 528 succs { 729 529 }
;; 529 succs { 729 530 }
;; 530 succs { 541 }
;; 531 succs { 729 532 }
;; 532 succs { 729 533 }
;; 533 succs { 729 534 }
;; 534 succs { 729 535 }
;; 535 succs { 729 536 }
;; 536 succs { 729 537 }
;; 537 succs { 729 538 }
;; 538 succs { 729 539 }
;; 539 succs { 729 540 }
;; 540 succs { 541 }
;; 541 succs { 531 542 }
;; 542 succs { 543 }
;; 543 succs { 544 576 }
;; 544 succs { 737 545 }
;; 545 succs { 737 546 }
;; 546 succs { 737 547 }
;; 547 succs { 737 548 }
;; 548 succs { 550 549 }
;; 549 succs { 550 576 }
;; 550 succs { 551 576 }
;; 551 succs { 737 552 }
;; 552 succs { 737 553 }
;; 553 succs { 737 554 }
;; 554 succs { 555 576 }
;; 555 succs { 735 556 }
;; 556 succs { 735 557 }
;; 557 succs { 734 558 }
;; 558 succs { 574 }
;; 559 succs { 733 560 }
;; 560 succs { 561 573 }
;; 561 succs { 562 565 }
;; 562 succs { 732 563 }
;; 563 succs { 732 564 }
;; 564 succs { 565 }
;; 565 succs { 566 568 }
;; 566 succs { 732 567 }
;; 567 succs { 732 569 }
;; 568 succs { 732 569 }
;; 569 succs { 732 570 }
;; 570 succs { 732 571 }
;; 571 succs { 732 572 }
;; 572 succs { 573 }
;; 573 succs { 574 }
;; 574 succs { 559 575 }
;; 575 succs { 576 }
;; 576 succs { 577 633 }
;; 577 succs { 736 578 }
;; 578 succs { 736 579 }
;; 579 succs { 580 631 }
;; 580 succs { 581 582 }
;; 581 succs { 583 }
;; 582 succs { 583 }
;; 583 succs { 630 }
;; 584 succs { 625 }
;; 585 succs { 736 586 }
;; 586 succs { 736 587 }
;; 587 succs { 588 624 }
;; 588 succs { 736 589 }
;; 589 succs { 590 624 }
;; 590 succs { 591 596 }
;; 591 succs { 736 592 }
;; 592 succs { 736 593 }
;; 593 succs { 736 594 }
;; 594 succs { 595 596 }
;; 595 succs { 624 }
;; 596 succs { 736 597 }
;; 597 succs { 736 598 }
;; 598 succs { 599 624 }
;; 599 succs { 736 600 }
;; 600 succs { 736 601 }
;; 601 succs { 602 603 }
;; 602 succs { 736 603 }
;; 603 succs { 736 604 }
;; 604 succs { 736 605 }
;; 605 succs { 736 606 }
;; 606 succs { 736 607 }
;; 607 succs { 736 608 }
;; 608 succs { 736 609 }
;; 609 succs { 610 613 }
;; 610 succs { 736 611 }
;; 611 succs { 612 613 }
;; 612 succs { 736 613 }
;; 613 succs { 736 614 }
;; 614 succs { 736 615 }
;; 615 succs { 736 616 }
;; 616 succs { 736 617 }
;; 617 succs { 736 618 }
;; 618 succs { 736 619 }
;; 619 succs { 736 620 }
;; 620 succs { 621 622 }
;; 621 succs { 736 623 }
;; 622 succs { 736 623 }
;; 623 succs { 736 624 }
;; 624 succs { 625 }
;; 625 succs { 585 626 }
;; 626 succs { 627 628 }
;; 627 succs { 629 }
;; 628 succs { 629 }
;; 629 succs { 630 }
;; 630 succs { 584 631 }
;; 631 succs { 736 632 }
;; 632 succs { 633 }
;; 633 succs { 635 }
;; 634 succs { 635 }
;; 635 succs { 636 647 }
;; 636 succs { 637 644 }
;; 637 succs { 638 641 }
;; 638 succs { 740 639 }
;; 639 succs { 740 640 }
;; 640 succs { 740 647 }
;; 641 succs { 740 642 }
;; 642 succs { 740 643 }
;; 643 succs { 740 647 }
;; 644 succs { 740 645 }
;; 645 succs { 740 646 }
;; 646 succs { 740 647 }
;; 647 succs { 648 650 }
;; 648 succs { 649 650 }
;; 649 succs { 650 }
;; 650 succs { 651 659 }
;; 651 succs { 740 652 }
;; 652 succs { 740 653 }
;; 653 succs { 740 654 }
;; 654 succs { 655 656 }
;; 655 succs { 740 656 }
;; 656 succs { 657 658 }
;; 657 succs { 740 658 }
;; 658 succs { 740 659 }
;; 659 succs { 660 674 }
;; 660 succs { 661 664 }
;; 661 succs { 740 662 }
;; 662 succs { 740 663 }
;; 663 succs { 740 707 }
;; 664 succs { 665 670 }
;; 665 succs { 740 666 }
;; 666 succs { 667 668 }
;; 667 succs { 740 669 }
;; 668 succs { 740 669 }
;; 669 succs { 740 707 }
;; 670 succs { 671 707 }
;; 671 succs { 740 672 }
;; 672 succs { 740 673 }
;; 673 succs { 740 707 }
;; 674 succs { 675 678 }
;; 675 succs { 740 676 }
;; 676 succs { 740 677 }
;; 677 succs { 740 707 }
;; 678 succs { 679 686 }
;; 679 succs { 740 680 }
;; 680 succs { 740 681 }
;; 681 succs { 740 682 }
;; 682 succs { 740 683 }
;; 683 succs { 684 685 }
;; 684 succs { 740 685 }
;; 685 succs { 740 707 }
;; 686 succs { 740 687 }
;; 687 succs { 740 688 }
;; 688 succs { 689 706 }
;; 689 succs { 690 694 }
;; 690 succs { 740 691 }
;; 691 succs { 740 692 }
;; 692 succs { 740 693 }
;; 693 succs { 740 706 }
;; 694 succs { 695 701 }
;; 695 succs { 740 696 }
;; 696 succs { 740 697 }
;; 697 succs { 698 699 }
;; 698 succs { 740 700 }
;; 699 succs { 740 700 }
;; 700 succs { 740 706 }
;; 701 succs { 702 706 }
;; 702 succs { 740 703 }
;; 703 succs { 740 704 }
;; 704 succs { 740 705 }
;; 705 succs { 740 706 }
;; 706 succs { 740 707 }
;; 707 succs { 708 }
;; 708 succs { 711 709 }
;; 709 succs { 710 }
;; 710 succs { 712 }
;; 711 succs { 713 }
;; 712 succs { 713 }
;; 713 succs { 714 715 }
;; 714 succs { 716 }
;; 715 succs { 716 }
;; 716 succs { 717 }
;; 717 succs { 30 718 }
;; 718 succs { 1 }
;; 719 succs { 720 }
;; 720 succs { 721 }
;; 721 succs { 744 }
;; 722 succs { 739 }
;; 723 succs { 724 }
;; 724 succs { 726 }
;; 725 succs { 726 }
;; 726 succs { 737 }
;; 727 succs { 728 }
;; 728 succs { 737 }
;; 729 succs { 730 }
;; 730 succs { 731 }
;; 731 succs { 737 }
;; 732 succs { 733 }
;; 733 succs { 734 }
;; 734 succs { 735 }
;; 735 succs { 737 }
;; 736 succs { 737 }
;; 737 succs { 738 }
;; 738 succs { 739 }
;; 739 succs { 740 }
;; 740 succs { 741 }
;; 741 succs { 742 }
;; 742 succs { 743 }
;; 743 succs { 744 }
;; 744 succs { }
void checkPointerConstraint (union tree_node * function_tree, struct ptb * ptable, struct gimple_array * user_tmp, union tree_node * checkTree, int calleetype)
{
  int finally_tmp.1800;
  bool D.254864;
  const char * D.254859;
  union tree_node * D.254858;
  struct value_type & D.254857;
  const char * D.254856;
  struct value_type & D.254855;
  struct value_type & D.254854;
  struct value_type & D.254853;
  struct value_type & D.254852;
  bool D.254851;
  struct value_type & D.254850;
  union tree_node * D.254849;
  union tree_node * D.254848;
  struct value_type & D.254847;
  struct value_type & D.254846;
  union tree_node * D.254845;
  struct value_type & D.254844;
  struct gimple_array * D.254843;
  const char * D.254838;
  union tree_node * D.254837;
  bool D.254836;
  struct function_free_array * D.254835;
  struct function_free_array * D.254834;
  const char * D.254830;
  struct function_relate_array * D.254829;
  struct function_relate_array * D.254828;
  const char * D.254826;
  int * D.254825;
  int * D.254824;
  void * D.254822;
  struct function_relate_array * D.254821;
  union tree_node * D.254817;
  union tree_node * D.254816;
  union tree_node * D.254815;
  union tree_node * D.254814;
  unsigned int D.254813;
  union tree_node * D.254812;
  unsigned int D.254811;
  union tree_node * D.254810;
  unsigned int D.254809;
  union tree_node * D.254808;
  union tree_node * D.254807;
  union tree_node * D.254806;
  unsigned int D.254805;
  const char * D.254804;
  union tree_node * D.254803;
  union tree_node * D.254802;
  const char * D.254801;
  union tree_node * D.254800;
  union tree_node * D.254799;
  const char * D.254797;
  union tree_node * D.254796;
  union tree_node * D.254795;
  const char * D.254794;
  union tree_node * D.254793;
  union tree_node * D.254792;
  union tree_node * D.254791;
  union tree_node * D.254790;
  const char * D.254789;
  const char * D.254788;
  const char * D.254787;
  union tree_node * D.254786;
  union tree_node * D.254785;
  union tree_node * D.254784;
  union tree_node * D.254783;
  const char * D.254782;
  const char * D.254781;
  const char * D.254780;
  union tree_node * D.254779;
  const char * D.254778;
  union tree_node * D.254777;
  union tree_node * D.254776;
  union tree_node * D.254775;
  union tree_node * D.254774;
  union tree_node * D.254773;
  bool D.254772;
  struct function * D.254771;
  bool D.254769;
  bool D.254767;
  bool D.254766;
  bool D.254765;
  const char * D.254764;
  union tree_node * D.254763;
  union tree_node * D.254762;
  union tree_node * D.254761;
  struct function * D.254760;
  struct function * D.254759;
  struct function_relate_array * D.254758;
  struct function_relate_array * D.254757;
  void * D.254755;
  struct gimple_array * D.254754;
  union tree_node * D.254753;
  const char * D.254752;
  union tree_node * D.254751;
  union tree_node * D.254750;
  const char * D.254749;
  const char * D.254748;
  union tree_node * D.254747;
  union tree_node * D.254746;
  const char * D.254745;
  struct function * D.254744;
  const char * D.254743;
  struct function_return_array * D.254739;
  const char * D.254738;
  const char * D.254737;
  int i;
  struct gimple_array start;
  struct free_type free_type;
  int k;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  long unsigned int x;
  int k;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  long unsigned int x;
  struct gimple * def_stmt;
  int max_bb;
  int max_bb;
  int j;
  int i;
  struct iterator it_i;
  struct hash_map * function_maxbasicblock_collect;
  int freecount;
  union tree_node * findtree;
  union tree_node * findtree;
  const char * name;
  struct gimple * def_stmt;
  struct gimple * use_stmt;
  struct relate_type relate_type;
  struct gimple * finalstmt;
  struct gimple * tmp;
  struct edge_iterator ei2;
  struct edge_def * e2;
  int check;
  struct edge_iterator ei;
  struct edge_def * e;
  struct basic_block_def * bb;
  int k;
  int succ_havereturn;
  struct free_type free_type;
  int lastbasicblock;
  struct function_relate_array maxbb_array;
  struct vector maxbb_type_array;
  struct gimple * laststmt;
  union tree_node * lastfucntion;
  struct hash_map * function_maxbb_collect;
  const char * name;
  const char * name;
  struct vector earlyend;
  struct gimple * def_stmt;
  const char * name;
  struct vector free_array;
  int init_check_table_stmt;
  int find_mallocstmt;
  int is_pthread_detched;
  int find_pthread_join;
  int find_pthread_detched;
  int find_retheapstmt;
  int find_freestmt;
  int find_phistmt;
  int childptable_type;
  int ptable_type;
  int find_Looserulesfreestmt;
  int k;
  int find_thread_count;
  int find_thread;
  struct vector funcalleeRetTypearray;
  struct function_return_array find_fun_array;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * user_tmp2;
  struct gimple_array * used_stmt2;
  struct gimple_array * used_stmt;
  struct gimple_array start2;
  struct gimple_array start;
  struct gimple * u_stmt2;
  struct gimple * u_stmt;
  union tree_node * iftmp.1799;
  bool retval.1776;
  struct gimple * iftmp.1722;
  bool retval.1721;
  bool retval.1714;
  bool retval.1711;
  bool retval.1710;
  bool retval.1709;
  bool retval.1708;
  bool retval.1707;
  struct gimple * iftmp.1706;
  bool retval.1702;
  bool retval.1698;
  bool retval.1697;
  bool retval.1694;
  bool retval.1687;
  bool retval.1678;
  struct hash_map * function_maxbb_collect.1674;
  struct iterator D.201554;
  bool retval.1673;
  bool retval.1666;
  bool retval.1665;
  bool retval.1664;
  bool retval.1663;
  bool retval.1662;
  void * D.201420;
  struct gimple * iftmp.1659;
  const char[16] * iftmp.1646;
  bool iftmp.1642;
  bool retval.1641;
  bool iftmp.1640;
  bool retval.1639;
  bool retval.1636;
  bool retval.1635;
  bool retval.1633;
  bool retval.1632;
  bool iftmp.1610;
  bool retval.1609;
  bool retval.1600;
  bool retval.1599;
  bool retval.1589;
  bool retval.1586;
  bool retval.1585;
  bool retval.1566;
  bool iftmp.1560;
  bool retval.1559;
  bool retval.1558;
  bool iftmp.1535;
  bool retval.1534;
  bool retval.1533;
  bool retval.1521;
  bool retval.1512;
  bool retval.1511;
  bool retval.1510;
  bool retval.1509;
  bool retval.1508;
  bool retval.1507;
  bool retval.1502;
  bool retval.1500;
  bool retval.1499;
  bool retval.1498;
  bool retval.1497;
  bool retval.1484;
  bool retval.1482;
  bool iftmp.1478;
  bool retval.1477;
  bool retval.1476;
  bool iftmp.1475;
  bool retval.1474;
  bool retval.1473;
  bool retval.1472;
  struct gimple * iftmp.1470;
  bool retval.1465;
  void * D.201298;
  bool retval.1453;
  bool retval.1452;
  bool retval.1445;
  bool retval.1444;
  bool retval.1443;
  bool retval.1438;
  union tree_node * iftmp.1437;
  bool retval.1433;
  bool retval.1430;
  bool retval.1421;

  <bb 2> :
  gimple_array::gimple_array (&start);
  gimple_array::gimple_array (&start2);
  start.stmt = 0B;
  start2.stmt = 0B;
  used_stmt = &start;
  used_stmt2 = &start;
  user_tmp2 = user_tmp;
  table_temp = ptable;
  goto <bb 4>; [INV]

  <bb 3> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 4> :
  _1 = std::vector<tree_node*>::size (&traceStack);
  retval.1421 = _1 != 0;
  if (retval.1421 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  function_tree.1422_2 = function_tree;
  D.254737 = get_name (function_tree.1422_2);

  <bb 6> :
  _3 = D.254737;
  stderr.1423_4 = stderr;
  fprintf (stderr.1423_4, "\x1b[40;42m =======pre_check_funciton:%s========= \x1b[0m\n", _3);

  <bb 7> :
  calleetype.1424_5 = (unsigned int) calleetype;
  FUNCITON_THREAD.1425_6 = FUNCITON_THREAD;
  if (calleetype.1424_5 == FUNCITON_THREAD.1425_6)
    goto <bb 8>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 8> :
  threadmod.1426_7 = threadmod;
  _8 = (int) threadmod.1426_7;
  if (_8 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 9> :
  function_return_array::function_return_array (&find_fun_array);
  function_tree.1427_9 = function_tree;
  D.254738 = get_name (function_tree.1427_9);

  <bb 10> :
  _10 = D.254738;
  stderr.1428_11 = stderr;
  fprintf (stderr.1428_11, "\x1b[40;42m =======thread job funciton:%s========= \x1b[0m\n", _10);

  <bb 11> :
  function_return_collect.1429_12 = function_return_collect;
  D.254739 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1429_12, &function_tree);

  <bb 12> :
  _13 = D.254739;
  function_return_array::operator= (&find_fun_array, _13);

  <bb 13> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 14> :
  find_thread = 0;
  find_thread_count = 0;
  k = 0;
  goto <bb 21>; [INV]

  <bb 15> :
  _14 = (long unsigned int) k;
  _15 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _14);
  _16 = _15->return_type_stmt_num;
  _17 = (unsigned int) _16;
  FUNCITON_THREAD.1431_18 = FUNCITON_THREAD;
  retval.1430 = _17 == FUNCITON_THREAD.1431_18;
  if (retval.1430 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  _19 = (long unsigned int) k;
  _20 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _19);
  _21 = _20->return_type_stmt_num;
  stderr.1432_22 = stderr;
  fprintf (stderr.1432_22, "\x1b[40;44m ======= print pthread lock stmt %d ========  \x1b[0m\n", _21);

  <bb 17> :
  _23 = (long unsigned int) k;
  _24 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _23);
  _25 = _24->stmt;
  debug_gimple_stmt (_25);

  <bb 18> :
  _26 = (long unsigned int) k;
  _27 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _26);
  _28 = _27->stmt;
  _29 = gimple_location_safe (_28);
  warning_at (_29, 0, "use location");

  <bb 19> :
  find_thread_count = find_thread_count + 1;

  <bb 20> :
  k = k + 1;

  <bb 21> :
  _30 = (long unsigned int) k;
  _31 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.1433 = _30 < _31;
  if (retval.1433 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  stderr.1434_32 = stderr;
  fprintf (stderr.1434_32, "\x1b[40;42m =======thread job funciton lock count :%d========= \x1b[0m\n", find_thread_count);

  <bb 23> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 24> :
  function_tree.1435_33 = function_tree;
  D.254743 = get_name (function_tree.1435_33);

  <bb 25> :
  _34 = D.254743;
  stderr.1436_35 = stderr;
  fprintf (stderr.1436_35, "\x1b[40;42m =======start_check_funciton:%s========= \x1b[0m\n", _34);

  <bb 26> :
  if (table_temp != 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  iftmp.1437 = table_temp->target;
  goto <bb 29>; [INV]

  <bb 28> :
  iftmp.1437 = 0B;

  <bb 29> :
  t = iftmp.1437;
  goto <bb 717>; [INV]

  <bb 30> :
  find_Looserulesfreestmt = 0;
  ptable_type = 0;
  childptable_type = 0;
  find_phistmt = 0;
  find_freestmt = 0;
  find_retheapstmt = -2;
  find_pthread_detched = 0;
  find_pthread_join = 0;
  is_pthread_detched = 0;
  find_mallocstmt = 0;
  init_check_table_stmt = 0;
  _36 = table_temp->node;
  D.254744 = cgraph_node::get_fun (_36);

  <bb 31> :
  _37 = D.254744;
  _38 = _37->decl;
  function_tree.1439_39 = function_tree;
  retval.1438 = _38 == function_tree.1439_39;
  if (retval.1438 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 712>; [INV]

  <bb 32> :
  _40 = table_temp->target;
  if (_40 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 712>; [INV]

  <bb 33> :
  std::vector<free_type>::vector (&free_array);
  find_phistmt = 0;
  find_mallocstmt = find_phistmt;
  find_freestmt = find_mallocstmt;
  stderr.1440_41 = stderr;
  __builtin_fwrite ("\ndot graph START\n", 1, 17, stderr.1440_41);

  <bb 34> :
  stderr.1441_42 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1441_42);

  <bb 35> :
  name = "";
  _43 = table_temp->target;
  _44 = _43->base.code;
  if (_44 == 26)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _45 = table_temp->target;
  _46 = _45->base.code;
  if (_46 == 32)
    goto <bb 37>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 37> :
  stderr.1442_47 = stderr;
  __builtin_fwrite ("\n ================== collect possiable invalid ================== \n", 1, 67, stderr.1442_47);

  <bb 38> :
  _48 = table_temp->target;
  debug_tree (_48);

  <bb 39> :
  // predicted unlikely by continue predictor.
  finally_tmp.1800 = 0;
  goto <bb 708>; [INV]

  <bb 40> :
  _49 = table_temp->target;
  def_stmt = _49->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 41>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 41> :
  _50 = table_temp->target;
  _51 = _50->base.code;
  if (_51 != 36)
    goto <bb 42>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 42> :
  if (def_stmt != 0B)
    goto <bb 43>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 43> :
  _52 = table_temp->target;
  debug_tree (_52);

  <bb 44> :
  _53 = table_temp->target;
  _54 = _53->base.code;
  if (_54 == 33)
    goto <bb 45>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 45> :
  _55 = table_temp->target;
  D.254745 = get_name (_55);

  <bb 46> :
  name = D.254745;

  <bb 47> :
  _56 = table_temp->target;
  _57 = _56->base.code;
  if (_57 != 131)
    goto <bb 48>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 48> :
  _58 = table_temp->target;
  _59 = _58->base.code;
  if (_59 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 49> :
  _60 = gimple_code (def_stmt);
  retval.1443 = _60 != 0;
  if (retval.1443 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 50> :
  debug_gimple_stmt (def_stmt);

  <bb 51> :
  _61 = gimple_code (def_stmt);
  retval.1444 = _61 == 8;
  if (retval.1444 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 52> :
  D.254746 = gimple_call_fndecl (def_stmt);

  <bb 53> :
  _62 = D.254746;
  retval.1445 = _62 != 0B;
  if (retval.1445 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 54> :
  D.254747 = gimple_call_fndecl (def_stmt);

  <bb 55> :
  _63 = D.254747;
  D.254748 = get_name (_63);

  <bb 56> :
  name = D.254748;

  <bb 57> :
  stderr.1446_64 = stderr;
  __builtin_fwrite ("\n ================== trace ptable================== \n", 1, 53, stderr.1446_64);

  <bb 58> :
  if (def_stmt != 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 59> :
  _65 = table_temp->target;
  _66 = _65->base.code;
  if (_66 == 33)
    goto <bb 60>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 60> :
  _67 = table_temp->target;
  D.254749 = get_name (_67);

  <bb 61> :
  name = D.254749;
  stderr.1447_68 = stderr;
  fprintf (stderr.1447_68, "trace fucntion name:%s \n", name);

  <bb 62> :
  _69 = table_temp->target;
  RET_HEAP_OBJECT.1448_70 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1449_71 = (int) RET_HEAP_OBJECT.1448_70;
  _72 = table_temp->target;
  trace_function_path (_72, RET_HEAP_OBJECT.1449_71, _69, &find_retheapstmt);

  <bb 63> :
  find_retheapstmt.1450_73 = find_retheapstmt;
  if (find_retheapstmt.1450_73 > 0)
    goto <bb 64>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 64> :
  stderr.1451_74 = stderr;
  __builtin_fwrite ("some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n", 1, 86, stderr.1451_74);
  goto <bb 77>; [INV]

  <bb 65> :
  _75 = table_temp->target;
  _76 = _75->base.code;
  if (_76 != 131)
    goto <bb 66>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 66> :
  _77 = table_temp->target;
  _78 = _77->base.code;
  if (_78 != 38)
    goto <bb 67>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 67> :
  retval.1452 = is_gimple_call (def_stmt);
  if (retval.1452 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 68> :
  D.254750 = gimple_call_fn (def_stmt);

  <bb 69> :
  _79 = D.254750;
  retval.1453 = _79 != 0B;
  if (retval.1453 != 0)
    goto <bb 70>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 70> :
  D.254751 = gimple_call_fn (def_stmt);

  <bb 71> :
  _80 = D.254751;
  D.254752 = get_name (_80);

  <bb 72> :
  name = D.254752;
  stderr.1454_81 = stderr;
  fprintf (stderr.1454_81, "trace fucntion name:%s \n", name);

  <bb 73> :
  _82 = table_temp->target;
  RET_HEAP_OBJECT.1455_83 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1456_84 = (int) RET_HEAP_OBJECT.1455_83;
  D.254753 = gimple_call_fndecl (def_stmt);

  <bb 74> :
  _85 = D.254753;
  trace_function_path (_85, RET_HEAP_OBJECT.1456_84, _82, &find_retheapstmt);

  <bb 75> :
  find_retheapstmt.1457_86 = find_retheapstmt;
  if (find_retheapstmt.1457_86 > 0)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  stderr.1458_87 = stderr;
  __builtin_fwrite ("some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n", 1, 86, stderr.1458_87);

  <bb 77> :
  stderr.1459_88 = stderr;
  __builtin_fwrite ("\n ================== trace ptable ================== \n", 1, 54, stderr.1459_88);

  <bb 78> :
  if (name != 0B)
    goto <bb 79>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 79> :
  _89 = strcmp (name, "realloc");
  if (_89 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 80> :
  _90 = strcmp (name, "malloc");
  if (_90 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 81> :
  _91 = strcmp (name, "xmalloc");
  if (_91 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 82> :
  _92 = strcmp (name, "calloc");
  if (_92 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 83> :
  _93 = strcmp (name, "xcalloc");
  if (_93 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 84> :
  _94 = strcmp (name, "strdup");
  if (_94 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 85> :
  _95 = strcmp (name, "xstrdup");
  if (_95 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 86> :
  IS_MALLOC_FUCNTION.1460_96 = IS_MALLOC_FUCNTION;
  ptable_type = (int) IS_MALLOC_FUCNTION.1460_96;
  stderr.1461_97 = stderr;
  fprintf (stderr.1461_97, "this Reserved word function ------%s-----\n", name);

  <bb 87> :
  goto <bb 89>; [INV]

  <bb 88> :
  IS_OTHRER_FUCNTION.1462_98 = IS_OTHRER_FUCNTION;
  ptable_type = (int) IS_OTHRER_FUCNTION.1462_98;
  stderr.1463_99 = stderr;
  fprintf (stderr.1463_99, "this other function ------%s-----\n", name);

  <bb 89> :

  <bb 90> :
  treeGimpleArray.1464_100 = treeGimpleArray;
  _101 = &table_temp->target;
  D.254754 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1464_100, _101);

  <bb 91> :
  user_tmp = D.254754;
  std::vector<basic_block_def*>::vector (&earlyend);
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 92>; [INV]
  else
    goto <bb 634>; [INV]

  <bb 92> :
  D.254755 = operator new (48);

  <bb 93> :
  D.201298 = D.254755;
  hash_map<tree_node*, function_relate_array>::hash_map (D.201298, 13, 0, 1, 0);

  <bb 94> :
  function_maxbb_collect = D.201298;
  lastfucntion = 0B;
  laststmt = 0B;
  std::vector<relate_type>::vector (&maxbb_type_array);
  function_relate_array::function_relate_array (&maxbb_array);
  _102 = &table_temp->target;
  D.254757 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _102);

  <bb 95> :
  _103 = D.254757;
  retval.1465 = _103 == 0B;
  if (retval.1465 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 97>; [INV]

  <bb 96> :
  std::vector<relate_type>::operator= (&maxbb_array.relate_type_array, &maxbb_type_array);
  goto <bb 100>; [INV]

  <bb 97> :
  _104 = &table_temp->target;
  D.254758 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _104);

  <bb 98> :
  _105 = D.254758;
  function_relate_array::operator= (&maxbb_array, _105);

  <bb 99> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 100> :
  lastbasicblock = -1;
  _106 = table_temp->swap_type;
  _107 = (unsigned int) _106;
  FUNCITON_THREAD.1466_108 = FUNCITON_THREAD;
  if (_107 == FUNCITON_THREAD.1466_108)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  stderr.1467_109 = stderr;
  __builtin_fwrite (" \n Start is Pthread Job Collect  \n", 1, 34, stderr.1467_109);
  goto <bb 103>; [INV]

  <bb 102> :
  stderr.1468_110 = stderr;
  __builtin_fwrite (" \n Start check Pointer Collect  \n", 1, 33, stderr.1468_110);

  <bb 103> :
  stderr.1469_111 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1469_111);

  <bb 104> :
  _112 = user_tmp->size;
  if (_112 > 0)
    goto <bb 105>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 105> :
  if (user_tmp != 0B)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  iftmp.1470 = user_tmp->stmt;
  goto <bb 108>; [INV]

  <bb 107> :
  iftmp.1470 = 0B;

  <bb 108> :
  u_stmt = iftmp.1470;
  goto <bb 486>; [INV]

  <bb 109> :
  prebranchexit.1471_113 = prebranchexit;
  if (prebranchexit.1471_113 != 0)
    goto <bb 110>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 110> :
  _114 = table_temp->node;
  D.254759 = cgraph_node::get_fun (_114);

  <bb 111> :
  _115 = D.254759;
  push_cfun (_115);

  <bb 112> :
  calculate_dominance_info (1);

  <bb 113> :
  succ_havereturn = 0;
  k = 0;
  goto <bb 175>; [INV]

  <bb 114> :
  _116 = table_temp->node;
  D.254760 = cgraph_node::get_fun (_116);

  <bb 115> :
  _117 = D.254760;
  _118 = _117->cfg;
  _119 = _118->x_entry_block_ptr;
  bb = _119->next_bb;
  goto <bb 172>; [INV]

  <bb 116> :
  _120 = &bb->succs;
  ei = ei_start_1 (_120);
  goto <bb 169>; [INV]

  <bb 117> :
  name = "";
  _121 = (long unsigned int) k;
  _122 = std::vector<return_type>::operator[] (&global_ret_type_array, _121);
  _123 = _122->stmt;
  D.254761 = gimple_call_lhs (_123);

  <bb 118> :
  _124 = D.254761;
  retval.1472 = _124 == 0B;
  if (retval.1472 != 0)
    goto <bb 119>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 119> :
  _125 = (long unsigned int) k;
  _126 = std::vector<return_type>::operator[] (&global_ret_type_array, _125);
  _127 = _126->stmt;
  D.254762 = gimple_call_fn (_127);

  <bb 120> :
  _128 = D.254762;
  retval.1473 = _128 != 0B;
  if (retval.1473 != 0)
    goto <bb 121>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 121> :
  _129 = (long unsigned int) k;
  _130 = std::vector<return_type>::operator[] (&global_ret_type_array, _129);
  _131 = _130->stmt;
  D.254763 = gimple_call_fn (_131);

  <bb 122> :
  _132 = D.254763;
  D.254764 = get_name (_132);

  <bb 123> :
  name = D.254764;

  <bb 124> :
  if (name != 0B)
    goto <bb 126>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 125> :
  _133 = (long unsigned int) k;
  _134 = std::vector<return_type>::operator[] (&global_ret_type_array, _133);
  _135 = _134->stmt;
  _136 = gimple_code (_135);
  if (_136 == 10)
    goto <bb 126>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 126> :
  iftmp.1475 = 1;
  goto <bb 128>; [INV]

  <bb 127> :
  iftmp.1475 = 0;

  <bb 128> :
  retval.1474 = iftmp.1475;
  if (retval.1474 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 129> :
  check = 0;
  if (name != 0B)
    goto <bb 130>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 130> :
  _137 = strcmp (name, "exit");
  if (_137 == 0)
    goto <bb 131>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 131> :
  check = 1;

  <bb 132> :
  _138 = (long unsigned int) k;
  _139 = std::vector<return_type>::operator[] (&global_ret_type_array, _138);
  _140 = _139->stmt;
  _141 = gimple_code (_140);
  retval.1476 = _141 == 10;
  if (retval.1476 != 0)
    goto <bb 133>; [INV]
  else
    goto <bb 134>; [INV]

  <bb 133> :
  check = 1;

  <bb 134> :
  if (check == 1)
    goto <bb 135>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 135> :
  _142 = bb->index;
  _143 = gimple_bb (u_stmt);
  _144 = _143->index;
  if (_142 == _144)
    goto <bb 137>; [INV]
  else
    goto <bb 136>; [INV]

  <bb 136> :
  e.1479_145 = e;
  _146 = e.1479_145->dest;
  _147 = _146->index;
  _148 = gimple_bb (u_stmt);
  _149 = _148->index;
  if (_147 == _149)
    goto <bb 137>; [INV]
  else
    goto <bb 138>; [INV]

  <bb 137> :
  iftmp.1478 = 1;
  goto <bb 139>; [INV]

  <bb 138> :
  iftmp.1478 = 0;

  <bb 139> :
  retval.1477 = iftmp.1478;
  if (retval.1477 != 0)
    goto <bb 140>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 140> :
  _150 = (long unsigned int) k;
  _151 = std::vector<return_type>::operator[] (&global_ret_type_array, _150);
  tmp = _151->stmt;
  _152 = &bb->succs;
  ei2 = ei_start_1 (_152);
  goto <bb 165>; [INV]

  <bb 141> :
  e.1480_153 = e;
  _154 = e.1480_153->dest;
  _155 = _154->index;
  e2.1481_156 = e2;
  _157 = e2.1481_156->dest;
  _158 = _157->index;
  if (_155 != _158)
    goto <bb 142>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 142> :
  e2.1483_159 = e2;
  _160 = e2.1483_159->dest;
  _161 = gimple_bb (tmp);
  D.254765 = dominated_by_p (1, _161, _160);

  <bb 143> :
  retval.1482 = D.254765;
  if (retval.1482 != 0)
    goto <bb 144>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 144> :
  _162 = gimple_bb (tmp);
  cfun.1485_163 = cfun;
  _164 = cfun.1485_163->cfg;
  _165 = _164->x_exit_block_ptr;
  _166 = _165->prev_bb;
  D.254766 = dominated_by_p (1, _166, _162);

  <bb 145> :
  _167 = D.254766;
  retval.1484 = ~_167;
  if (retval.1484 != 0)
    goto <bb 146>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 146> :
  stderr.1486_168 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1486_168);

  <bb 147> :
  stderr.1487_169 = stderr;
  __builtin_fwrite ("\x1b[40;31m    branch possiable have return or exit  \x1b[0m\n", 1, 55, stderr.1487_169);

  <bb 148> :
  debug_gimple_stmt (u_stmt);

  <bb 149> :
  _170 = gimple_bb (u_stmt);
  _171 = _170->index;
  stderr.1488_172 = stderr;
  fprintf (stderr.1488_172, "bb index := %d\n", _171);

  <bb 150> :
  debug_gimple_stmt (tmp);

  <bb 151> :
  _173 = gimple_location_safe (tmp);
  warning_at (_173, 0, "use location");

  <bb 152> :
  _174 = gimple_bb (tmp);
  _175 = _174->index;
  stderr.1489_176 = stderr;
  fprintf (stderr.1489_176, "beacuse in succ := %d have return or exit\n", _175);

  <bb 153> :
  _177 = (long unsigned int) k;
  _178 = std::vector<return_type>::operator[] (&global_ret_type_array, _177);
  _179 = _178->stmt;
  debug_gimple_stmt (_179);

  <bb 154> :
  _180 = (long unsigned int) k;
  _181 = std::vector<return_type>::operator[] (&global_ret_type_array, _180);
  _182 = _181->stmt;
  _183 = gimple_location_safe (_182);
  warning_at (_183, 0, "use location");

  <bb 155> :
  _184 = gimple_bb (tmp);
  _185 = _184->index;
  _186 = gimple_bb (u_stmt);
  _187 = _186->index;
  stderr.1490_188 = stderr;
  fprintf (stderr.1490_188, "gimple stmt in succ := %d ,possiable got to succ := %d\n", _187, _185);

  <bb 156> :
  stderr.1491_189 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1491_189);
  goto <bb 164>; [INV]

  <bb 157> :
  if (succ_havereturn == 0)
    goto <bb 158>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 158> :
  e2.1492_190 = e2;
  _191 = e2.1492_190->dest;
  _192 = _191->index;
  cfun.1493_193 = cfun;
  _194 = cfun.1493_193->cfg;
  _195 = _194->x_exit_block_ptr;
  _196 = _195->prev_bb;
  _197 = _196->index;
  if (_192 == _197)
    goto <bb 159>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 159> :
  debug_gimple_stmt (u_stmt);

  <bb 160> :
  _198 = gimple_location_safe (u_stmt);
  warning_at (_198, 0, "use location");

  <bb 161> :
  succ_havereturn = 1;
  _199 = bb->index;
  stderr.1494_200 = stderr;
  fprintf (stderr.1494_200, "\x1b[40;31m    branch possiable have return in bb:%d \x1b[0m\n", _199);

  <bb 162> :
  cfun.1495_201 = cfun;
  _202 = cfun.1495_201->cfg;
  _203 = _202->x_exit_block_ptr;
  _204 = _203->prev_bb;
  _205 = _204->index;
  stderr.1496_206 = stderr;
  fprintf (stderr.1496_206, "beacuse in succ := %d have return \n", _205);

  <bb 163> :
  // predicted unlikely by continue predictor.

  <bb 164> :
  ei_next (&ei2);

  <bb 165> :
  D.254767 = ei_cond (ei2, &e2);

  <bb 166> :
  retval.1497 = D.254767;
  if (retval.1497 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 167>; [INV]

  <bb 167> :
  e2 = {CLOBBER};
  ei2 = {CLOBBER};

  <bb 168> :
  ei_next (&ei);

  <bb 169> :
  D.254769 = ei_cond (ei, &e);

  <bb 170> :
  retval.1498 = D.254769;
  if (retval.1498 != 0)
    goto <bb 117>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 171> :
  e = {CLOBBER};
  ei = {CLOBBER};
  bb = bb->next_bb;

  <bb 172> :
  _207 = table_temp->node;
  D.254771 = cgraph_node::get_fun (_207);

  <bb 173> :
  _208 = D.254771;
  _209 = _208->cfg;
  _210 = _209->x_exit_block_ptr;
  retval.1499 = bb != _210;
  if (retval.1499 != 0)
    goto <bb 116>; [INV]
  else
    goto <bb 174>; [INV]

  <bb 174> :
  k = k + 1;

  <bb 175> :
  _211 = (long unsigned int) k;
  _212 = std::vector<return_type>::size (&global_ret_type_array);
  retval.1500 = _211 < _212;
  if (retval.1500 != 0)
    goto <bb 114>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 176> :
  pop_cfun ();

  <bb 177> :
  stmtloopcheck.1501_213 = stmtloopcheck;
  if (stmtloopcheck.1501_213 != 0)
    goto <bb 178>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 178> :
  _214 = gimple_bb (u_stmt);
  D.254772 = bb_in_loop_p (_214);

  <bb 179> :
  retval.1502 = D.254772;
  if (retval.1502 != 0)
    goto <bb 180>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 180> :
  stderr.1503_215 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1503_215);

  <bb 181> :
  stderr.1504_216 = stderr;
  __builtin_fwrite ("\x1b[40;31m    collect Stmt in loop \x1b[0m\n", 1, 38, stderr.1504_216);

  <bb 182> :
  stderr.1505_217 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1505_217);

  <bb 183> :
  samefucntioncheck.1506_218 = samefucntioncheck;
  if (samefucntioncheck.1506_218 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 184> :
  _219 = table_temp->last_stmt;
  _220 = gimple_code (_219);
  retval.1507 = _220 == 8;
  if (retval.1507 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 185> :
  _221 = gimple_code (u_stmt);
  retval.1508 = _221 == 8;
  if (retval.1508 != 0)
    goto <bb 186>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 186> :
  _222 = table_temp->last_stmt;
  D.254773 = gimple_call_fn (_222);

  <bb 187> :
  _223 = D.254773;
  retval.1509 = _223 != 0B;
  if (retval.1509 != 0)
    goto <bb 188>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 188> :
  D.254774 = gimple_call_fn (u_stmt);

  <bb 189> :
  _224 = D.254774;
  retval.1510 = _224 != 0B;
  if (retval.1510 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 190> :
  _225 = table_temp->last_stmt;
  D.254775 = gimple_call_fn (_225);

  <bb 191> :
  _226 = D.254775;
  D.254776 = gimple_call_fn (u_stmt);

  <bb 192> :
  _227 = D.254776;
  retval.1511 = _226 == _227;
  if (retval.1511 != 0)
    goto <bb 193>; [INV]
  else
    goto <bb 195>; [INV]

  <bb 193> :
  _228 = table_temp->last_stmt;
  if (u_stmt == _228)
    goto <bb 194>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 194> :
  debug_gimple_stmt (u_stmt);
  goto <bb 210>; [INV]

  <bb 195> :
  D.254777 = gimple_call_fn (u_stmt);

  <bb 196> :
  _229 = D.254777;
  D.254778 = get_name (_229);

  <bb 197> :
  name = D.254778;
  if (name != 0B)
    goto <bb 198>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 198> :
  _230 = table_temp->last_stmt;
  D.254779 = gimple_call_fn (_230);

  <bb 199> :
  _231 = D.254779;
  D.254780 = get_name (_231);

  <bb 200> :
  _232 = D.254780;
  _233 = strcmp (name, _232);
  retval.1512 = _233 == 0;
  if (retval.1512 != 0)
    goto <bb 201>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 201> :
  stderr.1513_234 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1513_234);

  <bb 202> :
  stderr.1514_235 = stderr;
  fprintf (stderr.1514_235, "\n Expand conflict \n", name);

  <bb 203> :
  stderr.1515_236 = stderr;
  fprintf (stderr.1515_236, " The same function may have multiple branches :%s\n", name);

  <bb 204> :
  _237 = table_temp->last_stmt;
  debug_gimple_stmt (_237);

  <bb 205> :
  _238 = table_temp->last_stmt;
  _239 = gimple_location_safe (_238);
  warning_at (_239, 0, "use location");

  <bb 206> :
  debug_gimple_stmt (u_stmt);

  <bb 207> :
  _240 = gimple_location_safe (u_stmt);
  warning_at (_240, 0, "use location");

  <bb 208> :
  _241 = gimple_bb (u_stmt);
  _242 = table_temp->node;
  check_bbinfo (_242, _241);

  <bb 209> :
  // predicted unlikely by continue predictor.
  goto <bb 481>; [INV]

  <bb 210> :
  free_type::free_type (&free_type);
  memoryleakcheck.1516_243 = memoryleakcheck;
  if (memoryleakcheck.1516_243 != 0)
    goto <bb 211>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 211> :
  _244 = user_tmp->ret_stmt;
  if (_244 != 0B)
    goto <bb 212>; [INV]
  else
    goto <bb 255>; [INV]

  <bb 212> :
  debugmod.1517_245 = debugmod;
  if (debugmod.1517_245 != 0)
    goto <bb 213>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 213> :
  function_tree.1518_246 = function_tree;
  D.254781 = get_name (function_tree.1518_246);

  <bb 214> :
  _247 = D.254781;
  stderr.1519_248 = stderr;
  fprintf (stderr.1519_248, "dot graph entry %s\n", _247);

  <bb 215> :
  stderr.1520_249 = stderr;
  __builtin_fwrite ("dot graph target entry end\n\n", 1, 28, stderr.1520_249);

  <bb 216> :
  _250 = user_tmp->ret_stmt;
  _251 = gimple_code (_250);
  retval.1521 = _251 == 10;
  if (retval.1521 != 0)
    goto <bb 217>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 217> :
  _252 = user_tmp->ret_stmt;
  debug (_252);

  <bb 218> :
  _253 = user_tmp->ret_stmt;
  _254 = gimple_location_safe (_253);
  warning_at (_254, 0, "use location");

  <bb 219> :
  _255 = user_tmp->ret_stmt;
  debug_gimple_stmt (_255);

  <bb 220> :
  _256 = user_tmp->ret_stmt;
  now_stmt = _256;
  debugmod.1522_257 = debugmod;
  if (debugmod.1522_257 != 0)
    goto <bb 221>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 221> :
  stderr.1523_258 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1523_258);

  <bb 222> :
  _259 = user_tmp->ret_stmt;
  debug_gimple_stmt (_259);

  <bb 223> :
  _260 = user_tmp->ret_stmt;
  _261 = gimple_location_safe (_260);
  warning_at (_261, 0, "use location");

  <bb 224> :
  stderr.1524_262 = stderr;
  __builtin_fwrite ("dot graph target loc en1\n\n", 1, 26, stderr.1524_262);

  <bb 225> :
  _263 = user_tmp->ret_stmt;
  _264 = gimple_bb (_263);
  _265 = _264->index;
  stderr.1525_266 = stderr;
  fprintf (stderr.1525_266, "dot graph target line desc form basic block %d: ", _265);

  <bb 226> :
  _267 = user_tmp->ret_stmt;
  debug_gimple_stmt (_267);

  <bb 227> :
  _268 = user_tmp->ret_stmt;
  _269 = gimple_location_safe (_268);
  warning_at (_269, 0, "use location");

  <bb 228> :
  stderr.1526_270 = stderr;
  __builtin_fwrite ("dot graph target line desend\n\n", 1, 30, stderr.1526_270);

  <bb 229> :
  stderr.1527_271 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1527_271);

  <bb 230> :
  _272 = user_tmp->ret_stmt;
  debug_gimple_stmt (_272);

  <bb 231> :
  _273 = user_tmp->ret_stmt;
  _274 = gimple_location_safe (_273);
  warning_at (_274, 0, "use location");

  <bb 232> :
  stderr.1528_275 = stderr;
  __builtin_fwrite ("dot graph target loc end\n\n", 1, 26, stderr.1528_275);

  <bb 233> :
  stderr.1529_276 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1529_276);

  <bb 234> :
  _277 = user_tmp->ret_stmt;
  _278 = gimple_bb (_277);
  _279 = _278->index;
  function_tree.1530_280 = function_tree;
  D.254782 = get_name (function_tree.1530_280);

  <bb 235> :
  _281 = D.254782;
  stderr.1531_282 = stderr;
  fprintf (stderr.1531_282, "from %s basic block %d", _281, _279);

  <bb 236> :
  stderr.1532_283 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1532_283);

  <bb 237> :
  _284 = user_tmp->ret_stmt;
  D.254783 = gimple_block (_284);

  <bb 238> :
  _285 = D.254783;
  retval.1533 = _285 != 0B;
  if (retval.1533 != 0)
    goto <bb 239>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 239> :
  _286 = user_tmp->ret_stmt;
  D.254784 = gimple_block (_286);

  <bb 240> :
  _287 = D.254784;
  _288 = _287->block.supercontext;
  _289 = _288->base.code;
  if (_289 == 33)
    goto <bb 241>; [INV]
  else
    goto <bb 244>; [INV]

  <bb 241> :
  _290 = user_tmp->ret_stmt;
  D.254785 = gimple_block (_290);

  <bb 242> :
  _291 = D.254785;
  _292 = _291->block.supercontext;
  function_tree.1536_293 = function_tree;
  if (_292 != function_tree.1536_293)
    goto <bb 243>; [INV]
  else
    goto <bb 244>; [INV]

  <bb 243> :
  iftmp.1535 = 1;
  goto <bb 245>; [INV]

  <bb 244> :
  iftmp.1535 = 0;

  <bb 245> :
  retval.1534 = iftmp.1535;
  if (retval.1534 != 0)
    goto <bb 246>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 246> :
  stderr.1537_294 = stderr;
  __builtin_fwrite ("dot graph target basicblock star1 ", 1, 34, stderr.1537_294);

  <bb 247> :
  _295 = user_tmp->ret_stmt;
  _296 = gimple_bb (_295);
  _297 = _296->index;
  _298 = user_tmp->ret_stmt;
  D.254786 = gimple_block (_298);

  <bb 248> :
  _299 = D.254786;
  _300 = _299->block.supercontext;
  D.254787 = get_name (_300);

  <bb 249> :
  _301 = D.254787;
  stderr.1538_302 = stderr;
  fprintf (stderr.1538_302, "from %s basic block %d", _301, _297);

  <bb 250> :
  stderr.1539_303 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1539_303);

  <bb 251> :
  stderr.1540_304 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1540_304);

  <bb 252> :
  _305 = user_tmp->ret_stmt;
  debug (_305);

  <bb 253> :
  _306 = user_tmp->ret_stmt;
  _307 = gimple_location_safe (_306);
  warning_at (_307, 0, "use location");

  <bb 254> :
  stderr.1541_308 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1541_308);
  goto <bb 480>; [INV]

  <bb 255> :
  _309 = user_tmp->target;
  if (_309 != 0B)
    goto <bb 256>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 256> :
  debugmod.1542_310 = debugmod;
  if (debugmod.1542_310 != 0)
    goto <bb 257>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 257> :
  function_tree.1543_311 = function_tree;
  D.254788 = get_name (function_tree.1543_311);

  <bb 258> :
  _312 = D.254788;
  stderr.1544_313 = stderr;
  fprintf (stderr.1544_313, "dot graph entry %s\n", _312);

  <bb 259> :
  stderr.1545_314 = stderr;
  __builtin_fwrite ("dot graph target entry end\n\n", 1, 28, stderr.1545_314);

  <bb 260> :
  finalstmt = u_stmt;
  debug (u_stmt);

  <bb 261> :
  _315 = gimple_location_safe (u_stmt);
  warning_at (_315, 0, "use location");

  <bb 262> :
  now_stmt = u_stmt;
  debugmod.1546_316 = debugmod;
  if (debugmod.1546_316 != 0)
    goto <bb 263>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 263> :
  stderr.1547_317 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1547_317);

  <bb 264> :
  _318 = table_temp->last_stmt;
  debug_gimple_stmt (_318);

  <bb 265> :
  _319 = table_temp->last_stmt;
  _320 = gimple_location_safe (_319);
  warning_at (_320, 0, "use location");

  <bb 266> :
  stderr.1548_321 = stderr;
  __builtin_fwrite ("dot graph target loc en1\n\n", 1, 26, stderr.1548_321);

  <bb 267> :
  _322 = gimple_bb (u_stmt);
  _323 = _322->index;
  stderr.1549_324 = stderr;
  fprintf (stderr.1549_324, "dot graph target line desc form basic block %d: ", _323);

  <bb 268> :
  debug (u_stmt);

  <bb 269> :
  _325 = gimple_location_safe (u_stmt);
  warning_at (_325, 0, "use location");

  <bb 270> :
  stderr.1550_326 = stderr;
  __builtin_fwrite ("dot graph target line desend\n\n", 1, 30, stderr.1550_326);

  <bb 271> :
  stderr.1551_327 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1551_327);

  <bb 272> :
  _328 = table_temp->last_stmt;
  debug_gimple_stmt (_328);

  <bb 273> :
  _329 = table_temp->last_stmt;
  _330 = gimple_location_safe (_329);
  warning_at (_330, 0, "use location");

  <bb 274> :
  stderr.1552_331 = stderr;
  __builtin_fwrite ("dot graph target loc end\n\n", 1, 26, stderr.1552_331);

  <bb 275> :
  stderr.1553_332 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1553_332);

  <bb 276> :
  _333 = gimple_bb (u_stmt);
  _334 = _333->index;
  function_tree.1554_335 = function_tree;
  D.254789 = get_name (function_tree.1554_335);

  <bb 277> :
  _336 = D.254789;
  stderr.1555_337 = stderr;
  fprintf (stderr.1555_337, "from %s basic block %d", _336, _334);

  <bb 278> :
  stderr.1556_338 = stderr;
  __builtin_fwrite ("dot graph target basicblock en1\n\n", 1, 33, stderr.1556_338);

  <bb 279> :
  relate_type::relate_type (&relate_type);
  function_tree.1557_339 = function_tree;
  relate_type.relate_funtree = function_tree.1557_339;
  D.254790 = gimple_block (u_stmt);

  <bb 280> :
  _340 = D.254790;
  retval.1558 = _340 != 0B;
  if (retval.1558 != 0)
    goto <bb 281>; [INV]
  else
    goto <bb 296>; [INV]

  <bb 281> :
  D.254791 = gimple_block (u_stmt);

  <bb 282> :
  _341 = D.254791;
  _342 = _341->block.supercontext;
  _343 = _342->base.code;
  if (_343 == 33)
    goto <bb 283>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 283> :
  D.254792 = gimple_block (u_stmt);

  <bb 284> :
  _344 = D.254792;
  _345 = _344->block.supercontext;
  function_tree.1561_346 = function_tree;
  if (_345 != function_tree.1561_346)
    goto <bb 285>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 285> :
  iftmp.1560 = 1;
  goto <bb 287>; [INV]

  <bb 286> :
  iftmp.1560 = 0;

  <bb 287> :
  retval.1559 = iftmp.1560;
  if (retval.1559 != 0)
    goto <bb 288>; [INV]
  else
    goto <bb 295>; [INV]

  <bb 288> :
  stderr.1562_347 = stderr;
  __builtin_fwrite ("dot graph target basicblock star1 ", 1, 34, stderr.1562_347);

  <bb 289> :
  _348 = gimple_bb (u_stmt);
  _349 = _348->index;
  D.254793 = gimple_block (u_stmt);

  <bb 290> :
  _350 = D.254793;
  _351 = _350->block.supercontext;
  D.254794 = get_name (_351);

  <bb 291> :
  _352 = D.254794;
  stderr.1563_353 = stderr;
  fprintf (stderr.1563_353, "from %s basic block %d", _352, _349);

  <bb 292> :
  stderr.1564_354 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1564_354);

  <bb 293> :
  D.254795 = gimple_block (u_stmt);

  <bb 294> :
  _355 = D.254795;
  _356 = _355->block.supercontext;
  relate_type.relate_funtree = _356;
  goto <bb 296>; [INV]

  <bb 295> :
  function_tree.1565_357 = function_tree;
  relate_type.relate_funtree = function_tree.1565_357;

  <bb 296> :
  _358 = table_temp->last_stmt;
  relate_type.laststmt = _358;
  relate_type.stmt = u_stmt;
  _359 = user_tmp->target;
  relate_type.relate_tree = _359;
  _360 = gimple_bb (u_stmt);
  _361 = _360->index;
  relate_type.now_basicblock = _361;
  std::vector<relate_type>::push_back (&maxbb_array.relate_type_array, &relate_type);

  <bb 297> :
  _362 = &table_temp->target;
  hash_map<tree_node*, function_relate_array>::put (function_maxbb_collect, _362, &maxbb_array);

  <bb 298> :
  _363 = gimple_code (u_stmt);
  retval.1566 = _363 == 8;
  if (retval.1566 != 0)
    goto <bb 299>; [INV]
  else
    goto <bb 328>; [INV]

  <bb 299> :
  debugmod.1567_364 = debugmod;
  if (debugmod.1567_364 != 0)
    goto <bb 300>; [INV]
  else
    goto <bb 304>; [INV]

  <bb 300> :
  stderr.1568_365 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1568_365);

  <bb 301> :
  debug (finalstmt);

  <bb 302> :
  _366 = table_temp->last_stmt;
  debug (_366);

  <bb 303> :
  stderr.1569_367 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1569_367);

  <bb 304> :
  D.254796 = gimple_call_fn (u_stmt);

  <bb 305> :
  _368 = D.254796;
  D.254797 = get_name (_368);

  <bb 306> :
  name = D.254797;
  if (name != 0B)
    goto <bb 307>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 307> :
  _369 = strcmp (name, "free");
  if (_369 == 0)
    goto <bb 310>; [INV]
  else
    goto <bb 308>; [INV]

  <bb 308> :
  _370 = strcmp (name, "xfree");
  if (_370 == 0)
    goto <bb 310>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 309> :
  _371 = strcmp (name, "realloc");
  if (_371 == 0)
    goto <bb 310>; [INV]
  else
    goto <bb 323>; [INV]

  <bb 310> :
  stderr.1570_372 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1570_372);

  <bb 311> :
  debug (u_stmt);

  <bb 312> :
  _373 = gimple_location_safe (u_stmt);
  warning_at (_373, 0, "use location");

  <bb 313> :
  stderr.1571_374 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1571_374);

  <bb 314> :
  freemod.1572_375 = freemod;
  if (freemod.1572_375 != 0)
    goto <bb 315>; [INV]
  else
    goto <bb 320>; [INV]

  <bb 315> :
  stderr.1573_376 = stderr;
  __builtin_fwrite ("dot graph target color desc", 1, 27, stderr.1573_376);

  <bb 316> :
  _377 = strcmp (name, "realloc");
  if (_377 == 0)
    goto <bb 317>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 317> :
  stderr.1574_378 = stderr;
  __builtin_fwrite ("red", 1, 3, stderr.1574_378);
  goto <bb 319>; [INV]

  <bb 318> :
  stderr.1575_379 = stderr;
  __builtin_fwrite ("green", 1, 5, stderr.1575_379);

  <bb 319> :
  stderr.1576_380 = stderr;
  __builtin_fwrite ("dot graph target color desend\n\n", 1, 31, stderr.1576_380);

  <bb 320> :
  _381 = strcmp (name, "realloc");
  if (_381 == 0)
    goto <bb 321>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 321> :
  stderr.1577_382 = stderr;
  __builtin_fwrite ("If realloc() fails, the initial memory block will not be freed() ", 1, 65, stderr.1577_382);

  <bb 322> :
  goto <bb 327>; [INV]

  <bb 323> :
  stderr.1578_383 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1578_383);

  <bb 324> :
  debug (u_stmt);

  <bb 325> :
  _384 = gimple_location_safe (u_stmt);
  warning_at (_384, 0, "use location");

  <bb 326> :
  stderr.1579_385 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1579_385);

  <bb 327> :
  goto <bb 337>; [INV]

  <bb 328> :
  debugmod.1580_386 = debugmod;
  if (debugmod.1580_386 != 0)
    goto <bb 329>; [INV]
  else
    goto <bb 333>; [INV]

  <bb 329> :
  stderr.1581_387 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1581_387);

  <bb 330> :
  debug (u_stmt);

  <bb 331> :
  _388 = table_temp->last_stmt;
  debug (_388);

  <bb 332> :
  stderr.1582_389 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1582_389);

  <bb 333> :
  stderr.1583_390 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1583_390);

  <bb 334> :
  debug (u_stmt);

  <bb 335> :
  _391 = gimple_location_safe (u_stmt);
  warning_at (_391, 0, "use location");

  <bb 336> :
  stderr.1584_392 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1584_392);

  <bb 337> :
  relate_type = {CLOBBER};

  <bb 338> :
  _393 = user_tmp->target;
  if (_393 != 0B)
    goto <bb 339>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 339> :
  _394 = user_tmp->target;
  use_stmt = _394->ssa_name.def_stmt;
  _395 = gimple_code (u_stmt);
  retval.1585 = _395 == 8;
  if (retval.1585 != 0)
    goto <bb 340>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 340> :
  D.254799 = gimple_call_fndecl (u_stmt);

  <bb 341> :
  _396 = D.254799;
  retval.1586 = _396 != 0B;
  if (retval.1586 != 0)
    goto <bb 342>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 342> :
  D.254800 = gimple_call_fndecl (u_stmt);

  <bb 343> :
  _397 = D.254800;
  D.254801 = get_name (_397);

  <bb 344> :
  name = D.254801;
  if (name != 0B)
    goto <bb 345>; [INV]
  else
    goto <bb 346>; [INV]

  <bb 345> :
  stderr.1587_398 = stderr;
  fprintf (stderr.1587_398, "this stmt is child function---%s-----\n", name);
  goto <bb 347>; [INV]

  <bb 346> :
  stderr.1588_399 = stderr;
  fprintf (stderr.1588_399, "this other child function---i null-----\n", name);

  <bb 347> :
  _400 = gimple_code (u_stmt);
  retval.1589 = _400 == 18;
  if (retval.1589 != 0)
    goto <bb 348>; [INV]
  else
    goto <bb 349>; [INV]

  <bb 348> :
  find_phistmt = 1;
  stderr.1590_401 = stderr;
  fprintf (stderr.1590_401, "this stmt have mutiple branch ---%s-----\n", name);

  <bb 349> :
  if (name != 0B)
    goto <bb 350>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 350> :
  _402 = strcmp (name, "realloc");
  if (_402 == 0)
    goto <bb 357>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 351> :
  _403 = strcmp (name, "malloc");
  if (_403 == 0)
    goto <bb 357>; [INV]
  else
    goto <bb 352>; [INV]

  <bb 352> :
  _404 = strcmp (name, "xmalloc");
  if (_404 == 0)
    goto <bb 357>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 353> :
  _405 = strcmp (name, "calloc");
  if (_405 == 0)
    goto <bb 357>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 354> :
  _406 = strcmp (name, "xcalloc");
  if (_406 == 0)
    goto <bb 357>; [INV]
  else
    goto <bb 355>; [INV]

  <bb 355> :
  _407 = strcmp (name, "strdup");
  if (_407 == 0)
    goto <bb 357>; [INV]
  else
    goto <bb 356>; [INV]

  <bb 356> :
  _408 = strcmp (name, "xstrdup");
  if (_408 == 0)
    goto <bb 357>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 357> :
  IS_MALLOC_FUCNTION.1591_409 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1591_409;
  goto <bb 359>; [INV]

  <bb 358> :
  IS_OTHRER_FUCNTION.1592_410 = IS_OTHRER_FUCNTION;
  find_mallocstmt = (int) IS_OTHRER_FUCNTION.1592_410;

  <bb 359> :

  <bb 360> :
  calleetype.1593_411 = (unsigned int) calleetype;
  FUNCITON_HEAP.1594_412 = FUNCITON_HEAP;
  if (calleetype.1593_411 == FUNCITON_HEAP.1594_412)
    goto <bb 361>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 361> :
  function_tree.1595_413 = function_tree;
  debug_tree (function_tree.1595_413);
  goto <bb 380>; [INV]

  <bb 362> :
  calleetype.1596_414 = (unsigned int) calleetype;
  FUNCITON_THREAD.1597_415 = FUNCITON_THREAD;
  if (calleetype.1596_414 == FUNCITON_THREAD.1597_415)
    goto <bb 363>; [INV]
  else
    goto <bb 380>; [INV]

  <bb 363> :
  threadmod.1598_416 = threadmod;
  _417 = (int) threadmod.1598_416;
  if (_417 == 1)
    goto <bb 364>; [INV]
  else
    goto <bb 380>; [INV]

  <bb 364> :
  _418 = gimple_code (finalstmt);
  retval.1599 = _418 == 6;
  if (retval.1599 != 0)
    goto <bb 365>; [INV]
  else
    goto <bb 380>; [INV]

  <bb 365> :
  D.254802 = gimple_assign_lhs (finalstmt);

  <bb 366> :
  _419 = D.254802;
  _420 = BIT_FIELD_REF <_419->base, 8, 24>;
  _421 = _420 & 4;
  _422 = _421 == 0;
  _423 = (int) _422;
  retval.1600 = _423 == 1;
  if (retval.1600 != 0)
    goto <bb 367>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 367> :
  stderr.1601_424 = stderr;
  __builtin_fwrite (" \n LOCAL VARIBALE  \n", 1, 20, stderr.1601_424);

  <bb 368> :
  debug_gimple_stmt (finalstmt);

  <bb 369> :
  _425 = gimple_location_safe (finalstmt);
  warning_at (_425, 0, "use location");

  <bb 370> :
  stderr.1602_426 = stderr;
  __builtin_fwrite (" \n LOCAL VARIBALE  \n", 1, 20, stderr.1602_426);

  <bb 371> :
  // predicted unlikely by continue predictor.
  goto <bb 481>; [INV]

  <bb 372> :
  stderr.1603_427 = stderr;
  __builtin_fwrite ("\n ================== warring  ================== \n", 1, 50, stderr.1603_427);

  <bb 373> :
  stderr.1604_428 = stderr;
  __builtin_fwrite ("\x1b[40;35m warring thread fucntion detction is on \x1b[0m\n", 1, 53, stderr.1604_428);

  <bb 374> :
  stderr.1605_429 = stderr;
  __builtin_fwrite ("\x1b[40;35m Detect GLOBAL VARIBALE \x1b[0m\n", 1, 37, stderr.1605_429);

  <bb 375> :
  debug_gimple_stmt (finalstmt);

  <bb 376> :
  _430 = gimple_location_safe (finalstmt);
  warning_at (_430, 0, "use location");

  <bb 377> :
  stderr.1606_431 = stderr;
  __builtin_fwrite ("\x1b[40;35m thread job function \x1b[0m\n", 1, 34, stderr.1606_431);

  <bb 378> :
  stderr.1607_432 = stderr;
  __builtin_fwrite ("\x1b[40;35m this stmt possible have Race Condition \xe3\x80\x82 \x1b[0m\n", 1, 57, stderr.1607_432);

  <bb 379> :
  stderr.1608_433 = stderr;
  __builtin_fwrite ("\n ================== warring  ================== \n", 1, 50, stderr.1608_433);

  <bb 380> :
  _434 = gimple_code (u_stmt);
  if (_434 == 8)
    goto <bb 381>; [INV]
  else
    goto <bb 384>; [INV]

  <bb 381> :
  find_mallocstmt.1611_435 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1612_436 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1611_435 == IS_MALLOC_FUCNTION.1612_436)
    goto <bb 383>; [INV]
  else
    goto <bb 382>; [INV]

  <bb 382> :
  find_mallocstmt.1613_437 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1614_438 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1613_437 == IS_OTHRER_FUCNTION.1614_438)
    goto <bb 383>; [INV]
  else
    goto <bb 384>; [INV]

  <bb 383> :
  iftmp.1610 = 1;
  goto <bb 385>; [INV]

  <bb 384> :
  iftmp.1610 = 0;

  <bb 385> :
  retval.1609 = iftmp.1610;
  if (retval.1609 != 0)
    goto <bb 386>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 386> :
  IS_MALLOC_FUCNTION.1615_439 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1615_439;
  _440 = user_tmp->target;
  def_stmt = _440->ssa_name.def_stmt;
  D.254803 = gimple_call_fn (u_stmt);

  <bb 387> :
  _441 = D.254803;
  D.254804 = get_name (_441);

  <bb 388> :
  name = D.254804;
  if (name != 0B)
    goto <bb 389>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 389> :
  _442 = strcmp (name, "free");
  if (_442 == 0)
    goto <bb 392>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 390> :
  _443 = strcmp (name, "xfree");
  if (_443 == 0)
    goto <bb 392>; [INV]
  else
    goto <bb 391>; [INV]

  <bb 391> :
  _444 = strcmp (name, "realloc");
  if (_444 == 0)
    goto <bb 392>; [INV]
  else
    goto <bb 402>; [INV]

  <bb 392> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 393> :
  stderr.1616_445 = stderr;
  __builtin_fwrite ("\n ================== find ================== \n", 1, 46, stderr.1616_445);

  <bb 394> :
  debug (u_stmt);

  <bb 395> :
  _446 = gimple_location_safe (u_stmt);
  warning_at (_446, 0, "use location");

  <bb 396> :
  _447 = strcmp (name, "realloc");
  if (_447 == 0)
    goto <bb 397>; [INV]
  else
    goto <bb 399>; [INV]

  <bb 397> :
  find_freestmt.1617_448 = find_freestmt;
  _449 = find_freestmt.1617_448 + 1;
  find_freestmt = _449;
  find_freestmt.1618_450 = find_freestmt;
  stderr.1619_451 = stderr;
  fprintf (stderr.1619_451, "\x1b[40;32m    FIND REALLOC STMT count:%d name:%s \x1b[0m\n", find_freestmt.1618_450, name);

  <bb 398> :
  find_freestmt.1620_452 = find_freestmt;
  stderr.1621_453 = stderr;
  fprintf (stderr.1621_453, "\x1b[40;32m    this stmt possiable free memory \x1b[0m\n", find_freestmt.1620_452, name);
  goto <bb 400>; [INV]

  <bb 399> :
  find_freestmt.1622_454 = find_freestmt;
  _455 = find_freestmt.1622_454 + 1;
  find_freestmt = _455;
  find_freestmt.1623_456 = find_freestmt;
  stderr.1624_457 = stderr;
  fprintf (stderr.1624_457, "\x1b[40;32m    HAS FREE STMT count:%d name:%s \x1b[0m\n", find_freestmt.1623_456, name);

  <bb 400> :
  stderr.1625_458 = stderr;
  __builtin_fwrite ("\n ================== find ================== \n", 1, 46, stderr.1625_458);

  <bb 401> :
  goto <bb 479>; [INV]

  <bb 402> :
  _459 = strcmp (name, "pthread_create");
  if (_459 == 0)
    goto <bb 403>; [INV]
  else
    goto <bb 459>; [INV]

  <bb 403> :
  table_temp->last_stmt = u_stmt;
  FUNCITON_THREAD.1626_460 = FUNCITON_THREAD;
  FUNCITON_THREAD.1627_461 = (int) FUNCITON_THREAD.1626_460;
  table_temp->swap_type = FUNCITON_THREAD.1627_461;
  _462 = table_temp->swap_type;
  _463 = (unsigned int) _462;
  FUNCITON_THREAD.1628_464 = FUNCITON_THREAD;
  if (_463 == FUNCITON_THREAD.1628_464)
    goto <bb 404>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 404> :
  stderr.1629_465 = stderr;
  __builtin_fwrite ("\n ================== find ================== \n", 1, 46, stderr.1629_465);

  <bb 405> :
  debug (u_stmt);

  <bb 406> :
  _466 = gimple_location_safe (u_stmt);
  warning_at (_466, 0, "use location");

  <bb 407> :
  stderr.1630_467 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_CREATED STMT  \x1b[0m\n", 1, 44, stderr.1630_467);

  <bb 408> :
  stderr.1631_468 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched ================== \n", 1, 61, stderr.1631_468);

  <bb 409> :
  _469 = table_temp->last_stmt;
  D.254805 = gimple_call_num_args (_469);

  <bb 410> :
  _470 = D.254805;
  retval.1632 = _470 != 0;
  if (retval.1632 != 0)
    goto <bb 411>; [INV]
  else
    goto <bb 416>; [INV]

  <bb 411> :
  _471 = table_temp->last_stmt;
  retval.1633 = is_gimple_assign (_471);
  if (retval.1633 != 0)
    goto <bb 412>; [INV]
  else
    goto <bb 414>; [INV]

  <bb 412> :
  _472 = table_temp->last_stmt;
  D.254806 = gimple_assign_lhs (_472);

  <bb 413> :
  _473 = D.254806;
  trace_function_path (_473, -1, 0B, &find_pthread_detched);
  goto <bb 416>; [INV]

  <bb 414> :
  _474 = table_temp->last_stmt;
  D.254807 = gimple_call_arg (_474, 2);

  <bb 415> :
  _475 = D.254807;
  _476 = _475->exp.operands[0];
  trace_function_path (_476, -1, 0B, &find_pthread_detched);

  <bb 416> :
  stderr.1634_477 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched end ================== \n", 1, 65, stderr.1634_477);

  <bb 417> :
  _478 = table_temp->last_stmt;
  D.254808 = gimple_call_arg (_478, 3);

  <bb 418> :
  findtree = D.254808;
  retval.1635 = is_gimple_call (u_stmt);
  if (retval.1635 != 0)
    goto <bb 419>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 419> :
  D.254809 = gimple_call_num_args (u_stmt);

  <bb 420> :
  _479 = D.254809;
  retval.1636 = _479 != 0;
  if (retval.1636 != 0)
    goto <bb 421>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 421> :
  D.254810 = gimple_call_arg (u_stmt, 3);

  <bb 422> :
  findtree = D.254810;
  _480 = findtree->base.code;
  if (_480 == 131)
    goto <bb 423>; [INV]
  else
    goto <bb 424>; [INV]

  <bb 423> :
  _481 = findtree->exp.operands[0];
  function_tree.1637_482 = function_tree;
  trace_function_path (function_tree.1637_482, -1, _481, &find_freestmt);
  goto <bb 426>; [INV]

  <bb 424> :
  _483 = findtree->base.code;
  if (_483 == 153)
    goto <bb 425>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 425> :
  function_tree.1638_484 = function_tree;
  trace_function_path (function_tree.1638_484, -1, findtree, &find_freestmt);

  <bb 426> :
  if (findtree != 0B)
    goto <bb 427>; [INV]
  else
    goto <bb 435>; [INV]

  <bb 427> :
  _485 = table_temp->last_stmt;
  D.254811 = gimple_call_num_args (_485);

  <bb 428> :
  _486 = D.254811;
  if (_486 != 0)
    goto <bb 429>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 429> :
  _487 = table_temp->last_stmt;
  _488 = is_gimple_call (_487);
  if (_488 != 0)
    goto <bb 430>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 430> :
  iftmp.1640 = 1;
  goto <bb 432>; [INV]

  <bb 431> :
  iftmp.1640 = 0;

  <bb 432> :
  retval.1639 = iftmp.1640;
  if (retval.1639 != 0)
    goto <bb 433>; [INV]
  else
    goto <bb 435>; [INV]

  <bb 433> :
  _489 = table_temp->last_stmt;
  D.254812 = gimple_call_arg (_489, 2);

  <bb 434> :
  _490 = D.254812;
  _491 = _490->exp.operands[0];
  trace_function_path (_491, 0, findtree, &find_freestmt);

  <bb 435> :
  _492 = table_temp->swap_stmt;
  if (_492 != 0B)
    goto <bb 436>; [INV]
  else
    goto <bb 439>; [INV]

  <bb 436> :
  _493 = table_temp->swap_stmt;
  D.254813 = gimple_call_num_args (_493);

  <bb 437> :
  _494 = D.254813;
  if (_494 != 0)
    goto <bb 438>; [INV]
  else
    goto <bb 439>; [INV]

  <bb 438> :
  iftmp.1642 = 1;
  goto <bb 440>; [INV]

  <bb 439> :
  iftmp.1642 = 0;

  <bb 440> :
  retval.1641 = iftmp.1642;
  if (retval.1641 != 0)
    goto <bb 441>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 441> :
  stderr.1643_495 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched ================== \n", 1, 61, stderr.1643_495);

  <bb 442> :
  _496 = table_temp->swap_stmt;
  D.254814 = gimple_call_arg (_496, 2);

  <bb 443> :
  _497 = D.254814;
  _498 = _497->exp.operands[0];
  trace_function_path (_498, -1, 0B, &find_pthread_detched);

  <bb 444> :
  stderr.1644_499 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched end ================== \n", 1, 65, stderr.1644_499);

  <bb 445> :
  _500 = table_temp->swap_stmt;
  D.254815 = gimple_call_arg (_500, 3);

  <bb 446> :
  findtree = D.254815;
  if (findtree != 0B)
    goto <bb 447>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 447> :
  _501 = table_temp->swap_stmt;
  D.254816 = gimple_call_arg (_501, 2);

  <bb 448> :
  _502 = D.254816;
  _503 = _502->exp.operands[0];
  trace_function_path (_503, 0, findtree, &find_freestmt);

  <bb 449> :
  find_pthread_detched.1645_504 = find_pthread_detched;
  if (find_pthread_detched.1645_504 == 0)
    goto <bb 450>; [INV]
  else
    goto <bb 456>; [INV]

  <bb 450> :
  _505 = table_temp->pthread_type;
  if (_505 == 0)
    goto <bb 451>; [INV]
  else
    goto <bb 452>; [INV]

  <bb 451> :
  iftmp.1646 = "CREATE_JOINABLE";
  goto <bb 453>; [INV]

  <bb 452> :
  iftmp.1646 = "CREATE_DETACHED";

  <bb 453> :
  stderr.1647_506 = stderr;
  fprintf (stderr.1647_506, "\x1b[40;32m    FIND PTHREAD_CREATED TYPE is %s  \x1b[0m\n", iftmp.1646);

  <bb 454> :
  is_pthread_detched = 0;
  _507 = table_temp->pthread_type;
  if (_507 == 1)
    goto <bb 455>; [INV]
  else
    goto <bb 458>; [INV]

  <bb 455> :
  is_pthread_detched = 1;
  goto <bb 458>; [INV]

  <bb 456> :
  stderr.1648_508 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_DETACHED  \x1b[0m\n", 1, 63, stderr.1648_508);

  <bb 457> :
  is_pthread_detched = 1;

  <bb 458> :
  stderr.1649_509 = stderr;
  __builtin_fwrite ("\n ================== find ================== \n", 1, 46, stderr.1649_509);
  goto <bb 479>; [INV]

  <bb 459> :
  _510 = strcmp (name, "pthread_join");
  if (_510 == 0)
    goto <bb 460>; [INV]
  else
    goto <bb 463>; [INV]

  <bb 460> :
  _511 = table_temp->swap_type;
  _512 = (unsigned int) _511;
  FUNCITON_THREAD.1650_513 = FUNCITON_THREAD;
  if (_512 == FUNCITON_THREAD.1650_513)
    goto <bb 461>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 461> :
  stderr.1651_514 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_JOIN \x1b[0m\n", 1, 35, stderr.1651_514);

  <bb 462> :
  find_pthread_join = find_pthread_join + 1;
  goto <bb 479>; [INV]

  <bb 463> :
  freecount = find_freestmt;
  stderr.1652_515 = stderr;
  __builtin_fwrite ("\n ================== trace ================== \n", 1, 47, stderr.1652_515);

  <bb 464> :
  if (name != 0B)
    goto <bb 465>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 465> :
  _516 = strcmp (name, "realloc");
  if (_516 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 466>; [INV]

  <bb 466> :
  _517 = strcmp (name, "malloc");
  if (_517 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 467>; [INV]

  <bb 467> :
  _518 = strcmp (name, "xmalloc");
  if (_518 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 468>; [INV]

  <bb 468> :
  _519 = strcmp (name, "calloc");
  if (_519 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 469>; [INV]

  <bb 469> :
  _520 = strcmp (name, "xcalloc");
  if (_520 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 470>; [INV]

  <bb 470> :
  _521 = strcmp (name, "strdup");
  if (_521 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 471>; [INV]

  <bb 471> :
  _522 = strcmp (name, "xstrdup");
  if (_522 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 472> :
  IS_MALLOC_FUCNTION.1653_523 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1653_523;
  stderr.1654_524 = stderr;
  fprintf (stderr.1654_524, "trace fucntion name:%s \n", name);

  <bb 473> :
  _525 = table_temp->target;
  D.254817 = gimple_call_fndecl (u_stmt);

  <bb 474> :
  _526 = D.254817;
  trace_function_path (_526, 0, _525, &find_freestmt);

  <bb 475> :
  stderr.1655_527 = stderr;
  __builtin_fwrite ("\n ================== trace ================== \n", 1, 47, stderr.1655_527);

  <bb 476> :
  find_freestmt.1656_528 = find_freestmt;
  stderr.1657_529 = stderr;
  fprintf (stderr.1657_529, "trace fucntion free:%d \n", find_freestmt.1656_528);

  <bb 477> :
  find_freestmt.1658_530 = find_freestmt;
  if (freecount < find_freestmt.1658_530)
    goto <bb 478>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 478> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 479> :

  <bb 480> :
  free_type = {CLOBBER};
  goto <bb 482>; [INV]

  <bb 481> :
  free_type = {CLOBBER};

  <bb 482> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 483>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 483> :
  iftmp.1659 = user_tmp->stmt;
  goto <bb 485>; [INV]

  <bb 484> :
  iftmp.1659 = 0B;

  <bb 485> :
  u_stmt = iftmp.1659;

  <bb 486> :
  if (user_tmp != 0B)
    goto <bb 109>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 487> :
  samefucntioncheck.1660_531 = samefucntioncheck;
  if (samefucntioncheck.1660_531 != 0)
    goto <bb 488>; [INV]
  else
    goto <bb 523>; [INV]

  <bb 488> :
  debugmod.1661_532 = debugmod;
  if (debugmod.1661_532 != 0)
    goto <bb 489>; [INV]
  else
    goto <bb 523>; [INV]

  <bb 489> :
  lastbasicblock = -1;
  _533 = &table_temp->target;
  D.254821 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _533);

  <bb 490> :
  _534 = D.254821;
  function_relate_array::operator= (&maxbb_array, _534);

  <bb 491> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 492> :
  D.254822 = operator new (48);

  <bb 493> :
  D.201420 = D.254822;
  hash_map<tree_node*, int>::hash_map (D.201420, 13, 0, 1, 0);

  <bb 494> :
  function_maxbasicblock_collect = D.201420;
  i = 0;
  goto <bb 504>; [INV]

  <bb 495> :
  _535 = (long unsigned int) i;
  _536 = std::vector<relate_type>::operator[] (&maxbb_type_array, _535);
  _537 = &_536->now_basicblock;
  _538 = (long unsigned int) i;
  _539 = std::vector<relate_type>::operator[] (&maxbb_type_array, _538);
  _540 = &_539->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _540, _537);

  <bb 496> :
  j = 0;
  goto <bb 502>; [INV]

  <bb 497> :
  _541 = (long unsigned int) i;
  _542 = std::vector<relate_type>::operator[] (&maxbb_type_array, _541);
  _543 = _542->relate_funtree;
  _544 = (long unsigned int) j;
  _545 = std::vector<relate_type>::operator[] (&maxbb_type_array, _544);
  _546 = _545->relate_funtree;
  retval.1662 = _543 == _546;
  if (retval.1662 != 0)
    goto <bb 498>; [INV]
  else
    goto <bb 501>; [INV]

  <bb 498> :
  _547 = (long unsigned int) i;
  _548 = std::vector<relate_type>::operator[] (&maxbb_type_array, _547);
  _549 = &_548->relate_funtree;
  D.254824 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _549);

  <bb 499> :
  _550 = D.254824;
  max_bb = *_550;
  _551 = (long unsigned int) j;
  _552 = std::vector<relate_type>::operator[] (&maxbb_type_array, _551);
  _553 = _552->now_basicblock;
  retval.1663 = max_bb <= _553;
  if (retval.1663 != 0)
    goto <bb 500>; [INV]
  else
    goto <bb 501>; [INV]

  <bb 500> :
  _554 = (long unsigned int) j;
  _555 = std::vector<relate_type>::operator[] (&maxbb_type_array, _554);
  _556 = &_555->now_basicblock;
  _557 = (long unsigned int) j;
  _558 = std::vector<relate_type>::operator[] (&maxbb_type_array, _557);
  _559 = &_558->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _559, _556);

  <bb 501> :
  j = j + 1;

  <bb 502> :
  _560 = (long unsigned int) j;
  _561 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1664 = _560 < _561;
  if (retval.1664 != 0)
    goto <bb 497>; [INV]
  else
    goto <bb 503>; [INV]

  <bb 503> :
  i = i + 1;

  <bb 504> :
  _562 = (long unsigned int) i;
  _563 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1665 = _562 < _563;
  if (retval.1665 != 0)
    goto <bb 495>; [INV]
  else
    goto <bb 505>; [INV]

  <bb 505> :
  it_i._M_current = 0B;
  it_i = std::vector<relate_type>::begin (&maxbb_type_array);
  goto <bb 518>; [INV]

  <bb 506> :
  _564 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _565 = &_564->relate_funtree;
  D.254825 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _565);

  <bb 507> :
  _566 = D.254825;
  max_bb = *_566;
  _567 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _568 = _567->now_basicblock;
  retval.1666 = max_bb == _568;
  if (retval.1666 != 0)
    goto <bb 508>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 508> :
  _569 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _570 = _569->relate_tree;
  def_stmt = _570->ssa_name.def_stmt;
  stderr.1667_571 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1667_571);

  <bb 509> :
  _572 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _573 = _572->stmt;
  _574 = gimple_bb (_573);
  _575 = _574->index;
  _576 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _577 = _576->relate_funtree;
  D.254826 = get_name (_577);

  <bb 510> :
  _578 = D.254826;
  stderr.1668_579 = stderr;
  fprintf (stderr.1668_579, "from %s basic block %d", _578, _575);

  <bb 511> :
  stderr.1669_580 = stderr;
  __builtin_fwrite ("dot graph target basicblock en1\n\n", 1, 33, stderr.1669_580);

  <bb 512> :
  _581 = rand ();
  x = (long unsigned int) _581;
  stderr.1670_582 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.1670_582);

  <bb 513> :
  stderr.1671_583 = stderr;
  fprintf (stderr.1671_583, "subgraph cluster_%lu dot graph subgraph  ", x);

  <bb 514> :
  _584 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _585 = _584->stmt;
  debug (_585);

  <bb 515> :
  debug (def_stmt);

  <bb 516> :
  stderr.1672_586 = stderr;
  __builtin_fwrite ("dot graph subgrapend\n\n", 1, 22, stderr.1672_586);

  <bb 517> :
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (&it_i);

  <bb 518> :
  D.201554 = std::vector<relate_type>::end (&maxbb_type_array);
  retval.1673 = __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (&it_i, &D.201554);
  D.201554 = {CLOBBER};
  if (retval.1673 != 0)
    goto <bb 506>; [INV]
  else
    goto <bb 519>; [INV]

  <bb 519> :
  function_maxbb_collect.1674 = function_maxbb_collect;
  if (function_maxbb_collect.1674 != 0B)
    goto <bb 520>; [INV]
  else
    goto <bb 521>; [INV]

  <bb 520> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_maxbb_collect.1674);
  operator delete (function_maxbb_collect.1674, 48);

  <bb 521> :
  it_i = {CLOBBER};
  goto <bb 523>; [INV]

  <bb 522> :
  PTABLE_IS_NULL.1675_587 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1675_587;

  <bb 523> :
  relatemod.1676_588 = relatemod;
  if (relatemod.1676_588 != 0)
    goto <bb 524>; [INV]
  else
    goto <bb 543>; [INV]

  <bb 524> :
  debugmod.1677_589 = debugmod;
  if (debugmod.1677_589 != 0)
    goto <bb 525>; [INV]
  else
    goto <bb 543>; [INV]

  <bb 525> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  function_relate_collect.1679_590 = function_relate_collect;
  _591 = &table_temp->target;
  D.254828 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1679_590, _591);

  <bb 526> :
  _592 = D.254828;
  retval.1678 = _592 != 0B;
  if (retval.1678 != 0)
    goto <bb 527>; [INV]
  else
    goto <bb 542>; [INV]

  <bb 527> :
  function_relate_collect.1680_593 = function_relate_collect;
  _594 = &table_temp->target;
  D.254829 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1680_593, _594);

  <bb 528> :
  _595 = D.254829;
  function_relate_array::operator= (&fun_array, _595);

  <bb 529> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 530> :
  k = 0;
  goto <bb 541>; [INV]

  <bb 531> :
  _596 = rand ();
  x = (long unsigned int) _596;
  stderr.1681_597 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.1681_597);

  <bb 532> :
  _598 = (long unsigned int) k;
  _599 = std::vector<relate_type>::operator[] (&relate_type_array, _598);
  _600 = _599->now_fucntion;
  stderr.1682_601 = stderr;
  fprintf (stderr.1682_601, "ID : %lu\n", _600);

  <bb 533> :
  _602 = (long unsigned int) k;
  _603 = std::vector<relate_type>::operator[] (&relate_type_array, _602);
  _604 = _603->stmt;
  _605 = gimple_bb (_604);
  _606 = _605->index;
  _607 = (long unsigned int) k;
  _608 = std::vector<relate_type>::operator[] (&relate_type_array, _607);
  _609 = _608->relate_funtree;
  D.254830 = get_name (_609);

  <bb 534> :
  _610 = D.254830;
  stderr.1683_611 = stderr;
  fprintf (stderr.1683_611, "from %s basic block %d", _610, _606);

  <bb 535> :
  stderr.1684_612 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.1684_612);

  <bb 536> :
  _613 = (long unsigned int) k;
  _614 = std::vector<relate_type>::operator[] (&relate_type_array, _613);
  _615 = _614->now_fucntion;
  _616 = (long unsigned int) k;
  _617 = std::vector<relate_type>::operator[] (&relate_type_array, _616);
  _618 = _617->now_stmt;
  stderr.1685_619 = stderr;
  fprintf (stderr.1685_619, "subgraph cluster_%lu dot graph subgraph  start ID : %lu stmt(relate) \xef\xbc\x8c Tree ID : %lu : ", x, _618, _615);

  <bb 537> :
  _620 = (long unsigned int) k;
  _621 = std::vector<relate_type>::operator[] (&relate_type_array, _620);
  _622 = _621->stmt;
  debug (_622);

  <bb 538> :
  _623 = (long unsigned int) k;
  _624 = std::vector<relate_type>::operator[] (&relate_type_array, _623);
  _625 = _624->stmt;
  _626 = gimple_location_safe (_625);
  warning_at (_626, 0, "use location");

  <bb 539> :
  stderr.1686_627 = stderr;
  __builtin_fwrite ("dot graph subgrapend\n\n", 1, 22, stderr.1686_627);

  <bb 540> :
  k = k + 1;

  <bb 541> :
  _628 = (long unsigned int) k;
  _629 = std::vector<relate_type>::size (&relate_type_array);
  retval.1687 = _628 < _629;
  if (retval.1687 != 0)
    goto <bb 531>; [INV]
  else
    goto <bb 542>; [INV]

  <bb 542> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 543> :
  Looserulesfree.1688_630 = Looserulesfree;
  if (Looserulesfree.1688_630 != 0)
    goto <bb 544>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 544> :
  stderr.1689_631 = stderr;
  __builtin_fwrite ("\n ================== Start Looserules free Check ================== \n", 1, 69, stderr.1689_631);

  <bb 545> :
  stderr.1690_632 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1690_632);

  <bb 546> :
  stderr.1691_633 = stderr;
  __builtin_fwrite ("\x1b[40;35m   this module possiable false positives \x1b[0m\n", 1, 54, stderr.1691_633);

  <bb 547> :
  stderr.1692_634 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1692_634);

  <bb 548> :
  _635 = table_temp->target;
  _636 = _635->base.code;
  if (_636 == 153)
    goto <bb 550>; [INV]
  else
    goto <bb 549>; [INV]

  <bb 549> :
  _637 = table_temp->target;
  _638 = _637->base.code;
  if (_638 == 165)
    goto <bb 550>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 550> :
  _639 = table_temp->target;
  if (_639 != 0B)
    goto <bb 551>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 551> :
  _640 = table_temp->target;
  debug_tree (_640);

  <bb 552> :
  stderr.1693_641 = stderr;
  __builtin_fwrite ("\n ================================================================= \n", 1, 69, stderr.1693_641);

  <bb 553> :
  function_free_collect.1695_642 = function_free_collect;
  D.254834 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1695_642, &function_tree);

  <bb 554> :
  _643 = D.254834;
  retval.1694 = _643 != 0B;
  if (retval.1694 != 0)
    goto <bb 555>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 555> :
  function_free_collect.1696_644 = function_free_collect;
  D.254835 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1696_644, &function_tree);

  <bb 556> :
  _645 = D.254835;
  function_free_array::function_free_array (&callerFunArray, _645);

  <bb 557> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 558> :
  k = 0;
  goto <bb 574>; [INV]

  <bb 559> :
  _646 = table_temp->target;
  _647 = (long unsigned int) k;
  _648 = std::vector<free_type>::operator[] (&callerRetTypearray, _647);
  _649 = _648->free_tree;
  D.254836 = ptr_derefs_may_alias_p (_649, _646);

  <bb 560> :
  retval.1697 = D.254836;
  if (retval.1697 != 0)
    goto <bb 561>; [INV]
  else
    goto <bb 573>; [INV]

  <bb 561> :
  _650 = (long unsigned int) k;
  _651 = std::vector<free_type>::operator[] (&callerRetTypearray, _650);
  _652 = _651->stmt;
  retval.1698 = is_gimple_call (_652);
  if (retval.1698 != 0)
    goto <bb 562>; [INV]
  else
    goto <bb 565>; [INV]

  <bb 562> :
  _653 = (long unsigned int) k;
  _654 = std::vector<free_type>::operator[] (&callerRetTypearray, _653);
  _655 = _654->stmt;
  D.254837 = gimple_call_fn (_655);

  <bb 563> :
  _656 = D.254837;
  D.254838 = get_name (_656);

  <bb 564> :
  name = D.254838;

  <bb 565> :
  _657 = strcmp (name, "realloc");
  if (_657 == 0)
    goto <bb 566>; [INV]
  else
    goto <bb 568>; [INV]

  <bb 566> :
  stderr.1699_658 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find realloc stmt free same pointer \x1b[0m\n", 1, 63, stderr.1699_658);

  <bb 567> :
  stderr.1700_659 = stderr;
  __builtin_fwrite ("*/If realloc() fails, the initial memory block will not be freed() */", 1, 69, stderr.1700_659);
  goto <bb 569>; [INV]

  <bb 568> :
  stderr.1701_660 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n", 1, 60, stderr.1701_660);

  <bb 569> :
  _661 = (long unsigned int) k;
  _662 = std::vector<free_type>::operator[] (&callerRetTypearray, _661);
  _663 = _662->stmt;
  debug_gimple_stmt (_663);

  <bb 570> :
  _664 = (long unsigned int) k;
  _665 = std::vector<free_type>::operator[] (&callerRetTypearray, _664);
  _666 = _665->stmt;
  _667 = gimple_location (_666);
  warning_at (_667, 0, "use location");

  <bb 571> :
  free_type::free_type (&free_type);
  _668 = (long unsigned int) k;
  _669 = std::vector<free_type>::operator[] (&callerRetTypearray, _668);
  _670 = _669->stmt;
  free_type.stmt = _670;
  free_type.Looserulesfree = 1;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 572> :
  find_Looserulesfreestmt = find_Looserulesfreestmt + 1;
  free_type = {CLOBBER};

  <bb 573> :
  k = k + 1;

  <bb 574> :
  _671 = (long unsigned int) k;
  _672 = std::vector<free_type>::size (&callerRetTypearray);
  retval.1702 = _671 < _672;
  if (retval.1702 != 0)
    goto <bb 559>; [INV]
  else
    goto <bb 575>; [INV]

  <bb 575> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 576> :
  useafterfree.1703_673 = useafterfree;
  if (useafterfree.1703_673 != 0)
    goto <bb 577>; [INV]
  else
    goto <bb 633>; [INV]

  <bb 577> :
  treeGimpleArray.1704_674 = treeGimpleArray;
  _675 = &table_temp->target;
  D.254843 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1704_674, _675);

  <bb 578> :
  user_tmp = D.254843;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  stderr.1705_676 = stderr;
  __builtin_fwrite ("\n ================== Start Use after free Check ================== \n", 1, 68, stderr.1705_676);

  <bb 579> :
  _677 = user_tmp->size;
  if (_677 > 0)
    goto <bb 580>; [INV]
  else
    goto <bb 631>; [INV]

  <bb 580> :
  if (user_tmp != 0B)
    goto <bb 581>; [INV]
  else
    goto <bb 582>; [INV]

  <bb 581> :
  iftmp.1706 = user_tmp->stmt;
  goto <bb 583>; [INV]

  <bb 582> :
  iftmp.1706 = 0B;

  <bb 583> :
  u_stmt = iftmp.1706;
  goto <bb 630>; [INV]

  <bb 584> :
  i = 0;
  goto <bb 625>; [INV]

  <bb 585> :
  _678 = (long unsigned int) i;
  D.254844 = std::vector<free_type>::at (&free_array, _678);

  <bb 586> :
  _679 = D.254844;
  _680 = _679->stmt;
  D.254845 = gimple_call_fndecl (_680);

  <bb 587> :
  _681 = D.254845;
  retval.1707 = _681 != 0B;
  if (retval.1707 != 0)
    goto <bb 588>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 588> :
  _682 = (long unsigned int) i;
  D.254846 = std::vector<free_type>::at (&free_array, _682);

  <bb 589> :
  _683 = D.254846;
  _684 = _683->stmt;
  retval.1708 = u_stmt != _684;
  if (retval.1708 != 0)
    goto <bb 590>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 590> :
  retval.1709 = is_gimple_call (u_stmt);
  if (retval.1709 != 0)
    goto <bb 591>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 591> :
  _685 = (long unsigned int) i;
  D.254847 = std::vector<free_type>::at (&free_array, _685);

  <bb 592> :
  _686 = D.254847;
  _687 = _686->stmt;
  D.254848 = gimple_call_fndecl (_687);

  <bb 593> :
  _688 = D.254848;
  D.254849 = gimple_call_fndecl (u_stmt);

  <bb 594> :
  _689 = D.254849;
  retval.1710 = _688 == _689;
  if (retval.1710 != 0)
    goto <bb 595>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 595> :
  // predicted unlikely by continue predictor.
  goto <bb 624>; [INV]

  <bb 596> :
  function_tree.1712_690 = function_tree;
  _691 = (long unsigned int) i;
  D.254850 = std::vector<free_type>::at (&free_array, _691);

  <bb 597> :
  _692 = D.254850;
  _693 = _692->stmt;
  D.254851 = Location_b2 (_693, u_stmt, function_tree.1712_690);

  <bb 598> :
  retval.1711 = D.254851;
  if (retval.1711 != 0)
    goto <bb 599>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 599> :
  stderr.1713_694 = stderr;
  __builtin_fwrite ("\n============================================================\n", 1, 62, stderr.1713_694);

  <bb 600> :
  _695 = (long unsigned int) i;
  D.254852 = std::vector<free_type>::at (&free_array, _695);

  <bb 601> :
  _696 = D.254852;
  _697 = _696->Looserulesfree;
  retval.1714 = _697 != 0;
  if (retval.1714 != 0)
    goto <bb 602>; [INV]
  else
    goto <bb 603>; [INV]

  <bb 602> :
  stderr.1715_698 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n", 1, 60, stderr.1715_698);

  <bb 603> :
  _699 = (long unsigned int) i;
  D.254853 = std::vector<free_type>::at (&free_array, _699);

  <bb 604> :
  _700 = D.254853;
  _701 = _700->stmt;
  debug_gimple_stmt (_701);

  <bb 605> :
  _702 = (long unsigned int) i;
  D.254854 = std::vector<free_type>::at (&free_array, _702);

  <bb 606> :
  _703 = D.254854;
  _704 = _703->stmt;
  _705 = gimple_location_safe (_704);
  warning_at (_705, 0, "free in this location");

  <bb 607> :
  _706 = (long unsigned int) i;
  D.254855 = std::vector<free_type>::at (&free_array, _706);

  <bb 608> :
  _707 = D.254855;
  _708 = _707->stmt;
  _709 = gimple_bb (_708);
  _710 = table_temp->node;
  check_bbinfo (_710, _709);

  <bb 609> :
  _711 = user_tmp->aptr;
  if (_711 != 0B)
    goto <bb 610>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 610> :
  _712 = user_tmp->aptr;
  _713 = _712->base.code;
  _714 = (tree_code) _713;
  D.254856 = get_tree_code_name (_714);

  <bb 611> :
  name = D.254856;
  if (name != 0B)
    goto <bb 612>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 612> :
  stderr.1716_715 = stderr;
  fprintf (stderr.1716_715, "\x1b[40;35m target gimple type: %s \x1b[0m\n", name);

  <bb 613> :
  debug_gimple_stmt (u_stmt);

  <bb 614> :
  _716 = gimple_location_safe (u_stmt);
  warning_at (_716, 0, "use location");

  <bb 615> :
  _717 = gimple_bb (u_stmt);
  _718 = table_temp->node;
  check_bbinfo (_718, _717);

  <bb 616> :
  stderr.1717_719 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1717_719);

  <bb 617> :
  _720 = (long unsigned int) i;
  D.254857 = std::vector<free_type>::at (&free_array, _720);

  <bb 618> :
  _721 = D.254857;
  _722 = _721->stmt;
  D.254858 = gimple_call_fn (_722);

  <bb 619> :
  _723 = D.254858;
  D.254859 = get_name (_723);

  <bb 620> :
  name = D.254859;
  _724 = strcmp (name, "realloc");
  if (_724 == 0)
    goto <bb 621>; [INV]
  else
    goto <bb 622>; [INV]

  <bb 621> :
  stderr.1718_725 = stderr;
  __builtin_fwrite ("\x1b[40;35m  realloc Use after free error! \x1b[0m\n", 1, 45, stderr.1718_725);
  goto <bb 623>; [INV]

  <bb 622> :
  stderr.1719_726 = stderr;
  __builtin_fwrite ("\x1b[40;35m    Use after free error! \x1b[0m\n", 1, 39, stderr.1719_726);

  <bb 623> :
  stderr.1720_727 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1720_727);

  <bb 624> :
  i = i + 1;

  <bb 625> :
  _728 = (long unsigned int) i;
  _729 = std::vector<free_type>::size (&free_array);
  retval.1721 = _728 < _729;
  if (retval.1721 != 0)
    goto <bb 585>; [INV]
  else
    goto <bb 626>; [INV]

  <bb 626> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 627>; [INV]
  else
    goto <bb 628>; [INV]

  <bb 627> :
  iftmp.1722 = user_tmp->stmt;
  goto <bb 629>; [INV]

  <bb 628> :
  iftmp.1722 = 0B;

  <bb 629> :
  u_stmt = iftmp.1722;

  <bb 630> :
  if (user_tmp != 0B)
    goto <bb 584>; [INV]
  else
    goto <bb 631>; [INV]

  <bb 631> :
  stderr.1723_730 = stderr;
  __builtin_fwrite ("\ndot graph END\n", 1, 15, stderr.1723_730);

  <bb 632> :
  start = {CLOBBER};

  <bb 633> :
  function_relate_array::~function_relate_array (&maxbb_array);
  std::vector<relate_type>::~vector (&maxbb_type_array);
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  goto <bb 635>; [INV]

  <bb 634> :
  PTABLE_IS_NULL.1724_731 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1724_731;

  <bb 635> :
  _732 = table_temp->swap_type;
  _733 = (unsigned int) _732;
  FUNCITON_THREAD.1725_734 = FUNCITON_THREAD;
  if (_733 == FUNCITON_THREAD.1725_734)
    goto <bb 636>; [INV]
  else
    goto <bb 647>; [INV]

  <bb 636> :
  if (is_pthread_detched == 0)
    goto <bb 637>; [INV]
  else
    goto <bb 644>; [INV]

  <bb 637> :
  if (find_pthread_join == 0)
    goto <bb 638>; [INV]
  else
    goto <bb 641>; [INV]

  <bb 638> :
  stderr.1726_735 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1726_735);

  <bb 639> :
  stderr.1727_736 = stderr;
  __builtin_fwrite ("\x1b[40;31m    pthread is JOINABLE but no pthread_join stmt \x1b[0m\n", 1, 62, stderr.1727_736);

  <bb 640> :
  stderr.1728_737 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1728_737);
  goto <bb 647>; [INV]

  <bb 641> :
  stderr.1729_738 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1729_738);

  <bb 642> :
  stderr.1730_739 = stderr;
  __builtin_fwrite ("\x1b[40;32m    pthread is JOINABLE and no memory leak   \x1b[0m\n", 1, 58, stderr.1730_739);

  <bb 643> :
  stderr.1731_740 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1731_740);
  goto <bb 647>; [INV]

  <bb 644> :
  stderr.1732_741 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1732_741);

  <bb 645> :
  stderr.1733_742 = stderr;
  __builtin_fwrite ("\x1b[40;32m    pthread is DETACHED and no memory leak  \x1b[0m\n", 1, 57, stderr.1733_742);

  <bb 646> :
  stderr.1734_743 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1734_743);

  <bb 647> :
  ptable_type.1735_744 = (unsigned int) ptable_type;
  IS_MALLOC_FUCNTION.1736_745 = IS_MALLOC_FUCNTION;
  if (ptable_type.1735_744 == IS_MALLOC_FUCNTION.1736_745)
    goto <bb 648>; [INV]
  else
    goto <bb 650>; [INV]

  <bb 648> :
  find_mallocstmt.1737_746 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1738_747 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1737_746 == IS_OTHRER_FUCNTION.1738_747)
    goto <bb 649>; [INV]
  else
    goto <bb 650>; [INV]

  <bb 649> :
  IS_MALLOC_FUCNTION.1739_748 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1739_748;

  <bb 650> :
  Looserulesfree.1740_749 = Looserulesfree;
  if (Looserulesfree.1740_749 != 0)
    goto <bb 651>; [INV]
  else
    goto <bb 659>; [INV]

  <bb 651> :
  stderr.1741_750 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1741_750);

  <bb 652> :
  stderr.1742_751 = stderr;
  fprintf (stderr.1742_751, "\x1b[40;35m  \tLooserules free count:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 653> :
  find_freestmt.1743_752 = find_freestmt;
  stderr.1744_753 = stderr;
  fprintf (stderr.1744_753, "\x1b[40;31m  \tfree count:%d \x1b[0m\n", find_freestmt.1743_752);

  <bb 654> :
  if (find_Looserulesfreestmt > 1)
    goto <bb 655>; [INV]
  else
    goto <bb 656>; [INV]

  <bb 655> :
  stderr.1745_754 = stderr;
  fprintf (stderr.1745_754, "\x1b[40;31m  \tpossible double free [Looserules]:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 656> :
  find_freestmt.1746_755 = find_freestmt;
  if (find_freestmt.1746_755 > 1)
    goto <bb 657>; [INV]
  else
    goto <bb 658>; [INV]

  <bb 657> :
  find_freestmt.1747_756 = find_freestmt;
  stderr.1748_757 = stderr;
  fprintf (stderr.1748_757, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1747_756);

  <bb 658> :
  stderr.1749_758 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1749_758);

  <bb 659> :
  find_mallocstmt.1750_759 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1751_760 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1750_759 == IS_MALLOC_FUCNTION.1751_760)
    goto <bb 660>; [INV]
  else
    goto <bb 674>; [INV]

  <bb 660> :
  find_freestmt.1752_761 = find_freestmt;
  if (find_freestmt.1752_761 == 0)
    goto <bb 661>; [INV]
  else
    goto <bb 664>; [INV]

  <bb 661> :
  stderr.1753_762 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1753_762);

  <bb 662> :
  stderr.1754_763 = stderr;
  __builtin_fwrite ("\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n", 1, 51, stderr.1754_763);

  <bb 663> :
  stderr.1755_764 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1755_764);
  goto <bb 707>; [INV]

  <bb 664> :
  find_freestmt.1756_765 = find_freestmt;
  if (find_freestmt.1756_765 == 1)
    goto <bb 665>; [INV]
  else
    goto <bb 670>; [INV]

  <bb 665> :
  stderr.1757_766 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1757_766);

  <bb 666> :
  if (find_phistmt == 1)
    goto <bb 667>; [INV]
  else
    goto <bb 668>; [INV]

  <bb 667> :
  stderr.1758_767 = stderr;
  __builtin_fwrite ("\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n", 1, 68, stderr.1758_767);
  goto <bb 669>; [INV]

  <bb 668> :
  stderr.1759_768 = stderr;
  __builtin_fwrite ("\x1b[40;32m   No memory leak, need more check!  \x1b[0m\n", 1, 50, stderr.1759_768);

  <bb 669> :
  stderr.1760_769 = stderr;
  __builtin_fwrite ("\n======================================================================\n\n", 1, 73, stderr.1760_769);
  goto <bb 707>; [INV]

  <bb 670> :
  find_freestmt.1761_770 = find_freestmt;
  if (find_freestmt.1761_770 > 1)
    goto <bb 671>; [INV]
  else
    goto <bb 707>; [INV]

  <bb 671> :
  stderr.1762_771 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1762_771);

  <bb 672> :
  find_freestmt.1763_772 = find_freestmt;
  stderr.1764_773 = stderr;
  fprintf (stderr.1764_773, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1763_772);

  <bb 673> :
  stderr.1765_774 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1765_774);
  goto <bb 707>; [INV]

  <bb 674> :
  find_mallocstmt.1766_775 = (unsigned int) find_mallocstmt;
  IS_HEAP_FUCNTION.1767_776 = IS_HEAP_FUCNTION;
  if (find_mallocstmt.1766_775 == IS_HEAP_FUCNTION.1767_776)
    goto <bb 675>; [INV]
  else
    goto <bb 678>; [INV]

  <bb 675> :
  stderr.1768_777 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1768_777);

  <bb 676> :
  stderr.1769_778 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tthis fucntion return possible is heap-object \x1b[0m\n", 1, 60, stderr.1769_778);

  <bb 677> :
  stderr.1770_779 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1770_779);
  goto <bb 707>; [INV]

  <bb 678> :
  find_mallocstmt.1771_780 = (unsigned int) find_mallocstmt;
  PTABLE_IS_NULL.1772_781 = PTABLE_IS_NULL;
  if (find_mallocstmt.1771_780 == PTABLE_IS_NULL.1772_781)
    goto <bb 679>; [INV]
  else
    goto <bb 686>; [INV]

  <bb 679> :
  stderr.1773_782 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1773_782);

  <bb 680> :
  stderr.1774_783 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tCan\'t find this fucntion in Pointer table \x1b[0m\n", 1, 57, stderr.1774_783);

  <bb 681> :
  stderr.1775_784 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tPossiable no other stmt relate with this stmt \x1b[0m\n", 1, 61, stderr.1775_784);

  <bb 682> :
  _785 = table_temp->last_stmt;
  D.254864 = empty_body_p (_785);

  <bb 683> :
  retval.1776 = D.254864;
  if (retval.1776 != 0)
    goto <bb 684>; [INV]
  else
    goto <bb 685>; [INV]

  <bb 684> :
  _786 = table_temp->last_stmt;
  _787 = gimple_location_safe (_786);
  warning_at (_787, 0, "use location");

  <bb 685> :
  stderr.1777_788 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1777_788);
  goto <bb 707>; [INV]

  <bb 686> :
  stderr.1778_789 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1778_789);

  <bb 687> :
  stderr.1779_790 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tthis stmt need double check \x1b[0m\n", 1, 43, stderr.1779_790);

  <bb 688> :
  find_retheapstmt.1780_791 = find_retheapstmt;
  if (find_retheapstmt.1780_791 > 0)
    goto <bb 689>; [INV]
  else
    goto <bb 706>; [INV]

  <bb 689> :
  find_freestmt.1781_792 = find_freestmt;
  if (find_freestmt.1781_792 > 2)
    goto <bb 690>; [INV]
  else
    goto <bb 694>; [INV]

  <bb 690> :
  stderr.1782_793 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1782_793);

  <bb 691> :
  stderr.1783_794 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1783_794);

  <bb 692> :
  find_freestmt.1784_795 = find_freestmt;
  stderr.1785_796 = stderr;
  fprintf (stderr.1785_796, "\x1b[40;31m  \tpossible double free :%d \x1b[0m\n", find_freestmt.1784_795);

  <bb 693> :
  stderr.1786_797 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1786_797);
  goto <bb 706>; [INV]

  <bb 694> :
  find_freestmt.1787_798 = find_freestmt;
  if (find_freestmt.1787_798 == 1)
    goto <bb 695>; [INV]
  else
    goto <bb 701>; [INV]

  <bb 695> :
  stderr.1788_799 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1788_799);

  <bb 696> :
  stderr.1789_800 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1789_800);

  <bb 697> :
  if (find_phistmt == 1)
    goto <bb 698>; [INV]
  else
    goto <bb 699>; [INV]

  <bb 698> :
  stderr.1790_801 = stderr;
  __builtin_fwrite ("\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n", 1, 68, stderr.1790_801);
  goto <bb 700>; [INV]

  <bb 699> :
  stderr.1791_802 = stderr;
  __builtin_fwrite ("\x1b[40;32m   Maybe you don\'t have memory leak.... need more checks  \x1b[0m\n", 1, 71, stderr.1791_802);

  <bb 700> :
  stderr.1792_803 = stderr;
  __builtin_fwrite ("\n======================================================================\n\n", 1, 73, stderr.1792_803);
  goto <bb 706>; [INV]

  <bb 701> :
  find_freestmt.1793_804 = find_freestmt;
  if (find_freestmt.1793_804 == 0)
    goto <bb 702>; [INV]
  else
    goto <bb 706>; [INV]

  <bb 702> :
  stderr.1794_805 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1794_805);

  <bb 703> :
  stderr.1795_806 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1795_806);

  <bb 704> :
  stderr.1796_807 = stderr;
  __builtin_fwrite ("\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n", 1, 51, stderr.1796_807);

  <bb 705> :
  stderr.1797_808 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1797_808);

  <bb 706> :
  stderr.1798_809 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1798_809);

  <bb 707> :
  std::vector<basic_block_def*>::~vector (&earlyend);
  finally_tmp.1800 = 1;

  <bb 708> :
  std::vector<free_type>::~vector (&free_array);
  if (finally_tmp.1800 == 1)
    goto <bb 709>; [INV]
  else
    goto <bb 711>; [INV]

  <bb 709> :
<L581>:

  <bb 710> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  goto <bb 712>; [INV]

  <bb 711> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  goto <bb 713>; [INV]

  <bb 712> :
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};

  <bb 713> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 714>; [INV]
  else
    goto <bb 715>; [INV]

  <bb 714> :
  iftmp.1799 = table_temp->target;
  goto <bb 716>; [INV]

  <bb 715> :
  iftmp.1799 = 0B;

  <bb 716> :
  t = iftmp.1799;

  <bb 717> :
  if (t != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 718>; [INV]

  <bb 718> :
  start = {CLOBBER};
  start2 = {CLOBBER};
  return;

  <bb 719> :
<L598>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 4

  <bb 720> :
<L599>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 3

  <bb 721> :
<L600>:
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 2

  <bb 722> :
<L601>:
  operator delete (D.201298, 48);
  resx 13

  <bb 723> :
<L602>:
  e2 = {CLOBBER};
  ei2 = {CLOBBER};
  resx 19

  <bb 724> :
<L603>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 18

  <bb 725> :
<L604>:
  relate_type = {CLOBBER};
  resx 22

  <bb 726> :
<L605>:
  free_type = {CLOBBER};
  resx 17

  <bb 727> :
<L606>:
  operator delete (D.201420, 48);
  resx 26

  <bb 728> :
<L607>:
  it_i = {CLOBBER};
  resx 25

  <bb 729> :
<L608>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 33

  <bb 730> :
<L609>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 32

  <bb 731> :
<L610>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 31

  <bb 732> :
<L611>:
  free_type = {CLOBBER};
  resx 40

  <bb 733> :
<L612>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 39

  <bb 734> :
<L613>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 38

  <bb 735> :
<L614>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 37

  <bb 736> :
<L615>:
  start = {CLOBBER};
  resx 45

  <bb 737> :
<L616>:
  function_relate_array::~function_relate_array (&maxbb_array);
  resx 16

  <bb 738> :
<L617>:
  std::vector<relate_type>::~vector (&maxbb_type_array);
  resx 15

  <bb 739> :
<L618>:
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  resx 12

  <bb 740> :
<L619>:
  std::vector<basic_block_def*>::~vector (&earlyend);
  resx 11

  <bb 741> :
<L620>:
  std::vector<free_type>::~vector (&free_array);
  resx 10

  <bb 742> :
<L621>:
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  resx 9

  <bb 743> :
<L622>:
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  resx 8

  <bb 744> :
<L623>:
  start = {CLOBBER};
  start2 = {CLOBBER};
  resx 1

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6201, decl_uid=170290, cgraph_uid=3177, symbol_order=3928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170298;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6199, decl_uid=169748, cgraph_uid=3174, symbol_order=3925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2Ev, funcdef_no=7552, decl_uid=169640, cgraph_uid=4184, symbol_order=4966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this);
  _1 = &this->D.169643;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2Ev, funcdef_no=8365, decl_uid=169418, cgraph_uid=4997, symbol_order=5783)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2Ev, funcdef_no=9158, decl_uid=169347, cgraph_uid=5790, symbol_order=6576)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8368, decl_uid=169590, cgraph_uid=5000, symbol_order=5786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7776, decl_uid=191734, cgraph_uid=4408, symbol_order=5190)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8724, decl_uid=191693, cgraph_uid=5356, symbol_order=6142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.254880;
  unsigned int D.254879;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.254879 = hash_table_higher_prime_index (size);
  size_prime_index = D.254879;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.254880 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.254880;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function ei_start_1 (_ZL10ei_start_1PP3vecIP8edge_def5va_gc8vl_embedE, funcdef_no=1666, decl_uid=75277, cgraph_uid=817, symbol_order=969)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_iterator ei_start_1 (struct vec * * ev)
{
  struct edge_iterator i;
  struct edge_iterator D.254881;

  <bb 2> :
  i.index = 0;
  i.container = ev;
  D.254881 = i;
  i = {CLOBBER};

  <bb 3> :
<L1>:
  return D.254881;

}



;; Function ei_next (_ZL7ei_nextP13edge_iterator, funcdef_no=1670, decl_uid=75328, cgraph_uid=821, symbol_order=973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ei_next (struct edge_iterator * i)
{
  <bb 2> :
  _1 = i->index;
  _2 = _1 + 1;
  i->index = _2;
  return;

}



;; Function ei_cond (_ZL7ei_cond13edge_iteratorPP8edge_def, funcdef_no=1674, decl_uid=75345, cgraph_uid=825, symbol_order=977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
bool ei_cond (struct edge_iterator ei, struct edge_def * * p)
{
  struct edge_def * D.254890;
  bool D.254889;
  bool D.254887;
  bool retval.1801;

  <bb 2> :
  D.254889 = ei_end_p (ei);
  _1 = D.254889;
  retval.1801 = ~_1;
  if (retval.1801 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.254890 = ei_edge (ei);
  _2 = D.254890;
  *p = _2;
  D.254887 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  *p = 0B;
  D.254887 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.254887;

}



;; Function ei_end_p (_ZL8ei_end_p13edge_iterator, funcdef_no=1668, decl_uid=75320, cgraph_uid=819, symbol_order=971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool ei_end_p (struct edge_iterator i)
{
  unsigned int D.254893;
  bool D.254891;

  <bb 2> :
  _1 = i.index;
  _2 = ei_container (i);
  D.254893 = vec_safe_length<edge_def*, va_gc> (_2);
  _3 = D.254893;
  D.254891 = _1 == _3;

  <bb 3> :
<L0>:
  return D.254891;

}



;; Function ei_container (_ZL12ei_container13edge_iterator, funcdef_no=1665, decl_uid=75274, cgraph_uid=816, symbol_order=968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vec * ei_container (struct edge_iterator i)
{
  struct vec * D.254894;

  <bb 2> :
  _1 = i.container;
  D.254894 = *_1;

  <bb 3> :
<L0>:
  return D.254894;

}



;; Function vec_safe_length<edge_def*, va_gc> (_Z15vec_safe_lengthIP8edge_def5va_gcEjPK3vecIT_T0_8vl_embedE, funcdef_no=6956, decl_uid=75252, cgraph_uid=3588, symbol_order=4367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int vec_safe_length<edge_def*, va_gc> (const struct vec * v)
{
  unsigned int iftmp.1802;
  unsigned int D.254896;

  <bb 2> :
  if (v != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1802 = vec<edge_def*, va_gc>::length (v);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1802 = 0;

  <bb 5> :
  D.254896 = iftmp.1802;

  <bb 6> :
<L3>:
  return D.254896;

}



;; Function vec<edge_def*, va_gc>::length (_ZNK3vecIP8edge_def5va_gc8vl_embedE6lengthEv, funcdef_no=7963, decl_uid=75146, cgraph_uid=4595, symbol_order=5377)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int vec<edge_def*, va_gc>::length (const struct vec * const this)
{
  unsigned int D.254902;

  <bb 2> :
  D.254902 = this->m_vecpfx.m_num;

  <bb 3> :
<L0>:
  return D.254902;

}



;; Function ei_edge (_ZL7ei_edge13edge_iterator, funcdef_no=1672, decl_uid=75335, cgraph_uid=823, symbol_order=975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * ei_edge (struct edge_iterator i)
{
  struct edge_def * D.254904;

  <bb 2> :
  _1 = ei_container (i);
  _2 = i.index;
  _3 = vec<edge_def*, va_gc>::operator[] (_1, _2);
  D.254904 = *_3;

  <bb 3> :
<L0>:
  return D.254904;

}



;; Function vec<edge_def*, va_gc>::operator[] (_ZN3vecIP8edge_def5va_gc8vl_embedEixEj, funcdef_no=6957, decl_uid=75165, cgraph_uid=3589, symbol_order=4368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * & vec<edge_def*, va_gc>::operator[] (struct vec * const this, unsigned int ix)
{
  struct edge_def * & D.254906;

  <bb 2> :
  D.254906 = &this->m_vecdata[ix];

  <bb 3> :
<L0>:
  return D.254906;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7784, decl_uid=201465, cgraph_uid=4416, symbol_order=5198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (const struct __normal_iterator * const this)
{
  struct relate_type * D.254908;

  <bb 2> :
  D.254908 = this->_M_current;

  <bb 3> :
<L0>:
  return D.254908;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7783, decl_uid=201467, cgraph_uid=4415, symbol_order=5197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.254910;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.254910 = this;

  <bb 3> :
<L0>:
  return D.254910;

}



;; Function __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIP11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7782, decl_uid=201565, cgraph_uid=4414, symbol_order=5196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.254912;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.254912 = _2 != _4;

  <bb 3> :
<L0>:
  return D.254912;

}



;; Function hash_map<tree_node*, function_relate_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6790, decl_uid=201581, cgraph_uid=3421, symbol_order=4195)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7786, decl_uid=191703, cgraph_uid=4418, symbol_order=5200)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.254927;
  bool D.254926;
  size_t i;
  bool iftmp.1804;
  bool retval.1803;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.254926 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.254926;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.254927 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.254927;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1804 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1804 = 0;

  <bb 7> :
  retval.1803 = iftmp.1804;
  if (retval.1803 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_relate_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8732, decl_uid=191477, cgraph_uid=5364, symbol_order=6150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9553, decl_uid=227122, cgraph_uid=6185, symbol_order=6971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_relate_array::~function_relate_array (_2);
  return;

}



;; Function std::vector<relate_type>::operator[] (_ZNSt6vectorI11relate_typeSaIS0_EEixEm, funcdef_no=7779, decl_uid=179447, cgraph_uid=4411, symbol_order=5193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<relate_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.254928;

  <bb 2> :
  _1 = this->D.179794._M_impl.D.179139._M_start;
  _2 = __n * 48;
  D.254928 = _1 + _2;

  <bb 3> :
<L0>:
  return D.254928;

}



;; Function std::vector<free_type>::at (_ZNSt6vectorI9free_typeSaIS0_EE2atEm, funcdef_no=7788, decl_uid=176318, cgraph_uid=4420, symbol_order=5202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::at (struct vector * const this, size_type __n)
{
  struct value_type & D.254930;

  <bb 2> :
  std::vector<free_type>::_M_range_check (this, __n);
  D.254930 = std::vector<free_type>::operator[] (this, __n);

  <bb 3> :
<L0>:
  return D.254930;

}



;; Function std::vector<free_type>::_M_range_check (_ZNKSt6vectorI9free_typeSaIS0_EE14_M_range_checkEm, funcdef_no=8734, decl_uid=176315, cgraph_uid=5366, symbol_order=6152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
void std::vector<free_type>::_M_range_check (const struct vector * const this, size_type __n)
{
  bool retval.1805;

  <bb 2> :
  _1 = std::vector<free_type>::size (this);
  retval.1805 = __n >= _1;
  if (retval.1805 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = std::vector<free_type>::size (this);
  std::__throw_out_of_range_fmt ("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, _2);

  <bb 4> :
  return;

}



;; Function std::vector<basic_block_def*>::~vector (_ZNSt6vectorIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7773, decl_uid=170295, cgraph_uid=4405, symbol_order=5187)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170298;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.170298._M_impl.D.169643._M_finish;
  _4 = this->D.170298._M_impl.D.169643._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_4, _3, _2);
  _5 = &this->D.170298;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<basic_block_def**, basic_block_def*> (_ZSt8_DestroyIPP15basic_block_defS1_EvT_S3_RSaIT0_E, funcdef_no=8722, decl_uid=214394, cgraph_uid=5354, symbol_order=6140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct allocator & D.227096)
{
  <bb 2> :
  std::_Destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy<basic_block_def**> (_ZSt8_DestroyIPP15basic_block_defEvT_S3_, funcdef_no=9551, decl_uid=227098, cgraph_uid=6183, symbol_order=6969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<basic_block_def**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP15basic_block_defEEvT_S5_, funcdef_no=10146, decl_uid=235467, cgraph_uid=6778, symbol_order=7568)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<basic_block_def**> (struct basic_block_def * * D.240403, struct basic_block_def * * D.240404)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7558, decl_uid=169753, cgraph_uid=4190, symbol_order=4972)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.169643._M_end_of_storage;
  _2 = this->_M_impl.D.169643._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.169643._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implD2Ev, funcdef_no=6197, decl_uid=169690, cgraph_uid=3171, symbol_order=3922)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<basic_block_def*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<basic_block_def*>::~allocator (_ZNSaIP15basic_block_defED2Ev, funcdef_no=7555, decl_uid=169423, cgraph_uid=4187, symbol_order=4969)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defED2Ev, funcdef_no=8371, decl_uid=169352, cgraph_uid=5003, symbol_order=5789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function record_fucntion (_Z15record_fucntionP11cgraph_node, funcdef_no=6792, decl_uid=186982, cgraph_uid=3456, symbol_order=4230)

Removing basic block 50
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
;;
;; Loop 1
;;  header 61, latch 60
;;  depth 1, outer 0
;;  nodes: 61 60 59 57 58 6 11 10 9 8 7 5 4 56 55 54 53 30 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32 29 13 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14 12
;;
;; Loop 3
;;  header 53, latch 52
;;  depth 2, outer 1
;;  nodes: 53 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 4
;;  header 51, latch 50
;;  depth 3, outer 3
;;  nodes: 51 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 5
;;  header 45, latch 44
;;  depth 4, outer 4
;;  nodes: 45 44 42 43 41 46
;;
;; Loop 2
;;  header 29, latch 28
;;  depth 2, outer 1
;;  nodes: 29 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14
;;
;; Loop 6
;;  header 23, latch 22
;;  depth 3, outer 2
;;  nodes: 23 22 20 21
;; 2 succs { 72 3 }
;; 3 succs { 61 }
;; 4 succs { 71 5 }
;; 5 succs { 6 7 }
;; 6 succs { 58 }
;; 7 succs { 71 8 }
;; 8 succs { 71 9 }
;; 9 succs { 10 12 }
;; 10 succs { 71 11 }
;; 11 succs { 58 }
;; 12 succs { 69 13 }
;; 13 succs { 29 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 69 18 }
;; 18 succs { 19 28 }
;; 19 succs { 23 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 20 24 }
;; 24 succs { 25 27 }
;; 25 succs { 63 26 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 29 }
;; 29 succs { 14 30 }
;; 30 succs { 53 }
;; 31 succs { 51 }
;; 32 succs { 68 33 }
;; 33 succs { 34 50 }
;; 34 succs { 68 35 }
;; 35 succs { 36 50 }
;; 36 succs { 67 37 }
;; 37 succs { 66 38 }
;; 38 succs { 66 39 }
;; 39 succs { 40 48 }
;; 40 succs { 45 }
;; 41 succs { 42 43 }
;; 42 succs { 44 }
;; 43 succs { 44 }
;; 44 succs { 65 45 }
;; 45 succs { 65 46 }
;; 46 succs { 41 47 }
;; 47 succs { 48 }
;; 48 succs { 66 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 32 52 }
;; 52 succs { 53 }
;; 53 succs { 31 54 }
;; 54 succs { 69 55 }
;; 55 succs { 69 56 }
;; 56 succs { 69 57 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 72 60 }
;; 60 succs { 61 }
;; 61 succs { 4 62 }
;; 62 succs { 1 }
;; 63 succs { 64 }
;; 64 succs { 69 }
;; 65 succs { 66 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 }
;; 72 succs { }
void record_fucntion (struct cgraph_node * node)
{
  struct cgraph_node * D.254992;
  struct function * D.254986;
  bool D.254981;
  union tree_node * D.254980;
  union tree_node * D.254979;
  tree_code D.254978;
  tree_code D.254977;
  struct cgraph_node * D.254974;
  struct function * D.254973;
  bool D.254972;
  struct cgraph_node * D.254971;
  int init;
  struct edge_iterator ei;
  struct edge_def * e;
  struct symbolicinfo symbolicinfo;
  tree_code code;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_path path_type;
  struct iterator it_i;
  int find;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  struct vector function_path_array;
  struct function_path_array fun_array;
  availability avail;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.1823;
  bool retval.1821;
  bool retval.1815;
  bool retval.1814;
  struct iterator D.201951;
  bool retval.1811;
  bool retval.1810;
  struct cgraph_node * iftmp.1809;
  bool retval.1807;

  <bb 2> :
  symtab.1806_1 = symtab;
  D.254971 = symbol_table::first_defined_function (symtab.1806_1);

  <bb 3> :
  node = D.254971;
  goto <bb 61>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.254972 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.254972;
  retval.1807 = ~_3;
  if (retval.1807 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 7> :
  D.254973 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.254973;
  push_cfun (_4);

  <bb 9> :
  cfun.1808_5 = cfun;
  if (cfun.1808_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 12> :
  function_path_array::function_path_array (&fun_array);
  std::vector<function_path>::vector (&function_path_array);
  std::vector<function_path>::operator= (&fun_array.function_path_array, &function_path_array);

  <bb 13> :
  e = node->callees;
  goto <bb 29>; [INV]

  <bb 14> :
  _6 = e->caller;
  _7 = _6->inlined_to;
  if (_7 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _8 = e->caller;
  iftmp.1809 = _8->inlined_to;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1809 = e->caller;

  <bb 17> :
  caller = iftmp.1809;
  _9 = e->callee;
  D.254974 = cgraph_node::ultimate_alias_target (_9, &avail, caller);

  <bb 18> :
  callee = D.254974;
  if (callee != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 19> :
  find = 0;
  it_i._M_current = 0B;
  it_i = std::vector<function_path>::begin (&fun_array.function_path_array);
  goto <bb 23>; [INV]

  <bb 20> :
  _10 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (&it_i);
  _11 = _10->next;
  _12 = callee->D.97512.decl;
  retval.1810 = _11 == _12;
  if (retval.1810 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  find = 1;

  <bb 22> :
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (&it_i);

  <bb 23> :
  D.201951 = std::vector<function_path>::end (&fun_array.function_path_array);
  retval.1811 = __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (&it_i, &D.201951);
  D.201951 = {CLOBBER};
  if (retval.1811 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  path_type.cgnext = callee;
  _13 = callee->D.97512.decl;
  path_type.next = _13;
  std::vector<function_path>::push_back (&fun_array.function_path_array, &path_type);

  <bb 26> :
  path_type = {CLOBBER};

  <bb 27> :
  it_i = {CLOBBER};

  <bb 28> :
  e = e->next_callee;

  <bb 29> :
  if (e != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  cfun.1812_14 = cfun;
  _15 = cfun.1812_14->cfg;
  _16 = _15->x_entry_block_ptr;
  _17 = _16->next_bb;
  bb = _17;
  goto <bb 53>; [INV]

  <bb 31> :
  bb.1813_18 = bb;
  gsi = gsi_start_bb (bb.1813_18); [return slot optimization]
  goto <bb 51>; [INV]

  <bb 32> :
  gc = gsi_stmt (gsi);
  D.254977 = gimple_cond_code (gc);

  <bb 33> :
  _19 = D.254977;
  retval.1814 = _19 != 0;
  if (retval.1814 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 34> :
  D.254978 = gimple_cond_code (gc);

  <bb 35> :
  code = D.254978;
  _20 = is_gimple_assign (gc);
  retval.1815 = ~_20;
  if (retval.1815 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 36> :
  std::vector<basic_block_def*>::push_back (&symbolicExecution, &bb);

  <bb 37> :
  symbolicinfo::symbolicinfo (&symbolicinfo);
  symbolicinfo.cond_stmt = gc;
  D.254979 = gimple_cond_lhs (gc);

  <bb 38> :
  _21 = D.254979;
  symbolicinfo.cond_lhs = _21;
  D.254980 = gimple_cond_rhs (gc);

  <bb 39> :
  _22 = D.254980;
  symbolicinfo.cond_rhs = _22;
  symbolicinfo.node = node;
  cfun.1816_23 = cfun;
  _24 = cfun.1816_23->cfg;
  _25 = _24->x_exit_block_ptr;
  _26 = _25->prev_bb;
  bb.1817_27 = bb;
  if (_26 != bb.1817_27)
    goto <bb 40>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 40> :
  init = 0;
  bb.1818_28 = bb;
  _29 = &bb.1818_28->succs;
  ei = ei_start_1 (_29);
  goto <bb 45>; [INV]

  <bb 41> :
  if (init == 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  e.1819_30 = e;
  _31 = e.1819_30->dest;
  symbolicinfo.cond_truebranch = _31;
  goto <bb 44>; [INV]

  <bb 43> :
  e.1820_32 = e;
  _33 = e.1820_32->dest;
  symbolicinfo.cond_falsebranch = _33;

  <bb 44> :
  init = init + 1;
  ei_next (&ei);

  <bb 45> :
  D.254981 = ei_cond (ei, &e);

  <bb 46> :
  retval.1821 = D.254981;
  if (retval.1821 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 48> :
  syminfo.1822_34 = syminfo;
  hash_map<basic_block_def*, symbolicinfo>::put (syminfo.1822_34, &bb, &symbolicinfo);

  <bb 49> :
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  symbolicinfo = {CLOBBER};

  <bb 50> :
  gsi_next (&gsi);

  <bb 51> :
  _35 = gsi_end_p (gsi);
  retval.1823 = ~_35;
  if (retval.1823 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  gsi = {CLOBBER};
  bb.1824_36 = bb;
  _37 = bb.1824_36->next_bb;
  bb = _37;

  <bb 53> :
  cfun.1825_38 = cfun;
  _39 = cfun.1825_38->cfg;
  _40 = _39->x_exit_block_ptr;
  bb.1826_41 = bb;
  if (_40 != bb.1826_41)
    goto <bb 31>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  function_path_collect.1827_42 = function_path_collect;
  D.254986 = cgraph_node::get_fun (node);

  <bb 55> :
  _43 = D.254986;
  _44 = &_43->decl;
  hash_map<tree_node*, function_path_array>::put (function_path_collect.1827_42, _44, &fun_array);

  <bb 56> :
  pop_cfun ();

  <bb 57> :
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  goto <bb 59>; [INV]

  <bb 58> :
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};

  <bb 59> :
  symtab.1828_45 = symtab;
  D.254992 = symbol_table::next_defined_function (symtab.1828_45, node);

  <bb 60> :
  node = D.254992;

  <bb 61> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 62> :
  bb = {CLOBBER};
  return;

  <bb 63> :
<L49>:
  path_type = {CLOBBER};
  resx 7

  <bb 64> :
<L50>:
  it_i = {CLOBBER};
  resx 5

  <bb 65> :
<L51>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 13

  <bb 66> :
<L52>:
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  resx 12

  <bb 67> :
<L53>:
  symbolicinfo = {CLOBBER};
  resx 11

  <bb 68> :
<L54>:
  gsi = {CLOBBER};
  resx 10

  <bb 69> :
<L55>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 4

  <bb 70> :
<L56>:
  function_path_array::~function_path_array (&fun_array);
  resx 3

  <bb 71> :
<L57>:
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  resx 2

  <bb 72> :
<L58>:
  bb = {CLOBBER};
  resx 1

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2Ev, funcdef_no=6804, decl_uid=192236, cgraph_uid=3435, symbol_order=4209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  this->funtion_type_num = 0;
  _1 = &this->function_path_array;
  std::vector<function_path>::vector (_1);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2Ev, funcdef_no=6802, decl_uid=174547, cgraph_uid=3432, symbol_order=4206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174555;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2Ev, funcdef_no=6800, decl_uid=174005, cgraph_uid=3429, symbol_order=4203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2Ev, funcdef_no=7790, decl_uid=173897, cgraph_uid=4422, symbol_order=5204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this);
  _1 = &this->D.173900;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2Ev, funcdef_no=8736, decl_uid=173675, cgraph_uid=5368, symbol_order=6154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2Ev, funcdef_no=9555, decl_uid=173604, cgraph_uid=6187, symbol_order=6973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::operator= (_ZNSt6vectorI13function_pathSaIS0_EEaSERKS2_, funcdef_no=7798, decl_uid=174133, cgraph_uid=4432, symbol_order=5214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<function_path>::operator= (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.255027;
  struct function_path * __tmp;
  const size_type __xlen;
  struct vector & D.255025;
  struct __normal_iterator D.255022;
  struct __normal_iterator D.255021;
  struct __normal_iterator D.255020;
  struct __normal_iterator D.255019;
  struct __normal_iterator D.255018;
  bool retval.1833;
  struct __normal_iterator D.255013;
  struct __normal_iterator D.255012;
  bool retval.1832;
  bool iftmp.1831;
  bool retval.1830;
  bool retval.1829;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1829 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ();
  if (retval.1829 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.174555;
  _4 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.174555;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1831 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1831 = 0;

  <bb 8> :
  retval.1830 = iftmp.1831;
  if (retval.1830 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<function_path>::clear (this);
  _8 = &this->D.174555;
  _9 = this->D.174555._M_impl.D.173900._M_end_of_storage;
  _10 = this->D.174555._M_impl.D.173900._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.174555._M_impl.D.173900._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_8, _14, _13);
  this->D.174555._M_impl.D.173900._M_start = 0B;
  this->D.174555._M_impl.D.173900._M_finish = 0B;
  this->D.174555._M_impl.D.173900._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.174555;
  _16 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.174555;
  _18 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<function_path> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<function_path>::size (__x);
  _19 = std::vector<function_path>::capacity (this);
  retval.1832 = __xlen > _19;
  if (retval.1832 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.255012 = std::vector<function_path>::end (__x);
  D.255013 = std::vector<function_path>::begin (__x);
  D.255027 = std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (this, __xlen, D.255013, D.255012);
  __tmp = D.255027;
  _20 = &this->D.174555;
  _21 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_20);
  _22 = this->D.174555._M_impl.D.173900._M_finish;
  _23 = this->D.174555._M_impl.D.173900._M_start;
  std::_Destroy<function_path*, function_path> (_23, _22, _21);
  _24 = &this->D.174555;
  _25 = this->D.174555._M_impl.D.173900._M_end_of_storage;
  _26 = this->D.174555._M_impl.D.173900._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.174555._M_impl.D.173900._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_24, _30, _29);
  this->D.174555._M_impl.D.173900._M_start = __tmp;
  _31 = this->D.174555._M_impl.D.173900._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.174555._M_impl.D.173900._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<function_path>::size (this);
  retval.1833 = __xlen <= _34;
  if (retval.1833 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.174555;
  _36 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_35);
  D.255018 = std::vector<function_path>::end (this);
  D.255019 = std::vector<function_path>::begin (this);
  D.255020 = std::vector<function_path>::end (__x);
  D.255021 = std::vector<function_path>::begin (__x);
  D.255022 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.255021, D.255020, D.255019);
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (D.255022, D.255018, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.174555._M_impl.D.173900._M_start;
  _38 = __x->D.174555._M_impl.D.173900._M_start;
  _39 = std::vector<function_path>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.174555._M_impl.D.173900._M_start;
  std::copy<function_path*, function_path*> (_42, _41, _37);
  _43 = &this->D.174555;
  _44 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_43);
  _45 = this->D.174555._M_impl.D.173900._M_finish;
  _46 = __x->D.174555._M_impl.D.173900._M_finish;
  _47 = __x->D.174555._M_impl.D.173900._M_start;
  _48 = std::vector<function_path>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.174555._M_impl.D.173900._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.174555._M_impl.D.173900._M_finish = _53;

  <bb 17> :
  D.255025 = this;

  <bb 18> :
<L19>:
  return D.255025;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7799, decl_uid=173767, cgraph_uid=4430, symbol_order=5212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ()
{
  bool D.255028;

  <bb 2> :
  D.255028 = 0;

  <bb 3> :
<L0>:
  return D.255028;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E15_S_always_equalEv, funcdef_no=7800, decl_uid=173770, cgraph_uid=4431, symbol_order=5213)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ()
{
  bool D.255030;

  <bb 2> :
  D.255030 = 1;

  <bb 3> :
<L0>:
  return D.255030;

}



;; Function std::operator!= (_ZStneRKSaI13function_pathES2_, funcdef_no=8745, decl_uid=173653, cgraph_uid=5377, symbol_order=6163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.227145, const struct allocator & D.227146)
{
  bool D.255032;

  <bb 2> :
  D.255032 = 0;

  <bb 3> :
<L0>:
  return D.255032;

}



;; Function std::vector<function_path>::clear (_ZNSt6vectorI13function_pathSaIS0_EE5clearEv, funcdef_no=8746, decl_uid=174285, cgraph_uid=5378, symbol_order=6164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.174555._M_impl.D.173900._M_start;
  std::vector<function_path>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<function_path>::_M_erase_at_end (_ZNSt6vectorI13function_pathSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9558, decl_uid=174413, cgraph_uid=6190, symbol_order=6976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<function_path>::_M_erase_at_end (struct vector * const this, struct function_path * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.174555._M_impl.D.173900._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.174555;
  _5 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_4);
  _6 = this->D.174555._M_impl.D.173900._M_finish;
  std::_Destroy<function_path*, function_path> (__pos, _6, _5);
  this->D.174555._M_impl.D.173900._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<function_path> > (_ZSt15__alloc_on_copyISaI13function_pathEEvRT_RKS2_, funcdef_no=8747, decl_uid=214492, cgraph_uid=5379, symbol_order=6165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<function_path> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::capacity (_ZNKSt6vectorI13function_pathSaIS0_EE8capacityEv, funcdef_no=8748, decl_uid=174201, cgraph_uid=5380, symbol_order=6166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::capacity (const struct vector * const this)
{
  size_type D.255037;

  <bb 2> :
  _1 = this->D.174555._M_impl.D.173900._M_end_of_storage;
  _2 = this->D.174555._M_impl.D.173900._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.255037 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255037;

}



;; Function std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZNSt6vectorI13function_pathSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8749, decl_uid=214499, cgraph_uid=5381, symbol_order=6167)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct function_path * std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct function_path * D.255041;
  struct function_path * __result;
  struct function_path * D.255039;

  <bb 2> :
  _1 = &this->D.174555;
  D.255041 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_1, __n);
  __result = D.255041;
  _2 = &this->D.174555;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (__first, __last, __result, _3);

  <bb 3> :
  D.255039 = __result;

  <bb 4> :
<L0>:
  return D.255039;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.174555;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8750, decl_uid=214507, cgraph_uid=5382, symbol_order=6168)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.255047;
  struct __normal_iterator D.255046;
  struct __normal_iterator D.255045;

  <bb 2> :
  D.255046 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.255047 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.255045 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.255047, D.255046, __result);

  <bb 3> :
<L0>:
  return D.255045;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9561, decl_uid=227184, cgraph_uid=6194, symbol_order=6980)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct function_path * D.255051;
  struct __normal_iterator D.255049;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__result);
  _2 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.255051 = std::__copy_move_a1<false, const function_path*, function_path*> (_3, _2, _1);
  _4 = D.255051;
  D.255049 = std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (__result, _4);

  <bb 3> :
<L0>:
  return D.255049;

}



;; Function std::__niter_base<function_path*, std::vector<function_path> > (_ZSt12__niter_baseIP13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10151, decl_uid=235649, cgraph_uid=6783, symbol_order=7573)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  struct function_path * D.255052;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__it);
  D.255052 = *_1;

  <bb 3> :
<L0>:
  return D.255052;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8757, decl_uid=201889, cgraph_uid=5389, symbol_order=6175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * const & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  struct function_path * const & D.255054;

  <bb 2> :
  D.255054 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255054;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10153, decl_uid=235656, cgraph_uid=6785, symbol_order=7575)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __from, struct function_path * __res)
{
  struct __normal_iterator D.255056;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.255056 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.255056;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10614, decl_uid=201880, cgraph_uid=7246, symbol_order=8036)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct function_path * const D.243655;
  struct __normal_iterator D.243656;
  struct __normal_iterator D.255058;

  <bb 2> :
  _1 = this->_M_current;
  __n.1834_2 = (long unsigned int) __n;
  _3 = __n.1834_2 * 24;
  _4 = _1 + _3;
  D.243655 = _4;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.243656, &D.243655);
  D.255058 = D.243656;
  D.243656 = {CLOBBER};
  D.243655 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.255058;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8755, decl_uid=201902, cgraph_uid=5387, symbol_order=6173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8751, decl_uid=214513, cgraph_uid=5383, symbol_order=6169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.227213)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9563, decl_uid=227215, cgraph_uid=6195, symbol_order=6981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10154, decl_uid=235680, cgraph_uid=6786, symbol_order=7576)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator D.240431, struct __normal_iterator D.240432)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<function_path*, function_path*> (_ZSt4copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=8752, decl_uid=214521, cgraph_uid=5384, symbol_order=6170)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255064;
  struct function_path * D.255062;

  <bb 2> :
  _1 = std::__miter_base<function_path*> (__last);
  _2 = std::__miter_base<function_path*> (__first);
  D.255064 = std::__copy_move_a<false, function_path*, function_path*> (_2, _1, __result);
  D.255062 = D.255064;

  <bb 3> :
<L0>:
  return D.255062;

}



;; Function std::__miter_base<function_path*> (_ZSt12__miter_baseIP13function_pathET_S2_, funcdef_no=9564, decl_uid=227231, cgraph_uid=6196, symbol_order=6982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__miter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.255065;

  <bb 2> :
  D.255065 = __it;

  <bb 3> :
<L0>:
  return D.255065;

}



;; Function std::__copy_move_a<false, function_path*, function_path*> (_ZSt13__copy_move_aILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=9565, decl_uid=227233, cgraph_uid=6197, symbol_order=6983)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255069;
  struct function_path * D.255067;

  <bb 2> :
  __result.1835_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.1835_1);
  _3 = std::__niter_base<function_path*> (__last);
  _4 = std::__niter_base<function_path*> (__first);
  D.255069 = std::__copy_move_a1<false, function_path*, function_path*> (_4, _3, _2);
  _5 = D.255069;
  D.255067 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255067;

}



;; Function std::__copy_move_a1<false, function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10156, decl_uid=235691, cgraph_uid=6788, symbol_order=7578)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255072;
  struct function_path * D.255070;

  <bb 2> :
  D.255072 = std::__copy_move_a2<false, function_path*, function_path*> (__first, __last, __result);
  D.255070 = D.255072;

  <bb 3> :
<L0>:
  return D.255070;

}



;; Function std::__copy_move_a2<false, function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10615, decl_uid=240440, cgraph_uid=7247, symbol_order=8037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255073;

  <bb 2> :
  D.255073 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255073;

}



;; Function std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_ZSt22__uninitialized_copy_aIP13function_pathS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8753, decl_uid=214525, cgraph_uid=5385, symbol_order=6171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<function_path*, function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.227240)
{
  struct function_path * D.255077;
  struct function_path * D.255075;

  <bb 2> :
  D.255077 = std::uninitialized_copy<function_path*, function_path*> (__first, __last, __result);
  D.255075 = D.255077;

  <bb 3> :
<L0>:
  return D.255075;

}



;; Function std::uninitialized_copy<function_path*, function_path*> (_ZSt18uninitialized_copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=9566, decl_uid=227242, cgraph_uid=6198, symbol_order=6984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255080;
  const bool __assignable;
  struct function_path * D.255078;

  <bb 2> :
  __assignable = 1;
  D.255080 = std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (__first, __last, __result);
  D.255078 = D.255080;

  <bb 3> :
<L0>:
  return D.255078;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP13function_pathS3_EET0_T_S5_S4_, funcdef_no=10158, decl_uid=235729, cgraph_uid=6790, symbol_order=7580)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255083;
  struct function_path * D.255081;

  <bb 2> :
  D.255083 = std::copy<function_path*, function_path*> (__first, __last, __result);
  D.255081 = D.255083;

  <bb 3> :
<L0>:
  return D.255081;

}



;; Function cgraph_node::ultimate_alias_target (_ZN11cgraph_node21ultimate_alias_targetEP12availabilityP11symtab_node, funcdef_no=2586, decl_uid=97088, cgraph_uid=1723, symbol_order=1883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct cgraph_node * cgraph_node::ultimate_alias_target (struct cgraph_node * const this, availability * availability, struct symtab_node * ref)
{
  struct cgraph_node * D.255092;
  struct symtab_node * D.255091;
  struct cgraph_node * n;
  struct cgraph_node * D.255089;

  <bb 2> :
  _1 = &this->D.97512;
  D.255091 = symtab_node::ultimate_alias_target (_1, availability, ref);
  _2 = D.255091;
  D.255092 = dyn_cast<cgraph_node*, symtab_node> (_2);
  n = D.255092;
  if (n == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  *availability = 1;

  <bb 5> :
  D.255089 = n;

  <bb 6> :
<L5>:
  return D.255089;

}



;; Function symtab_node::ultimate_alias_target (_ZN11symtab_node21ultimate_alias_targetEP12availabilityPS_, funcdef_no=2585, decl_uid=96460, cgraph_uid=1722, symbol_order=1882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
struct symtab_node * symtab_node::ultimate_alias_target (struct symtab_node * const this, availability * availability, struct symtab_node * ref)
{
  struct symtab_node * D.255101;
  availability D.255100;
  struct symtab_node * D.255098;

  <bb 2> :
  _1 = BIT_FIELD_REF <*this, 8, 16>;
  _2 = _1 & 2;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.255100 = symtab_node::get_availability (this, ref);
  _3 = D.255100;
  *availability = _3;

  <bb 5> :
  D.255098 = this;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.255101 = symtab_node::ultimate_alias_target_1 (this, availability, ref);
  D.255098 = D.255101;

  <bb 7> :
<L5>:
  return D.255098;

}



;; Function symtab_node::get_availability (_ZN11symtab_node16get_availabilityEPS_, funcdef_no=2597, decl_uid=96516, cgraph_uid=1734, symbol_order=1894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
availability symtab_node::get_availability (struct symtab_node * const this, struct symtab_node * ref)
{
  availability D.255110;
  struct varpool_node * D.255109;
  availability D.255108;
  struct cgraph_node * D.255107;
  availability D.255105;
  bool retval.1836;

  <bb 2> :
  retval.1836 = is_a<cgraph_node*, symtab_node> (this);
  if (retval.1836 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255107 = dyn_cast<cgraph_node*, symtab_node> (this);
  _1 = D.255107;
  D.255108 = cgraph_node::get_availability (_1, ref);
  D.255105 = D.255108;
  goto <bb 5>; [INV]

  <bb 4> :
  D.255109 = dyn_cast<varpool_node*, symtab_node> (this);
  _2 = D.255109;
  D.255110 = varpool_node::get_availability (_2, ref);
  D.255105 = D.255110;

  <bb 5> :
<L2>:
  return D.255105;

}



;; Function dyn_cast<varpool_node*, symtab_node> (_Z8dyn_castIP12varpool_node11symtab_nodeET_PT0_, funcdef_no=7086, decl_uid=99587, cgraph_uid=3718, symbol_order=4497)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct varpool_node * dyn_cast<varpool_node*, symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.255114;
  bool retval.1837;

  <bb 2> :
  retval.1837 = is_a<varpool_node*, symtab_node> (p);
  if (retval.1837 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255114 = reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.255114 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.255114;

}



;; Function is_a<varpool_node*, symtab_node> (_Z4is_aIP12varpool_node11symtab_nodeEbPT0_, funcdef_no=7089, decl_uid=99946, cgraph_uid=3721, symbol_order=4500)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<varpool_node*, symtab_node> (struct symtab_node * p)
{
  bool D.255116;

  <bb 2> :
  D.255116 = is_a_helper<varpool_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.255116;

}



;; Function is_a_helper<varpool_node*>::test<symtab_node> (_ZN11is_a_helperIP12varpool_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2533, decl_uid=98472, cgraph_uid=1670, symbol_order=1830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<varpool_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.1838;
  bool D.255118;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1838 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1838 = 0;

  <bb 6> :
  D.255118 = iftmp.1838;

  <bb 7> :
<L4>:
  return D.255118;

}



;; Function reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP12varpool_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8097, decl_uid=206089, cgraph_uid=4729, symbol_order=5511)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct varpool_node * reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.255125;

  <bb 2> :
  D.255125 = p;

  <bb 3> :
<L0>:
  return D.255125;

}



;; Function std::vector<function_path>::begin (_ZNSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=7801, decl_uid=174164, cgraph_uid=4433, symbol_order=5215)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::begin (struct vector * const this)
{
  struct iterator D.214536;
  struct iterator D.255127;

  <bb 2> :
  _1 = &this->D.174555._M_impl.D.173900._M_start;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.214536, _1);
  D.255127 = D.214536;
  D.214536 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255127;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7805, decl_uid=201862, cgraph_uid=4437, symbol_order=5219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (const struct __normal_iterator * const this)
{
  struct function_path * D.255130;

  <bb 2> :
  D.255130 = this->_M_current;

  <bb 3> :
<L0>:
  return D.255130;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7804, decl_uid=201864, cgraph_uid=4436, symbol_order=5218)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.255132;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.255132 = this;

  <bb 3> :
<L0>:
  return D.255132;

}



;; Function std::vector<function_path>::end (_ZNSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=7802, decl_uid=174168, cgraph_uid=4434, symbol_order=5216)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::end (struct vector * const this)
{
  struct iterator D.214538;
  struct iterator D.255134;

  <bb 2> :
  _1 = &this->D.174555._M_impl.D.173900._M_finish;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.214538, _1);
  D.255134 = D.214538;
  D.214538 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255134;

}



;; Function __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxneIP13function_pathSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7803, decl_uid=201962, cgraph_uid=4435, symbol_order=5217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.255137;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  D.255137 = _2 != _4;

  <bb 3> :
<L0>:
  return D.255137;

}



;; Function std::vector<function_path>::push_back (_ZNSt6vectorI13function_pathSaIS0_EE9push_backERKS0_, funcdef_no=7806, decl_uid=174235, cgraph_uid=4439, symbol_order=5221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<function_path>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.255142;

  <bb 2> :
  _1 = this->D.174555._M_impl.D.173900._M_finish;
  _2 = this->D.174555._M_impl.D.173900._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.174555._M_impl.D.173900._M_finish;
  _4 = &this->D.174555._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_4, _3, __x);
  _5 = this->D.174555._M_impl.D.173900._M_finish;
  _6 = _5 + 24;
  this->D.174555._M_impl.D.173900._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.255142 = std::vector<function_path>::end (this);
  std::vector<function_path>::_M_realloc_insert<const function_path&> (this, D.255142, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_ZNSt16allocator_traitsISaI13function_pathEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8758, decl_uid=214546, cgraph_uid=5390, symbol_order=6176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (struct allocator_type & __a, struct function_path * __p, const struct function_path & __args#0)
{
  <bb 2> :
  _1 = std::forward<const function_path&> (__args#0);
  __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (__a, __p, _1);
  return;

}



;; Function std::forward<const function_path&> (_ZSt7forwardIRK13function_pathEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9567, decl_uid=227262, cgraph_uid=6199, symbol_order=6985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct function_path & std::forward<const function_path&> (const struct type & __t)
{
  const struct function_path & D.255143;

  <bb 2> :
  D.255143 = __t;

  <bb 3> :
<L0>:
  return D.255143;

}



;; Function __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (_ZN9__gnu_cxx13new_allocatorI13function_pathE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9568, decl_uid=227264, cgraph_uid=6200, symbol_order=6986)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (struct new_allocator * const this, struct function_path * __p, const struct function_path & __args#0)
{
  void * D.235741;
  void * D.235740;
  const struct function_path * D.235742;

  <bb 2> :
  D.235742 = std::forward<const function_path&> (__args#0);
  D.235740 = __p;
  D.235741 = operator new (24, D.235740);
  MEM[(struct function_path *)D.235741] = *D.235742;
  return;

}



;; Function std::vector<function_path>::_M_realloc_insert<const function_path&> (_ZNSt6vectorI13function_pathSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8759, decl_uid=214715, cgraph_uid=5394, symbol_order=6180)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::_M_realloc_insert<const function_path&> (struct vector * const this, struct iterator __position, const struct function_path & __args#0)
{
  struct function_path * D.255149;
  const size_type D.255148;
  struct function_path * __new_finish;
  struct function_path * __new_start;
  const size_type __elems_before;
  struct function_path * __old_finish;
  struct function_path * __old_start;
  const size_type __len;
  struct iterator D.227275;

  <bb 2> :
  D.255148 = std::vector<function_path>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.255148;
  __old_start = this->D.174555._M_impl.D.173900._M_start;
  __old_finish = this->D.174555._M_impl.D.173900._M_finish;
  D.227275 = std::vector<function_path>::begin (this);
  _1 = __gnu_cxx::operator-<function_path*, std::vector<function_path> > (&__position, &D.227275);
  __elems_before = (const size_type) _1;
  D.227275 = {CLOBBER};
  _2 = &this->D.174555;
  D.255149 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_2, __len);
  __new_start = D.255149;
  __new_finish = __new_start;
  _3 = std::forward<const function_path&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.174555._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.174555;
  _8 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<function_path>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.174555;
  _12 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<function_path>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.174555;
  _23 = this->D.174555._M_impl.D.173900._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_22, __old_start, _26);
  this->D.174555._M_impl.D.173900._M_start = __new_start;
  this->D.174555._M_impl.D.173900._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.174555._M_impl.D.173900._M_end_of_storage = _28;
  return;

}



;; Function std::vector<function_path>::_M_check_len (_ZNKSt6vectorI13function_pathSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9569, decl_uid=174404, cgraph_uid=6201, symbol_order=6987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<function_path>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1841;
  size_type D.255153;
  const long unsigned int D.235747;
  bool retval.1839;

  <bb 2> :
  _1 = std::vector<function_path>::max_size (this);
  _2 = std::vector<function_path>::size (this);
  _3 = _1 - _2;
  __n.1840_4 = __n;
  retval.1839 = _3 < __n.1840_4;
  if (retval.1839 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<function_path>::size (this);
  _6 = std::vector<function_path>::size (this);
  D.235747 = _6;
  _7 = std::max<long unsigned int> (&D.235747, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235747 = {CLOBBER};
  _9 = std::vector<function_path>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<function_path>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1841 = std::vector<function_path>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1841 = __len;

  <bb 8> :
  D.255153 = iftmp.1841;

  <bb 9> :
<L6>:
  return D.255153;

}



;; Function std::vector<function_path>::max_size (_ZNKSt6vectorI13function_pathSaIS0_EE8max_sizeEv, funcdef_no=10159, decl_uid=174190, cgraph_uid=6791, symbol_order=7581)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::max_size (const struct vector * const this)
{
  size_type D.255160;

  <bb 2> :
  _1 = &this->D.174555;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  D.255160 = std::vector<function_path>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.255160;

}



;; Function std::vector<function_path>::_S_max_size (_ZNSt6vectorI13function_pathSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10616, decl_uid=174411, cgraph_uid=7248, symbol_order=8038)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.255162;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<function_path> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.255162 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255162;

}



;; Function std::allocator_traits<std::allocator<function_path> >::max_size (_ZNSt16allocator_traitsISaI13function_pathEE8max_sizeERKS1_, funcdef_no=10812, decl_uid=173725, cgraph_uid=7444, symbol_order=8236)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<function_path> >::max_size (const struct allocator_type & __a)
{
  size_type D.255165;

  <bb 2> :
  D.255165 = __gnu_cxx::new_allocator<function_path>::max_size (__a);

  <bb 3> :
<L0>:
  return D.255165;

}



;; Function __gnu_cxx::new_allocator<function_path>::max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE8max_sizeEv, funcdef_no=10908, decl_uid=173567, cgraph_uid=7540, symbol_order=8332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::max_size (const struct new_allocator * const this)
{
  size_type D.255167;

  <bb 2> :
  D.255167 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.255167;

}



;; Function __gnu_cxx::operator-<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxmiIP13function_pathSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9570, decl_uid=227276, cgraph_uid=6202, symbol_order=6988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.255169;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.255169 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.255169;

}



;; Function std::vector<function_path>::_S_relocate (_ZNSt6vectorI13function_pathSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9571, decl_uid=174062, cgraph_uid=6203, symbol_order=6989)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.255172;
  struct function_path * D.255171;

  <bb 2> :
  D.255171 = std::vector<function_path>::_S_do_relocate (__first, __last, __result, __alloc, D.255172);

  <bb 3> :
<L0>:
  return D.255171;

}



;; Function std::vector<function_path>::_S_do_relocate (_ZNSt6vectorI13function_pathSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10160, decl_uid=174050, cgraph_uid=6792, symbol_order=7582)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_do_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240456)
{
  struct function_path * D.255174;

  <bb 2> :
  D.255174 = std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.255174;

}



;; Function std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (_ZSt12__relocate_aIP13function_pathS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10617, decl_uid=227440, cgraph_uid=7249, symbol_order=8039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & __alloc)
{
  struct function_path * D.255176;

  <bb 2> :
  _1 = std::__niter_base<function_path*> (__result);
  _2 = std::__niter_base<function_path*> (__last);
  _3 = std::__niter_base<function_path*> (__first);
  D.255176 = std::__relocate_a_1<function_path, function_path> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.255176;

}



;; Function std::__relocate_a_1<function_path, function_path> (_ZSt14__relocate_a_1I13function_pathS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10813, decl_uid=227614, cgraph_uid=7445, symbol_order=8237)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__relocate_a_1<function_path, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.244649)
{
  ptrdiff_t __count;
  struct function_path * D.255181;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1842_2 = (long unsigned int) __count;
  _3 = __count.1842_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1843_4 = (long unsigned int) __count;
  _5 = __count.1843_4 * 24;
  D.255181 = __result + _5;

  <bb 5> :
<L3>:
  return D.255181;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2Ev, funcdef_no=6820, decl_uid=202014, cgraph_uid=3451, symbol_order=4225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->switchs;
  std::vector<basic_block_def*>::vector (_1);
  this->prevlogic = 1;
  _2 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_2);
  _3 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_3);
  _4 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_4);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6818, decl_uid=171335, cgraph_uid=3448, symbol_order=4222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171343;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6816, decl_uid=170793, cgraph_uid=3445, symbol_order=4219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2Ev, funcdef_no=7809, decl_uid=170685, cgraph_uid=4441, symbol_order=5223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this);
  _1 = &this->D.170688;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2Ev, funcdef_no=8764, decl_uid=170463, cgraph_uid=5396, symbol_order=6182)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2Ev, funcdef_no=9574, decl_uid=170392, cgraph_uid=6206, symbol_order=6992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8767, decl_uid=170635, cgraph_uid=5399, symbol_order=6185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK6gimple, funcdef_no=2181, decl_uid=93077, cgraph_uid=1318, symbol_order=1478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gimple * gs)
{
  const struct gcond * D.255185;
  const struct gcond * gc;
  union tree_node * D.255183;

  <bb 2> :
  D.255185 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.255185;
  D.255183 = gimple_cond_rhs (gc);

  <bb 3> :
<L0>:
  return D.255183;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::put (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7820, decl_uid=196504, cgraph_uid=4456, symbol_order=5238)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<basic_block_def*, symbolicinfo>::put (struct hash_map * const this, struct basic_block_def * const & k, const struct symbolicinfo & v)
{
  bool D.255193;
  struct hash_entry * D.255192;
  unsigned int D.255191;
  bool ins;
  struct hash_entry * e;
  bool D.255189;
  void * D.214757;
  void * D.214756;

  <bb 2> :
  _1 = &this->m_table;
  D.255191 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.255191;
  D.255192 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.255192;
  D.255193 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (e);
  ins = D.255193;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214756 = &e->m_value;
  D.214757 = operator new (160, D.214756);
  symbolicinfo::symbolicinfo (D.214757, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  symbolicinfo::operator= (_4, v);

  <bb 5> :
  D.255189 = ~ins;

  <bb 6> :
<L3>:
  return D.255189;

  <bb 7> :
<L4>:
  operator delete (D.214757, D.214756);
  resx 1

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8775, decl_uid=196662, cgraph_uid=5407, symbol_order=6193)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.255244;
  bool D.255243;
  bool D.255242;
  bool D.255241;
  bool D.255240;
  bool D.255239;
  struct value_type * D.255238;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1849;
  bool retval.1848;
  bool retval.1847;
  bool retval.1846;
  bool retval.1845;
  bool retval.1844;
  struct value_type * D.255200;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 168;
  entry = _11 + _13;
  size = this->m_size;
  D.255239 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1844 = D.255239;
  if (retval.1844 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.255240 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1845 = D.255240;
  if (retval.1845 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 168;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.255241 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1846 = D.255241;
  if (retval.1846 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  D.255200 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 168;
  entry = _24 + _26;
  D.255242 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1847 = D.255242;
  if (retval.1847 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.255243 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1848 = D.255243;
  if (retval.1848 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 168;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.255244 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1849 = D.255244;
  if (retval.1849 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 168;
  D.255200 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.255200 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.255200 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 168;
  D.255200 = _37 + _39;

  <bb 27> :
<L37>:
  return D.255200;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9579, decl_uid=196743, cgraph_uid=6229, symbol_order=7015)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.255275;
  unsigned int D.255274;
  bool D.255273;
  bool D.255272;
  struct mem_alloc_description & D.255271;
  struct value_type * D.255270;
  unsigned int D.255269;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236104;
  void * D.236103;
  struct hash_entry & D.236147;
  bool iftmp.1853;
  bool retval.1852;
  bool iftmp.1851;
  bool retval.1850;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 168;
  olimit = oentries + _1;
  elts = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1851 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1851 = 0;

  <bb 6> :
  retval.1850 = iftmp.1851;
  if (retval.1850 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.255269 = hash_table_higher_prime_index (_5);
  nindex = D.255269;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.255270 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.255270;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.255272 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.255272;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.255273 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.255273;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1853 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1853 = 0;

  <bb 15> :
  retval.1852 = iftmp.1853;
  if (retval.1852 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.255274 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (x);
  _16 = D.255274;
  D.255275 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.255275;
  D.236147 = std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (x);
  D.236103 = q;
  D.236104 = operator new (168, D.236103);
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (D.236104, D.236147);

  <bb 17> :
  p = p + 168;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10164, decl_uid=196638, cgraph_uid=6796, symbol_order=7586)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.255276;

  <bb 2> :
  D.255276 = this->m_size;

  <bb 3> :
<L0>:
  return D.255276;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10165, decl_uid=196640, cgraph_uid=6797, symbol_order=7587)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.255278;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.255278 = _1 - _2;

  <bb 3> :
<L0>:
  return D.255278;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10166, decl_uid=196740, cgraph_uid=6798, symbol_order=7588)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1854;
  bool D.255280;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1854 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1854 = 0;

  <bb 6> :
  D.255280 = iftmp.1854;

  <bb 7> :
<L4>:
  return D.255280;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9548, decl_uid=196730, cgraph_uid=6180, symbol_order=6966)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.255302;
  struct value_type * D.255301;
  struct mem_alloc_description & D.255300;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.255298;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.255301 = xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (n);
  nentries = D.255301;
  goto <bb 6>; [INV]

  <bb 5> :
  D.255302 = ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (n);
  nentries = D.255302;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.255298 = nentries;

  <bb 9> :
<L14>:
  return D.255298;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10143, decl_uid=216652, cgraph_uid=6775, symbol_order=7565)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.255305;
  struct hash_entry * D.255303;

  <bb 2> :
  D.255305 = xcalloc (count, 168);
  D.255303 = D.255305;

  <bb 3> :
<L0>:
  return D.255303;

}



;; Function ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10144, decl_uid=235439, cgraph_uid=6776, symbol_order=7566)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (size_t c)
{
  struct hash_entry * D.255312;
  struct hash_entry * D.255311;
  struct hash_entry * D.255309;
  bool retval.1855;

  <bb 2> :
  retval.1855 = need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ();
  if (retval.1855 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 168;
  D.255311 = ggc_internal_cleared_alloc (_1, finalize, 168, c);
  D.255309 = D.255311;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 168;
  D.255312 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.255309 = D.255312;

  <bb 5> :
<L2>:
  return D.255309;

}



;; Function finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z8finalizeIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10605, decl_uid=240398, cgraph_uid=7240, symbol_order=8030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10607, decl_uid=243612, cgraph_uid=7238, symbol_order=8028)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  symbolicinfo::~symbolicinfo (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10604, decl_uid=240397, cgraph_uid=7236, symbol_order=8026)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ()
{
  bool D.255313;

  <bb 2> :
  D.255313 = 1;

  <bb 3> :
<L0>:
  return D.255313;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10168, decl_uid=196563, cgraph_uid=6800, symbol_order=7590)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.255317;
  hashval_t D.255315;

  <bb 2> :
  _1 = &e->m_key;
  D.255317 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_1);
  D.255315 = D.255317;

  <bb 3> :
<L0>:
  return D.255315;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10167, decl_uid=196733, cgraph_uid=6799, symbol_order=7589)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.255330;
  bool D.255329;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1857;
  struct value_type * D.255321;
  bool retval.1856;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 168;
  slot = _2 + _4;
  D.255329 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1856 = D.255329;
  if (retval.1856 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255321 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 168;
  slot = _8 + _10;
  D.255330 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1857 = D.255330;
  if (retval.1857 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.255321 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.255321;

}



;; Function std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (_ZSt4moveIRN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10169, decl_uid=236101, cgraph_uid=6801, symbol_order=7591)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.255331;

  <bb 2> :
  D.255331 = __t;

  <bb 3> :
<L0>:
  return D.255331;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9596, decl_uid=236126, cgraph_uid=6227, symbol_order=7013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236128)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236128->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236128->m_value;
  symbolicinfo::symbolicinfo (_2, _3);
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2EOS_, funcdef_no=9594, decl_uid=202031, cgraph_uid=6224, symbol_order=7010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, struct symbolicinfo & D.202033)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.202033->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.202033->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.202033->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.202033->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.202033->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.202033->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.202033->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.202033->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.202033->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.202033->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.202033->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.202033->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);
  return;

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9586, decl_uid=170255, cgraph_uid=6215, symbol_order=7001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this, struct vector & D.170257)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170298;
  _2 = &D.170257->D.170298;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9584, decl_uid=169723, cgraph_uid=6212, symbol_order=6998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.169725)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.169725->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2EOS4_, funcdef_no=10171, decl_uid=169629, cgraph_uid=6803, symbol_order=7593)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  std::allocator<basic_block_def*>::allocator (this, _1);
  _2 = &this->D.169643;
  _3 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  _4 = &_3->D.169643;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2ERKS1_, funcdef_no=10620, decl_uid=169413, cgraph_uid=7252, symbol_order=8042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2ERKS3_, funcdef_no=10815, decl_uid=169342, cgraph_uid=7447, symbol_order=8239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.169344)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIP15basic_block_defSaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_, funcdef_no=10618, decl_uid=240492, cgraph_uid=7250, symbol_order=8040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.255333;

  <bb 2> :
  D.255333 = __t;

  <bb 3> :
<L0>:
  return D.255333;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2EOS4_, funcdef_no=10623, decl_uid=169585, cgraph_uid=7255, symbol_order=8045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9592, decl_uid=171300, cgraph_uid=6221, symbol_order=7007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, struct vector & D.171302)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171343;
  _2 = &D.171302->D.171343;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9590, decl_uid=170768, cgraph_uid=6218, symbol_order=7004)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.170770)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.170770->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10174, decl_uid=170674, cgraph_uid=6806, symbol_order=7596)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  std::allocator<symbolicinfoPatharray>::allocator (this, _1);
  _2 = &this->D.170688;
  _3 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  _4 = &_3->D.170688;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2ERKS0_, funcdef_no=10627, decl_uid=170458, cgraph_uid=7259, symbol_order=8049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2ERKS2_, funcdef_no=10818, decl_uid=170387, cgraph_uid=7450, symbol_order=8242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.170389)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI21symbolicinfoPatharraySaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10625, decl_uid=240512, cgraph_uid=7257, symbol_order=8047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.255335;

  <bb 2> :
  D.255335 = __t;

  <bb 3> :
<L0>:
  return D.255335;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10630, decl_uid=170630, cgraph_uid=7262, symbol_order=8052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8896, decl_uid=216654, cgraph_uid=5528, symbol_order=6314)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9598, decl_uid=196751, cgraph_uid=6230, symbol_order=7016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10176, decl_uid=196575, cgraph_uid=6808, symbol_order=7598)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10632, decl_uid=240527, cgraph_uid=7264, symbol_order=8054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<basic_block_def>::mark_empty (_1);
  return;

}



;; Function pointer_hash<basic_block_def>::mark_empty (_ZN12pointer_hashI15basic_block_defE10mark_emptyERPS0_, funcdef_no=10820, decl_uid=196429, cgraph_uid=7452, symbol_order=8244)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<basic_block_def>::mark_empty (struct basic_block_def * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2ERKS_, funcdef_no=7822, decl_uid=202022, cgraph_uid=4453, symbol_order=5235)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 8 3 }
;; 3 succs { 7 4 }
;; 4 succs { 6 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, const struct symbolicinfo & D.202024)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.202024->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.202024->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.202024->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.202024->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.202024->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.202024->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.202024->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.202024->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.202024->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.202024->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);

  <bb 3> :
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.202024->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);

  <bb 4> :
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.202024->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);

  <bb 5> :
  return;

  <bb 6> :
<L0>:
  _18 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_18);
  resx 3

  <bb 7> :
<L1>:
  _19 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_19);
  resx 2

  <bb 8> :
<L2>:
  _20 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_20);
  resx 1

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2ERKS3_, funcdef_no=8778, decl_uid=170261, cgraph_uid=5410, symbol_order=6196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<basic_block_def*>::vector (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.255345;
  struct __normal_iterator D.255342;
  struct __normal_iterator D.255341;
  struct allocator D.227950;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170298;
  _2 = &__x->D.170298;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  D.227950 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<basic_block_def*>::size (__x);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _4, &D.227950);

  <bb 3> :
  std::allocator<basic_block_def*>::~allocator (&D.227950);
  D.227950 = {CLOBBER};
  _5 = &this->D.170298;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = this->D.170298._M_impl.D.169643._M_start;
  D.255341 = std::vector<basic_block_def*>::end (__x);
  D.255342 = std::vector<basic_block_def*>::begin (__x);
  D.255345 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (D.255342, D.255341, _7, _6);

  <bb 4> :
  _8 = D.255345;
  this->D.170298._M_impl.D.169643._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<basic_block_def*>::~allocator (&D.227950);
  resx 2

  <bb 6> :
<L1>:
  D.227950 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.170298;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E17_S_select_on_copyERKS3_, funcdef_no=9599, decl_uid=169505, cgraph_uid=6231, symbol_order=7017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIP15basic_block_defEE37select_on_container_copy_constructionERKS2_, funcdef_no=10177, decl_uid=169470, cgraph_uid=6809, symbol_order=7599)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<basic_block_def*>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EmRKS2_, funcdef_no=9602, decl_uid=169730, cgraph_uid=6234, symbol_order=7020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2ERKS2_, funcdef_no=10179, decl_uid=169635, cgraph_uid=6811, symbol_order=7601)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this, __a);
  _1 = &this->D.169643;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_M_create_storageEm, funcdef_no=10181, decl_uid=169654, cgraph_uid=6813, symbol_order=7603)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.255352;

  <bb 2> :
  D.255352 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (this, __n);
  _1 = D.255352;
  this->_M_impl.D.169643._M_start = _1;
  _2 = this->_M_impl.D.169643._M_start;
  this->_M_impl.D.169643._M_finish = _2;
  _3 = this->_M_impl.D.169643._M_start;
  _4 = __n * 8;
  _5 = _3 + _4;
  this->_M_impl.D.169643._M_end_of_storage = _5;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNKSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=9605, decl_uid=169913, cgraph_uid=6237, symbol_order=7023)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::end (const struct vector * const this)
{
  struct const_iterator D.236183;
  struct const_iterator D.255353;

  <bb 2> :
  _1 = &this->D.170298._M_impl.D.169643._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.236183, _1);
  D.255353 = D.236183;
  D.236183 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255353;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS4_, funcdef_no=10183, decl_uid=227919, cgraph_uid=6815, symbol_order=7605)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * const * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::begin (_ZNKSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9604, decl_uid=169909, cgraph_uid=6236, symbol_order=7022)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::begin (const struct vector * const this)
{
  struct const_iterator D.236181;
  struct const_iterator D.255356;

  <bb 2> :
  _1 = &this->D.170298._M_impl.D.169643._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.236181, _1);
  D.255356 = D.236181;
  D.236181 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255356;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E, funcdef_no=9606, decl_uid=227939, cgraph_uid=6238, symbol_order=7024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result, struct allocator & D.236187)
{
  struct basic_block_def * * D.255361;
  struct basic_block_def * * D.255359;

  <bb 2> :
  D.255361 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.255359 = D.255361;

  <bb 3> :
<L0>:
  return D.255359;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10185, decl_uid=236189, cgraph_uid=6818, symbol_order=7608)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255364;
  const bool __assignable;
  struct basic_block_def * * D.255362;

  <bb 2> :
  __assignable = 1;
  D.255364 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.255362 = D.255364;

  <bb 3> :
<L0>:
  return D.255362;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_, funcdef_no=10633, decl_uid=240644, cgraph_uid=7265, symbol_order=8055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255367;
  struct basic_block_def * * D.255365;

  <bb 2> :
  D.255367 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.255365 = D.255367;

  <bb 3> :
<L0>:
  return D.255365;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10821, decl_uid=243724, cgraph_uid=7453, symbol_order=8245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255372;
  struct __normal_iterator D.255370;
  struct __normal_iterator D.255369;
  struct basic_block_def * * D.255368;

  <bb 2> :
  D.255369 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.255370 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.255372 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (D.255370, D.255369, __result);
  D.255368 = D.255372;

  <bb 3> :
<L0>:
  return D.255368;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEET_SA_, funcdef_no=10198, decl_uid=236293, cgraph_uid=6830, symbol_order=7620)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.255373;

  <bb 2> :
  D.255373 = __it;

  <bb 3> :
<L0>:
  return D.255373;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_, funcdef_no=10909, decl_uid=244670, cgraph_uid=7541, symbol_order=8333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255377;
  struct basic_block_def * * D.255375;

  <bb 2> :
  __result.1858_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1858_1);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _4 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.255377 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_4, _3, _2);
  _5 = D.255377;
  D.255375 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255375;

}



;; Function std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPKP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE, funcdef_no=10635, decl_uid=240813, cgraph_uid=7267, symbol_order=8057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * const * D.255378;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (&__it);
  D.255378 = *_1;

  <bb 3> :
<L0>:
  return D.255378;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=10827, decl_uid=227906, cgraph_uid=7459, symbol_order=8251)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * const & __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * const * const & D.255380;

  <bb 2> :
  D.255380 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255380;

}



;; Function std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10637, decl_uid=240967, cgraph_uid=7269, symbol_order=8059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255384;
  struct basic_block_def * * D.255382;

  <bb 2> :
  D.255384 = std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (__first, __last, __result);
  D.255382 = D.255384;

  <bb 3> :
<L0>:
  return D.255382;

}



;; Function std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10828, decl_uid=243769, cgraph_uid=7460, symbol_order=8252)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255385;

  <bb 2> :
  D.255385 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255385;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP15basic_block_defEEPT_PKS5_S8_S6_, funcdef_no=10911, decl_uid=244715, cgraph_uid=7543, symbol_order=8335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  const ptrdiff_t _Num;
  struct basic_block_def * * D.255390;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 8;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1859_2 = (long unsigned int) _Num;
  _3 = _Num.1859_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1860_4 = (long unsigned int) _Num;
  _5 = _Num.1860_4 * 8;
  D.255390 = __result + _5;

  <bb 5> :
<L3>:
  return D.255390;

}



;; Function std::__niter_wrap<basic_block_def**> (_ZSt12__niter_wrapIPP15basic_block_defET_RKS3_S3_, funcdef_no=10642, decl_uid=241010, cgraph_uid=7274, symbol_order=8064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_wrap<basic_block_def**> (struct basic_block_def * * const & D.243791, struct basic_block_def * * __res)
{
  struct basic_block_def * * D.255392;

  <bb 2> :
  D.255392 = __res;

  <bb 3> :
<L0>:
  return D.255392;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2ERKS2_, funcdef_no=8781, decl_uid=171306, cgraph_uid=5413, symbol_order=6199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.255398;
  struct __normal_iterator D.255395;
  struct __normal_iterator D.255394;
  struct allocator D.228067;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171343;
  _2 = &__x->D.171343;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  D.228067 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<symbolicinfoPatharray>::size (__x);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _4, &D.228067);

  <bb 3> :
  std::allocator<symbolicinfoPatharray>::~allocator (&D.228067);
  D.228067 = {CLOBBER};
  _5 = &this->D.171343;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = this->D.171343._M_impl.D.170688._M_start;
  D.255394 = std::vector<symbolicinfoPatharray>::end (__x);
  D.255395 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.255398 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (D.255395, D.255394, _7, _6);

  <bb 4> :
  _8 = D.255398;
  this->D.171343._M_impl.D.170688._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<symbolicinfoPatharray>::~allocator (&D.228067);
  resx 2

  <bb 6> :
<L1>:
  D.228067 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.171343;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9609, decl_uid=170578, cgraph_uid=6241, symbol_order=7027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.255400;

  <bb 2> :
  D.255400 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.255400;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E17_S_select_on_copyERKS2_, funcdef_no=9608, decl_uid=170550, cgraph_uid=6240, symbol_order=7026)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE37select_on_container_copy_constructionERKS1_, funcdef_no=10187, decl_uid=170515, cgraph_uid=6819, symbol_order=7609)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<symbolicinfoPatharray>::size (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE4sizeEv, funcdef_no=9607, decl_uid=170976, cgraph_uid=6239, symbol_order=7025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::size (const struct vector * const this)
{
  size_type D.255406;

  <bb 2> :
  _1 = this->D.171343._M_impl.D.170688._M_finish;
  _2 = this->D.171343._M_impl.D.170688._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.255406 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255406;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EmRKS1_, funcdef_no=9611, decl_uid=170775, cgraph_uid=6243, symbol_order=7029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=10189, decl_uid=170680, cgraph_uid=6821, symbol_order=7611)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this, __a);
  _1 = &this->D.170688;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_M_create_storageEm, funcdef_no=10191, decl_uid=170699, cgraph_uid=6823, symbol_order=7613)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.255409;

  <bb 2> :
  D.255409 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (this, __n);
  _1 = D.255409;
  this->_M_impl.D.170688._M_start = _1;
  _2 = this->_M_impl.D.170688._M_start;
  this->_M_impl.D.170688._M_finish = _2;
  _3 = this->_M_impl.D.170688._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.170688._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE11_M_allocateEm, funcdef_no=10206, decl_uid=170692, cgraph_uid=6838, symbol_order=7628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.255416;
  struct symbolicinfoPatharray * iftmp.1861;
  struct symbolicinfoPatharray * D.255410;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.255416 = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_1, __n);
  iftmp.1861 = D.255416;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1861 = 0B;

  <bb 5> :
  D.255410 = iftmp.1861;

  <bb 6> :
<L3>:
  return D.255410;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE8allocateERS1_m, funcdef_no=10644, decl_uid=170493, cgraph_uid=7276, symbol_order=8066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct symbolicinfoPatharray * D.255419;
  struct symbolicinfoPatharray * D.255417;

  <bb 2> :
  D.255419 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (__a, __n, 0B);
  D.255417 = D.255419;

  <bb 3> :
<L0>:
  return D.255417;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE8allocateEmPKv, funcdef_no=10831, decl_uid=170347, cgraph_uid=7464, symbol_order=8256)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (struct new_allocator * const this, size_type __n, const void * D.244734)
{
  struct symbolicinfoPatharray * D.255430;
  struct symbolicinfoPatharray * D.255429;
  align_val_t __al;
  struct symbolicinfoPatharray * D.255427;
  bool retval.1862;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1862 = _4 != 0;
  if (retval.1862 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.255430 = operator new (_6);
  D.255427 = D.255430;

  <bb 7> :
<L6>:
  return D.255427;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE11_M_max_sizeEv, funcdef_no=10832, decl_uid=170374, cgraph_uid=7463, symbol_order=8255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.255431;

  <bb 2> :
  D.255431 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.255431;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implD2Ev, funcdef_no=6814, decl_uid=170735, cgraph_uid=3442, symbol_order=4216)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::~allocator (_ZNSaI21symbolicinfoPatharrayED2Ev, funcdef_no=7812, decl_uid=170468, cgraph_uid=4444, symbol_order=5226)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayED2Ev, funcdef_no=8770, decl_uid=170397, cgraph_uid=5402, symbol_order=6188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8773, decl_uid=170576, cgraph_uid=5405, symbol_order=6191)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.255433;

  <bb 2> :
  D.255433 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.255433;

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9614, decl_uid=170958, cgraph_uid=6246, symbol_order=7032)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::end (const struct vector * const this)
{
  struct const_iterator D.236237;
  struct const_iterator D.255435;

  <bb 2> :
  _1 = &this->D.171343._M_impl.D.170688._M_finish;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236237, _1);
  D.255435 = D.236237;
  D.236237 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255435;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=10193, decl_uid=228036, cgraph_uid=6825, symbol_order=7615)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, const struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9613, decl_uid=170954, cgraph_uid=6245, symbol_order=7031)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::begin (const struct vector * const this)
{
  struct const_iterator D.236235;
  struct const_iterator D.255438;

  <bb 2> :
  _1 = &this->D.171343._M_impl.D.170688._M_start;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236235, _1);
  D.255438 = D.236235;
  D.236235 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255438;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9615, decl_uid=228056, cgraph_uid=6247, symbol_order=7033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result, struct allocator & D.236241)
{
  struct symbolicinfoPatharray * D.255443;
  struct symbolicinfoPatharray * D.255441;

  <bb 2> :
  D.255443 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.255441 = D.255443;

  <bb 3> :
<L0>:
  return D.255441;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10195, decl_uid=236243, cgraph_uid=6828, symbol_order=7618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255446;
  const bool __assignable;
  struct symbolicinfoPatharray * D.255444;

  <bb 2> :
  __assignable = 1;
  D.255446 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.255444 = D.255446;

  <bb 3> :
<L0>:
  return D.255444;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10634, decl_uid=240795, cgraph_uid=7266, symbol_order=8056)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.255448;
  bool retval.1863;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (&__first);
  _2 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_2, _1);
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (&__first);
  __cur = __cur + 16;

  <bb 4> :
  retval.1863 = __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (&__first, &__last);
  if (retval.1863 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.255448 = __cur;

  <bb 6> :
<L3>:
  return D.255448;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10825, decl_uid=227994, cgraph_uid=7457, symbol_order=8249)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray & D.255450;

  <bb 2> :
  D.255450 = this->_M_current;

  <bb 3> :
<L0>:
  return D.255450;

}



;; Function std::__addressof<symbolicinfoPatharray> (_ZSt11__addressofI21symbolicinfoPatharrayEPT_RS1_, funcdef_no=10824, decl_uid=243752, cgraph_uid=7456, symbol_order=8248)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__addressof<symbolicinfoPatharray> (struct symbolicinfoPatharray & __r)
{
  struct symbolicinfoPatharray * D.255452;

  <bb 2> :
  D.255452 = __r;

  <bb 3> :
<L0>:
  return D.255452;

}



;; Function std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRKS0_EEvPT_DpOT0_, funcdef_no=10826, decl_uid=243754, cgraph_uid=7458, symbol_order=8250)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, const struct symbolicinfoPatharray & __args#0)
{
  void * D.244696;
  void * D.244695;
  const struct symbolicinfoPatharray * D.244697;

  <bb 2> :
  D.244697 = std::forward<const symbolicinfoPatharray&> (__args#0);
  D.244695 = __p;
  D.244696 = operator new (16, D.244695);
  MEM[(struct symbolicinfoPatharray *)D.244696] = *D.244697;
  return;

}



;; Function std::forward<const symbolicinfoPatharray&> (_ZSt7forwardIRK21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=10910, decl_uid=244693, cgraph_uid=7542, symbol_order=8334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct symbolicinfoPatharray & std::forward<const symbolicinfoPatharray&> (const struct type & __t)
{
  const struct symbolicinfoPatharray & D.255454;

  <bb 2> :
  D.255454 = __t;

  <bb 3> :
<L0>:
  return D.255454;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10823, decl_uid=227998, cgraph_uid=7455, symbol_order=8247)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.255456;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 16;
  this->_M_current = _2;
  D.255456 = this;

  <bb 3> :
<L0>:
  return D.255456;

}



;; Function __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZN9__gnu_cxxneIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10822, decl_uid=243745, cgraph_uid=7454, symbol_order=8246)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.255458;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__rhs);
  _4 = *_3;
  D.255458 = _2 != _4;

  <bb 3> :
<L0>:
  return D.255458;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10833, decl_uid=228023, cgraph_uid=7465, symbol_order=8257)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray * const & D.255460;

  <bb 2> :
  D.255460 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255460;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7815, decl_uid=170798, cgraph_uid=4447, symbol_order=5229)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.170688._M_end_of_storage;
  _2 = this->_M_impl.D.170688._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.170688._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8772, decl_uid=170695, cgraph_uid=5404, symbol_order=6190)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (struct _Vector_base * const this, struct symbolicinfoPatharray * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE10deallocateERS1_PS0_m, funcdef_no=9576, decl_uid=170500, cgraph_uid=6208, symbol_order=6994)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (struct allocator_type & __a, struct symbolicinfoPatharray * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE10deallocateEPS1_m, funcdef_no=10162, decl_uid=170351, cgraph_uid=6794, symbol_order=7584)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (struct new_allocator * const this, struct symbolicinfoPatharray * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<symbolicinfoPatharray>::~vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7818, decl_uid=171340, cgraph_uid=4450, symbol_order=5232)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171343;
  _2 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_1);
  _3 = this->D.171343._M_impl.D.170688._M_finish;
  _4 = this->D.171343._M_impl.D.170688._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_4, _3, _2);
  _5 = &this->D.171343;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt8_DestroyIP21symbolicinfoPatharrayS0_EvT_S2_RSaIT0_E, funcdef_no=8774, decl_uid=214738, cgraph_uid=5406, symbol_order=6192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct allocator & D.227821)
{
  <bb 2> :
  std::_Destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*> (_ZSt8_DestroyIP21symbolicinfoPatharrayEvT_S2_, funcdef_no=9577, decl_uid=227823, cgraph_uid=6210, symbol_order=6996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP21symbolicinfoPatharrayEEvT_S4_, funcdef_no=10163, decl_uid=236081, cgraph_uid=6795, symbol_order=7585)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * D.240463, struct symbolicinfoPatharray * D.240464)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function symbolicinfo::operator= (_ZN12symbolicinfoaSERKS_, funcdef_no=7824, decl_uid=214761, cgraph_uid=4455, symbol_order=5237)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfo & symbolicinfo::operator= (struct symbolicinfo * const this, const struct symbolicinfo & D.214762)
{
  struct symbolicinfo & D.255468;

  <bb 2> :
  _1 = D.214762->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.214762->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.214762->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.214762->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.214762->node;
  this->node = _5;
  _6 = &D.214762->switchs;
  _7 = &this->switchs;
  std::vector<basic_block_def*>::operator= (_7, _6);
  _8 = D.214762->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.214762->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.214762->prevlogic;
  this->prevlogic = _10;
  _11 = &D.214762->symbolicExecutionPathConstraint;
  _12 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::operator= (_12, _11);
  _13 = &D.214762->symbolicExecutionPathConstraintarrayTrue;
  _14 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::operator= (_14, _13);
  _15 = &D.214762->symbolicExecutionPathConstraintarrayFalse;
  _16 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::operator= (_16, _15);
  D.255468 = this;

  <bb 3> :
<L0>:
  return D.255468;

}



;; Function std::vector<basic_block_def*>::operator= (_ZNSt6vectorIP15basic_block_defSaIS1_EEaSERKS3_, funcdef_no=8783, decl_uid=169876, cgraph_uid=5417, symbol_order=6203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<basic_block_def*>::operator= (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.255503;
  struct basic_block_def * * __tmp;
  const size_type __xlen;
  struct vector & D.255501;
  struct __normal_iterator D.255498;
  struct __normal_iterator D.255497;
  struct __normal_iterator D.255496;
  struct __normal_iterator D.255495;
  struct __normal_iterator D.255494;
  bool retval.1868;
  struct __normal_iterator D.255489;
  struct __normal_iterator D.255488;
  bool retval.1867;
  bool iftmp.1866;
  bool retval.1865;
  bool retval.1864;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1864 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ();
  if (retval.1864 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.170298;
  _4 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.170298;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1866 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1866 = 0;

  <bb 8> :
  retval.1865 = iftmp.1866;
  if (retval.1865 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<basic_block_def*>::clear (this);
  _8 = &this->D.170298;
  _9 = this->D.170298._M_impl.D.169643._M_end_of_storage;
  _10 = this->D.170298._M_impl.D.169643._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 8;
  _13 = (long unsigned int) _12;
  _14 = this->D.170298._M_impl.D.169643._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_8, _14, _13);
  this->D.170298._M_impl.D.169643._M_start = 0B;
  this->D.170298._M_impl.D.169643._M_finish = 0B;
  this->D.170298._M_impl.D.169643._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.170298;
  _16 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.170298;
  _18 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<basic_block_def*> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<basic_block_def*>::size (__x);
  _19 = std::vector<basic_block_def*>::capacity (this);
  retval.1867 = __xlen > _19;
  if (retval.1867 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.255488 = std::vector<basic_block_def*>::end (__x);
  D.255489 = std::vector<basic_block_def*>::begin (__x);
  D.255503 = std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (this, __xlen, D.255489, D.255488);
  __tmp = D.255503;
  _20 = &this->D.170298;
  _21 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_20);
  _22 = this->D.170298._M_impl.D.169643._M_finish;
  _23 = this->D.170298._M_impl.D.169643._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_23, _22, _21);
  _24 = &this->D.170298;
  _25 = this->D.170298._M_impl.D.169643._M_end_of_storage;
  _26 = this->D.170298._M_impl.D.169643._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 8;
  _29 = (long unsigned int) _28;
  _30 = this->D.170298._M_impl.D.169643._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_24, _30, _29);
  this->D.170298._M_impl.D.169643._M_start = __tmp;
  _31 = this->D.170298._M_impl.D.169643._M_start;
  _32 = __xlen * 8;
  _33 = _31 + _32;
  this->D.170298._M_impl.D.169643._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<basic_block_def*>::size (this);
  retval.1868 = __xlen <= _34;
  if (retval.1868 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.170298;
  _36 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_35);
  D.255494 = std::vector<basic_block_def*>::end (this);
  D.255495 = std::vector<basic_block_def*>::begin (this);
  D.255496 = std::vector<basic_block_def*>::end (__x);
  D.255497 = std::vector<basic_block_def*>::begin (__x);
  D.255498 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.255497, D.255496, D.255495);
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (D.255498, D.255494, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.170298._M_impl.D.169643._M_start;
  _38 = __x->D.170298._M_impl.D.169643._M_start;
  _39 = std::vector<basic_block_def*>::size (this);
  _40 = _39 * 8;
  _41 = _38 + _40;
  _42 = __x->D.170298._M_impl.D.169643._M_start;
  std::copy<basic_block_def**, basic_block_def**> (_42, _41, _37);
  _43 = &this->D.170298;
  _44 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_43);
  _45 = this->D.170298._M_impl.D.169643._M_finish;
  _46 = __x->D.170298._M_impl.D.169643._M_finish;
  _47 = __x->D.170298._M_impl.D.169643._M_start;
  _48 = std::vector<basic_block_def*>::size (this);
  _49 = _48 * 8;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.170298._M_impl.D.169643._M_start;
  _52 = __xlen * 8;
  _53 = _51 + _52;
  this->D.170298._M_impl.D.169643._M_finish = _53;

  <bb 17> :
  D.255501 = this;

  <bb 18> :
<L19>:
  return D.255501;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E27_S_propagate_on_copy_assignEv, funcdef_no=8784, decl_uid=169510, cgraph_uid=5415, symbol_order=6201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ()
{
  bool D.255504;

  <bb 2> :
  D.255504 = 0;

  <bb 3> :
<L0>:
  return D.255504;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E15_S_always_equalEv, funcdef_no=8785, decl_uid=169513, cgraph_uid=5416, symbol_order=6202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ()
{
  bool D.255506;

  <bb 2> :
  D.255506 = 1;

  <bb 3> :
<L0>:
  return D.255506;

}



;; Function std::operator!= (_ZStneRKSaIP15basic_block_defES3_, funcdef_no=9616, decl_uid=169396, cgraph_uid=6248, symbol_order=7034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.236260, const struct allocator & D.236261)
{
  bool D.255508;

  <bb 2> :
  D.255508 = 0;

  <bb 3> :
<L0>:
  return D.255508;

}



;; Function std::vector<basic_block_def*>::clear (_ZNSt6vectorIP15basic_block_defSaIS1_EE5clearEv, funcdef_no=9617, decl_uid=170028, cgraph_uid=6249, symbol_order=7035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.170298._M_impl.D.169643._M_start;
  std::vector<basic_block_def*>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<basic_block_def*>::_M_erase_at_end (_ZNSt6vectorIP15basic_block_defSaIS1_EE15_M_erase_at_endEPS1_, funcdef_no=10197, decl_uid=170156, cgraph_uid=6829, symbol_order=7619)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<basic_block_def*>::_M_erase_at_end (struct vector * const this, struct basic_block_def * * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.170298._M_impl.D.169643._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 8;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.170298;
  _5 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_4);
  _6 = this->D.170298._M_impl.D.169643._M_finish;
  std::_Destroy<basic_block_def**, basic_block_def*> (__pos, _6, _5);
  this->D.170298._M_impl.D.169643._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<basic_block_def*> > (_ZSt15__alloc_on_copyISaIP15basic_block_defEEvRT_RKS3_, funcdef_no=9618, decl_uid=228094, cgraph_uid=6250, symbol_order=7036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<basic_block_def*> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<basic_block_def*>::capacity (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8capacityEv, funcdef_no=9619, decl_uid=169944, cgraph_uid=6251, symbol_order=7037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::capacity (const struct vector * const this)
{
  size_type D.255513;

  <bb 2> :
  _1 = this->D.170298._M_impl.D.169643._M_end_of_storage;
  _2 = this->D.170298._M_impl.D.169643._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.255513 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255513;

}



;; Function std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZNSt6vectorIP15basic_block_defSaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_, funcdef_no=9620, decl_uid=228101, cgraph_uid=6252, symbol_order=7038)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct basic_block_def * * std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct basic_block_def * * D.255517;
  struct basic_block_def * * __result;
  struct basic_block_def * * D.255515;

  <bb 2> :
  _1 = &this->D.170298;
  D.255517 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_1, __n);
  __result = D.255517;
  _2 = &this->D.170298;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (__first, __last, __result, _3);

  <bb 3> :
  D.255515 = __result;

  <bb 4> :
<L0>:
  return D.255515;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.170298;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_, funcdef_no=9621, decl_uid=228109, cgraph_uid=6253, symbol_order=7039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.255523;
  struct __normal_iterator D.255522;
  struct __normal_iterator D.255521;

  <bb 2> :
  D.255522 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.255523 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.255521 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.255523, D.255522, __result);

  <bb 3> :
<L0>:
  return D.255521;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_, funcdef_no=10199, decl_uid=236299, cgraph_uid=6832, symbol_order=7622)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct basic_block_def * * D.255527;
  struct __normal_iterator D.255525;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__result);
  _2 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.255527 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_3, _2, _1);
  _4 = D.255527;
  D.255525 = std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (__result, _4);

  <bb 3> :
<L0>:
  return D.255525;

}



;; Function std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10636, decl_uid=240964, cgraph_uid=7268, symbol_order=8058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * * D.255528;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__it);
  D.255528 = *_1;

  <bb 3> :
<L0>:
  return D.255528;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, funcdef_no=10638, decl_uid=240971, cgraph_uid=7270, symbol_order=8060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __from, struct basic_block_def * * __res)
{
  struct __normal_iterator D.255530;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 8;
  D.255530 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.255530;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEplEl, funcdef_no=10829, decl_uid=214077, cgraph_uid=7461, symbol_order=8253)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct basic_block_def * * const D.244721;
  struct __normal_iterator D.244722;
  struct __normal_iterator D.255532;

  <bb 2> :
  _1 = this->_M_current;
  __n.1869_2 = (long unsigned int) __n;
  _3 = __n.1869_2 * 8;
  _4 = _1 + _3;
  D.244721 = _4;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.244722, &D.244721);
  D.255532 = D.244722;
  D.244722 = {CLOBBER};
  D.244721 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.255532;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E, funcdef_no=9622, decl_uid=228115, cgraph_uid=6254, symbol_order=7040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.236328)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEEEvT_S9_, funcdef_no=10201, decl_uid=236330, cgraph_uid=6833, symbol_order=7623)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS5_SaIS5_EEEEEEvT_SB_, funcdef_no=10639, decl_uid=240995, cgraph_uid=7271, symbol_order=8061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator D.243778, struct __normal_iterator D.243779)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<basic_block_def**, basic_block_def**> (_ZSt4copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=9623, decl_uid=228123, cgraph_uid=6255, symbol_order=7041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255538;
  struct basic_block_def * * D.255536;

  <bb 2> :
  _1 = std::__miter_base<basic_block_def**> (__last);
  _2 = std::__miter_base<basic_block_def**> (__first);
  D.255538 = std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_2, _1, __result);
  D.255536 = D.255538;

  <bb 3> :
<L0>:
  return D.255536;

}



;; Function std::__miter_base<basic_block_def**> (_ZSt12__miter_baseIPP15basic_block_defET_S3_, funcdef_no=10202, decl_uid=236346, cgraph_uid=6834, symbol_order=7624)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__miter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.255539;

  <bb 2> :
  D.255539 = __it;

  <bb 3> :
<L0>:
  return D.255539;

}



;; Function std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_ZSt13__copy_move_aILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10203, decl_uid=236348, cgraph_uid=6835, symbol_order=7625)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255543;
  struct basic_block_def * * D.255541;

  <bb 2> :
  __result.1870_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1870_1);
  _3 = std::__niter_base<basic_block_def**> (__last);
  _4 = std::__niter_base<basic_block_def**> (__first);
  D.255543 = std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_4, _3, _2);
  _5 = D.255543;
  D.255541 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255541;

}



;; Function std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10641, decl_uid=241006, cgraph_uid=7273, symbol_order=8063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255546;
  struct basic_block_def * * D.255544;

  <bb 2> :
  D.255546 = std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255544 = D.255546;

  <bb 3> :
<L0>:
  return D.255544;

}



;; Function std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10830, decl_uid=243787, cgraph_uid=7462, symbol_order=8254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255547;

  <bb 2> :
  D.255547 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255547;

}



;; Function std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIPP15basic_block_defS2_S1_ET0_T_S4_S3_RSaIT1_E, funcdef_no=9624, decl_uid=228127, cgraph_uid=6256, symbol_order=7042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.236355)
{
  struct basic_block_def * * D.255551;
  struct basic_block_def * * D.255549;

  <bb 2> :
  D.255551 = std::uninitialized_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255549 = D.255551;

  <bb 3> :
<L0>:
  return D.255549;

}



;; Function std::uninitialized_copy<basic_block_def**, basic_block_def**> (_ZSt18uninitialized_copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=10204, decl_uid=236357, cgraph_uid=6836, symbol_order=7626)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255554;
  const bool __assignable;
  struct basic_block_def * * D.255552;

  <bb 2> :
  __assignable = 1;
  D.255554 = std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255552 = D.255554;

  <bb 3> :
<L0>:
  return D.255552;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP15basic_block_defS4_EET0_T_S6_S5_, funcdef_no=10643, decl_uid=241044, cgraph_uid=7275, symbol_order=8065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255557;
  struct basic_block_def * * D.255555;

  <bb 2> :
  D.255557 = std::copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255555 = D.255557;

  <bb 3> :
<L0>:
  return D.255555;

}



;; Function std::vector<symbolicinfoPatharray>::operator= (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEaSERKS2_, funcdef_no=8786, decl_uid=170921, cgraph_uid=5420, symbol_order=6206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<symbolicinfoPatharray>::operator= (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.255591;
  struct symbolicinfoPatharray * __tmp;
  const size_type __xlen;
  struct vector & D.255589;
  struct __normal_iterator D.255586;
  struct __normal_iterator D.255585;
  struct __normal_iterator D.255584;
  struct __normal_iterator D.255583;
  struct __normal_iterator D.255582;
  bool retval.1875;
  struct __normal_iterator D.255577;
  struct __normal_iterator D.255576;
  bool retval.1874;
  bool iftmp.1873;
  bool retval.1872;
  bool retval.1871;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1871 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ();
  if (retval.1871 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.171343;
  _4 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.171343;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1873 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1873 = 0;

  <bb 8> :
  retval.1872 = iftmp.1873;
  if (retval.1872 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<symbolicinfoPatharray>::clear (this);
  _8 = &this->D.171343;
  _9 = this->D.171343._M_impl.D.170688._M_end_of_storage;
  _10 = this->D.171343._M_impl.D.170688._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.171343._M_impl.D.170688._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_8, _14, _13);
  this->D.171343._M_impl.D.170688._M_start = 0B;
  this->D.171343._M_impl.D.170688._M_finish = 0B;
  this->D.171343._M_impl.D.170688._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.171343;
  _16 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.171343;
  _18 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<symbolicinfoPatharray>::size (__x);
  _19 = std::vector<symbolicinfoPatharray>::capacity (this);
  retval.1874 = __xlen > _19;
  if (retval.1874 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.255576 = std::vector<symbolicinfoPatharray>::end (__x);
  D.255577 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.255591 = std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (this, __xlen, D.255577, D.255576);
  __tmp = D.255591;
  _20 = &this->D.171343;
  _21 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_20);
  _22 = this->D.171343._M_impl.D.170688._M_finish;
  _23 = this->D.171343._M_impl.D.170688._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_23, _22, _21);
  _24 = &this->D.171343;
  _25 = this->D.171343._M_impl.D.170688._M_end_of_storage;
  _26 = this->D.171343._M_impl.D.170688._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.171343._M_impl.D.170688._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_24, _30, _29);
  this->D.171343._M_impl.D.170688._M_start = __tmp;
  _31 = this->D.171343._M_impl.D.170688._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.171343._M_impl.D.170688._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<symbolicinfoPatharray>::size (this);
  retval.1875 = __xlen <= _34;
  if (retval.1875 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.171343;
  _36 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_35);
  D.255582 = std::vector<symbolicinfoPatharray>::end (this);
  D.255583 = std::vector<symbolicinfoPatharray>::begin (this);
  D.255584 = std::vector<symbolicinfoPatharray>::end (__x);
  D.255585 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.255586 = std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.255585, D.255584, D.255583);
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (D.255586, D.255582, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.171343._M_impl.D.170688._M_start;
  _38 = __x->D.171343._M_impl.D.170688._M_start;
  _39 = std::vector<symbolicinfoPatharray>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.171343._M_impl.D.170688._M_start;
  std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_42, _41, _37);
  _43 = &this->D.171343;
  _44 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_43);
  _45 = this->D.171343._M_impl.D.170688._M_finish;
  _46 = __x->D.171343._M_impl.D.170688._M_finish;
  _47 = __x->D.171343._M_impl.D.170688._M_start;
  _48 = std::vector<symbolicinfoPatharray>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.171343._M_impl.D.170688._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.171343._M_impl.D.170688._M_finish = _53;

  <bb 17> :
  D.255589 = this;

  <bb 18> :
<L19>:
  return D.255589;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E27_S_propagate_on_copy_assignEv, funcdef_no=8787, decl_uid=170555, cgraph_uid=5418, symbol_order=6204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ()
{
  bool D.255592;

  <bb 2> :
  D.255592 = 0;

  <bb 3> :
<L0>:
  return D.255592;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E15_S_always_equalEv, funcdef_no=8788, decl_uid=170558, cgraph_uid=5419, symbol_order=6205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ()
{
  bool D.255594;

  <bb 2> :
  D.255594 = 1;

  <bb 3> :
<L0>:
  return D.255594;

}



;; Function std::operator!= (_ZStneRKSaI21symbolicinfoPatharrayES2_, funcdef_no=9625, decl_uid=170441, cgraph_uid=6257, symbol_order=7043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.236361, const struct allocator & D.236362)
{
  bool D.255596;

  <bb 2> :
  D.255596 = 0;

  <bb 3> :
<L0>:
  return D.255596;

}



;; Function std::vector<symbolicinfoPatharray>::clear (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5clearEv, funcdef_no=9626, decl_uid=171073, cgraph_uid=6258, symbol_order=7044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.171343._M_impl.D.170688._M_start;
  std::vector<symbolicinfoPatharray>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::_M_erase_at_end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=10205, decl_uid=171201, cgraph_uid=6837, symbol_order=7627)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<symbolicinfoPatharray>::_M_erase_at_end (struct vector * const this, struct symbolicinfoPatharray * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.171343._M_impl.D.170688._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.171343;
  _5 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_4);
  _6 = this->D.171343._M_impl.D.170688._M_finish;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (__pos, _6, _5);
  this->D.171343._M_impl.D.170688._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_ZSt15__alloc_on_copyISaI21symbolicinfoPatharrayEEvRT_RKS2_, funcdef_no=9627, decl_uid=228160, cgraph_uid=6259, symbol_order=7045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<symbolicinfoPatharray>::capacity (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE8capacityEv, funcdef_no=9628, decl_uid=170989, cgraph_uid=6260, symbol_order=7046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::capacity (const struct vector * const this)
{
  size_type D.255601;

  <bb 2> :
  _1 = this->D.171343._M_impl.D.170688._M_end_of_storage;
  _2 = this->D.171343._M_impl.D.170688._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.255601 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255601;

}



;; Function std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=9629, decl_uid=228167, cgraph_uid=6261, symbol_order=7047)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct symbolicinfoPatharray * std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct symbolicinfoPatharray * D.255605;
  struct symbolicinfoPatharray * __result;
  struct symbolicinfoPatharray * D.255603;

  <bb 2> :
  _1 = &this->D.171343;
  D.255605 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_1, __n);
  __result = D.255605;
  _2 = &this->D.171343;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (__first, __last, __result, _3);

  <bb 3> :
  D.255603 = __result;

  <bb 4> :
<L0>:
  return D.255603;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.171343;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9632, decl_uid=170956, cgraph_uid=6264, symbol_order=7050)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::end (struct vector * const this)
{
  struct iterator D.236448;
  struct iterator D.255609;

  <bb 2> :
  _1 = &this->D.171343._M_impl.D.170688._M_finish;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236448, _1);
  D.255609 = D.236448;
  D.236448 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255609;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=10208, decl_uid=228249, cgraph_uid=6840, symbol_order=7630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9630, decl_uid=170952, cgraph_uid=6262, symbol_order=7048)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::begin (struct vector * const this)
{
  struct iterator D.236402;
  struct iterator D.255612;

  <bb 2> :
  _1 = &this->D.171343._M_impl.D.170688._M_start;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236402, _1);
  D.255612 = D.236402;
  D.236402 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255612;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=9631, decl_uid=228268, cgraph_uid=6263, symbol_order=7049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.255617;
  struct __normal_iterator D.255616;
  struct __normal_iterator D.255615;

  <bb 2> :
  D.255616 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__last);
  D.255617 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first);
  D.255615 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.255617, D.255616, __result);

  <bb 3> :
<L0>:
  return D.255615;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=10210, decl_uid=236414, cgraph_uid=6842, symbol_order=7632)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.255619;

  <bb 2> :
  D.255619 = __it;

  <bb 3> :
<L0>:
  return D.255619;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=10211, decl_uid=236420, cgraph_uid=6845, symbol_order=7635)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct symbolicinfoPatharray * D.255623;
  struct __normal_iterator D.255621;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__result);
  _2 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__last);
  _3 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__first);
  D.255623 = std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_3, _2, _1);
  _4 = D.255623;
  D.255621 = std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__result, _4);

  <bb 3> :
<L0>:
  return D.255621;

}



;; Function std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIP21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10646, decl_uid=241218, cgraph_uid=7278, symbol_order=8068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  struct symbolicinfoPatharray * D.255624;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.255624 = *_1;

  <bb 3> :
<L0>:
  return D.255624;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10834, decl_uid=228236, cgraph_uid=7466, symbol_order=8258)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  struct symbolicinfoPatharray * const & D.255626;

  <bb 2> :
  D.255626 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255626;

}



;; Function std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIPK21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10645, decl_uid=241067, cgraph_uid=7277, symbol_order=8067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  const struct symbolicinfoPatharray * D.255628;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.255628 = *_1;

  <bb 3> :
<L0>:
  return D.255628;

}



;; Function std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10647, decl_uid=241366, cgraph_uid=7279, symbol_order=8069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255632;
  struct symbolicinfoPatharray * D.255630;

  <bb 2> :
  D.255632 = std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255630 = D.255632;

  <bb 3> :
<L0>:
  return D.255630;

}



;; Function std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10835, decl_uid=243809, cgraph_uid=7467, symbol_order=8259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255633;

  <bb 2> :
  D.255633 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255633;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI21symbolicinfoPatharrayEEPT_PKS4_S7_S5_, funcdef_no=10912, decl_uid=244758, cgraph_uid=7544, symbol_order=8336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  const ptrdiff_t _Num;
  struct symbolicinfoPatharray * D.255638;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1876_2 = (long unsigned int) _Num;
  _3 = _Num.1876_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1877_4 = (long unsigned int) _Num;
  _5 = _Num.1877_4 * 16;
  D.255638 = __result + _5;

  <bb 5> :
<L3>:
  return D.255638;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10648, decl_uid=241370, cgraph_uid=7280, symbol_order=8070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __from, struct symbolicinfoPatharray * __res)
{
  struct __normal_iterator D.255640;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.255640 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.255640;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10836, decl_uid=228227, cgraph_uid=7468, symbol_order=8260)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct symbolicinfoPatharray * const D.244764;
  struct __normal_iterator D.244765;
  struct __normal_iterator D.255642;

  <bb 2> :
  _1 = this->_M_current;
  __n.1878_2 = (long unsigned int) __n;
  _3 = __n.1878_2 * 16;
  _4 = _1 + _3;
  D.244764 = _4;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.244765, &D.244764);
  D.255642 = D.244765;
  D.244765 = {CLOBBER};
  D.244764 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.255642;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=9633, decl_uid=228274, cgraph_uid=6265, symbol_order=7051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.236451)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=10214, decl_uid=236453, cgraph_uid=6846, symbol_order=7636)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10649, decl_uid=241394, cgraph_uid=7281, symbol_order=8071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator D.243819, struct __normal_iterator D.243820)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt4copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=9634, decl_uid=228282, cgraph_uid=6266, symbol_order=7052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255648;
  struct symbolicinfoPatharray * D.255646;

  <bb 2> :
  _1 = std::__miter_base<symbolicinfoPatharray*> (__last);
  _2 = std::__miter_base<symbolicinfoPatharray*> (__first);
  D.255648 = std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_2, _1, __result);
  D.255646 = D.255648;

  <bb 3> :
<L0>:
  return D.255646;

}



;; Function std::__miter_base<symbolicinfoPatharray*> (_ZSt12__miter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10215, decl_uid=236469, cgraph_uid=6847, symbol_order=7637)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__miter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.255649;

  <bb 2> :
  D.255649 = __it;

  <bb 3> :
<L0>:
  return D.255649;

}



;; Function std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt13__copy_move_aILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10216, decl_uid=236471, cgraph_uid=6848, symbol_order=7638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255653;
  struct symbolicinfoPatharray * D.255651;

  <bb 2> :
  __result.1879_1 = __result;
  _2 = std::__niter_base<symbolicinfoPatharray*> (__result.1879_1);
  _3 = std::__niter_base<symbolicinfoPatharray*> (__last);
  _4 = std::__niter_base<symbolicinfoPatharray*> (__first);
  D.255653 = std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_4, _3, _2);
  _5 = D.255653;
  D.255651 = std::__niter_wrap<symbolicinfoPatharray*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255651;

}



;; Function std::__niter_base<symbolicinfoPatharray*> (_ZSt12__niter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10650, decl_uid=241405, cgraph_uid=7282, symbol_order=8072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.255654;

  <bb 2> :
  D.255654 = __it;

  <bb 3> :
<L0>:
  return D.255654;

}



;; Function std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10651, decl_uid=241407, cgraph_uid=7283, symbol_order=8073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255658;
  struct symbolicinfoPatharray * D.255656;

  <bb 2> :
  D.255658 = std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255656 = D.255658;

  <bb 3> :
<L0>:
  return D.255656;

}



;; Function std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10837, decl_uid=243828, cgraph_uid=7469, symbol_order=8261)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255659;

  <bb 2> :
  D.255659 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255659;

}



;; Function std::__niter_wrap<symbolicinfoPatharray*> (_ZSt12__niter_wrapIP21symbolicinfoPatharrayET_RKS2_S2_, funcdef_no=10652, decl_uid=241411, cgraph_uid=7284, symbol_order=8074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_wrap<symbolicinfoPatharray*> (struct symbolicinfoPatharray * const & D.243832, struct symbolicinfoPatharray * __res)
{
  struct symbolicinfoPatharray * D.255661;

  <bb 2> :
  D.255661 = __res;

  <bb 3> :
<L0>:
  return D.255661;

}



;; Function std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIP21symbolicinfoPatharrayS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=9635, decl_uid=228286, cgraph_uid=6267, symbol_order=7053)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result, struct allocator & D.236478)
{
  struct symbolicinfoPatharray * D.255665;
  struct symbolicinfoPatharray * D.255663;

  <bb 2> :
  D.255665 = std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255663 = D.255665;

  <bb 3> :
<L0>:
  return D.255663;

}



;; Function std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=10217, decl_uid=236480, cgraph_uid=6849, symbol_order=7639)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255668;
  const bool __assignable;
  struct symbolicinfoPatharray * D.255666;

  <bb 2> :
  __assignable = 1;
  D.255668 = std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255666 = D.255668;

  <bb 3> :
<L0>:
  return D.255666;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP21symbolicinfoPatharrayS3_EET0_T_S5_S4_, funcdef_no=10653, decl_uid=241445, cgraph_uid=7285, symbol_order=8075)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.255669;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_1, __first);
  __first = __first + 16;
  __cur = __cur + 16;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.255669 = __cur;

  <bb 6> :
<L3>:
  return D.255669;

}



;; Function std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRS0_EEvPT_DpOT0_, funcdef_no=10838, decl_uid=243840, cgraph_uid=7470, symbol_order=8262)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, struct symbolicinfoPatharray & __args#0)
{
  void * D.244789;
  void * D.244788;
  const struct symbolicinfoPatharray * D.244790;

  <bb 2> :
  D.244790 = std::forward<symbolicinfoPatharray&> (__args#0);
  D.244788 = __p;
  D.244789 = operator new (16, D.244788);
  MEM[(struct symbolicinfoPatharray *)D.244789] = *D.244790;
  return;

}



;; Function std::forward<symbolicinfoPatharray&> (_ZSt7forwardIR21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10913, decl_uid=244786, cgraph_uid=7545, symbol_order=8337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray & std::forward<symbolicinfoPatharray&> (struct type & __t)
{
  struct symbolicinfoPatharray & D.255671;

  <bb 2> :
  D.255671 = __t;

  <bb 3> :
<L0>:
  return D.255671;

}



;; Function hash_map<tree_node*, function_path_array>::put (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7825, decl_uid=191902, cgraph_uid=4458, symbol_order=5240)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_path_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_path_array & v)
{
  bool D.255680;
  struct hash_entry * D.255679;
  unsigned int D.255678;
  bool ins;
  struct hash_entry * e;
  bool D.255676;
  void * D.214882;
  void * D.214881;

  <bb 2> :
  _1 = &this->m_table;
  D.255678 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.255678;
  D.255679 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.255679;
  D.255680 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (e);
  ins = D.255680;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214881 = &e->m_value;
  D.214882 = operator new (32, D.214881);
  function_path_array::function_path_array (D.214882, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_path_array::operator= (_4, v);

  <bb 5> :
  D.255676 = ~ins;

  <bb 6> :
<L3>:
  return D.255676;

  <bb 7> :
<L4>:
  operator delete (D.214882, D.214881);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8789, decl_uid=192060, cgraph_uid=5421, symbol_order=6207)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.255731;
  bool D.255730;
  bool D.255729;
  bool D.255728;
  bool D.255727;
  bool D.255726;
  struct value_type * D.255725;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1885;
  bool retval.1884;
  bool retval.1883;
  bool retval.1882;
  bool retval.1881;
  bool retval.1880;
  struct value_type * D.255687;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.255726 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1880 = D.255726;
  if (retval.1880 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.255727 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1881 = D.255727;
  if (retval.1881 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.255728 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.1882 = D.255728;
  if (retval.1882 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.255687 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.255729 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1883 = D.255729;
  if (retval.1883 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.255730 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1884 = D.255730;
  if (retval.1884 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.255731 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.1885 = D.255731;
  if (retval.1885 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.255687 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.255687 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.255687 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.255687 = _37 + _39;

  <bb 27> :
<L37>:
  return D.255687;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9636, decl_uid=192141, cgraph_uid=6280, symbol_order=7066)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.255762;
  unsigned int D.255761;
  bool D.255760;
  bool D.255759;
  struct mem_alloc_description & D.255758;
  struct value_type * D.255757;
  unsigned int D.255756;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236504;
  void * D.236503;
  struct hash_entry & D.236541;
  bool iftmp.1889;
  bool retval.1888;
  bool iftmp.1887;
  bool retval.1886;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1887 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1887 = 0;

  <bb 6> :
  retval.1886 = iftmp.1887;
  if (retval.1886 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.255756 = hash_table_higher_prime_index (_5);
  nindex = D.255756;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.255757 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.255757;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.255759 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.255759;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.255760 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.255760;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1889 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1889 = 0;

  <bb 15> :
  retval.1888 = iftmp.1889;
  if (retval.1888 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.255761 = hash_map<tree_node*, function_path_array>::hash_entry::hash (x);
  _16 = D.255761;
  D.255762 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.255762;
  D.236541 = std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (x);
  D.236503 = q;
  D.236504 = operator new (40, D.236503);
  hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (D.236504, D.236541);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10218, decl_uid=192036, cgraph_uid=6850, symbol_order=7640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.255763;

  <bb 2> :
  D.255763 = this->m_size;

  <bb 3> :
<L0>:
  return D.255763;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10219, decl_uid=192038, cgraph_uid=6851, symbol_order=7641)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.255765;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.255765 = _1 - _2;

  <bb 3> :
<L0>:
  return D.255765;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10220, decl_uid=192138, cgraph_uid=6852, symbol_order=7642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1890;
  bool D.255767;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1890 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1890 = 0;

  <bb 6> :
  D.255767 = iftmp.1890;

  <bb 7> :
<L4>:
  return D.255767;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9288, decl_uid=192128, cgraph_uid=5920, symbol_order=6706)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.255789;
  struct value_type * D.255788;
  struct mem_alloc_description & D.255787;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.255785;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.255788 = xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (n);
  nentries = D.255788;
  goto <bb 6>; [INV]

  <bb 5> :
  D.255789 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (n);
  nentries = D.255789;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.255785 = nentries;

  <bb 9> :
<L14>:
  return D.255785;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9974, decl_uid=216820, cgraph_uid=6606, symbol_order=7396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.255792;
  struct hash_entry * D.255790;

  <bb 2> :
  D.255792 = xcalloc (count, 40);
  D.255790 = D.255792;

  <bb 3> :
<L0>:
  return D.255790;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9975, decl_uid=233019, cgraph_uid=6607, symbol_order=7397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.255799;
  struct hash_entry * D.255798;
  struct hash_entry * D.255796;
  bool retval.1891;

  <bb 2> :
  retval.1891 = need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ();
  if (retval.1891 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.255798 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.255796 = D.255798;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.255799 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.255796 = D.255799;

  <bb 5> :
<L2>:
  return D.255796;

}



;; Function finalize<hash_map<tree_node*, function_path_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10486, decl_uid=239683, cgraph_uid=7121, symbol_order=7911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_path_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10488, decl_uid=243108, cgraph_uid=7119, symbol_order=7909)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_path_array::~function_path_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10485, decl_uid=239682, cgraph_uid=7117, symbol_order=7907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ()
{
  bool D.255800;

  <bb 2> :
  D.255800 = 1;

  <bb 3> :
<L0>:
  return D.255800;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10222, decl_uid=191961, cgraph_uid=6854, symbol_order=7644)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_path_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.255804;
  hashval_t D.255802;

  <bb 2> :
  _1 = &e->m_key;
  D.255804 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_1);
  D.255802 = D.255804;

  <bb 3> :
<L0>:
  return D.255802;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10221, decl_uid=192131, cgraph_uid=6853, symbol_order=7643)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.255817;
  bool D.255816;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1893;
  struct value_type * D.255808;
  bool retval.1892;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.255816 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1892 = D.255816;
  if (retval.1892 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255808 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.255817 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1893 = D.255817;
  if (retval.1893 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.255808 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.255808;

}



;; Function std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10223, decl_uid=236501, cgraph_uid=6855, symbol_order=7645)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.255818;

  <bb 2> :
  D.255818 = __t;

  <bb 3> :
<L0>:
  return D.255818;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9647, decl_uid=236526, cgraph_uid=6278, symbol_order=7064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236528)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236528->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236528->m_value;
  function_path_array::function_path_array (_2, _3);
  return;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2EOS_, funcdef_no=9645, decl_uid=192253, cgraph_uid=6275, symbol_order=7061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, struct function_path_array & D.192255)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192255->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192255->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9643, decl_uid=174512, cgraph_uid=6272, symbol_order=7058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this, struct vector & D.174514)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174555;
  _2 = &D.174514->D.174555;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9641, decl_uid=173980, cgraph_uid=6269, symbol_order=7055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.173982)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.173982->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10225, decl_uid=173886, cgraph_uid=6857, symbol_order=7647)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  std::allocator<function_path>::allocator (this, _1);
  _2 = &this->D.173900;
  _3 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  _4 = &_3->D.173900;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI13function_pathSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10654, decl_uid=241475, cgraph_uid=7286, symbol_order=8076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.255820;

  <bb 2> :
  D.255820 = __t;

  <bb 3> :
<L0>:
  return D.255820;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10656, decl_uid=173842, cgraph_uid=7288, symbol_order=8078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8924, decl_uid=216822, cgraph_uid=5556, symbol_order=6342)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9649, decl_uid=192149, cgraph_uid=6281, symbol_order=7067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10227, decl_uid=191973, cgraph_uid=6859, symbol_order=7649)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10658, decl_uid=241490, cgraph_uid=7290, symbol_order=8080)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_path_array::operator= (_ZN19function_path_arrayaSERKS_, funcdef_no=7826, decl_uid=214883, cgraph_uid=4457, symbol_order=5239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path_array & function_path_array::operator= (struct function_path_array * const this, const struct function_path_array & D.214884)
{
  struct function_path_array & D.255823;

  <bb 2> :
  _1 = D.214884->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &D.214884->function_path_array;
  _3 = &this->function_path_array;
  std::vector<function_path>::operator= (_3, _2);
  D.255823 = this;

  <bb 3> :
<L0>:
  return D.255823;

}



;; Function symbolicinfo::~symbolicinfo (_ZN12symbolicinfoD2Ev, funcdef_no=6823, decl_uid=202189, cgraph_uid=3454, symbol_order=4228)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::~symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::~vector (_1);
  _2 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_2);
  _3 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_3);
  _4 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_4);
  *this = {CLOBBER};
  return;

}



;; Function PointerConstraint (_Z17PointerConstraintP3ptbS0_, funcdef_no=6825, decl_uid=202230, cgraph_uid=3457, symbol_order=4231)

Removing basic block 27
Removing basic block 37
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Merging blocks 77 and 80
Removing basic block 82
Removing basic block 105
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
;;
;; Loop 1
;;  header 71, multiple latches: 69 70
;;  depth 1, outer 0
;;  nodes: 71 69 70 15 17 56 65 64 63 62 60 61 59 57 58 55 54 53 52 22 37 36 39 49 50 46 38 51 44 45 41 43 42 40 48 47 27 35 34 32 33 29 31 30 28 23 26 25 24 20 21 19 18 16 14 13 12 11 67 66
;;
;; Loop 3
;;  header 62, latch 61
;;  depth 2, outer 1
;;  nodes: 62 61
;;
;; Loop 2
;;  header 59, latch 58
;;  depth 2, outer 1
;;  nodes: 59 58
;; 2 succs { 114 3 }
;; 3 succs { 114 4 }
;; 4 succs { 114 5 }
;; 5 succs { 114 6 }
;; 6 succs { 114 7 }
;; 7 succs { 114 8 }
;; 8 succs { 9 94 }
;; 9 succs { 10 72 }
;; 10 succs { 71 }
;; 11 succs { 15 12 }
;; 12 succs { 15 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 70 }
;; 16 succs { 17 18 }
;; 17 succs { 70 }
;; 18 succs { 20 19 }
;; 19 succs { 20 21 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 52 }
;; 23 succs { 24 27 }
;; 24 succs { 113 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 36 }
;; 28 succs { 113 29 }
;; 29 succs { 30 33 }
;; 30 succs { 113 31 }
;; 31 succs { 32 33 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 37 52 }
;; 37 succs { 38 52 }
;; 38 succs { 39 52 }
;; 39 succs { 40 52 }
;; 40 succs { 113 41 }
;; 41 succs { 42 45 }
;; 42 succs { 113 43 }
;; 43 succs { 44 45 }
;; 44 succs { 46 }
;; 45 succs { 46 }
;; 46 succs { 47 52 }
;; 47 succs { 113 48 }
;; 48 succs { 113 49 }
;; 49 succs { 50 52 }
;; 50 succs { 51 52 }
;; 51 succs { 113 52 }
;; 52 succs { 113 53 }
;; 53 succs { 113 54 }
;; 54 succs { 113 55 }
;; 55 succs { 56 57 }
;; 56 succs { 70 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 58 60 }
;; 60 succs { 62 }
;; 61 succs { 62 }
;; 62 succs { 61 63 }
;; 63 succs { 113 64 }
;; 64 succs { 65 66 }
;; 65 succs { 70 }
;; 66 succs { 113 67 }
;; 67 succs { 68 69 }
;; 68 succs { 72 }
;; 69 succs { 71 }
;; 70 succs { 71 }
;; 71 succs { 11 72 }
;; 72 succs { 114 73 }
;; 73 succs { 114 74 }
;; 74 succs { 114 75 }
;; 75 succs { 114 76 }
;; 76 succs { 114 77 }
;; 77 succs { 114 78 }
;; 78 succs { 114 79 }
;; 79 succs { 114 80 }
;; 80 succs { 114 81 }
;; 81 succs { 114 82 }
;; 82 succs { 114 83 }
;; 83 succs { 114 84 }
;; 84 succs { 114 85 }
;; 85 succs { 114 86 }
;; 86 succs { 114 87 }
;; 87 succs { 114 88 }
;; 88 succs { 114 89 }
;; 89 succs { 114 90 }
;; 90 succs { 114 91 }
;; 91 succs { 114 92 }
;; 92 succs { 114 93 }
;; 93 succs { 114 95 }
;; 94 succs { 114 95 }
;; 95 succs { 114 96 }
;; 96 succs { 114 97 }
;; 97 succs { 114 98 }
;; 98 succs { 114 99 }
;; 99 succs { 114 100 }
;; 100 succs { 114 101 }
;; 101 succs { 114 102 }
;; 102 succs { 114 103 }
;; 103 succs { 114 104 }
;; 104 succs { 114 105 }
;; 105 succs { 114 106 }
;; 106 succs { 114 107 }
;; 107 succs { 114 108 }
;; 108 succs { 114 109 }
;; 109 succs { 114 110 }
;; 110 succs { 114 111 }
;; 111 succs { 114 112 }
;; 112 succs { 1 }
;; 113 succs { 114 }
;; 114 succs { }
void PointerConstraint (struct ptb * ptable, struct ptb * ftable)
{
  struct gimple_array * D.255913;
  const char * D.255912;
  const char * D.255911;
  union tree_node * D.255910;
  union tree_node * D.255909;
  union tree_node * D.255908;
  union tree_node * D.255907;
  union tree_node * D.255906;
  union tree_node * D.255905;
  int pass;
  struct gimple * def_stmt;
  const char * name;
  struct gimple_array start;
  int colectCount;
  int count;
  struct ptb * processtable;
  int Entrypoint;
  double time_used2;
  double time_used;
  struct timespec temp;
  struct cgraph_node * node;
  struct gimple_array start;
  struct gimple_array * used_stmt;
  struct timespec aend;
  struct timespec astart;
  bool retval.1913;
  bool retval.1912;
  bool retval.1911;
  bool retval.1910;
  bool iftmp.1909;
  bool retval.1908;
  bool retval.1907;
  bool iftmp.1906;
  bool retval.1905;
  bool retval.1904;
  bool retval.1903;
  bool retval.1902;
  bool iftmp.1901;
  bool retval.1900;

  <bb 2> :
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  clock_gettime (1, &astart);
  Entrypoint = 0;
  stderr.1894_1 = stderr;
  __builtin_fwrite ("start PointerConstraint\n", 1, 24, stderr.1894_1);

  <bb 3> :
  _2 = ftable->size;
  stderr.1895_3 = stderr;
  fprintf (stderr.1895_3, "pointer ftable is %d \n", _2);

  <bb 4> :
  _4 = ptable->size;
  stderr.1896_5 = stderr;
  fprintf (stderr.1896_5, "pointer ptable is %d \n", _4);

  <bb 5> :
  stderr.1897_6 = stderr;
  __builtin_fwrite ("===============The second stage : Mapping stmt=================\n", 1, 64, stderr.1897_6);

  <bb 6> :
  FunctionStmtMappingAssign (ptable, used_stmt);

  <bb 7> :
  processtable = ptable;
  stderr.1898_7 = stderr;
  __builtin_fwrite ("start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt\n", 1, 105, stderr.1898_7);

  <bb 8> :
  GIMPLE_FREE_COUNT.1899_8 = GIMPLE_FREE_COUNT;
  if (GIMPLE_FREE_COUNT.1899_8 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 9> :
  _9 = processtable->size;
  if (_9 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 10> :
  count = 0;
  goto <bb 71>; [INV]

  <bb 11> :
  _10 = processtable->target;
  _11 = _10->typed.type;
  _12 = _11->base.code;
  if (_12 == 22)
    goto <bb 15>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _13 = processtable->target;
  _14 = _13->typed.type;
  _15 = _14->base.code;
  if (_15 == 21)
    goto <bb 15>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _16 = processtable->target;
  _17 = _16->typed.type;
  _18 = _17->base.code;
  if (_18 == 17)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _19 = processtable->target;
  _20 = _19->base.code;
  if (_20 != 153)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 70>; [INV]

  <bb 16> :
  _21 = processtable->target;
  _22 = _21->base.code;
  if (_22 == 26)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 70>; [INV]

  <bb 18> :
  colectCount = 0;
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  _23 = processtable->target;
  def_stmt = _23->ssa_name.def_stmt;
  levelsize = 0;
  _24 = gimple_code (def_stmt);
  if (_24 != 20)
    goto <bb 20>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  _25 = gimple_code (def_stmt);
  if (_25 != 131)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  iftmp.1901 = 1;
  goto <bb 22>; [INV]

  <bb 21> :
  iftmp.1901 = 0;

  <bb 22> :
  retval.1900 = iftmp.1901;
  if (retval.1900 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 23> :
  pass = 0;
  _26 = gimple_code (def_stmt);
  retval.1902 = _26 == 8;
  if (retval.1902 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 24> :
  D.255905 = gimple_call_fn (def_stmt);

  <bb 25> :
  _27 = D.255905;
  _28 = _27->base.code;
  retval.1903 = _28 != 165;
  if (retval.1903 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  pass = 1;

  <bb 27> :
  _29 = gimple_code (def_stmt);
  retval.1904 = _29 == 6;
  if (retval.1904 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 28> :
  D.255906 = gimple_assign_rhs1 (def_stmt);

  <bb 29> :
  _30 = D.255906;
  _31 = _30->base.code;
  if (_31 != 165)
    goto <bb 30>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 30> :
  D.255907 = gimple_assign_rhs1 (def_stmt);

  <bb 31> :
  _32 = D.255907;
  _33 = _32->base.code;
  if (_33 != 36)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  iftmp.1906 = 1;
  goto <bb 34>; [INV]

  <bb 33> :
  iftmp.1906 = 0;

  <bb 34> :
  retval.1905 = iftmp.1906;
  if (retval.1905 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  pass = 1;

  <bb 36> :
  _34 = processtable->target;
  _35 = _34->base.code;
  if (_35 != 131)
    goto <bb 37>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 37> :
  if (pass == 1)
    goto <bb 38>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 38> :
  if (def_stmt != 0B)
    goto <bb 39>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 39> :
  _36 = gimple_code (def_stmt);
  retval.1907 = _36 == 8;
  if (retval.1907 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 40> :
  D.255908 = gimple_call_fn (def_stmt);

  <bb 41> :
  _37 = D.255908;
  if (_37 != 0B)
    goto <bb 42>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 42> :
  D.255909 = gimple_call_fndecl (def_stmt);

  <bb 43> :
  _38 = D.255909;
  if (_38 != 0B)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  iftmp.1909 = 1;
  goto <bb 46>; [INV]

  <bb 45> :
  iftmp.1909 = 0;

  <bb 46> :
  retval.1908 = iftmp.1909;
  if (retval.1908 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 47> :
  D.255910 = gimple_call_fn (def_stmt);

  <bb 48> :
  _39 = D.255910;
  D.255911 = get_name (_39);

  <bb 49> :
  name = D.255911;
  if (name != 0B)
    goto <bb 50>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 50> :
  _40 = strcmp (name, "malloc");
  if (_40 != 0)
    goto <bb 51>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 51> :
  _41 = processtable->target;
  _42 = processtable->target;
  Prenew_search_imm_use (used_stmt, _42, _41);

  <bb 52> :
  _43 = processtable->target;
  now_tree = _43;
  _44 = processtable->target;
  _45 = processtable->target;
  new_search_imm_use (used_stmt, _45, _44);

  <bb 53> :
  _46 = processtable->target;
  _47 = processtable->target;
  _48 = processtable->last_stmt;
  set_gimple_array (used_stmt, _48, _47, _46, 0B);

  <bb 54> :
  _49 = used_stmt->target;
  _50 = _49->base.code;
  _51 = (tree_code) _50;
  D.255912 = get_tree_code_name (_51);

  <bb 55> :
  _52 = D.255912;
  _53 = strcmp (_52, "<invalid tree code>");
  retval.1910 = _53 == 0;
  if (retval.1910 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 70>; [INV]

  <bb 57> :
  goto <bb 59>; [INV]

  <bb 58> :
  colectCount = colectCount + 1;
  std::vector<gimple*>::pop_back (&new_gimple_array);

  <bb 59> :
  _54 = std::vector<gimple*>::size (&new_gimple_array);
  retval.1911 = _54 != 0;
  if (retval.1911 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  goto <bb 62>; [INV]

  <bb 61> :
  std::vector<tree_node*>::pop_back (&new_gimpletree_array);

  <bb 62> :
  _55 = std::vector<tree_node*>::size (&new_gimpletree_array);
  retval.1912 = _55 != 0;
  if (retval.1912 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 63> :
  treeGimpleArray.1914_56 = treeGimpleArray;
  _57 = &processtable->target;
  D.255913 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1914_56, _57);

  <bb 64> :
  _58 = D.255913;
  retval.1913 = _58 != 0B;
  if (retval.1913 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 70>; [INV]

  <bb 66> :
  treeGimpleArray.1915_59 = treeGimpleArray;
  _60 = &processtable->target;
  hash_map<tree_node*, gimple_array>::put (treeGimpleArray.1915_59, _60, used_stmt);

  <bb 67> :
  Entrypoint = Entrypoint + 1;
  _61 = processtable->next;
  _62 = _61->target;
  if (_62 == 0B)
    goto <bb 68>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 68> :
  start = {CLOBBER};
  goto <bb 72>; [INV]

  <bb 69> :
  processtable = processtable->next;
  start = {CLOBBER};
  goto <bb 71>; [INV]

  <bb 70> :
  start = {CLOBBER};

  <bb 71> :
  _63 = processtable->next;
  if (_63 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  FunctionStmtMappingRet (ptable, ftable, used_stmt);

  <bb 73> :
  stderr.1916_64 = stderr;
  __builtin_fwrite ("===============The second stage : build fucntion type=================\n", 1, 71, stderr.1916_64);

  <bb 74> :
  stderr.1917_65 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1917_65);

  <bb 75> :
  stderr.1918_66 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1918_66);

  <bb 76> :
  stderr.1919_67 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.1919_67);

  <bb 77> :
  stderr.1920_68 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.1920_68);

  <bb 78> :
  stderr.1921_69 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.1921_69);

  <bb 79> :
  stderr.1922_70 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.1922_70);

  <bb 80> :
  stderr.1923_71 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1923_71);

  <bb 81> :
  stderr.1924_72 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1924_72);

  <bb 82> :
  stderr.1925_73 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1925_73);

  <bb 83> :
  stderr.1926_74 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1926_74);

  <bb 84> :
  stderr.1927_75 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1927_75);

  <bb 85> :
  stderr.1928_76 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1928_76);

  <bb 86> :
  stderr.1929_77 = stderr;
  __builtin_fwrite ("===============The second stage : record fucntion =================\n", 1, 68, stderr.1929_77);

  <bb 87> :
  record_fucntion (node);

  <bb 88> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 89> :
  _78 = temp.tv_sec;
  _79 = (double) _78;
  _80 = temp.tv_nsec;
  _81 = (double) _80;
  _82 = _81 / 1.0e+9;
  time_used = _79 + _82;
  stderr.1930_83 = stderr;
  __builtin_fwrite ("\n=============== The third stage : Start detection  =================\n", 1, 70, stderr.1930_83);

  <bb 90> :
  dump_fucntion (node, ptable, used_stmt);

  <bb 91> :
  stderr.1931_84 = stderr;
  __builtin_fwrite ("\n=============== The third stage : detection  End=================\n", 1, 67, stderr.1931_84);

  <bb 92> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 93> :
  _85 = temp.tv_sec;
  _86 = (double) _85;
  _87 = temp.tv_nsec;
  _88 = (double) _87;
  _89 = _88 / 1.0e+9;
  time_used2 = _86 + _89;
  printfBasicblock ();
  goto <bb 95>; [INV]

  <bb 94> :
  stderr.1932_90 = stderr;
  __builtin_fwrite ("\x1b[40;41m GIMPLE STMT NO FREE STMT\x1b[0m\n", 1, 38, stderr.1932_90);

  <bb 95> :
  stderr.1933_91 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1933_91);

  <bb 96> :
  stderr.1934_92 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.1934_92);

  <bb 97> :
  stderr.1935_93 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.1935_93);

  <bb 98> :
  stderr.1936_94 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.1936_94);

  <bb 99> :
  stderr.1937_95 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.1937_95);

  <bb 100> :
  stderr.1938_96 = stderr;
  __builtin_fwrite ("                   \n", 1, 20, stderr.1938_96);

  <bb 101> :
  stderr.1939_97 = stderr;
  __builtin_fwrite ("    ~~~~~~~~~~~  \n", 1, 18, stderr.1939_97);

  <bb 102> :
  stderr.1940_98 = stderr;
  __builtin_fwrite (" ~~~~~~\n", 1, 8, stderr.1940_98);

  <bb 103> :
  stderr.1941_99 = stderr;
  __builtin_fwrite ("           ~~~~~~~\n", 1, 19, stderr.1941_99);

  <bb 104> :
  GIMPLE_MALLOC_COUNT.1942_100 = GIMPLE_MALLOC_COUNT;
  stderr.1943_101 = stderr;
  fprintf (stderr.1943_101, "\x1b[40;34m    gimple malloc count : %d \x1b[0m\n", GIMPLE_MALLOC_COUNT.1942_100);

  <bb 105> :
  GIMPLE_FREE_COUNT.1944_102 = GIMPLE_FREE_COUNT;
  stderr.1945_103 = stderr;
  fprintf (stderr.1945_103, "\x1b[40;34m    gimple free   count : %d \x1b[0m\n", GIMPLE_FREE_COUNT.1944_102);

  <bb 106> :
  stderr.1946_104 = stderr;
  fprintf (stderr.1946_104, "\x1b[40;34m    find Entry point : %d \x1b[0m\n", Entrypoint);

  <bb 107> :
  totalsize.1947_105 = totalsize;
  _106 = (double) totalsize.1947_105;
  _107 = _106 * 9.99999999999999954748111825886258685613938723690807819366e-7;
  stderr.1948_108 = stderr;
  fprintf (stderr.1948_108, "\x1b[40;34m    used_stmt array stack totalsize of : %f mb\x1b[0m\n", _107);

  <bb 108> :
  stderr.1949_109 = stderr;
  fprintf (stderr.1949_109, "\x1b[40;34m    collect time: : %f s \x1b[0m\n", time_used);

  <bb 109> :
  stderr.1950_110 = stderr;
  fprintf (stderr.1950_110, "\x1b[40;34m    algorithm time: %f s \x1b[0m\n", time_used2);

  <bb 110> :
  gimplestmt_count.1951_111 = gimplestmt_count;
  stderr.1952_112 = stderr;
  fprintf (stderr.1952_112, "\x1b[40;34m    gimple stmt count : : %d \x1b[0m\n", gimplestmt_count.1951_111);

  <bb 111> :
  stderr.1953_113 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1953_113);

  <bb 112> :
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  return;

  <bb 113> :
<L78>:
  start = {CLOBBER};
  resx 2

  <bb 114> :
<L79>:
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  resx 1

}



;; Function std::vector<gimple*>::pop_back (_ZNSt6vectorIP6gimpleSaIS1_EE8pop_backEv, funcdef_no=7827, decl_uid=183661, cgraph_uid=4459, symbol_order=5241)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.183971._M_impl.D.183327._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.183971._M_impl.D.183327._M_finish = _2;
  _3 = this->D.183971._M_impl.D.183327._M_finish;
  _4 = &this->D.183971._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_ZNSt16allocator_traitsISaIP6gimpleEE7destroyIS1_EEvRS2_PT_, funcdef_no=8791, decl_uid=214891, cgraph_uid=5423, symbol_order=6209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (struct allocator_type & __a, struct gimple * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE7destroyIS2_EEvPT_, funcdef_no=9650, decl_uid=228314, cgraph_uid=6282, symbol_order=7068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (struct new_allocator * const this, struct gimple * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::put (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7828, decl_uid=190062, cgraph_uid=4460, symbol_order=5242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, gimple_array>::put (struct hash_map * const this, union tree_node * const & k, const struct gimple_array & v)
{
  bool D.255926;
  struct hash_entry * D.255925;
  unsigned int D.255924;
  bool ins;
  struct hash_entry * e;
  bool D.255922;
  void * D.215031;
  void * D.215030;

  <bb 2> :
  _1 = &this->m_table;
  D.255924 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.255924;
  D.255925 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.255925;
  D.255926 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (e);
  ins = D.255926;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.215030 = &e->m_value;
  D.215031 = operator new (48, D.215030);
  MEM[(struct gimple_array *)D.215031] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.255922 = ~ins;

  <bb 6> :
<L3>:
  return D.255922;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8792, decl_uid=190217, cgraph_uid=5424, symbol_order=6210)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.255976;
  bool D.255975;
  bool D.255974;
  bool D.255973;
  bool D.255972;
  bool D.255971;
  struct value_type * D.255970;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1959;
  bool retval.1958;
  bool retval.1957;
  bool retval.1956;
  bool retval.1955;
  bool retval.1954;
  struct value_type * D.255932;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.255971 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1954 = D.255971;
  if (retval.1954 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.255972 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1955 = D.255972;
  if (retval.1955 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.255973 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.1956 = D.255973;
  if (retval.1956 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.255932 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.255974 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1957 = D.255974;
  if (retval.1957 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.255975 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1958 = D.255975;
  if (retval.1958 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.255976 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.1959 = D.255976;
  if (retval.1959 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.255932 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.255932 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.255932 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.255932 = _37 + _39;

  <bb 27> :
<L37>:
  return D.255932;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9651, decl_uid=190298, cgraph_uid=6283, symbol_order=7069)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.256007;
  unsigned int D.256006;
  bool D.256005;
  bool D.256004;
  struct mem_alloc_description & D.256003;
  struct value_type * D.256002;
  unsigned int D.256001;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236569;
  void * D.236568;
  struct hash_entry * D.236594;
  bool iftmp.1963;
  bool retval.1962;
  bool iftmp.1961;
  bool retval.1960;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1961 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1961 = 0;

  <bb 6> :
  retval.1960 = iftmp.1961;
  if (retval.1960 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.256001 = hash_table_higher_prime_index (_5);
  nindex = D.256001;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.256002 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.256002;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.256004 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.256004;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.256005 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.256005;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1963 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1963 = 0;

  <bb 15> :
  retval.1962 = iftmp.1963;
  if (retval.1962 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.256006 = hash_map<tree_node*, gimple_array>::hash_entry::hash (x);
  _16 = D.256006;
  D.256007 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.256007;
  D.236594 = std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (x);
  D.236568 = q;
  D.236569 = operator new (56, D.236568);
  MEM[(struct value_type *)D.236569] = *D.236594;

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10228, decl_uid=190193, cgraph_uid=6860, symbol_order=7650)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.256008;

  <bb 2> :
  D.256008 = this->m_size;

  <bb 3> :
<L0>:
  return D.256008;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10229, decl_uid=190195, cgraph_uid=6861, symbol_order=7651)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.256010;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.256010 = _1 - _2;

  <bb 3> :
<L0>:
  return D.256010;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10230, decl_uid=190295, cgraph_uid=6862, symbol_order=7652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1964;
  bool D.256012;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1964 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1964 = 0;

  <bb 6> :
  D.256012 = iftmp.1964;

  <bb 7> :
<L4>:
  return D.256012;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9204, decl_uid=190285, cgraph_uid=5836, symbol_order=6622)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256034;
  struct value_type * D.256033;
  struct mem_alloc_description & D.256032;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256030;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256033 = xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (n);
  nentries = D.256033;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256034 = ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (n);
  nentries = D.256034;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256030 = nentries;

  <bb 9> :
<L14>:
  return D.256030;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9914, decl_uid=216628, cgraph_uid=6546, symbol_order=7336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256037;
  struct hash_entry * D.256035;

  <bb 2> :
  D.256037 = xcalloc (count, 56);
  D.256035 = D.256037;

  <bb 3> :
<L0>:
  return D.256035;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9915, decl_uid=232036, cgraph_uid=6547, symbol_order=7337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.256044;
  struct hash_entry * D.256043;
  struct hash_entry * D.256041;
  bool retval.1965;

  <bb 2> :
  retval.1965 = need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ();
  if (retval.1965 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.256043 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.256041 = D.256043;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.256044 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256041 = D.256044;

  <bb 5> :
<L2>:
  return D.256041;

}



;; Function finalize<hash_map<tree_node*, gimple_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10447, decl_uid=239410, cgraph_uid=7079, symbol_order=7869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, gimple_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10446, decl_uid=239409, cgraph_uid=7078, symbol_order=7868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ()
{
  bool D.256045;

  <bb 2> :
  D.256045 = 0;

  <bb 3> :
<L0>:
  return D.256045;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10232, decl_uid=190121, cgraph_uid=6864, symbol_order=7654)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, gimple_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.256049;
  hashval_t D.256047;

  <bb 2> :
  _1 = &e->m_key;
  D.256049 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_1);
  D.256047 = D.256049;

  <bb 3> :
<L0>:
  return D.256047;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10231, decl_uid=190288, cgraph_uid=6863, symbol_order=7653)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.256062;
  bool D.256061;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1967;
  struct value_type * D.256053;
  bool retval.1966;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.256061 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1966 = D.256061;
  if (retval.1966 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256053 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.256062 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1967 = D.256062;
  if (retval.1967 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.256053 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.256053;

}



;; Function std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10233, decl_uid=236566, cgraph_uid=6865, symbol_order=7655)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.256063;

  <bb 2> :
  D.256063 = __t;

  <bb 3> :
<L0>:
  return D.256063;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8892, decl_uid=216630, cgraph_uid=5524, symbol_order=6310)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9652, decl_uid=190306, cgraph_uid=6284, symbol_order=7070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10234, decl_uid=190133, cgraph_uid=6866, symbol_order=7656)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10659, decl_uid=241513, cgraph_uid=7291, symbol_order=8081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function detect (_Z6detectv, funcdef_no=6826, decl_uid=202269, cgraph_uid=3533, symbol_order=4307)

Removing basic block 48
Merging blocks 49 and 51
Removing basic block 84
Removing basic block 87
Removing basic block 90
Removing basic block 104
Removing basic block 142
Merging blocks 146 and 148
Removing basic block 151
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 2
;;  header 95, latch 94
;;  depth 1, outer 0
;;  nodes: 95 94 93 91 92 59 65 64 63 62 61 60 58 57 56 55 90 89 68 88 87 79 86 84 85 82 83 80 81 78 69 77 76 75 71 74 73 72 70 67 66
;;
;; Loop 3
;;  header 89, latch 88
;;  depth 2, outer 2
;;  nodes: 89 88 87 79 86 84 85 82 83 80 81 78 69 77 76 75 71 74 73 72 70
;;
;; Loop 5
;;  header 87, latch 86
;;  depth 3, outer 3
;;  nodes: 87 86 84 85 82 83 80 81
;;
;; Loop 4
;;  header 75, latch 74
;;  depth 3, outer 3
;;  nodes: 75 74 73 72 76
;;
;; Loop 1
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38 37 36 42 41 40
;; 2 succs { 168 3 }
;; 3 succs { 146 4 }
;; 4 succs { 168 5 }
;; 5 succs { 147 6 }
;; 6 succs { 168 7 }
;; 7 succs { 148 8 }
;; 8 succs { 168 9 }
;; 9 succs { 149 10 }
;; 10 succs { 168 11 }
;; 11 succs { 150 12 }
;; 12 succs { 168 13 }
;; 13 succs { 151 14 }
;; 14 succs { 168 15 }
;; 15 succs { 152 16 }
;; 16 succs { 168 17 }
;; 17 succs { 153 18 }
;; 18 succs { 168 19 }
;; 19 succs { 154 20 }
;; 20 succs { 168 21 }
;; 21 succs { 155 22 }
;; 22 succs { 168 23 }
;; 23 succs { 156 24 }
;; 24 succs { 168 25 }
;; 25 succs { 157 26 }
;; 26 succs { 168 27 }
;; 27 succs { 158 28 }
;; 28 succs { 29 50 }
;; 29 succs { 162 30 }
;; 30 succs { 161 31 }
;; 31 succs { 161 32 }
;; 32 succs { 33 35 }
;; 33 succs { 161 34 }
;; 34 succs { 46 }
;; 35 succs { 39 }
;; 36 succs { 159 37 }
;; 37 succs { 159 38 }
;; 38 succs { 159 39 }
;; 39 succs { 159 40 }
;; 40 succs { 159 41 }
;; 41 succs { 159 42 }
;; 42 succs { 36 43 }
;; 43 succs { 159 44 }
;; 44 succs { 161 45 }
;; 45 succs { 46 }
;; 46 succs { 49 47 }
;; 47 succs { 48 }
;; 48 succs { 50 }
;; 49 succs { 138 }
;; 50 succs { 168 51 }
;; 51 succs { 168 52 }
;; 52 succs { 168 53 }
;; 53 succs { 168 54 }
;; 54 succs { 95 }
;; 55 succs { 166 56 }
;; 56 succs { 166 57 }
;; 57 succs { 166 58 }
;; 58 succs { 59 60 }
;; 59 succs { 92 }
;; 60 succs { 166 61 }
;; 61 succs { 166 62 }
;; 62 succs { 63 66 }
;; 63 succs { 166 64 }
;; 64 succs { 166 65 }
;; 65 succs { 92 }
;; 66 succs { 166 67 }
;; 67 succs { 165 68 }
;; 68 succs { 89 }
;; 69 succs { 70 78 }
;; 70 succs { 163 71 }
;; 71 succs { 75 }
;; 72 succs { 163 73 }
;; 73 succs { 163 74 }
;; 74 succs { 163 75 }
;; 75 succs { 163 76 }
;; 76 succs { 72 77 }
;; 77 succs { 78 }
;; 78 succs { 165 79 }
;; 79 succs { 87 }
;; 80 succs { 81 82 }
;; 81 succs { 164 82 }
;; 82 succs { 83 84 }
;; 83 succs { 164 84 }
;; 84 succs { 85 86 }
;; 85 succs { 164 86 }
;; 86 succs { 87 }
;; 87 succs { 80 88 }
;; 88 succs { 89 }
;; 89 succs { 69 90 }
;; 90 succs { 165 91 }
;; 91 succs { 93 }
;; 92 succs { 93 }
;; 93 succs { 168 94 }
;; 94 succs { 95 }
;; 95 succs { 55 96 }
;; 96 succs { 168 97 }
;; 97 succs { 98 99 }
;; 98 succs { 168 99 }
;; 99 succs { 100 101 }
;; 100 succs { 101 }
;; 101 succs { 102 103 }
;; 102 succs { 103 }
;; 103 succs { 104 105 }
;; 104 succs { 105 }
;; 105 succs { 106 107 }
;; 106 succs { 107 }
;; 107 succs { 108 109 }
;; 108 succs { 109 }
;; 109 succs { 110 111 }
;; 110 succs { 111 }
;; 111 succs { 112 113 }
;; 112 succs { 113 }
;; 113 succs { 114 115 }
;; 114 succs { 115 }
;; 115 succs { 116 117 }
;; 116 succs { 117 }
;; 117 succs { 118 119 }
;; 118 succs { 119 }
;; 119 succs { 120 121 }
;; 120 succs { 121 }
;; 121 succs { 122 123 }
;; 122 succs { 123 }
;; 123 succs { 124 125 }
;; 124 succs { 125 }
;; 125 succs { 168 126 }
;; 126 succs { 168 127 }
;; 127 succs { 167 128 }
;; 128 succs { 129 136 }
;; 129 succs { 167 130 }
;; 130 succs { 167 131 }
;; 131 succs { 167 132 }
;; 132 succs { 167 133 }
;; 133 succs { 167 134 }
;; 134 succs { 167 135 }
;; 135 succs { 167 137 }
;; 136 succs { 167 137 }
;; 137 succs { 138 }
;; 138 succs { 140 139 }
;; 139 succs { 141 }
;; 140 succs { 141 }
;; 141 succs { 144 142 }
;; 142 succs { 143 }
;; 143 succs { 145 }
;; 144 succs { 145 }
;; 145 succs { 1 }
;; 146 succs { 168 }
;; 147 succs { 168 }
;; 148 succs { 168 }
;; 149 succs { 168 }
;; 150 succs { 168 }
;; 151 succs { 168 }
;; 152 succs { 168 }
;; 153 succs { 168 }
;; 154 succs { 168 }
;; 155 succs { 168 }
;; 156 succs { 168 }
;; 157 succs { 168 }
;; 158 succs { 168 }
;; 159 succs { 160 }
;; 160 succs { 161 }
;; 161 succs { 162 }
;; 162 succs { 168 }
;; 163 succs { 165 }
;; 164 succs { 165 }
;; 165 succs { 166 }
;; 166 succs { 168 }
;; 167 succs { 168 }
;; 168 succs { 169 }
;; 169 succs { 170 }
;; 170 succs { }
void detect ()
{
  int finally_tmp.2023;
  int finally_tmp.2022;
  struct __ostream_type & D.256213;
  struct basic_ostream & D.256212;
  struct __ostream_type & D.256211;
  struct basic_ostream & D.256210;
  bool D.256209;
  struct cgraph_node * D.256208;
  bool D.256201;
  struct function * D.256200;
  bool D.256199;
  const char * D.256198;
  struct cgraph_node * D.256197;
  int finally_tmp.2021;
  bool D.256185;
  struct __istream_type & D.256184;
  struct basic_istream & D.256183;
  bool D.256182;
  void * D.256180;
  void * D.256178;
  void * D.256176;
  void * D.256174;
  void * D.256172;
  void * D.256170;
  void * D.256168;
  void * D.256166;
  void * D.256164;
  void * D.256162;
  void * D.256160;
  void * D.256158;
  void * D.256156;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct edge_iterator ei;
  struct edge_def * e;
  struct Graph DFS;
  int score;
  struct string name;
  struct ifstream ifs;
  struct ofstream myfile;
  struct timevar_time_def now;
  double time_used;
  struct timespec temp;
  struct timespec end;
  struct timespec start;
  double s;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  struct function * fn;
  struct function * ofun;
  union tree_node * attr;
  union tree_node * ptr;
  struct breakpoint getbp;
  unsigned int i;
  const int N;
  struct var_points_to vpt;
  struct cgraph_node * node;
  struct timeval stime;
  struct timeval utime;
  struct rusage ru;
  bool retval.2020;
  struct hash_map * function_relate_collect.2019;
  struct hash_map * function_graph_collect.2018;
  struct hash_map * function_free_collect.2017;
  struct hash_map * function_path_collect.2016;
  struct hash_map * function_pthread_exit_collect.2015;
  struct hash_map * function_pthread_detched_collect.2014;
  struct hash_map * pthread_attr_setdetachstates.2013;
  struct hash_map * function_assign_collect.2012;
  struct hash_map * function_return_collect.2011;
  struct hash_map * fDFS.2010;
  struct hash_map * syminfo.2009;
  struct hash_map * treeGimpleArray.2008;
  struct hash_map * tvpt.2007;
  bool retval.1998;
  bool retval.1996;
  bool retval.1994;
  bool retval.1992;
  bool retval.1990;
  bool retval.1979;
  struct __istream_type & D.256072;
  bool retval.1973;
  bool retval.1970;
  void * D.203891;
  void * D.203890;
  void * D.203519;
  void * D.203518;
  void * D.203517;
  void * D.203516;
  void * D.203515;
  void * D.203514;
  void * D.203513;
  void * D.203512;
  void * D.203091;
  void * D.203090;
  void * D.203089;

  <bb 2> :
  var_points_to::var_points_to (&vpt);
  N = 100;
  breakpoint::breakpoint (&getbp);
  ipa = 1;
  D.256156 = operator new (48);

  <bb 3> :
  D.203089 = D.256156;
  hash_map<tree_node*, var_points_to>::hash_map (D.203089, 13, 0, 1, 0);

  <bb 4> :
  tvpt = D.203089;
  D.256158 = operator new (48);

  <bb 5> :
  D.203090 = D.256158;
  hash_map<tree_node*, gimple_array>::hash_map (D.203090, 13, 0, 1, 0);

  <bb 6> :
  treeGimpleArray = D.203090;
  D.256160 = operator new (48);

  <bb 7> :
  D.203091 = D.256160;
  hash_map<basic_block_def*, symbolicinfo>::hash_map (D.203091, 13, 0, 1, 0);

  <bb 8> :
  syminfo = D.203091;
  D.256162 = operator new (48);

  <bb 9> :
  D.203512 = D.256162;
  hash_map<cgraph_node*, Graph>::hash_map (D.203512, 13, 0, 1, 0);

  <bb 10> :
  fDFS = D.203512;
  D.256164 = operator new (48);

  <bb 11> :
  D.203513 = D.256164;
  hash_map<tree_node*, function_return_array>::hash_map (D.203513, 13, 0, 1, 0);

  <bb 12> :
  function_return_collect = D.203513;
  D.256166 = operator new (48);

  <bb 13> :
  D.203514 = D.256166;
  hash_map<tree_node*, function_assign_array>::hash_map (D.203514, 13, 0, 1, 0);

  <bb 14> :
  function_assign_collect = D.203514;
  D.256168 = operator new (48);

  <bb 15> :
  D.203515 = D.256168;
  hash_map<tree_node*, pthread_attr_array>::hash_map (D.203515, 13, 0, 1, 0);

  <bb 16> :
  pthread_attr_setdetachstates = D.203515;
  D.256170 = operator new (48);

  <bb 17> :
  D.203516 = D.256170;
  hash_map<tree_node*, function_pthread_detched_array>::hash_map (D.203516, 13, 0, 1, 0);

  <bb 18> :
  function_pthread_detched_collect = D.203516;
  D.256172 = operator new (48);

  <bb 19> :
  D.203517 = D.256172;
  hash_map<tree_node*, function_pthread_exit_array>::hash_map (D.203517, 13, 0, 1, 0);

  <bb 20> :
  function_pthread_exit_collect = D.203517;
  D.256174 = operator new (48);

  <bb 21> :
  D.203518 = D.256174;
  hash_map<tree_node*, function_path_array>::hash_map (D.203518, 13, 0, 1, 0);

  <bb 22> :
  function_path_collect = D.203518;
  D.256176 = operator new (48);

  <bb 23> :
  D.203519 = D.256176;
  hash_map<tree_node*, function_free_array>::hash_map (D.203519, 13, 0, 1, 0);

  <bb 24> :
  function_free_collect = D.203519;
  D.256178 = operator new (48);

  <bb 25> :
  D.203890 = D.256178;
  hash_map<tree_node*, function_graph_array>::hash_map (D.203890, 13, 0, 1, 0);

  <bb 26> :
  function_graph_collect = D.203890;
  D.256180 = operator new (48);

  <bb 27> :
  D.203891 = D.256180;
  hash_map<tree_node*, function_relate_array>::hash_map (D.203891, 13, 0, 1, 0);

  <bb 28> :
  function_relate_collect = D.203891;
  vscode_extensionmod.1968_1 = vscode_extensionmod;
  if (vscode_extensionmod.1968_1 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 29> :
  std::basic_ifstream<char>::basic_ifstream (&ifs, "/root/.vscode-server/data/User/globalStorage/vscode-samples.helloworld-sample/breakpoint.txt", 8);

  <bb 30> :
  stderr.1969_2 = stderr;
  __builtin_fwrite ("==============breakpoint=========\n", 1, 34, stderr.1969_2);

  <bb 31> :
  D.256182 = std::basic_ifstream<char>::is_open (&ifs);

  <bb 32> :
  _3 = D.256182;
  retval.1970 = ~_3;
  if (retval.1970 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 33> :
  std::operator<< <std::char_traits<char> > (&cout, "Failed to open file.\n");

  <bb 34> :
  // predicted unlikely by early return (on trees) predictor.
  finally_tmp.2021 = 0;
  goto <bb 46>; [INV]

  <bb 35> :
  std::__cxx11::basic_string<char>::basic_string (&name);
  goto <bb 39>; [INV]

  <bb 36> :
  std::__cxx11::basic_string<char>::operator= (&getbp.name, &name);

  <bb 37> :
  score.1971_4 = score;
  getbp.line = score.1971_4;
  _5 = getbp.line;
  _6 = std::__cxx11::basic_string<char>::c_str (&getbp.name);
  stderr.1972_7 = stderr;
  fprintf (stderr.1972_7, "%s %d\n", _6, _5);

  <bb 38> :
  std::vector<breakpoint>::push_back (&vbreakpoint, &getbp);

  <bb 39> :
  D.256183 = std::operator>><char, std::char_traits<char>, std::allocator<char> > (&ifs.D.155214, &name);

  <bb 40> :
  _8 = D.256183;
  D.256184 = std::basic_istream<char>::operator>> (_8, &score);

  <bb 41> :
  D.256072 = D.256184;
  _9 = D.256072->_vptr.basic_istream;
  _10 = _9 + 18446744073709551592;
  _11 = MEM[(long int *)_10];
  _12 = (sizetype) _11;
  _13 = D.256072 + _12;
  D.256185 = std::basic_ios<char>::operator bool (_13);

  <bb 42> :
  retval.1973 = D.256185;
  if (retval.1973 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  std::basic_ifstream<char>::close (&ifs);

  <bb 44> :
  std::__cxx11::basic_string<char>::~basic_string (&name);
  name = {CLOBBER};
  score = {CLOBBER};
  std::basic_ifstream<char>::close (&ifs);

  <bb 45> :
  finally_tmp.2021 = 1;

  <bb 46> :
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  if (finally_tmp.2021 == 1)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
<L7>:

  <bb 48> :
  ifs = {CLOBBER};
  goto <bb 50>; [INV]

  <bb 49> :
  ifs = {CLOBBER};
  finally_tmp.2022 = 0;
  goto <bb 138>; [INV]

  <bb 50> :
  _14 = time (0B);
  _15 = (unsigned int) _14;
  _16 = getpid ();
  _17 = (unsigned int) _16;
  _18 = _15 + _17;
  srand (_18);
  stderr.1974_19 = stderr;
  __builtin_fwrite ("=======ipa_pta=========\n", 1, 24, stderr.1974_19);

  <bb 51> :
  init_table ();

  <bb 52> :
  s = 0.0;
  clock_gettime (1, &start);
  getrusage (0, &ru);
  utime = ru.ru_utime;
  stime = ru.ru_stime;
  stderr.1975_20 = stderr;
  __builtin_fwrite ("===============The first stage : Point of interest stmt collect=================\n", 1, 81, stderr.1975_20);

  <bb 53> :
  symtab.1976_21 = symtab;
  D.256197 = symbol_table::first_defined_function (symtab.1976_21);

  <bb 54> :
  _22 = D.256197;
  node = _22;
  goto <bb 95>; [INV]

  <bb 55> :
  node.1977_23 = node;
  _24 = node.1977_23->D.97512.decl;
  D.256198 = get_name (_24);

  <bb 56> :
  _25 = D.256198;
  stderr.1978_26 = stderr;
  fprintf (stderr.1978_26, "=======node_fun:%s=========\n", _25);

  <bb 57> :
  node.1980_27 = node;
  _28 = node.1980_27->D.97512.decl;
  D.256199 = gimple_has_body_p (_28);

  <bb 58> :
  _29 = D.256199;
  retval.1979 = ~_29;
  if (retval.1979 != 0)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  // predicted unlikely by continue predictor.
  goto <bb 92>; [INV]

  <bb 60> :
  node.1981_30 = node;
  D.256200 = cgraph_node::get_fun (node.1981_30);

  <bb 61> :
  _31 = D.256200;
  push_cfun (_31);

  <bb 62> :
  cfun.1982_32 = cfun;
  if (cfun.1982_32 == 0B)
    goto <bb 63>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 63> :
  pop_cfun ();

  <bb 64> :
  free_dominance_info (1);

  <bb 65> :
  // predicted unlikely by continue predictor.
  goto <bb 92>; [INV]

  <bb 66> :
  calculate_dominance_info (1);

  <bb 67> :
  Graph::Graph (&DFS);
  cfun.1983_33 = cfun;
  _34 = cfun.1983_33->cfg;
  _35 = _34->x_last_basic_block;
  Graph::init_Graph (&DFS, _35);

  <bb 68> :
  cfun.1984_36 = cfun;
  _37 = cfun.1984_36->cfg;
  _38 = _37->x_entry_block_ptr;
  bb = _38->next_bb;
  goto <bb 89>; [INV]

  <bb 69> :
  cfun.1985_39 = cfun;
  _40 = cfun.1985_39->cfg;
  _41 = _40->x_exit_block_ptr;
  _42 = _41->prev_bb;
  if (bb != _42)
    goto <bb 70>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 70> :
  _43 = bb->index;
  stderr.1986_44 = stderr;
  fprintf (stderr.1986_44, "node:= %d \n ", _43);

  <bb 71> :
  _45 = &bb->succs;
  ei = ei_start_1 (_45);
  goto <bb 75>; [INV]

  <bb 72> :
  e.1987_46 = e;
  _47 = e.1987_46->dest;
  _48 = _47->index;
  _49 = bb->index;
  Graph::addEdge (&DFS, _49, _48);

  <bb 73> :
  e.1988_50 = e;
  _51 = e.1988_50->dest;
  _52 = _51->index;
  stderr.1989_53 = stderr;
  fprintf (stderr.1989_53, "\tnext_branch :=%d\n", _52);

  <bb 74> :
  ei_next (&ei);

  <bb 75> :
  D.256201 = ei_cond (ei, &e);

  <bb 76> :
  retval.1990 = D.256201;
  if (retval.1990 != 0)
    goto <bb 72>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 77> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 78> :
  fDFS.1991_54 = fDFS;
  hash_map<cgraph_node*, Graph>::put (fDFS.1991_54, &node, &DFS);

  <bb 79> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 87>; [INV]

  <bb 80> :
  gc = gsi_stmt (gsi);
  retval.1992 = is_gimple_call (gc);
  if (retval.1992 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  node.1993_55 = node;
  collect_function_call (gc, node.1993_55, bb);

  <bb 82> :
  retval.1994 = is_gimple_assign (gc);
  if (retval.1994 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 83> :
  node.1995_56 = node;
  collect_function_call (gc, node.1995_56, bb);

  <bb 84> :
  _57 = gimple_code (gc);
  retval.1996 = _57 == 10;
  if (retval.1996 != 0)
    goto <bb 85>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 85> :
  node.1997_58 = node;
  collect_function_return (gc, node.1997_58, bb);

  <bb 86> :
  gsi_next (&gsi);

  <bb 87> :
  _59 = gsi_end_p (gsi);
  retval.1998 = ~_59;
  if (retval.1998 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 89> :
  cfun.1999_60 = cfun;
  _61 = cfun.1999_60->cfg;
  _62 = _61->x_exit_block_ptr;
  if (bb != _62)
    goto <bb 69>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 90> :
  pop_cfun ();

  <bb 91> :
  Graph::~Graph (&DFS);
  DFS = {CLOBBER};
  goto <bb 93>; [INV]

  <bb 92> :
  DFS = {CLOBBER};

  <bb 93> :
  symtab.2000_63 = symtab;
  node.2001_64 = node;
  D.256208 = symbol_table::next_defined_function (symtab.2000_63, node.2001_64);

  <bb 94> :
  _65 = D.256208;
  node = _65;

  <bb 95> :
  node.2002_66 = node;
  if (node.2002_66 != 0B)
    goto <bb 55>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 96> :
  stderr.2003_67 = stderr;
  __builtin_fwrite ("===============The first stage : Point of interest stmt collect=================\n", 1, 81, stderr.2003_67);

  <bb 97> :
  ipa.2004_68 = ipa;
  if (ipa.2004_68 != 0)
    goto <bb 98>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 98> :
  ftable.2005_69 = ftable;
  ptable.2006_70 = ptable;
  PointerConstraint (ptable.2006_70, ftable.2005_69);

  <bb 99> :
  tvpt.2007 = tvpt;
  if (tvpt.2007 != 0B)
    goto <bb 100>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 100> :
  hash_map<tree_node*, var_points_to>::~hash_map (tvpt.2007);
  operator delete (tvpt.2007, 48);

  <bb 101> :
  treeGimpleArray.2008 = treeGimpleArray;
  if (treeGimpleArray.2008 != 0B)
    goto <bb 102>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 102> :
  hash_map<tree_node*, gimple_array>::~hash_map (treeGimpleArray.2008);
  operator delete (treeGimpleArray.2008, 48);

  <bb 103> :
  syminfo.2009 = syminfo;
  if (syminfo.2009 != 0B)
    goto <bb 104>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 104> :
  hash_map<basic_block_def*, symbolicinfo>::~hash_map (syminfo.2009);
  operator delete (syminfo.2009, 48);

  <bb 105> :
  fDFS.2010 = fDFS;
  if (fDFS.2010 != 0B)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  hash_map<cgraph_node*, Graph>::~hash_map (fDFS.2010);
  operator delete (fDFS.2010, 48);

  <bb 107> :
  function_return_collect.2011 = function_return_collect;
  if (function_return_collect.2011 != 0B)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  hash_map<tree_node*, function_return_array>::~hash_map (function_return_collect.2011);
  operator delete (function_return_collect.2011, 48);

  <bb 109> :
  function_assign_collect.2012 = function_assign_collect;
  if (function_assign_collect.2012 != 0B)
    goto <bb 110>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 110> :
  hash_map<tree_node*, function_assign_array>::~hash_map (function_assign_collect.2012);
  operator delete (function_assign_collect.2012, 48);

  <bb 111> :
  pthread_attr_setdetachstates.2013 = pthread_attr_setdetachstates;
  if (pthread_attr_setdetachstates.2013 != 0B)
    goto <bb 112>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 112> :
  hash_map<tree_node*, pthread_attr_array>::~hash_map (pthread_attr_setdetachstates.2013);
  operator delete (pthread_attr_setdetachstates.2013, 48);

  <bb 113> :
  function_pthread_detched_collect.2014 = function_pthread_detched_collect;
  if (function_pthread_detched_collect.2014 != 0B)
    goto <bb 114>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 114> :
  hash_map<tree_node*, function_pthread_detched_array>::~hash_map (function_pthread_detched_collect.2014);
  operator delete (function_pthread_detched_collect.2014, 48);

  <bb 115> :
  function_pthread_exit_collect.2015 = function_pthread_exit_collect;
  if (function_pthread_exit_collect.2015 != 0B)
    goto <bb 116>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 116> :
  hash_map<tree_node*, function_pthread_exit_array>::~hash_map (function_pthread_exit_collect.2015);
  operator delete (function_pthread_exit_collect.2015, 48);

  <bb 117> :
  function_path_collect.2016 = function_path_collect;
  if (function_path_collect.2016 != 0B)
    goto <bb 118>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 118> :
  hash_map<tree_node*, function_path_array>::~hash_map (function_path_collect.2016);
  operator delete (function_path_collect.2016, 48);

  <bb 119> :
  function_free_collect.2017 = function_free_collect;
  if (function_free_collect.2017 != 0B)
    goto <bb 120>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 120> :
  hash_map<tree_node*, function_free_array>::~hash_map (function_free_collect.2017);
  operator delete (function_free_collect.2017, 48);

  <bb 121> :
  function_graph_collect.2018 = function_graph_collect;
  if (function_graph_collect.2018 != 0B)
    goto <bb 122>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 122> :
  hash_map<tree_node*, function_graph_array>::~hash_map (function_graph_collect.2018);
  operator delete (function_graph_collect.2018, 48);

  <bb 123> :
  function_relate_collect.2019 = function_relate_collect;
  if (function_relate_collect.2019 != 0B)
    goto <bb 124>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 124> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_relate_collect.2019);
  operator delete (function_relate_collect.2019, 48);

  <bb 125> :
  clock_gettime (1, &end);
  temp = diff (start, end);

  <bb 126> :
  _71 = temp.tv_sec;
  _72 = (double) _71;
  _73 = temp.tv_nsec;
  _74 = (double) _73;
  _75 = _74 / 1.0e+9;
  time_used = _72 + _75;
  std::basic_ofstream<char>::basic_ofstream (&myfile, "time.txt", 16);

  <bb 127> :
  D.256209 = std::basic_ofstream<char>::is_open (&myfile);

  <bb 128> :
  retval.2020 = D.256209;
  if (retval.2020 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 136>; [INV]

  <bb 129> :
  D.256210 = std::operator<< <std::char_traits<char> > (&myfile.D.155383, "utime_used: ");

  <bb 130> :
  _76 = D.256210;
  D.256211 = std::basic_ostream<char>::operator<< (_76, time_used);

  <bb 131> :
  _77 = D.256211;
  std::operator<< <std::char_traits<char> > (_77, " s;\n");

  <bb 132> :
  D.256212 = std::operator<< <std::char_traits<char> > (&myfile.D.155383, "stime_used: ");

  <bb 133> :
  _78 = D.256212;
  D.256213 = std::basic_ostream<char>::operator<< (_78, time_used);

  <bb 134> :
  _79 = D.256213;
  std::operator<< <std::char_traits<char> > (_79, " s;\n");

  <bb 135> :
  std::basic_ofstream<char>::close (&myfile);
  goto <bb 137>; [INV]

  <bb 136> :
  std::operator<< <std::char_traits<char> > (&cout, "Unable to open file");

  <bb 137> :
  std::basic_ofstream<char>::~basic_ofstream (&myfile);
  finally_tmp.2022 = 1;

  <bb 138> :
  breakpoint::~breakpoint (&getbp);
  if (finally_tmp.2022 == 1)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
<L91>:
  finally_tmp.2023 = 1;
  goto <bb 141>; [INV]

  <bb 140> :
<L92>:
  finally_tmp.2023 = 0;

  <bb 141> :
  var_points_to::~var_points_to (&vpt);
  if (finally_tmp.2023 == 1)
    goto <bb 142>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 142> :
<L95>:

  <bb 143> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};
  goto <bb 145>; [INV]

  <bb 144> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};

  <bb 145> :
<L100>:
  return;

  <bb 146> :
<L101>:
  operator delete (D.203089, 48);
  resx 4

  <bb 147> :
<L102>:
  operator delete (D.203090, 48);
  resx 6

  <bb 148> :
<L103>:
  operator delete (D.203091, 48);
  resx 8

  <bb 149> :
<L104>:
  operator delete (D.203512, 48);
  resx 10

  <bb 150> :
<L105>:
  operator delete (D.203513, 48);
  resx 12

  <bb 151> :
<L106>:
  operator delete (D.203514, 48);
  resx 14

  <bb 152> :
<L107>:
  operator delete (D.203515, 48);
  resx 16

  <bb 153> :
<L108>:
  operator delete (D.203516, 48);
  resx 18

  <bb 154> :
<L109>:
  operator delete (D.203517, 48);
  resx 20

  <bb 155> :
<L110>:
  operator delete (D.203518, 48);
  resx 22

  <bb 156> :
<L111>:
  operator delete (D.203519, 48);
  resx 24

  <bb 157> :
<L112>:
  operator delete (D.203890, 48);
  resx 26

  <bb 158> :
<L113>:
  operator delete (D.203891, 48);
  resx 28

  <bb 159> :
<L114>:
  std::__cxx11::basic_string<char>::~basic_string (&name);
  resx 33

  <bb 160> :
<L115>:
  name = {CLOBBER};
  score = {CLOBBER};
  resx 32

  <bb 161> :
<L116>:
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  resx 31

  <bb 162> :
<L117>:
  ifs = {CLOBBER};
  resx 30

  <bb 163> :
<L118>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 40

  <bb 164> :
<L119>:
  gsi = {CLOBBER};
  resx 42

  <bb 165> :
<L120>:
  Graph::~Graph (&DFS);
  resx 39

  <bb 166> :
<L121>:
  DFS = {CLOBBER};
  resx 38

  <bb 167> :
<L122>:
  std::basic_ofstream<char>::~basic_ofstream (&myfile);
  resx 59

  <bb 168> :
<L123>:
  breakpoint::~breakpoint (&getbp);
  resx 3

  <bb 169> :
<L124>:
  var_points_to::~var_points_to (&vpt);
  resx 2

  <bb 170> :
<L125>:
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};
  resx 1

}



;; Function var_points_to::var_points_to (_ZN13var_points_toC2Ev, funcdef_no=6838, decl_uid=202346, cgraph_uid=3469, symbol_order=4243)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_1);
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EEC2Ev, funcdef_no=6836, decl_uid=172409, cgraph_uid=3466, symbol_order=4240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172417;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EEC2Ev, funcdef_no=6834, decl_uid=171867, cgraph_uid=3463, symbol_order=4237)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implC2Ev, funcdef_no=7830, decl_uid=171759, cgraph_uid=4462, symbol_order=5244)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (this);
  _1 = &this->D.171762;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEEC2Ev, funcdef_no=8795, decl_uid=171537, cgraph_uid=5427, symbol_order=6213)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEEC2Ev, funcdef_no=9654, decl_uid=171466, cgraph_uid=6286, symbol_order=7072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE17_Vector_impl_dataC2Ev, funcdef_no=8798, decl_uid=171709, cgraph_uid=5430, symbol_order=6216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2Ev, funcdef_no=6845, decl_uid=202538, cgraph_uid=3476, symbol_order=4250)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::basic_string (_1);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7845, decl_uid=203081, cgraph_uid=4477, symbol_order=5259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8809, decl_uid=203040, cgraph_uid=5441, symbol_order=6227)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256231;
  unsigned int D.256230;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256230 = hash_table_higher_prime_index (size);
  size_prime_index = D.256230;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256231 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256231;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9659, decl_uid=202986, cgraph_uid=6291, symbol_order=7077)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256247;
  struct value_type * D.256246;
  struct mem_alloc_description & D.256245;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256243;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256246 = xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (n);
  nentries = D.256246;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256247 = ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (n);
  nentries = D.256247;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256243 = nentries;

  <bb 9> :
<L14>:
  return D.256243;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10237, decl_uid=216604, cgraph_uid=6869, symbol_order=7659)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256250;
  struct hash_entry * D.256248;

  <bb 2> :
  D.256250 = xcalloc (count, 40);
  D.256248 = D.256250;

  <bb 3> :
<L0>:
  return D.256248;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10238, decl_uid=236933, cgraph_uid=6870, symbol_order=7660)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (size_t c)
{
  struct hash_entry * D.256257;
  struct hash_entry * D.256256;
  struct hash_entry * D.256254;
  bool retval.2024;

  <bb 2> :
  retval.2024 = need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ();
  if (retval.2024 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.256256 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.256254 = D.256256;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.256257 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256254 = D.256257;

  <bb 5> :
<L2>:
  return D.256254;

}



;; Function finalize<hash_map<tree_node*, var_points_to>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10663, decl_uid=241534, cgraph_uid=7298, symbol_order=8088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, var_points_to>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10665, decl_uid=243876, cgraph_uid=7296, symbol_order=8086)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  var_points_to::~var_points_to (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10662, decl_uid=241533, cgraph_uid=7294, symbol_order=8084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ()
{
  bool D.256258;

  <bb 2> :
  D.256258 = 1;

  <bb 3> :
<L0>:
  return D.256258;

}



;; Function hash_map<tree_node*, gimple_array>::hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7848, decl_uid=190380, cgraph_uid=4480, symbol_order=5262)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8812, decl_uid=190339, cgraph_uid=5444, symbol_order=6230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256261;
  unsigned int D.256260;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256260 = hash_table_higher_prime_index (size);
  size_prime_index = D.256260;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256261 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256261;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7851, decl_uid=196825, cgraph_uid=4483, symbol_order=5265)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8815, decl_uid=196784, cgraph_uid=5447, symbol_order=6233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256263;
  unsigned int D.256262;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256262 = hash_table_higher_prime_index (size);
  size_prime_index = D.256262;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256263 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256263;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7854, decl_uid=203504, cgraph_uid=4486, symbol_order=5268)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8818, decl_uid=203463, cgraph_uid=5450, symbol_order=6236)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256265;
  unsigned int D.256264;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256264 = hash_table_higher_prime_index (size);
  size_prime_index = D.256264;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256265 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256265;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9660, decl_uid=203409, cgraph_uid=6292, symbol_order=7078)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256281;
  struct value_type * D.256280;
  struct mem_alloc_description & D.256279;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256277;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256280 = xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (n);
  nentries = D.256280;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256281 = ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (n);
  nentries = D.256281;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256277 = nentries;

  <bb 9> :
<L14>:
  return D.256277;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10240, decl_uid=216676, cgraph_uid=6872, symbol_order=7662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256284;
  struct hash_entry * D.256282;

  <bb 2> :
  D.256284 = xcalloc (count, 56);
  D.256282 = D.256284;

  <bb 3> :
<L0>:
  return D.256282;

}



;; Function ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10241, decl_uid=236944, cgraph_uid=6873, symbol_order=7663)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (size_t c)
{
  struct hash_entry * D.256291;
  struct hash_entry * D.256290;
  struct hash_entry * D.256288;
  bool retval.2025;

  <bb 2> :
  retval.2025 = need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ();
  if (retval.2025 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.256290 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.256288 = D.256290;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.256291 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256288 = D.256291;

  <bb 5> :
<L2>:
  return D.256288;

}



;; Function finalize<hash_map<cgraph_node*, Graph>::hash_entry> (_Z8finalizeIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10669, decl_uid=241543, cgraph_uid=7304, symbol_order=8094)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<cgraph_node*, Graph>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10671, decl_uid=243899, cgraph_uid=7302, symbol_order=8092)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  Graph::~Graph (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10668, decl_uid=241542, cgraph_uid=7300, symbol_order=8090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ()
{
  bool D.256292;

  <bb 2> :
  D.256292 = 1;

  <bb 3> :
<L0>:
  return D.256292;

}



;; Function hash_map<tree_node*, function_return_array>::hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7857, decl_uid=189851, cgraph_uid=4489, symbol_order=5271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8821, decl_uid=189810, cgraph_uid=5453, symbol_order=6239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256295;
  unsigned int D.256294;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256294 = hash_table_higher_prime_index (size);
  size_prime_index = D.256294;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256295 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256295;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7860, decl_uid=191012, cgraph_uid=4492, symbol_order=5274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8824, decl_uid=190971, cgraph_uid=5456, symbol_order=6242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256297;
  unsigned int D.256296;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256296 = hash_table_higher_prime_index (size);
  size_prime_index = D.256296;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256297 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256297;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7863, decl_uid=194948, cgraph_uid=4495, symbol_order=5277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8827, decl_uid=194907, cgraph_uid=5459, symbol_order=6245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256299;
  unsigned int D.256298;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256298 = hash_table_higher_prime_index (size);
  size_prime_index = D.256298;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256299 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256299;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7866, decl_uid=193577, cgraph_uid=4498, symbol_order=5280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8830, decl_uid=193536, cgraph_uid=5462, symbol_order=6248)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256301;
  unsigned int D.256300;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256300 = hash_table_higher_prime_index (size);
  size_prime_index = D.256300;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256301 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256301;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7869, decl_uid=194053, cgraph_uid=4501, symbol_order=5283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8833, decl_uid=194012, cgraph_uid=5465, symbol_order=6251)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256303;
  unsigned int D.256302;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256302 = hash_table_higher_prime_index (size);
  size_prime_index = D.256302;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256303 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256303;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7872, decl_uid=192223, cgraph_uid=4504, symbol_order=5286)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8836, decl_uid=192182, cgraph_uid=5468, symbol_order=6254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256305;
  unsigned int D.256304;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256304 = hash_table_higher_prime_index (size);
  size_prime_index = D.256304;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256305 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256305;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7875, decl_uid=192705, cgraph_uid=4507, symbol_order=5289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8839, decl_uid=192664, cgraph_uid=5471, symbol_order=6257)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256307;
  unsigned int D.256306;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256306 = hash_table_higher_prime_index (size);
  size_prime_index = D.256306;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256307 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256307;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7878, decl_uid=203882, cgraph_uid=4510, symbol_order=5292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8842, decl_uid=203841, cgraph_uid=5474, symbol_order=6260)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256309;
  unsigned int D.256308;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256308 = hash_table_higher_prime_index (size);
  size_prime_index = D.256308;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256309 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256309;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9661, decl_uid=203787, cgraph_uid=6293, symbol_order=7079)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256325;
  struct value_type * D.256324;
  struct mem_alloc_description & D.256323;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256321;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256324 = xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (n);
  nentries = D.256324;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256325 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (n);
  nentries = D.256325;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256321 = nentries;

  <bb 9> :
<L14>:
  return D.256321;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10242, decl_uid=216868, cgraph_uid=6874, symbol_order=7664)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256328;
  struct hash_entry * D.256326;

  <bb 2> :
  D.256328 = xcalloc (count, 16);
  D.256326 = D.256328;

  <bb 3> :
<L0>:
  return D.256326;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10243, decl_uid=236955, cgraph_uid=6875, symbol_order=7665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.256335;
  struct hash_entry * D.256334;
  struct hash_entry * D.256332;
  bool retval.2026;

  <bb 2> :
  retval.2026 = need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ();
  if (retval.2026 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.256334 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.256332 = D.256334;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.256335 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256332 = D.256335;

  <bb 5> :
<L2>:
  return D.256332;

}



;; Function finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10674, decl_uid=241550, cgraph_uid=7306, symbol_order=8096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10673, decl_uid=241549, cgraph_uid=7305, symbol_order=8095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ()
{
  bool D.256336;

  <bb 2> :
  D.256336 = 0;

  <bb 3> :
<L0>:
  return D.256336;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev, funcdef_no=7842, decl_uid=126276, cgraph_uid=4474, symbol_order=5256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this)
{
  char * D.256338;
  struct allocator D.216112;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  std::allocator<char>::allocator (&D.216112);
  D.256338 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _2 = D.256338;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _2, &D.216112);
  std::allocator<char>::~allocator (&D.216112);
  D.216112 = {CLOBBER};
  std::__cxx11::basic_string<char>::_M_set_length (this, 0);
  return;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2Ev, funcdef_no=7264, decl_uid=117129, cgraph_uid=3896, symbol_order=4675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2Ev, funcdef_no=8167, decl_uid=117056, cgraph_uid=4799, symbol_order=5581)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_, funcdef_no=8180, decl_uid=125172, cgraph_uid=4812, symbol_order=5594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (struct _Alloc_hider * const this, char * __dat, struct allocator & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::allocator<char>&> (__a);
  std::allocator<char>::allocator (this, _1);
  this->_M_p = __dat;
  return;

}



;; Function std::move<std::allocator<char>&> (_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=8178, decl_uid=207533, cgraph_uid=4810, symbol_order=5592)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<char>&> (struct allocator & __t)
{
  struct type & D.256339;

  <bb 2> :
  D.256339 = __t;

  <bb 3> :
<L0>:
  return D.256339;

}



;; Function std::allocator<char>::~allocator (_ZNSaIcED2Ev, funcdef_no=7267, decl_uid=117134, cgraph_uid=3899, symbol_order=4678)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIcED2Ev, funcdef_no=8170, decl_uid=117061, cgraph_uid=4802, symbol_order=5584)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::push_back (_ZNSt6vectorI10breakpointSaIS0_EE9push_backERKS0_, funcdef_no=7891, decl_uid=185903, cgraph_uid=4524, symbol_order=5306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<breakpoint>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.256344;

  <bb 2> :
  _1 = this->D.186223._M_impl.D.185568._M_finish;
  _2 = this->D.186223._M_impl.D.185568._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.186223._M_impl.D.185568._M_finish;
  _4 = &this->D.186223._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_4, _3, __x);
  _5 = this->D.186223._M_impl.D.185568._M_finish;
  _6 = _5 + 40;
  this->D.186223._M_impl.D.185568._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.256344 = std::vector<breakpoint>::end (this);
  std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (this, D.256344, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8858, decl_uid=216225, cgraph_uid=5490, symbol_order=6276)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (struct allocator_type & __a, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<const breakpoint&> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (__a, __p, _1);
  return;

}



;; Function std::forward<const breakpoint&> (_ZSt7forwardIRK10breakpointEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9666, decl_uid=229435, cgraph_uid=6298, symbol_order=7084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct breakpoint & std::forward<const breakpoint&> (const struct type & __t)
{
  const struct breakpoint & D.256345;

  <bb 2> :
  D.256345 = __t;

  <bb 3> :
<L0>:
  return D.256345;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9667, decl_uid=229437, cgraph_uid=6302, symbol_order=7088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (struct new_allocator * const this, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  void * D.236987;
  void * D.236986;
  const struct breakpoint & D.236991;

  <bb 2> :
  D.236991 = std::forward<const breakpoint&> (__args#0);
  D.236986 = __p;
  D.236987 = operator new (40, D.236986);
  breakpoint::breakpoint (D.236987, D.236991);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  operator delete (D.236987, D.236986);
  resx 1

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2ERKS_, funcdef_no=9669, decl_uid=202546, cgraph_uid=6300, symbol_order=7086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, const struct breakpoint & D.202548)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.202548->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.202548->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_, funcdef_no=8234, decl_uid=126265, cgraph_uid=4866, symbol_order=5648)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 8 3 }
;; 3 succs { 8 4 }
;; 4 succs { 10 5 }
;; 5 succs { 10 6 }
;; 6 succs { 10 7 }
;; 7 succs { 1 }
;; 8 succs { 9 }
;; 9 succs { }
;; 10 succs { }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, const struct basic_string & __str)
{
  char * D.256353;
  char * D.256352;
  char * D.256349;
  const struct allocator_type & D.256348;
  struct allocator D.218697;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.256348 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.256348;
  D.218697 = __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_2); [return slot optimization]
  D.256349 = std::__cxx11::basic_string<char>::_M_local_data (this);

  <bb 3> :
  _3 = D.256349;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _3, &D.218697);

  <bb 4> :
  std::allocator<char>::~allocator (&D.218697);
  D.218697 = {CLOBBER};
  D.256352 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 5> :
  _4 = D.256352;
  _5 = std::__cxx11::basic_string<char>::length (__str);
  _6 = _4 + _5;
  D.256353 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 6> :
  _7 = D.256353;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, _7, _6);

  <bb 7> :
  return;

  <bb 8> :
<L0>:
  std::allocator<char>::~allocator (&D.218697);
  resx 2

  <bb 9> :
<L1>:
  D.218697 = {CLOBBER};
  resx 1

  <bb 10> :
<L2>:
  _8 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_8);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_, funcdef_no=9082, decl_uid=125092, cgraph_uid=5714, symbol_order=6500)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_, funcdef_no=9838, decl_uid=125052, cgraph_uid=6470, symbol_order=7256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<char>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2ERKS_, funcdef_no=9054, decl_uid=117124, cgraph_uid=5686, symbol_order=6472)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_, funcdef_no=9803, decl_uid=117051, cgraph_uid=6435, symbol_order=7221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.117053)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_, funcdef_no=9058, decl_uid=218447, cgraph_uid=5690, symbol_order=6476)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end)
{
  struct __false_type D.256359;

  <bb 2> :
  std::__cxx11::basic_string<char>::_M_construct_aux<char*> (this, __beg, __end, D.256359);
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct_aux<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type, funcdef_no=9807, decl_uid=230789, cgraph_uid=6439, symbol_order=7225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::__cxx11::basic_string<char>::_M_construct_aux<char*> (struct basic_string * const this, char * __beg, char * __end, struct __false_type D.238049)
{
  struct forward_iterator_tag D.256360;
  struct _Tag D.238052;

  <bb 2> :
  _1 = &D.238052;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, __beg, __end, D.256360);

  <bb 3> :
  D.238052 = {CLOBBER};
  return;

  <bb 4> :
<L0>:
  D.238052 = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag, funcdef_no=10351, decl_uid=238053, cgraph_uid=6984, symbol_order=7774)

Removing basic block 18
Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 20 }
;; 8 succs { 20 9 }
;; 9 succs { 10 13 }
;; 10 succs { 20 11 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 16 14 }
;; 14 succs { 20 15 }
;; 15 succs { 1 }
;; 16 succs { 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end, struct forward_iterator_tag D.242537)
{
  char * D.256375;
  char * D.256374;
  long int D.256373;
  size_type __dnew;
  bool iftmp.2028;
  bool retval.2027;

  <bb 2> :
  _1 = __gnu_cxx::__is_null_pointer<char> (__beg);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__beg != __end)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2028 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2028 = 0;

  <bb 6> :
  retval.2027 = iftmp.2028;
  if (retval.2027 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 8> :
  D.256373 = std::distance<char*> (__beg, __end);

  <bb 9> :
  _2 = D.256373;
  _3 = (long unsigned int) _2;
  __dnew = _3;
  __dnew.2029_4 = __dnew;
  if (__dnew.2029_4 > 15)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  D.256374 = std::__cxx11::basic_string<char>::_M_create (this, &__dnew, 0);

  <bb 11> :
  _5 = D.256374;
  std::__cxx11::basic_string<char>::_M_data (this, _5);

  <bb 12> :
  __dnew.2030_6 = __dnew;
  std::__cxx11::basic_string<char>::_M_capacity (this, __dnew.2030_6);

  <bb 13> :
  D.256375 = std::__cxx11::basic_string<char>::_M_data (this);

  <bb 14> :
  _7 = D.256375;
  std::__cxx11::basic_string<char>::_S_copy_chars (_7, __beg, __end);
  __dnew.2031_9 = __dnew;
  std::__cxx11::basic_string<char>::_M_set_length (this, __dnew.2031_9);

  <bb 15> :
  __dnew = {CLOBBER};
  return;

  <bb 16> :
<L9>:
  eh_dispatch 2

  <bb 17> :
<L10>:
  _8 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_8);
  std::__cxx11::basic_string<char>::_M_dispose (this);

  <bb 18> :
  __cxa_rethrow ();

  <bb 19> :
<L11>:
  __cxa_end_catch ();
  resx 3

  <bb 20> :
<L12>:
  __dnew = {CLOBBER};
  resx 1

}



;; Function __gnu_cxx::__is_null_pointer<char> (_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_, funcdef_no=10730, decl_uid=242541, cgraph_uid=7362, symbol_order=8152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__is_null_pointer<char> (char * __ptr)
{
  bool D.256380;

  <bb 2> :
  D.256380 = __ptr == 0B;

  <bb 3> :
<L0>:
  return D.256380;

}



;; Function std::distance<char*> (_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_, funcdef_no=10352, decl_uid=242544, cgraph_uid=6983, symbol_order=7773)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::distance<char*> (char * __first, char * __last)
{
  struct random_access_iterator_tag D.256383;
  difference_type D.256382;

  <bb 2> :
  std::__iterator_category<char*> (&__first);
  __first.2032_1 = __first;
  D.256382 = std::__distance<char*> (__first.2032_1, __last, D.256383);

  <bb 3> :
<L0>:
  return D.256382;

}



;; Function std::__iterator_category<char*> (_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_, funcdef_no=10731, decl_uid=242550, cgraph_uid=7363, symbol_order=8153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator_category std::__iterator_category<char*> (char * const & D.244167)
{
  struct iterator_category D.256385;

  <bb 2> :

  <bb 3> :
<L0>:
  return D.256385;

}



;; Function std::__distance<char*> (_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag, funcdef_no=10732, decl_uid=242553, cgraph_uid=7364, symbol_order=8154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::__distance<char*> (char * __first, char * __last, struct random_access_iterator_tag D.244175)
{
  difference_type D.256387;

  <bb 2> :
  D.256387 = __last - __first;

  <bb 3> :
<L0>:
  return D.256387;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev, funcdef_no=7271, decl_uid=126589, cgraph_uid=3902, symbol_order=4681)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (struct _Alloc_hider * const this)
{
  <bb 2> :
  std::allocator<char>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<breakpoint>::end (_ZNSt6vectorI10breakpointSaIS0_EE3endEv, funcdef_no=8859, decl_uid=185836, cgraph_uid=5491, symbol_order=6277)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::end (struct vector * const this)
{
  struct iterator D.229460;
  struct iterator D.256389;

  <bb 2> :
  _1 = &this->D.186223._M_impl.D.185568._M_finish;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.229460, _1);
  D.256389 = D.229460;
  D.229460 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256389;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9672, decl_uid=216472, cgraph_uid=6304, symbol_order=7090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (struct __normal_iterator * const this, struct breakpoint * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (_ZNSt6vectorI10breakpointSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8860, decl_uid=216491, cgraph_uid=5495, symbol_order=6281)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { }
void std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (struct vector * const this, struct iterator __position, const struct breakpoint & __args#0)
{
  struct breakpoint * D.256396;
  const size_type D.256395;
  struct breakpoint * __new_finish;
  struct breakpoint * __new_start;
  const size_type __elems_before;
  struct breakpoint * __old_finish;
  struct breakpoint * __old_start;
  const size_type __len;
  struct iterator D.229468;

  <bb 2> :
  D.256395 = std::vector<breakpoint>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.256395;
  __old_start = this->D.186223._M_impl.D.185568._M_start;
  __old_finish = this->D.186223._M_impl.D.185568._M_finish;
  D.229468 = std::vector<breakpoint>::begin (this);
  _1 = __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (&__position, &D.229468);
  __elems_before = (const size_type) _1;
  D.229468 = {CLOBBER};
  _2 = &this->D.186223;
  D.256396 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_2, __len);
  __new_start = D.256396;
  __new_finish = __new_start;
  _3 = std::forward<const breakpoint&> (__args#0);
  _4 = __elems_before * 40;
  _5 = __new_start + _4;
  _6 = &this->D.186223._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_6, _5, _3);

  <bb 3> :
  __new_finish = 0B;
  _7 = &this->D.186223;
  _8 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<breakpoint>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 40;
  _11 = &this->D.186223;
  _12 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<breakpoint>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.186223;
  _23 = this->D.186223._M_impl.D.185568._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 40;
  _26 = (long unsigned int) _25;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_22, __old_start, _26);
  this->D.186223._M_impl.D.185568._M_start = __new_start;
  this->D.186223._M_impl.D.185568._M_finish = __new_finish;
  _27 = __len * 40;
  _28 = __new_start + _27;
  this->D.186223._M_impl.D.185568._M_end_of_storage = _28;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 2

  <bb 5> :
<L1>:
  _15 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_15);
  if (__new_finish == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _16 = __elems_before * 40;
  _17 = __new_start + _16;
  _18 = &this->D.186223._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_18, _17);
  goto <bb 8>; [INV]

  <bb 7> :
  _19 = &this->D.186223;
  _20 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_19);
  std::_Destroy<breakpoint*, breakpoint> (__new_start, __new_finish, _20);

  <bb 8> :
  _21 = &this->D.186223;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_21, __new_start, __len);

  <bb 9> :
  __cxa_rethrow ();

  <bb 10> :
<L5>:
  __cxa_end_catch ();
  resx 3

}



;; Function std::vector<breakpoint>::_M_check_len (_ZNKSt6vectorI10breakpointSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9674, decl_uid=186072, cgraph_uid=6306, symbol_order=7092)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<breakpoint>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.2035;
  size_type D.256403;
  const long unsigned int D.237000;
  bool retval.2033;

  <bb 2> :
  _1 = std::vector<breakpoint>::max_size (this);
  _2 = std::vector<breakpoint>::size (this);
  _3 = _1 - _2;
  __n.2034_4 = __n;
  retval.2033 = _3 < __n.2034_4;
  if (retval.2033 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<breakpoint>::size (this);
  _6 = std::vector<breakpoint>::size (this);
  D.237000 = _6;
  _7 = std::max<long unsigned int> (&D.237000, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237000 = {CLOBBER};
  _9 = std::vector<breakpoint>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<breakpoint>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2035 = std::vector<breakpoint>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2035 = __len;

  <bb 8> :
  D.256403 = iftmp.2035;

  <bb 9> :
<L6>:
  return D.256403;

}



;; Function std::vector<breakpoint>::max_size (_ZNKSt6vectorI10breakpointSaIS0_EE8max_sizeEv, funcdef_no=10247, decl_uid=185858, cgraph_uid=6879, symbol_order=7669)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::max_size (const struct vector * const this)
{
  size_type D.256410;

  <bb 2> :
  _1 = &this->D.186223;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  D.256410 = std::vector<breakpoint>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.256410;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=10677, decl_uid=185458, cgraph_uid=7309, symbol_order=8099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.256412;

  <bb 2> :
  D.256412 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256412;

}



;; Function std::vector<breakpoint>::_S_max_size (_ZNSt6vectorI10breakpointSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10676, decl_uid=186079, cgraph_uid=7308, symbol_order=8098)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.256414;

  <bb 2> :
  __diffmax = 230584300921369395;
  _1 = std::allocator_traits<std::allocator<breakpoint> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.256414 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256414;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::max_size (_ZNSt16allocator_traitsISaI10breakpointEE8max_sizeERKS1_, funcdef_no=10844, decl_uid=185393, cgraph_uid=7476, symbol_order=8268)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<breakpoint> >::max_size (const struct allocator_type & __a)
{
  size_type D.256417;

  <bb 2> :
  D.256417 = __gnu_cxx::new_allocator<breakpoint>::max_size (__a);

  <bb 3> :
<L0>:
  return D.256417;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE8max_sizeEv, funcdef_no=10922, decl_uid=185235, cgraph_uid=7554, symbol_order=8346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::max_size (const struct new_allocator * const this)
{
  size_type D.256419;

  <bb 2> :
  D.256419 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.256419;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE11_M_max_sizeEv, funcdef_no=10679, decl_uid=185254, cgraph_uid=7310, symbol_order=8100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.256421;

  <bb 2> :
  D.256421 = 230584300921369395;

  <bb 3> :
<L0>:
  return D.256421;

}



;; Function std::vector<breakpoint>::begin (_ZNSt6vectorI10breakpointSaIS0_EE5beginEv, funcdef_no=9675, decl_uid=185832, cgraph_uid=6307, symbol_order=7093)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::begin (struct vector * const this)
{
  struct iterator D.237002;
  struct iterator D.256423;

  <bb 2> :
  _1 = &this->D.186223._M_impl.D.185568._M_start;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.237002, _1);
  D.256423 = D.237002;
  D.237002 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256423;

}



;; Function __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (_ZN9__gnu_cxxmiIP10breakpointSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9676, decl_uid=229469, cgraph_uid=6308, symbol_order=7094)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.256426;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.256426 = _5 /[ex] 40;

  <bb 3> :
<L0>:
  return D.256426;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE11_M_allocateEm, funcdef_no=9677, decl_uid=185572, cgraph_uid=6309, symbol_order=7095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct breakpoint * D.256434;
  struct breakpoint * iftmp.2036;
  struct breakpoint * D.256428;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.256434 = std::allocator_traits<std::allocator<breakpoint> >::allocate (_1, __n);
  iftmp.2036 = D.256434;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2036 = 0B;

  <bb 5> :
  D.256428 = iftmp.2036;

  <bb 6> :
<L3>:
  return D.256428;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::allocate (_ZNSt16allocator_traitsISaI10breakpointEE8allocateERS1_m, funcdef_no=10248, decl_uid=185373, cgraph_uid=6880, symbol_order=7670)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * std::allocator_traits<std::allocator<breakpoint> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct breakpoint * D.256437;
  struct breakpoint * D.256435;

  <bb 2> :
  D.256437 = __gnu_cxx::new_allocator<breakpoint>::allocate (__a, __n, 0B);
  D.256435 = D.256437;

  <bb 3> :
<L0>:
  return D.256435;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::allocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE8allocateEmPKv, funcdef_no=10678, decl_uid=185227, cgraph_uid=7311, symbol_order=8101)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * __gnu_cxx::new_allocator<breakpoint>::allocate (struct new_allocator * const this, size_type __n, const void * D.243931)
{
  struct breakpoint * D.256448;
  struct breakpoint * D.256447;
  align_val_t __al;
  struct breakpoint * D.256445;
  bool retval.2037;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2037 = _4 != 0;
  if (retval.2037 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 461168601842738790)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 40;
  D.256448 = operator new (_6);
  D.256445 = D.256448;

  <bb 7> :
<L6>:
  return D.256445;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9679, decl_uid=216459, cgraph_uid=6311, symbol_order=7097)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * const & __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (const struct __normal_iterator * const this)
{
  struct breakpoint * const & D.256449;

  <bb 2> :
  D.256449 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256449;

}



;; Function std::vector<breakpoint>::_S_relocate (_ZNSt6vectorI10breakpointSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9678, decl_uid=185730, cgraph_uid=6310, symbol_order=7096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.256452;
  struct breakpoint * D.256451;

  <bb 2> :
  D.256451 = std::vector<breakpoint>::_S_do_relocate (__first, __last, __result, __alloc, D.256452);

  <bb 3> :
<L0>:
  return D.256451;

}



;; Function std::vector<breakpoint>::_S_do_relocate (_ZNSt6vectorI10breakpointSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10249, decl_uid=185718, cgraph_uid=6881, symbol_order=7671)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_do_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc, struct true_type D.241569)
{
  struct breakpoint * D.256454;

  <bb 2> :
  D.256454 = std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.256454;

}



;; Function std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt12__relocate_aIP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10680, decl_uid=229634, cgraph_uid=7312, symbol_order=8102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * D.256456;

  <bb 2> :
  _1 = std::__niter_base<breakpoint*> (__result);
  _2 = std::__niter_base<breakpoint*> (__last);
  _3 = std::__niter_base<breakpoint*> (__first);
  D.256456 = std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.256456;

}



;; Function std::__niter_base<breakpoint*> (_ZSt12__niter_baseIP10breakpointET_S2_, funcdef_no=10845, decl_uid=229640, cgraph_uid=7477, symbol_order=8269)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__niter_base<breakpoint*> (struct breakpoint * __it)
{
  struct breakpoint * D.256458;

  <bb 2> :
  D.256458 = __it;

  <bb 3> :
<L0>:
  return D.256458;

}



;; Function std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt14__relocate_a_1IP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10846, decl_uid=229785, cgraph_uid=7478, symbol_order=8270)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * __cur;
  struct breakpoint * D.256460;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  _2 = std::__addressof<breakpoint> (__cur);
  std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_2, _1, __alloc);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.256460 = __cur;

  <bb 6> :
<L3>:
  return D.256460;

}



;; Function std::__addressof<breakpoint> (_ZSt11__addressofI10breakpointEPT_RS1_, funcdef_no=10847, decl_uid=229841, cgraph_uid=7479, symbol_order=8271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__addressof<breakpoint> (struct breakpoint & __r)
{
  struct breakpoint * D.256462;

  <bb 2> :
  D.256462 = __r;

  <bb 3> :
<L0>:
  return D.256462;

}



;; Function std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_ZSt19__relocate_object_aI10breakpointS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10923, decl_uid=229814, cgraph_uid=7555, symbol_order=8347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (struct breakpoint * restrict __dest, struct breakpoint * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<breakpoint&> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (__alloc, __dest, _1);
  _2 = std::__addressof<breakpoint> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (__alloc, _2);
  return;

}



;; Function std::move<breakpoint&> (_ZSt4moveIR10breakpointEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10957, decl_uid=229826, cgraph_uid=7589, symbol_order=8381)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<breakpoint&> (struct breakpoint & __t)
{
  struct type & D.256464;

  <bb 2> :
  D.256464 = __t;

  <bb 3> :
<L0>:
  return D.256464;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10958, decl_uid=229828, cgraph_uid=7590, symbol_order=8382)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (struct allocator_type & __a, struct breakpoint * __p, struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<breakpoint> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (__a, __p, _1);
  return;

}



;; Function std::forward<breakpoint> (_ZSt7forwardI10breakpointEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10976, decl_uid=245676, cgraph_uid=7608, symbol_order=8400)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint & std::forward<breakpoint> (struct type & __t)
{
  struct breakpoint & D.256466;

  <bb 2> :
  D.256466 = __t;

  <bb 3> :
<L0>:
  return D.256466;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10977, decl_uid=245678, cgraph_uid=7612, symbol_order=8404)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (struct new_allocator * const this, struct breakpoint * __p, struct breakpoint & __args#0)
{
  void * D.245755;
  void * D.245754;
  struct breakpoint & D.245759;

  <bb 2> :
  D.245759 = std::forward<breakpoint> (__args#0);
  D.245754 = __p;
  D.245755 = operator new (40, D.245754);
  breakpoint::breakpoint (D.245755, D.245759);
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2EOS_, funcdef_no=10979, decl_uid=202555, cgraph_uid=7610, symbol_order=8402)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, struct breakpoint & D.202557)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.202557->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.202557->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_, funcdef_no=7281, decl_uid=126195, cgraph_uid=3913, symbol_order=4693)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, struct basic_string & __str)
{
  char * D.256476;
  char * D.256475;
  bool D.256474;
  char * D.256473;
  struct allocator_type & D.256472;
  bool retval.2038;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.256472 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.256472;
  _3 = std::move<std::allocator<char>&> (_2);
  D.256473 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _4 = D.256473;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _4, _3);
  D.256474 = std::__cxx11::basic_string<char>::_M_is_local (__str);
  retval.2038 = D.256474;
  if (retval.2038 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = &__str->D.125192._M_local_buf;
  _6 = &this->D.125192._M_local_buf;
  std::char_traits<char>::copy (_6, _5, 16);
  goto <bb 5>; [INV]

  <bb 4> :
  D.256475 = std::__cxx11::basic_string<char>::_M_data (__str);
  _7 = D.256475;
  std::__cxx11::basic_string<char>::_M_data (this, _7);
  _8 = __str->D.125192._M_allocated_capacity;
  std::__cxx11::basic_string<char>::_M_capacity (this, _8);

  <bb 5> :
  _9 = std::__cxx11::basic_string<char>::length (__str);
  std::__cxx11::basic_string<char>::_M_length (this, _9);
  D.256476 = std::__cxx11::basic_string<char>::_M_local_data (__str);
  _10 = D.256476;
  std::__cxx11::basic_string<char>::_M_data (__str, _10);
  std::__cxx11::basic_string<char>::_M_set_length (__str, 0);
  return;

}



;; Function std::char_traits<char>::copy (_ZNSt11char_traitsIcE4copyEPcPKcm, funcdef_no=3400, decl_uid=115117, cgraph_uid=2218, symbol_order=2386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
char_type * std::char_traits<char>::copy (char_type * __s1, const char_type * __s2, size_t __n)
{
  char_type * D.256479;

  <bb 2> :
  if (__n == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256479 = __s1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.256479 = __builtin_memcpy (__s1, __s2, __n);

  <bb 5> :
<L2>:
  return D.256479;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE7destroyIS0_EEvRS1_PT_, funcdef_no=9681, decl_uid=229843, cgraph_uid=6313, symbol_order=7099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (struct allocator_type & __a, struct breakpoint * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE7destroyIS1_EEvPT_, funcdef_no=10250, decl_uid=237021, cgraph_uid=6882, symbol_order=7672)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (struct new_allocator * const this, struct breakpoint * __p)
{
  <bb 2> :
  breakpoint::~breakpoint (__p);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9680, decl_uid=185456, cgraph_uid=6312, symbol_order=7098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256481;

  <bb 2> :
  D.256481 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256481;

}



;; Function std::_Destroy<breakpoint*, breakpoint> (_ZSt8_DestroyIP10breakpointS0_EvT_S2_RSaIT0_E, funcdef_no=9682, decl_uid=230025, cgraph_uid=6314, symbol_order=7100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*, breakpoint> (struct breakpoint * __first, struct breakpoint * __last, struct allocator & D.237026)
{
  <bb 2> :
  std::_Destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy<breakpoint*> (_ZSt8_DestroyIP10breakpointEvT_S2_, funcdef_no=10251, decl_uid=237028, cgraph_uid=6883, symbol_order=7673)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<breakpoint*> (_ZNSt12_Destroy_auxILb0EE9__destroyIP10breakpointEEvT_S4_, funcdef_no=10681, decl_uid=241598, cgraph_uid=7313, symbol_order=8103)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  std::_Destroy<breakpoint> (_1);
  __first = __first + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Destroy<breakpoint> (_ZSt8_DestroyI10breakpointEvPT_, funcdef_no=10848, decl_uid=243946, cgraph_uid=7480, symbol_order=8272)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint> (struct breakpoint * __pointer)
{
  <bb 2> :
  breakpoint::~breakpoint (__pointer);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8383, decl_uid=185575, cgraph_uid=5015, symbol_order=5801)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (struct _Vector_base * const this, struct breakpoint * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::deallocate (_ZNSt16allocator_traitsISaI10breakpointEE10deallocateERS1_PS0_m, funcdef_no=9164, decl_uid=185380, cgraph_uid=5796, symbol_order=6582)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::deallocate (struct allocator_type & __a, struct breakpoint * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::deallocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE10deallocateEPS1_m, funcdef_no=9878, decl_uid=185231, cgraph_uid=6510, symbol_order=7300)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::deallocate (struct new_allocator * const this, struct breakpoint * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 40;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function Graph::Graph (_ZN5GraphC2Ev, funcdef_no=6861, decl_uid=204155, cgraph_uid=3492, symbol_order=4266)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::vector (_1);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2Ev, funcdef_no=6859, decl_uid=167760, cgraph_uid=3489, symbol_order=4263)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2Ev, funcdef_no=6857, decl_uid=167186, cgraph_uid=3486, symbol_order=4260)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev, funcdef_no=7895, decl_uid=167078, cgraph_uid=4527, symbol_order=5309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this);
  _1 = &this->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2Ev, funcdef_no=8865, decl_uid=166856, cgraph_uid=5497, symbol_order=6283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2Ev, funcdef_no=9684, decl_uid=166785, cgraph_uid=6316, symbol_order=7102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev, funcdef_no=8868, decl_uid=167028, cgraph_uid=5500, symbol_order=6286)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::put (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7906, decl_uid=203183, cgraph_uid=4542, symbol_order=5324)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<cgraph_node*, Graph>::put (struct hash_map * const this, struct cgraph_node * const & k, const struct Graph & v)
{
  bool D.256496;
  struct hash_entry * D.256495;
  unsigned int D.256494;
  bool ins;
  struct hash_entry * e;
  bool D.256492;
  void * D.216534;
  void * D.216533;

  <bb 2> :
  _1 = &this->m_table;
  D.256494 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (k);
  _2 = D.256494;
  D.256495 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.256495;
  D.256496 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (e);
  ins = D.256496;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216533 = &e->m_value;
  D.216534 = operator new (48, D.216533);
  Graph::Graph (D.216534, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  Graph::operator= (_4, v);

  <bb 5> :
  D.256492 = ~ins;

  <bb 6> :
<L3>:
  return D.256492;

  <bb 7> :
<L4>:
  operator delete (D.216534, D.216533);
  resx 1

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE4hashERKS2_, funcdef_no=8876, decl_uid=203143, cgraph_uid=5508, symbol_order=6294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (struct cgraph_node * const & h)
{
  hashval_t D.256498;

  <bb 2> :
  D.256498 = pointer_hash<cgraph_node>::hash (h);

  <bb 3> :
<L0>:
  return D.256498;

}



;; Function pointer_hash<cgraph_node>::hash (_ZN12pointer_hashI11cgraph_nodeE4hashERKPS0_, funcdef_no=9688, decl_uid=203100, cgraph_uid=6320, symbol_order=7106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<cgraph_node>::hash (struct cgraph_node * const & candidate)
{
  hashval_t D.256500;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.256500 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.256500;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8877, decl_uid=203341, cgraph_uid=5509, symbol_order=6295)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct cgraph_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.256551;
  bool D.256550;
  bool D.256549;
  bool D.256548;
  bool D.256547;
  bool D.256546;
  struct value_type * D.256545;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2044;
  bool retval.2043;
  bool retval.2042;
  bool retval.2041;
  bool retval.2040;
  bool retval.2039;
  struct value_type * D.256507;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.256546 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2039 = D.256546;
  if (retval.2039 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.256547 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2040 = D.256547;
  if (retval.2040 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.256548 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2041 = D.256548;
  if (retval.2041 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.256507 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.256549 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2042 = D.256549;
  if (retval.2042 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.256550 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2043 = D.256550;
  if (retval.2043 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.256551 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2044 = D.256551;
  if (retval.2044 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.256507 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.256507 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.256507 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.256507 = _37 + _39;

  <bb 27> :
<L37>:
  return D.256507;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9689, decl_uid=203422, cgraph_uid=6333, symbol_order=7119)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.256582;
  unsigned int D.256581;
  bool D.256580;
  bool D.256579;
  struct mem_alloc_description & D.256578;
  struct value_type * D.256577;
  unsigned int D.256576;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.237079;
  void * D.237078;
  struct hash_entry & D.237116;
  bool iftmp.2048;
  bool retval.2047;
  bool iftmp.2046;
  bool retval.2045;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2046 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2046 = 0;

  <bb 6> :
  retval.2045 = iftmp.2046;
  if (retval.2045 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.256576 = hash_table_higher_prime_index (_5);
  nindex = D.256576;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.256577 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.256577;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.256579 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.256579;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.256580 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.256580;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2048 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2048 = 0;

  <bb 15> :
  retval.2047 = iftmp.2048;
  if (retval.2047 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.256581 = hash_map<cgraph_node*, Graph>::hash_entry::hash (x);
  _16 = D.256581;
  D.256582 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.256582;
  D.237116 = std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (x);
  D.237078 = q;
  D.237079 = operator new (56, D.237078);
  hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (D.237079, D.237116);

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10254, decl_uid=203317, cgraph_uid=6886, symbol_order=7676)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.256583;

  <bb 2> :
  D.256583 = this->m_size;

  <bb 3> :
<L0>:
  return D.256583;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10255, decl_uid=203319, cgraph_uid=6887, symbol_order=7677)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.256585;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.256585 = _1 - _2;

  <bb 3> :
<L0>:
  return D.256585;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10256, decl_uid=203419, cgraph_uid=6888, symbol_order=7678)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2049;
  bool D.256587;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2049 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2049 = 0;

  <bb 6> :
  D.256587 = iftmp.2049;

  <bb 7> :
<L4>:
  return D.256587;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10258, decl_uid=203242, cgraph_uid=6890, symbol_order=7680)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<cgraph_node*, Graph>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.256596;
  hashval_t D.256594;

  <bb 2> :
  _1 = &e->m_key;
  D.256596 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_1);
  D.256594 = D.256596;

  <bb 3> :
<L0>:
  return D.256594;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10257, decl_uid=203412, cgraph_uid=6889, symbol_order=7679)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.256609;
  bool D.256608;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2051;
  struct value_type * D.256600;
  bool retval.2050;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.256608 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2050 = D.256608;
  if (retval.2050 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256600 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.256609 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2051 = D.256609;
  if (retval.2051 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.256600 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.256600;

}



;; Function std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (_ZSt4moveIRN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10259, decl_uid=237076, cgraph_uid=6891, symbol_order=7681)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.256610;

  <bb 2> :
  D.256610 = __t;

  <bb 3> :
<L0>:
  return D.256610;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9700, decl_uid=237101, cgraph_uid=6331, symbol_order=7117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.237103)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.237103->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.237103->m_value;
  Graph::Graph (_2, _3);
  return;

}



;; Function Graph::Graph (_ZN5GraphC2EOS_, funcdef_no=9698, decl_uid=204172, cgraph_uid=6328, symbol_order=7114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, struct Graph & D.204174)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.204174->V;
  this->V = _1;
  _2 = D.204174->end;
  this->end = _2;
  _3 = D.204174->succ;
  this->succ = _3;
  _4 = D.204174->adj;
  this->adj = _4;
  _5 = &this->stack;
  _6 = &D.204174->stack;
  std::vector<int>::vector (_5, _6);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2EOS1_, funcdef_no=9696, decl_uid=167725, cgraph_uid=6325, symbol_order=7111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this, struct vector & D.167727)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167768;
  _2 = &D.167727->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EOS1_, funcdef_no=9694, decl_uid=167161, cgraph_uid=6322, symbol_order=7108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.167163)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.167163->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS2_, funcdef_no=10261, decl_uid=167067, cgraph_uid=6893, symbol_order=7683)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  std::allocator<int>::allocator (this, _1);
  _2 = &this->D.167081;
  _3 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  _4 = &_3->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2ERKS_, funcdef_no=10684, decl_uid=166851, cgraph_uid=7316, symbol_order=8106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_, funcdef_no=10850, decl_uid=166780, cgraph_uid=7482, symbol_order=8274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.166782)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIiSaIiEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=10682, decl_uid=241633, cgraph_uid=7314, symbol_order=8104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.256612;

  <bb 2> :
  D.256612 = __t;

  <bb 3> :
<L0>:
  return D.256612;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2EOS2_, funcdef_no=10687, decl_uid=167023, cgraph_uid=7319, symbol_order=8109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8900, decl_uid=216678, cgraph_uid=5532, symbol_order=6318)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8897, decl_uid=203426, cgraph_uid=5529, symbol_order=6315)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.256617;
  bool D.256615;

  <bb 2> :
  D.256617 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (v);
  D.256615 = D.256617;

  <bb 3> :
<L0>:
  return D.256615;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8898, decl_uid=203424, cgraph_uid=5530, symbol_order=6316)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.256620;
  bool D.256618;

  <bb 2> :
  D.256620 = hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (v);
  D.256618 = D.256620;

  <bb 3> :
<L0>:
  return D.256618;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9728, decl_uid=203251, cgraph_uid=6360, symbol_order=7146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.256623;
  bool D.256621;

  <bb 2> :
  D.256623 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.256621 = D.256623;

  <bb 3> :
<L0>:
  return D.256621;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10288, decl_uid=237304, cgraph_uid=6920, symbol_order=7710)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256624;

  <bb 2> :
  _1 = entry->m_key;
  D.256624 = pointer_hash<cgraph_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.256624;

}



;; Function pointer_hash<cgraph_node>::is_deleted (_ZN12pointer_hashI11cgraph_nodeE10is_deletedEPS0_, funcdef_no=10702, decl_uid=203110, cgraph_uid=7334, symbol_order=8124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_deleted (struct cgraph_node * e)
{
  bool D.256626;

  <bb 2> :
  D.256626 = e == 1B;

  <bb 3> :
<L0>:
  return D.256626;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::equal (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9702, decl_uid=203244, cgraph_uid=6334, symbol_order=7120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::equal (const struct hash_entry & a, struct cgraph_node * const & b)
{
  bool D.256630;
  bool D.256628;

  <bb 2> :
  _1 = &a->m_key;
  D.256630 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_1, b);
  D.256628 = D.256630;

  <bb 3> :
<L0>:
  return D.256628;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10equal_keysERKS2_S7_, funcdef_no=10263, decl_uid=203145, cgraph_uid=6895, symbol_order=7685)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (struct cgraph_node * const & k1, struct cgraph_node * const & k2)
{
  bool D.256631;

  <bb 2> :
  D.256631 = pointer_hash<cgraph_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.256631;

}



;; Function pointer_hash<cgraph_node>::equal (_ZN12pointer_hashI11cgraph_nodeE5equalERKPS0_S4_, funcdef_no=10689, decl_uid=203102, cgraph_uid=7321, symbol_order=8111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::equal (struct cgraph_node * const & existing, struct cgraph_node * const & candidate)
{
  bool D.256633;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.256633 = _1 == _2;

  <bb 3> :
<L0>:
  return D.256633;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9703, decl_uid=203430, cgraph_uid=6335, symbol_order=7121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10264, decl_uid=203254, cgraph_uid=6896, symbol_order=7686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10690, decl_uid=241651, cgraph_uid=7322, symbol_order=8112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<cgraph_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<cgraph_node>::mark_empty (_ZN12pointer_hashI11cgraph_nodeE10mark_emptyERPS0_, funcdef_no=10852, decl_uid=203108, cgraph_uid=7484, symbol_order=8276)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<cgraph_node>::mark_empty (struct cgraph_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8878, decl_uid=203256, cgraph_uid=5510, symbol_order=6296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.256637;
  bool D.256635;

  <bb 2> :
  D.256637 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.256635 = D.256637;

  <bb 3> :
<L0>:
  return D.256635;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=9704, decl_uid=230075, cgraph_uid=6336, symbol_order=7122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256638;

  <bb 2> :
  _1 = entry->m_key;
  D.256638 = pointer_hash<cgraph_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.256638;

}



;; Function pointer_hash<cgraph_node>::is_empty (_ZN12pointer_hashI11cgraph_nodeE8is_emptyEPS0_, funcdef_no=10265, decl_uid=203112, cgraph_uid=6897, symbol_order=7687)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_empty (struct cgraph_node * e)
{
  bool D.256640;

  <bb 2> :
  D.256640 = e == 0B;

  <bb 3> :
<L0>:
  return D.256640;

}



;; Function Graph::Graph (_ZN5GraphC2ERKS_, funcdef_no=7908, decl_uid=204163, cgraph_uid=4539, symbol_order=5321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, const struct Graph & D.204165)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.204165->V;
  this->V = _1;
  _2 = D.204165->end;
  this->end = _2;
  _3 = D.204165->succ;
  this->succ = _3;
  _4 = D.204165->adj;
  this->adj = _4;
  _5 = &this->stack;
  _6 = &D.204165->stack;
  std::vector<int>::vector (_5, _6);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2ERKS1_, funcdef_no=8880, decl_uid=167731, cgraph_uid=5512, symbol_order=6298)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<int>::vector (struct vector * const this, const struct vector & __x)
{
  int * D.256646;
  struct __normal_iterator D.256643;
  struct __normal_iterator D.256642;
  struct allocator D.230186;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167768;
  _2 = &__x->D.167768;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  D.230186 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<int>::size (__x);
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _4, &D.230186);

  <bb 3> :
  std::allocator<int>::~allocator (&D.230186);
  D.230186 = {CLOBBER};
  _5 = &this->D.167768;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = this->D.167768._M_impl.D.167081._M_start;
  D.256642 = std::vector<int>::end (__x);
  D.256643 = std::vector<int>::begin (__x);
  D.256646 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (D.256643, D.256642, _7, _6);

  <bb 4> :
  _8 = D.256646;
  this->D.167768._M_impl.D.167081._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<int>::~allocator (&D.230186);
  resx 2

  <bb 6> :
<L1>:
  D.230186 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE17_S_select_on_copyERKS1_, funcdef_no=9705, decl_uid=166943, cgraph_uid=6337, symbol_order=7123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_, funcdef_no=10266, decl_uid=166908, cgraph_uid=6898, symbol_order=7688)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<int>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_, funcdef_no=9708, decl_uid=167168, cgraph_uid=6340, symbol_order=7126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<int, std::allocator<int> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_, funcdef_no=10268, decl_uid=167073, cgraph_uid=6900, symbol_order=7690)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this, __a);
  _1 = &this->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_create_storage (_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm, funcdef_no=10270, decl_uid=167092, cgraph_uid=6902, symbol_order=7692)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  int * D.256653;

  <bb 2> :
  D.256653 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (this, __n);
  _1 = D.256653;
  this->_M_impl.D.167081._M_start = _1;
  _2 = this->_M_impl.D.167081._M_start;
  this->_M_impl.D.167081._M_finish = _2;
  _3 = this->_M_impl.D.167081._M_start;
  _4 = __n * 4;
  _5 = _3 + _4;
  this->_M_impl.D.167081._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev, funcdef_no=6855, decl_uid=167128, cgraph_uid=3483, symbol_order=4257)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<int>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<int>::~allocator (_ZNSaIiED2Ev, funcdef_no=7898, decl_uid=166861, cgraph_uid=4530, symbol_order=5312)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIiED2Ev, funcdef_no=8871, decl_uid=166790, cgraph_uid=5503, symbol_order=6289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::end (_ZNKSt6vectorIiSaIiEE3endEv, funcdef_no=9711, decl_uid=167355, cgraph_uid=6343, symbol_order=7129)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::end (const struct vector * const this)
{
  struct const_iterator D.237157;
  struct const_iterator D.256654;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_finish;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.237157, _1);
  D.256654 = D.237157;
  D.237157 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256654;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_, funcdef_no=10272, decl_uid=230155, cgraph_uid=6904, symbol_order=7694)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, const int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::begin (_ZNKSt6vectorIiSaIiEE5beginEv, funcdef_no=9710, decl_uid=167351, cgraph_uid=6342, symbol_order=7128)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::begin (const struct vector * const this)
{
  struct const_iterator D.237155;
  struct const_iterator D.256657;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_start;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.237155, _1);
  D.256657 = D.237155;
  D.237155 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256657;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E, funcdef_no=9712, decl_uid=230175, cgraph_uid=6344, symbol_order=7130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result, struct allocator & D.237161)
{
  int * D.256662;
  int * D.256660;

  <bb 2> :
  D.256662 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.256660 = D.256662;

  <bb 3> :
<L0>:
  return D.256660;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10274, decl_uid=237163, cgraph_uid=6907, symbol_order=7697)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256665;
  const bool __assignable;
  int * D.256663;

  <bb 2> :
  __assignable = 1;
  D.256665 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.256663 = D.256665;

  <bb 3> :
<L0>:
  return D.256663;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_, funcdef_no=10691, decl_uid=241770, cgraph_uid=7323, symbol_order=8113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256668;
  int * D.256666;

  <bb 2> :
  D.256668 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.256666 = D.256668;

  <bb 3> :
<L0>:
  return D.256666;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10853, decl_uid=243982, cgraph_uid=7485, symbol_order=8277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256673;
  struct __normal_iterator D.256671;
  struct __normal_iterator D.256670;
  int * D.256669;

  <bb 2> :
  D.256670 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.256671 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.256673 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (D.256671, D.256670, __result);
  D.256669 = D.256673;

  <bb 3> :
<L0>:
  return D.256669;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_, funcdef_no=10276, decl_uid=237212, cgraph_uid=6908, symbol_order=7698)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.256674;

  <bb 2> :
  D.256674 = __it;

  <bb 3> :
<L0>:
  return D.256674;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_, funcdef_no=10924, decl_uid=244848, cgraph_uid=7556, symbol_order=8348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256678;
  int * D.256676;

  <bb 2> :
  __result.2052_1 = __result;
  _2 = std::__niter_base<int*> (__result.2052_1);
  _3 = std::__niter_base<const int*, std::vector<int> > (__last);
  _4 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.256678 = std::__copy_move_a1<false, const int*, int*> (_4, _3, _2);
  _5 = D.256678;
  D.256676 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.256676;

}



;; Function std::__niter_base<const int*, std::vector<int> > (_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10692, decl_uid=241785, cgraph_uid=7324, symbol_order=8114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * std::__niter_base<const int*, std::vector<int> > (struct __normal_iterator __it)
{
  const int * D.256679;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (&__it);
  D.256679 = *_1;

  <bb 3> :
<L0>:
  return D.256679;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv, funcdef_no=10854, decl_uid=230142, cgraph_uid=7486, symbol_order=8278)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * const & __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  const int * const & D.256681;

  <bb 2> :
  D.256681 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256681;

}



;; Function std::__copy_move_a1<false, const int*, int*> (_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10694, decl_uid=241939, cgraph_uid=7326, symbol_order=8116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.256685;
  int * D.256683;

  <bb 2> :
  D.256685 = std::__copy_move_a2<false, const int*, int*> (__first, __last, __result);
  D.256683 = D.256685;

  <bb 3> :
<L0>:
  return D.256683;

}



;; Function std::__copy_move_a2<false, const int*, int*> (_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10855, decl_uid=243996, cgraph_uid=7487, symbol_order=8279)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.256686;

  <bb 2> :
  D.256686 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.256686;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_, funcdef_no=10925, decl_uid=244869, cgraph_uid=7557, symbol_order=8349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (const int * __first, const int * __last, int * __result)
{
  const ptrdiff_t _Num;
  int * D.256691;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 4;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.2053_2 = (long unsigned int) _Num;
  _3 = _Num.2053_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.2054_4 = (long unsigned int) _Num;
  _5 = _Num.2054_4 * 4;
  D.256691 = __result + _5;

  <bb 5> :
<L3>:
  return D.256691;

}



;; Function std::__niter_wrap<int*> (_ZSt12__niter_wrapIPiET_RKS1_S1_, funcdef_no=10699, decl_uid=241982, cgraph_uid=7331, symbol_order=8121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_wrap<int*> (int * const & D.244018, int * __res)
{
  int * D.256693;

  <bb 2> :
  D.256693 = __res;

  <bb 3> :
<L0>:
  return D.256693;

}



;; Function std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_ZNSt12_Vector_baseIiSaIiEED2Ev, funcdef_no=7901, decl_uid=167191, cgraph_uid=4533, symbol_order=5315)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.167081._M_end_of_storage;
  _2 = this->_M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function Graph::operator= (_ZN5GraphaSERKS_, funcdef_no=7910, decl_uid=216538, cgraph_uid=4541, symbol_order=5323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct Graph & Graph::operator= (struct Graph * const this, const struct Graph & D.216539)
{
  struct Graph & D.256695;

  <bb 2> :
  _1 = D.216539->V;
  this->V = _1;
  _2 = D.216539->end;
  this->end = _2;
  _3 = D.216539->succ;
  this->succ = _3;
  _4 = D.216539->adj;
  this->adj = _4;
  _5 = &D.216539->stack;
  _6 = &this->stack;
  std::vector<int>::operator= (_6, _5);
  D.256695 = this;

  <bb 3> :
<L0>:
  return D.256695;

}



;; Function std::vector<int>::operator= (_ZNSt6vectorIiSaIiEEaSERKS1_, funcdef_no=8882, decl_uid=167316, cgraph_uid=5516, symbol_order=6302)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<int>::operator= (struct vector * const this, const struct vector & __x)
{
  int * D.256730;
  int * __tmp;
  const size_type __xlen;
  struct vector & D.256728;
  struct __normal_iterator D.256725;
  struct __normal_iterator D.256724;
  struct __normal_iterator D.256723;
  struct __normal_iterator D.256722;
  struct __normal_iterator D.256721;
  bool retval.2059;
  struct __normal_iterator D.256716;
  struct __normal_iterator D.256715;
  bool retval.2058;
  bool iftmp.2057;
  bool retval.2056;
  bool retval.2055;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.2055 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ();
  if (retval.2055 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.167768;
  _4 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.167768;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2057 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2057 = 0;

  <bb 8> :
  retval.2056 = iftmp.2057;
  if (retval.2056 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<int>::clear (this);
  _8 = &this->D.167768;
  _9 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _10 = this->D.167768._M_impl.D.167081._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 4;
  _13 = (long unsigned int) _12;
  _14 = this->D.167768._M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_8, _14, _13);
  this->D.167768._M_impl.D.167081._M_start = 0B;
  this->D.167768._M_impl.D.167081._M_finish = 0B;
  this->D.167768._M_impl.D.167081._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.167768;
  _16 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.167768;
  _18 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<int> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<int>::size (__x);
  _19 = std::vector<int>::capacity (this);
  retval.2058 = __xlen > _19;
  if (retval.2058 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.256715 = std::vector<int>::end (__x);
  D.256716 = std::vector<int>::begin (__x);
  D.256730 = std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (this, __xlen, D.256716, D.256715);
  __tmp = D.256730;
  _20 = &this->D.167768;
  _21 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_20);
  _22 = this->D.167768._M_impl.D.167081._M_finish;
  _23 = this->D.167768._M_impl.D.167081._M_start;
  std::_Destroy<int*, int> (_23, _22, _21);
  _24 = &this->D.167768;
  _25 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _26 = this->D.167768._M_impl.D.167081._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 4;
  _29 = (long unsigned int) _28;
  _30 = this->D.167768._M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_24, _30, _29);
  this->D.167768._M_impl.D.167081._M_start = __tmp;
  _31 = this->D.167768._M_impl.D.167081._M_start;
  _32 = __xlen * 4;
  _33 = _31 + _32;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<int>::size (this);
  retval.2059 = __xlen <= _34;
  if (retval.2059 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.167768;
  _36 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_35);
  D.256721 = std::vector<int>::end (this);
  D.256722 = std::vector<int>::begin (this);
  D.256723 = std::vector<int>::end (__x);
  D.256724 = std::vector<int>::begin (__x);
  D.256725 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.256724, D.256723, D.256722);
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (D.256725, D.256721, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.167768._M_impl.D.167081._M_start;
  _38 = __x->D.167768._M_impl.D.167081._M_start;
  _39 = std::vector<int>::size (this);
  _40 = _39 * 4;
  _41 = _38 + _40;
  _42 = __x->D.167768._M_impl.D.167081._M_start;
  std::copy<int*, int*> (_42, _41, _37);
  _43 = &this->D.167768;
  _44 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_43);
  _45 = this->D.167768._M_impl.D.167081._M_finish;
  _46 = __x->D.167768._M_impl.D.167081._M_finish;
  _47 = __x->D.167768._M_impl.D.167081._M_start;
  _48 = std::vector<int>::size (this);
  _49 = _48 * 4;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<int*, int*, int> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.167768._M_impl.D.167081._M_start;
  _52 = __xlen * 4;
  _53 = _51 + _52;
  this->D.167768._M_impl.D.167081._M_finish = _53;

  <bb 17> :
  D.256728 = this;

  <bb 18> :
<L19>:
  return D.256728;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv, funcdef_no=8883, decl_uid=166948, cgraph_uid=5514, symbol_order=6300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ()
{
  bool D.256731;

  <bb 2> :
  D.256731 = 0;

  <bb 3> :
<L0>:
  return D.256731;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv, funcdef_no=8884, decl_uid=166951, cgraph_uid=5515, symbol_order=6301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ()
{
  bool D.256733;

  <bb 2> :
  D.256733 = 1;

  <bb 3> :
<L0>:
  return D.256733;

}



;; Function std::operator!= (_ZStneRKSaIiES1_, funcdef_no=9713, decl_uid=166834, cgraph_uid=6345, symbol_order=7131)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.237180, const struct allocator & D.237181)
{
  bool D.256735;

  <bb 2> :
  D.256735 = 0;

  <bb 3> :
<L0>:
  return D.256735;

}



;; Function std::__alloc_on_copy<std::allocator<int> > (_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_, funcdef_no=9714, decl_uid=230212, cgraph_uid=6346, symbol_order=7132)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<int> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::capacity (_ZNKSt6vectorIiSaIiEE8capacityEv, funcdef_no=9715, decl_uid=167386, cgraph_uid=6347, symbol_order=7133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::capacity (const struct vector * const this)
{
  size_type D.256737;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _2 = this->D.167768._M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.256737 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.256737;

}



;; Function std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPimT_S9_, funcdef_no=9716, decl_uid=230219, cgraph_uid=6348, symbol_order=7134)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
int * std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  int * D.256741;
  int * __result;
  int * D.256739;

  <bb 2> :
  _1 = &this->D.167768;
  D.256741 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_1, __n);
  __result = D.256741;
  _2 = &this->D.167768;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (__first, __last, __result, _3);

  <bb 3> :
  D.256739 = __result;

  <bb 4> :
<L0>:
  return D.256739;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_, funcdef_no=9717, decl_uid=230227, cgraph_uid=6349, symbol_order=7135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.256747;
  struct __normal_iterator D.256746;
  struct __normal_iterator D.256745;

  <bb 2> :
  D.256746 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.256747 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.256745 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.256747, D.256746, __result);

  <bb 3> :
<L0>:
  return D.256745;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_, funcdef_no=10277, decl_uid=237218, cgraph_uid=6910, symbol_order=7700)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  int * D.256751;
  struct __normal_iterator D.256749;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__result);
  _2 = std::__niter_base<const int*, std::vector<int> > (__last);
  _3 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.256751 = std::__copy_move_a1<false, const int*, int*> (_3, _2, _1);
  _4 = D.256751;
  D.256749 = std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (__result, _4);

  <bb 3> :
<L0>:
  return D.256749;

}



;; Function std::__niter_base<int*, std::vector<int> > (_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE, funcdef_no=10693, decl_uid=241936, cgraph_uid=7325, symbol_order=8115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*, std::vector<int> > (struct __normal_iterator __it)
{
  int * D.256752;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__it);
  D.256752 = *_1;

  <bb 3> :
<L0>:
  return D.256752;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_, funcdef_no=10695, decl_uid=241943, cgraph_uid=7327, symbol_order=8117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (struct __normal_iterator __from, int * __res)
{
  struct __normal_iterator D.256754;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 4;
  D.256754 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.256754;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl, funcdef_no=10856, decl_uid=210056, cgraph_uid=7488, symbol_order=8280)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.244875;
  struct __normal_iterator D.244876;
  struct __normal_iterator D.256756;

  <bb 2> :
  _1 = this->_M_current;
  __n.2060_2 = (long unsigned int) __n;
  _3 = __n.2060_2 * 4;
  _4 = _1 + _3;
  D.244875 = _4;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.244876, &D.244875);
  D.256756 = D.244876;
  D.244876 = {CLOBBER};
  D.244875 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.256756;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E, funcdef_no=9718, decl_uid=230233, cgraph_uid=6350, symbol_order=7136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.237247)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_, funcdef_no=10279, decl_uid=237249, cgraph_uid=6911, symbol_order=7701)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_, funcdef_no=10696, decl_uid=241967, cgraph_uid=7328, symbol_order=8118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator D.244005, struct __normal_iterator D.244006)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<int*, int*> (_ZSt4copyIPiS0_ET0_T_S2_S1_, funcdef_no=9719, decl_uid=230241, cgraph_uid=6351, symbol_order=7137)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256762;
  int * D.256760;

  <bb 2> :
  _1 = std::__miter_base<int*> (__last);
  _2 = std::__miter_base<int*> (__first);
  D.256762 = std::__copy_move_a<false, int*, int*> (_2, _1, __result);
  D.256760 = D.256762;

  <bb 3> :
<L0>:
  return D.256760;

}



;; Function std::__miter_base<int*> (_ZSt12__miter_baseIPiET_S1_, funcdef_no=10280, decl_uid=237265, cgraph_uid=6912, symbol_order=7702)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__miter_base<int*> (int * __it)
{
  int * D.256763;

  <bb 2> :
  D.256763 = __it;

  <bb 3> :
<L0>:
  return D.256763;

}



;; Function std::__copy_move_a<false, int*, int*> (_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10281, decl_uid=237267, cgraph_uid=6913, symbol_order=7703)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256767;
  int * D.256765;

  <bb 2> :
  __result.2061_1 = __result;
  _2 = std::__niter_base<int*> (__result.2061_1);
  _3 = std::__niter_base<int*> (__last);
  _4 = std::__niter_base<int*> (__first);
  D.256767 = std::__copy_move_a1<false, int*, int*> (_4, _3, _2);
  _5 = D.256767;
  D.256765 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.256765;

}



;; Function std::__copy_move_a1<false, int*, int*> (_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10698, decl_uid=241978, cgraph_uid=7330, symbol_order=8120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256770;
  int * D.256768;

  <bb 2> :
  D.256770 = std::__copy_move_a2<false, int*, int*> (__first, __last, __result);
  D.256768 = D.256770;

  <bb 3> :
<L0>:
  return D.256768;

}



;; Function std::__copy_move_a2<false, int*, int*> (_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10857, decl_uid=244014, cgraph_uid=7489, symbol_order=8281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256771;

  <bb 2> :
  D.256771 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.256771;

}



;; Function std::__uninitialized_copy_a<int*, int*, int> (_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E, funcdef_no=9720, decl_uid=230245, cgraph_uid=6352, symbol_order=7138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<int*, int*, int> (int * __first, int * __last, int * __result, struct allocator & D.237274)
{
  int * D.256775;
  int * D.256773;

  <bb 2> :
  D.256775 = std::uninitialized_copy<int*, int*> (__first, __last, __result);
  D.256773 = D.256775;

  <bb 3> :
<L0>:
  return D.256773;

}



;; Function std::uninitialized_copy<int*, int*> (_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_, funcdef_no=10282, decl_uid=237276, cgraph_uid=6914, symbol_order=7704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256778;
  const bool __assignable;
  int * D.256776;

  <bb 2> :
  __assignable = 1;
  D.256778 = std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (__first, __last, __result);
  D.256776 = D.256778;

  <bb 3> :
<L0>:
  return D.256776;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_, funcdef_no=10700, decl_uid=242016, cgraph_uid=7332, symbol_order=8122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256781;
  int * D.256779;

  <bb 2> :
  D.256781 = std::copy<int*, int*> (__first, __last, __result);
  D.256779 = D.256781;

  <bb 3> :
<L0>:
  return D.256779;

}



;; Function hash_map<tree_node*, var_points_to>::~hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6867, decl_uid=204355, cgraph_uid=3498, symbol_order=4272)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7912, decl_uid=203050, cgraph_uid=4544, symbol_order=5326)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256795;
  bool D.256794;
  size_t i;
  bool iftmp.2063;
  bool retval.2062;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.256794 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256794;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.256795 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256795;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2063 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2063 = 0;

  <bb 7> :
  retval.2062 = iftmp.2063;
  if (retval.2062 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, var_points_to>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8885, decl_uid=203003, cgraph_uid=5517, symbol_order=6303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.256798;
  bool D.256796;

  <bb 2> :
  D.256798 = hash_map<tree_node*, var_points_to>::hash_entry::is_empty (v);
  D.256796 = D.256798;

  <bb 3> :
<L0>:
  return D.256796;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9721, decl_uid=202833, cgraph_uid=6353, symbol_order=7139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.256799;

  <bb 2> :
  D.256799 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.256799;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10283, decl_uid=237282, cgraph_uid=6915, symbol_order=7705)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256801;

  <bb 2> :
  _1 = entry->m_key;
  D.256801 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.256801;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8886, decl_uid=203001, cgraph_uid=5518, symbol_order=6304)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.256805;
  bool D.256803;

  <bb 2> :
  D.256805 = hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (v);
  D.256803 = D.256805;

  <bb 3> :
<L0>:
  return D.256803;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9722, decl_uid=202828, cgraph_uid=6354, symbol_order=7140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.256808;
  bool D.256806;

  <bb 2> :
  D.256808 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  D.256806 = D.256808;

  <bb 3> :
<L0>:
  return D.256806;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10284, decl_uid=237286, cgraph_uid=6916, symbol_order=7706)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256809;

  <bb 2> :
  _1 = entry->m_key;
  D.256809 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.256809;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::remove (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8887, decl_uid=202824, cgraph_uid=5519, symbol_order=6305)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9723, decl_uid=230261, cgraph_uid=6355, symbol_order=7141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  var_points_to::~var_points_to (_2);
  return;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8888, decl_uid=216606, cgraph_uid=5520, symbol_order=6306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_map<tree_node*, gimple_array>::~hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6870, decl_uid=204371, cgraph_uid=3501, symbol_order=4275)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7915, decl_uid=190349, cgraph_uid=4547, symbol_order=5329)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256825;
  bool D.256824;
  size_t i;
  bool iftmp.2065;
  bool retval.2064;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.256824 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256824;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.256825 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256825;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2065 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2065 = 0;

  <bb 7> :
  retval.2064 = iftmp.2065;
  if (retval.2064 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<tree_node*, gimple_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8891, decl_uid=190126, cgraph_uid=5523, symbol_order=6309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9725, decl_uid=230271, cgraph_uid=6357, symbol_order=7143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::~hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6873, decl_uid=204387, cgraph_uid=3504, symbol_order=4278)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7918, decl_uid=196794, cgraph_uid=4550, symbol_order=5332)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256839;
  bool D.256838;
  size_t i;
  bool iftmp.2067;
  bool retval.2066;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 168;
  _4 = _2 + _3;
  D.256838 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256838;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 168;
  _9 = _7 + _8;
  D.256839 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256839;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2067 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2067 = 0;

  <bb 7> :
  retval.2066 = iftmp.2067;
  if (retval.2066 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 168;
  _14 = _12 + _13;
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8895, decl_uid=196568, cgraph_uid=5527, symbol_order=6313)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9727, decl_uid=230281, cgraph_uid=6359, symbol_order=7145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<basic_block_def*>::remove (_1);
  _2 = &entry->m_value;
  symbolicinfo::~symbolicinfo (_2);
  return;

}



;; Function ggc_remove<basic_block_def*>::remove (_ZN10ggc_removeIP15basic_block_defE6removeERS1_, funcdef_no=10287, decl_uid=196438, cgraph_uid=6919, symbol_order=7709)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<basic_block_def*>::remove (struct basic_block_def * & D.242028)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<cgraph_node*, Graph>::~hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6876, decl_uid=204403, cgraph_uid=3507, symbol_order=4281)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7921, decl_uid=203473, cgraph_uid=4553, symbol_order=5335)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256853;
  bool D.256852;
  size_t i;
  bool iftmp.2069;
  bool retval.2068;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.256852 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256852;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.256853 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256853;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2069 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2069 = 0;

  <bb 7> :
  retval.2068 = iftmp.2069;
  if (retval.2068 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<cgraph_node*, Graph>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::remove (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8899, decl_uid=203247, cgraph_uid=5531, symbol_order=6317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9729, decl_uid=230291, cgraph_uid=6361, symbol_order=7147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<cgraph_node*>::remove (_1);
  _2 = &entry->m_value;
  Graph::~Graph (_2);
  return;

}



;; Function ggc_remove<cgraph_node*>::remove (_ZN10ggc_removeIP11cgraph_nodeE6removeERS1_, funcdef_no=10289, decl_uid=203117, cgraph_uid=6921, symbol_order=7711)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<cgraph_node*>::remove (struct cgraph_node * & D.242032)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_return_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6879, decl_uid=204419, cgraph_uid=3510, symbol_order=4284)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7924, decl_uid=189820, cgraph_uid=4556, symbol_order=5338)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256867;
  bool D.256866;
  size_t i;
  bool iftmp.2071;
  bool retval.2070;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.256866 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256866;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.256867 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256867;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2071 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2071 = 0;

  <bb 7> :
  retval.2070 = iftmp.2071;
  if (retval.2070 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_return_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8903, decl_uid=189594, cgraph_uid=5535, symbol_order=6321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9731, decl_uid=230301, cgraph_uid=6363, symbol_order=7149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_return_array::~function_return_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6882, decl_uid=204435, cgraph_uid=3513, symbol_order=4287)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7927, decl_uid=190981, cgraph_uid=4559, symbol_order=5341)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256881;
  bool D.256880;
  size_t i;
  bool iftmp.2073;
  bool retval.2072;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.256880 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256880;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.256881 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256881;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2073 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2073 = 0;

  <bb 7> :
  retval.2072 = iftmp.2073;
  if (retval.2072 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_assign_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8907, decl_uid=190755, cgraph_uid=5539, symbol_order=6325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9733, decl_uid=230311, cgraph_uid=6365, symbol_order=7151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_assign_array::~function_assign_array (_2);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::~hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6885, decl_uid=204451, cgraph_uid=3516, symbol_order=4290)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7930, decl_uid=194917, cgraph_uid=4562, symbol_order=5344)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256895;
  bool D.256894;
  size_t i;
  bool iftmp.2075;
  bool retval.2074;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.256894 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256894;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.256895 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256895;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2075 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2075 = 0;

  <bb 7> :
  retval.2074 = iftmp.2075;
  if (retval.2074 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8911, decl_uid=194694, cgraph_uid=5543, symbol_order=6329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9735, decl_uid=230321, cgraph_uid=6367, symbol_order=7153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::~hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6888, decl_uid=204467, cgraph_uid=3519, symbol_order=4293)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7933, decl_uid=193546, cgraph_uid=4565, symbol_order=5347)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256909;
  bool D.256908;
  size_t i;
  bool iftmp.2077;
  bool retval.2076;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.256908 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256908;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.256909 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256909;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2077 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2077 = 0;

  <bb 7> :
  retval.2076 = iftmp.2077;
  if (retval.2076 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8915, decl_uid=193320, cgraph_uid=5547, symbol_order=6333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9737, decl_uid=230331, cgraph_uid=6369, symbol_order=7155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::~hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6891, decl_uid=204483, cgraph_uid=3522, symbol_order=4296)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7936, decl_uid=194022, cgraph_uid=4568, symbol_order=5350)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256923;
  bool D.256922;
  size_t i;
  bool iftmp.2079;
  bool retval.2078;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.256922 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256922;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.256923 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256923;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2079 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2079 = 0;

  <bb 7> :
  retval.2078 = iftmp.2079;
  if (retval.2078 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8919, decl_uid=193796, cgraph_uid=5551, symbol_order=6337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9739, decl_uid=230341, cgraph_uid=6371, symbol_order=7157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6894, decl_uid=204499, cgraph_uid=3525, symbol_order=4299)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7939, decl_uid=192192, cgraph_uid=4571, symbol_order=5353)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256937;
  bool D.256936;
  size_t i;
  bool iftmp.2081;
  bool retval.2080;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.256936 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256936;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.256937 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256937;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2081 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2081 = 0;

  <bb 7> :
  retval.2080 = iftmp.2081;
  if (retval.2080 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_path_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8923, decl_uid=191966, cgraph_uid=5555, symbol_order=6341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9741, decl_uid=230351, cgraph_uid=6373, symbol_order=7159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_path_array::~function_path_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6897, decl_uid=204515, cgraph_uid=3528, symbol_order=4302)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7942, decl_uid=192674, cgraph_uid=4574, symbol_order=5356)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256951;
  bool D.256950;
  size_t i;
  bool iftmp.2083;
  bool retval.2082;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.256950 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256950;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.256951 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256951;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2083 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2083 = 0;

  <bb 7> :
  retval.2082 = iftmp.2083;
  if (retval.2082 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_free_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8927, decl_uid=192448, cgraph_uid=5559, symbol_order=6345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9743, decl_uid=230361, cgraph_uid=6375, symbol_order=7161)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_free_array::~function_free_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::~hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6900, decl_uid=204531, cgraph_uid=3531, symbol_order=4305)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7945, decl_uid=203851, cgraph_uid=4577, symbol_order=5359)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256965;
  bool D.256964;
  size_t i;
  bool iftmp.2085;
  bool retval.2084;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.256964 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256964;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.256965 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256965;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2085 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2085 = 0;

  <bb 7> :
  retval.2084 = iftmp.2085;
  if (retval.2084 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, function_graph_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8929, decl_uid=203804, cgraph_uid=5561, symbol_order=6347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.256968;
  bool D.256966;

  <bb 2> :
  D.256968 = hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (v);
  D.256966 = D.256968;

  <bb 3> :
<L0>:
  return D.256966;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9744, decl_uid=203637, cgraph_uid=6376, symbol_order=7162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.256969;

  <bb 2> :
  D.256969 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.256969;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10297, decl_uid=237352, cgraph_uid=6929, symbol_order=7719)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256971;

  <bb 2> :
  _1 = entry->m_key;
  D.256971 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.256971;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8930, decl_uid=203802, cgraph_uid=5562, symbol_order=6348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.256975;
  bool D.256973;

  <bb 2> :
  D.256975 = hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (v);
  D.256973 = D.256975;

  <bb 3> :
<L0>:
  return D.256973;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9745, decl_uid=203632, cgraph_uid=6377, symbol_order=7163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.256978;
  bool D.256976;

  <bb 2> :
  D.256978 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  D.256976 = D.256978;

  <bb 3> :
<L0>:
  return D.256976;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10298, decl_uid=237356, cgraph_uid=6930, symbol_order=7720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256979;

  <bb 2> :
  _1 = entry->m_key;
  D.256979 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.256979;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8931, decl_uid=203628, cgraph_uid=5563, symbol_order=6349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9746, decl_uid=230371, cgraph_uid=6378, symbol_order=7164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8932, decl_uid=216870, cgraph_uid=5564, symbol_order=6350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function std::__cxx11::basic_string<char>::~basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, funcdef_no=7276, decl_uid=126289, cgraph_uid=3908, symbol_order=4687)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::~basic_string (struct basic_string * const this)
{
  <bb 2> :
  std::__cxx11::basic_string<char>::_M_dispose (this);
  _1 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_1);
  *this = {CLOBBER};
  return;

}



;; Function Graph::~Graph (_ZN5GraphD2Ev, funcdef_no=6864, decl_uid=204330, cgraph_uid=3495, symbol_order=4269)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::~Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<int>::~vector (_ZNSt6vectorIiSaIiEED2Ev, funcdef_no=7904, decl_uid=167765, cgraph_uid=4536, symbol_order=5318)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167768;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = this->D.167768._M_impl.D.167081._M_start;
  std::_Destroy<int*, int> (_4, _3, _2);
  _5 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function breakpoint::~breakpoint (_ZN10breakpointD2Ev, funcdef_no=6848, decl_uid=202700, cgraph_uid=3479, symbol_order=4253)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::~breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::~basic_string (_1);
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function var_points_to::~var_points_to (_ZN13var_points_toD2Ev, funcdef_no=6841, decl_uid=202521, cgraph_uid=3472, symbol_order=4246)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::~var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EED2Ev, funcdef_no=7839, decl_uid=172414, cgraph_uid=4471, symbol_order=5253)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172417;
  _2 = std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_1);
  _3 = this->D.172417._M_impl.D.171762._M_finish;
  _4 = this->D.172417._M_impl.D.171762._M_start;
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_4, _3, _2);
  _5 = &this->D.172417;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv, funcdef_no=8804, decl_uid=171650, cgraph_uid=5436, symbol_order=6222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256982;

  <bb 2> :
  D.256982 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256982;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EES5_EvT_S7_RSaIT0_E, funcdef_no=8805, decl_uid=216095, cgraph_uid=5439, symbol_order=6225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __first, struct vector * __last, struct allocator & D.228352)
{
  <bb 2> :
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EEEvT_S7_, funcdef_no=9657, decl_uid=229249, cgraph_uid=6290, symbol_order=7076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt4pairI5fdecljESaIS5_EEEEvT_S9_, funcdef_no=10236, decl_uid=236926, cgraph_uid=6868, symbol_order=7658)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (__first);
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_1);
  __first = __first + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt11__addressofISt6vectorISt4pairI5fdecljESaIS3_EEEPT_RS6_, funcdef_no=10660, decl_uid=241521, cgraph_uid=7292, symbol_order=8082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector * std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (struct vector & __r)
{
  struct vector * D.256984;

  <bb 2> :
  D.256984 = __r;

  <bb 3> :
<L0>:
  return D.256984;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyISt6vectorISt4pairI5fdecljESaIS3_EEEvPT_, funcdef_no=10661, decl_uid=241523, cgraph_uid=7293, symbol_order=8083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __pointer)
{
  <bb 2> :
  std::vector<std::pair<fdecl, unsigned int> >::~vector (__pointer);
  return;

}



;; Function std::vector<std::pair<fdecl, unsigned int> >::~vector (_ZNSt6vectorISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=10840, decl_uid=216082, cgraph_uid=7472, symbol_order=8264)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::pair<fdecl, unsigned int> >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.216085;
  _2 = std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_1);
  _3 = this->D.216085._M_impl.D.215430._M_finish;
  _4 = this->D.216085._M_impl.D.215430._M_start;
  std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_4, _3, _2);
  _5 = &this->D.216085;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE19_M_get_Tp_allocatorEv, funcdef_no=10920, decl_uid=215318, cgraph_uid=7552, symbol_order=8344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256986;

  <bb 2> :
  D.256986 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256986;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_ZSt8_DestroyIPSt4pairI5fdecljES2_EvT_S4_RSaIT0_E, funcdef_no=10921, decl_uid=244793, cgraph_uid=7553, symbol_order=8345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (struct pair * __first, struct pair * __last, struct allocator & D.245173)
{
  <bb 2> :
  std::_Destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*> (_ZSt8_DestroyIPSt4pairI5fdecljEEvT_S4_, funcdef_no=10955, decl_uid=245175, cgraph_uid=7588, symbol_order=8380)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*> (struct pair * __first, struct pair * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairI5fdecljEEEvT_S6_, funcdef_no=10975, decl_uid=245658, cgraph_uid=7607, symbol_order=8399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (struct pair * D.245744, struct pair * D.245745)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=10918, decl_uid=215540, cgraph_uid=7550, symbol_order=8342)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.215430._M_end_of_storage;
  _2 = this->_M_impl.D.215430._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.215430._M_start;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE13_M_deallocateEPS2_m, funcdef_no=10954, decl_uid=215437, cgraph_uid=7586, symbol_order=8378)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (struct _Vector_base * const this, struct pair * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_ZNSt16allocator_traitsISaISt4pairI5fdecljEEE10deallocateERS3_PS2_m, funcdef_no=10974, decl_uid=215242, cgraph_uid=7606, symbol_order=8398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (struct allocator_type & __a, struct pair * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEE10deallocateEPS3_m, funcdef_no=10983, decl_uid=215093, cgraph_uid=7615, symbol_order=8407)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (struct new_allocator * const this, struct pair * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE12_Vector_implD2Ev, funcdef_no=10916, decl_uid=215477, cgraph_uid=7547, symbol_order=8339)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::pair<fdecl, unsigned int> >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::pair<fdecl, unsigned int> >::~allocator (_ZNSaISt4pairI5fdecljEED2Ev, funcdef_no=10952, decl_uid=215210, cgraph_uid=7584, symbol_order=8376)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::pair<fdecl, unsigned int> >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEED2Ev, funcdef_no=10972, decl_uid=215139, cgraph_uid=7604, symbol_order=8396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EED2Ev, funcdef_no=7836, decl_uid=171872, cgraph_uid=4468, symbol_order=5250)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.171762._M_end_of_storage;
  _2 = this->_M_impl.D.171762._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.171762._M_start;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE13_M_deallocateEPS5_m, funcdef_no=8803, decl_uid=171769, cgraph_uid=5435, symbol_order=6221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (struct _Vector_base * const this, struct vector * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_ZNSt16allocator_traitsISaISt6vectorISt4pairI5fdecljESaIS3_EEEE10deallocateERS6_PS5_m, funcdef_no=9656, decl_uid=171574, cgraph_uid=6288, symbol_order=7074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (struct allocator_type & __a, struct vector * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEE10deallocateEPS6_m, funcdef_no=10235, decl_uid=171425, cgraph_uid=6867, symbol_order=7657)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (struct new_allocator * const this, struct vector * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implD2Ev, funcdef_no=6832, decl_uid=171809, cgraph_uid=3460, symbol_order=4234)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEED2Ev, funcdef_no=7833, decl_uid=171542, cgraph_uid=4465, symbol_order=5247)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEED2Ev, funcdef_no=8801, decl_uid=171471, cgraph_uid=5433, symbol_order=6219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function insert_always_inline (_Z20insert_always_inlinev, funcdef_no=6902, decl_uid=204657, cgraph_uid=3534, symbol_order=4308)

Merging blocks 5 and 33
Removing basic block 24
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
;;
;; Loop 1
;;  header 33, latch 32
;;  depth 1, outer 0
;;  nodes: 33 32 31 5 4 3 30 29 28 6 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;;
;; Loop 2
;;  header 28, latch 27
;;  depth 2, outer 1
;;  nodes: 28 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;; 2 succs { 33 }
;; 3 succs { 35 4 }
;; 4 succs { 5 6 }
;; 5 succs { 32 }
;; 6 succs { 28 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 35 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 17 }
;; 15 succs { 35 16 }
;; 16 succs { 17 }
;; 17 succs { 35 18 }
;; 18 succs { 19 24 }
;; 19 succs { 35 20 }
;; 20 succs { 35 21 }
;; 21 succs { 35 22 }
;; 22 succs { 35 23 }
;; 23 succs { 35 27 }
;; 24 succs { 35 25 }
;; 25 succs { 35 26 }
;; 26 succs { 35 27 }
;; 27 succs { 28 }
;; 28 succs { 7 29 }
;; 29 succs { 35 30 }
;; 30 succs { 35 31 }
;; 31 succs { 32 }
;; 32 succs { 33 }
;; 33 succs { 3 34 }
;; 34 succs { 1 }
;; 35 succs { }
void insert_always_inline ()
{
  struct cgraph_node * D.257030;
  const char * D.257026;
  union tree_node * D.257025;
  union tree_node * D.257024;
  const char * D.257023;
  union tree_node * D.257022;
  union tree_node * D.257021;
  struct cgraph_node * D.257020;
  bool D.257019;
  struct cgraph_node * D.257018;
  union tree_node * callee_tree;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  availability avail;
  union tree_node * attr;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  bool always_inline;
  const char * name;
  struct cgraph_node * node;
  bool retval.2090;
  union tree_node * iftmp.2089;
  struct cgraph_node * iftmp.2088;
  bool retval.2087;

  <bb 2> :
  symtab.2086_1 = symtab;
  D.257018 = symbol_table::first_defined_function (symtab.2086_1);
  node = D.257018;
  goto <bb 33>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.257019 = gimple_has_body_p (_2);

  <bb 4> :
  _3 = D.257019;
  retval.2087 = ~_3;
  if (retval.2087 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by continue predictor.
  avail = {CLOBBER};
  goto <bb 32>; [INV]

  <bb 6> :
  e = node->callees;
  goto <bb 28>; [INV]

  <bb 7> :
  _4 = e->caller;
  _5 = _4->inlined_to;
  if (_5 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _6 = e->caller;
  iftmp.2088 = _6->inlined_to;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.2088 = e->caller;

  <bb 10> :
  caller = iftmp.2088;
  _7 = e->callee;
  D.257020 = cgraph_node::ultimate_alias_target (_7, &avail, caller);

  <bb 11> :
  callee = D.257020;
  if (callee != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _8 = callee->D.97512.decl;
  iftmp.2089 = _8->function_decl.function_specific_optimization;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2089 = 0B;

  <bb 14> :
  callee_tree = iftmp.2089;
  _9 = callee->D.97512.decl;
  _10 = _9->decl_common.attributes;
  if (_10 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _11 = callee->D.97512.decl;
  _12 = _11->decl_common.attributes;
  D.257021 = get_attribute_name (_12);

  <bb 16> :
  attr = D.257021;

  <bb 17> :
  _13 = callee->D.97512.decl;
  _14 = _13->decl_common.attributes;
  D.257022 = lookup_attribute ("noinline", _14);

  <bb 18> :
  _15 = D.257022;
  retval.2090 = _15 == 0B;
  if (retval.2090 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  _16 = callee->D.97512.decl;
  D.257023 = get_name (_16);

  <bb 20> :
  _17 = D.257023;
  stderr.2091_18 = stderr;
  fprintf (stderr.2091_18, "=======node_fun:%s=========\n", _17);

  <bb 21> :
  _19 = callee->D.97512.decl;
  _20 = _19->decl_common.attributes;
  D.257024 = get_identifier_with_length ("noinline", 8);

  <bb 22> :
  _21 = D.257024;
  _22 = callee->D.97512.decl;
  D.257025 = tree_cons (_21, 0B, _20);

  <bb 23> :
  _23 = D.257025;
  _22->decl_common.attributes = _23;
  _24 = callee->D.97512.decl;
  _24->function_decl.disregard_inline_limits = 1;
  _25 = callee->D.97512.decl;
  _26 = _25->decl_common.attributes;
  debug_tree (_26);
  goto <bb 27>; [INV]

  <bb 24> :
  _27 = callee->D.97512.decl;
  D.257026 = get_name (_27);

  <bb 25> :
  _28 = D.257026;
  stderr.2092_29 = stderr;
  fprintf (stderr.2092_29, "=======node_fun:%s=========\n", _28);

  <bb 26> :
  _30 = callee->D.97512.decl;
  _31 = _30->decl_common.attributes;
  debug_tree (_31);

  <bb 27> :
  e = e->next_callee;

  <bb 28> :
  if (e != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _32 = node->D.97512.decl;
  _33 = _32->function_decl.f;
  push_cfun (_33);

  <bb 30> :
  pop_cfun ();

  <bb 31> :
  avail = {CLOBBER};

  <bb 32> :
  symtab.2093_34 = symtab;
  D.257030 = symbol_table::next_defined_function (symtab.2093_34, node);
  node = D.257030;

  <bb 33> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  return;

  <bb 35> :
<L23>:
  avail = {CLOBBER};
  resx 1

}



;; Function lookup_attribute (_ZL16lookup_attributePKcP9tree_node, funcdef_no=3026, decl_uid=110094, cgraph_uid=2128, symbol_order=2293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * lookup_attribute (const char * attr_name, union tree_node * list)
{
  union tree_node * D.257035;
  size_t attr_len;
  union tree_node * D.257033;

  <bb 2> :
  if (list == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.257033 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  attr_len = strlen (attr_name);
  D.257035 = private_lookup_attribute (attr_name, attr_len, list);
  D.257033 = D.257035;

  <bb 5> :
<L2>:
  return D.257033;

}



;; Function test_always (_ZL11test_alwaysv, funcdef_no=6903, decl_uid=204715, cgraph_uid=3535, symbol_order=4314)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int test_always ()
{
  int D.257036;

  <bb 2> :
  insert_always_inline ();
  D.257036 = 0;

  <bb 3> :
<L0>:
  return D.257036;

}



;; Function make_pass_ipa_always (_Z20make_pass_ipa_alwaysPN3gcc7contextE, funcdef_no=6913, decl_uid=204786, cgraph_uid=3545, symbol_order=4324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_ipa_always (struct context * ctxt)
{
  void * D.257040;
  void * D.204788;
  struct ipa_opt_pass_d * D.257038;

  <bb 2> :
  D.257040 = operator new (160);
  D.204788 = D.257040;
  {anonymous}::pass_ipa_always::pass_ipa_always (D.204788, ctxt);

  <bb 3> :
  D.257038 = D.204788;

  <bb 4> :
<L0>:
  return D.257038;

  <bb 5> :
<L1>:
  operator delete (D.204788, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_always::pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysC2EPN3gcc7contextE, funcdef_no=6909, decl_uid=204746, cgraph_uid=3541, symbol_order=4320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::pass_ipa_always (struct pass_ipa_always * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.204749;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &inline_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.204749.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_always::execute (_ZN12_GLOBAL__N_115pass_ipa_always7executeEP8function, funcdef_no=6911, decl_uid=204726, cgraph_uid=3543, symbol_order=4322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_always::execute (struct pass_ipa_always * const this, struct function * D.204724)
{
  int D.257044;
  unsigned int D.257042;

  <bb 2> :
  D.257044 = test_always ();
  _1 = D.257044;
  D.257042 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.257042;

}



;; Function {anonymous}::pass_ipa_always::clone (_ZN12_GLOBAL__N_115pass_ipa_always5cloneEv, funcdef_no=6912, decl_uid=204729, cgraph_uid=3544, symbol_order=4323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_always * {anonymous}::pass_ipa_always::clone (struct pass_ipa_always * const this)
{
  struct pass_ipa_always * D.257045;

  <bb 2> :
  D.257045 = this;

  <bb 3> :
<L0>:
  return D.257045;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD0Ev, funcdef_no=10991, decl_uid=204734, cgraph_uid=7623, symbol_order=8417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_always::~pass_ipa_always (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD2Ev, funcdef_no=10989, decl_uid=204740, cgraph_uid=7621, symbol_order=8415)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.204749.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.204749;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD2Ev, funcdef_no=6906, decl_uid=88908, cgraph_uid=3537, symbol_order=4316)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  _1 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _1;
  _2 = &this->D.88937;
  opt_pass::~opt_pass (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD0Ev, funcdef_no=6908, decl_uid=88902, cgraph_uid=3539, symbol_order=4318)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  ipa_opt_pass_d::~ipa_opt_pass_d (this);
  operator delete (this, 160);
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD2Ev, funcdef_no=1884, decl_uid=88726, cgraph_uid=1023, symbol_order=1183)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  _1 = &_ZTV8opt_pass + 16;
  this->_vptr.opt_pass = _1;
  *this = {CLOBBER};
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD0Ev, funcdef_no=1886, decl_uid=88720, cgraph_uid=1025, symbol_order=1185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  opt_pass::~opt_pass (this);
  operator delete (this, 88);
  return;

}



;; Function ipa_opt_pass_d::ipa_opt_pass_d (_ZN14ipa_opt_pass_dC2ERK9pass_dataPN3gcc7contextEPFvvES7_S7_S7_S7_PFvP11cgraph_nodePP6gimpleEjPFjS9_EPFvP12varpool_nodeE, funcdef_no=1894, decl_uid=88924, cgraph_uid=1033, symbol_order=1193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::ipa_opt_pass_d (struct ipa_opt_pass_d * const this, const struct pass_data & data, struct context * ctxt, void (*<T6a3>) (void) generate_summary, void (*<T6a3>) (void) write_summary, void (*<T6a3>) (void) read_summary, void (*<T6a3>) (void) write_optimization_summary, void (*<T6a3>) (void) read_optimization_summary, void (*<T57cc>) (struct cgraph_node *, struct gimple * *) stmt_fixup, unsigned int function_transform_todo_flags_start, unsigned int (*<T57ce>) (struct cgraph_node *) function_transform, void (*<T57d1>) (struct varpool_node *) variable_transform)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.88937;
  opt_pass::opt_pass (_1, data, ctxt);
  _2 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _2;
  this->generate_summary = generate_summary;
  this->write_summary = write_summary;
  this->read_summary = read_summary;
  this->write_optimization_summary = write_optimization_summary;
  this->read_optimization_summary = read_optimization_summary;
  this->stmt_fixup = stmt_fixup;
  this->function_transform_todo_flags_start = function_transform_todo_flags_start;
  this->function_transform = function_transform;
  this->variable_transform = variable_transform;
  return;

}



;; Function execute_detect (_ZL14execute_detectv, funcdef_no=6914, decl_uid=204807, cgraph_uid=3546, symbol_order=4325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int execute_detect ()
{
  int D.257047;

  <bb 2> :
  detect ();
  D.257047 = 0;

  <bb 3> :
<L0>:
  return D.257047;

}



;; Function make_pass_detect (_Z16make_pass_detectPN3gcc7contextE, funcdef_no=6920, decl_uid=89596, cgraph_uid=3552, symbol_order=4331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_detect (struct context * ctxt)
{
  void * D.257051;
  void * D.204852;
  struct ipa_opt_pass_d * D.257049;

  <bb 2> :
  D.257051 = operator new (160);
  D.204852 = D.257051;
  {anonymous}::pass_ipa_detect::pass_ipa_detect (D.204852, ctxt);

  <bb 3> :
  D.257049 = D.204852;

  <bb 4> :
<L0>:
  return D.257049;

  <bb 5> :
<L1>:
  operator delete (D.204852, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_detect::pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectC2EPN3gcc7contextE, funcdef_no=6916, decl_uid=204837, cgraph_uid=3548, symbol_order=4327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::pass_ipa_detect (struct pass_ipa_detect * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.204840;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &detect_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.204840.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_detect::execute (_ZN12_GLOBAL__N_115pass_ipa_detect7executeEP8function, funcdef_no=6918, decl_uid=204817, cgraph_uid=3550, symbol_order=4329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_detect::execute (struct pass_ipa_detect * const this, struct function * D.204815)
{
  int D.257055;
  unsigned int D.257053;

  <bb 2> :
  D.257055 = execute_detect ();
  _1 = D.257055;
  D.257053 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.257053;

}



;; Function {anonymous}::pass_ipa_detect::clone (_ZN12_GLOBAL__N_115pass_ipa_detect5cloneEv, funcdef_no=6919, decl_uid=204820, cgraph_uid=3551, symbol_order=4330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_detect * {anonymous}::pass_ipa_detect::clone (struct pass_ipa_detect * const this)
{
  struct pass_ipa_detect * D.257056;

  <bb 2> :
  D.257056 = this;

  <bb 3> :
<L0>:
  return D.257056;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD0Ev, funcdef_no=10987, decl_uid=204825, cgraph_uid=7619, symbol_order=8412)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_detect::~pass_ipa_detect (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD2Ev, funcdef_no=10985, decl_uid=204831, cgraph_uid=7617, symbol_order=8410)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.204840.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.204840;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function plugin_init (plugin_init, funcdef_no=6921, decl_uid=83835, cgraph_uid=3553, symbol_order=4332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int plugin_init (struct plugin_name_args * plugin_info, struct plugin_gcc_version * version)
{
  struct ipa_opt_pass_d * D.257065;
  struct ipa_opt_pass_d * D.257064;
  bool D.257063;
  int D.257061;
  bool retval.2094;

  <bb 2> :
  D.257063 = plugin_default_version_check (version, &gcc_version);
  _1 = D.257063;
  retval.2094 = ~_1;
  if (retval.2094 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_puts (&"incompatible gcc/plugin versions"[0]);
  D.257061 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = version->devphase;
  _3 = version->basever;
  _4 = plugin_info->full_name;
  stderr.2095_5 = stderr;
  fprintf (stderr.2095_5, "%s %s %s\n", _4, _3, _2);
  g.2096_6 = g;
  D.257064 = make_pass_ipa_always (g.2096_6);
  _7 = D.257064;
  inline_passinfo.pass = _7;
  inline_passinfo.reference_pass_name = "einline";
  inline_passinfo.ref_pass_instance_number = 0;
  inline_passinfo.pos_op = 1;
  g.2097_8 = g;
  D.257065 = make_pass_detect (g.2097_8);
  _9 = D.257065;
  detect_passinfo.pass = _9;
  detect_passinfo.reference_pass_name = "pta";
  detect_passinfo.ref_pass_instance_number = 0;
  detect_passinfo.pos_op = 0;
  register_callback ("static_analyzer", 2, 0B, &detect_passinfo);
  D.257061 = 0;

  <bb 5> :
<L2>:
  return D.257061;

}



;; Function __static_initialization_and_destruction_0 (_Z41__static_initialization_and_destruction_0ii, funcdef_no=11004, decl_uid=245812, cgraph_uid=7642, symbol_order=8481)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void __static_initialization_and_destruction_0 (int __initialize_p, int __priority)
{
  <bb 2> :
  if (__initialize_p == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__priority == 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::ios_base::Init::Init (&__ioinit);
  __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
  std::basic_ofstream<char>::basic_ofstream (&cfginfo, "cfginfo.txt", 16);
  __cxxabiv1::__cxa_atexit (__dt_comp , &cfginfo, &__dso_handle);
  ptb::ptb (&start1);
  ptb::ptb (&start2);
  ptb::ptb (&start3);
  ptb::ptb (&start4);
  ptb::ptb (&start5);
  ptb::ptb (&start6);
  ptb::ptb (&start7);
  ptb::ptb (&start8);
  ptb::ptb (&start9);
  std::vector<gimple*>::vector (&new_gimple_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimple_array, &__dso_handle);
  std::vector<tree_node*>::vector (&new_gimpletree_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimpletree_array, &__dso_handle);
  std::vector<basic_block_def*>::vector (&new_path_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_path_array, &__dso_handle);
  std::vector<tree_node*>::vector (&traceStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &traceStack, &__dso_handle);
  std::vector<tree_node*>::vector (&pathStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &pathStack, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecution);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecution, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecutionswitch);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecutionswitch, &__dso_handle);
  std::vector<breakpoint>::vector (&vbreakpoint);
  __cxxabiv1::__cxa_atexit (__dt_comp , &vbreakpoint, &__dso_handle);
  std::vector<return_type>::vector (&global_ret_type_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &global_ret_type_array, &__dso_handle);
  CStack::CStack (&stmtStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack, &__dso_handle);
  CstmtStack::CstmtStack (&stmtStack2);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack2, &__dso_handle);

  <bb 5> :
  return;

}



;; Function CstmtStack::~CstmtStack (_ZN10CstmtStackD2Ev, funcdef_no=11009, decl_uid=245840, cgraph_uid=7640, symbol_order=8479)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::~CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183203;
  std::stack<gimple*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<gimple*>::~stack (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6233, decl_uid=186894, cgraph_uid=3208, symbol_order=3967)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::~deque (_ZNSt5dequeIP6gimpleSaIS1_EED2Ev, funcdef_no=7594, decl_uid=183023, cgraph_uid=4226, symbol_order=5008)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::~deque (struct deque * const this)
{
  struct iterator D.210341;
  struct iterator D.210342;

  <bb 2> :
  _1 = &this->D.183026;
  _2 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.210342 = std::deque<gimple*, std::allocator<gimple*> >::end (this); [return slot optimization]
  D.210341 = std::deque<gimple*, std::allocator<gimple*> >::begin (this); [return slot optimization]
  std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (this, &D.210341, &D.210342, _2);
  D.210341 = {CLOBBER};
  D.210342 = {CLOBBER};
  _3 = &this->D.183026;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8418, decl_uid=182265, cgraph_uid=5050, symbol_order=5836)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.257072;

  <bb 2> :
  D.257072 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257072;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::end (_ZNSt5dequeIP6gimpleSaIS1_EE3endEv, funcdef_no=8417, decl_uid=182609, cgraph_uid=5049, symbol_order=5835)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183026._M_impl.D.182420._M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2ERKS4_, funcdef_no=9186, decl_uid=182234, cgraph_uid=5818, symbol_order=6604)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::begin (_ZNSt5dequeIP6gimpleSaIS1_EE5beginEv, funcdef_no=8416, decl_uid=182605, cgraph_uid=5048, symbol_order=5834)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183026._M_impl.D.182420._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (_ZNSt5dequeIP6gimpleSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8419, decl_uid=182827, cgraph_uid=5051, symbol_order=5837)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.220781)
{
  struct iterator D.220785;
  struct iterator D.220788;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=8414, decl_uid=182475, cgraph_uid=5046, symbol_order=5832)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.182420._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.182420._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.182420._M_start._M_node;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.182420._M_map_size;
  _6 = this->_M_impl.D.182420._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9183, decl_uid=182290, cgraph_uid=5815, symbol_order=6601)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9899, decl_uid=182273, cgraph_uid=6531, symbol_order=7321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (struct _Deque_base * const this, struct gimple * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::__deque_buf_size (_ZSt16__deque_buf_sizem, funcdef_no=5338, decl_uid=156256, cgraph_uid=2732, symbol_order=2922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
size_t std::__deque_buf_size (size_t __size)
{
  size_t iftmp.2098;
  size_t D.257086;

  <bb 2> :
  if (__size <= 511)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.2098 = 512 / __size;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2098 = 1;

  <bb 5> :
  D.257086 = iftmp.2098;

  <bb 6> :
<L3>:
  return D.257086;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9184, decl_uid=182279, cgraph_uid=5816, symbol_order=6602)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (struct _Deque_base * const this, struct gimple * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<gimple**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9900, decl_uid=182269, cgraph_uid=6532, symbol_order=7322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (this);
  std::allocator<gimple**>::allocator<gimple*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10424, decl_uid=182267, cgraph_uid=7056, symbol_order=7846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.257094;

  <bb 2> :
  D.257094 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257094;

}



;; Function std::allocator<gimple**>::allocator<gimple*> (_ZNSaIPP6gimpleEC2IS0_EERKSaIT_E, funcdef_no=10426, decl_uid=239334, cgraph_uid=7058, symbol_order=7848)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::allocator<gimple*> (struct allocator * const this, const struct allocator & D.239336)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleEC2Ev, funcdef_no=10768, decl_uid=181935, cgraph_uid=7400, symbol_order=8192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple**> >::deallocate (_ZNSt16allocator_traitsISaIPP6gimpleEE10deallocateERS3_PS2_m, funcdef_no=9904, decl_uid=231771, cgraph_uid=6536, symbol_order=7326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple**> >::deallocate (struct allocator_type & __a, struct gimple * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE10deallocateEPS3_m, funcdef_no=10431, decl_uid=181894, cgraph_uid=7063, symbol_order=7853)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::deallocate (struct new_allocator * const this, struct gimple * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<gimple**>::~allocator (_ZNSaIPP6gimpleED2Ev, funcdef_no=9902, decl_uid=182011, cgraph_uid=6534, symbol_order=7324)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleED2Ev, funcdef_no=10429, decl_uid=181940, cgraph_uid=7061, symbol_order=7851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implD2Ev, funcdef_no=8409, decl_uid=182907, cgraph_uid=5040, symbol_order=5826)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<gimple*>::~allocator (_ZNSaIP6gimpleED2Ev, funcdef_no=7537, decl_uid=181738, cgraph_uid=4169, symbol_order=4951)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleED2Ev, funcdef_no=8351, decl_uid=181667, cgraph_uid=4983, symbol_order=5769)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function CStack::~CStack (_ZN6CStackD2Ev, funcdef_no=11006, decl_uid=245824, cgraph_uid=7637, symbol_order=8476)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::~CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181557;
  std::stack<tree_node*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<tree_node*>::~stack (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6226, decl_uid=186688, cgraph_uid=3201, symbol_order=3959)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_ZNSt5dequeIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7585, decl_uid=181361, cgraph_uid=4217, symbol_order=4999)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::~deque (struct deque * const this)
{
  struct iterator D.210317;
  struct iterator D.210318;

  <bb 2> :
  _1 = &this->D.181364;
  _2 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.210318 = std::deque<tree_node*, std::allocator<tree_node*> >::end (this); [return slot optimization]
  D.210317 = std::deque<tree_node*, std::allocator<tree_node*> >::begin (this); [return slot optimization]
  std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (this, &D.210317, &D.210318, _2);
  D.210317 = {CLOBBER};
  D.210318 = {CLOBBER};
  _3 = &this->D.181364;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8405, decl_uid=180570, cgraph_uid=5037, symbol_order=5823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.257099;

  <bb 2> :
  D.257099 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257099;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::end (_ZNSt5dequeIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8404, decl_uid=180918, cgraph_uid=5036, symbol_order=5822)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181364._M_impl.D.180725._M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2ERKS4_, funcdef_no=9176, decl_uid=180539, cgraph_uid=5808, symbol_order=6594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::begin (_ZNSt5dequeIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=8403, decl_uid=180914, cgraph_uid=5035, symbol_order=5821)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181364._M_impl.D.180725._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (_ZNSt5dequeIP9tree_nodeSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8406, decl_uid=181164, cgraph_uid=5038, symbol_order=5824)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.220728)
{
  struct iterator D.220732;
  struct iterator D.220735;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=8401, decl_uid=180780, cgraph_uid=5033, symbol_order=5819)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.180725._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.180725._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.180725._M_start._M_node;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.180725._M_map_size;
  _6 = this->_M_impl.D.180725._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9173, decl_uid=180595, cgraph_uid=5805, symbol_order=6591)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9886, decl_uid=180578, cgraph_uid=6518, symbol_order=7308)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (struct _Deque_base * const this, union tree_node * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9174, decl_uid=180584, cgraph_uid=5806, symbol_order=6592)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (struct _Deque_base * const this, union tree_node * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<tree_node**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9887, decl_uid=180574, cgraph_uid=6519, symbol_order=7309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (this);
  std::allocator<tree_node**>::allocator<tree_node*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10410, decl_uid=180572, cgraph_uid=7042, symbol_order=7832)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.257115;

  <bb 2> :
  D.257115 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257115;

}



;; Function std::allocator<tree_node**>::allocator<tree_node*> (_ZNSaIPP9tree_nodeEC2IS0_EERKSaIT_E, funcdef_no=10412, decl_uid=239287, cgraph_uid=7044, symbol_order=7834)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::allocator<tree_node*> (struct allocator * const this, const struct allocator & D.239289)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeEC2Ev, funcdef_no=10763, decl_uid=180222, cgraph_uid=7395, symbol_order=8187)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::deallocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE10deallocateERS3_PS2_m, funcdef_no=9891, decl_uid=231646, cgraph_uid=6523, symbol_order=7313)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node**> >::deallocate (struct allocator_type & __a, union tree_node * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE10deallocateEPS3_m, funcdef_no=10417, decl_uid=180181, cgraph_uid=7049, symbol_order=7839)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::deallocate (struct new_allocator * const this, union tree_node * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<tree_node**>::~allocator (_ZNSaIPP9tree_nodeED2Ev, funcdef_no=9889, decl_uid=180298, cgraph_uid=6521, symbol_order=7311)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeED2Ev, funcdef_no=10415, decl_uid=180227, cgraph_uid=7047, symbol_order=7837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implD2Ev, funcdef_no=8396, decl_uid=181245, cgraph_uid=5027, symbol_order=5813)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<tree_node*>::~allocator (_ZNSaIP9tree_nodeED2Ev, funcdef_no=7546, decl_uid=180025, cgraph_uid=4178, symbol_order=4960)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeED2Ev, funcdef_no=8361, decl_uid=179954, cgraph_uid=4993, symbol_order=5779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::~vector (_ZNSt6vectorI10breakpointSaIS0_EED2Ev, funcdef_no=11018, decl_uid=186220, cgraph_uid=7650, symbol_order=8847)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186223;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  _3 = this->D.186223._M_impl.D.185568._M_finish;
  _4 = this->D.186223._M_impl.D.185568._M_start;
  std::_Destroy<breakpoint*, breakpoint> (_4, _3, _2);
  _5 = &this->D.186223;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EED2Ev, funcdef_no=7567, decl_uid=185678, cgraph_uid=4199, symbol_order=4981)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.185568._M_end_of_storage;
  _2 = this->_M_impl.D.185568._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.185568._M_start;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implD2Ev, funcdef_no=6207, decl_uid=185615, cgraph_uid=3181, symbol_order=3937)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<breakpoint>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<breakpoint>::~allocator (_ZNSaI10breakpointED2Ev, funcdef_no=7564, decl_uid=185348, cgraph_uid=4196, symbol_order=4978)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointED2Ev, funcdef_no=8381, decl_uid=185277, cgraph_uid=5013, symbol_order=5799)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<tree_node*>::~vector (_ZNSt6vectorIP9tree_nodeSaIS1_EED2Ev, funcdef_no=11015, decl_uid=184882, cgraph_uid=7647, symbol_order=8844)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184885;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.184885._M_impl.D.184241._M_finish;
  _4 = this->D.184885._M_impl.D.184241._M_start;
  std::_Destroy<tree_node**, tree_node*> (_4, _3, _2);
  _5 = &this->D.184885;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<tree_node**, tree_node*> (_ZSt8_DestroyIPP9tree_nodeS1_EvT_S3_RSaIT0_E, funcdef_no=9370, decl_uid=222791, cgraph_uid=6002, symbol_order=6788)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**, tree_node*> (union tree_node * * __first, union tree_node * * __last, struct allocator & D.234054)
{
  <bb 2> :
  std::_Destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy<tree_node**> (_ZSt8_DestroyIPP9tree_nodeEvT_S3_, funcdef_no=10031, decl_uid=234056, cgraph_uid=6663, symbol_order=7453)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**> (union tree_node * * __first, union tree_node * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<tree_node**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP9tree_nodeEEvT_S5_, funcdef_no=10541, decl_uid=239952, cgraph_uid=7173, symbol_order=7963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<tree_node**> (union tree_node * * D.243327, union tree_node * * D.243328)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7549, decl_uid=184351, cgraph_uid=4181, symbol_order=4963)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.184241._M_end_of_storage;
  _2 = this->_M_impl.D.184241._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.184241._M_start;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implD2Ev, funcdef_no=6187, decl_uid=184288, cgraph_uid=3161, symbol_order=3911)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::~vector (_ZNSt6vectorIP6gimpleSaIS1_EED2Ev, funcdef_no=11012, decl_uid=183968, cgraph_uid=7644, symbol_order=8841)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.183971;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.183971._M_impl.D.183327._M_finish;
  _4 = this->D.183971._M_impl.D.183327._M_start;
  std::_Destroy<gimple**, gimple*> (_4, _3, _2);
  _5 = &this->D.183971;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<gimple**, gimple*> (_ZSt8_DestroyIPP6gimpleS1_EvT_S3_RSaIT0_E, funcdef_no=9546, decl_uid=227071, cgraph_uid=6178, symbol_order=6964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**, gimple*> (struct gimple * * __first, struct gimple * * __last, struct allocator & D.235428)
{
  <bb 2> :
  std::_Destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy<gimple**> (_ZSt8_DestroyIPP6gimpleEvT_S3_, funcdef_no=10142, decl_uid=235430, cgraph_uid=6774, symbol_order=7564)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**> (struct gimple * * __first, struct gimple * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<gimple**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP6gimpleEEvT_S5_, funcdef_no=10603, decl_uid=240390, cgraph_uid=7235, symbol_order=8025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<gimple**> (struct gimple * * D.243600, struct gimple * * D.243601)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=7540, decl_uid=183437, cgraph_uid=4172, symbol_order=4954)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.183327._M_end_of_storage;
  _2 = this->_M_impl.D.183327._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.183327._M_start;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implD2Ev, funcdef_no=6177, decl_uid=183374, cgraph_uid=3151, symbol_order=3900)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::vector (_ZNSt6vectorIP6gimpleSaIS1_EEC2Ev, funcdef_no=6181, decl_uid=183963, cgraph_uid=3157, symbol_order=3906)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.183971;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=6179, decl_uid=183432, cgraph_uid=3154, symbol_order=3903)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implC2Ev, funcdef_no=7534, decl_uid=183324, cgraph_uid=4166, symbol_order=4948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.183327;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<gimple*>::allocator (_ZNSaIP6gimpleEC2Ev, funcdef_no=8345, decl_uid=181733, cgraph_uid=4977, symbol_order=5763)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleEC2Ev, funcdef_no=9150, decl_uid=181662, cgraph_uid=5782, symbol_order=6568)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8348, decl_uid=183274, cgraph_uid=4980, symbol_order=5766)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<tree_node*>::vector (_ZNSt6vectorIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6191, decl_uid=184877, cgraph_uid=3167, symbol_order=3917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184885;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6189, decl_uid=184346, cgraph_uid=3164, symbol_order=3914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implC2Ev, funcdef_no=7543, decl_uid=184238, cgraph_uid=4175, symbol_order=4957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.184241;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<tree_node*>::allocator (_ZNSaIP9tree_nodeEC2Ev, funcdef_no=8355, decl_uid=180020, cgraph_uid=4987, symbol_order=5773)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeEC2Ev, funcdef_no=9154, decl_uid=179949, cgraph_uid=5786, symbol_order=6572)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8358, decl_uid=184188, cgraph_uid=4990, symbol_order=5776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<breakpoint>::vector (_ZNSt6vectorI10breakpointSaIS0_EEC2Ev, funcdef_no=6211, decl_uid=186215, cgraph_uid=3187, symbol_order=3943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186223;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EEC2Ev, funcdef_no=6209, decl_uid=185673, cgraph_uid=3184, symbol_order=3940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implC2Ev, funcdef_no=7561, decl_uid=185565, cgraph_uid=4193, symbol_order=4975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<breakpoint>::allocator (this);
  _1 = &this->D.185568;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<breakpoint>::allocator (_ZNSaI10breakpointEC2Ev, funcdef_no=8375, decl_uid=185343, cgraph_uid=5007, symbol_order=5793)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointEC2Ev, funcdef_no=9162, decl_uid=185272, cgraph_uid=5794, symbol_order=6580)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI10breakpointSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8378, decl_uid=185515, cgraph_uid=5010, symbol_order=5796)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function CStack::CStack (_ZN6CStackC2Ev, funcdef_no=6228, decl_uid=186695, cgraph_uid=3204, symbol_order=3962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181557;
  std::stack<tree_node*>::stack<> (_1);
  return;

}



;; Function std::stack<tree_node*>::stack<> (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7582, decl_uid=186680, cgraph_uid=4214, symbol_order=4996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::deque (_1);
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::deque (_ZNSt5dequeIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=7580, decl_uid=181356, cgraph_uid=4211, symbol_order=4993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181364;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=8398, decl_uid=180775, cgraph_uid=5030, symbol_order=5816)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implC2Ev, funcdef_no=9170, decl_uid=180722, cgraph_uid=5802, symbol_order=6588)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.180725;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9881, decl_uid=180650, cgraph_uid=6513, symbol_order=7303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2Ev, funcdef_no=10405, decl_uid=180552, cgraph_uid=7037, symbol_order=7827)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_initialize_mapEm, funcdef_no=9172, decl_uid=180588, cgraph_uid=5804, symbol_order=6590)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  union tree_node * * * D.257121;
  union tree_node * * * __nfinish;
  union tree_node * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.231604;
  const long unsigned int D.231605;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.231605 = _3;
  D.231604 = 8;
  _4 = std::max<long unsigned int> (&D.231604, &D.231605);
  _5 = *_4;
  this->_M_impl.D.180725._M_map_size = _5;
  D.231604 = {CLOBBER};
  D.231605 = {CLOBBER};
  _6 = this->_M_impl.D.180725._M_map_size;
  D.257121 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (this, _6);
  _7 = D.257121;
  this->_M_impl.D.180725._M_map = _7;
  _8 = this->_M_impl.D.180725._M_map;
  _9 = this->_M_impl.D.180725._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.180725._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.180725._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.180725._M_start._M_first;
  this->_M_impl.D.180725._M_start._M_cur = _20;
  _21 = this->_M_impl.D.180725._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.180725._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.180725._M_map_size;
  _16 = this->_M_impl.D.180725._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.180725._M_map = 0B;
  this->_M_impl.D.180725._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_allocate_mapEm, funcdef_no=9883, decl_uid=180581, cgraph_uid=6515, symbol_order=7305)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
union tree_node * * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  union tree_node * * * D.257127;
  struct _Map_alloc_type __map_alloc;
  union tree_node * * * D.257125;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  D.257127 = std::allocator_traits<std::allocator<tree_node**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.257125 = D.257127;

  <bb 4> :
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.257125;

  <bb 6> :
<L3>:
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::allocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE8allocateERS3_m, funcdef_no=10407, decl_uid=231639, cgraph_uid=7039, symbol_order=7829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * std::allocator_traits<std::allocator<tree_node**> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * * D.257134;
  union tree_node * * * D.257132;

  <bb 2> :
  D.257134 = __gnu_cxx::new_allocator<tree_node**>::allocate (__a, __n, 0B);
  D.257132 = D.257134;

  <bb 3> :
<L0>:
  return D.257132;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE8allocateEmPKv, funcdef_no=10760, decl_uid=180177, cgraph_uid=7393, symbol_order=8185)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * __gnu_cxx::new_allocator<tree_node**>::allocate (struct new_allocator * const this, size_type __n, const void * D.244310)
{
  union tree_node * * * D.257145;
  union tree_node * * * D.257144;
  align_val_t __al;
  union tree_node * * * D.257142;
  bool retval.2099;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2099 = _4 != 0;
  if (retval.2099 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.257145 = operator new (_6);
  D.257142 = D.257145;

  <bb 7> :
<L6>:
  return D.257142;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP9tree_nodeE11_M_max_sizeEv, funcdef_no=10761, decl_uid=180204, cgraph_uid=7392, symbol_order=8184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.257146;

  <bb 2> :
  D.257146 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.257146;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9884, decl_uid=180591, cgraph_uid=6516, symbol_order=7306)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * D.257148;
  union tree_node * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.257148 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.257148;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10408, decl_uid=180576, cgraph_uid=7040, symbol_order=7830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (struct _Deque_base * const this)
{
  union tree_node * * D.257154;
  union tree_node * * D.257152;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.257154 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_2, _1);
  D.257152 = D.257154;

  <bb 3> :
<L0>:
  return D.257152;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9885, decl_uid=180457, cgraph_uid=6517, symbol_order=7307)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (struct _Deque_iterator * const this, union tree_node * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10409, decl_uid=180389, cgraph_uid=7041, symbol_order=7831)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ()
{
  size_t D.257155;

  <bb 2> :
  D.257155 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.257155;

}



;; Function CstmtStack::CstmtStack (_ZN10CstmtStackC2Ev, funcdef_no=6235, decl_uid=186901, cgraph_uid=3211, symbol_order=3970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183203;
  std::stack<gimple*>::stack<> (_1);
  return;

}



;; Function std::stack<gimple*>::stack<> (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7591, decl_uid=186886, cgraph_uid=4223, symbol_order=5005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::deque (_1);
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::deque (_ZNSt5dequeIP6gimpleSaIS1_EEC2Ev, funcdef_no=7589, decl_uid=183018, cgraph_uid=4220, symbol_order=5002)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183026;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=8411, decl_uid=182470, cgraph_uid=5043, symbol_order=5829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implC2Ev, funcdef_no=9180, decl_uid=182417, cgraph_uid=5812, symbol_order=6598)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.182420;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9894, decl_uid=182345, cgraph_uid=6526, symbol_order=7316)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2Ev, funcdef_no=10419, decl_uid=182247, cgraph_uid=7051, symbol_order=7841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_initialize_mapEm, funcdef_no=9182, decl_uid=182283, cgraph_uid=5814, symbol_order=6600)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  struct gimple * * * D.257158;
  struct gimple * * * __nfinish;
  struct gimple * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.231729;
  const long unsigned int D.231730;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.231730 = _3;
  D.231729 = 8;
  _4 = std::max<long unsigned int> (&D.231729, &D.231730);
  _5 = *_4;
  this->_M_impl.D.182420._M_map_size = _5;
  D.231729 = {CLOBBER};
  D.231730 = {CLOBBER};
  _6 = this->_M_impl.D.182420._M_map_size;
  D.257158 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (this, _6);
  _7 = D.257158;
  this->_M_impl.D.182420._M_map = _7;
  _8 = this->_M_impl.D.182420._M_map;
  _9 = this->_M_impl.D.182420._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.182420._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.182420._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.182420._M_start._M_first;
  this->_M_impl.D.182420._M_start._M_cur = _20;
  _21 = this->_M_impl.D.182420._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.182420._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.182420._M_map_size;
  _16 = this->_M_impl.D.182420._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.182420._M_map = 0B;
  this->_M_impl.D.182420._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_allocate_mapEm, funcdef_no=9896, decl_uid=182276, cgraph_uid=6528, symbol_order=7318)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
struct gimple * * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  struct gimple * * * D.257164;
  struct _Map_alloc_type __map_alloc;
  struct gimple * * * D.257162;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  D.257164 = std::allocator_traits<std::allocator<gimple**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.257162 = D.257164;

  <bb 4> :
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.257162;

  <bb 6> :
<L3>:
  std::allocator<gimple**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<gimple**> >::allocate (_ZNSt16allocator_traitsISaIPP6gimpleEE8allocateERS3_m, funcdef_no=10421, decl_uid=231764, cgraph_uid=7053, symbol_order=7843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * std::allocator_traits<std::allocator<gimple**> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * * D.257171;
  struct gimple * * * D.257169;

  <bb 2> :
  D.257171 = __gnu_cxx::new_allocator<gimple**>::allocate (__a, __n, 0B);
  D.257169 = D.257171;

  <bb 3> :
<L0>:
  return D.257169;

}



;; Function __gnu_cxx::new_allocator<gimple**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE8allocateEmPKv, funcdef_no=10765, decl_uid=181890, cgraph_uid=7398, symbol_order=8190)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * __gnu_cxx::new_allocator<gimple**>::allocate (struct new_allocator * const this, size_type __n, const void * D.244320)
{
  struct gimple * * * D.257182;
  struct gimple * * * D.257181;
  align_val_t __al;
  struct gimple * * * D.257179;
  bool retval.2100;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2100 = _4 != 0;
  if (retval.2100 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.257182 = operator new (_6);
  D.257179 = D.257182;

  <bb 7> :
<L6>:
  return D.257179;

}



;; Function __gnu_cxx::new_allocator<gimple**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP6gimpleE11_M_max_sizeEv, funcdef_no=10766, decl_uid=181917, cgraph_uid=7397, symbol_order=8189)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.257183;

  <bb 2> :
  D.257183 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.257183;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9897, decl_uid=182286, cgraph_uid=6529, symbol_order=7319)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * D.257185;
  struct gimple * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.257185 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.257185;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10422, decl_uid=182271, cgraph_uid=7054, symbol_order=7844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (struct _Deque_base * const this)
{
  struct gimple * * D.257191;
  struct gimple * * D.257189;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.257191 = std::allocator_traits<std::allocator<gimple*> >::allocate (_2, _1);
  D.257189 = D.257191;

  <bb 3> :
<L0>:
  return D.257189;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9898, decl_uid=182166, cgraph_uid=6530, symbol_order=7320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (struct _Deque_iterator * const this, struct gimple * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10423, decl_uid=182100, cgraph_uid=7055, symbol_order=7845)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ()
{
  size_t D.257192;

  <bb 2> :
  D.257192 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.257192;

}



;; Function _GLOBAL__sub_I_gcc_plugin.c (_GLOBAL__sub_I_gcc_plugin.c, funcdef_no=11020, decl_uid=245871, cgraph_uid=7652, symbol_order=8849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void _GLOBAL__sub_I_gcc_plugin.c ()
{
  <bb 2> :
  __static_initialization_and_destruction_0 (1, 65535);
  return;

}


