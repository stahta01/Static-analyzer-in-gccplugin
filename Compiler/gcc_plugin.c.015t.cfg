
;; Function Graph::init_Graph (_ZN5Graph10init_GraphEi, funcdef_no=6157, decl_uid=167825, cgraph_uid=3146, symbol_order=3820)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
void Graph::init_Graph (struct Graph * const this, int V)
{
  void * D.248180;
  struct list * D.169016;
  size_t iftmp.2;
  long int D.168869;
  struct list * D.168868;
  struct list * D.168867;
  struct list * retval.1;
  sizetype D.248165;
  size_t iftmp.0;
  void * D.168866;

  <bb 2> :
  this->V = V;
  D.248165 = (sizetype) V;
  if (D.248165 <= 384307168202282325)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = D.248165 * 24;
  iftmp.0 = _1 + 8;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0 = 18446744073709551615;

  <bb 5> :
  D.248180 = operator new [] (iftmp.0);
  D.168866 = D.248180;
  MEM[(sizetype *)D.168866] = D.248165;
  D.168867 = D.168866 + 8;
  D.168868 = D.168867;
  _2 = D.248165 + 18446744073709551615;
  D.168869 = (long int) _2;
  goto <bb 7>; [INV]

  <bb 6> :
  std::__cxx11::list<int>::list (D.168868);
  D.168868 = D.168868 + 24;
  D.168869 = D.168869 + -1;

  <bb 7> :
  if (D.168869 >= 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  retval.1 = D.168867;
  _8 = D.168866 + 8;
  this->adj = _8;
  return;

}



;; Function std::__cxx11::list<int>::list (_ZNSt7__cxx114listIiSaIiEEC2Ev, funcdef_no=6166, decl_uid=168855, cgraph_uid=3141, symbol_order=3815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::list (struct list * const this)
{
  <bb 2> :
  _1 = &this->D.168863;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_ZNSt7__cxx1110_List_baseIiSaIiEEC2Ev, funcdef_no=6164, decl_uid=168329, cgraph_uid=3138, symbol_order=3812)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (struct _List_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2Ev, funcdef_no=7538, decl_uid=168118, cgraph_uid=4170, symbol_order=4962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (struct _List_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::_List_node<int> >::allocator (this);
  _1 = &this->_M_node;
  std::__detail::_List_node_header::_List_node_header (_1);
  return;

}



;; Function std::allocator<std::_List_node<int> >::allocator (_ZNSaISt10_List_nodeIiEEC2Ev, funcdef_no=8340, decl_uid=168025, cgraph_uid=4972, symbol_order=5768)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::_List_node<int> >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev, funcdef_no=9173, decl_uid=167954, cgraph_uid=5805, symbol_order=6601)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__detail::_List_node_header::_List_node_header (_ZNSt8__detail17_List_node_headerC2Ev, funcdef_no=4671, decl_uid=144698, cgraph_uid=2594, symbol_order=2784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_List_node_header (struct _List_node_header * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::__detail::_List_node_header::_M_init (this);
  return;

}



;; Function std::__detail::_List_node_header::_M_init (_ZNSt8__detail17_List_node_header7_M_initEv, funcdef_no=4677, decl_uid=144685, cgraph_uid=2600, symbol_order=2790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_M_init (struct _List_node_header * const this)
{
  <bb 2> :
  _1 = &this->D.144700;
  this->D.144700._M_prev = _1;
  _2 = this->D.144700._M_prev;
  this->D.144700._M_next = _2;
  this->_M_size = 0;
  return;

}



;; Function Graph::addEdge (_ZN5Graph7addEdgeEii, funcdef_no=6171, decl_uid=167830, cgraph_uid=3147, symbol_order=3821)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::addEdge (struct Graph * const this, int v, int w)
{
  <bb 2> :
  _1 = this->adj;
  _2 = (long unsigned int) v;
  _3 = _2 * 24;
  _4 = _1 + _3;
  std::__cxx11::list<int>::push_back (_4, &w);
  return;

}



;; Function std::__cxx11::list<int>::push_back (_ZNSt7__cxx114listIiSaIiEE9push_backERKi, funcdef_no=7546, decl_uid=168537, cgraph_uid=4178, symbol_order=4970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::push_back (struct list * const this, const value_type & __x)
{
  struct _List_iterator D.248182;

  <bb 2> :
  D.248182 = std::__cxx11::list<int>::end (this);
  std::__cxx11::list<int>::_M_insert<const int&> (this, D.248182, __x);
  return;

}



;; Function std::__cxx11::list<int>::end (_ZNSt7__cxx114listIiSaIiEE3endEv, funcdef_no=7551, decl_uid=168483, cgraph_uid=4183, symbol_order=4975)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::end (struct list * const this)
{
  struct iterator D.211041;
  struct iterator D.248183;

  <bb 2> :
  _1 = &this->D.168863._M_impl._M_node.D.144700;
  std::_List_iterator<int>::_List_iterator (&D.211041, _1);
  D.248183 = D.211041;
  D.211041 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248183;

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE, funcdef_no=8348, decl_uid=169080, cgraph_uid=4980, symbol_order=5776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this, struct _List_node_base * __x)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = __x;
  return;

}



;; Function std::__cxx11::list<int>::_M_insert<const int&> (_ZNSt7__cxx114listIiSaIiEE9_M_insertIJRKiEEEvSt14_List_iteratorIiEDpOT_, funcdef_no=8346, decl_uid=211031, cgraph_uid=4978, symbol_order=5774)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::_M_insert<const int&> (struct list * const this, struct iterator __position, const int & __args#0)
{
  struct _Node * D.248186;
  struct _Node * __tmp;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.248186 = std::__cxx11::list<int>::_M_create_node<const int&> (this, _1);
  __tmp = D.248186;
  _2 = &__tmp->D.211086;
  _3 = __position._M_node;
  std::__detail::_List_node_base::_M_hook (_2, _3);
  _4 = &this->D.168863;
  std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_4, 1);
  return;

}



;; Function std::forward<const int&> (_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=9178, decl_uid=221662, cgraph_uid=5810, symbol_order=6606)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const int & std::forward<const int&> (const type & __t)
{
  const int & D.248187;

  <bb 2> :
  D.248187 = __t;

  <bb 3> :
<L0>:
  return D.248187;

}



;; Function std::__cxx11::list<int>::_M_create_node<const int&> (_ZNSt7__cxx114listIiSaIiEE14_M_create_nodeIJRKiEEEPSt10_List_nodeIiEDpOT_, funcdef_no=9179, decl_uid=221664, cgraph_uid=5811, symbol_order=6607)

Merging blocks 3 and 4
Merging blocks 3 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct _Node * std::__cxx11::list<int>::_M_create_node<const int&> (struct list * const this, const int & __args#0)
{
  struct _List_node * D.248191;
  struct __allocated_ptr __guard;
  struct allocator & __alloc;
  struct _List_node * __p;
  struct _Node * D.248189;

  <bb 2> :
  _1 = &this->D.168863;
  D.248191 = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_1);

  <bb 3> :
  __p = D.248191;
  _2 = &this->D.168863;
  __alloc = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_2);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (&__guard, __alloc, __p);
  _3 = std::forward<const int&> (__args#0);
  _4 = std::_List_node<int>::_M_valptr (__p);
  std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (__alloc, _4, _3);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (&__guard, 0);
  D.248189 = __p;
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (&__guard);
  __guard = {CLOBBER};

  <bb 4> :
<L2>:
  return D.248189;

  <bb 5> :
<L3>:
  __guard = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_get_nodeEv, funcdef_no=9926, decl_uid=168231, cgraph_uid=6558, symbol_order=7358)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _List_node * std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (struct _List_base * const this)
{
  struct _List_node * D.248197;
  struct _List_node * D.248195;

  <bb 2> :
  _1 = &this->_M_impl;
  D.248197 = std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_1, 1);
  D.248195 = D.248197;

  <bb 3> :
<L0>:
  return D.248195;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE8allocateERS2_m, funcdef_no=10468, decl_uid=168159, cgraph_uid=7100, symbol_order=7900)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct _List_node * std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (struct allocator_type & __a, size_type __n)
{
  struct _List_node * D.248200;
  struct _List_node * D.248198;

  <bb 2> :
  D.248200 = __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (__a, __n, 0B);
  D.248198 = D.248200;

  <bb 3> :
<L0>:
  return D.248198;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8allocateEmPKv, funcdef_no=10833, decl_uid=167909, cgraph_uid=7466, symbol_order=8268)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct _List_node * __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (struct new_allocator * const this, size_type __n, const void * D.246514)
{
  struct _List_node * D.248211;
  struct _List_node * D.248210;
  align_val_t __al;
  struct _List_node * D.248208;
  bool retval.3;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.3 = _4 != 0;
  if (retval.3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248211 = operator new (_6);
  D.248208 = D.248211;

  <bb 7> :
<L6>:
  return D.248208;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIiEE11_M_max_sizeEv, funcdef_no=10834, decl_uid=167936, cgraph_uid=7465, symbol_order=8267)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248212;

  <bb 2> :
  D.248212 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248212;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv, funcdef_no=9175, decl_uid=168237, cgraph_uid=5807, symbol_order=6603)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Node_alloc_type & std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (struct _List_base * const this)
{
  struct _Node_alloc_type & D.248214;

  <bb 2> :
  D.248214 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248214;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEC2ERS2_PS1_, funcdef_no=9928, decl_uid=233596, cgraph_uid=6560, symbol_order=7360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (struct __allocated_ptr * const this, struct allocator & __a, struct _List_node * __ptr)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::__addressof<std::allocator<std::_List_node<int> > > (__a);
  this->_M_alloc = _1;
  this->_M_ptr = __ptr;
  return;

}



;; Function std::__addressof<std::allocator<std::_List_node<int> > > (_ZSt11__addressofISaISt10_List_nodeIiEEEPT_RS3_, funcdef_no=10469, decl_uid=241379, cgraph_uid=7101, symbol_order=7901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator * std::__addressof<std::allocator<std::_List_node<int> > > (struct allocator & __r)
{
  struct allocator * D.248216;

  <bb 2> :
  D.248216 = __r;

  <bb 3> :
<L0>:
  return D.248216;

}



;; Function std::_List_node<int>::_M_valptr (_ZNSt10_List_nodeIiE9_M_valptrEv, funcdef_no=8350, decl_uid=211082, cgraph_uid=4982, symbol_order=5778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::_List_node<int>::_M_valptr (struct _List_node * const this)
{
  int * D.248218;

  <bb 2> :
  _1 = &this->_M_storage;
  D.248218 = __gnu_cxx::__aligned_membuf<int>::_M_ptr (_1);

  <bb 3> :
<L0>:
  return D.248218;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_ptr (_ZN9__gnu_cxx16__aligned_membufIiE6_M_ptrEv, funcdef_no=9181, decl_uid=211064, cgraph_uid=5813, symbol_order=6609)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * __gnu_cxx::__aligned_membuf<int>::_M_ptr (struct __aligned_membuf * const this)
{
  int * D.248220;

  <bb 2> :
  D.248220 = __gnu_cxx::__aligned_membuf<int>::_M_addr (this);

  <bb 3> :
<L0>:
  return D.248220;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_addr (_ZN9__gnu_cxx16__aligned_membufIiE7_M_addrEv, funcdef_no=9935, decl_uid=211060, cgraph_uid=6567, symbol_order=7367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void * __gnu_cxx::__aligned_membuf<int>::_M_addr (struct __aligned_membuf * const this)
{
  void * D.248222;

  <bb 2> :
  D.248222 = &this->_M_storage;

  <bb 3> :
<L0>:
  return D.248222;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_, funcdef_no=9933, decl_uid=233618, cgraph_uid=6565, symbol_order=7365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=10470, decl_uid=241394, cgraph_uid=7102, symbol_order=7902)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.244958;
  void * D.244957;
  int D.244959;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.244959 = *_1;
  D.244957 = __p;
  D.244958 = operator new (4, D.244957);
  MEM[(int *)D.244958] = D.244959;
  return;

}



;; Function operator new (_ZnwmPv, funcdef_no=15, decl_uid=3700, cgraph_uid=16, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
void * operator new (size_t D.3698, void * __p)
{
  void * D.248224;

  <bb 2> :
  D.248224 = __p;

  <bb 3> :
<L0>:
  return D.248224;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEaSEDn, funcdef_no=9934, decl_uid=233569, cgraph_uid=6566, symbol_order=7366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __allocated_ptr & std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (struct __allocated_ptr * const this, <<< Unknown tree: nullptr_type >>> D.241398)
{
  struct __allocated_ptr & D.248226;

  <bb 2> :
  this->_M_ptr = 0B;
  D.248226 = this;

  <bb 3> :
<L0>:
  return D.248226;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEED2Ev, funcdef_no=9931, decl_uid=233603, cgraph_uid=6563, symbol_order=7363)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (struct __allocated_ptr * const this)
{
  <bb 2> :
  _1 = this->_M_ptr;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_ptr;
  _3 = this->_M_alloc;
  std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_3, _2, 1);

  <bb 4> :
  *this = {CLOBBER};
  return;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE10deallocateERS2_PS1_m, funcdef_no=9925, decl_uid=168166, cgraph_uid=6557, symbol_order=7357)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (struct allocator_type & __a, struct _List_node * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE10deallocateEPS2_m, funcdef_no=10467, decl_uid=167913, cgraph_uid=7099, symbol_order=7899)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (struct new_allocator * const this, struct _List_node * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_inc_sizeEm, funcdef_no=9180, decl_uid=168129, cgraph_uid=5812, symbol_order=6608)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (struct _List_base * const this, size_t __n)
{
  <bb 2> :
  _1 = this->_M_impl._M_node._M_size;
  _2 = __n + _1;
  this->_M_impl._M_node._M_size = _2;
  return;

}



;; Function Graph::DFSUtil (_ZN5Graph7DFSUtilEiPb, funcdef_no=6172, decl_uid=167821, cgraph_uid=3148, symbol_order=3822)

Merging blocks 13 and 19
Removing basic block 15
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;;
;; Loop 2
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11
;;
;; Loop 1
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 5 14 6 9 8 7 3 4
;; 2 succs { 16 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 15 }
;; 6 succs { 7 15 }
;; 7 succs { 19 8 }
;; 8 succs { 19 9 }
;; 9 succs { 10 14 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 11 13 }
;; 13 succs { 18 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 3 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { }
void Graph::DFSUtil (struct Graph * const this, int v, bool * visited)
{
  struct iterator i;
  struct iterator D.169123;
  bool retval.9;
  bool retval.8;
  bool retval.7;
  bool * visited.6;
  bool retval.5;
  bool retval.4;

  <bb 2> :
  _1 = (sizetype) v;
  _2 = visited + _1;
  *_2 = 1;
  std::_List_iterator<int>::_List_iterator (&i);
  _3 = this->adj;
  _4 = (long unsigned int) v;
  _5 = _4 * 24;
  _6 = _3 + _5;
  i = std::__cxx11::list<int>::begin (_6);
  goto <bb 16>; [INV]

  <bb 3> :
  _7 = std::_List_iterator<int>::operator* (&i);
  _8 = *_7;
  _9 = this->end;
  retval.4 = _8 == _9;
  if (retval.4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  this->succ = 1;

  <bb 5> :
  visited.6 = visited;
  _10 = std::_List_iterator<int>::operator* (&i);
  _11 = *_10;
  _12 = (sizetype) _11;
  _13 = visited.6 + _12;
  _14 = *_13;
  retval.5 = ~_14;
  if (retval.5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 6> :
  _15 = std::_List_iterator<int>::operator* (&i);
  _16 = *_15;
  retval.7 = v < _16;
  if (retval.7 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 7> :
  _17 = &this->stack;
  _18 = std::_List_iterator<int>::operator* (&i);
  std::vector<int>::push_back (_17, _18);

  <bb 8> :
  _19 = std::_List_iterator<int>::operator* (&i);
  _20 = *_19;
  Graph::DFSUtil (this, _20, visited);

  <bb 9> :
  _21 = this->succ;
  _22 = (int) _21;
  if (_22 == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  goto <bb 12>; [INV]

  <bb 11> :
  _23 = &this->stack;
  std::vector<int>::pop_back (_23);

  <bb 12> :
  _24 = &this->stack;
  _25 = std::vector<int>::size (_24);
  retval.8 = _25 != 0;
  if (retval.8 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  // predicted unlikely by early return (on trees) predictor.
  i = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 14> :
  _26 = &this->stack;
  std::vector<int>::pop_back (_26);

  <bb 15> :
  std::_List_iterator<int>::operator++ (&i);

  <bb 16> :
  _27 = this->adj;
  _28 = (long unsigned int) v;
  _29 = _28 * 24;
  _30 = _27 + _29;
  D.169123 = std::__cxx11::list<int>::end (_30);
  retval.9 = std::operator!= (&i, &D.169123);
  D.169123 = {CLOBBER};
  if (retval.9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  i = {CLOBBER};

  <bb 18> :
<L19>:
  return;

  <bb 19> :
<L20>:
  i = {CLOBBER};
  resx 1

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2Ev, funcdef_no=7548, decl_uid=169085, cgraph_uid=4180, symbol_order=4972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = 0B;
  return;

}



;; Function std::__cxx11::list<int>::begin (_ZNSt7__cxx114listIiSaIiEE5beginEv, funcdef_no=7550, decl_uid=168479, cgraph_uid=4182, symbol_order=4974)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::begin (struct list * const this)
{
  struct iterator D.211039;
  struct iterator D.248255;

  <bb 2> :
  _1 = this->D.168863._M_impl._M_node.D.144700._M_next;
  std::_List_iterator<int>::_List_iterator (&D.211039, _1);
  D.248255 = D.211039;
  D.211039 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248255;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backERKi, funcdef_no=7555, decl_uid=167466, cgraph_uid=4188, symbol_order=4980)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, const value_type & __x)
{
  struct __normal_iterator D.248261;

  <bb 2> :
  _1 = this->D.167814._M_impl.D.167127._M_finish;
  _2 = this->D.167814._M_impl.D.167127._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.167814._M_impl.D.167127._M_finish;
  _4 = &this->D.167814._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_4, _3, __x);
  _5 = this->D.167814._M_impl.D.167127._M_finish;
  _6 = _5 + 4;
  this->D.167814._M_impl.D.167127._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.248261 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<const int&> (this, D.248261, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_, funcdef_no=8351, decl_uid=211092, cgraph_uid=4983, symbol_order=5779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=9182, decl_uid=221676, cgraph_uid=5814, symbol_order=6610)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.233633;
  void * D.233632;
  int D.233634;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.233634 = *_1;
  D.233632 = __p;
  D.233633 = operator new (4, D.233632);
  MEM[(int *)D.233633] = D.233634;
  return;

}



;; Function std::vector<int>::end (_ZNSt6vectorIiSaIiEE3endEv, funcdef_no=8352, decl_uid=167399, cgraph_uid=4984, symbol_order=5780)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::end (struct vector * const this)
{
  struct iterator D.221699;
  struct iterator D.248262;

  <bb 2> :
  _1 = &this->D.167814._M_impl.D.167127._M_finish;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.221699, _1);
  D.248262 = D.221699;
  D.221699 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248262;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_, funcdef_no=9184, decl_uid=211339, cgraph_uid=5816, symbol_order=6612)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::_M_realloc_insert<const int&> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=8353, decl_uid=211358, cgraph_uid=4988, symbol_order=5784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<const int&> (struct vector * const this, struct iterator __position, const int & __args#0)
{
  int * D.248269;
  const size_type D.248268;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.221707;

  <bb 2> :
  D.248268 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.248268;
  __old_start = this->D.167814._M_impl.D.167127._M_start;
  __old_finish = this->D.167814._M_impl.D.167127._M_finish;
  D.221707 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.221707);
  __elems_before = (const size_type) _1;
  D.221707 = {CLOBBER};
  _2 = &this->D.167814;
  D.248269 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.248269;
  __new_finish = __new_start;
  _3 = std::forward<const int&> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167814._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167814;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167814;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167814;
  _23 = this->D.167814._M_impl.D.167127._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167814._M_impl.D.167127._M_start = __new_start;
  this->D.167814._M_impl.D.167127._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167814._M_impl.D.167127._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::_M_check_len (_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc, funcdef_no=9186, decl_uid=167661, cgraph_uid=5818, symbol_order=6614)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<int>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.12;
  size_type D.248273;
  const long unsigned int D.233643;
  bool retval.10;

  <bb 2> :
  _1 = std::vector<int>::max_size (this);
  _2 = std::vector<int>::size (this);
  _3 = _1 - _2;
  __n.11_4 = __n;
  retval.10 = _3 < __n.11_4;
  if (retval.10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<int>::size (this);
  _6 = std::vector<int>::size (this);
  D.233643 = _6;
  _7 = std::max<long unsigned int> (&D.233643, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.233643 = {CLOBBER};
  _9 = std::vector<int>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<int>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.12 = std::vector<int>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.12 = __len;

  <bb 8> :
  D.248273 = iftmp.12;

  <bb 9> :
<L6>:
  return D.248273;

}



;; Function std::max<long unsigned int> (_ZSt3maxImERKT_S2_S2_, funcdef_no=9937, decl_uid=156807, cgraph_uid=6569, symbol_order=7369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::max<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.248282;

  <bb 2> :
  _1 = *__a;
  _2 = *__b;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248282 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.248282 = __a;

  <bb 5> :
<L2>:
  return D.248282;

}



;; Function std::vector<int>::max_size (_ZNKSt6vectorIiSaIiEE8max_sizeEv, funcdef_no=9936, decl_uid=167421, cgraph_uid=6568, symbol_order=7368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::max_size (const struct vector * const this)
{
  size_type D.248284;

  <bb 2> :
  _1 = &this->D.167814;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  D.248284 = std::vector<int>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.248284;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=9774, decl_uid=167017, cgraph_uid=6406, symbol_order=7202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248286;

  <bb 2> :
  D.248286 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248286;

}



;; Function std::vector<int>::_S_max_size (_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_, funcdef_no=10471, decl_uid=167668, cgraph_uid=7103, symbol_order=7903)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.248288;

  <bb 2> :
  __diffmax = 2305843009213693951;
  _1 = std::allocator_traits<std::allocator<int> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.248288 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248288;

}



;; Function std::allocator_traits<std::allocator<int> >::max_size (_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_, funcdef_no=10835, decl_uid=166952, cgraph_uid=7467, symbol_order=8269)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<int> >::max_size (const struct allocator_type & __a)
{
  size_type D.248291;

  <bb 2> :
  D.248291 = __gnu_cxx::new_allocator<int>::max_size (__a);

  <bb 3> :
<L0>:
  return D.248291;

}



;; Function __gnu_cxx::new_allocator<int>::max_size (_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv, funcdef_no=10976, decl_uid=166794, cgraph_uid=7608, symbol_order=8410)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::max_size (const struct new_allocator * const this)
{
  size_type D.248293;

  <bb 2> :
  D.248293 = __gnu_cxx::new_allocator<int>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.248293;

}



;; Function __gnu_cxx::new_allocator<int>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv, funcdef_no=10473, decl_uid=166813, cgraph_uid=7104, symbol_order=7904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248295;

  <bb 2> :
  D.248295 = 2305843009213693951;

  <bb 3> :
<L0>:
  return D.248295;

}



;; Function std::min<long unsigned int> (_ZSt3minImERKT_S2_S2_, funcdef_no=10836, decl_uid=114557, cgraph_uid=7468, symbol_order=8270)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::min<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.248299;

  <bb 2> :
  _1 = *__b;
  _2 = *__a;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248299 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.248299 = __a;

  <bb 5> :
<L2>:
  return D.248299;

}



;; Function std::vector<int>::begin (_ZNSt6vectorIiSaIiEE5beginEv, funcdef_no=9187, decl_uid=167395, cgraph_uid=5819, symbol_order=6615)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::begin (struct vector * const this)
{
  struct iterator D.233645;
  struct iterator D.248301;

  <bb 2> :
  _1 = &this->D.167814._M_impl.D.167127._M_start;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.233645, _1);
  D.248301 = D.233645;
  D.233645 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248301;

}



;; Function __gnu_cxx::operator-<int*, std::vector<int> > (_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_, funcdef_no=9188, decl_uid=221708, cgraph_uid=5820, symbol_order=6616)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<int*, std::vector<int> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.248304;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.248304 = _5 /[ex] 4;

  <bb 3> :
<L0>:
  return D.248304;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_allocate (_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm, funcdef_no=9189, decl_uid=167131, cgraph_uid=5821, symbol_order=6617)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * std::_Vector_base<int, std::allocator<int> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  int * D.248312;
  int * iftmp.13;
  int * D.248306;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248312 = std::allocator_traits<std::allocator<int> >::allocate (_1, __n);
  iftmp.13 = D.248312;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.13 = 0B;

  <bb 5> :
  D.248306 = iftmp.13;

  <bb 6> :
<L3>:
  return D.248306;

}



;; Function std::allocator_traits<std::allocator<int> >::allocate (_ZNSt16allocator_traitsISaIiEE8allocateERS0_m, funcdef_no=9938, decl_uid=166932, cgraph_uid=6570, symbol_order=7370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int * std::allocator_traits<std::allocator<int> >::allocate (struct allocator_type & __a, size_type __n)
{
  int * D.248315;
  int * D.248313;

  <bb 2> :
  D.248315 = __gnu_cxx::new_allocator<int>::allocate (__a, __n, 0B);
  D.248313 = D.248315;

  <bb 3> :
<L0>:
  return D.248313;

}



;; Function __gnu_cxx::new_allocator<int>::allocate (_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv, funcdef_no=10472, decl_uid=166786, cgraph_uid=7105, symbol_order=7905)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
int * __gnu_cxx::new_allocator<int>::allocate (struct new_allocator * const this, size_type __n, const void * D.244965)
{
  int * D.248326;
  int * D.248325;
  align_val_t __al;
  int * D.248323;
  bool retval.14;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<int>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.14 = _4 != 0;
  if (retval.14 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 4611686018427387903)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 4;
  D.248326 = operator new (_6);
  D.248323 = D.248326;

  <bb 7> :
<L6>:
  return D.248323;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=8927, decl_uid=167015, cgraph_uid=5559, symbol_order=6355)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248327;

  <bb 2> :
  D.248327 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248327;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv, funcdef_no=9191, decl_uid=211326, cgraph_uid=5823, symbol_order=6619)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * const & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  int * const & D.248329;

  <bb 2> :
  D.248329 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248329;

}



;; Function std::vector<int>::_S_relocate (_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_, funcdef_no=9190, decl_uid=167289, cgraph_uid=5822, symbol_order=6618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.248332;
  int * D.248331;

  <bb 2> :
  D.248331 = std::vector<int>::_S_do_relocate (__first, __last, __result, __alloc, D.248332);

  <bb 3> :
<L0>:
  return D.248331;

}



;; Function std::vector<int>::_S_do_relocate (_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE, funcdef_no=9939, decl_uid=167277, cgraph_uid=6571, symbol_order=7371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_do_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc, struct true_type D.241415)
{
  int * D.248334;

  <bb 2> :
  D.248334 = std::__relocate_a<int*, int*, std::allocator<int> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.248334;

}



;; Function std::__relocate_a<int*, int*, std::allocator<int> > (_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_, funcdef_no=10474, decl_uid=221872, cgraph_uid=7106, symbol_order=7906)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__relocate_a<int*, int*, std::allocator<int> > (int * __first, int * __last, int * __result, struct allocator & __alloc)
{
  int * D.248336;

  <bb 2> :
  _1 = std::__niter_base<int*> (__result);
  _2 = std::__niter_base<int*> (__last);
  _3 = std::__niter_base<int*> (__first);
  D.248336 = std::__relocate_a_1<int, int> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.248336;

}



;; Function std::__niter_base<int*> (_ZSt12__niter_baseIPiET_S1_, funcdef_no=10775, decl_uid=221878, cgraph_uid=7407, symbol_order=8207)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*> (int * __it)
{
  int * D.248338;

  <bb 2> :
  D.248338 = __it;

  <bb 3> :
<L0>:
  return D.248338;

}



;; Function std::__relocate_a_1<int, int> (_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E, funcdef_no=10837, decl_uid=222046, cgraph_uid=7469, symbol_order=8271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__relocate_a_1<int, int> (int * __first, int * __last, int * __result, struct allocator & D.246531)
{
  ptrdiff_t __count;
  int * D.248343;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 4;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.15_2 = (long unsigned int) __count;
  _3 = __count.15_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.16_4 = (long unsigned int) __count;
  _5 = __count.16_4 * 4;
  D.248343 = __result + _5;

  <bb 5> :
<L3>:
  return D.248343;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim, funcdef_no=8926, decl_uid=167134, cgraph_uid=5558, symbol_order=6354)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_deallocate (struct _Vector_base * const this, int * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<int> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::deallocate (_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim, funcdef_no=9757, decl_uid=166939, cgraph_uid=6389, symbol_order=7185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::deallocate (struct allocator_type & __a, int * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::deallocate (_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim, funcdef_no=10325, decl_uid=166790, cgraph_uid=6957, symbol_order=7757)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<int>::deallocate (struct new_allocator * const this, int * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 4;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_List_iterator<int>::operator* (_ZNKSt14_List_iteratorIiEdeEv, funcdef_no=7554, decl_uid=169056, cgraph_uid=4186, symbol_order=4978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & std::_List_iterator<int>::operator* (const struct _List_iterator * const this)
{
  int & D.248351;

  <bb 2> :
  _1 = this->_M_node;
  D.248351 = std::_List_node<int>::_M_valptr (_1);

  <bb 3> :
<L0>:
  return D.248351;

}



;; Function std::vector<int>::size (_ZNKSt6vectorIiSaIiEE4sizeEv, funcdef_no=7557, decl_uid=167419, cgraph_uid=4189, symbol_order=4981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::size (const struct vector * const this)
{
  size_type D.248353;

  <bb 2> :
  _1 = this->D.167814._M_impl.D.167127._M_finish;
  _2 = this->D.167814._M_impl.D.167127._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.248353 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248353;

}



;; Function std::vector<int>::pop_back (_ZNSt6vectorIiSaIiEE8pop_backEv, funcdef_no=7558, decl_uid=167478, cgraph_uid=4190, symbol_order=4982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167814._M_impl.D.167127._M_finish;
  _2 = _1 + 18446744073709551612;
  this->D.167814._M_impl.D.167127._M_finish = _2;
  _3 = this->D.167814._M_impl.D.167127._M_finish;
  _4 = &this->D.167814._M_impl;
  std::allocator_traits<std::allocator<int> >::destroy<int> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::destroy<int> (_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_, funcdef_no=8357, decl_uid=211364, cgraph_uid=4989, symbol_order=5785)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::destroy<int> (struct allocator_type & __a, int * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::destroy<int> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::destroy<int> (_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_, funcdef_no=9192, decl_uid=222058, cgraph_uid=5824, symbol_order=6620)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::destroy<int> (struct new_allocator * const this, int * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::_List_iterator<int>::operator++ (_ZNSt14_List_iteratorIiEppEv, funcdef_no=7553, decl_uid=169060, cgraph_uid=4185, symbol_order=4977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Self & std::_List_iterator<int>::operator++ (struct _List_iterator * const this)
{
  struct _Self & D.248355;

  <bb 2> :
  _1 = this->_M_node;
  _2 = _1->_M_next;
  this->_M_node = _2;
  D.248355 = this;

  <bb 3> :
<L0>:
  return D.248355;

}



;; Function std::operator!= (_ZStneRKSt14_List_iteratorIiES2_, funcdef_no=7552, decl_uid=169073, cgraph_uid=4184, symbol_order=4976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct _Self & __x, const struct _Self & __y)
{
  bool D.248357;

  <bb 2> :
  _1 = __x->_M_node;
  _2 = __y->_M_node;
  D.248357 = _1 != _2;

  <bb 3> :
<L0>:
  return D.248357;

}



;; Function Graph::DFS (_ZN5Graph3DFSEi, funcdef_no=6173, decl_uid=167843, cgraph_uid=3149, symbol_order=3823)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void Graph::DFS (struct Graph * const this, int v)
{
  bool * D.248360;
  int i;
  bool * visited;
  sizetype D.248359;

  <bb 2> :
  _1 = this->V;
  D.248359 = (sizetype) _1;
  D.248360 = operator new [] (D.248359);
  visited = D.248360;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (sizetype) i;
  _3 = visited + _2;
  *_3 = 0;
  i = i + 1;

  <bb 4> :
  _4 = this->V;
  if (i < _4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Graph::DFSUtil (this, v, visited);
  return;

}



;; Function Graph::is_succ (_ZN5Graph7is_succEP15basic_block_defS1_, funcdef_no=6174, decl_uid=167839, cgraph_uid=3150, symbol_order=3824)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool Graph::is_succ (struct Graph * const this, struct basic_block_def * bb1, struct basic_block_def * bb2)
{
  bool D.248361;

  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::clear (_1);
  _2 = bb2->index;
  this->end = _2;
  this->succ = 0;
  _3 = &this->stack;
  _4 = &bb1->index;
  std::vector<int>::push_back (_3, _4);
  _5 = bb1->index;
  this->start = _5;
  _6 = bb1->index;
  Graph::DFS (this, _6);
  D.248361 = this->succ;

  <bb 3> :
<L0>:
  return D.248361;

}



;; Function std::vector<int>::clear (_ZNSt6vectorIiSaIiEE5clearEv, funcdef_no=7559, decl_uid=167521, cgraph_uid=4191, symbol_order=4983)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167814._M_impl.D.167127._M_start;
  std::vector<int>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<int>::_M_erase_at_end (_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi, funcdef_no=8358, decl_uid=167670, cgraph_uid=4990, symbol_order=5786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<int>::_M_erase_at_end (struct vector * const this, int * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.167814._M_impl.D.167127._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 4;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.167814;
  _5 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_4);
  _6 = this->D.167814._M_impl.D.167127._M_finish;
  std::_Destroy<int*, int> (__pos, _6, _5);
  this->D.167814._M_impl.D.167127._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Destroy<int*, int> (_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E, funcdef_no=8928, decl_uid=218064, cgraph_uid=5560, symbol_order=6356)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*, int> (int * __first, int * __last, struct allocator & D.232192)
{
  <bb 2> :
  std::_Destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy<int*> (_ZSt8_DestroyIPiEvT_S1_, funcdef_no=9758, decl_uid=232194, cgraph_uid=6390, symbol_order=7186)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*> (int * __first, int * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<int*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_, funcdef_no=10326, decl_uid=239248, cgraph_uid=6958, symbol_order=7758)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<int*> (int * D.243808, int * D.243809)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function Graph::exist_succ (_ZN5Graph10exist_succEP15basic_block_def, funcdef_no=6175, decl_uid=167834, cgraph_uid=3151, symbol_order=3825)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 }
;; 3 succs { 6 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool Graph::exist_succ (struct Graph * const this, struct basic_block_def * bb)
{
  struct iterator i;
  struct iterator D.169166;
  bool retval.17;
  bool D.248366;

  <bb 2> :
  std::_List_iterator<int>::_List_iterator (&i);
  _1 = this->adj;
  _2 = bb->index;
  _3 = (long unsigned int) _2;
  _4 = _3 * 24;
  _5 = _1 + _4;
  i = std::__cxx11::list<int>::begin (_5);
  goto <bb 4>; [INV]

  <bb 3> :
  D.248366 = 1;
  goto <bb 6>; [INV]

  <bb 4> :
  _6 = this->adj;
  _7 = bb->index;
  _8 = (long unsigned int) _7;
  _9 = _8 * 24;
  _10 = _6 + _9;
  D.169166 = std::__cxx11::list<int>::end (_10);
  retval.17 = std::operator!= (&i, &D.169166);
  D.169166 = {CLOBBER};
  if (retval.17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248366 = 0;

  <bb 6> :
  i = {CLOBBER};

  <bb 7> :
<L4>:
  return D.248366;

}



;; Function analyze_type (_Z12analyze_typeP9tree_node, funcdef_no=6243, decl_uid=187042, cgraph_uid=3219, symbol_order=3993)

Removing basic block 19
Removing basic block 20
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 6 11
;; 2 succs { 25 19 23 13 3 24 }
;; 3 succs { 4 5 }
;; 4 succs { 12 }
;; 5 succs { 10 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 6 12 }
;; 12 succs { 26 }
;; 13 succs { 14 15 }
;; 14 succs { 18 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 26 }
;; 19 succs { 20 21 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 26 }
;; 23 succs { 26 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 1 }
void analyze_type (union tree_node * tree_typed)
{
  unsigned int precision;
  union tree_node * type_name;
  union tree_node * args;
  const char * iftmp.18;

  <bb 2> :
  _1 = tree_typed->base.code;
  _2 = (int) _1;
  switch (_2) <default: <L27> [INV], case 8: <L19> [INV], case 16: <L25> [INV], case 17: <L11> [INV], case 21: <L0> [INV], case 36: <L26> [INV]>

  <bb 3> :
<L0>:
  printf ("receives ");
  args = tree_typed->type_non_common.values;
  if (args == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  printf ("nothing ");
  goto <bb 12>; [INV]

  <bb 5> :
  goto <bb 10>; [INV]

  <bb 6> :
  _3 = args->list.value;
  analyze_type (_3);
  _4 = args->common.chain;
  if (_4 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  printf ("and ");
  goto <bb 9>; [INV]

  <bb 8> :
  printf ("... ");

  <bb 9> :
  args = args->common.chain;

  <bb 10> :
  if (args != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _5 = args->list.value;
  _6 = global_trees[61];
  if (_5 != _6)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  printf ("then returns ");
  _7 = tree_typed->typed.type;
  analyze_type (_7);
  goto <bb 26>; [INV]

  <bb 13> :
<L11>:
  printf ("named ");
  type_name = tree_typed->type_common.name;
  _8 = type_name->base.code;
  if (_8 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _9 = type_name->identifier.id.str;
  printf ("%s ", _9);
  goto <bb 18>; [INV]

  <bb 15> :
  _10 = type_name->base.code;
  if (_10 == 39)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _11 = type_name->decl_minimal.name;
  _12 = _11->identifier.id.str;
  printf ("%s ", _12);
  goto <bb 18>; [INV]

  <bb 17> :
  printf ("**** UNRECOGNIZED TYPE NODE ****");

  <bb 18> :
  goto <bb 26>; [INV]

  <bb 19> :
<L19>:
  _16 = tree_typed->type_common.precision;
  precision = (unsigned int) _16;
  _17 = BIT_FIELD_REF <tree_typed->base.u.bits, 8, 8>;
  _18 = _17 & 1;
  if (_18 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  iftmp.18 = "unsigned";
  goto <bb 22>; [INV]

  <bb 21> :
  iftmp.18 = "signed";

  <bb 22> :
  printf ("%s integer of %d bits ", iftmp.18, precision);
  goto <bb 26>; [INV]

  <bb 23> :
<L25>:
  printf ("of ");
  _19 = tree_typed->typed.type;
  analyze_type (_19);
  goto <bb 26>; [INV]

  <bb 24> :
<L26>:
  printf ("oSDAAAAAf ");
  _20 = tree_typed->typed.type;
  analyze_type (_20);
  goto <bb 26>; [INV]

  <bb 25> :
<L27>:

  <bb 26> :
  return;

}



;; Function bb_in_loop_p (_Z12bb_in_loop_pP15basic_block_def, funcdef_no=6244, decl_uid=187185, cgraph_uid=3220, symbol_order=3994)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_loop_p (struct basic_block_def * bb)
{
  bool D.248388;

  <bb 2> :
  _1 = bb->loop_father;
  _2 = _1->header;
  _3 = _2->index;
  D.248388 = _3 != 0;

  <bb 3> :
<L0>:
  return D.248388;

}



;; Function bb_in_branch_p (_Z14bb_in_branch_pP6gimple, funcdef_no=6245, decl_uid=187188, cgraph_uid=3221, symbol_order=3995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_branch_p (struct gimple * stmt)
{
  bool D.248392;
  bool D.248390;

  <bb 2> :
  cfun.19_1 = cfun;
  _2 = cfun.19_1->cfg;
  _3 = _2->x_exit_block_ptr;
  _4 = _3->prev_bb;
  _5 = stmt->bb;
  D.248392 = dominated_by_p (1, _5, _4);
  _6 = D.248392;
  D.248390 = ~_6;

  <bb 3> :
<L0>:
  return D.248390;

}



;; Function init_table (_Z10init_tablev, funcdef_no=6246, decl_uid=187190, cgraph_uid=3222, symbol_order=3996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void init_table ()
{
  <bb 2> :
  start1.target = 0B;
  start1.next = 0B;
  POINTER_NOT_EXIST.20_1 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.21_2 = (int) POINTER_NOT_EXIST.20_1;
  start1.state = POINTER_NOT_EXIST.21_2;
  ptable = &start1;
  start2.target = 0B;
  start2.next = 0B;
  POINTER_NOT_EXIST.22_3 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.23_4 = (int) POINTER_NOT_EXIST.22_3;
  start2.state = POINTER_NOT_EXIST.23_4;
  ftable = &start2;
  return;

}



;; Function Location_b (_Z10Location_bP6gimpleS0_P15basic_block_def, funcdef_no=6247, decl_uid=187195, cgraph_uid=3223, symbol_order=3997)

Merging blocks 9 and 11
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 3
;; 2 succs { 8 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
bool Location_b (struct gimple * a, struct gimple * b, struct basic_block_def * bb)
{
  struct gimple_stmt_iterator gsi;
  struct gimple * gc;
  bool retval.24;
  bool D.248395;

  <bb 2> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 8>; [INV]

  <bb 3> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248395 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 5> :
  if (gc == b)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.248395 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  gsi_next (&gsi);

  <bb 8> :
  _1 = gsi_end_p (gsi);
  retval.24 = ~_1;
  if (retval.24 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  gsi = {CLOBBER};
  D.248395 = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  gsi = {CLOBBER};

  <bb 11> :
<L9>:
  return D.248395;

}



;; Function gsi_start_bb (_ZL12gsi_start_bbP15basic_block_def, funcdef_no=2478, decl_uid=94526, cgraph_uid=1615, symbol_order=1775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple_stmt_iterator gsi_start_bb (struct basic_block_def * bb)
{
  struct gimple * * seq;
  struct gimple_stmt_iterator i [value-expr: <retval>];

  <bb 2> :
  seq = bb_seq_addr (bb);
  _1 = *seq;
  _2 = gimple_seq_first (_1);
  <retval>.ptr = _2;
  <retval>.seq = seq;
  <retval>.bb = bb;

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function bb_seq_addr (_ZL11bb_seq_addrP15basic_block_def, funcdef_no=1994, decl_uid=92233, cgraph_uid=1131, symbol_order=1291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * bb_seq_addr (struct basic_block_def * bb)
{
  struct gimple * * iftmp.25;
  struct gimple * * D.248404;

  <bb 2> :
  _1 = bb->flags;
  _2 = _1 & 512;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.25 = &bb->il.gimple.seq;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.25 = 0B;

  <bb 5> :
  D.248404 = iftmp.25;

  <bb 6> :
<L3>:
  return D.248404;

}



;; Function gimple_seq_first (_ZL16gimple_seq_firstP6gimple, funcdef_no=1984, decl_uid=92193, cgraph_uid=1121, symbol_order=1281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gimple_seq_first (struct gimple * s)
{
  struct gimple * D.248410;

  <bb 2> :
  D.248410 = s;

  <bb 3> :
<L0>:
  return D.248410;

}



;; Function gsi_stmt (_ZL8gsi_stmt20gimple_stmt_iterator, funcdef_no=2485, decl_uid=94558, cgraph_uid=1622, symbol_order=1782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gsi_stmt (struct gimple_stmt_iterator i)
{
  struct gimple * D.248412;

  <bb 2> :
  D.248412 = i.ptr;

  <bb 3> :
<L0>:
  return D.248412;

}



;; Function gsi_next (_ZL8gsi_nextP20gimple_stmt_iterator, funcdef_no=2483, decl_uid=94551, cgraph_uid=1620, symbol_order=1780)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gsi_next (struct gimple_stmt_iterator * i)
{
  <bb 2> :
  _1 = i->ptr;
  _2 = _1->next;
  i->ptr = _2;
  return;

}



;; Function gsi_end_p (_ZL9gsi_end_p20gimple_stmt_iterator, funcdef_no=2481, decl_uid=94545, cgraph_uid=1618, symbol_order=1778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool gsi_end_p (struct gimple_stmt_iterator i)
{
  bool D.248414;

  <bb 2> :
  _1 = i.ptr;
  D.248414 = _1 == 0B;

  <bb 3> :
<L0>:
  return D.248414;

}



;; Function Location_b2 (_Z11Location_b2P6gimpleS0_P9tree_node, funcdef_no=6248, decl_uid=187209, cgraph_uid=3224, symbol_order=3998)

Merging blocks 18 and 20
Removing basic block 22
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 6 21 7 20 8 18 17 9 16 13 10 5 3
;;
;; Loop 2
;;  header 20, latch 18
;;  depth 2, outer 1
;;  nodes: 20 18 17 9 16 13 10
;;
;; Loop 3
;;  header 17, latch 16
;;  depth 3, outer 2
;;  nodes: 17 16 13 10
;; 2 succs { 23 }
;; 3 succs { 4 5 }
;; 4 succs { 22 }
;; 5 succs { 6 7 }
;; 6 succs { 22 }
;; 7 succs { 8 21 }
;; 8 succs { 20 }
;; 9 succs { 17 }
;; 10 succs { 11 13 }
;; 11 succs { 26 12 }
;; 12 succs { 19 }
;; 13 succs { 14 16 }
;; 14 succs { 26 15 }
;; 15 succs { 19 }
;; 16 succs { 17 }
;; 17 succs { 10 18 }
;; 18 succs { 20 }
;; 19 succs { 25 }
;; 20 succs { 9 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 3 24 }
;; 24 succs { 25 }
;; 25 succs { 1 }
;; 26 succs { }
bool Location_b2 (struct gimple * a, struct gimple * b, union tree_node * function_tree)
{
  struct cgraph_node * D.248436;
  bool D.248432;
  struct cgraph_node * D.248431;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct basic_block_def * bb;
  struct cgraph_node * node;
  bool retval.31;
  bool D.248425;
  bool retval.27;

  <bb 2> :
  symtab.26_1 = symtab;
  D.248431 = symbol_table::first_defined_function (symtab.26_1);
  node = D.248431;
  goto <bb 23>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.248432 = gimple_has_body_p (_2);
  _3 = D.248432;
  retval.27 = ~_3;
  if (retval.27 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 5> :
  _4 = node->D.97512.decl;
  _5 = _4->function_decl.f;
  push_cfun (_5);
  cfun.28_6 = cfun;
  if (cfun.28_6 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 7> :
  cfun.29_7 = cfun;
  _8 = cfun.29_7->decl;
  if (function_tree == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 8> :
  calculate_dominance_info (1);
  cfun.30_9 = cfun;
  _10 = cfun.30_9->cfg;
  _11 = _10->x_entry_block_ptr;
  bb = _11->next_bb;
  goto <bb 20>; [INV]

  <bb 9> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 17>; [INV]

  <bb 10> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  D.248425 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 13> :
  if (gc == b)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  pop_cfun ();

  <bb 15> :
  D.248425 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  gsi_next (&gsi);

  <bb 17> :
  _12 = gsi_end_p (gsi);
  retval.31 = ~_12;
  if (retval.31 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  gsi = {CLOBBER};
  bb = bb->next_bb;
  goto <bb 20>; [INV]

  <bb 19> :
  gsi = {CLOBBER};
  goto <bb 25>; [INV]

  <bb 20> :
  cfun.32_13 = cfun;
  _14 = cfun.32_13->cfg;
  _15 = _14->x_exit_block_ptr;
  if (bb != _15)
    goto <bb 9>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  symtab.33_16 = symtab;
  D.248436 = symbol_table::next_defined_function (symtab.33_16, node);
  node = D.248436;

  <bb 23> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  D.248425 = 0;

  <bb 25> :
<L23>:
  return D.248425;

  <bb 26> :
<L24>:
  gsi = {CLOBBER};
  resx 1

}



;; Function symbol_table::first_defined_function (_ZN12symbol_table22first_defined_functionEv, funcdef_no=2571, decl_uid=98657, cgraph_uid=1708, symbol_order=1868)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::first_defined_function (struct symbol_table * const this)
{
  struct cgraph_node * D.248443;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.248441;

  <bb 2> :
  node = this->nodes;
  goto <bb 7>; [INV]

  <bb 3> :
  D.248443 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.248443;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.248441 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node = node->next;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.248441 = 0B;

  <bb 9> :
<L7>:
  return D.248441;

}



;; Function dyn_cast<cgraph_node*, symtab_node> (_Z8dyn_castIP11cgraph_node11symtab_nodeET_PT0_, funcdef_no=7106, decl_uid=97635, cgraph_uid=3738, symbol_order=4527)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct cgraph_node * dyn_cast<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.248447;
  bool retval.34;

  <bb 2> :
  retval.34 = is_a<cgraph_node*, symtab_node> (p);
  if (retval.34 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248447 = reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.248447 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.248447;

}



;; Function is_a<cgraph_node*, symtab_node> (_Z4is_aIP11cgraph_node11symtab_nodeEbPT0_, funcdef_no=7115, decl_uid=99519, cgraph_uid=3747, symbol_order=4536)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  bool D.248449;

  <bb 2> :
  D.248449 = is_a_helper<cgraph_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.248449;

}



;; Function is_a_helper<cgraph_node*>::test<symtab_node> (_ZN11is_a_helperIP11cgraph_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2532, decl_uid=98449, cgraph_uid=1669, symbol_order=1829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<cgraph_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.35;
  bool D.248451;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.35 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.35 = 0;

  <bb 6> :
  D.248451 = iftmp.35;

  <bb 7> :
<L4>:
  return D.248451;

}



;; Function reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP11cgraph_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8121, decl_uid=207271, cgraph_uid=4753, symbol_order=5545)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct cgraph_node * reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.248458;

  <bb 2> :
  D.248458 = p;

  <bb 3> :
<L0>:
  return D.248458;

}



;; Function symbol_table::next_defined_function (_ZN12symbol_table21next_defined_functionEP11cgraph_node, funcdef_no=2572, decl_uid=98661, cgraph_uid=1709, symbol_order=1869)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::next_defined_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.248466;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.248464;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 7>; [INV]

  <bb 3> :
  D.248466 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.248466;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn1->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.248464 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node1 = node1->next;

  <bb 7> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.248464 = 0B;

  <bb 9> :
<L7>:
  return D.248464;

}



;; Function Location_b3 (_Z11Location_b3P6gimpleS0_P9tree_node, funcdef_no=6249, decl_uid=187233, cgraph_uid=3225, symbol_order=3999)

Removing basic block 16
Merging blocks 18 and 20
Removing basic block 22
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 1
;;  header 22, latch 21
;;  depth 1, outer 0
;;  nodes: 22 21 4 6 20 7 19 8 17 16 9 5 3
;;
;; Loop 2
;;  header 19, latch 17
;;  depth 2, outer 1
;;  nodes: 19 17 16 9
;; 2 succs { 22 }
;; 3 succs { 4 5 }
;; 4 succs { 21 }
;; 5 succs { 6 7 }
;; 6 succs { 21 }
;; 7 succs { 8 20 }
;; 8 succs { 19 }
;; 9 succs { 16 }
;; 10 succs { 25 11 }
;; 11 succs { 12 14 }
;; 12 succs { 25 13 }
;; 13 succs { 18 }
;; 14 succs { 25 15 }
;; 15 succs { 18 }
;; 16 succs { 10 17 }
;; 17 succs { 19 }
;; 18 succs { 24 }
;; 19 succs { 9 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 3 23 }
;; 23 succs { 24 }
;; 24 succs { 1 }
;; 25 succs { }
bool Location_b3 (struct gimple * a, struct gimple * b, union tree_node * function_tree)
{
  struct cgraph_node * D.248487;
  bool D.248483;
  bool D.248482;
  struct cgraph_node * D.248481;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct basic_block_def * bb;
  struct cgraph_node * node;
  bool retval.42;
  bool D.248477;
  bool retval.41;
  bool retval.37;

  <bb 2> :
  symtab.36_1 = symtab;
  D.248481 = symbol_table::first_defined_function (symtab.36_1);
  node = D.248481;
  goto <bb 22>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.248482 = gimple_has_body_p (_2);
  _3 = D.248482;
  retval.37 = ~_3;
  if (retval.37 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by continue predictor.
  goto <bb 21>; [INV]

  <bb 5> :
  _4 = node->D.97512.decl;
  _5 = _4->function_decl.f;
  push_cfun (_5);
  cfun.38_6 = cfun;
  if (cfun.38_6 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 21>; [INV]

  <bb 7> :
  cfun.39_7 = cfun;
  _8 = cfun.39_7->decl;
  if (function_tree == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 8> :
  calculate_dominance_info (1);
  cfun.40_9 = cfun;
  _10 = cfun.40_9->cfg;
  _11 = _10->x_entry_block_ptr;
  bb = _11->next_bb;
  goto <bb 19>; [INV]

  <bb 9> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 16>; [INV]

  <bb 10> :
  gc = gsi_stmt (gsi);
  _12 = b->bb;
  _13 = a->bb;
  D.248483 = dominated_by_p (1, _13, _12);

  <bb 11> :
  retval.41 = D.248483;
  if (retval.41 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  pop_cfun ();

  <bb 13> :
  D.248477 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 14> :
  pop_cfun ();

  <bb 15> :
  D.248477 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 16> :
  _14 = gsi_end_p (gsi);
  retval.42 = ~_14;
  if (retval.42 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  gsi = {CLOBBER};
  bb = bb->next_bb;
  goto <bb 19>; [INV]

  <bb 18> :
  gsi = {CLOBBER};
  goto <bb 24>; [INV]

  <bb 19> :
  cfun.43_15 = cfun;
  _16 = cfun.43_15->cfg;
  _17 = _16->x_exit_block_ptr;
  if (bb != _17)
    goto <bb 9>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  pop_cfun ();

  <bb 21> :
  symtab.44_18 = symtab;
  D.248487 = symbol_table::next_defined_function (symtab.44_18, node);
  node = D.248487;

  <bb 22> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  D.248477 = 0;

  <bb 24> :
<L21>:
  return D.248477;

  <bb 25> :
<L22>:
  gsi = {CLOBBER};
  resx 1

}



;; Function SDBMHash (_Z8SDBMHashPc, funcdef_no=6250, decl_uid=187038, cgraph_uid=3226, symbol_order=4000)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int SDBMHash (char * str)
{
  unsigned int hash;
  unsigned int D.248488;

  <bb 2> :
  _1 = rand ();
  _2 = _1 % 10;
  hash = (unsigned int) _2;
  goto <bb 4>; [INV]

  <bb 3> :
  str.45_3 = str;
  str = str.45_3 + 1;
  _4 = *str.45_3;
  _5 = (unsigned int) _4;
  _6 = hash << 6;
  _7 = _5 + _6;
  _8 = hash << 16;
  _9 = _7 + _8;
  hash = _9 - hash;

  <bb 4> :
  _10 = *str;
  if (_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248488 = hash & 2147483647;

  <bb 6> :
<L3>:
  return D.248488;

}



;; Function fprintf2 (_Z8fprintf2P8_IO_FILEPKcz, funcdef_no=6251, decl_uid=187263, cgraph_uid=3227, symbol_order=4001)

Merging blocks 3 and 7
Merging blocks 6 and 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 8 5 }
;; 5 succs { 8 6 }
;; 6 succs { 1 }
;; 7 succs { 1 }
;; 8 succs { }
int fprintf2 (struct FILE * stream, const char * format)
{
  struct  ap[1];
  int D.248492;

  <bb 2> :
  debugoutput.46_1 = debugoutput;
  _2 = ~debugoutput.46_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248492 = 0;
  // predicted unlikely by early return (on trees) predictor.
  ap = {CLOBBER};
  goto <bb 7>; [INV]

  <bb 4> :
  __builtin_va_start (&ap, 0);
  vfprintf (stream, format, &ap);

  <bb 5> :
  __builtin_va_end (&ap);
  fp.47_3 = fp;
  fflush (fp.47_3);

  <bb 6> :
  ap = {CLOBBER};
  return;

  <bb 7> :
<L4>:
  return D.248492;

  <bb 8> :
<L5>:
  ap = {CLOBBER};
  resx 1

}



;; Function debug_gimple_stmt2 (_Z18debug_gimple_stmt2P6gimple, funcdef_no=6252, decl_uid=187267, cgraph_uid=3228, symbol_order=4002)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
__attribute__((used))
void debug_gimple_stmt2 (struct gimple * gs)
{
  <bb 2> :
  debugoutput.48_1 = debugoutput;
  _2 = ~debugoutput.48_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  debug_gimple_stmt (gs);

  <bb 5> :
<L2>:
  return;

}



;; Function debug_tree2 (_Z11debug_tree2P9tree_node, funcdef_no=6253, decl_uid=187270, cgraph_uid=3229, symbol_order=4003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
__attribute__((used))
void debug_tree2 (union tree_node * node)
{
  <bb 2> :
  debugoutput.49_1 = debugoutput;
  _2 = ~debugoutput.49_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  debug_tree (node);

  <bb 5> :
<L2>:
  return;

}



;; Function debug2 (_Z6debug2PK9tree_node, funcdef_no=6254, decl_uid=187273, cgraph_uid=3230, symbol_order=4004)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((used))
void debug2 (const union tree_node * ptr)
{
  <bb 2> :
  debugoutput.50_1 = debugoutput;
  _2 = ~debugoutput.50_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  if (ptr != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  debug (ptr);
  goto <bb 7>; [INV]

  <bb 6> :
  stderr.51_3 = stderr;
  __builtin_fwrite ("<nil>\n", 1, 6, stderr.51_3);

  <bb 7> :
<L5>:
  return;

}



;; Function debug2 (_Z6debug2P6gimple, funcdef_no=6255, decl_uid=187897, cgraph_uid=3231, symbol_order=4005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((used))
void debug2 (struct gimple * ptr)
{
  <bb 2> :
  debugoutput.52_1 = debugoutput;
  _2 = ~debugoutput.52_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  if (ptr != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  debug (ptr);
  goto <bb 7>; [INV]

  <bb 6> :
  stderr.53_3 = stderr;
  __builtin_fwrite ("<nil>\n", 1, 6, stderr.53_3);

  <bb 7> :
<L5>:
  return;

}



;; Function warning_at2 (_Z11warning_at2jiPKcz, funcdef_no=6256, decl_uid=189585, cgraph_uid=3232, symbol_order=4006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
bool warning_at2 (location_t location, int opt, const char * gmsgid)
{
  bool D.248519;
  bool D.248517;

  <bb 2> :
  debugoutput.54_1 = debugoutput;
  _2 = ~debugoutput.54_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248517 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.248519 = warning_at (location, opt, gmsgid);
  D.248517 = D.248519;

  <bb 5> :
<L2>:
  return D.248517;

}



;; Function warning_at2 (_Z11warning_at2P13rich_locationiPKcz, funcdef_no=6257, decl_uid=189590, cgraph_uid=3233, symbol_order=4007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
bool warning_at2 (struct rich_location * richloc, int opt, const char * gmsgid)
{
  bool D.248524;
  bool D.248522;

  <bb 2> :
  debugoutput.55_1 = debugoutput;
  _2 = ~debugoutput.55_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248522 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.248524 = warning_at (richloc, opt, gmsgid);
  D.248522 = D.248524;

  <bb 5> :
<L2>:
  return D.248522;

}



;; Function dump_points_to_solution2 (_Z24dump_points_to_solution2P8_IO_FILEP11pt_solution, funcdef_no=6258, decl_uid=187045, cgraph_uid=3234, symbol_order=4009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
int dump_points_to_solution2 (struct FILE * file, struct pt_solution * pt)
{
  int D.248543;

  <bb 2> :
  _1 = BIT_FIELD_REF <*pt, 8, 0>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_fwrite (", points-to anything", 1, 20, file);

  <bb 4> :
  _3 = BIT_FIELD_REF <*pt, 8, 0>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_fwrite (", points-to non-local", 1, 21, file);

  <bb 6> :
  _5 = BIT_FIELD_REF <*pt, 8, 0>;
  _6 = _5 & 4;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  __builtin_fwrite (", points-to escaped", 1, 19, file);

  <bb 8> :
  _7 = BIT_FIELD_REF <*pt, 8, 0>;
  _8 = _7 & 8;
  if (_8 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  __builtin_fwrite (", points-to unit escaped", 1, 24, file);

  <bb 10> :
  _9 = BIT_FIELD_REF <*pt, 8, 0>;
  _10 = _9 & 16;
  if (_10 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  __builtin_fwrite (", points-to NULL", 1, 16, file);

  <bb 12> :
  _11 = pt->vars;
  if (_11 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  __builtin_fwrite (", points-to vars: ", 1, 18, file);

  <bb 14> :
  D.248543 = 1;

  <bb 15> :
<L18>:
  return D.248543;

}



;; Function printfBasicblock (_Z16printfBasicblockv, funcdef_no=6259, decl_uid=187132, cgraph_uid=3238, symbol_order=4013)

Removing basic block 16
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 30, latch 29
;;  depth 1, outer 0
;;  nodes: 30 29 28 7 12 27 26 17 25 24 22 23 21 20 19 18 16 14 15 13 10 9 8 6 5 11
;;
;; Loop 2
;;  header 26, latch 25
;;  depth 2, outer 1
;;  nodes: 26 25 24 22 23 21 20 19 18
;;
;; Loop 3
;;  header 24, latch 23
;;  depth 3, outer 2
;;  nodes: 24 23
;; 2 succs { 33 3 }
;; 3 succs { 33 4 }
;; 4 succs { 30 }
;; 5 succs { 33 6 }
;; 6 succs { 7 8 }
;; 7 succs { 28 }
;; 8 succs { 33 9 }
;; 9 succs { 33 10 }
;; 10 succs { 11 13 }
;; 11 succs { 33 12 }
;; 12 succs { 28 }
;; 13 succs { 33 14 }
;; 14 succs { 15 16 }
;; 15 succs { 33 16 }
;; 16 succs { 33 17 }
;; 17 succs { 26 }
;; 18 succs { 33 19 }
;; 19 succs { 33 20 }
;; 20 succs { 33 21 }
;; 21 succs { 33 22 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 23 25 }
;; 25 succs { 26 }
;; 26 succs { 18 27 }
;; 27 succs { 33 28 }
;; 28 succs { 33 29 }
;; 29 succs { 30 }
;; 30 succs { 5 31 }
;; 31 succs { 33 32 }
;; 32 succs { 1 }
;; 33 succs { }
void printfBasicblock ()
{
  struct cgraph_node * D.248559;
  bool D.248558;
  const char * D.248557;
  struct function * D.248556;
  bool D.248555;
  struct cgraph_node * D.248554;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.66;
  bool retval.58;

  <bb 2> :
  stderr.56_1 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.56_1);

  <bb 3> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.57_2 = symtab;
  D.248554 = symbol_table::first_function (symtab.57_2);

  <bb 4> :
  node = D.248554;
  goto <bb 30>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.248555 = gimple_has_body_p (_3);

  <bb 6> :
  _4 = D.248555;
  retval.58 = ~_4;
  if (retval.58 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 8> :
  D.248556 = cgraph_node::get_fun (node);

  <bb 9> :
  _5 = D.248556;
  push_cfun (_5);

  <bb 10> :
  cfun.59_6 = cfun;
  if (cfun.59_6 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 13> :
  cfun.60_7 = cfun;
  _8 = cfun.60_7->decl;
  D.248557 = get_name (_8);

  <bb 14> :
  name = D.248557;
  if (name != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  stderr.61_9 = stderr;
  fprintf (stderr.61_9, "=======Mapping node_fun:%s=========\n", name);

  <bb 16> :
  calculate_dominance_info (1);

  <bb 17> :
  cfun.62_10 = cfun;
  _11 = cfun.62_10->cfg;
  _12 = _11->x_entry_block_ptr;
  bb = _12->next_bb;
  goto <bb 26>; [INV]

  <bb 18> :
  D.248558 = bb_in_loop_p (bb);

  <bb 19> :
  _13 = D.248558;
  _14 = (int) _13;
  stderr.63_15 = stderr;
  fprintf (stderr.63_15, "=======is loop:%d=========\n", _14);

  <bb 20> :
  _16 = bb->index;
  stderr.64_17 = stderr;
  fprintf (stderr.64_17, "\n bb index %d \n", _16);

  <bb 21> :
  debug_bb (bb);

  <bb 22> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 24>; [INV]

  <bb 23> :
  gc = gsi_stmt (gsi);
  gimplestmt_count.65_18 = gimplestmt_count;
  _19 = gimplestmt_count.65_18 + 1;
  gimplestmt_count = _19;
  gsi_next (&gsi);

  <bb 24> :
  _20 = gsi_end_p (gsi);
  retval.66 = ~_20;
  if (retval.66 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 26> :
  cfun.67_21 = cfun;
  _22 = cfun.67_21->cfg;
  _23 = _22->x_exit_block_ptr;
  if (bb != _23)
    goto <bb 18>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  pop_cfun ();

  <bb 28> :
  symtab.68_24 = symtab;
  D.248559 = symbol_table::next_function (symtab.68_24, node);

  <bb 29> :
  node = D.248559;

  <bb 30> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  stderr.69_25 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.69_25);

  <bb 32> :
  start = {CLOBBER};
  return;

  <bb 33> :
<L17>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_array::gimple_array (_ZN12gimple_arrayC2Ev, funcdef_no=6261, decl_uid=189605, cgraph_uid=3236, symbol_order=4011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gimple_array::gimple_array (struct gimple_array * const this)
{
  <bb 2> :
  this->size = 0;
  return;

}



;; Function symbol_table::first_function (_ZN12symbol_table14first_functionEv, funcdef_no=2573, decl_uid=98664, cgraph_uid=1710, symbol_order=1870)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::first_function (struct symbol_table * const this)
{
  struct cgraph_node * D.248565;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.248563;

  <bb 2> :
  node = this->nodes;
  goto <bb 6>; [INV]

  <bb 3> :
  D.248565 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.248565;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248563 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node = node->next;

  <bb 6> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.248563 = 0B;

  <bb 8> :
<L5>:
  return D.248563;

}



;; Function symbol_table::next_function (_ZN12symbol_table13next_functionEP11cgraph_node, funcdef_no=2574, decl_uid=98668, cgraph_uid=1711, symbol_order=1871)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::next_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.248570;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.248568;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 6>; [INV]

  <bb 3> :
  D.248570 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.248570;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248568 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node1 = node1->next;

  <bb 6> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.248568 = 0B;

  <bb 8> :
<L5>:
  return D.248568;

}



;; Function print_function_path (_Z19print_function_pathPSt6vectorI11return_typeSaIS0_EE, funcdef_no=6263, decl_uid=189661, cgraph_uid=3239, symbol_order=4014)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void print_function_path (struct vector * path)
{
  int i;
  bool retval.72;

  <bb 2> :
  stderr.70_1 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.70_1);
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (long unsigned int) i;
  _3 = std::vector<return_type>::operator[] (path, _2);
  _4 = _3->stmt;
  debug (_4);
  stderr.71_5 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.71_5);
  i = i + 1;

  <bb 4> :
  _6 = (long unsigned int) i;
  _7 = std::vector<return_type>::size (path);
  retval.72 = _6 < _7;
  if (retval.72 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  stderr.73_8 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.73_8);
  return;

}



;; Function std::vector<return_type>::operator[] (_ZNSt6vectorI11return_typeSaIS0_EEixEm, funcdef_no=7627, decl_uid=174263, cgraph_uid=4259, symbol_order=5051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<return_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.248572;

  <bb 2> :
  _1 = this->D.174610._M_impl.D.173955._M_start;
  _2 = __n * 40;
  D.248572 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248572;

}



;; Function std::vector<return_type>::size (_ZNKSt6vectorI11return_typeSaIS0_EE4sizeEv, funcdef_no=7626, decl_uid=174243, cgraph_uid=4258, symbol_order=5050)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::size (const struct vector * const this)
{
  size_type D.248574;

  <bb 2> :
  _1 = this->D.174610._M_impl.D.173955._M_finish;
  _2 = this->D.174610._M_impl.D.173955._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.248574 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248574;

}



;; Function print_function_return2 (_Z22print_function_return2P9tree_node, funcdef_no=6264, decl_uid=187151, cgraph_uid=3246, symbol_order=4021)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return2 (union tree_node * function_tree)
{
  struct function_return_array * D.248582;
  struct function_return_array * D.248581;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.81;
  bool retval.74;

  <bb 2> :
  function_return_collect.75_1 = function_return_collect;
  D.248581 = hash_map<tree_node*, function_return_array>::get (function_return_collect.75_1, &function_tree);

  <bb 3> :
  _2 = D.248581;
  retval.74 = _2 == 0B;
  if (retval.74 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.76_3 = function_return_collect;
  D.248582 = hash_map<tree_node*, function_return_array>::get (function_return_collect.76_3, &function_tree);

  <bb 6> :
  _4 = D.248582;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.77_6 = function_tree;
  stderr.78_7 = stderr;
  fprintf (stderr.78_7, "=======print_function_return %d   %d========\n", function_tree.77_6, _5);

  <bb 9> :
  stderr.79_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.79_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.80_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.80_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.81 = _13 < _14;
  if (retval.81 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.82_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.82_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_return_array>::get (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7628, decl_uid=189719, cgraph_uid=4260, symbol_order=5052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_return_array * hash_map<tree_node*, function_return_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248596;
  struct hash_entry & D.248595;
  unsigned int D.248594;
  struct hash_entry & e;
  struct function_return_array * iftmp.83;
  struct function_return_array * D.248588;

  <bb 2> :
  _1 = &this->m_table;
  D.248594 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.248594;
  D.248595 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248595;
  D.248596 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  _3 = D.248596;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.83 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.83 = &e->m_value;

  <bb 5> :
  D.248588 = iftmp.83;

  <bb 6> :
<L3>:
  return D.248588;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE4hashERKS2_, funcdef_no=8454, decl_uid=189675, cgraph_uid=5086, symbol_order=5882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (union tree_node * const & h)
{
  hashval_t D.248597;

  <bb 2> :
  D.248597 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248597;

}



;; Function pointer_hash<tree_node>::hash (_ZN12pointer_hashI9tree_nodeE4hashERKPS0_, funcdef_no=9237, decl_uid=85298, cgraph_uid=5869, symbol_order=6665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<tree_node>::hash (union tree_node * const & candidate)
{
  hashval_t D.248599;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.248599 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.248599;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8455, decl_uid=189862, cgraph_uid=5087, symbol_order=5883)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248633;
  bool D.248632;
  bool D.248631;
  bool D.248630;
  bool D.248629;
  bool D.248628;
  struct value_type * D.248627;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.87;
  bool retval.86;
  struct value_type & D.248613;
  bool iftmp.85;
  bool retval.84;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.248628 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248628;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248629 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248629;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248630 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _11 = D.248630;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.85 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.85 = 0;

  <bb 8> :
  retval.84 = iftmp.85;
  if (retval.84 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248613 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.248631 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248631;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248632 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248632;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248633 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _23 = D.248633;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.87 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.87 = 0;

  <bb 18> :
  retval.86 = iftmp.87;
  if (retval.86 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248613 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248613;

}



;; Function hash_table_mod1 (_Z15hash_table_mod1jj, funcdef_no=982, decl_uid=32188, cgraph_uid=280, symbol_order=291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod1 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.248634;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv;
  _4 = p->prime;
  D.248634 = mul_mod (hash, _4, _3, _2);

  <bb 3> :
<L0>:
  return D.248634;

}



;; Function mul_mod (_Z7mul_modjjji, funcdef_no=981, decl_uid=32178, cgraph_uid=279, symbol_order=290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t mul_mod (hashval_t x, hashval_t y, hashval_t inv, int shift)
{
  hashval_t r;
  hashval_t q;
  hashval_t t4;
  hashval_t t3;
  hashval_t t2;
  hashval_t t1;
  hashval_t D.248636;

  <bb 2> :
  _1 = (long unsigned int) x;
  _2 = (long unsigned int) inv;
  _3 = _1 * _2;
  _4 = _3 >> 32;
  t1 = (hashval_t) _4;
  t2 = x - t1;
  t3 = t2 >> 1;
  t4 = t1 + t3;
  q = t4 >> shift;
  _5 = q * y;
  r = x - _5;
  D.248636 = r;

  <bb 3> :
<L0>:
  return D.248636;

}



;; Function hash_table_mod2 (_Z15hash_table_mod2jj, funcdef_no=983, decl_uid=32193, cgraph_uid=281, symbol_order=292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod2 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.248638;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv_m2;
  _4 = p->prime;
  _5 = _4 + 4294967294;
  _6 = mul_mod (hash, _5, _3, _2);
  D.248638 = _6 + 1;

  <bb 3> :
<L0>:
  return D.248638;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8953, decl_uid=189958, cgraph_uid=5585, symbol_order=6381)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248642;
  bool D.248640;

  <bb 2> :
  D.248642 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (v);
  D.248640 = D.248642;

  <bb 3> :
<L0>:
  return D.248640;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8638, decl_uid=189788, cgraph_uid=5270, symbol_order=6066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248645;
  bool D.248643;

  <bb 2> :
  D.248645 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.248643 = D.248645;

  <bb 3> :
<L0>:
  return D.248643;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8954, decl_uid=189956, cgraph_uid=5586, symbol_order=6382)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248648;
  bool D.248646;

  <bb 2> :
  D.248648 = hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (v);
  D.248646 = D.248648;

  <bb 3> :
<L0>:
  return D.248646;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9798, decl_uid=189783, cgraph_uid=6430, symbol_order=7226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248651;
  bool D.248649;

  <bb 2> :
  D.248651 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.248649 = D.248651;

  <bb 3> :
<L0>:
  return D.248649;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10361, decl_uid=239497, cgraph_uid=6993, symbol_order=7793)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248652;

  <bb 2> :
  _1 = entry->m_key;
  D.248652 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248652;

}



;; Function pointer_hash<tree_node>::is_deleted (_ZN12pointer_hashI9tree_nodeE10is_deletedEPS0_, funcdef_no=10581, decl_uid=85308, cgraph_uid=7213, symbol_order=8013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_deleted (union tree_node * e)
{
  bool D.248654;

  <bb 2> :
  D.248654 = e == 1B;

  <bb 3> :
<L0>:
  return D.248654;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9239, decl_uid=189776, cgraph_uid=5871, symbol_order=6667)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248658;
  bool D.248656;

  <bb 2> :
  _1 = &a->m_key;
  D.248658 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_1, b);
  D.248656 = D.248658;

  <bb 3> :
<L0>:
  return D.248656;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10equal_keysERKS2_S7_, funcdef_no=9973, decl_uid=189677, cgraph_uid=6605, symbol_order=7405)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248659;

  <bb 2> :
  D.248659 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248659;

}



;; Function pointer_hash<tree_node>::equal (_ZN12pointer_hashI9tree_nodeE5equalERKPS0_S4_, funcdef_no=10508, decl_uid=85300, cgraph_uid=7140, symbol_order=7940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::equal (union tree_node * const & existing, union tree_node * const & candidate)
{
  bool D.248661;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.248661 = _1 == _2;

  <bb 3> :
<L0>:
  return D.248661;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8456, decl_uid=211599, cgraph_uid=5088, symbol_order=5884)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248663;

  <bb 2> :
  _1 = entry->m_key;
  D.248663 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248663;

}



;; Function pointer_hash<tree_node>::is_empty (_ZN12pointer_hashI9tree_nodeE8is_emptyEPS0_, funcdef_no=9240, decl_uid=85310, cgraph_uid=5872, symbol_order=6668)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_empty (union tree_node * e)
{
  bool D.248665;

  <bb 2> :
  D.248665 = e == 0B;

  <bb 3> :
<L0>:
  return D.248665;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2ERKS_, funcdef_no=6266, decl_uid=190057, cgraph_uid=3241, symbol_order=4016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, const struct function_return_array & D.190059)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190059->return_type_num;
  this->return_type_num = _1;
  _2 = D.190059->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.190059->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2ERKS2_, funcdef_no=7630, decl_uid=174573, cgraph_uid=4262, symbol_order=5054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<return_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.248671;
  struct __normal_iterator D.248668;
  struct __normal_iterator D.248667;
  struct allocator D.211714;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174610;
  _2 = &__x->D.174610;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  D.211714 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<return_type>::size (__x);
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _4, &D.211714);

  <bb 3> :
  std::allocator<return_type>::~allocator (&D.211714);
  D.211714 = {CLOBBER};
  _5 = &this->D.174610;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.174610._M_impl.D.173955._M_start;
  D.248667 = std::vector<return_type>::end (__x);
  D.248668 = std::vector<return_type>::begin (__x);
  D.248671 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (D.248668, D.248667, _7, _6);

  <bb 4> :
  _8 = D.248671;
  this->D.174610._M_impl.D.173955._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<return_type>::~allocator (&D.211714);
  resx 2

  <bb 6> :
<L1>:
  D.211714 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.174610;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8458, decl_uid=173845, cgraph_uid=5090, symbol_order=5886)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248673;

  <bb 2> :
  D.248673 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248673;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8457, decl_uid=173817, cgraph_uid=5089, symbol_order=5885)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11return_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9241, decl_uid=173782, cgraph_uid=5873, symbol_order=6669)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<return_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2ERKS0_, funcdef_no=9975, decl_uid=173725, cgraph_uid=6607, symbol_order=7407)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2ERKS2_, funcdef_no=10510, decl_uid=173654, cgraph_uid=7142, symbol_order=7942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.173656)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EmRKS1_, funcdef_no=8460, decl_uid=174042, cgraph_uid=5092, symbol_order=5888)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9243, decl_uid=173947, cgraph_uid=5875, symbol_order=6671)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this, __a);
  _1 = &this->D.173955;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8422, decl_uid=173902, cgraph_uid=5054, symbol_order=5850)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9245, decl_uid=173966, cgraph_uid=5877, symbol_order=6673)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.248680;

  <bb 2> :
  D.248680 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (this, __n);
  _1 = D.248680;
  this->_M_impl.D.173955._M_start = _1;
  _2 = this->_M_impl.D.173955._M_start;
  this->_M_impl.D.173955._M_finish = _2;
  _3 = this->_M_impl.D.173955._M_start;
  _4 = __n * 40;
  _5 = _3 + _4;
  this->_M_impl.D.173955._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE11_M_allocateEm, funcdef_no=9395, decl_uid=173959, cgraph_uid=6027, symbol_order=6823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.248687;
  struct return_type * iftmp.88;
  struct return_type * D.248681;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248687 = std::allocator_traits<std::allocator<return_type> >::allocate (_1, __n);
  iftmp.88 = D.248687;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.88 = 0B;

  <bb 5> :
  D.248681 = iftmp.88;

  <bb 6> :
<L3>:
  return D.248681;

}



;; Function std::allocator_traits<std::allocator<return_type> >::allocate (_ZNSt16allocator_traitsISaI11return_typeEE8allocateERS1_m, funcdef_no=10083, decl_uid=173760, cgraph_uid=6715, symbol_order=7515)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type * std::allocator_traits<std::allocator<return_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct return_type * D.248690;
  struct return_type * D.248688;

  <bb 2> :
  D.248690 = __gnu_cxx::new_allocator<return_type>::allocate (__a, __n, 0B);
  D.248688 = D.248690;

  <bb 3> :
<L0>:
  return D.248688;

}



;; Function __gnu_cxx::new_allocator<return_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE8allocateEmPKv, funcdef_no=10600, decl_uid=173614, cgraph_uid=7233, symbol_order=8033)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct return_type * __gnu_cxx::new_allocator<return_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245458)
{
  struct return_type * D.248701;
  struct return_type * D.248700;
  align_val_t __al;
  struct return_type * D.248698;
  bool retval.89;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.89 = _4 != 0;
  if (retval.89 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 461168601842738790)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 40;
  D.248701 = operator new (_6);
  D.248698 = D.248701;

  <bb 7> :
<L6>:
  return D.248698;

}



;; Function __gnu_cxx::new_allocator<return_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE11_M_max_sizeEv, funcdef_no=10601, decl_uid=173641, cgraph_uid=7232, symbol_order=8032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248702;

  <bb 2> :
  D.248702 = 230584300921369395;

  <bb 3> :
<L0>:
  return D.248702;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6223, decl_uid=174002, cgraph_uid=3197, symbol_order=3959)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<return_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<return_type>::~allocator (_ZNSaI11return_typeED2Ev, funcdef_no=7603, decl_uid=173735, cgraph_uid=4235, symbol_order=5027)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeED2Ev, funcdef_no=8425, decl_uid=173664, cgraph_uid=5057, symbol_order=5853)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8464, decl_uid=173843, cgraph_uid=5096, symbol_order=5892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248704;

  <bb 2> :
  D.248704 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248704;

}



;; Function std::vector<return_type>::end (_ZNKSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8463, decl_uid=174225, cgraph_uid=5095, symbol_order=5891)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::end (const struct vector * const this)
{
  struct const_iterator D.222336;
  struct const_iterator D.248706;

  <bb 2> :
  _1 = &this->D.174610._M_impl.D.173955._M_finish;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.222336, _1);
  D.248706 = D.222336;
  D.222336 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248706;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9247, decl_uid=211683, cgraph_uid=5879, symbol_order=6675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, const struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNKSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8462, decl_uid=174221, cgraph_uid=5094, symbol_order=5890)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222334;
  struct const_iterator D.248709;

  <bb 2> :
  _1 = &this->D.174610._M_impl.D.173955._M_start;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.222334, _1);
  D.248709 = D.222334;
  D.222334 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248709;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8465, decl_uid=211703, cgraph_uid=5097, symbol_order=5893)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result, struct allocator & D.222341)
{
  struct return_type * D.248714;
  struct return_type * D.248712;

  <bb 2> :
  D.248714 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.248712 = D.248714;

  <bb 3> :
<L0>:
  return D.248712;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9249, decl_uid=222343, cgraph_uid=5882, symbol_order=6678)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * D.248717;
  const bool __assignable;
  struct return_type * D.248715;

  <bb 2> :
  __assignable = 1;
  D.248717 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.248715 = D.248717;

  <bb 3> :
<L0>:
  return D.248715;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9977, decl_uid=234106, cgraph_uid=6609, symbol_order=7409)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.248719;
  bool retval.90;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (&__first);
  _2 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, const return_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (&__first);
  __cur = __cur + 40;

  <bb 4> :
  retval.90 = __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (&__first, &__last);
  if (retval.90 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248719 = __cur;

  <bb 6> :
<L3>:
  return D.248719;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10515, decl_uid=211641, cgraph_uid=7147, symbol_order=7947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct return_type & D.248721;

  <bb 2> :
  D.248721 = this->_M_current;

  <bb 3> :
<L0>:
  return D.248721;

}



;; Function std::__addressof<return_type> (_ZSt11__addressofI11return_typeEPT_RS1_, funcdef_no=10514, decl_uid=224706, cgraph_uid=7146, symbol_order=7946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__addressof<return_type> (struct return_type & __r)
{
  struct return_type * D.248723;

  <bb 2> :
  D.248723 = __r;

  <bb 3> :
<L0>:
  return D.248723;

}



;; Function std::_Construct<return_type, const return_type&> (_ZSt10_ConstructI11return_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10516, decl_uid=241571, cgraph_uid=7148, symbol_order=7948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, const return_type&> (struct return_type * __p, const struct return_type & __args#0)
{
  void * D.245063;
  void * D.245062;
  const struct return_type * D.245064;

  <bb 2> :
  D.245064 = std::forward<const return_type&> (__args#0);
  D.245062 = __p;
  D.245063 = operator new (40, D.245062);
  MEM[(struct return_type *)D.245063] = *D.245064;
  return;

}



;; Function std::forward<const return_type&> (_ZSt7forwardIRK11return_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9420, decl_uid=224320, cgraph_uid=6052, symbol_order=6848)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct return_type & std::forward<const return_type&> (const struct type & __t)
{
  const struct return_type & D.248725;

  <bb 2> :
  D.248725 = __t;

  <bb 3> :
<L0>:
  return D.248725;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10513, decl_uid=211645, cgraph_uid=7145, symbol_order=7945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.248727;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 40;
  this->_M_current = _2;
  D.248727 = this;

  <bb 3> :
<L0>:
  return D.248727;

}



;; Function __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (_ZN9__gnu_cxxneIPK11return_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10512, decl_uid=241564, cgraph_uid=7144, symbol_order=7944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.248729;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  D.248729 = _2 != _4;

  <bb 3> :
<L0>:
  return D.248729;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10602, decl_uid=211670, cgraph_uid=7234, symbol_order=8034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * const & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  const struct return_type * const & D.248731;

  <bb 2> :
  D.248731 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248731;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EED2Ev, funcdef_no=7606, decl_uid=174065, cgraph_uid=4238, symbol_order=5030)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.173955._M_end_of_storage;
  _2 = this->_M_impl.D.173955._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.173955._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8427, decl_uid=173962, cgraph_uid=5059, symbol_order=5855)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (struct _Vector_base * const this, struct return_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<return_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::deallocate (_ZNSt16allocator_traitsISaI11return_typeEE10deallocateERS1_PS0_m, funcdef_no=9216, decl_uid=173767, cgraph_uid=5848, symbol_order=6644)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::deallocate (struct allocator_type & __a, struct return_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE10deallocateEPS1_m, funcdef_no=9944, decl_uid=173618, cgraph_uid=6576, symbol_order=7376)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::deallocate (struct new_allocator * const this, struct return_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 40;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<return_type>::~vector (_ZNSt6vectorI11return_typeSaIS0_EED2Ev, funcdef_no=7633, decl_uid=174607, cgraph_uid=4265, symbol_order=5057)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174610;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.174610._M_impl.D.173955._M_finish;
  _4 = this->D.174610._M_impl.D.173955._M_start;
  std::_Destroy<return_type*, return_type> (_4, _3, _2);
  _5 = &this->D.174610;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<return_type*, return_type> (_ZSt8_DestroyIP11return_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8466, decl_uid=211720, cgraph_uid=5098, symbol_order=5894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct allocator & D.222362)
{
  <bb 2> :
  std::_Destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<return_type*> (_ZSt8_DestroyIP11return_typeEvT_S2_, funcdef_no=9251, decl_uid=222364, cgraph_uid=5883, symbol_order=6679)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*> (struct return_type * __first, struct return_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<return_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11return_typeEEvT_S4_, funcdef_no=9978, decl_uid=234137, cgraph_uid=6610, symbol_order=7410)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<return_type*> (struct return_type * D.241578, struct return_type * D.241579)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_return_array::~function_return_array (_ZN21function_return_arrayD2Ev, funcdef_no=6269, decl_uid=190079, cgraph_uid=3244, symbol_order=4019)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::~function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  _1 = &this->return_type_array;
  std::vector<return_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function print_function_return (_Z21print_function_returnP9tree_node, funcdef_no=6271, decl_uid=187149, cgraph_uid=3247, symbol_order=4022)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return (union tree_node * function_tree)
{
  struct function_return_array * D.248745;
  struct function_return_array * D.248744;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.98;
  bool retval.91;

  <bb 2> :
  function_return_collect.92_1 = function_return_collect;
  D.248744 = hash_map<tree_node*, function_return_array>::get (function_return_collect.92_1, &function_tree);

  <bb 3> :
  _2 = D.248744;
  retval.91 = _2 == 0B;
  if (retval.91 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.93_3 = function_return_collect;
  D.248745 = hash_map<tree_node*, function_return_array>::get (function_return_collect.93_3, &function_tree);

  <bb 6> :
  _4 = D.248745;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.94_6 = function_tree;
  stderr.95_7 = stderr;
  fprintf (stderr.95_7, "=======print_function_return %d   %d========\n", function_tree.94_6, _5);

  <bb 9> :
  stderr.96_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.96_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.97_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.97_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.98 = _13 < _14;
  if (retval.98 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.99_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.99_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect2 (_Z21printfunctionCollect2P3ptbP12gimple_array, funcdef_no=6272, decl_uid=190164, cgraph_uid=3248, symbol_order=4023)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 11 7 10 9 8 6 5 4
;; 2 succs { 15 3 }
;; 3 succs { 13 }
;; 4 succs { 15 5 }
;; 5 succs { 15 6 }
;; 6 succs { 7 8 }
;; 7 succs { 11 }
;; 8 succs { 15 9 }
;; 9 succs { 15 10 }
;; 10 succs { 15 11 }
;; 11 succs { 15 12 }
;; 12 succs { 13 }
;; 13 succs { 4 14 }
;; 14 succs { 1 }
;; 15 succs { }
void printfunctionCollect2 (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.248756;
  struct function * D.248755;
  struct function * D.248754;
  struct cgraph_node * D.248753;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.100_1 = symtab;
  D.248753 = symbol_table::first_defined_function (symtab.100_1);

  <bb 3> :
  node = D.248753;
  goto <bb 13>; [INV]

  <bb 4> :
  D.248754 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.248754;
  push_cfun (_2);

  <bb 6> :
  cfun.101_3 = cfun;
  if (cfun.101_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  D.248755 = cgraph_node::get_fun (node);

  <bb 9> :
  _4 = D.248755;
  _5 = _4->decl;
  print_function_return2 (_5);

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  symtab.102_6 = symtab;
  D.248756 = symbol_table::next_defined_function (symtab.102_6, node);

  <bb 12> :
  node = D.248756;

  <bb 13> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  start = {CLOBBER};
  return;

  <bb 15> :
<L6>:
  start = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect (_Z20printfunctionCollectP3ptbP12gimple_array, funcdef_no=6273, decl_uid=190179, cgraph_uid=3249, symbol_order=4024)

Removing basic block 13
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 16 8 15 14 13 10 12 11 9 6 5 4 7
;; 2 succs { 20 3 }
;; 3 succs { 18 }
;; 4 succs { 20 5 }
;; 5 succs { 20 6 }
;; 6 succs { 7 9 }
;; 7 succs { 20 8 }
;; 8 succs { 16 }
;; 9 succs { 20 10 }
;; 10 succs { 11 13 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 20 14 }
;; 14 succs { 20 15 }
;; 15 succs { 20 16 }
;; 16 succs { 20 17 }
;; 17 succs { 18 }
;; 18 succs { 4 19 }
;; 19 succs { 1 }
;; 20 succs { }
void printfunctionCollect (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.248768;
  struct function * D.248767;
  const char * D.248766;
  const char * D.248765;
  struct function * D.248764;
  struct cgraph_node * D.248763;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.103_1 = symtab;
  D.248763 = symbol_table::first_defined_function (symtab.103_1);

  <bb 3> :
  node = D.248763;
  goto <bb 18>; [INV]

  <bb 4> :
  D.248764 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.248764;
  push_cfun (_2);

  <bb 6> :
  cfun.104_3 = cfun;
  if (cfun.104_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  pop_cfun ();

  <bb 8> :
  // predicted unlikely by continue predictor.
  goto <bb 16>; [INV]

  <bb 9> :
  cfun.105_4 = cfun;
  _5 = cfun.105_4->decl;
  D.248765 = get_name (_5);

  <bb 10> :
  name = D.248765;
  if (name != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  cfun.106_6 = cfun;
  _7 = cfun.106_6->decl;
  D.248766 = get_name (_7);

  <bb 12> :
  _8 = D.248766;
  stderr.107_9 = stderr;
  fprintf (stderr.107_9, "=======Mapping node_fun:%s=========\n", _8);

  <bb 13> :
  D.248767 = cgraph_node::get_fun (node);

  <bb 14> :
  _10 = D.248767;
  _11 = _10->decl;
  print_function_return (_11);

  <bb 15> :
  pop_cfun ();

  <bb 16> :
  symtab.108_12 = symtab;
  D.248768 = symbol_table::next_defined_function (symtab.108_12, node);

  <bb 17> :
  node = D.248768;

  <bb 18> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  start = {CLOBBER};
  return;

  <bb 20> :
<L9>:
  start = {CLOBBER};
  resx 1

}



;; Function printfPointerConstraint (_Z23printfPointerConstraintP3ptbP12gimple_array, funcdef_no=6274, decl_uid=187147, cgraph_uid=3250, symbol_order=4025)

Removing basic block 22
Removing basic block 29
Removing basic block 30
Removing basic block 33
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;;
;; Loop 1
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33 31 32 30 7 29 27 28 15 14 13 12 11 10 9 8 19 26 24 25 23 21 22 20 17 18 16 6
;;
;; Loop 2
;;  header 27, latch 26
;;  depth 2, outer 1
;;  nodes: 27 26 24 25 23 21 22 20
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 34 }
;; 6 succs { 36 7 }
;; 7 succs { 8 30 }
;; 8 succs { 36 9 }
;; 9 succs { 36 10 }
;; 10 succs { 36 11 }
;; 11 succs { 36 12 }
;; 12 succs { 36 13 }
;; 13 succs { 14 28 }
;; 14 succs { 36 15 }
;; 15 succs { 16 29 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 27 }
;; 20 succs { 21 22 }
;; 21 succs { 36 23 }
;; 22 succs { 36 23 }
;; 23 succs { 24 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 20 29 }
;; 28 succs { 36 29 }
;; 29 succs { 36 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 }
;; 34 succs { 6 35 }
;; 35 succs { 1 }
;; 36 succs { }
void printfPointerConstraint (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.248798;
  location_t loc;
  location_t loc;
  location_t loc;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.119;
  struct gimple * iftmp.116;
  struct gimple * iftmp.115;
  union tree_node * iftmp.109;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.109 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.109 = 0B;

  <bb 5> :
  t = iftmp.109;
  goto <bb 34>; [INV]

  <bb 6> :
  stderr.110_1 = stderr;
  __builtin_fwrite ("------------------- stmt -----------------------\n", 1, 49, stderr.110_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 8> :
  _3 = table_temp->last_stmt;
  loc = gimple_location_safe (_3);
  stderr.111_4 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.111_4);

  <bb 9> :
  warning_at (loc, 0, "loc");

  <bb 10> :
  _5 = table_temp->target;
  debug_tree (_5);

  <bb 11> :
  stderr.112_6 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.112_6);

  <bb 12> :
  treeGimpleArray.113_7 = treeGimpleArray;
  _8 = &table_temp->target;
  D.248798 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.113_7, _8);

  <bb 13> :
  user_tmp = D.248798;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 14> :
  _9 = user_tmp->size;
  stderr.114_10 = stderr;
  fprintf (stderr.114_10, " \n Pointer to set  is size %d :[ \n", _9);

  <bb 15> :
  _11 = user_tmp->size;
  if (_11 > 0)
    goto <bb 16>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 16> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.115 = user_tmp->stmt;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.115 = 0B;

  <bb 19> :
  u_stmt = iftmp.115;
  goto <bb 27>; [INV]

  <bb 20> :
  _12 = user_tmp->ret_stmt;
  if (_12 != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _13 = user_tmp->ret_stmt;
  loc = gimple_location_safe (_13);
  warning_at (loc, 0, "loc");
  goto <bb 23>; [INV]

  <bb 22> :
  loc = gimple_location_safe (u_stmt);
  warning_at (loc, 0, "loc");

  <bb 23> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  iftmp.116 = user_tmp->stmt;
  goto <bb 26>; [INV]

  <bb 25> :
  iftmp.116 = 0B;

  <bb 26> :
  u_stmt = iftmp.116;

  <bb 27> :
  if (user_tmp != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  stderr.117_14 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.117_14);

  <bb 29> :
  stderr.118_15 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.118_15);

  <bb 30> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.119 = table_temp->target;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.119 = 0B;

  <bb 33> :
  t = iftmp.119;

  <bb 34> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 35> :
  start = {CLOBBER};
  return;

  <bb 36> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, gimple_array>::get (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7635, decl_uid=190251, cgraph_uid=4267, symbol_order=5059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple_array * hash_map<tree_node*, gimple_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248808;
  struct hash_entry & D.248807;
  unsigned int D.248806;
  struct hash_entry & e;
  struct gimple_array * iftmp.120;
  struct gimple_array * D.248800;

  <bb 2> :
  _1 = &this->m_table;
  D.248806 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.248806;
  D.248807 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248807;
  D.248808 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  _3 = D.248808;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.120 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.120 = &e->m_value;

  <bb 5> :
  D.248800 = iftmp.120;

  <bb 6> :
<L3>:
  return D.248800;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE4hashERKS2_, funcdef_no=8467, decl_uid=190207, cgraph_uid=5099, symbol_order=5895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (union tree_node * const & h)
{
  hashval_t D.248809;

  <bb 2> :
  D.248809 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248809;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8468, decl_uid=190391, cgraph_uid=5100, symbol_order=5896)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248843;
  bool D.248842;
  bool D.248841;
  bool D.248840;
  bool D.248839;
  bool D.248838;
  struct value_type * D.248837;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.124;
  bool retval.123;
  struct value_type & D.248823;
  bool iftmp.122;
  bool retval.121;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 56;
  entry = _5 + _7;
  D.248838 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248838;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248839 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248839;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248840 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _11 = D.248840;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.122 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.122 = 0;

  <bb 8> :
  retval.121 = iftmp.122;
  if (retval.121 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248823 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  entry = _17 + _19;
  D.248841 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248841;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248842 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248842;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248843 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _23 = D.248843;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.124 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.124 = 0;

  <bb 18> :
  retval.123 = iftmp.124;
  if (retval.123 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248823 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248823;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8941, decl_uid=190487, cgraph_uid=5573, symbol_order=6369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248846;
  bool D.248844;

  <bb 2> :
  D.248846 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (v);
  D.248844 = D.248846;

  <bb 3> :
<L0>:
  return D.248844;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8846, decl_uid=190320, cgraph_uid=5478, symbol_order=6274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248849;
  bool D.248847;

  <bb 2> :
  D.248849 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.248847 = D.248849;

  <bb 3> :
<L0>:
  return D.248847;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8942, decl_uid=190485, cgraph_uid=5574, symbol_order=6370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248852;
  bool D.248850;

  <bb 2> :
  D.248852 = hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (v);
  D.248850 = D.248852;

  <bb 3> :
<L0>:
  return D.248850;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9792, decl_uid=190315, cgraph_uid=6424, symbol_order=7220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248855;
  bool D.248853;

  <bb 2> :
  D.248855 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.248853 = D.248855;

  <bb 3> :
<L0>:
  return D.248853;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10356, decl_uid=239479, cgraph_uid=6988, symbol_order=7788)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248856;

  <bb 2> :
  _1 = entry->m_key;
  D.248856 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248856;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9253, decl_uid=190308, cgraph_uid=5885, symbol_order=6681)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248860;
  bool D.248858;

  <bb 2> :
  _1 = &a->m_key;
  D.248860 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_1, b);
  D.248858 = D.248860;

  <bb 3> :
<L0>:
  return D.248858;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10equal_keysERKS2_S7_, funcdef_no=9981, decl_uid=190209, cgraph_uid=6613, symbol_order=7413)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248861;

  <bb 2> :
  D.248861 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248861;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8469, decl_uid=211736, cgraph_uid=5101, symbol_order=5897)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248863;

  <bb 2> :
  _1 = entry->m_key;
  D.248863 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248863;

}



;; Function gimple_location_safe (_ZL20gimple_location_safePK6gimple, funcdef_no=2004, decl_uid=92286, cgraph_uid=1141, symbol_order=1301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
location_t gimple_location_safe (const struct gimple * g)
{
  location_t iftmp.125;
  location_t D.248865;

  <bb 2> :
  if (g != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.125 = gimple_location (g);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.125 = 0;

  <bb 5> :
  D.248865 = iftmp.125;

  <bb 6> :
<L3>:
  return D.248865;

}



;; Function gimple_location (_ZL15gimple_locationPK6gimple, funcdef_no=2003, decl_uid=92283, cgraph_uid=1140, symbol_order=1300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
location_t gimple_location (const struct gimple * g)
{
  location_t D.248871;

  <bb 2> :
  D.248871 = g->location;

  <bb 3> :
<L0>:
  return D.248871;

}



;; Function printfPointerConstraint2 (_Z24printfPointerConstraint2P3ptbP12gimple_array, funcdef_no=6275, decl_uid=190585, cgraph_uid=3251, symbol_order=4026)

Removing basic block 19
Removing basic block 26
Removing basic block 28
Removing basic block 31
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 29 30 28 7 27 25 12 24 16 23 21 22 20 18 19 17 14 15 13 11 10 9 8 26 6
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 21 22 20 18 19 17
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 32 }
;; 6 succs { 34 7 }
;; 7 succs { 8 28 }
;; 8 succs { 34 9 }
;; 9 succs { 34 10 }
;; 10 succs { 11 26 }
;; 11 succs { 34 12 }
;; 12 succs { 13 25 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 24 }
;; 17 succs { 18 19 }
;; 18 succs { 34 20 }
;; 19 succs { 34 20 }
;; 20 succs { 21 22 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 17 25 }
;; 25 succs { 34 28 }
;; 26 succs { 34 27 }
;; 27 succs { 34 28 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 6 33 }
;; 33 succs { 1 }
;; 34 succs { }
void printfPointerConstraint2 (struct ptb * ftable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.248901;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.135;
  struct gimple * iftmp.131;
  struct gimple * iftmp.130;
  union tree_node * iftmp.126;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.126 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.126 = 0B;

  <bb 5> :
  t = iftmp.126;
  goto <bb 32>; [INV]

  <bb 6> :
  stderr.127_1 = stderr;
  __builtin_fwrite ("\n ------------------------------------------\n", 1, 45, stderr.127_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 8> :
  _3 = table_temp->target;
  debug_tree (_3);

  <bb 9> :
  treeGimpleArray.128_4 = treeGimpleArray;
  _5 = &table_temp->target;
  D.248901 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.128_4, _5);

  <bb 10> :
  user_tmp = D.248901;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 11> :
  _6 = user_tmp->size;
  stderr.129_7 = stderr;
  fprintf (stderr.129_7, " \n Pointer to set  is size %d :[ \n", _6);

  <bb 12> :
  _8 = user_tmp->size;
  if (_8 > 0)
    goto <bb 13>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 13> :
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.130 = user_tmp->stmt;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.130 = 0B;

  <bb 16> :
  u_stmt = iftmp.130;
  goto <bb 24>; [INV]

  <bb 17> :
  _9 = user_tmp->ret_stmt;
  if (_9 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _10 = user_tmp->ret_stmt;
  debug (_10);
  goto <bb 20>; [INV]

  <bb 19> :
  debug (u_stmt);

  <bb 20> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.131 = user_tmp->stmt;
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.131 = 0B;

  <bb 23> :
  u_stmt = iftmp.131;

  <bb 24> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  stderr.132_11 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.132_11);
  goto <bb 28>; [INV]

  <bb 26> :
  stderr.133_12 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.133_12);

  <bb 27> :
  stderr.134_13 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.134_13);

  <bb 28> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  iftmp.135 = table_temp->target;
  goto <bb 31>; [INV]

  <bb 30> :
  iftmp.135 = 0B;

  <bb 31> :
  t = iftmp.135;

  <bb 32> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  start = {CLOBBER};
  return;

  <bb 34> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function set_ptb (_Z7set_ptbP15basic_block_defP3ptbP9tree_nodejiP6gimpleP11cgraph_node, funcdef_no=6276, decl_uid=190607, cgraph_uid=3252, symbol_order=4027)

Removing basic block 4
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 15 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 6 10 }
;; 10 succs { 11 15 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
void set_ptb (struct basic_block_def * b, struct ptb * table, union tree_node * t, location_t l, int s, struct gimple * stmt, struct cgraph_node * node)
{
  struct function * D.248924;
  bool D.248923;
  void * D.248922;
  struct function * D.248921;
  bool D.248920;
  bool same;
  bool retval.139;
  void * D.190610;
  bool retval.137;

  <bb 2> :
  _1 = table->target;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  pointtablecount.136_2 = pointtablecount;
  _3 = pointtablecount.136_2 + 1;
  pointtablecount = _3;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.248920 = bb_in_branch_p (stmt);
  _4 = D.248920;
  table->inbranch = _4;
  D.248921 = cgraph_node::get_fun (node);
  _5 = D.248921;
  table->fun = _5;
  _6 = gimple_code (stmt);
  retval.137 = _6 == 18;

  <bb 4> :
  table->removed = 0;
  _7 = table->size;
  _8 = _7 + 1;
  table->size = _8;
  goto <bb 15>; [INV]

  <bb 5> :
  same = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  _9 = table->target;
  if (t == _9)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  same = 1;

  <bb 8> :
  table = table->next;

  <bb 9> :
  _10 = table->next;
  if (_10 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _11 = ~same;
  if (_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  pointtablecount.138_12 = pointtablecount;
  _13 = pointtablecount.138_12 + 1;
  pointtablecount = _13;
  D.248922 = operator new (120);
  D.190610 = D.248922;
  MEM[(struct ptb *)D.190610] = {};
  ptb::ptb (D.190610);
  table->next = D.190610;
  table = table->next;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.248923 = bb_in_branch_p (stmt);
  _14 = D.248923;
  table->inbranch = _14;
  D.248924 = cgraph_node::get_fun (node);
  _15 = D.248924;
  table->fun = _15;
  _16 = gimple_code (stmt);
  retval.139 = _16 == 18;
  if (retval.139 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  table->is_phi_stmt = 1;
  goto <bb 14>; [INV]

  <bb 13> :
  table->is_phi_stmt = 0;

  <bb 14> :
  table->removed = 0;
  _17 = table->size;
  _18 = _17 + 1;
  table->size = _18;

  <bb 15> :
  return;

}



;; Function ptb::ptb (_ZN3ptbC2Ev, funcdef_no=6177, decl_uid=169246, cgraph_uid=3153, symbol_order=3875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ptb::ptb (struct ptb * const this)
{
  <bb 2> :
  this->swap_target = 0B;
  this->swap_type = 0;
  this->pthread_type = 0;
  this->size = 0;
  return;

}



;; Function gimple_code (_ZL11gimple_codePK6gimple, funcdef_no=1996, decl_uid=92240, cgraph_uid=1133, symbol_order=1293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
gimple_code gimple_code (const struct gimple * g)
{
  gimple_code D.248925;

  <bb 2> :
  _1 = g->code;
  D.248925 = (gimple_code) _1;

  <bb 3> :
<L0>:
  return D.248925;

}



;; Function set_gimple_array (_Z16set_gimple_arrayP12gimple_arrayP6gimpleP9tree_nodeS4_S2_, funcdef_no=6277, decl_uid=190620, cgraph_uid=3253, symbol_order=4028)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
void set_gimple_array (struct gimple_array * table, struct gimple * used_stmt, union tree_node * fucntion, union tree_node * target, struct gimple * ret_stmt)
{
  void * D.248936;
  int size_tmp;
  bool same;
  void * D.190624;

  <bb 2> :
  _1 = table->stmt;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->aptr = fucntion;
  table->target = target;
  table->size = 1;
  table->next = 0B;
  goto <bb 11>; [INV]

  <bb 4> :
  same = 0;
  size_tmp = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  _2 = table->stmt;
  if (used_stmt == _2)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  same = 1;

  <bb 7> :
  size_tmp = size_tmp + 1;
  table = table->next;

  <bb 8> :
  _3 = table->next;
  if (_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _4 = ~same;
  if (_4 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.248936 = operator new (48);
  D.190624 = D.248936;
  MEM[(struct gimple_array *)D.190624].stmt = 0B;
  MEM[(struct gimple_array *)D.190624].ret_stmt = 0B;
  MEM[(struct gimple_array *)D.190624].aptr = 0B;
  MEM[(struct gimple_array *)D.190624].target = 0B;
  MEM[(struct gimple_array *)D.190624].next = 0B;
  MEM[(struct gimple_array *)D.190624].size = 0;
  gimple_array::gimple_array (D.190624);
  table->next = D.190624;
  table = table->next;
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->target = target;
  table->size = size_tmp;
  table->aptr = fucntion;
  table->next = 0B;

  <bb 11> :
  return;

}



;; Function ret_function_varstmt (_Z20ret_function_varstmtP9tree_node, funcdef_no=6278, decl_uid=187113, cgraph_uid=3280, symbol_order=4055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 13 3 }
;; 3 succs { 4 9 }
;; 4 succs { 12 5 }
;; 5 succs { 12 6 }
;; 6 succs { 12 7 }
;; 7 succs { 11 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { }
struct function_assign_array ret_function_varstmt (union tree_node * function_tree)
{
  struct function_assign_array * D.248944;
  struct function_assign_array * D.248943;
  struct vector assign_type_array;
  struct function_assign_array assign_array [value-expr: *<retval>];
  bool retval.140;

  <bb 2> :
  function_assign_array::function_assign_array (<retval>);
  function_assign_collect.141_1 = function_assign_collect;
  D.248943 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.141_1, &function_tree);

  <bb 3> :
  _2 = D.248943;
  retval.140 = _2 != 0B;
  if (retval.140 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  function_assign_collect.142_3 = function_assign_collect;
  D.248944 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.142_3, &function_tree);

  <bb 5> :
  _4 = D.248944;
  function_assign_array::operator= (<retval>, _4);

  <bb 6> :
  _5 = &<retval>->assign_type_array;
  std::vector<assign_type>::vector (&assign_type_array, _5);

  <bb 7> :
  <retval>->pass = 1;
  function_assign_collect.143_6 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.143_6, &function_tree, <retval>);

  <bb 8> :
  std::vector<assign_type>::~vector (&assign_type_array);
  assign_type_array = {CLOBBER};

  <bb 9> :

  <bb 10> :
<L3>:
  return <retval>;

  <bb 11> :
<L4>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 12> :
<L5>:
  assign_type_array = {CLOBBER};
  resx 2

  <bb 13> :
<L6>:
  function_assign_array::~function_assign_array (<retval>);
  resx 1

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2Ev, funcdef_no=6290, decl_uid=190637, cgraph_uid=3265, symbol_order=4040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  this->pass = 0;
  _1 = &this->assign_type_array;
  std::vector<assign_type>::vector (_1);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2Ev, funcdef_no=6288, decl_uid=176699, cgraph_uid=3262, symbol_order=4037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176707;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2Ev, funcdef_no=6286, decl_uid=176157, cgraph_uid=3259, symbol_order=4034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7637, decl_uid=176049, cgraph_uid=4269, symbol_order=5061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this);
  _1 = &this->D.176052;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2Ev, funcdef_no=8471, decl_uid=175827, cgraph_uid=5103, symbol_order=5899)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2Ev, funcdef_no=9255, decl_uid=175756, cgraph_uid=5887, symbol_order=6683)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8474, decl_uid=175999, cgraph_uid=5106, symbol_order=5902)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::get (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7648, decl_uid=190870, cgraph_uid=4280, symbol_order=5072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_assign_array * hash_map<tree_node*, function_assign_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248956;
  struct hash_entry & D.248955;
  unsigned int D.248954;
  struct hash_entry & e;
  struct function_assign_array * iftmp.144;
  struct function_assign_array * D.248948;

  <bb 2> :
  _1 = &this->m_table;
  D.248954 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.248954;
  D.248955 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248955;
  D.248956 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  _3 = D.248956;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.144 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.144 = &e->m_value;

  <bb 5> :
  D.248948 = iftmp.144;

  <bb 6> :
<L3>:
  return D.248948;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE4hashERKS2_, funcdef_no=8482, decl_uid=190826, cgraph_uid=5114, symbol_order=5910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (union tree_node * const & h)
{
  hashval_t D.248957;

  <bb 2> :
  D.248957 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248957;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8483, decl_uid=191013, cgraph_uid=5115, symbol_order=5911)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248991;
  bool D.248990;
  bool D.248989;
  bool D.248988;
  bool D.248987;
  bool D.248986;
  struct value_type * D.248985;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.148;
  bool retval.147;
  struct value_type & D.248971;
  bool iftmp.146;
  bool retval.145;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.248986 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248986;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248987 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248987;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248988 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _11 = D.248988;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.146 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.146 = 0;

  <bb 8> :
  retval.145 = iftmp.146;
  if (retval.145 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248971 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.248989 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248989;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248990 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248990;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248991 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _23 = D.248991;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.148 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.148 = 0;

  <bb 18> :
  retval.147 = iftmp.148;
  if (retval.147 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248971 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248971;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8957, decl_uid=191109, cgraph_uid=5589, symbol_order=6385)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248994;
  bool D.248992;

  <bb 2> :
  D.248994 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (v);
  D.248992 = D.248994;

  <bb 3> :
<L0>:
  return D.248992;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8505, decl_uid=190939, cgraph_uid=5137, symbol_order=5933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248997;
  bool D.248995;

  <bb 2> :
  D.248997 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.248995 = D.248997;

  <bb 3> :
<L0>:
  return D.248995;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8958, decl_uid=191107, cgraph_uid=5590, symbol_order=6386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.249000;
  bool D.248998;

  <bb 2> :
  D.249000 = hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (v);
  D.248998 = D.249000;

  <bb 3> :
<L0>:
  return D.248998;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9800, decl_uid=190934, cgraph_uid=6432, symbol_order=7228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.249003;
  bool D.249001;

  <bb 2> :
  D.249003 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.249001 = D.249003;

  <bb 3> :
<L0>:
  return D.249001;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10362, decl_uid=239503, cgraph_uid=6994, symbol_order=7794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249004;

  <bb 2> :
  _1 = entry->m_key;
  D.249004 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.249004;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9260, decl_uid=190927, cgraph_uid=5892, symbol_order=6688)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.249008;
  bool D.249006;

  <bb 2> :
  _1 = &a->m_key;
  D.249008 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_1, b);
  D.249006 = D.249008;

  <bb 3> :
<L0>:
  return D.249006;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10equal_keysERKS2_S7_, funcdef_no=9986, decl_uid=190828, cgraph_uid=6618, symbol_order=7418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.249009;

  <bb 2> :
  D.249009 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.249009;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8484, decl_uid=211773, cgraph_uid=5116, symbol_order=5912)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249011;

  <bb 2> :
  _1 = entry->m_key;
  D.249011 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.249011;

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSERKS_, funcdef_no=6295, decl_uid=191195, cgraph_uid=3270, symbol_order=4045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, const struct function_assign_array & D.191196)
{
  struct function_assign_array & D.249013;

  <bb 2> :
  _1 = D.191196->pass;
  this->pass = _1;
  _2 = &D.191196->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.249013 = this;

  <bb 3> :
<L0>:
  return D.249013;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSERKS2_, funcdef_no=7649, decl_uid=176285, cgraph_uid=4282, symbol_order=5074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.249048;
  struct assign_type * __tmp;
  const size_type __xlen;
  struct vector & D.249046;
  struct __normal_iterator D.249043;
  struct __normal_iterator D.249042;
  struct __normal_iterator D.249041;
  struct __normal_iterator D.249040;
  struct __normal_iterator D.249039;
  bool retval.153;
  struct __normal_iterator D.249034;
  struct __normal_iterator D.249033;
  bool retval.152;
  bool iftmp.151;
  bool retval.150;
  bool retval.149;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.149 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ();
  if (retval.149 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.176707;
  _4 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.176707;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.151 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.151 = 0;

  <bb 8> :
  retval.150 = iftmp.151;
  if (retval.150 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<assign_type>::clear (this);
  _8 = &this->D.176707;
  _9 = this->D.176707._M_impl.D.176052._M_end_of_storage;
  _10 = this->D.176707._M_impl.D.176052._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.176707._M_impl.D.176052._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_8, _14, _13);
  this->D.176707._M_impl.D.176052._M_start = 0B;
  this->D.176707._M_impl.D.176052._M_finish = 0B;
  this->D.176707._M_impl.D.176052._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.176707;
  _16 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.176707;
  _18 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<assign_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<assign_type>::size (__x);
  _19 = std::vector<assign_type>::capacity (this);
  retval.152 = __xlen > _19;
  if (retval.152 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.249033 = std::vector<assign_type>::end (__x);
  D.249034 = std::vector<assign_type>::begin (__x);
  D.249048 = std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (this, __xlen, D.249034, D.249033);
  __tmp = D.249048;
  _20 = &this->D.176707;
  _21 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.176707._M_impl.D.176052._M_finish;
  _23 = this->D.176707._M_impl.D.176052._M_start;
  std::_Destroy<assign_type*, assign_type> (_23, _22, _21);
  _24 = &this->D.176707;
  _25 = this->D.176707._M_impl.D.176052._M_end_of_storage;
  _26 = this->D.176707._M_impl.D.176052._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.176707._M_impl.D.176052._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_24, _30, _29);
  this->D.176707._M_impl.D.176052._M_start = __tmp;
  _31 = this->D.176707._M_impl.D.176052._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.176707._M_impl.D.176052._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<assign_type>::size (this);
  retval.153 = __xlen <= _34;
  if (retval.153 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.176707;
  _36 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_35);
  D.249039 = std::vector<assign_type>::end (this);
  D.249040 = std::vector<assign_type>::begin (this);
  D.249041 = std::vector<assign_type>::end (__x);
  D.249042 = std::vector<assign_type>::begin (__x);
  D.249043 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.249042, D.249041, D.249040);
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (D.249043, D.249039, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.176707._M_impl.D.176052._M_start;
  _38 = __x->D.176707._M_impl.D.176052._M_start;
  _39 = std::vector<assign_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.176707._M_impl.D.176052._M_start;
  std::copy<assign_type*, assign_type*> (_42, _41, _37);
  _43 = &this->D.176707;
  _44 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.176707._M_impl.D.176052._M_finish;
  _46 = __x->D.176707._M_impl.D.176052._M_finish;
  _47 = __x->D.176707._M_impl.D.176052._M_start;
  _48 = std::vector<assign_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.176707._M_impl.D.176052._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.176707._M_impl.D.176052._M_finish = _53;

  <bb 17> :
  D.249046 = this;

  <bb 18> :
<L19>:
  return D.249046;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7650, decl_uid=175919, cgraph_uid=4281, symbol_order=5073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ()
{
  bool D.249049;

  <bb 2> :
  D.249049 = 0;

  <bb 3> :
<L0>:
  return D.249049;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E15_S_always_equalEv, funcdef_no=6431, decl_uid=175922, cgraph_uid=3405, symbol_order=4186)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ()
{
  bool D.249051;

  <bb 2> :
  D.249051 = 1;

  <bb 3> :
<L0>:
  return D.249051;

}



;; Function std::operator!= (_ZStneRKSaI11assign_typeES2_, funcdef_no=8486, decl_uid=175805, cgraph_uid=5118, symbol_order=5914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.222421, const struct allocator & D.222422)
{
  bool D.249053;

  <bb 2> :
  D.249053 = 0;

  <bb 3> :
<L0>:
  return D.249053;

}



;; Function std::vector<assign_type>::clear (_ZNSt6vectorI11assign_typeSaIS0_EE5clearEv, funcdef_no=8487, decl_uid=176437, cgraph_uid=5119, symbol_order=5915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.176707._M_impl.D.176052._M_start;
  std::vector<assign_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<assign_type>::_M_erase_at_end (_ZNSt6vectorI11assign_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9261, decl_uid=176565, cgraph_uid=5893, symbol_order=6689)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<assign_type>::_M_erase_at_end (struct vector * const this, struct assign_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.176707._M_impl.D.176052._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.176707;
  _5 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.176707._M_impl.D.176052._M_finish;
  std::_Destroy<assign_type*, assign_type> (__pos, _6, _5);
  this->D.176707._M_impl.D.176052._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8485, decl_uid=175942, cgraph_uid=5117, symbol_order=5913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.249058;

  <bb 2> :
  D.249058 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249058;

}



;; Function std::__alloc_on_copy<std::allocator<assign_type> > (_ZSt15__alloc_on_copyISaI11assign_typeEEvRT_RKS2_, funcdef_no=8488, decl_uid=211796, cgraph_uid=5120, symbol_order=5916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<assign_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::capacity (_ZNKSt6vectorI11assign_typeSaIS0_EE8capacityEv, funcdef_no=8489, decl_uid=176353, cgraph_uid=5121, symbol_order=5917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::capacity (const struct vector * const this)
{
  size_type D.249060;

  <bb 2> :
  _1 = this->D.176707._M_impl.D.176052._M_end_of_storage;
  _2 = this->D.176707._M_impl.D.176052._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249060 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249060;

}



;; Function std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZNSt6vectorI11assign_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8492, decl_uid=211900, cgraph_uid=5124, symbol_order=5920)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct assign_type * std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct assign_type * D.249064;
  struct assign_type * __result;
  struct assign_type * D.249062;

  <bb 2> :
  _1 = &this->D.176707;
  D.249064 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_1, __n);
  __result = D.249064;
  _2 = &this->D.176707;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (__first, __last, __result, _3);

  <bb 3> :
  D.249062 = __result;

  <bb 4> :
<L0>:
  return D.249062;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.176707;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE11_M_allocateEm, funcdef_no=9265, decl_uid=176056, cgraph_uid=5897, symbol_order=6693)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct assign_type * std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.249074;
  struct assign_type * iftmp.154;
  struct assign_type * D.249068;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.249074 = std::allocator_traits<std::allocator<assign_type> >::allocate (_1, __n);
  iftmp.154 = D.249074;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.154 = 0B;

  <bb 5> :
  D.249068 = iftmp.154;

  <bb 6> :
<L3>:
  return D.249068;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::allocate (_ZNSt16allocator_traitsISaI11assign_typeEE8allocateERS1_m, funcdef_no=9987, decl_uid=175857, cgraph_uid=6619, symbol_order=7419)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct assign_type * std::allocator_traits<std::allocator<assign_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct assign_type * D.249077;
  struct assign_type * D.249075;

  <bb 2> :
  D.249077 = __gnu_cxx::new_allocator<assign_type>::allocate (__a, __n, 0B);
  D.249075 = D.249077;

  <bb 3> :
<L0>:
  return D.249075;

}



;; Function __gnu_cxx::new_allocator<assign_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE8allocateEmPKv, funcdef_no=10524, decl_uid=175711, cgraph_uid=7157, symbol_order=7957)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct assign_type * __gnu_cxx::new_allocator<assign_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245097)
{
  struct assign_type * D.249088;
  struct assign_type * D.249087;
  align_val_t __al;
  struct assign_type * D.249085;
  bool retval.155;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.155 = _4 != 0;
  if (retval.155 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.249088 = operator new (_6);
  D.249085 = D.249088;

  <bb 7> :
<L6>:
  return D.249085;

}



;; Function __gnu_cxx::new_allocator<assign_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE11_M_max_sizeEv, funcdef_no=10525, decl_uid=175738, cgraph_uid=7156, symbol_order=7956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.249089;

  <bb 2> :
  D.249089 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.249089;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8503, decl_uid=212034, cgraph_uid=5135, symbol_order=5931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result, struct allocator & D.222588)
{
  struct assign_type * D.249093;
  struct assign_type * D.249091;

  <bb 2> :
  D.249093 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.249091 = D.249093;

  <bb 3> :
<L0>:
  return D.249091;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9282, decl_uid=222590, cgraph_uid=5914, symbol_order=6710)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249096;
  const bool __assignable;
  struct assign_type * D.249094;

  <bb 2> :
  __assignable = 1;
  D.249096 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.249094 = D.249096;

  <bb 3> :
<L0>:
  return D.249094;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9997, decl_uid=234578, cgraph_uid=6629, symbol_order=7429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249099;
  struct assign_type * D.249097;

  <bb 2> :
  D.249099 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.249097 = D.249099;

  <bb 3> :
<L0>:
  return D.249097;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10530, decl_uid=241651, cgraph_uid=7162, symbol_order=7962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249104;
  struct __normal_iterator D.249102;
  struct __normal_iterator D.249101;
  struct assign_type * D.249100;

  <bb 2> :
  D.249101 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.249102 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.249104 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (D.249102, D.249101, __result);
  D.249100 = D.249104;

  <bb 3> :
<L0>:
  return D.249100;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9269, decl_uid=222507, cgraph_uid=5901, symbol_order=6697)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.249105;

  <bb 2> :
  D.249105 = __it;

  <bb 3> :
<L0>:
  return D.249105;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10849, decl_uid=245155, cgraph_uid=7481, symbol_order=8283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249109;
  struct assign_type * D.249107;

  <bb 2> :
  __result.156_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.156_1);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _4 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.249109 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.249109;
  D.249107 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.249107;

}



;; Function std::__niter_base<assign_type*> (_ZSt12__niter_baseIP11assign_typeET_S2_, funcdef_no=9993, decl_uid=225130, cgraph_uid=6625, symbol_order=7425)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.249110;

  <bb 2> :
  D.249110 = __it;

  <bb 3> :
<L0>:
  return D.249110;

}



;; Function std::__niter_base<const assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIPK11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=9988, decl_uid=234226, cgraph_uid=6620, symbol_order=7420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * std::__niter_base<const assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  const struct assign_type * D.249112;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (&__it);
  D.249112 = *_1;

  <bb 3> :
<L0>:
  return D.249112;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10526, decl_uid=211867, cgraph_uid=7158, symbol_order=7958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * const & __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  const struct assign_type * const & D.249114;

  <bb 2> :
  D.249114 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249114;

}



;; Function std::__copy_move_a1<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=9990, decl_uid=234380, cgraph_uid=6622, symbol_order=7422)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249118;
  struct assign_type * D.249116;

  <bb 2> :
  D.249118 = std::__copy_move_a2<false, const assign_type*, assign_type*> (__first, __last, __result);
  D.249116 = D.249118;

  <bb 3> :
<L0>:
  return D.249116;

}



;; Function std::__copy_move_a2<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=10527, decl_uid=241618, cgraph_uid=7159, symbol_order=7959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249119;

  <bb 2> :
  D.249119 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249119;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11assign_typeEEPT_PKS4_S7_S5_, funcdef_no=10848, decl_uid=245129, cgraph_uid=7480, symbol_order=8282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  const ptrdiff_t _Num;
  struct assign_type * D.249124;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.157_2 = (long unsigned int) _Num;
  _3 = _Num.157_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.158_4 = (long unsigned int) _Num;
  _5 = _Num.158_4 * 24;
  D.249124 = __result + _5;

  <bb 5> :
<L3>:
  return D.249124;

}



;; Function std::__niter_wrap<assign_type*> (_ZSt12__niter_wrapIP11assign_typeET_RKS2_S2_, funcdef_no=9995, decl_uid=234423, cgraph_uid=6627, symbol_order=7427)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_wrap<assign_type*> (struct assign_type * const & D.241640, struct assign_type * __res)
{
  struct assign_type * D.249126;

  <bb 2> :
  D.249126 = __res;

  <bb 3> :
<L0>:
  return D.249126;

}



;; Function std::_Destroy<assign_type*, assign_type> (_ZSt8_DestroyIP11assign_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8481, decl_uid=211757, cgraph_uid=5113, symbol_order=5909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct allocator & D.222401)
{
  <bb 2> :
  std::_Destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<assign_type*> (_ZSt8_DestroyIP11assign_typeEvT_S2_, funcdef_no=9258, decl_uid=222403, cgraph_uid=5890, symbol_order=6686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*> (struct assign_type * __first, struct assign_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<assign_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11assign_typeEEvT_S4_, funcdef_no=9983, decl_uid=234186, cgraph_uid=6615, symbol_order=7415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<assign_type*> (struct assign_type * D.241594, struct assign_type * D.241595)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8479, decl_uid=176059, cgraph_uid=5111, symbol_order=5907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (struct _Vector_base * const this, struct assign_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<assign_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::deallocate (_ZNSt16allocator_traitsISaI11assign_typeEE10deallocateERS1_PS0_m, funcdef_no=9257, decl_uid=175864, cgraph_uid=5889, symbol_order=6685)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::deallocate (struct allocator_type & __a, struct assign_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE10deallocateEPS1_m, funcdef_no=9982, decl_uid=175715, cgraph_uid=6614, symbol_order=7414)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::deallocate (struct new_allocator * const this, struct assign_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<assign_type>::end (_ZNSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8495, decl_uid=176320, cgraph_uid=5127, symbol_order=5923)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::end (struct vector * const this)
{
  struct iterator D.222541;
  struct iterator D.249134;

  <bb 2> :
  _1 = &this->D.176707._M_impl.D.176052._M_finish;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222541, _1);
  D.249134 = D.222541;
  D.222541 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249134;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9267, decl_uid=211982, cgraph_uid=5899, symbol_order=6695)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8493, decl_uid=176316, cgraph_uid=5125, symbol_order=5921)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::begin (struct vector * const this)
{
  struct iterator D.222495;
  struct iterator D.249137;

  <bb 2> :
  _1 = &this->D.176707._M_impl.D.176052._M_start;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222495, _1);
  D.249137 = D.222495;
  D.222495 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249137;

}



;; Function std::vector<assign_type>::end (_ZNKSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8491, decl_uid=176322, cgraph_uid=5123, symbol_order=5919)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::end (const struct vector * const this)
{
  struct const_iterator D.222457;
  struct const_iterator D.249140;

  <bb 2> :
  _1 = &this->D.176707._M_impl.D.176052._M_finish;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222457, _1);
  D.249140 = D.222457;
  D.222457 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249140;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9263, decl_uid=211880, cgraph_uid=5895, symbol_order=6691)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, const struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNKSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8490, decl_uid=176318, cgraph_uid=5122, symbol_order=5918)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222455;
  struct const_iterator D.249143;

  <bb 2> :
  _1 = &this->D.176707._M_impl.D.176052._M_start;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222455, _1);
  D.249143 = D.222455;
  D.222455 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249143;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8494, decl_uid=212001, cgraph_uid=5126, symbol_order=5922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.249148;
  struct __normal_iterator D.249147;
  struct __normal_iterator D.249146;

  <bb 2> :
  D.249147 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.249148 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.249146 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.249148, D.249147, __result);

  <bb 3> :
<L0>:
  return D.249146;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9270, decl_uid=222513, cgraph_uid=5903, symbol_order=6699)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct assign_type * D.249152;
  struct __normal_iterator D.249150;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__result);
  _2 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.249152 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_3, _2, _1);
  _4 = D.249152;
  D.249150 = std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.249150;

}



;; Function std::__niter_base<assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIP11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=9989, decl_uid=234377, cgraph_uid=6621, symbol_order=7421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  struct assign_type * D.249153;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__it);
  D.249153 = *_1;

  <bb 3> :
<L0>:
  return D.249153;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9450, decl_uid=211969, cgraph_uid=6082, symbol_order=6878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * const & __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  struct assign_type * const & D.249155;

  <bb 2> :
  D.249155 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249155;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=9991, decl_uid=234384, cgraph_uid=6623, symbol_order=7423)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __from, struct assign_type * __res)
{
  struct __normal_iterator D.249157;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.249157 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.249157;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10528, decl_uid=211960, cgraph_uid=7160, symbol_order=7960)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct assign_type * const D.245135;
  struct __normal_iterator D.245136;
  struct __normal_iterator D.249159;

  <bb 2> :
  _1 = this->_M_current;
  __n.159_2 = (long unsigned int) __n;
  _3 = __n.159_2 * 24;
  _4 = _1 + _3;
  D.245135 = _4;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.245136, &D.245135);
  D.249159 = D.245136;
  D.245136 = {CLOBBER};
  D.245135 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.249159;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8496, decl_uid=212007, cgraph_uid=5128, symbol_order=5924)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.222544)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9272, decl_uid=222546, cgraph_uid=5904, symbol_order=6700)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=9992, decl_uid=234408, cgraph_uid=6624, symbol_order=7424)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator D.241627, struct __normal_iterator D.241628)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<assign_type*, assign_type*> (_ZSt4copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=8497, decl_uid=212015, cgraph_uid=5129, symbol_order=5925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249165;
  struct assign_type * D.249163;

  <bb 2> :
  _1 = std::__miter_base<assign_type*> (__last);
  _2 = std::__miter_base<assign_type*> (__first);
  D.249165 = std::__copy_move_a<false, assign_type*, assign_type*> (_2, _1, __result);
  D.249163 = D.249165;

  <bb 3> :
<L0>:
  return D.249163;

}



;; Function std::__miter_base<assign_type*> (_ZSt12__miter_baseIP11assign_typeET_S2_, funcdef_no=9273, decl_uid=222562, cgraph_uid=5905, symbol_order=6701)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__miter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.249166;

  <bb 2> :
  D.249166 = __it;

  <bb 3> :
<L0>:
  return D.249166;

}



;; Function std::__copy_move_a<false, assign_type*, assign_type*> (_ZSt13__copy_move_aILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=9274, decl_uid=222564, cgraph_uid=5906, symbol_order=6702)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249170;
  struct assign_type * D.249168;

  <bb 2> :
  __result.160_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.160_1);
  _3 = std::__niter_base<assign_type*> (__last);
  _4 = std::__niter_base<assign_type*> (__first);
  D.249170 = std::__copy_move_a1<false, assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.249170;
  D.249168 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.249168;

}



;; Function std::__copy_move_a1<false, assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=9994, decl_uid=234419, cgraph_uid=6626, symbol_order=7426)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249173;
  struct assign_type * D.249171;

  <bb 2> :
  D.249173 = std::__copy_move_a2<false, assign_type*, assign_type*> (__first, __last, __result);
  D.249171 = D.249173;

  <bb 3> :
<L0>:
  return D.249171;

}



;; Function std::__copy_move_a2<false, assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=10529, decl_uid=241636, cgraph_uid=7161, symbol_order=7961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249174;

  <bb 2> :
  D.249174 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249174;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8480, decl_uid=175940, cgraph_uid=5112, symbol_order=5908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.249176;

  <bb 2> :
  D.249176 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249176;

}



;; Function std::vector<assign_type>::size (_ZNKSt6vectorI11assign_typeSaIS0_EE4sizeEv, funcdef_no=7658, decl_uid=176340, cgraph_uid=4290, symbol_order=5082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::size (const struct vector * const this)
{
  size_type D.249178;

  <bb 2> :
  _1 = this->D.176707._M_impl.D.176052._M_finish;
  _2 = this->D.176707._M_impl.D.176052._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249178 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249178;

}



;; Function std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIP11assign_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8498, decl_uid=212019, cgraph_uid=5130, symbol_order=5926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.222571)
{
  struct assign_type * D.249182;
  struct assign_type * D.249180;

  <bb 2> :
  D.249182 = std::uninitialized_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.249180 = D.249182;

  <bb 3> :
<L0>:
  return D.249180;

}



;; Function std::uninitialized_copy<assign_type*, assign_type*> (_ZSt18uninitialized_copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=9275, decl_uid=222573, cgraph_uid=5908, symbol_order=6704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249185;
  const bool __assignable;
  struct assign_type * D.249183;

  <bb 2> :
  __assignable = 1;
  D.249185 = std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.249183 = D.249185;

  <bb 3> :
<L0>:
  return D.249183;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP11assign_typeS3_EET0_T_S5_S4_, funcdef_no=9996, decl_uid=234522, cgraph_uid=6628, symbol_order=7428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249188;
  struct assign_type * D.249186;

  <bb 2> :
  D.249188 = std::copy<assign_type*, assign_type*> (__first, __last, __result);
  D.249186 = D.249188;

  <bb 3> :
<L0>:
  return D.249186;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS2_, funcdef_no=7652, decl_uid=176670, cgraph_uid=4284, symbol_order=5076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<assign_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.249193;
  struct __normal_iterator D.249190;
  struct __normal_iterator D.249189;
  struct allocator D.212045;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176707;
  _2 = &__x->D.176707;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  D.212045 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<assign_type>::size (__x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _4, &D.212045);

  <bb 3> :
  std::allocator<assign_type>::~allocator (&D.212045);
  D.212045 = {CLOBBER};
  _5 = &this->D.176707;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.176707._M_impl.D.176052._M_start;
  D.249189 = std::vector<assign_type>::end (__x);
  D.249190 = std::vector<assign_type>::begin (__x);
  D.249193 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (D.249190, D.249189, _7, _6);

  <bb 4> :
  _8 = D.249193;
  this->D.176707._M_impl.D.176052._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<assign_type>::~allocator (&D.212045);
  resx 2

  <bb 6> :
<L1>:
  D.212045 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.176707;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8499, decl_uid=175914, cgraph_uid=5131, symbol_order=5927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11assign_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9277, decl_uid=175879, cgraph_uid=5909, symbol_order=6705)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<assign_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2ERKS0_, funcdef_no=8508, decl_uid=175822, cgraph_uid=5140, symbol_order=5936)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2ERKS2_, funcdef_no=9289, decl_uid=175751, cgraph_uid=5921, symbol_order=6717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.175753)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EmRKS1_, funcdef_no=8501, decl_uid=176139, cgraph_uid=5133, symbol_order=5929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9279, decl_uid=176044, cgraph_uid=5911, symbol_order=6707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this, __a);
  _1 = &this->D.176052;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9281, decl_uid=176063, cgraph_uid=5913, symbol_order=6709)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.249200;

  <bb 2> :
  D.249200 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (this, __n);
  _1 = D.249200;
  this->_M_impl.D.176052._M_start = _1;
  _2 = this->_M_impl.D.176052._M_start;
  this->_M_impl.D.176052._M_finish = _2;
  _3 = this->_M_impl.D.176052._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.176052._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6284, decl_uid=176099, cgraph_uid=3256, symbol_order=4031)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<assign_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<assign_type>::~allocator (_ZNSaI11assign_typeED2Ev, funcdef_no=7640, decl_uid=175832, cgraph_uid=4272, symbol_order=5064)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeED2Ev, funcdef_no=8477, decl_uid=175761, cgraph_uid=5109, symbol_order=5905)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EED2Ev, funcdef_no=7643, decl_uid=176162, cgraph_uid=4275, symbol_order=5067)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.176052._M_end_of_storage;
  _2 = this->_M_impl.D.176052._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.176052._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::put (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7654, decl_uid=190866, cgraph_uid=4286, symbol_order=5078)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_assign_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_assign_array & v)
{
  bool D.249208;
  struct hash_entry * D.249207;
  unsigned int D.249206;
  bool ins;
  struct hash_entry * e;
  bool D.249204;
  void * D.212055;
  void * D.212054;

  <bb 2> :
  _1 = &this->m_table;
  D.249206 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.249206;
  D.249207 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.249207;
  D.249208 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (e);
  ins = D.249208;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212054 = &e->m_value;
  D.212055 = operator new (32, D.212054);
  function_assign_array::function_assign_array (D.212055, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_assign_array::operator= (_4, v);

  <bb 5> :
  D.249204 = ~ins;

  <bb 6> :
<L3>:
  return D.249204;

  <bb 7> :
<L4>:
  operator delete (D.212055, D.212054);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8504, decl_uid=191024, cgraph_uid=5136, symbol_order=5932)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.249259;
  bool D.249258;
  bool D.249257;
  bool D.249256;
  bool D.249255;
  bool D.249254;
  struct value_type * D.249253;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.166;
  bool retval.165;
  bool retval.164;
  bool retval.163;
  bool retval.162;
  bool retval.161;
  struct value_type * D.249215;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.249254 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.161 = D.249254;
  if (retval.161 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.249255 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.162 = D.249255;
  if (retval.162 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.249256 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.163 = D.249256;
  if (retval.163 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.249215 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.249257 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.164 = D.249257;
  if (retval.164 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.249258 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.165 = D.249258;
  if (retval.165 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.249259 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.166 = D.249259;
  if (retval.166 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.249215 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.249215 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.249215 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.249215 = _37 + _39;

  <bb 27> :
<L37>:
  return D.249215;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9283, decl_uid=191105, cgraph_uid=5918, symbol_order=6714)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.249290;
  unsigned int D.249289;
  bool D.249288;
  bool D.249287;
  struct mem_alloc_description & D.249286;
  struct value_type * D.249285;
  unsigned int D.249284;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234604;
  void * D.234603;
  struct hash_entry & D.234632;
  bool iftmp.170;
  bool retval.169;
  bool iftmp.168;
  bool retval.167;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.168 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.168 = 0;

  <bb 6> :
  retval.167 = iftmp.168;
  if (retval.167 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.249284 = hash_table_higher_prime_index (_5);
  nindex = D.249284;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.249285 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.249285;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.249287 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.249287;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.249288 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.249288;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.170 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.170 = 0;

  <bb 15> :
  retval.169 = iftmp.170;
  if (retval.169 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.249289 = hash_map<tree_node*, function_assign_array>::hash_entry::hash (x);
  _16 = D.249289;
  D.249290 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.249290;
  D.234632 = std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (x);
  D.234603 = q;
  D.234604 = operator new (40, D.234603);
  hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (D.234604, D.234632);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=9998, decl_uid=191000, cgraph_uid=6630, symbol_order=7430)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.249291;

  <bb 2> :
  D.249291 = this->m_size;

  <bb 3> :
<L0>:
  return D.249291;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=9999, decl_uid=191002, cgraph_uid=6631, symbol_order=7431)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.249293;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.249293 = _1 - _2;

  <bb 3> :
<L0>:
  return D.249293;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10000, decl_uid=191102, cgraph_uid=6632, symbol_order=7432)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.171;
  bool D.249295;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.171 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.171 = 0;

  <bb 6> :
  D.249295 = iftmp.171;

  <bb 7> :
<L4>:
  return D.249295;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9259, decl_uid=191092, cgraph_uid=5891, symbol_order=6687)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.249317;
  struct value_type * D.249316;
  struct mem_alloc_description & D.249315;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.249313;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.249316 = xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (n);
  nentries = D.249316;
  goto <bb 6>; [INV]

  <bb 5> :
  D.249317 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (n);
  nentries = D.249317;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.249313 = nentries;

  <bb 9> :
<L14>:
  return D.249313;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9984, decl_uid=218273, cgraph_uid=6616, symbol_order=7416)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.249320;
  struct hash_entry * D.249318;

  <bb 2> :
  D.249320 = xcalloc (count, 40);
  D.249318 = D.249320;

  <bb 3> :
<L0>:
  return D.249318;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9985, decl_uid=234193, cgraph_uid=6617, symbol_order=7417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.249327;
  struct hash_entry * D.249326;
  struct hash_entry * D.249324;
  bool retval.172;

  <bb 2> :
  retval.172 = need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ();
  if (retval.172 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.249326 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.249324 = D.249326;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.249327 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.249324 = D.249327;

  <bb 5> :
<L2>:
  return D.249324;

}



;; Function finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10520, decl_uid=241602, cgraph_uid=7155, symbol_order=7955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10522, decl_uid=245086, cgraph_uid=7153, symbol_order=7953)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_assign_array::~function_assign_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10519, decl_uid=241601, cgraph_uid=7151, symbol_order=7951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ()
{
  bool D.249328;

  <bb 2> :
  D.249328 = 1;

  <bb 3> :
<L0>:
  return D.249328;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10002, decl_uid=190925, cgraph_uid=6634, symbol_order=7434)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_assign_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.249332;
  hashval_t D.249330;

  <bb 2> :
  _1 = &e->m_key;
  D.249332 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_1);
  D.249330 = D.249332;

  <bb 3> :
<L0>:
  return D.249330;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10001, decl_uid=191095, cgraph_uid=6633, symbol_order=7433)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.249345;
  bool D.249344;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.174;
  struct value_type * D.249336;
  bool retval.173;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.249344 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.173 = D.249344;
  if (retval.173 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.249336 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.249345 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.174 = D.249345;
  if (retval.174 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.249336 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.249336;

}



;; Function std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10003, decl_uid=234601, cgraph_uid=6635, symbol_order=7435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.249346;

  <bb 2> :
  D.249346 = __t;

  <bb 3> :
<L0>:
  return D.249346;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9285, decl_uid=234626, cgraph_uid=5916, symbol_order=6712)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234628)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234628->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234628->m_value;
  function_assign_array::function_assign_array (_2, _3);
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2EOS_, funcdef_no=6303, decl_uid=190654, cgraph_uid=3278, symbol_order=4053)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, struct function_assign_array & D.190656)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190656->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190656->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6301, decl_uid=176664, cgraph_uid=3275, symbol_order=4050)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, struct vector & D.176666)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176707;
  _2 = &D.176666->D.176707;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6299, decl_uid=176132, cgraph_uid=3272, symbol_order=4047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.176134)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.176134->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=7656, decl_uid=176038, cgraph_uid=4288, symbol_order=5080)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  std::allocator<assign_type>::allocator (this, _1);
  _2 = &this->D.176052;
  _3 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.176052;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11assign_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=8506, decl_uid=212063, cgraph_uid=5138, symbol_order=5934)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.249348;

  <bb 2> :
  D.249348 = __t;

  <bb 3> :
<L0>:
  return D.249348;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=8511, decl_uid=175994, cgraph_uid=5143, symbol_order=5939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8960, decl_uid=218275, cgraph_uid=5592, symbol_order=6388)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9287, decl_uid=191113, cgraph_uid=5919, symbol_order=6715)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10004, decl_uid=190937, cgraph_uid=6636, symbol_order=7436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10531, decl_uid=241678, cgraph_uid=7163, symbol_order=7963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<tree_node>::mark_empty (_ZN12pointer_hashI9tree_nodeE10mark_emptyERPS0_, funcdef_no=10850, decl_uid=85306, cgraph_uid=7482, symbol_order=8284)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<tree_node>::mark_empty (union tree_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2ERKS_, funcdef_no=6307, decl_uid=190645, cgraph_uid=3282, symbol_order=4057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, const struct function_assign_array & D.190647)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190647->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190647->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function operator delete (_ZdlPvS_, funcdef_no=17, decl_uid=3708, cgraph_uid=18, symbol_order=17)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void operator delete (void * D.3706, void * D.3707)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::~vector (_ZNSt6vectorI11assign_typeSaIS0_EED2Ev, funcdef_no=7646, decl_uid=176704, cgraph_uid=4278, symbol_order=5070)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176707;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.176707._M_impl.D.176052._M_finish;
  _4 = this->D.176707._M_impl.D.176052._M_start;
  std::_Destroy<assign_type*, assign_type> (_4, _3, _2);
  _5 = &this->D.176707;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function function_assign_array::~function_assign_array (_ZN21function_assign_arrayD2Ev, funcdef_no=6293, decl_uid=190812, cgraph_uid=3268, symbol_order=4043)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::~function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  _1 = &this->assign_type_array;
  std::vector<assign_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function get_function_varstmt (_Z20get_function_varstmtP9tree_nodeS0_, funcdef_no=6305, decl_uid=191270, cgraph_uid=3284, symbol_order=4059)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_varstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_assign_array * D.249357;
  struct function_assign_array * D.249356;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  bool retval.182;
  bool retval.175;

  <bb 2> :
  function_assign_collect.176_1 = function_assign_collect;
  D.249356 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.176_1, &function_tree);

  <bb 3> :
  _2 = D.249356;
  retval.175 = _2 == 0B;
  if (retval.175 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_assign_collect.177_3 = function_assign_collect;
  D.249357 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.177_3, &function_tree);

  <bb 6> :
  _4 = D.249357;
  function_assign_array::function_assign_array (&assign_array, _4);

  <bb 7> :
  std::vector<assign_type>::vector (&assign_type_array, &assign_array.assign_type_array);

  <bb 8> :
  _5 = std::vector<assign_type>::size (&assign_type_array);
  function_tree.178_6 = function_tree;
  stderr.179_7 = stderr;
  fprintf (stderr.179_7, "=======print_function_var %d   %d========\n", function_tree.178_6, _5);

  <bb 9> :
  stderr.180_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.180_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<assign_type>::operator[] (&assign_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.181_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.181_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<assign_type>::size (&assign_type_array);
  retval.182 = _13 < _14;
  if (retval.182 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.183_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.183_15);

  <bb 16> :
  stderr.184_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.184_16);

  <bb 17> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 21> :
<L10>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 1

}



;; Function std::vector<assign_type>::operator[] (_ZNSt6vectorI11assign_typeSaIS0_EEixEm, funcdef_no=7659, decl_uid=176360, cgraph_uid=4291, symbol_order=5083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<assign_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249363;

  <bb 2> :
  _1 = this->D.176707._M_impl.D.176052._M_start;
  _2 = __n * 24;
  D.249363 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249363;

}



;; Function get_function_specialstmt (_Z24get_function_specialstmtP9tree_nodeS0_, funcdef_no=6309, decl_uid=191286, cgraph_uid=3285, symbol_order=4060)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_specialstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_return_array * D.249371;
  struct function_return_array * D.249370;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.192;
  bool retval.185;

  <bb 2> :
  function_return_collect.186_1 = function_return_collect;
  D.249370 = hash_map<tree_node*, function_return_array>::get (function_return_collect.186_1, &function_tree);

  <bb 3> :
  _2 = D.249370;
  retval.185 = _2 == 0B;
  if (retval.185 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_return_collect.187_3 = function_return_collect;
  D.249371 = hash_map<tree_node*, function_return_array>::get (function_return_collect.187_3, &function_tree);

  <bb 6> :
  _4 = D.249371;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.188_6 = function_tree;
  stderr.189_7 = stderr;
  fprintf (stderr.189_7, "=======print_function_return %d   %d========\n", function_tree.188_6, _5);

  <bb 9> :
  stderr.190_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.190_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.191_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.191_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.192 = _13 < _14;
  if (retval.192 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.193_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.193_15);

  <bb 16> :
  stderr.194_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.194_16);

  <bb 17> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 21> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function trace_fucntion_relate_stmt (_Z26trace_fucntion_relate_stmtP11cgraph_nodeP9tree_nodeS2_, funcdef_no=6310, decl_uid=187155, cgraph_uid=3306, symbol_order=4087)

Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 113
Removing basic block 114
Removing basic block 115
Removing basic block 116
Removing basic block 118
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 125
Removing basic block 126
Removing basic block 127
Removing basic block 136
Removing basic block 137
Removing basic block 149
Removing basic block 150
Removing basic block 160
Removing basic block 165
Removing basic block 168
Removing basic block 190
Removing basic block 200
Removing basic block 201
Removing basic block 202
Removing basic block 203
Removing basic block 204
Removing basic block 230
Removing basic block 231
Removing basic block 232
Removing basic block 259
Removing basic block 260
Removing basic block 261
Removing basic block 262
Removing basic block 263
Removing basic block 264
Removing basic block 299
Removing basic block 304
Removing basic block 307
Removing basic block 328
Removing basic block 334
Removing basic block 335
Removing basic block 336
Removing basic block 337
Removing basic block 338
Removing basic block 339
Removing basic block 340
Removing basic block 349
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 308, latch 307
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 294, latch 293
;;  depth 2, outer 1
;;  nodes
;;
;; Loop 3
;;  header 292, latch 291
;;  depth 3, outer 2
;;  nodes
;; 2 succs { 3 4 }
;; 3 succs { 310 }
;; 4 succs { 308 }
;; 5 succs { 6 7 }
;; 6 succs { 307 }
;; 7 succs { 8 306 }
;; 8 succs { 315 9 }
;; 9 succs { 315 10 }
;; 10 succs { 315 11 }
;; 11 succs { 315 12 }
;; 12 succs { 315 13 }
;; 13 succs { 294 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 292 }
;; 18 succs { 19 24 }
;; 19 succs { 311 20 }
;; 20 succs { 311 21 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 311 24 }
;; 24 succs { 25 226 }
;; 25 succs { 26 175 }
;; 26 succs { 27 175 }
;; 27 succs { 29 28 }
;; 28 succs { 29 175 }
;; 29 succs { 311 30 }
;; 30 succs { 31 175 }
;; 31 succs { 311 32 }
;; 32 succs { 35 33 }
;; 33 succs { 311 34 }
;; 34 succs { 35 36 }
;; 35 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 38 175 }
;; 38 succs { 311 39 }
;; 39 succs { 40 175 }
;; 40 succs { 311 41 }
;; 41 succs { 311 42 }
;; 42 succs { 43 175 }
;; 43 succs { 311 44 }
;; 44 succs { 45 130 }
;; 45 succs { 311 46 }
;; 46 succs { 311 47 }
;; 47 succs { 48 59 }
;; 48 succs { 311 49 }
;; 49 succs { 50 59 }
;; 50 succs { 311 51 }
;; 51 succs { 311 52 }
;; 52 succs { 53 59 }
;; 53 succs { 311 54 }
;; 54 succs { 311 55 }
;; 55 succs { 311 56 }
;; 56 succs { 311 57 }
;; 57 succs { 311 58 }
;; 58 succs { 311 59 }
;; 59 succs { 311 60 }
;; 60 succs { 61 64 }
;; 61 succs { 311 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 67 }
;; 66 succs { 291 }
;; 67 succs { 311 68 }
;; 68 succs { 69 72 }
;; 69 succs { 311 70 }
;; 70 succs { 71 72 }
;; 71 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 74 111 }
;; 74 succs { 311 75 }
;; 75 succs { 76 130 }
;; 76 succs { 77 130 }
;; 77 succs { 78 130 }
;; 78 succs { 79 130 }
;; 79 succs { 81 80 }
;; 80 succs { 81 82 }
;; 81 succs { 291 }
;; 82 succs { 83 85 }
;; 83 succs { 84 85 }
;; 84 succs { 86 }
;; 85 succs { 86 }
;; 86 succs { 87 130 }
;; 87 succs { 311 88 }
;; 88 succs { 311 89 }
;; 89 succs { 90 130 }
;; 90 succs { 311 91 }
;; 91 succs { 311 92 }
;; 92 succs { 93 130 }
;; 93 succs { 94 109 }
;; 94 succs { 95 109 }
;; 95 succs { 311 96 }
;; 96 succs { 97 108 }
;; 97 succs { 311 98 }
;; 98 succs { 99 107 }
;; 99 succs { 100 108 }
;; 100 succs { 311 101 }
;; 101 succs { 102 108 }
;; 102 succs { 311 103 }
;; 103 succs { 104 108 }
;; 104 succs { 311 105 }
;; 105 succs { 106 108 }
;; 106 succs { 291 }
;; 107 succs { 291 }
;; 108 succs { 110 }
;; 109 succs { 291 }
;; 110 succs { 130 }
;; 111 succs { 311 112 }
;; 112 succs { 113 119 }
;; 113 succs { 311 114 }
;; 114 succs { 311 115 }
;; 115 succs { 116 130 }
;; 116 succs { 311 117 }
;; 117 succs { 118 130 }
;; 118 succs { 291 }
;; 119 succs { 311 120 }
;; 120 succs { 121 130 }
;; 121 succs { 311 122 }
;; 122 succs { 311 123 }
;; 123 succs { 125 124 }
;; 124 succs { 125 126 }
;; 125 succs { 291 }
;; 126 succs { 311 127 }
;; 127 succs { 311 128 }
;; 128 succs { 129 130 }
;; 129 succs { 291 }
;; 130 succs { 311 131 }
;; 131 succs { 311 132 }
;; 132 succs { 311 133 }
;; 133 succs { 311 134 }
;; 134 succs { 311 135 }
;; 135 succs { 136 166 }
;; 136 succs { 137 145 }
;; 137 succs { 138 139 }
;; 138 succs { 311 144 }
;; 139 succs { 140 143 }
;; 140 succs { 311 141 }
;; 141 succs { 311 142 }
;; 142 succs { 311 143 }
;; 143 succs { 311 144 }
;; 144 succs { 311 155 }
;; 145 succs { 146 148 }
;; 146 succs { 311 147 }
;; 147 succs { 155 }
;; 148 succs { 149 154 }
;; 149 succs { 311 150 }
;; 150 succs { 311 151 }
;; 151 succs { 311 152 }
;; 152 succs { 311 153 }
;; 153 succs { 154 }
;; 154 succs { 311 155 }
;; 155 succs { 311 156 }
;; 156 succs { 311 157 }
;; 157 succs { 311 158 }
;; 158 succs { 311 159 }
;; 159 succs { 311 160 }
;; 160 succs { 311 161 }
;; 161 succs { 311 162 }
;; 162 succs { 311 163 }
;; 163 succs { 311 164 }
;; 164 succs { 311 165 }
;; 165 succs { 311 171 }
;; 166 succs { 311 167 }
;; 167 succs { 311 168 }
;; 168 succs { 311 169 }
;; 169 succs { 311 170 }
;; 170 succs { 311 171 }
;; 171 succs { 311 172 }
;; 172 succs { 311 173 }
;; 173 succs { 311 174 }
;; 174 succs { 311 175 }
;; 175 succs { 311 176 }
;; 176 succs { 178 177 }
;; 177 succs { 178 179 }
;; 178 succs { 180 }
;; 179 succs { 180 }
;; 180 succs { 181 291 }
;; 181 succs { 311 182 }
;; 182 succs { 311 183 }
;; 183 succs { 184 186 }
;; 184 succs { 311 185 }
;; 185 succs { 186 }
;; 186 succs { 187 200 }
;; 187 succs { 188 200 }
;; 188 succs { 189 200 }
;; 189 succs { 190 200 }
;; 190 succs { 311 191 }
;; 191 succs { 311 192 }
;; 192 succs { 311 193 }
;; 193 succs { 311 194 }
;; 194 succs { 311 195 }
;; 195 succs { 311 196 }
;; 196 succs { 311 197 }
;; 197 succs { 311 198 }
;; 198 succs { 311 199 }
;; 199 succs { 311 200 }
;; 200 succs { 201 291 }
;; 201 succs { 202 291 }
;; 202 succs { 311 203 }
;; 203 succs { 204 291 }
;; 204 succs { 311 205 }
;; 205 succs { 206 291 }
;; 206 succs { 207 214 }
;; 207 succs { 311 208 }
;; 208 succs { 311 209 }
;; 209 succs { 210 214 }
;; 210 succs { 311 211 }
;; 211 succs { 311 212 }
;; 212 succs { 213 214 }
;; 213 succs { 215 }
;; 214 succs { 215 }
;; 215 succs { 216 291 }
;; 216 succs { 311 217 }
;; 217 succs { 311 218 }
;; 218 succs { 311 219 }
;; 219 succs { 311 220 }
;; 220 succs { 311 221 }
;; 221 succs { 311 222 }
;; 222 succs { 311 223 }
;; 223 succs { 311 224 }
;; 224 succs { 311 225 }
;; 225 succs { 311 291 }
;; 226 succs { 227 291 }
;; 227 succs { 228 291 }
;; 228 succs { 229 291 }
;; 229 succs { 230 291 }
;; 230 succs { 311 231 }
;; 231 succs { 232 291 }
;; 232 succs { 311 233 }
;; 233 succs { 311 234 }
;; 234 succs { 311 235 }
;; 235 succs { 236 291 }
;; 236 succs { 311 237 }
;; 237 succs { 243 238 }
;; 238 succs { 311 239 }
;; 239 succs { 243 240 }
;; 240 succs { 311 241 }
;; 241 succs { 311 242 }
;; 242 succs { 243 244 }
;; 243 succs { 245 }
;; 244 succs { 245 }
;; 245 succs { 246 291 }
;; 246 succs { 247 291 }
;; 247 succs { 250 248 }
;; 248 succs { 250 249 }
;; 249 succs { 250 251 }
;; 250 succs { 291 }
;; 251 succs { 311 252 }
;; 252 succs { 253 291 }
;; 253 succs { 311 254 }
;; 254 succs { 311 255 }
;; 255 succs { 256 291 }
;; 256 succs { 257 286 }
;; 257 succs { 258 266 }
;; 258 succs { 259 260 }
;; 259 succs { 311 265 }
;; 260 succs { 261 264 }
;; 261 succs { 311 262 }
;; 262 succs { 311 263 }
;; 263 succs { 311 264 }
;; 264 succs { 311 265 }
;; 265 succs { 311 276 }
;; 266 succs { 267 269 }
;; 267 succs { 311 268 }
;; 268 succs { 276 }
;; 269 succs { 270 275 }
;; 270 succs { 311 271 }
;; 271 succs { 311 272 }
;; 272 succs { 311 273 }
;; 273 succs { 311 274 }
;; 274 succs { 275 }
;; 275 succs { 311 276 }
;; 276 succs { 311 277 }
;; 277 succs { 311 278 }
;; 278 succs { 311 279 }
;; 279 succs { 311 280 }
;; 280 succs { 311 281 }
;; 281 succs { 311 282 }
;; 282 succs { 311 283 }
;; 283 succs { 311 284 }
;; 284 succs { 311 285 }
;; 285 succs { 311 290 }
;; 286 succs { 311 287 }
;; 287 succs { 311 288 }
;; 288 succs { 311 289 }
;; 289 succs { 311 290 }
;; 290 succs { 291 }
;; 291 succs { 292 }
;; 292 succs { 18 293 }
;; 293 succs { 294 }
;; 294 succs { 14 295 }
;; 295 succs { 296 305 }
;; 296 succs { 312 297 }
;; 297 succs { 298 299 }
;; 298 succs { 312 302 }
;; 299 succs { 312 300 }
;; 300 succs { 312 301 }
;; 301 succs { 312 302 }
;; 302 succs { 312 303 }
;; 303 succs { 312 304 }
;; 304 succs { 305 }
;; 305 succs { 306 }
;; 306 succs { 307 }
;; 307 succs { 308 }
;; 308 succs { 5 309 }
;; 309 succs { 310 }
;; 310 succs { 1 }
;; 311 succs { 315 }
;; 312 succs { 313 }
;; 313 succs { 314 }
;; 314 succs { 315 }
;; 315 succs { }
void trace_fucntion_relate_stmt (struct cgraph_node * node, union tree_node * function_tree, union tree_node * mallocStmt_tree)
{
  struct cgraph_node * D.249757;
  struct function_relate_array * D.249752;
  struct function_relate_array * D.249751;
  union tree_node * D.249749;
  union tree_node * D.249748;
  const char * D.249747;
  bool D.249746;
  union tree_node * D.249745;
  union tree_node * D.249744;
  const char * D.249743;
  union tree_node * D.249742;
  union tree_node * D.249741;
  union tree_node * D.249740;
  union tree_node * D.249739;
  const char * D.249738;
  union tree_node * D.249737;
  unsigned int D.249736;
  union tree_node * D.249735;
  const char * D.249734;
  bool D.249733;
  union tree_node * D.249732;
  bool D.249731;
  union tree_node * D.249730;
  union tree_node * D.249729;
  union tree_node * D.249728;
  union tree_node * D.249727;
  const char * D.249726;
  union tree_node * D.249725;
  union tree_node * D.249724;
  union tree_node * D.249723;
  union tree_node * D.249722;
  union tree_node * D.249721;
  union tree_node * D.249720;
  const char * D.249719;
  const char * D.249718;
  union tree_node * D.249717;
  const char * D.249716;
  bool D.249715;
  union tree_node * D.249714;
  union tree_node * D.249713;
  union tree_node * D.249712;
  union tree_node * D.249711;
  union tree_node * D.249710;
  bool D.249709;
  union tree_node * D.249708;
  union tree_node * D.249707;
  bool D.249706;
  union tree_node * D.249705;
  union tree_node * D.249704;
  union tree_node * D.249703;
  union tree_node * D.249702;
  const char * D.249701;
  union tree_node * D.249700;
  const char * D.249699;
  union tree_node * D.249698;
  union tree_node * D.249697;
  union tree_node * D.249696;
  union tree_node * D.249695;
  union tree_node * D.249694;
  union tree_node * D.249693;
  union tree_node * D.249692;
  bool D.249691;
  union tree_node * D.249690;
  union tree_node * D.249689;
  bool D.249688;
  union tree_node * D.249687;
  union tree_node * D.249686;
  bool D.249685;
  union tree_node * D.249684;
  union tree_node * D.249683;
  union tree_node * D.249682;
  union tree_node * D.249681;
  union tree_node * D.249680;
  const char * D.249679;
  union tree_node * D.249678;
  const char * D.249677;
  const char * D.249676;
  struct function * D.249675;
  struct cgraph_node * D.249674;
  struct relate_type relate_type;
  long unsigned int x;
  struct pt_solution * pt2;
  const char * name;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct gimple * def_stmt;
  union tree_node * second;
  struct pt_solution * pt4;
  struct pt_solution * pt3;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * first;
  long unsigned int x;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  const char * name;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  int seccount;
  int fucntion_level;
  union tree_node * t;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.346;
  bool retval.343;
  bool retval.314;
  bool iftmp.313;
  bool retval.312;
  bool retval.311;
  bool retval.310;
  bool retval.306;
  bool iftmp.297;
  bool retval.296;
  bool retval.295;
  bool retval.285;
  bool iftmp.283;
  bool retval.282;
  bool retval.246;
  bool retval.245;
  bool retval.244;
  bool retval.242;
  bool retval.241;
  bool retval.239;
  bool retval.238;
  bool retval.237;
  bool retval.236;
  bool retval.235;
  bool retval.234;
  bool retval.233;
  bool iftmp.232;
  bool retval.231;
  bool iftmp.228;
  bool retval.227;
  bool iftmp.226;
  bool retval.225;
  bool retval.219;
  bool retval.218;
  bool retval.216;
  bool retval.215;
  bool retval.213;
  bool iftmp.212;
  bool retval.211;
  bool retval.210;
  bool retval.205;
  bool retval.204;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 310>; [INV]

  <bb 4> :
  symtab.195_1 = symtab;
  D.249674 = symbol_table::first_defined_function (symtab.195_1);
  node = D.249674;
  goto <bb 308>; [INV]

  <bb 5> :
  fucntion_level = 0;
  D.249675 = cgraph_node::get_fun (node);
  _2 = D.249675;
  push_cfun (_2);
  cfun.196_3 = cfun;
  if (cfun.196_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 307>; [INV]

  <bb 7> :
  cfun.197_4 = cfun;
  _5 = cfun.197_4->decl;
  if (function_tree == _5)
    goto <bb 8>; [INV]
  else
    goto <bb 306>; [INV]

  <bb 8> :
  now_relatelaststmt = 0B;
  calculate_dominance_info (1);

  <bb 9> :
  D.249676 = get_name (function_tree);

  <bb 10> :
  _6 = D.249676;
  stderr.198_7 = stderr;
  fprintf2 (stderr.198_7, "\x1b[40;36m ======= node_fun:%s========= \x1b[0m\n", _6);

  <bb 11> :
  mallocStmt_tree.199_8 = mallocStmt_tree;
  D.249677 = get_name (mallocStmt_tree.199_8);

  <bb 12> :
  _9 = D.249677;
  stderr.200_10 = stderr;
  fprintf2 (stderr.200_10, "\x1b[40;36m ======= find relate stmt with %s ========= \x1b[0m\n", _9);

  <bb 13> :
  seccount = 0;
  cfun.201_11 = cfun;
  _12 = cfun.201_11->cfg;
  _13 = _12->x_entry_block_ptr;
  bb = _13->next_bb;
  goto <bb 294>; [INV]

  <bb 14> :
  tracerelatestmt.202_14 = tracerelatestmt;
  _15 = ~tracerelatestmt.202_14;
  if (_15 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  freemod.203_16 = freemod;
  _17 = ~freemod.203_16;
  if (_17 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  fistconunt = 0;

  <bb 17> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 292>; [INV]

  <bb 18> :
  gc = gsi_stmt (gsi);
  retval.204 = is_gimple_call (gc);
  if (retval.204 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  D.249678 = gimple_call_fn (gc);

  <bb 20> :
  _18 = D.249678;
  D.249679 = get_name (_18);

  <bb 21> :
  name = D.249679;
  if (name != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  _19 = strcmp (name, "pthread_exit");
  if (_19 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  debug_gimple_stmt2 (gc);

  <bb 24> :
  retval.205 = is_gimple_assign (gc);
  if (retval.205 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 25> :
  mallocStmt_tree.206_20 = mallocStmt_tree;
  pi1 = mallocStmt_tree.206_20->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 26> :
  relatemod.207_21 = relatemod;
  if (relatemod.207_21 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 27> :
  mallocStmt_tree.208_22 = mallocStmt_tree;
  _23 = mallocStmt_tree.208_22->base.code;
  if (_23 == 153)
    goto <bb 29>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  mallocStmt_tree.209_24 = mallocStmt_tree;
  _25 = mallocStmt_tree.209_24->base.code;
  if (_25 == 36)
    goto <bb 29>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 29> :
  D.249680 = gimple_assign_lhs (gc);

  <bb 30> :
  _26 = D.249680;
  retval.210 = _26 != 0B;
  if (retval.210 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 31> :
  D.249681 = gimple_assign_lhs (gc);

  <bb 32> :
  _27 = D.249681;
  _28 = _27->base.code;
  if (_28 == 153)
    goto <bb 35>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  D.249682 = gimple_assign_lhs (gc);

  <bb 34> :
  _29 = D.249682;
  _30 = _29->base.code;
  if (_30 == 165)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  iftmp.212 = 1;
  goto <bb 37>; [INV]

  <bb 36> :
  iftmp.212 = 0;

  <bb 37> :
  retval.211 = iftmp.212;
  if (retval.211 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 38> :
  D.249683 = gimple_assign_lhs (gc);

  <bb 39> :
  _31 = D.249683;
  pi2 = _31->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 40> :
  D.249684 = gimple_assign_lhs (gc);

  <bb 41> :
  _32 = D.249684;
  mallocStmt_tree.214_33 = mallocStmt_tree;
  D.249685 = ptr_derefs_may_alias_p (mallocStmt_tree.214_33, _32);

  <bb 42> :
  retval.213 = D.249685;
  if (retval.213 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 43> :
  D.249686 = gimple_assign_rhs1 (gc);

  <bb 44> :
  _34 = D.249686;
  retval.215 = _34 != 0B;
  if (retval.215 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 45> :
  D.249687 = gimple_assign_lhs (gc);

  <bb 46> :
  _35 = D.249687;
  mallocStmt_tree.217_36 = mallocStmt_tree;
  D.249688 = ptr_derefs_may_alias_p (mallocStmt_tree.217_36, _35);

  <bb 47> :
  retval.216 = D.249688;
  if (retval.216 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 48> :
  D.249689 = gimple_assign_lhs (gc);

  <bb 49> :
  _37 = D.249689;
  _38 = _37->base.code;
  retval.218 = _38 == 131;
  if (retval.218 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 50> :
  D.249690 = gimple_assign_rhs1 (gc);

  <bb 51> :
  _39 = D.249690;
  mallocStmt_tree.220_40 = mallocStmt_tree;
  D.249691 = ptr_derefs_may_alias_p (mallocStmt_tree.220_40, _39);

  <bb 52> :
  retval.219 = D.249691;
  if (retval.219 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 53> :
  D.249692 = gimple_assign_rhs1 (gc);

  <bb 54> :
  _41 = D.249692;
  debug_tree2 (_41);

  <bb 55> :
  stderr.221_42 = stderr;
  fprintf2 (stderr.221_42, "\n ================== warring ================== \n");

  <bb 56> :
  stderr.222_43 = stderr;
  fprintf2 (stderr.222_43, "\x1b[40;35m this pointer possible  reference other address (rhs)\x1b[0m\n");

  <bb 57> :
  stderr.223_44 = stderr;
  fprintf2 (stderr.223_44, "\x1b[40;35m or assign other value \x1b[0m\n");

  <bb 58> :
  stderr.224_45 = stderr;
  fprintf2 (stderr.224_45, "\n ================== warring ================== \n");

  <bb 59> :
  D.249693 = gimple_assign_lhs (gc);

  <bb 60> :
  _46 = D.249693;
  _47 = _46->base.code;
  if (_47 == 153)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  D.249694 = gimple_assign_rhs1 (gc);

  <bb 62> :
  _48 = D.249694;
  _49 = _48->base.code;
  if (_49 == 26)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.226 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.226 = 0;

  <bb 65> :
  retval.225 = iftmp.226;
  if (retval.225 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 67> :
  D.249695 = gimple_assign_lhs (gc);

  <bb 68> :
  _50 = D.249695;
  _51 = _50->base.code;
  if (_51 == 165)
    goto <bb 69>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 69> :
  D.249696 = gimple_assign_rhs1 (gc);

  <bb 70> :
  _52 = D.249696;
  _53 = _52->base.code;
  if (_53 == 26)
    goto <bb 71>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 71> :
  iftmp.228 = 1;
  goto <bb 73>; [INV]

  <bb 72> :
  iftmp.228 = 0;

  <bb 73> :
  retval.227 = iftmp.228;
  if (retval.227 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 74> :
  D.249697 = gimple_assign_lhs (gc);

  <bb 75> :
  _54 = D.249697;
  first = _54->exp.operands[0];
  def_stmt = first->ssa_name.def_stmt;
  mallocStmt_tree.229_55 = mallocStmt_tree;
  def_stmt2 = mallocStmt_tree.229_55->ssa_name.def_stmt;
  _56 = first->base.code;
  if (_56 != 36)
    goto <bb 76>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 76> :
  mallocStmt_tree.230_57 = mallocStmt_tree;
  _58 = mallocStmt_tree.230_57->base.code;
  if (_58 != 36)
    goto <bb 77>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 77> :
  if (def_stmt != 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 78> :
  if (def_stmt2 != 0B)
    goto <bb 79>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 79> :
  pi4 = first->ssa_name.info.ptr_info;
  pt1 = &pi4->pt;
  pt2 = &pi1->pt;
  if (pt1 == 0B)
    goto <bb 81>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 80> :
  _59 = BIT_FIELD_REF <*pt1, 8, 0>;
  _60 = _59 & 1;
  if (_60 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 82> :
  _61 = is_gimple_assign (def_stmt);
  if (_61 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 83> :
  _62 = is_gimple_assign (def_stmt2);
  if (_62 != 0)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  iftmp.232 = 1;
  goto <bb 86>; [INV]

  <bb 85> :
  iftmp.232 = 0;

  <bb 86> :
  retval.231 = iftmp.232;
  if (retval.231 != 0)
    goto <bb 87>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 87> :
  D.249698 = gimple_assign_rhs1 (def_stmt);

  <bb 88> :
  _63 = D.249698;
  _64 = _63->base.code;
  _65 = (tree_code) _64;
  D.249699 = get_tree_code_name (_65);

  <bb 89> :
  _66 = D.249699;
  _67 = strcmp (_66, "<invalid tree code>");
  retval.233 = _67 == 0;
  if (retval.233 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 90> :
  D.249700 = gimple_assign_rhs1 (def_stmt2);

  <bb 91> :
  _68 = D.249700;
  _69 = _68->base.code;
  _70 = (tree_code) _69;
  D.249701 = get_tree_code_name (_70);

  <bb 92> :
  _71 = D.249701;
  _72 = strcmp (_71, "<invalid tree code>");
  retval.234 = _72 == 0;
  if (retval.234 != 0)
    goto <bb 93>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 93> :
  _73 = BIT_FIELD_REF <*pt1, 8, 0>;
  _74 = _73 & 2;
  if (_74 == 0)
    goto <bb 94>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 94> :
  _75 = BIT_FIELD_REF <*pt2, 8, 0>;
  _76 = _75 & 2;
  if (_76 == 0)
    goto <bb 95>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 95> :
  D.249702 = gimple_assign_rhs1 (def_stmt2);

  <bb 96> :
  _77 = D.249702;
  retval.235 = _77 != 0B;
  if (retval.235 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 97> :
  D.249703 = gimple_assign_rhs1 (def_stmt2);

  <bb 98> :
  _78 = D.249703;
  _79 = is_global_var (_78);
  retval.236 = ~_79;
  if (retval.236 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 99> :
  if (pt1 != 0B)
    goto <bb 100>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 100> :
  D.249704 = gimple_assign_rhs1 (def_stmt);

  <bb 101> :
  _80 = D.249704;
  retval.237 = _80 != 0B;
  if (retval.237 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 102> :
  D.249705 = gimple_assign_rhs1 (def_stmt);

  <bb 103> :
  _81 = D.249705;
  retval.238 = is_global_var (_81);
  if (retval.238 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 104> :
  mallocStmt_tree.240_82 = mallocStmt_tree;
  D.249706 = ptr_derefs_may_alias_p (mallocStmt_tree.240_82, first);

  <bb 105> :
  _83 = D.249706;
  retval.239 = ~_83;
  if (retval.239 != 0)
    goto <bb 106>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 106> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 107> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 108> :
  goto <bb 110>; [INV]

  <bb 109> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 110> :
  goto <bb 130>; [INV]

  <bb 111> :
  D.249707 = gimple_assign_rhs1 (gc);

  <bb 112> :
  _84 = D.249707;
  _85 = _84->base.code;
  retval.241 = _85 == 36;
  if (retval.241 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 113> :
  D.249708 = gimple_assign_lhs (gc);

  <bb 114> :
  _86 = D.249708;
  mallocStmt_tree.243_87 = mallocStmt_tree;
  D.249709 = ptr_derefs_may_alias_p (mallocStmt_tree.243_87, _86);

  <bb 115> :
  retval.242 = D.249709;
  if (retval.242 != 0)
    goto <bb 116>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 116> :
  D.249710 = gimple_assign_rhs1 (gc);

  <bb 117> :
  _88 = D.249710;
  retval.244 = is_global_var (_88);
  if (retval.244 != 0)
    goto <bb 118>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 118> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 119> :
  D.249711 = gimple_assign_rhs1 (gc);

  <bb 120> :
  _89 = D.249711;
  _90 = _89->base.code;
  retval.245 = _90 == 153;
  if (retval.245 != 0)
    goto <bb 121>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 121> :
  D.249712 = gimple_assign_lhs (gc);

  <bb 122> :
  _91 = D.249712;
  pi3 = _91->ssa_name.info.ptr_info;
  D.249713 = gimple_assign_rhs1 (gc);

  <bb 123> :
  _92 = D.249713;
  pi4 = _92->ssa_name.info.ptr_info;
  pt3 = &pi3->pt;
  pt4 = &pi4->pt;
  if (pt3 == 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 124> :
  if (pt4 == 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 126> :
  D.249714 = gimple_assign_rhs1 (gc);

  <bb 127> :
  _93 = D.249714;
  mallocStmt_tree.247_94 = mallocStmt_tree;
  D.249715 = ptr_derefs_may_alias_p (mallocStmt_tree.247_94, _93);

  <bb 128> :
  _95 = D.249715;
  retval.246 = ~_95;
  if (retval.246 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 130> :
  mallocStmt_tree.248_96 = mallocStmt_tree;
  D.249716 = get_name (mallocStmt_tree.248_96);

  <bb 131> :
  _97 = D.249716;
  stderr.249_98 = stderr;
  fprintf2 (stderr.249_98, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _97);

  <bb 132> :
  D.249717 = gimple_assign_lhs (gc);

  <bb 133> :
  _99 = D.249717;
  D.249718 = get_name (_99);

  <bb 134> :
  _100 = D.249718;
  stderr.250_101 = stderr;
  fprintf2 (stderr.250_101, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _100);

  <bb 135> :
  _102 = rand ();
  x = (long unsigned int) _102;
  debugmod.251_103 = debugmod;
  if (debugmod.251_103 != 0)
    goto <bb 136>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 136> :
  freemod.252_104 = freemod;
  if (freemod.252_104 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 137> :
  if (seccount == 0)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  stderr.253_105 = stderr;
  fprintf2 (stderr.253_105, "dot graph arrow");
  goto <bb 144>; [INV]

  <bb 139> :
  now_laststmt.254_106 = now_laststmt;
  if (now_laststmt.254_106 != 0B)
    goto <bb 140>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 140> :
  now_laststmtid.255_107 = now_laststmtid;
  stderr.256_108 = stderr;
  fprintf2 (stderr.256_108, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.255_107);

  <bb 141> :
  now_laststmt.257_109 = now_laststmt;
  debug2 (now_laststmt.257_109);

  <bb 142> :
  now_laststmt.258_110 = now_laststmt;
  _111 = gimple_location_safe (now_laststmt.258_110);
  warning_at2 (_111, 0, "use location");

  <bb 143> :
  stderr.259_112 = stderr;
  fprintf2 (stderr.259_112, "dot graph relate en1\n\n");

  <bb 144> :
  stderr.260_113 = stderr;
  fprintf2 (stderr.260_113, "dot graph start relate for1");
  goto <bb 155>; [INV]

  <bb 145> :
  fistconunt.261_114 = fistconunt;
  if (fistconunt.261_114 == 0)
    goto <bb 146>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 146> :
  stderr.262_115 = stderr;
  fprintf2 (stderr.262_115, "dot graph start relate form");

  <bb 147> :
  fistconunt.263_116 = fistconunt;
  _117 = fistconunt.263_116 + 1;
  fistconunt = _117;
  goto <bb 155>; [INV]

  <bb 148> :
  now_laststmt.264_118 = now_laststmt;
  if (now_laststmt.264_118 != 0B)
    goto <bb 149>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 149> :
  now_laststmtid.265_119 = now_laststmtid;
  stderr.266_120 = stderr;
  fprintf2 (stderr.266_120, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.265_119);

  <bb 150> :
  now_laststmt.267_121 = now_laststmt;
  debug2 (now_laststmt.267_121);

  <bb 151> :
  now_laststmt.268_122 = now_laststmt;
  _123 = gimple_location_safe (now_laststmt.268_122);
  warning_at2 (_123, 0, "use location");

  <bb 152> :
  stderr.269_124 = stderr;
  fprintf2 (stderr.269_124, "dot graph relate en1\n\n");

  <bb 153> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 154> :
  stderr.270_125 = stderr;
  fprintf2 (stderr.270_125, "dot graph start relate for1");

  <bb 155> :
  fistconunt.271_126 = fistconunt;
  _127 = fistconunt.271_126 + 1;
  fistconunt = _127;
  now_fucntion.272_128 = now_fucntion;
  stderr.273_129 = stderr;
  fprintf2 (stderr.273_129, "ID : %lu\n", now_fucntion.272_128);

  <bb 156> :
  _130 = gimple_bb (gc);
  _131 = _130->index;
  D.249719 = get_name (function_tree);

  <bb 157> :
  _132 = D.249719;
  stderr.274_133 = stderr;
  fprintf2 (stderr.274_133, "from %s basic block %d", _132, _131);

  <bb 158> :
  stderr.275_134 = stderr;
  fprintf2 (stderr.275_134, "dot graph end relate end\n\n");

  <bb 159> :
  _135 = gimple_location_safe (gc);
  warning_at2 (_135, 0, "use location");

  <bb 160> :
  debug2 (gc);

  <bb 161> :
  stderr.276_136 = stderr;
  fprintf2 (stderr.276_136, "dot graph relate stmt start ID : %lu stmt(LHS) :", x);

  <bb 162> :
  _137 = gimple_location_safe (gc);
  warning_at2 (_137, 0, "use location");

  <bb 163> :
  D.249720 = gimple_assign_lhs (gc);

  <bb 164> :
  _138 = D.249720;
  debug2 (_138);

  <bb 165> :
  stderr.277_139 = stderr;
  fprintf2 (stderr.277_139, "dot graph relate end\n\n");
  goto <bb 171>; [INV]

  <bb 166> :
  _140 = gimple_location_safe (gc);
  warning_at2 (_140, 0, "use location");

  <bb 167> :
  debug2 (gc);

  <bb 168> :
  _141 = gimple_location_safe (gc);
  warning_at2 (_141, 0, "use location");

  <bb 169> :
  D.249721 = gimple_assign_lhs (gc);

  <bb 170> :
  _142 = D.249721;
  debug2 (_142);

  <bb 171> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;
  stderr.278_143 = stderr;
  fprintf2 (stderr.278_143, "\n ================== warring ================== \n");

  <bb 172> :
  stderr.279_144 = stderr;
  fprintf2 (stderr.279_144, "\x1b[40;35m this pointer possible reference other address \x1b[0m\n");

  <bb 173> :
  stderr.280_145 = stderr;
  fprintf2 (stderr.280_145, "\x1b[40;35m or assign other value \x1b[0m\n");

  <bb 174> :
  stderr.281_146 = stderr;
  fprintf2 (stderr.281_146, "\n ================== warring ================== \n");

  <bb 175> :
  D.249722 = gimple_assign_lhs (gc);

  <bb 176> :
  _147 = D.249722;
  _148 = _147->base.code;
  if (_148 == 49)
    goto <bb 178>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 177> :
  mallocStmt_tree.284_149 = mallocStmt_tree;
  _150 = mallocStmt_tree.284_149->base.code;
  if (_150 == 153)
    goto <bb 178>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 178> :
  iftmp.283 = 1;
  goto <bb 180>; [INV]

  <bb 179> :
  iftmp.283 = 0;

  <bb 180> :
  retval.282 = iftmp.283;
  if (retval.282 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 181> :
  second = 0B;
  D.249723 = gimple_assign_lhs (gc);

  <bb 182> :
  _151 = D.249723;
  second = _151->exp.operands[0];
  D.249724 = gimple_assign_lhs (gc);

  <bb 183> :
  _152 = D.249724;
  _153 = _152->base.code;
  retval.285 = _153 == 49;
  if (retval.285 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 186>; [INV]

  <bb 184> :
  D.249725 = gimple_assign_lhs (gc);

  <bb 185> :
  _154 = D.249725;
  second = _154->exp.operands[0];

  <bb 186> :
  if (second != 0B)
    goto <bb 187>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 187> :
  mallocStmt_tree.286_155 = mallocStmt_tree;
  _156 = mallocStmt_tree.286_155->base.code;
  if (_156 == 36)
    goto <bb 188>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 188> :
  _157 = second->base.code;
  if (_157 == 36)
    goto <bb 189>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 189> :
  mallocStmt_tree.287_158 = mallocStmt_tree;
  if (second == mallocStmt_tree.287_158)
    goto <bb 190>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 190> :
  D.249726 = get_name (function_tree);

  <bb 191> :
  _159 = D.249726;
  stderr.288_160 = stderr;
  fprintf2 (stderr.288_160, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _159);

  <bb 192> :
  D.249727 = gimple_assign_lhs (gc);

  <bb 193> :
  _161 = D.249727;
  stderr.289_162 = stderr;
  fprintf2 (stderr.289_162, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _161);

  <bb 194> :
  debug_gimple_stmt2 (gc);

  <bb 195> :
  _163 = gimple_location_safe (gc);
  warning_at2 (_163, 0, "use location");

  <bb 196> :
  stderr.290_164 = stderr;
  fprintf2 (stderr.290_164, "\n ================== warring ================== \n");

  <bb 197> :
  stderr.291_165 = stderr;
  fprintf2 (stderr.291_165, "\x1b[40;35m this pointer possible  reference other address \x1b[0m\n");

  <bb 198> :
  stderr.292_166 = stderr;
  fprintf2 (stderr.292_166, "\x1b[40;35m or assign other value \x1b[0m\n");

  <bb 199> :
  stderr.293_167 = stderr;
  fprintf2 (stderr.293_167, "\n ================== warring ================== \n");

  <bb 200> :
  if (second == 0B)
    goto <bb 201>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 201> :
  mallocStmt_tree.294_168 = mallocStmt_tree;
  _169 = mallocStmt_tree.294_168->base.code;
  if (_169 == 153)
    goto <bb 202>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 202> :
  D.249728 = gimple_assign_rhs1 (gc);

  <bb 203> :
  _170 = D.249728;
  _171 = _170->base.code;
  retval.295 = _171 == 153;
  if (retval.295 != 0)
    goto <bb 204>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 204> :
  D.249729 = gimple_assign_rhs1 (gc);

  <bb 205> :
  _172 = D.249729;
  def_stmt = _172->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 206>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 206> :
  _173 = gimple_code (def_stmt);
  if (_173 != 18)
    goto <bb 207>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 207> :
  D.249730 = gimple_assign_lhs (gc);

  <bb 208> :
  _174 = D.249730;
  mallocStmt_tree.298_175 = mallocStmt_tree;
  D.249731 = ptr_derefs_may_alias_p (mallocStmt_tree.298_175, _174);

  <bb 209> :
  _176 = D.249731;
  if (_176 != 0)
    goto <bb 210>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 210> :
  D.249732 = gimple_assign_rhs1 (gc);

  <bb 211> :
  _177 = D.249732;
  mallocStmt_tree.299_178 = mallocStmt_tree;
  D.249733 = ptr_derefs_may_alias_p (mallocStmt_tree.299_178, _177);

  <bb 212> :
  _179 = D.249733;
  if (_179 != 0)
    goto <bb 213>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 213> :
  iftmp.297 = 1;
  goto <bb 215>; [INV]

  <bb 214> :
  iftmp.297 = 0;

  <bb 215> :
  retval.296 = iftmp.297;
  if (retval.296 != 0)
    goto <bb 216>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 216> :
  D.249734 = get_name (function_tree);

  <bb 217> :
  _180 = D.249734;
  stderr.300_181 = stderr;
  fprintf2 (stderr.300_181, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _180);

  <bb 218> :
  D.249735 = gimple_assign_lhs (gc);

  <bb 219> :
  _182 = D.249735;
  stderr.301_183 = stderr;
  fprintf2 (stderr.301_183, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _182);

  <bb 220> :
  debug_gimple_stmt2 (gc);

  <bb 221> :
  _184 = gimple_location_safe (gc);
  warning_at2 (_184, 0, "use location");

  <bb 222> :
  stderr.302_185 = stderr;
  fprintf2 (stderr.302_185, "\n ================== warring ================== \n");

  <bb 223> :
  stderr.303_186 = stderr;
  fprintf2 (stderr.303_186, "\x1b[40;35m this pointer possible  reference other address \x1b[0m\n");

  <bb 224> :
  stderr.304_187 = stderr;
  fprintf2 (stderr.304_187, "\x1b[40;35m or assign other value \x1b[0m\n");

  <bb 225> :
  stderr.305_188 = stderr;
  fprintf2 (stderr.305_188, "\n ================== warring ================== \n");
  goto <bb 291>; [INV]

  <bb 226> :
  _189 = is_gimple_call (gc);
  _190 = (long int) _189;
  retval.306 = _190 != 0;
  if (retval.306 != 0)
    goto <bb 227>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 227> :
  mallocStmt_tree.307_191 = mallocStmt_tree;
  pi1 = mallocStmt_tree.307_191->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 228>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 228> :
  relatemod.308_192 = relatemod;
  if (relatemod.308_192 != 0)
    goto <bb 229>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 229> :
  debugmod.309_193 = debugmod;
  if (debugmod.309_193 != 0)
    goto <bb 230>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 230> :
  D.249736 = gimple_call_num_args (gc);

  <bb 231> :
  _194 = D.249736;
  retval.310 = _194 != 0;
  if (retval.310 != 0)
    goto <bb 232>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 232> :
  D.249737 = gimple_call_fn (gc);

  <bb 233> :
  _195 = D.249737;
  D.249738 = get_name (_195);

  <bb 234> :
  name = D.249738;
  D.249739 = gimple_call_lhs (gc);

  <bb 235> :
  _196 = D.249739;
  retval.311 = _196 != 0B;
  if (retval.311 != 0)
    goto <bb 236>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 236> :
  D.249740 = gimple_call_lhs (gc);

  <bb 237> :
  _197 = D.249740;
  _198 = _197->base.code;
  if (_198 == 153)
    goto <bb 243>; [INV]
  else
    goto <bb 238>; [INV]

  <bb 238> :
  D.249741 = gimple_call_arg (gc, 0);

  <bb 239> :
  _199 = D.249741;
  _200 = _199->base.code;
  if (_200 == 153)
    goto <bb 243>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 240> :
  D.249742 = gimple_call_arg (gc, 0);

  <bb 241> :
  _201 = D.249742;
  _202 = _201->base.code;
  _203 = (tree_code) _202;
  D.249743 = get_tree_code_name (_203);

  <bb 242> :
  _204 = D.249743;
  _205 = strcmp (_204, "addr_expr");
  if (_205 == 0)
    goto <bb 243>; [INV]
  else
    goto <bb 244>; [INV]

  <bb 243> :
  iftmp.313 = 1;
  goto <bb 245>; [INV]

  <bb 244> :
  iftmp.313 = 0;

  <bb 245> :
  retval.312 = iftmp.313;
  if (retval.312 != 0)
    goto <bb 246>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 246> :
  if (name != 0B)
    goto <bb 247>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 247> :
  _206 = strcmp (name, "pthread_mutex_lock");
  if (_206 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 248> :
  _207 = strcmp (name, "pthread_mutex_unlock");
  if (_207 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 249> :
  _208 = strcmp (name, "pthread_exit");
  if (_208 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 250> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 251> :
  D.249744 = gimple_call_arg (gc, 0);

  <bb 252> :
  _209 = D.249744;
  pi2 = _209->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 253>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 253> :
  D.249745 = gimple_call_arg (gc, 0);

  <bb 254> :
  _210 = D.249745;
  mallocStmt_tree.315_211 = mallocStmt_tree;
  D.249746 = ptr_derefs_may_alias_p (mallocStmt_tree.315_211, _210);

  <bb 255> :
  retval.314 = D.249746;
  if (retval.314 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 256> :
  _212 = rand ();
  x = (long unsigned int) _212;
  debugmod.316_213 = debugmod;
  if (debugmod.316_213 != 0)
    goto <bb 257>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 257> :
  freemod.317_214 = freemod;
  if (freemod.317_214 != 0)
    goto <bb 258>; [INV]
  else
    goto <bb 266>; [INV]

  <bb 258> :
  if (seccount == 0)
    goto <bb 259>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 259> :
  stderr.318_215 = stderr;
  fprintf2 (stderr.318_215, "dot graph arrow");
  goto <bb 265>; [INV]

  <bb 260> :
  now_laststmt.319_216 = now_laststmt;
  if (now_laststmt.319_216 != 0B)
    goto <bb 261>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 261> :
  now_laststmtid.320_217 = now_laststmtid;
  stderr.321_218 = stderr;
  fprintf2 (stderr.321_218, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.320_217);

  <bb 262> :
  now_laststmt.322_219 = now_laststmt;
  debug2 (now_laststmt.322_219);

  <bb 263> :
  now_laststmt.323_220 = now_laststmt;
  _221 = gimple_location_safe (now_laststmt.323_220);
  warning_at2 (_221, 0, "use location");

  <bb 264> :
  stderr.324_222 = stderr;
  fprintf2 (stderr.324_222, "dot graph relate en1\n\n");

  <bb 265> :
  stderr.325_223 = stderr;
  fprintf2 (stderr.325_223, "dot graph start relate for1");
  goto <bb 276>; [INV]

  <bb 266> :
  fistconunt.326_224 = fistconunt;
  if (fistconunt.326_224 == 0)
    goto <bb 267>; [INV]
  else
    goto <bb 269>; [INV]

  <bb 267> :
  stderr.327_225 = stderr;
  fprintf2 (stderr.327_225, "dot graph start relate form");

  <bb 268> :
  fistconunt.328_226 = fistconunt;
  _227 = fistconunt.328_226 + 1;
  fistconunt = _227;
  goto <bb 276>; [INV]

  <bb 269> :
  now_laststmt.329_228 = now_laststmt;
  if (now_laststmt.329_228 != 0B)
    goto <bb 270>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 270> :
  now_laststmtid.330_229 = now_laststmtid;
  stderr.331_230 = stderr;
  fprintf2 (stderr.331_230, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.330_229);

  <bb 271> :
  now_laststmt.332_231 = now_laststmt;
  debug2 (now_laststmt.332_231);

  <bb 272> :
  now_laststmt.333_232 = now_laststmt;
  _233 = gimple_location_safe (now_laststmt.333_232);
  warning_at2 (_233, 0, "use location");

  <bb 273> :
  stderr.334_234 = stderr;
  fprintf2 (stderr.334_234, "dot graph relate en1\n\n");

  <bb 274> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 275> :
  stderr.335_235 = stderr;
  fprintf2 (stderr.335_235, "dot graph start relate for1");

  <bb 276> :
  fistconunt.336_236 = fistconunt;
  _237 = fistconunt.336_236 + 1;
  fistconunt = _237;
  now_fucntion.337_238 = now_fucntion;
  stderr.338_239 = stderr;
  fprintf2 (stderr.338_239, "ID : %lu\n", now_fucntion.337_238);

  <bb 277> :
  _240 = gimple_bb (gc);
  _241 = _240->index;
  D.249747 = get_name (function_tree);

  <bb 278> :
  _242 = D.249747;
  stderr.339_243 = stderr;
  fprintf2 (stderr.339_243, "from %s basic block %d", _242, _241);

  <bb 279> :
  stderr.340_244 = stderr;
  fprintf2 (stderr.340_244, "dot graph end relate end\n\n");

  <bb 280> :
  debug2 (gc);

  <bb 281> :
  stderr.341_245 = stderr;
  fprintf2 (stderr.341_245, "dot graph relate stmt start ID : %lu stmt(call) :", x);

  <bb 282> :
  _246 = gimple_location_safe (gc);
  warning_at2 (_246, 0, "use location");

  <bb 283> :
  D.249748 = gimple_call_arg (gc, 0);

  <bb 284> :
  _247 = D.249748;
  debug2 (_247);

  <bb 285> :
  stderr.342_248 = stderr;
  fprintf2 (stderr.342_248, "dot graph relate end\n\n");
  goto <bb 290>; [INV]

  <bb 286> :
  debug2 (gc);

  <bb 287> :
  _249 = gimple_location_safe (gc);
  warning_at2 (_249, 0, "use location");

  <bb 288> :
  D.249749 = gimple_call_arg (gc, 0);

  <bb 289> :
  _250 = D.249749;
  debug2 (_250);

  <bb 290> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;

  <bb 291> :
  gsi_next (&gsi);

  <bb 292> :
  _251 = gsi_end_p (gsi);
  retval.343 = ~_251;
  if (retval.343 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 293> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 294> :
  cfun.344_252 = cfun;
  _253 = cfun.344_252->cfg;
  _254 = _253->x_exit_block_ptr;
  if (bb != _254)
    goto <bb 14>; [INV]
  else
    goto <bb 295>; [INV]

  <bb 295> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  now_relatelaststmt.345_255 = now_relatelaststmt;
  if (now_relatelaststmt.345_255 != 0B)
    goto <bb 296>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 296> :
  function_relate_collect.347_256 = function_relate_collect;
  D.249751 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.347_256, &mallocStmt_tree);

  <bb 297> :
  _257 = D.249751;
  retval.346 = _257 == 0B;
  if (retval.346 != 0)
    goto <bb 298>; [INV]
  else
    goto <bb 299>; [INV]

  <bb 298> :
  std::vector<relate_type>::operator= (&fun_array.relate_type_array, &relate_type_array);
  goto <bb 302>; [INV]

  <bb 299> :
  function_relate_collect.348_258 = function_relate_collect;
  D.249752 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.348_258, &mallocStmt_tree);

  <bb 300> :
  _259 = D.249752;
  function_relate_array::operator= (&fun_array, _259);

  <bb 301> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 302> :
  relate_type::relate_type (&relate_type);
  now_relatelaststmt.349_260 = now_relatelaststmt;
  relate_type.stmt = now_relatelaststmt.349_260;
  mallocStmt_tree.350_261 = mallocStmt_tree;
  relate_type.relate_tree = mallocStmt_tree.350_261;
  relate_type.relate_funtree = function_tree;
  now_fucntion.351_262 = now_fucntion;
  _263 = (unsigned int) now_fucntion.351_262;
  relate_type.now_fucntion = _263;
  now_laststmtid.352_264 = now_laststmtid;
  _265 = (unsigned int) now_laststmtid.352_264;
  relate_type.now_stmt = _265;
  std::vector<relate_type>::push_back (&fun_array.relate_type_array, &relate_type);

  <bb 303> :
  function_relate_collect.353_266 = function_relate_collect;
  hash_map<tree_node*, function_relate_array>::put (function_relate_collect.353_266, &mallocStmt_tree, &fun_array);

  <bb 304> :
  relate_type = {CLOBBER};

  <bb 305> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 306> :
  pop_cfun ();

  <bb 307> :
  symtab.354_267 = symtab;
  D.249757 = symbol_table::next_defined_function (symtab.354_267, node);
  node = D.249757;

  <bb 308> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 309> :
  stderr.355_268 = stderr;
  fprintf2 (stderr.355_268, "fucntion collect path finsh\n");

  <bb 310> :
<L265>:
  return;

  <bb 311> :
<L266>:
  gsi = {CLOBBER};
  resx 2

  <bb 312> :
<L267>:
  relate_type = {CLOBBER};
  resx 6

  <bb 313> :
<L268>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 5

  <bb 314> :
<L269>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 4

  <bb 315> :
<L270>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 1

}



;; Function is_gimple_assign (_ZL16is_gimple_assignPK6gimple, funcdef_no=2062, decl_uid=92605, cgraph_uid=1199, symbol_order=1359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_assign (const struct gimple * gs)
{
  bool D.249758;

  <bb 2> :
  _1 = gimple_code (gs);
  D.249758 = _1 == 6;

  <bb 3> :
<L0>:
  return D.249758;

}



;; Function is_global_var (_ZL13is_global_varPK9tree_node, funcdef_no=1820, decl_uid=85582, cgraph_uid=968, symbol_order=1128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_global_var (const union tree_node * t)
{
  bool iftmp.356;
  bool D.249760;

  <bb 2> :
  _1 = BIT_FIELD_REF <t->base, 8, 24>;
  _2 = _1 & 4;
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = BIT_FIELD_REF <t->decl_common, 8, 472>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.356 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.356 = 0;

  <bb 6> :
  D.249760 = iftmp.356;

  <bb 7> :
<L4>:
  return D.249760;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK6gimple, funcdef_no=2071, decl_uid=92645, cgraph_uid=1208, symbol_order=1368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gimple * gs)
{
  const struct gassign * D.249769;
  const struct gassign * ass;
  union tree_node * D.249767;

  <bb 2> :
  D.249769 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.249769;
  D.249767 = gimple_assign_rhs1 (ass);

  <bb 3> :
<L0>:
  return D.249767;

}



;; Function GIMPLE_CHECK2<const gassign*> (_Z13GIMPLE_CHECK2IPK7gassignET_PK6gimple, funcdef_no=7075, decl_uid=92617, cgraph_uid=3707, symbol_order=4496)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * GIMPLE_CHECK2<const gassign*> (const struct gimple * gs)
{
  const struct gassign * D.249772;
  const struct gassign * D.249770;

  <bb 2> :
  D.249772 = as_a<const gassign*, const gimple> (gs);
  D.249770 = D.249772;

  <bb 3> :
<L0>:
  return D.249770;

}



;; Function as_a<const gassign*, const gimple> (_Z4as_aIPK7gassignK6gimpleET_PT0_, funcdef_no=8069, decl_uid=207046, cgraph_uid=4701, symbol_order=5493)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * as_a<const gassign*, const gimple> (const struct gimple * p)
{
  const struct gassign * D.249775;
  const struct gassign * D.249773;

  <bb 2> :
  D.249775 = is_a_helper<const gassign*>::cast<gimple> (p);
  D.249773 = D.249775;

  <bb 3> :
<L0>:
  return D.249773;

}



;; Function is_a_helper<const gassign*>::cast<gimple> (_ZN11is_a_helperIPK7gassignE4castI6gimpleEES2_PKT_, funcdef_no=8076, decl_uid=207084, cgraph_uid=4708, symbol_order=5500)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * is_a_helper<const gassign*>::cast<gimple> (const struct gimple * p)
{
  const struct gassign * D.249776;

  <bb 2> :
  D.249776 = reinterpret_is_a_helper<gassign*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.249776;

}



;; Function reinterpret_is_a_helper<gassign*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7gassignE4castI6gimpleEES1_PT_, funcdef_no=9046, decl_uid=219516, cgraph_uid=5678, symbol_order=6474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gassign * reinterpret_is_a_helper<gassign*>::cast<gimple> (struct gimple * p)
{
  struct gassign * D.249778;

  <bb 2> :
  D.249778 = p;

  <bb 3> :
<L0>:
  return D.249778;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK7gassign, funcdef_no=2070, decl_uid=92642, cgraph_uid=1207, symbol_order=1367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gassign * gs)
{
  union tree_node * D.249780;

  <bb 2> :
  D.249780 = gs->D.90479.op[1];

  <bb 3> :
<L0>:
  return D.249780;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK6gimple, funcdef_no=2065, decl_uid=92614, cgraph_uid=1202, symbol_order=1362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gimple * gs)
{
  const struct gassign * D.249784;
  const struct gassign * ass;
  union tree_node * D.249782;

  <bb 2> :
  D.249784 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.249784;
  D.249782 = gimple_assign_lhs (ass);

  <bb 3> :
<L0>:
  return D.249782;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK7gassign, funcdef_no=2064, decl_uid=92611, cgraph_uid=1201, symbol_order=1361)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gassign * gs)
{
  union tree_node * D.249785;

  <bb 2> :
  D.249785 = gs->D.90479.op[0];

  <bb 3> :
<L0>:
  return D.249785;

}



;; Function is_gimple_call (_ZL14is_gimple_callPK6gimple, funcdef_no=2100, decl_uid=92760, cgraph_uid=1237, symbol_order=1397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_call (const struct gimple * gs)
{
  bool D.249787;

  <bb 2> :
  _1 = gimple_code (gs);
  D.249787 = _1 == 8;

  <bb 3> :
<L0>:
  return D.249787;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK6gimple, funcdef_no=2139, decl_uid=92913, cgraph_uid=1276, symbol_order=1436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gimple * gs)
{
  const struct gcall * D.249791;
  const struct gcall * gc;
  unsigned int D.249789;

  <bb 2> :
  D.249791 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249791;
  D.249789 = gimple_call_num_args (gc);

  <bb 3> :
<L0>:
  return D.249789;

}



;; Function GIMPLE_CHECK2<const gcall*> (_Z13GIMPLE_CHECK2IPK5gcallET_PK6gimple, funcdef_no=7077, decl_uid=92769, cgraph_uid=3709, symbol_order=4498)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * GIMPLE_CHECK2<const gcall*> (const struct gimple * gs)
{
  const struct gcall * D.249794;
  const struct gcall * D.249792;

  <bb 2> :
  D.249794 = as_a<const gcall*, const gimple> (gs);
  D.249792 = D.249794;

  <bb 3> :
<L0>:
  return D.249792;

}



;; Function as_a<const gcall*, const gimple> (_Z4as_aIPK5gcallK6gimpleET_PT0_, funcdef_no=7104, decl_uid=94348, cgraph_uid=3736, symbol_order=4525)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * as_a<const gcall*, const gimple> (const struct gimple * p)
{
  const struct gcall * D.249797;
  const struct gcall * D.249795;

  <bb 2> :
  D.249797 = is_a_helper<const gcall*>::cast<gimple> (p);
  D.249795 = D.249797;

  <bb 3> :
<L0>:
  return D.249795;

}



;; Function is_a_helper<const gcall*>::cast<gimple> (_ZN11is_a_helperIPK5gcallE4castI6gimpleEES2_PKT_, funcdef_no=8073, decl_uid=207070, cgraph_uid=4705, symbol_order=5497)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * is_a_helper<const gcall*>::cast<gimple> (const struct gimple * p)
{
  const struct gcall * D.249798;

  <bb 2> :
  D.249798 = reinterpret_is_a_helper<gcall*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.249798;

}



;; Function reinterpret_is_a_helper<gcall*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcallE4castI6gimpleEES1_PT_, funcdef_no=9048, decl_uid=219524, cgraph_uid=5680, symbol_order=6476)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcall * reinterpret_is_a_helper<gcall*>::cast<gimple> (struct gimple * p)
{
  struct gcall * D.249800;

  <bb 2> :
  D.249800 = p;

  <bb 3> :
<L0>:
  return D.249800;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK5gcall, funcdef_no=2138, decl_uid=92910, cgraph_uid=1275, symbol_order=1435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gcall * gs)
{
  unsigned int D.249802;

  <bb 2> :
  _1 = gimple_num_ops (gs);
  D.249802 = _1 + 4294967293;

  <bb 3> :
<L0>:
  return D.249802;

}



;; Function gimple_num_ops (_ZL14gimple_num_opsPK6gimple, funcdef_no=2056, decl_uid=92581, cgraph_uid=1193, symbol_order=1353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_num_ops (const struct gimple * gs)
{
  unsigned int D.249804;

  <bb 2> :
  D.249804 = gs->num_ops;

  <bb 3> :
<L0>:
  return D.249804;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK6gimple, funcdef_no=2124, decl_uid=92857, cgraph_uid=1261, symbol_order=1421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gimple * gs)
{
  const struct gcall * D.249808;
  const struct gcall * gc;
  union tree_node * D.249806;

  <bb 2> :
  D.249808 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249808;
  D.249806 = gimple_call_fn (gc);

  <bb 3> :
<L0>:
  return D.249806;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK5gcall, funcdef_no=2123, decl_uid=92854, cgraph_uid=1260, symbol_order=1420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gcall * gs)
{
  union tree_node * D.249809;

  <bb 2> :
  D.249809 = gs->op[1];

  <bb 3> :
<L0>:
  return D.249809;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK6gimple, funcdef_no=2102, decl_uid=92766, cgraph_uid=1239, symbol_order=1399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gimple * gs)
{
  const struct gcall * D.249813;
  const struct gcall * gc;
  union tree_node * D.249811;

  <bb 2> :
  D.249813 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249813;
  D.249811 = gimple_call_lhs (gc);

  <bb 3> :
<L0>:
  return D.249811;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK5gcall, funcdef_no=2101, decl_uid=92763, cgraph_uid=1238, symbol_order=1398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gcall * gs)
{
  union tree_node * D.249814;

  <bb 2> :
  D.249814 = gs->op[0];

  <bb 3> :
<L0>:
  return D.249814;

}



;; Function gimple_bb (_ZL9gimple_bbPK6gimple, funcdef_no=2000, decl_uid=92273, cgraph_uid=1137, symbol_order=1297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * gimple_bb (const struct gimple * g)
{
  struct basic_block_def * D.249816;

  <bb 2> :
  D.249816 = g->bb;

  <bb 3> :
<L0>:
  return D.249816;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK6gimplej, funcdef_no=2141, decl_uid=92922, cgraph_uid=1278, symbol_order=1438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gimple * gs, unsigned int index)
{
  const struct gcall * D.249820;
  const struct gcall * gc;
  union tree_node * D.249818;

  <bb 2> :
  D.249820 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249820;
  D.249818 = gimple_call_arg (gc, index);

  <bb 3> :
<L0>:
  return D.249818;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK5gcallj, funcdef_no=2140, decl_uid=92918, cgraph_uid=1277, symbol_order=1437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gcall * gs, unsigned int index)
{
  union tree_node * D.249821;

  <bb 2> :
  _1 = index + 3;
  D.249821 = gs->op[_1];

  <bb 3> :
<L0>:
  return D.249821;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2Ev, funcdef_no=6319, decl_uid=179850, cgraph_uid=3294, symbol_order=4075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179858;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2Ev, funcdef_no=6317, decl_uid=179308, cgraph_uid=3291, symbol_order=4072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7661, decl_uid=179200, cgraph_uid=4293, symbol_order=5085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this);
  _1 = &this->D.179203;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2Ev, funcdef_no=8514, decl_uid=178978, cgraph_uid=5146, symbol_order=5942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2Ev, funcdef_no=9292, decl_uid=178907, cgraph_uid=5924, symbol_order=6720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8517, decl_uid=179150, cgraph_uid=5149, symbol_order=5945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2Ev, funcdef_no=6322, decl_uid=191495, cgraph_uid=3297, symbol_order=4078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::vector (_1);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::get (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7672, decl_uid=191582, cgraph_uid=4304, symbol_order=5096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_relate_array * hash_map<tree_node*, function_relate_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.249831;
  struct hash_entry & D.249830;
  unsigned int D.249829;
  struct hash_entry & e;
  struct function_relate_array * iftmp.357;
  struct function_relate_array * D.249823;

  <bb 2> :
  _1 = &this->m_table;
  D.249829 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.249829;
  D.249830 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.249830;
  D.249831 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  _3 = D.249831;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.357 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.357 = &e->m_value;

  <bb 5> :
  D.249823 = iftmp.357;

  <bb 6> :
<L3>:
  return D.249823;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE4hashERKS2_, funcdef_no=8525, decl_uid=191538, cgraph_uid=5157, symbol_order=5953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (union tree_node * const & h)
{
  hashval_t D.249832;

  <bb 2> :
  D.249832 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.249832;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8526, decl_uid=191725, cgraph_uid=5158, symbol_order=5954)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.249866;
  bool D.249865;
  bool D.249864;
  bool D.249863;
  bool D.249862;
  bool D.249861;
  struct value_type * D.249860;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.361;
  bool retval.360;
  struct value_type & D.249846;
  bool iftmp.359;
  bool retval.358;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.249861 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.249861;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.249862 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.249862;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.249863 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _11 = D.249863;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.359 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.359 = 0;

  <bb 8> :
  retval.358 = iftmp.359;
  if (retval.358 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.249846 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.249864 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.249864;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.249865 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.249865;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.249866 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _23 = D.249866;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.361 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.361 = 0;

  <bb 18> :
  retval.360 = iftmp.361;
  if (retval.360 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.249846 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.249846;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8774, decl_uid=191821, cgraph_uid=5406, symbol_order=6202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.249869;
  bool D.249867;

  <bb 2> :
  D.249869 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (v);
  D.249867 = D.249869;

  <bb 3> :
<L0>:
  return D.249867;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8546, decl_uid=191651, cgraph_uid=5178, symbol_order=5974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.249872;
  bool D.249870;

  <bb 2> :
  D.249872 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.249870 = D.249872;

  <bb 3> :
<L0>:
  return D.249870;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8775, decl_uid=191819, cgraph_uid=5407, symbol_order=6203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.249875;
  bool D.249873;

  <bb 2> :
  D.249875 = hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (v);
  D.249873 = D.249875;

  <bb 3> :
<L0>:
  return D.249873;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9605, decl_uid=191646, cgraph_uid=6237, symbol_order=7033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.249878;
  bool D.249876;

  <bb 2> :
  D.249878 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.249876 = D.249878;

  <bb 3> :
<L0>:
  return D.249876;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10214, decl_uid=237624, cgraph_uid=6846, symbol_order=7646)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249879;

  <bb 2> :
  _1 = entry->m_key;
  D.249879 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.249879;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9297, decl_uid=191639, cgraph_uid=5929, symbol_order=6725)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.249883;
  bool D.249881;

  <bb 2> :
  _1 = &a->m_key;
  D.249883 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_1, b);
  D.249881 = D.249883;

  <bb 3> :
<L0>:
  return D.249881;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10equal_keysERKS2_S7_, funcdef_no=10009, decl_uid=191540, cgraph_uid=6641, symbol_order=7441)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.249884;

  <bb 2> :
  D.249884 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.249884;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8527, decl_uid=212114, cgraph_uid=5159, symbol_order=5955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249886;

  <bb 2> :
  _1 = entry->m_key;
  D.249886 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.249886;

}



;; Function function_relate_array::operator= (_ZN21function_relate_arrayaSERKS_, funcdef_no=6327, decl_uid=191961, cgraph_uid=3302, symbol_order=4083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_relate_array & function_relate_array::operator= (struct function_relate_array * const this, const struct function_relate_array & D.191962)
{
  struct function_relate_array & D.249888;

  <bb 2> :
  _1 = &D.191962->relate_type_array;
  _2 = &this->relate_type_array;
  std::vector<relate_type>::operator= (_2, _1);
  D.249888 = this;

  <bb 3> :
<L0>:
  return D.249888;

}



;; Function std::vector<relate_type>::operator= (_ZNSt6vectorI11relate_typeSaIS0_EEaSERKS2_, funcdef_no=7673, decl_uid=179436, cgraph_uid=4307, symbol_order=5099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<relate_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.249923;
  struct relate_type * __tmp;
  const size_type __xlen;
  struct vector & D.249921;
  struct __normal_iterator D.249918;
  struct __normal_iterator D.249917;
  struct __normal_iterator D.249916;
  struct __normal_iterator D.249915;
  struct __normal_iterator D.249914;
  bool retval.366;
  struct __normal_iterator D.249909;
  struct __normal_iterator D.249908;
  bool retval.365;
  bool iftmp.364;
  bool retval.363;
  bool retval.362;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.362 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ();
  if (retval.362 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.179858;
  _4 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.179858;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.364 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.364 = 0;

  <bb 8> :
  retval.363 = iftmp.364;
  if (retval.363 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<relate_type>::clear (this);
  _8 = &this->D.179858;
  _9 = this->D.179858._M_impl.D.179203._M_end_of_storage;
  _10 = this->D.179858._M_impl.D.179203._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 48;
  _13 = (long unsigned int) _12;
  _14 = this->D.179858._M_impl.D.179203._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_8, _14, _13);
  this->D.179858._M_impl.D.179203._M_start = 0B;
  this->D.179858._M_impl.D.179203._M_finish = 0B;
  this->D.179858._M_impl.D.179203._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.179858;
  _16 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.179858;
  _18 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<relate_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<relate_type>::size (__x);
  _19 = std::vector<relate_type>::capacity (this);
  retval.365 = __xlen > _19;
  if (retval.365 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.249908 = std::vector<relate_type>::end (__x);
  D.249909 = std::vector<relate_type>::begin (__x);
  D.249923 = std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (this, __xlen, D.249909, D.249908);
  __tmp = D.249923;
  _20 = &this->D.179858;
  _21 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.179858._M_impl.D.179203._M_finish;
  _23 = this->D.179858._M_impl.D.179203._M_start;
  std::_Destroy<relate_type*, relate_type> (_23, _22, _21);
  _24 = &this->D.179858;
  _25 = this->D.179858._M_impl.D.179203._M_end_of_storage;
  _26 = this->D.179858._M_impl.D.179203._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 48;
  _29 = (long unsigned int) _28;
  _30 = this->D.179858._M_impl.D.179203._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_24, _30, _29);
  this->D.179858._M_impl.D.179203._M_start = __tmp;
  _31 = this->D.179858._M_impl.D.179203._M_start;
  _32 = __xlen * 48;
  _33 = _31 + _32;
  this->D.179858._M_impl.D.179203._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<relate_type>::size (this);
  retval.366 = __xlen <= _34;
  if (retval.366 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.179858;
  _36 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_35);
  D.249914 = std::vector<relate_type>::end (this);
  D.249915 = std::vector<relate_type>::begin (this);
  D.249916 = std::vector<relate_type>::end (__x);
  D.249917 = std::vector<relate_type>::begin (__x);
  D.249918 = std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.249917, D.249916, D.249915);
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (D.249918, D.249914, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.179858._M_impl.D.179203._M_start;
  _38 = __x->D.179858._M_impl.D.179203._M_start;
  _39 = std::vector<relate_type>::size (this);
  _40 = _39 * 48;
  _41 = _38 + _40;
  _42 = __x->D.179858._M_impl.D.179203._M_start;
  std::copy<relate_type*, relate_type*> (_42, _41, _37);
  _43 = &this->D.179858;
  _44 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.179858._M_impl.D.179203._M_finish;
  _46 = __x->D.179858._M_impl.D.179203._M_finish;
  _47 = __x->D.179858._M_impl.D.179203._M_start;
  _48 = std::vector<relate_type>::size (this);
  _49 = _48 * 48;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.179858._M_impl.D.179203._M_start;
  _52 = __xlen * 48;
  _53 = _51 + _52;
  this->D.179858._M_impl.D.179203._M_finish = _53;

  <bb 17> :
  D.249921 = this;

  <bb 18> :
<L19>:
  return D.249921;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7674, decl_uid=179070, cgraph_uid=4305, symbol_order=5097)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ()
{
  bool D.249924;

  <bb 2> :
  D.249924 = 0;

  <bb 3> :
<L0>:
  return D.249924;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E15_S_always_equalEv, funcdef_no=7675, decl_uid=179073, cgraph_uid=4306, symbol_order=5098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ()
{
  bool D.249926;

  <bb 2> :
  D.249926 = 1;

  <bb 3> :
<L0>:
  return D.249926;

}



;; Function std::operator!= (_ZStneRKSaI11relate_typeES2_, funcdef_no=8529, decl_uid=178956, cgraph_uid=5161, symbol_order=5957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.222682, const struct allocator & D.222683)
{
  bool D.249928;

  <bb 2> :
  D.249928 = 0;

  <bb 3> :
<L0>:
  return D.249928;

}



;; Function std::vector<relate_type>::clear (_ZNSt6vectorI11relate_typeSaIS0_EE5clearEv, funcdef_no=8530, decl_uid=179588, cgraph_uid=5162, symbol_order=5958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.179858._M_impl.D.179203._M_start;
  std::vector<relate_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<relate_type>::_M_erase_at_end (_ZNSt6vectorI11relate_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9298, decl_uid=179716, cgraph_uid=5930, symbol_order=6726)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<relate_type>::_M_erase_at_end (struct vector * const this, struct relate_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.179858._M_impl.D.179203._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 48;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.179858;
  _5 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.179858._M_impl.D.179203._M_finish;
  std::_Destroy<relate_type*, relate_type> (__pos, _6, _5);
  this->D.179858._M_impl.D.179203._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8528, decl_uid=179093, cgraph_uid=5160, symbol_order=5956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.249933;

  <bb 2> :
  D.249933 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249933;

}



;; Function std::__alloc_on_copy<std::allocator<relate_type> > (_ZSt15__alloc_on_copyISaI11relate_typeEEvRT_RKS2_, funcdef_no=8531, decl_uid=212139, cgraph_uid=5163, symbol_order=5959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<relate_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<relate_type>::capacity (_ZNKSt6vectorI11relate_typeSaIS0_EE8capacityEv, funcdef_no=8532, decl_uid=179504, cgraph_uid=5164, symbol_order=5960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::capacity (const struct vector * const this)
{
  size_type D.249935;

  <bb 2> :
  _1 = this->D.179858._M_impl.D.179203._M_end_of_storage;
  _2 = this->D.179858._M_impl.D.179203._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.249935 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249935;

}



;; Function std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZNSt6vectorI11relate_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8535, decl_uid=212239, cgraph_uid=5167, symbol_order=5963)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct relate_type * std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct relate_type * D.249939;
  struct relate_type * __result;
  struct relate_type * D.249937;

  <bb 2> :
  _1 = &this->D.179858;
  D.249939 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_1, __n);
  __result = D.249939;
  _2 = &this->D.179858;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (__first, __last, __result, _3);

  <bb 3> :
  D.249937 = __result;

  <bb 4> :
<L0>:
  return D.249937;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.179858;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE11_M_allocateEm, funcdef_no=9302, decl_uid=179207, cgraph_uid=5934, symbol_order=6730)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.249949;
  struct relate_type * iftmp.367;
  struct relate_type * D.249943;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.249949 = std::allocator_traits<std::allocator<relate_type> >::allocate (_1, __n);
  iftmp.367 = D.249949;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.367 = 0B;

  <bb 5> :
  D.249943 = iftmp.367;

  <bb 6> :
<L3>:
  return D.249943;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::allocate (_ZNSt16allocator_traitsISaI11relate_typeEE8allocateERS1_m, funcdef_no=10010, decl_uid=179008, cgraph_uid=6642, symbol_order=7442)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type * std::allocator_traits<std::allocator<relate_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct relate_type * D.249952;
  struct relate_type * D.249950;

  <bb 2> :
  D.249952 = __gnu_cxx::new_allocator<relate_type>::allocate (__a, __n, 0B);
  D.249950 = D.249952;

  <bb 3> :
<L0>:
  return D.249950;

}



;; Function __gnu_cxx::new_allocator<relate_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE8allocateEmPKv, funcdef_no=10537, decl_uid=178862, cgraph_uid=7170, symbol_order=7970)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct relate_type * __gnu_cxx::new_allocator<relate_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245181)
{
  struct relate_type * D.249963;
  struct relate_type * D.249962;
  align_val_t __al;
  struct relate_type * D.249960;
  bool retval.368;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.368 = _4 != 0;
  if (retval.368 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 384307168202282325)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 48;
  D.249963 = operator new (_6);
  D.249960 = D.249963;

  <bb 7> :
<L6>:
  return D.249960;

}



;; Function __gnu_cxx::new_allocator<relate_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE11_M_max_sizeEv, funcdef_no=10538, decl_uid=178889, cgraph_uid=7169, symbol_order=7969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.249964;

  <bb 2> :
  D.249964 = 192153584101141162;

  <bb 3> :
<L0>:
  return D.249964;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9303, decl_uid=222724, cgraph_uid=5935, symbol_order=6731)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result, struct allocator & D.234704)
{
  struct relate_type * D.249968;
  struct relate_type * D.249966;

  <bb 2> :
  D.249968 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.249966 = D.249968;

  <bb 3> :
<L0>:
  return D.249966;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10011, decl_uid=234706, cgraph_uid=6643, symbol_order=7443)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * D.249971;
  const bool __assignable;
  struct relate_type * D.249969;

  <bb 2> :
  __assignable = 1;
  D.249971 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.249969 = D.249971;

  <bb 3> :
<L0>:
  return D.249969;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10539, decl_uid=241742, cgraph_uid=7171, symbol_order=7971)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.249973;
  bool retval.369;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (&__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, const relate_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (&__first);
  __cur = __cur + 48;

  <bb 4> :
  retval.369 = __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (&__first, &__last);
  if (retval.369 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.249973 = __cur;

  <bb 6> :
<L3>:
  return D.249973;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10853, decl_uid=212177, cgraph_uid=7485, symbol_order=8287)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct relate_type & D.249975;

  <bb 2> :
  D.249975 = this->_M_current;

  <bb 3> :
<L0>:
  return D.249975;

}



;; Function std::__addressof<relate_type> (_ZSt11__addressofI11relate_typeEPT_RS1_, funcdef_no=10544, decl_uid=223222, cgraph_uid=7176, symbol_order=7976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__addressof<relate_type> (struct relate_type & __r)
{
  struct relate_type * D.249977;

  <bb 2> :
  D.249977 = __r;

  <bb 3> :
<L0>:
  return D.249977;

}



;; Function std::_Construct<relate_type, const relate_type&> (_ZSt10_ConstructI11relate_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10854, decl_uid=245209, cgraph_uid=7486, symbol_order=8288)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, const relate_type&> (struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.246595;
  void * D.246594;
  const struct relate_type * D.246596;

  <bb 2> :
  D.246596 = std::forward<const relate_type&> (__args#0);
  D.246594 = __p;
  D.246595 = operator new (48, D.246594);
  MEM[(struct relate_type *)D.246595] = *D.246596;
  return;

}



;; Function std::forward<const relate_type&> (_ZSt7forwardIRK11relate_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9312, decl_uid=222837, cgraph_uid=5944, symbol_order=6740)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct relate_type & std::forward<const relate_type&> (const struct type & __t)
{
  const struct relate_type & D.249979;

  <bb 2> :
  D.249979 = __t;

  <bb 3> :
<L0>:
  return D.249979;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10852, decl_uid=212181, cgraph_uid=7484, symbol_order=8286)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.249981;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.249981 = this;

  <bb 3> :
<L0>:
  return D.249981;

}



;; Function __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIPK11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10851, decl_uid=245202, cgraph_uid=7483, symbol_order=8285)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.249983;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.249983 = _2 != _4;

  <bb 3> :
<L0>:
  return D.249983;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10540, decl_uid=212206, cgraph_uid=7172, symbol_order=7972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * const & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  const struct relate_type * const & D.249985;

  <bb 2> :
  D.249985 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249985;

}



;; Function std::_Destroy<relate_type*, relate_type> (_ZSt8_DestroyIP11relate_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8524, decl_uid=212098, cgraph_uid=5156, symbol_order=5952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct allocator & D.222662)
{
  <bb 2> :
  std::_Destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<relate_type*> (_ZSt8_DestroyIP11relate_typeEvT_S2_, funcdef_no=9295, decl_uid=222664, cgraph_uid=5927, symbol_order=6723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*> (struct relate_type * __first, struct relate_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<relate_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11relate_typeEEvT_S4_, funcdef_no=10006, decl_uid=234674, cgraph_uid=6638, symbol_order=7438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<relate_type*> (struct relate_type * D.241683, struct relate_type * D.241684)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8522, decl_uid=179210, cgraph_uid=5154, symbol_order=5950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (struct _Vector_base * const this, struct relate_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<relate_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::deallocate (_ZNSt16allocator_traitsISaI11relate_typeEE10deallocateERS1_PS0_m, funcdef_no=9294, decl_uid=179015, cgraph_uid=5926, symbol_order=6722)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::deallocate (struct allocator_type & __a, struct relate_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE10deallocateEPS1_m, funcdef_no=10005, decl_uid=178866, cgraph_uid=6637, symbol_order=7437)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::deallocate (struct new_allocator * const this, struct relate_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 48;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<relate_type>::end (_ZNSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=7822, decl_uid=179471, cgraph_uid=4454, symbol_order=5246)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::end (struct vector * const this)
{
  struct iterator D.215695;
  struct iterator D.249993;

  <bb 2> :
  _1 = &this->D.179858._M_impl.D.179203._M_finish;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.215695, _1);
  D.249993 = D.215695;
  D.215695 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249993;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8771, decl_uid=202751, cgraph_uid=5403, symbol_order=6199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=7821, decl_uid=179467, cgraph_uid=4453, symbol_order=5245)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::begin (struct vector * const this)
{
  struct iterator D.215693;
  struct iterator D.249996;

  <bb 2> :
  _1 = &this->D.179858._M_impl.D.179203._M_start;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.215693, _1);
  D.249996 = D.215693;
  D.215693 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249996;

}



;; Function std::vector<relate_type>::end (_ZNKSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=8534, decl_uid=179473, cgraph_uid=5166, symbol_order=5962)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::end (const struct vector * const this)
{
  struct const_iterator D.222718;
  struct const_iterator D.249999;

  <bb 2> :
  _1 = &this->D.179858._M_impl.D.179203._M_finish;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.222718, _1);
  D.249999 = D.222718;
  D.222718 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249999;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9300, decl_uid=212219, cgraph_uid=5932, symbol_order=6728)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, const struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNKSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=8533, decl_uid=179469, cgraph_uid=5165, symbol_order=5961)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222716;
  struct const_iterator D.250002;

  <bb 2> :
  _1 = &this->D.179858._M_impl.D.179203._M_start;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.222716, _1);
  D.250002 = D.222716;
  D.222716 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250002;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8536, decl_uid=212247, cgraph_uid=5168, symbol_order=5964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.250007;
  struct __normal_iterator D.250006;
  struct __normal_iterator D.250005;

  <bb 2> :
  D.250006 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__last);
  D.250007 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__first);
  D.250005 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.250007, D.250006, __result);

  <bb 3> :
<L0>:
  return D.250005;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9304, decl_uid=222758, cgraph_uid=5936, symbol_order=6732)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.250009;

  <bb 2> :
  D.250009 = __it;

  <bb 3> :
<L0>:
  return D.250009;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9305, decl_uid=222764, cgraph_uid=5938, symbol_order=6734)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct relate_type * D.250013;
  struct __normal_iterator D.250011;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__result);
  _2 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__last);
  _3 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__first);
  D.250013 = std::__copy_move_a1<false, const relate_type*, relate_type*> (_3, _2, _1);
  _4 = D.250013;
  D.250011 = std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.250011;

}



;; Function std::__niter_base<relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIP11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10013, decl_uid=234872, cgraph_uid=6645, symbol_order=7445)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  struct relate_type * D.250014;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__it);
  D.250014 = *_1;

  <bb 3> :
<L0>:
  return D.250014;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8773, decl_uid=202738, cgraph_uid=5405, symbol_order=6201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * const & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  struct relate_type * const & D.250016;

  <bb 2> :
  D.250016 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250016;

}



;; Function std::__niter_base<const relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIPK11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10012, decl_uid=234721, cgraph_uid=6644, symbol_order=7444)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * std::__niter_base<const relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  const struct relate_type * D.250018;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (&__it);
  D.250018 = *_1;

  <bb 3> :
<L0>:
  return D.250018;

}



;; Function std::__copy_move_a1<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=10014, decl_uid=234875, cgraph_uid=6646, symbol_order=7446)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250022;
  struct relate_type * D.250020;

  <bb 2> :
  D.250022 = std::__copy_move_a2<false, const relate_type*, relate_type*> (__first, __last, __result);
  D.250020 = D.250022;

  <bb 3> :
<L0>:
  return D.250020;

}



;; Function std::__copy_move_a2<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=10541, decl_uid=241756, cgraph_uid=7173, symbol_order=7973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250023;

  <bb 2> :
  D.250023 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250023;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11relate_typeEEPT_PKS4_S7_S5_, funcdef_no=10855, decl_uid=245233, cgraph_uid=7487, symbol_order=8289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct relate_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  const ptrdiff_t _Num;
  struct relate_type * D.250028;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 48;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.370_2 = (long unsigned int) _Num;
  _3 = _Num.370_2 * 48;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.371_4 = (long unsigned int) _Num;
  _5 = _Num.371_4 * 48;
  D.250028 = __result + _5;

  <bb 5> :
<L3>:
  return D.250028;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10015, decl_uid=234879, cgraph_uid=6647, symbol_order=7447)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __from, struct relate_type * __res)
{
  struct __normal_iterator D.250030;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 48;
  D.250030 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.250030;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10542, decl_uid=202729, cgraph_uid=7174, symbol_order=7974)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct relate_type * const D.245239;
  struct __normal_iterator D.245240;
  struct __normal_iterator D.250032;

  <bb 2> :
  _1 = this->_M_current;
  __n.372_2 = (long unsigned int) __n;
  _3 = __n.372_2 * 48;
  _4 = _1 + _3;
  D.245239 = _4;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.245240, &D.245239);
  D.250032 = D.245240;
  D.245240 = {CLOBBER};
  D.245239 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.250032;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8537, decl_uid=212253, cgraph_uid=5169, symbol_order=5965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.222793)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9307, decl_uid=222795, cgraph_uid=5939, symbol_order=6735)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10016, decl_uid=234903, cgraph_uid=6648, symbol_order=7448)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator D.241765, struct __normal_iterator D.241766)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<relate_type*, relate_type*> (_ZSt4copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=8538, decl_uid=212261, cgraph_uid=5170, symbol_order=5966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250038;
  struct relate_type * D.250036;

  <bb 2> :
  _1 = std::__miter_base<relate_type*> (__last);
  _2 = std::__miter_base<relate_type*> (__first);
  D.250038 = std::__copy_move_a<false, relate_type*, relate_type*> (_2, _1, __result);
  D.250036 = D.250038;

  <bb 3> :
<L0>:
  return D.250036;

}



;; Function std::__miter_base<relate_type*> (_ZSt12__miter_baseIP11relate_typeET_S2_, funcdef_no=9308, decl_uid=222811, cgraph_uid=5940, symbol_order=6736)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__miter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.250039;

  <bb 2> :
  D.250039 = __it;

  <bb 3> :
<L0>:
  return D.250039;

}



;; Function std::__copy_move_a<false, relate_type*, relate_type*> (_ZSt13__copy_move_aILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=9309, decl_uid=222813, cgraph_uid=5941, symbol_order=6737)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250043;
  struct relate_type * D.250041;

  <bb 2> :
  __result.373_1 = __result;
  _2 = std::__niter_base<relate_type*> (__result.373_1);
  _3 = std::__niter_base<relate_type*> (__last);
  _4 = std::__niter_base<relate_type*> (__first);
  D.250043 = std::__copy_move_a1<false, relate_type*, relate_type*> (_4, _3, _2);
  _5 = D.250043;
  D.250041 = std::__niter_wrap<relate_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250041;

}



;; Function std::__niter_base<relate_type*> (_ZSt12__niter_baseIP11relate_typeET_S2_, funcdef_no=10017, decl_uid=223021, cgraph_uid=6649, symbol_order=7449)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.250044;

  <bb 2> :
  D.250044 = __it;

  <bb 3> :
<L0>:
  return D.250044;

}



;; Function std::__copy_move_a1<false, relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=10018, decl_uid=234914, cgraph_uid=6650, symbol_order=7450)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250048;
  struct relate_type * D.250046;

  <bb 2> :
  D.250048 = std::__copy_move_a2<false, relate_type*, relate_type*> (__first, __last, __result);
  D.250046 = D.250048;

  <bb 3> :
<L0>:
  return D.250046;

}



;; Function std::__copy_move_a2<false, relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=10543, decl_uid=241774, cgraph_uid=7175, symbol_order=7975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250049;

  <bb 2> :
  D.250049 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250049;

}



;; Function std::__niter_wrap<relate_type*> (_ZSt12__niter_wrapIP11relate_typeET_RKS2_S2_, funcdef_no=10019, decl_uid=234918, cgraph_uid=6651, symbol_order=7451)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_wrap<relate_type*> (struct relate_type * const & D.241778, struct relate_type * __res)
{
  struct relate_type * D.250051;

  <bb 2> :
  D.250051 = __res;

  <bb 3> :
<L0>:
  return D.250051;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8523, decl_uid=179091, cgraph_uid=5155, symbol_order=5951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.250053;

  <bb 2> :
  D.250053 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250053;

}



;; Function std::vector<relate_type>::size (_ZNKSt6vectorI11relate_typeSaIS0_EE4sizeEv, funcdef_no=7819, decl_uid=179491, cgraph_uid=4451, symbol_order=5243)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::size (const struct vector * const this)
{
  size_type D.250055;

  <bb 2> :
  _1 = this->D.179858._M_impl.D.179203._M_finish;
  _2 = this->D.179858._M_impl.D.179203._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.250055 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.250055;

}



;; Function std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIP11relate_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8539, decl_uid=212265, cgraph_uid=5171, symbol_order=5967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & D.222820)
{
  struct relate_type * D.250059;
  struct relate_type * D.250057;

  <bb 2> :
  D.250059 = std::uninitialized_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.250057 = D.250059;

  <bb 3> :
<L0>:
  return D.250057;

}



;; Function std::uninitialized_copy<relate_type*, relate_type*> (_ZSt18uninitialized_copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=9310, decl_uid=222822, cgraph_uid=5943, symbol_order=6739)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250062;
  const bool __assignable;
  struct relate_type * D.250060;

  <bb 2> :
  __assignable = 1;
  D.250062 = std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.250060 = D.250062;

  <bb 3> :
<L0>:
  return D.250060;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11relate_typeS3_EET0_T_S5_S4_, funcdef_no=10020, decl_uid=235017, cgraph_uid=6652, symbol_order=7452)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.250063;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, relate_type&> (_1, __first);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250063 = __cur;

  <bb 6> :
<L3>:
  return D.250063;

}



;; Function std::_Construct<relate_type, relate_type&> (_ZSt10_ConstructI11relate_typeJRS0_EEvPT_DpOT0_, funcdef_no=10545, decl_uid=241786, cgraph_uid=7177, symbol_order=7977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, relate_type&> (struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.245263;
  void * D.245262;
  const struct relate_type * D.245264;

  <bb 2> :
  D.245264 = std::forward<relate_type&> (__args#0);
  D.245262 = __p;
  D.245263 = operator new (48, D.245262);
  MEM[(struct relate_type *)D.245263] = *D.245264;
  return;

}



;; Function std::forward<relate_type&> (_ZSt7forwardIR11relate_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10856, decl_uid=245260, cgraph_uid=7488, symbol_order=8290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type&> (struct type & __t)
{
  struct relate_type & D.250065;

  <bb 2> :
  D.250065 = __t;

  <bb 3> :
<L0>:
  return D.250065;

}



;; Function relate_type::relate_type (_ZN11relate_typeC2Ev, funcdef_no=6329, decl_uid=191973, cgraph_uid=3304, symbol_order=4085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void relate_type::relate_type (struct relate_type * const this)
{
  <bb 2> :
  this->now_fucntion = 0;
  this->now_stmt = 0;
  this->now_basicblock = 0;
  return;

}



;; Function std::vector<relate_type>::push_back (_ZNSt6vectorI11relate_typeSaIS0_EE9push_backERKS0_, funcdef_no=7676, decl_uid=179538, cgraph_uid=4309, symbol_order=5101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<relate_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.250070;

  <bb 2> :
  _1 = this->D.179858._M_impl.D.179203._M_finish;
  _2 = this->D.179858._M_impl.D.179203._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.179858._M_impl.D.179203._M_finish;
  _4 = &this->D.179858._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_4, _3, __x);
  _5 = this->D.179858._M_impl.D.179203._M_finish;
  _6 = _5 + 48;
  this->D.179858._M_impl.D.179203._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.250070 = std::vector<relate_type>::end (this);
  std::vector<relate_type>::_M_realloc_insert<const relate_type&> (this, D.250070, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8540, decl_uid=212277, cgraph_uid=5172, symbol_order=5968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (struct allocator_type & __a, struct relate_type * __p, const struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const relate_type&> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9313, decl_uid=222839, cgraph_uid=5945, symbol_order=6741)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (struct new_allocator * const this, struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.235029;
  void * D.235028;
  const struct relate_type * D.235030;

  <bb 2> :
  D.235030 = std::forward<const relate_type&> (__args#0);
  D.235028 = __p;
  D.235029 = operator new (48, D.235028);
  MEM[(struct relate_type *)D.235029] = *D.235030;
  return;

}



;; Function std::vector<relate_type>::_M_realloc_insert<const relate_type&> (_ZNSt6vectorI11relate_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8541, decl_uid=212446, cgraph_uid=5176, symbol_order=5972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::_M_realloc_insert<const relate_type&> (struct vector * const this, struct iterator __position, const struct relate_type & __args#0)
{
  struct relate_type * D.250075;
  const size_type D.250074;
  struct relate_type * __new_finish;
  struct relate_type * __new_start;
  const size_type __elems_before;
  struct relate_type * __old_finish;
  struct relate_type * __old_start;
  const size_type __len;
  struct iterator D.222850;

  <bb 2> :
  D.250074 = std::vector<relate_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.250074;
  __old_start = this->D.179858._M_impl.D.179203._M_start;
  __old_finish = this->D.179858._M_impl.D.179203._M_finish;
  D.222850 = std::vector<relate_type>::begin (this);
  _1 = __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (&__position, &D.222850);
  __elems_before = (const size_type) _1;
  D.222850 = {CLOBBER};
  _2 = &this->D.179858;
  D.250075 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_2, __len);
  __new_start = D.250075;
  __new_finish = __new_start;
  _3 = std::forward<const relate_type&> (__args#0);
  _4 = __elems_before * 48;
  _5 = __new_start + _4;
  _6 = &this->D.179858._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.179858;
  _8 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<relate_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 48;
  _11 = &this->D.179858;
  _12 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<relate_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.179858;
  _23 = this->D.179858._M_impl.D.179203._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 48;
  _26 = (long unsigned int) _25;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.179858._M_impl.D.179203._M_start = __new_start;
  this->D.179858._M_impl.D.179203._M_finish = __new_finish;
  _27 = __len * 48;
  _28 = __new_start + _27;
  this->D.179858._M_impl.D.179203._M_end_of_storage = _28;
  return;

}



;; Function std::vector<relate_type>::_M_check_len (_ZNKSt6vectorI11relate_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9314, decl_uid=179707, cgraph_uid=5946, symbol_order=6742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<relate_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.376;
  size_type D.250079;
  const long unsigned int D.235035;
  bool retval.374;

  <bb 2> :
  _1 = std::vector<relate_type>::max_size (this);
  _2 = std::vector<relate_type>::size (this);
  _3 = _1 - _2;
  __n.375_4 = __n;
  retval.374 = _3 < __n.375_4;
  if (retval.374 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<relate_type>::size (this);
  _6 = std::vector<relate_type>::size (this);
  D.235035 = _6;
  _7 = std::max<long unsigned int> (&D.235035, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235035 = {CLOBBER};
  _9 = std::vector<relate_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<relate_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.376 = std::vector<relate_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.376 = __len;

  <bb 8> :
  D.250079 = iftmp.376;

  <bb 9> :
<L6>:
  return D.250079;

}



;; Function std::vector<relate_type>::max_size (_ZNKSt6vectorI11relate_typeSaIS0_EE8max_sizeEv, funcdef_no=10021, decl_uid=179493, cgraph_uid=6653, symbol_order=7453)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::max_size (const struct vector * const this)
{
  size_type D.250086;

  <bb 2> :
  _1 = &this->D.179858;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  D.250086 = std::vector<relate_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.250086;

}



;; Function std::vector<relate_type>::_S_max_size (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10546, decl_uid=179714, cgraph_uid=7178, symbol_order=7978)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.250088;

  <bb 2> :
  __diffmax = 192153584101141162;
  _1 = std::allocator_traits<std::allocator<relate_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.250088 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250088;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::max_size (_ZNSt16allocator_traitsISaI11relate_typeEE8max_sizeERKS1_, funcdef_no=10857, decl_uid=179028, cgraph_uid=7489, symbol_order=8291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<relate_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.250091;

  <bb 2> :
  D.250091 = __gnu_cxx::new_allocator<relate_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.250091;

}



;; Function __gnu_cxx::new_allocator<relate_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE8max_sizeEv, funcdef_no=10977, decl_uid=178870, cgraph_uid=7609, symbol_order=8411)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::max_size (const struct new_allocator * const this)
{
  size_type D.250093;

  <bb 2> :
  D.250093 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.250093;

}



;; Function __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxmiIP11relate_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9315, decl_uid=222851, cgraph_uid=5947, symbol_order=6743)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.250095;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.250095 = _5 /[ex] 48;

  <bb 3> :
<L0>:
  return D.250095;

}



;; Function std::vector<relate_type>::_S_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9316, decl_uid=179365, cgraph_uid=5948, symbol_order=6744)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.250098;
  struct relate_type * D.250097;

  <bb 2> :
  D.250097 = std::vector<relate_type>::_S_do_relocate (__first, __last, __result, __alloc, D.250098);

  <bb 3> :
<L0>:
  return D.250097;

}



;; Function std::vector<relate_type>::_S_do_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10022, decl_uid=179353, cgraph_uid=6654, symbol_order=7454)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_do_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.241798)
{
  struct relate_type * D.250100;

  <bb 2> :
  D.250100 = std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.250100;

}



;; Function std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt12__relocate_aIP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10547, decl_uid=223015, cgraph_uid=7179, symbol_order=7979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * D.250102;

  <bb 2> :
  _1 = std::__niter_base<relate_type*> (__result);
  _2 = std::__niter_base<relate_type*> (__last);
  _3 = std::__niter_base<relate_type*> (__first);
  D.250102 = std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.250102;

}



;; Function std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt14__relocate_a_1IP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10858, decl_uid=223166, cgraph_uid=7490, symbol_order=8292)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * __cur;
  struct relate_type * D.250104;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_2, _1, __alloc);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250104 = __cur;

  <bb 6> :
<L3>:
  return D.250104;

}



;; Function std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_ZSt19__relocate_object_aI11relate_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10978, decl_uid=223195, cgraph_uid=7610, symbol_order=8412)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (struct relate_type * restrict __dest, struct relate_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<relate_type&> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (__alloc, __dest, _1);
  _2 = std::__addressof<relate_type> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (__alloc, _2);
  return;

}



;; Function std::move<relate_type&> (_ZSt4moveIR11relate_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11028, decl_uid=223207, cgraph_uid=7660, symbol_order=8462)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<relate_type&> (struct relate_type & __t)
{
  struct type & D.250106;

  <bb 2> :
  D.250106 = __t;

  <bb 3> :
<L0>:
  return D.250106;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11029, decl_uid=223209, cgraph_uid=7661, symbol_order=8463)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (struct allocator_type & __a, struct relate_type * __p, struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<relate_type> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (__a, __p, _1);
  return;

}



;; Function std::forward<relate_type> (_ZSt7forwardI11relate_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11050, decl_uid=247527, cgraph_uid=7682, symbol_order=8484)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type> (struct type & __t)
{
  struct relate_type & D.250108;

  <bb 2> :
  D.250108 = __t;

  <bb 3> :
<L0>:
  return D.250108;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11051, decl_uid=247529, cgraph_uid=7683, symbol_order=8485)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (struct new_allocator * const this, struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.247979;
  void * D.247978;
  struct relate_type * D.247980;

  <bb 2> :
  D.247980 = std::forward<relate_type> (__args#0);
  D.247978 = __p;
  D.247979 = operator new (48, D.247978);
  MEM[(struct relate_type *)D.247979] = *D.247980;
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9317, decl_uid=223224, cgraph_uid=5949, symbol_order=6745)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (struct allocator_type & __a, struct relate_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE7destroyIS1_EEvPT_, funcdef_no=10023, decl_uid=235049, cgraph_uid=6655, symbol_order=7455)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (struct new_allocator * const this, struct relate_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::put (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7678, decl_uid=191578, cgraph_uid=4313, symbol_order=5105)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_relate_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_relate_array & v)
{
  bool D.250117;
  struct hash_entry * D.250116;
  unsigned int D.250115;
  bool ins;
  struct hash_entry * e;
  bool D.250113;
  void * D.212456;
  void * D.212455;

  <bb 2> :
  _1 = &this->m_table;
  D.250115 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.250115;
  D.250116 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.250116;
  D.250117 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (e);
  ins = D.250117;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212455 = &e->m_value;
  D.212456 = operator new (24, D.212455);
  function_relate_array::function_relate_array (D.212456, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_relate_array::operator= (_4, v);

  <bb 5> :
  D.250113 = ~ins;

  <bb 6> :
<L3>:
  return D.250113;

  <bb 7> :
<L4>:
  operator delete (D.212456, D.212455);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8545, decl_uid=191736, cgraph_uid=5177, symbol_order=5973)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.250168;
  bool D.250167;
  bool D.250166;
  bool D.250165;
  bool D.250164;
  bool D.250163;
  struct value_type * D.250162;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.382;
  bool retval.381;
  bool retval.380;
  bool retval.379;
  bool retval.378;
  bool retval.377;
  struct value_type * D.250124;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.250163 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.377 = D.250163;
  if (retval.377 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.250164 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.378 = D.250164;
  if (retval.378 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.250165 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.379 = D.250165;
  if (retval.379 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.250124 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.250166 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.380 = D.250166;
  if (retval.380 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.250167 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.381 = D.250167;
  if (retval.381 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.250168 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.382 = D.250168;
  if (retval.382 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.250124 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.250124 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.250124 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.250124 = _37 + _39;

  <bb 27> :
<L37>:
  return D.250124;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9318, decl_uid=191817, cgraph_uid=5962, symbol_order=6758)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.250199;
  unsigned int D.250198;
  bool D.250197;
  bool D.250196;
  struct mem_alloc_description & D.250195;
  struct value_type * D.250194;
  unsigned int D.250193;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.235072;
  void * D.235071;
  struct hash_entry & D.235109;
  bool iftmp.386;
  bool retval.385;
  bool iftmp.384;
  bool retval.383;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.384 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.384 = 0;

  <bb 6> :
  retval.383 = iftmp.384;
  if (retval.383 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.250193 = hash_table_higher_prime_index (_5);
  nindex = D.250193;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.250194 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.250194;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.250196 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.250196;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.250197 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.250197;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.386 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.386 = 0;

  <bb 15> :
  retval.385 = iftmp.386;
  if (retval.385 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.250198 = hash_map<tree_node*, function_relate_array>::hash_entry::hash (x);
  _16 = D.250198;
  D.250199 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.250199;
  D.235109 = std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (x);
  D.235071 = q;
  D.235072 = operator new (32, D.235071);
  hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (D.235072, D.235109);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10024, decl_uid=191712, cgraph_uid=6656, symbol_order=7456)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.250200;

  <bb 2> :
  D.250200 = this->m_size;

  <bb 3> :
<L0>:
  return D.250200;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10025, decl_uid=191714, cgraph_uid=6657, symbol_order=7457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.250202;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.250202 = _1 - _2;

  <bb 3> :
<L0>:
  return D.250202;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10026, decl_uid=191814, cgraph_uid=6658, symbol_order=7458)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.387;
  bool D.250204;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.387 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.387 = 0;

  <bb 6> :
  D.250204 = iftmp.387;

  <bb 7> :
<L4>:
  return D.250204;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9296, decl_uid=191804, cgraph_uid=5928, symbol_order=6724)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.250226;
  struct value_type * D.250225;
  struct mem_alloc_description & D.250224;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.250222;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.250225 = xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (n);
  nentries = D.250225;
  goto <bb 6>; [INV]

  <bb 5> :
  D.250226 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (n);
  nentries = D.250226;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.250222 = nentries;

  <bb 9> :
<L14>:
  return D.250222;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10007, decl_uid=215706, cgraph_uid=6639, symbol_order=7439)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.250229;
  struct hash_entry * D.250227;

  <bb 2> :
  D.250229 = xcalloc (count, 32);
  D.250227 = D.250229;

  <bb 3> :
<L0>:
  return D.250227;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10008, decl_uid=234681, cgraph_uid=6640, symbol_order=7440)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.250236;
  struct hash_entry * D.250235;
  struct hash_entry * D.250233;
  bool retval.388;

  <bb 2> :
  retval.388 = need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ();
  if (retval.388 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.250235 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.250233 = D.250235;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.250236 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.250233 = D.250236;

  <bb 5> :
<L2>:
  return D.250233;

}



;; Function finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10533, decl_uid=241691, cgraph_uid=7168, symbol_order=7968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10535, decl_uid=245170, cgraph_uid=7166, symbol_order=7966)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_relate_array::~function_relate_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10532, decl_uid=241690, cgraph_uid=7164, symbol_order=7964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ()
{
  bool D.250237;

  <bb 2> :
  D.250237 = 1;

  <bb 3> :
<L0>:
  return D.250237;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10028, decl_uid=191637, cgraph_uid=6660, symbol_order=7460)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_relate_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.250241;
  hashval_t D.250239;

  <bb 2> :
  _1 = &e->m_key;
  D.250241 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_1);
  D.250239 = D.250241;

  <bb 3> :
<L0>:
  return D.250239;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10027, decl_uid=191807, cgraph_uid=6659, symbol_order=7459)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.250254;
  bool D.250253;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.390;
  struct value_type * D.250245;
  bool retval.389;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.250253 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.389 = D.250253;
  if (retval.389 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.250245 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.250254 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.390 = D.250254;
  if (retval.390 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.250245 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.250245;

}



;; Function std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10029, decl_uid=235069, cgraph_uid=6661, symbol_order=7461)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.250255;

  <bb 2> :
  D.250255 = __t;

  <bb 3> :
<L0>:
  return D.250255;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9329, decl_uid=235094, cgraph_uid=5960, symbol_order=6756)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.235096)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.235096->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.235096->m_value;
  function_relate_array::function_relate_array (_2, _3);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2EOS_, funcdef_no=9327, decl_uid=191512, cgraph_uid=5957, symbol_order=6753)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, struct function_relate_array & D.191514)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191514->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9325, decl_uid=179815, cgraph_uid=5954, symbol_order=6750)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this, struct vector & D.179817)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179858;
  _2 = &D.179817->D.179858;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9323, decl_uid=179283, cgraph_uid=5951, symbol_order=6747)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.179285)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.179285->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10031, decl_uid=179189, cgraph_uid=6663, symbol_order=7463)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  std::allocator<relate_type>::allocator (this, _1);
  _2 = &this->D.179203;
  _3 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.179203;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2ERKS0_, funcdef_no=10550, decl_uid=178973, cgraph_uid=7182, symbol_order=7982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2ERKS2_, funcdef_no=10860, decl_uid=178902, cgraph_uid=7492, symbol_order=8294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.178904)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11relate_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10548, decl_uid=241828, cgraph_uid=7180, symbol_order=7980)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.250257;

  <bb 2> :
  D.250257 = __t;

  <bb 3> :
<L0>:
  return D.250257;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10553, decl_uid=179145, cgraph_uid=7185, symbol_order=7985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8777, decl_uid=215708, cgraph_uid=5409, symbol_order=6205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9331, decl_uid=191825, cgraph_uid=5963, symbol_order=6759)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10033, decl_uid=191649, cgraph_uid=6665, symbol_order=7465)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10555, decl_uid=241843, cgraph_uid=7187, symbol_order=7987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2ERKS_, funcdef_no=7680, decl_uid=191503, cgraph_uid=4311, symbol_order=5103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, const struct function_relate_array & D.191505)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191505->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2ERKS2_, funcdef_no=8548, decl_uid=179821, cgraph_uid=5180, symbol_order=5976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<relate_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.250264;
  struct __normal_iterator D.250261;
  struct __normal_iterator D.250260;
  struct allocator D.223427;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179858;
  _2 = &__x->D.179858;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  D.223427 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<relate_type>::size (__x);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _4, &D.223427);

  <bb 3> :
  std::allocator<relate_type>::~allocator (&D.223427);
  D.223427 = {CLOBBER};
  _5 = &this->D.179858;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.179858._M_impl.D.179203._M_start;
  D.250260 = std::vector<relate_type>::end (__x);
  D.250261 = std::vector<relate_type>::begin (__x);
  D.250264 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (D.250261, D.250260, _7, _6);

  <bb 4> :
  _8 = D.250264;
  this->D.179858._M_impl.D.179203._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<relate_type>::~allocator (&D.223427);
  resx 2

  <bb 6> :
<L1>:
  D.223427 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.179858;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=9332, decl_uid=179065, cgraph_uid=5964, symbol_order=6760)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11relate_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=10034, decl_uid=179030, cgraph_uid=6666, symbol_order=7466)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<relate_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EmRKS1_, funcdef_no=9334, decl_uid=179290, cgraph_uid=5966, symbol_order=6762)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=10036, decl_uid=179195, cgraph_uid=6668, symbol_order=7468)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this, __a);
  _1 = &this->D.179203;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_M_create_storageEm, funcdef_no=10038, decl_uid=179214, cgraph_uid=6670, symbol_order=7470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.250271;

  <bb 2> :
  D.250271 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (this, __n);
  _1 = D.250271;
  this->_M_impl.D.179203._M_start = _1;
  _2 = this->_M_impl.D.179203._M_start;
  this->_M_impl.D.179203._M_finish = _2;
  _3 = this->_M_impl.D.179203._M_start;
  _4 = __n * 48;
  _5 = _3 + _4;
  this->_M_impl.D.179203._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6315, decl_uid=179250, cgraph_uid=3288, symbol_order=4069)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<relate_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<relate_type>::~allocator (_ZNSaI11relate_typeED2Ev, funcdef_no=7664, decl_uid=178983, cgraph_uid=4296, symbol_order=5088)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeED2Ev, funcdef_no=8520, decl_uid=178912, cgraph_uid=5152, symbol_order=5948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EED2Ev, funcdef_no=7667, decl_uid=179313, cgraph_uid=4299, symbol_order=5091)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.179203._M_end_of_storage;
  _2 = this->_M_impl.D.179203._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.179203._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function function_relate_array::~function_relate_array (_ZN21function_relate_arrayD2Ev, funcdef_no=6325, decl_uid=191524, cgraph_uid=3300, symbol_order=4081)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::~function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<relate_type>::~vector (_ZNSt6vectorI11relate_typeSaIS0_EED2Ev, funcdef_no=7670, decl_uid=179855, cgraph_uid=4302, symbol_order=5094)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179858;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.179858._M_impl.D.179203._M_finish;
  _4 = this->D.179858._M_impl.D.179203._M_start;
  std::_Destroy<relate_type*, relate_type> (_4, _3, _2);
  _5 = &this->D.179858;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function trace_function_path (_Z19trace_function_pathP9tree_nodeiS0_Pi, funcdef_no=6331, decl_uid=187098, cgraph_uid=3338, symbol_order=4119)

Removing basic block 38
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 46
Removing basic block 76
Removing basic block 93
Removing basic block 94
Removing basic block 100
Removing basic block 125
Removing basic block 153
Removing basic block 166
Removing basic block 167
Removing basic block 168
Removing basic block 185
Removing basic block 187
Removing basic block 209
Removing basic block 222
Removing basic block 223
Removing basic block 227
Removing basic block 236
Merging blocks 237 and 239
;; 9 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245
;;
;; Loop 6
;;  header 214, latch 213
;;  depth 1, outer 0
;;  nodes: 214 213 207 212 211 210 209 208 183 206 185 184 205 194 204 195 203 196 202 201 200 199 198 197 191 193 192 190 189 188 187 186 180 182 176 181 177 175 174 179 178
;;
;; Loop 8
;;  header 205, latch 204
;;  depth 2, outer 6
;;  nodes: 205 204 195 203 196 202 201 200 199 198 197
;;
;; Loop 7
;;  header 182, latch 181
;;  depth 2, outer 6
;;  nodes: 182 181 177
;;
;; Loop 5
;;  header 143, latch 142
;;  depth 1, outer 0
;;  nodes: 143 142 132 141 140 139 138 137 136 135 134 133 131 130 129
;;
;; Loop 4
;;  header 116, latch 115
;;  depth 1, outer 0
;;  nodes: 116 115 105 114 113 112 111 110 109 108 107 106 104 103 102
;;
;; Loop 3
;;  header 87, latch 86
;;  depth 1, outer 0
;;  nodes: 87 86 58 63 62 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 69 70 66 65 64 68 67 61 60 59 57 56
;;
;; Loop 2
;;  header 54, latch 53
;;  depth 1, outer 0
;;  nodes: 54 53 52 51
;;
;; Loop 1
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38 23 37 29 31 33 30 32 27 28 24 25 26 36 35 34
;; 2 succs { 3 4 }
;; 3 succs { 216 }
;; 4 succs { 245 5 }
;; 5 succs { 6 7 }
;; 6 succs { 216 }
;; 7 succs { 245 8 }
;; 8 succs { 245 9 }
;; 9 succs { 244 10 }
;; 10 succs { 243 11 }
;; 11 succs { 243 12 }
;; 12 succs { 13 41 }
;; 13 succs { 243 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 41 }
;; 19 succs { 220 20 }
;; 20 succs { 220 21 }
;; 21 succs { 219 22 }
;; 22 succs { 39 }
;; 23 succs { 24 38 }
;; 24 succs { 25 28 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 30 38 }
;; 30 succs { 31 38 }
;; 31 succs { 32 38 }
;; 32 succs { 218 33 }
;; 33 succs { 34 38 }
;; 34 succs { 218 35 }
;; 35 succs { 218 36 }
;; 36 succs { 218 37 }
;; 37 succs { 218 38 }
;; 38 succs { 39 }
;; 39 succs { 23 40 }
;; 40 succs { 41 }
;; 41 succs { 42 91 }
;; 42 succs { 43 91 }
;; 43 succs { 243 44 }
;; 44 succs { 45 91 }
;; 45 succs { 229 46 }
;; 46 succs { 229 47 }
;; 47 succs { 228 48 }
;; 48 succs { 227 49 }
;; 49 succs { 221 50 }
;; 50 succs { 54 }
;; 51 succs { 223 52 }
;; 52 succs { 222 53 }
;; 53 succs { 54 }
;; 54 succs { 51 55 }
;; 55 succs { 87 }
;; 56 succs { 227 57 }
;; 57 succs { 227 58 }
;; 58 succs { 59 86 }
;; 59 succs { 227 60 }
;; 60 succs { 227 61 }
;; 61 succs { 227 62 }
;; 62 succs { 63 86 }
;; 63 succs { 64 86 }
;; 64 succs { 227 65 }
;; 65 succs { 224 66 }
;; 66 succs { 67 70 }
;; 67 succs { 226 68 }
;; 68 succs { 225 69 }
;; 69 succs { 227 71 }
;; 70 succs { 227 71 }
;; 71 succs { 227 72 }
;; 72 succs { 227 73 }
;; 73 succs { 227 74 }
;; 74 succs { 227 75 }
;; 75 succs { 227 76 }
;; 76 succs { 227 77 }
;; 77 succs { 227 78 }
;; 78 succs { 227 79 }
;; 79 succs { 227 80 }
;; 80 succs { 227 81 }
;; 81 succs { 227 82 }
;; 82 succs { 227 83 }
;; 83 succs { 227 84 }
;; 84 succs { 227 85 }
;; 85 succs { 227 86 }
;; 86 succs { 87 }
;; 87 succs { 56 88 }
;; 88 succs { 89 90 }
;; 89 succs { 90 }
;; 90 succs { 91 }
;; 91 succs { 243 92 }
;; 92 succs { 93 96 }
;; 93 succs { 94 96 }
;; 94 succs { 95 96 }
;; 95 succs { 97 }
;; 96 succs { 97 }
;; 97 succs { 98 118 }
;; 98 succs { 232 99 }
;; 99 succs { 232 100 }
;; 100 succs { 231 101 }
;; 101 succs { 116 }
;; 102 succs { 230 103 }
;; 103 succs { 230 104 }
;; 104 succs { 230 105 }
;; 105 succs { 106 115 }
;; 106 succs { 230 107 }
;; 107 succs { 230 108 }
;; 108 succs { 230 109 }
;; 109 succs { 230 110 }
;; 110 succs { 230 111 }
;; 111 succs { 230 112 }
;; 112 succs { 230 113 }
;; 113 succs { 230 114 }
;; 114 succs { 230 115 }
;; 115 succs { 116 }
;; 116 succs { 102 117 }
;; 117 succs { 118 }
;; 118 succs { 243 119 }
;; 119 succs { 120 123 }
;; 120 succs { 121 123 }
;; 121 succs { 122 123 }
;; 122 succs { 124 }
;; 123 succs { 124 }
;; 124 succs { 125 145 }
;; 125 succs { 235 126 }
;; 126 succs { 235 127 }
;; 127 succs { 234 128 }
;; 128 succs { 143 }
;; 129 succs { 233 130 }
;; 130 succs { 233 131 }
;; 131 succs { 233 132 }
;; 132 succs { 133 142 }
;; 133 succs { 233 134 }
;; 134 succs { 233 135 }
;; 135 succs { 233 136 }
;; 136 succs { 233 137 }
;; 137 succs { 233 138 }
;; 138 succs { 233 139 }
;; 139 succs { 233 140 }
;; 140 succs { 233 141 }
;; 141 succs { 233 142 }
;; 142 succs { 143 }
;; 143 succs { 129 144 }
;; 144 succs { 145 }
;; 145 succs { 146 154 }
;; 146 succs { 147 154 }
;; 147 succs { 148 154 }
;; 148 succs { 149 154 }
;; 149 succs { 150 154 }
;; 150 succs { 243 151 }
;; 151 succs { 152 154 }
;; 152 succs { 153 154 }
;; 153 succs { 243 154 }
;; 154 succs { 155 157 }
;; 155 succs { 156 157 }
;; 156 succs { 157 }
;; 157 succs { 158 171 }
;; 158 succs { 243 159 }
;; 159 succs { 160 171 }
;; 160 succs { 237 161 }
;; 161 succs { 237 162 }
;; 162 succs { 236 163 }
;; 163 succs { 164 166 }
;; 164 succs { 165 166 }
;; 165 succs { 167 }
;; 166 succs { 167 }
;; 167 succs { 168 170 }
;; 168 succs { 236 169 }
;; 169 succs { 236 170 }
;; 170 succs { 171 }
;; 171 succs { 243 172 }
;; 172 succs { 173 215 }
;; 173 succs { 214 }
;; 174 succs { 241 175 }
;; 175 succs { 241 176 }
;; 176 succs { 182 }
;; 177 succs { 178 181 }
;; 178 succs { 241 179 }
;; 179 succs { 241 180 }
;; 180 succs { 183 }
;; 181 succs { 182 }
;; 182 succs { 177 183 }
;; 183 succs { 184 207 }
;; 184 succs { 241 185 }
;; 185 succs { 186 207 }
;; 186 succs { 240 187 }
;; 187 succs { 240 188 }
;; 188 succs { 240 189 }
;; 189 succs { 238 190 }
;; 190 succs { 191 192 }
;; 191 succs { 238 194 }
;; 192 succs { 238 193 }
;; 193 succs { 238 194 }
;; 194 succs { 205 }
;; 195 succs { 196 204 }
;; 196 succs { 197 204 }
;; 197 succs { 238 198 }
;; 198 succs { 238 199 }
;; 199 succs { 238 200 }
;; 200 succs { 238 201 }
;; 201 succs { 238 202 }
;; 202 succs { 203 204 }
;; 203 succs { 204 }
;; 204 succs { 205 }
;; 205 succs { 195 206 }
;; 206 succs { 207 }
;; 207 succs { 208 213 }
;; 208 succs { 241 209 }
;; 209 succs { 241 210 }
;; 210 succs { 241 211 }
;; 211 succs { 241 212 }
;; 212 succs { 213 }
;; 213 succs { 214 }
;; 214 succs { 174 215 }
;; 215 succs { 1 }
;; 216 succs { 217 }
;; 217 succs { 1 }
;; 218 succs { 219 }
;; 219 succs { 220 }
;; 220 succs { 243 }
;; 221 succs { 227 }
;; 222 succs { 223 }
;; 223 succs { 227 }
;; 224 succs { 227 }
;; 225 succs { 226 }
;; 226 succs { 227 }
;; 227 succs { 228 }
;; 228 succs { 229 }
;; 229 succs { 243 }
;; 230 succs { 231 }
;; 231 succs { 232 }
;; 232 succs { 243 }
;; 233 succs { 234 }
;; 234 succs { 235 }
;; 235 succs { 243 }
;; 236 succs { 237 }
;; 237 succs { 243 }
;; 238 succs { 239 }
;; 239 succs { 240 }
;; 240 succs { 241 }
;; 241 succs { 242 }
;; 242 succs { 243 }
;; 243 succs { 244 }
;; 244 succs { 245 }
;; 245 succs { }
int trace_function_path (union tree_node * function_tree, int fucntion_level, union tree_node * mallocStmt_tree, int * freecount)
{
  const char * D.250504;
  const char * D.250500;
  const char * D.250499;
  const char * D.250498;
  struct function_return_array * D.250497;
  struct function_return_array * D.250496;
  struct function_return_array * D.250495;
  struct function_return_array * D.250494;
  const char * D.250493;
  const char * D.250492;
  struct function_return_array * D.250491;
  const char * D.250488;
  struct function_return_array * D.250487;
  struct function_return_array * D.250486;
  struct function_return_array * D.250485;
  const char * D.250481;
  struct function_pthread_exit_array * D.250480;
  struct function_pthread_exit_array * D.250479;
  const char * D.250475;
  struct function_pthread_detched_array * D.250474;
  struct function_pthread_detched_array * D.250473;
  const char * D.250469;
  union tree_node * D.250466;
  int * D.250464;
  union tree_node * D.250463;
  bool D.250462;
  union tree_node * D.250459;
  void * D.250457;
  struct function_free_array * D.250456;
  struct function_free_array * D.250455;
  bool D.250451;
  struct function_return_array * D.250450;
  struct function_return_array * D.250449;
  const char * D.250448;
  struct function_path_array * D.250447;
  struct function_path_array * D.250446;
  int k;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  int o;
  int find;
  int i;
  struct function_return_array callerFunArray;
  struct pt_solution * pt1;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct cgraph_node * node;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_exit_array callerFunArray;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_detched_array callerFunArray;
  long unsigned int x;
  int k;
  int k;
  struct hash_map * function_basicblock_collect;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  struct pt_solution * pt;
  struct ptr_info_def * pi;
  int k;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct function_return_array calleeFunArray;
  struct vector callerRetTypearray;
  struct function_return_array * callerFunArray;
  const char * name;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.512;
  bool retval.510;
  bool retval.502;
  bool retval.499;
  bool retval.496;
  bool retval.495;
  bool retval.494;
  bool retval.492;
  bool iftmp.486;
  bool retval.485;
  bool retval.482;
  bool retval.481;
  bool retval.472;
  bool iftmp.457;
  bool retval.456;
  bool retval.455;
  bool iftmp.440;
  bool retval.439;
  struct hash_map * function_basicblock_collect.438;
  bool retval.437;
  union tree_node * const D.193358;
  const int D.193359;
  union tree_node * const D.193357;
  bool retval.422;
  bool retval.418;
  bool retval.417;
  union tree_node * const D.193354;
  const int D.193355;
  void * D.193352;
  bool retval.414;
  bool retval.411;
  bool retval.408;
  bool retval.407;
  bool iftmp.406;
  bool retval.405;
  bool retval.404;
  bool iftmp.399;
  bool retval.398;
  bool retval.392;
  int D.250274;

  <bb 2> :
  contextsentive.391_1 = contextsentive;
  _2 = (int) contextsentive.391_1;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.250274 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 216>; [INV]

  <bb 4> :
  function_path_collect.393_3 = function_path_collect;
  D.250446 = hash_map<tree_node*, function_path_array>::get (function_path_collect.393_3, &function_tree);

  <bb 5> :
  _4 = D.250446;
  retval.392 = _4 == 0B;
  if (retval.392 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.250274 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 216>; [INV]

  <bb 7> :
  _5 = rand ();
  _6 = (long unsigned int) _5;
  now_fucntion = _6;
  function_path_collect.394_7 = function_path_collect;
  D.250447 = hash_map<tree_node*, function_path_array>::get (function_path_collect.394_7, &function_tree);

  <bb 8> :
  _8 = D.250447;
  function_path_array::function_path_array (&fun_array, _8);

  <bb 9> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 10> :
  fistconunt = 0;
  _9 = std::vector<function_path>::size (&function_path_array);
  function_tree.395_10 = function_tree;
  D.250448 = get_name (function_tree.395_10);

  <bb 11> :
  _11 = D.250448;
  stderr.396_12 = stderr;
  fprintf2 (stderr.396_12, "\x1b[40;44m =======trace_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _11, _9, fucntion_level);

  <bb 12> :
  retmod.397_13 = retmod;
  if (retmod.397_13 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 13> :
  function_return_collect.400_14 = function_return_collect;
  D.250449 = hash_map<tree_node*, function_return_array>::get (function_return_collect.400_14, &function_tree);

  <bb 14> :
  _15 = D.250449;
  if (_15 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  fucntion_level.401_16 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.402_17 = RET_HEAP_OBJECT;
  if (fucntion_level.401_16 == RET_HEAP_OBJECT.402_17)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.399 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.399 = 0;

  <bb 18> :
  retval.398 = iftmp.399;
  if (retval.398 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 19> :
  function_return_collect.403_18 = function_return_collect;
  D.250450 = hash_map<tree_node*, function_return_array>::get (function_return_collect.403_18, &function_tree);

  <bb 20> :
  _19 = D.250450;
  function_return_array::function_return_array (&callerFunArray, _19);

  <bb 21> :
  std::vector<return_type>::vector (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 22> :
  k = 0;
  goto <bb 39>; [INV]

  <bb 23> :
  _20 = (long unsigned int) k;
  _21 = std::vector<return_type>::operator[] (&callerRetTypearray, _20);
  _22 = _21->return_tree;
  retval.404 = _22 != 0B;
  if (retval.404 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 24> :
  _23 = mallocStmt_tree->base.code;
  if (_23 != 26)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 25> :
  _24 = mallocStmt_tree->base.code;
  if (_24 != 33)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  _25 = (long unsigned int) k;
  _26 = std::vector<return_type>::operator[] (&callerRetTypearray, _25);
  _27 = _26->return_tree;
  _28 = _27->base.code;
  if (_28 != 33)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  iftmp.406 = 1;
  goto <bb 29>; [INV]

  <bb 28> :
  iftmp.406 = 0;

  <bb 29> :
  retval.405 = iftmp.406;
  if (retval.405 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 30> :
  _29 = (long unsigned int) k;
  _30 = std::vector<return_type>::operator[] (&callerRetTypearray, _29);
  _31 = _30->return_tree;
  _32 = _31->base.code;
  retval.407 = _32 != 26;
  if (retval.407 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 31> :
  pi = mallocStmt_tree->ssa_name.info.ptr_info;
  pt = &pi->pt;
  if (pi != 0B)
    goto <bb 32>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 32> :
  _33 = (long unsigned int) k;
  _34 = std::vector<return_type>::operator[] (&callerRetTypearray, _33);
  _35 = _34->return_tree;
  D.250451 = ptr_derefs_may_alias_p (_35, mallocStmt_tree);

  <bb 33> :
  retval.408 = D.250451;
  if (retval.408 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 34> :
  stderr.409_36 = stderr;
  fprintf2 (stderr.409_36, "\x1b[40;31m  find return stmt  \x1b[0m\n");

  <bb 35> :
  stderr.410_37 = stderr;
  fprintf2 (stderr.410_37, "\x1b[40;31m  this fucntion return heap-object  \x1b[0m\n");

  <bb 36> :
  _38 = (long unsigned int) k;
  _39 = std::vector<return_type>::operator[] (&callerRetTypearray, _38);
  _40 = _39->stmt;
  debug_gimple_stmt2 (_40);

  <bb 37> :
  _41 = (long unsigned int) k;
  _42 = std::vector<return_type>::operator[] (&callerRetTypearray, _41);
  _43 = _42->stmt;
  _44 = gimple_location_safe (_43);
  warning_at2 (_44, 0, "use location");

  <bb 38> :
  k = k + 1;

  <bb 39> :
  _45 = (long unsigned int) k;
  _46 = std::vector<return_type>::size (&callerRetTypearray);
  retval.411 = _45 < _46;
  if (retval.411 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 40> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 41> :
  if (mallocStmt_tree != 0B)
    goto <bb 42>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 42> :
  fucntion_level.412_47 = (unsigned int) fucntion_level;
  DISABLE_TREACE.413_48 = DISABLE_TREACE;
  if (fucntion_level.412_47 != DISABLE_TREACE.413_48)
    goto <bb 43>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 43> :
  function_free_collect.415_49 = function_free_collect;
  D.250455 = hash_map<tree_node*, function_free_array>::get (function_free_collect.415_49, &function_tree);

  <bb 44> :
  _50 = D.250455;
  retval.414 = _50 != 0B;
  if (retval.414 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 45> :
  function_free_collect.416_51 = function_free_collect;
  D.250456 = hash_map<tree_node*, function_free_array>::get (function_free_collect.416_51, &function_tree);

  <bb 46> :
  _52 = D.250456;
  function_free_array::function_free_array (&callerFunArray, _52);

  <bb 47> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 48> :
  D.250457 = operator new (48);

  <bb 49> :
  D.193352 = D.250457;
  hash_map<tree_node*, int>::hash_map (D.193352, 13, 0, 1, 0);

  <bb 50> :
  function_basicblock_collect = D.193352;
  k = 0;
  goto <bb 54>; [INV]

  <bb 51> :
  D.193355 = 0;
  _53 = (long unsigned int) k;
  _54 = std::vector<free_type>::operator[] (&callerRetTypearray, _53);
  _55 = _54->stmt;
  D.250459 = gimple_block (_55);

  <bb 52> :
  _56 = D.250459;
  D.193354 = _56;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193354, &D.193355);

  <bb 53> :
  D.193354 = {CLOBBER};
  D.193355 = {CLOBBER};
  k = k + 1;

  <bb 54> :
  _57 = (long unsigned int) k;
  _58 = std::vector<free_type>::size (&callerRetTypearray);
  retval.417 = _57 < _58;
  if (retval.417 != 0)
    goto <bb 51>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 55> :
  k = 0;
  goto <bb 87>; [INV]

  <bb 56> :
  _59 = (long unsigned int) k;
  _60 = std::vector<free_type>::operator[] (&callerRetTypearray, _59);
  _61 = _60->stmt;
  debug_gimple_stmt2 (_61);

  <bb 57> :
  _62 = (long unsigned int) k;
  _63 = std::vector<free_type>::operator[] (&callerRetTypearray, _62);
  _64 = _63->free_tree;
  D.250462 = ptr_derefs_may_alias_p (_64, mallocStmt_tree);

  <bb 58> :
  retval.418 = D.250462;
  if (retval.418 != 0)
    goto <bb 59>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 59> :
  stderr.419_65 = stderr;
  fprintf2 (stderr.419_65, "\x1b[40;31m  find free stmt free same pointer \x1b[0m\n");

  <bb 60> :
  _66 = (long unsigned int) k;
  _67 = std::vector<free_type>::operator[] (&callerRetTypearray, _66);
  _68 = _67->stmt;
  debug_gimple_stmt2 (_68);

  <bb 61> :
  _69 = (long unsigned int) k;
  _70 = std::vector<free_type>::operator[] (&callerRetTypearray, _69);
  _71 = _70->stmt;
  _72 = gimple_location_safe (_71);
  warning_at2 (_72, 0, "use location");

  <bb 62> :
  _73 = *freecount;
  _74 = _73 + 1;
  *freecount = _74;
  freemod.420_75 = freemod;
  if (freemod.420_75 != 0)
    goto <bb 63>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 63> :
  debugmod.421_76 = debugmod;
  if (debugmod.421_76 != 0)
    goto <bb 64>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 64> :
  _77 = (long unsigned int) k;
  _78 = std::vector<free_type>::operator[] (&callerRetTypearray, _77);
  _79 = _78->stmt;
  D.250463 = gimple_block (_79);

  <bb 65> :
  _80 = D.250463;
  D.193357 = _80;
  D.250464 = hash_map<tree_node*, int>::get (function_basicblock_collect, &D.193357);

  <bb 66> :
  _81 = D.250464;
  _82 = *_81;
  retval.422 = _82 == 0;
  D.193357 = {CLOBBER};
  if (retval.422 != 0)
    goto <bb 67>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 67> :
  D.193359 = 1;
  _83 = (long unsigned int) k;
  _84 = std::vector<free_type>::operator[] (&callerRetTypearray, _83);
  _85 = _84->stmt;
  D.250466 = gimple_block (_85);

  <bb 68> :
  _86 = D.250466;
  D.193358 = _86;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193358, &D.193359);

  <bb 69> :
  D.193358 = {CLOBBER};
  D.193359 = {CLOBBER};
  stderr.423_87 = stderr;
  fprintf2 (stderr.423_87, "dot graph start relate form ");
  goto <bb 71>; [INV]

  <bb 70> :
  stderr.424_88 = stderr;
  fprintf2 (stderr.424_88, "dot graph start relate form ");

  <bb 71> :
  now_fucntion.425_89 = now_fucntion;
  stderr.426_90 = stderr;
  fprintf2 (stderr.426_90, "ID : %lu\n", now_fucntion.425_89);

  <bb 72> :
  _91 = (long unsigned int) k;
  _92 = std::vector<free_type>::operator[] (&callerRetTypearray, _91);
  _93 = _92->stmt;
  _94 = gimple_bb (_93);
  _95 = _94->index;
  function_tree.427_96 = function_tree;
  D.250469 = get_name (function_tree.427_96);

  <bb 73> :
  _97 = D.250469;
  stderr.428_98 = stderr;
  fprintf2 (stderr.428_98, "from %s basic block %d", _97, _95);

  <bb 74> :
  stderr.429_99 = stderr;
  fprintf2 (stderr.429_99, "dot graph end relate end\n\n");

  <bb 75> :
  _100 = (long unsigned int) k;
  _101 = std::vector<free_type>::operator[] (&callerRetTypearray, _100);
  _102 = _101->stmt;
  now_laststmt = _102;
  _103 = rand ();
  x = (long unsigned int) _103;
  now_laststmtid = x;
  stderr.430_104 = stderr;
  fprintf2 (stderr.430_104, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 76> :
  _105 = (long unsigned int) k;
  _106 = std::vector<free_type>::operator[] (&callerRetTypearray, _105);
  _107 = _106->stmt;
  debug2 (_107);

  <bb 77> :
  _108 = (long unsigned int) k;
  _109 = std::vector<free_type>::operator[] (&callerRetTypearray, _108);
  _110 = _109->stmt;
  _111 = gimple_location_safe (_110);
  warning_at2 (_111, 0, "use location");

  <bb 78> :
  stderr.431_112 = stderr;
  fprintf2 (stderr.431_112, "dot graph relate end\n\n");

  <bb 79> :
  stderr.432_113 = stderr;
  fprintf2 (stderr.432_113, "dot graph target color desc");

  <bb 80> :
  stderr.433_114 = stderr;
  fprintf2 (stderr.433_114, "green");

  <bb 81> :
  stderr.434_115 = stderr;
  fprintf2 (stderr.434_115, "dot graph target color desend\n\n");

  <bb 82> :
  stderr.435_116 = stderr;
  fprintf2 (stderr.435_116, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 83> :
  _117 = (long unsigned int) k;
  _118 = std::vector<free_type>::operator[] (&callerRetTypearray, _117);
  _119 = _118->stmt;
  debug2 (_119);

  <bb 84> :
  _120 = (long unsigned int) k;
  _121 = std::vector<free_type>::operator[] (&callerRetTypearray, _120);
  _122 = _121->stmt;
  _123 = gimple_location_safe (_122);
  warning_at2 (_123, 0, "use location");

  <bb 85> :
  stderr.436_124 = stderr;
  fprintf2 (stderr.436_124, "dot graph relate end\n\n");

  <bb 86> :
  k = k + 1;

  <bb 87> :
  _125 = (long unsigned int) k;
  _126 = std::vector<free_type>::size (&callerRetTypearray);
  retval.437 = _125 < _126;
  if (retval.437 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  function_basicblock_collect.438 = function_basicblock_collect;
  if (function_basicblock_collect.438 != 0B)
    goto <bb 89>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 89> :
  hash_map<tree_node*, int>::~hash_map (function_basicblock_collect.438);
  operator delete (function_basicblock_collect.438, 48);

  <bb 90> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 91> :
  function_pthread_detched_collect.441_127 = function_pthread_detched_collect;
  D.250473 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.441_127, &function_tree);

  <bb 92> :
  _128 = D.250473;
  if (_128 != 0B)
    goto <bb 93>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 93> :
  if (fucntion_level == -1)
    goto <bb 94>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 94> :
  fucntion_level.442_129 = (unsigned int) fucntion_level;
  DISABLE_TREACE.443_130 = DISABLE_TREACE;
  if (fucntion_level.442_129 != DISABLE_TREACE.443_130)
    goto <bb 95>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 95> :
  iftmp.440 = 1;
  goto <bb 97>; [INV]

  <bb 96> :
  iftmp.440 = 0;

  <bb 97> :
  retval.439 = iftmp.440;
  if (retval.439 != 0)
    goto <bb 98>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 98> :
  function_pthread_detched_collect.444_131 = function_pthread_detched_collect;
  D.250474 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.444_131, &function_tree);

  <bb 99> :
  _132 = D.250474;
  function_pthread_detched_array::function_pthread_detched_array (&callerFunArray, _132);

  <bb 100> :
  std::vector<pthread_detched_type>::vector (&callerRetTypearray, &callerFunArray.pthread_detched_array);

  <bb 101> :
  k = 0;
  goto <bb 116>; [INV]

  <bb 102> :
  stderr.445_133 = stderr;
  fprintf2 (stderr.445_133, "\x1b[40;31m  find pthread_detched stmt  \x1b[0m\n");

  <bb 103> :
  _134 = (long unsigned int) k;
  _135 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _134);
  _136 = _135->stmt;
  debug_gimple_stmt2 (_136);

  <bb 104> :
  _137 = (long unsigned int) k;
  _138 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _137);
  _139 = _138->stmt;
  _140 = gimple_location_safe (_139);
  warning_at2 (_140, 0, "use location");

  <bb 105> :
  _141 = *freecount;
  _142 = _141 + 1;
  *freecount = _142;
  pthread_detachedmod.446_143 = pthread_detachedmod;
  if (pthread_detachedmod.446_143 != 0)
    goto <bb 106>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 106> :
  stderr.447_144 = stderr;
  fprintf2 (stderr.447_144, "dot graph start relate form ");

  <bb 107> :
  now_fucntion.448_145 = now_fucntion;
  stderr.449_146 = stderr;
  fprintf2 (stderr.449_146, "ID : %lu\n", now_fucntion.448_145);

  <bb 108> :
  _147 = (long unsigned int) k;
  _148 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _147);
  _149 = _148->stmt;
  _150 = gimple_bb (_149);
  _151 = _150->index;
  function_tree.450_152 = function_tree;
  D.250475 = get_name (function_tree.450_152);

  <bb 109> :
  _153 = D.250475;
  stderr.451_154 = stderr;
  fprintf2 (stderr.451_154, "from %s basic block %d", _153, _151);

  <bb 110> :
  stderr.452_155 = stderr;
  fprintf2 (stderr.452_155, "dot graph end relate end\n\n");

  <bb 111> :
  _156 = (long unsigned int) k;
  _157 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _156);
  _158 = _157->stmt;
  now_laststmt = _158;
  _159 = rand ();
  x = (long unsigned int) _159;
  now_laststmtid = x;
  stderr.453_160 = stderr;
  fprintf2 (stderr.453_160, "dot graph relate stmt start ID : %lu stmt(pthread_detched)) :", x);

  <bb 112> :
  _161 = (long unsigned int) k;
  _162 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _161);
  _163 = _162->stmt;
  debug2 (_163);

  <bb 113> :
  _164 = (long unsigned int) k;
  _165 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _164);
  _166 = _165->stmt;
  _167 = gimple_location_safe (_166);
  warning_at2 (_167, 0, "use location");

  <bb 114> :
  stderr.454_168 = stderr;
  fprintf2 (stderr.454_168, "dot graph relate end\n\n");

  <bb 115> :
  k = k + 1;

  <bb 116> :
  _169 = (long unsigned int) k;
  _170 = std::vector<pthread_detched_type>::size (&callerRetTypearray);
  retval.455 = _169 < _170;
  if (retval.455 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 117> :
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 118> :
  function_pthread_exit_collect.458_171 = function_pthread_exit_collect;
  D.250479 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.458_171, &function_tree);

  <bb 119> :
  _172 = D.250479;
  if (_172 != 0B)
    goto <bb 120>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 120> :
  if (fucntion_level == -1)
    goto <bb 121>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 121> :
  fucntion_level.459_173 = (unsigned int) fucntion_level;
  DISABLE_TREACE.460_174 = DISABLE_TREACE;
  if (fucntion_level.459_173 != DISABLE_TREACE.460_174)
    goto <bb 122>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 122> :
  iftmp.457 = 1;
  goto <bb 124>; [INV]

  <bb 123> :
  iftmp.457 = 0;

  <bb 124> :
  retval.456 = iftmp.457;
  if (retval.456 != 0)
    goto <bb 125>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 125> :
  function_pthread_exit_collect.461_175 = function_pthread_exit_collect;
  D.250480 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.461_175, &function_tree);

  <bb 126> :
  _176 = D.250480;
  function_pthread_exit_array::function_pthread_exit_array (&callerFunArray, _176);

  <bb 127> :
  std::vector<pthread_exit_type>::vector (&callerRetTypearray, &callerFunArray.pthread_exit_array);

  <bb 128> :
  k = 0;
  goto <bb 143>; [INV]

  <bb 129> :
  stderr.462_177 = stderr;
  fprintf2 (stderr.462_177, "\x1b[40;31m  find pthread_exit stmt  \x1b[0m\n");

  <bb 130> :
  _178 = (long unsigned int) k;
  _179 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _178);
  _180 = _179->stmt;
  debug_gimple_stmt2 (_180);

  <bb 131> :
  _181 = (long unsigned int) k;
  _182 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _181);
  _183 = _182->stmt;
  _184 = gimple_location_safe (_183);
  warning_at2 (_184, 0, "use location");

  <bb 132> :
  pthread_exitmod.463_185 = pthread_exitmod;
  if (pthread_exitmod.463_185 != 0)
    goto <bb 133>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 133> :
  stderr.464_186 = stderr;
  fprintf2 (stderr.464_186, "dot graph start relate form ");

  <bb 134> :
  now_fucntion.465_187 = now_fucntion;
  stderr.466_188 = stderr;
  fprintf2 (stderr.466_188, "ID : %lu\n", now_fucntion.465_187);

  <bb 135> :
  _189 = (long unsigned int) k;
  _190 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _189);
  _191 = _190->stmt;
  _192 = gimple_bb (_191);
  _193 = _192->index;
  function_tree.467_194 = function_tree;
  D.250481 = get_name (function_tree.467_194);

  <bb 136> :
  _195 = D.250481;
  stderr.468_196 = stderr;
  fprintf2 (stderr.468_196, "from %s basic block %d", _195, _193);

  <bb 137> :
  stderr.469_197 = stderr;
  fprintf2 (stderr.469_197, "dot graph end relate end\n\n");

  <bb 138> :
  _198 = (long unsigned int) k;
  _199 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _198);
  _200 = _199->stmt;
  now_laststmt = _200;
  _201 = rand ();
  x = (long unsigned int) _201;
  now_laststmtid = x;
  stderr.470_202 = stderr;
  fprintf2 (stderr.470_202, "dot graph relate stmt start ID : %lu stmt(pthread_exit) :", x);

  <bb 139> :
  _203 = (long unsigned int) k;
  _204 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _203);
  _205 = _204->stmt;
  debug2 (_205);

  <bb 140> :
  _206 = (long unsigned int) k;
  _207 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _206);
  _208 = _207->stmt;
  _209 = gimple_location_safe (_208);
  warning_at2 (_209, 0, "use location");

  <bb 141> :
  stderr.471_210 = stderr;
  fprintf2 (stderr.471_210, "dot graph relate end\n\n");

  <bb 142> :
  k = k + 1;

  <bb 143> :
  _211 = (long unsigned int) k;
  _212 = std::vector<pthread_exit_type>::size (&callerRetTypearray);
  retval.472 = _211 < _212;
  if (retval.472 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 144> :
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 145> :
  tracerelatestmt.473_213 = tracerelatestmt;
  _214 = (int) tracerelatestmt.473_213;
  if (_214 == 1)
    goto <bb 146>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 146> :
  if (fucntion_level != -1)
    goto <bb 147>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 147> :
  fucntion_level.474_215 = (unsigned int) fucntion_level;
  DISABLE_TREACE.475_216 = DISABLE_TREACE;
  if (fucntion_level.474_215 != DISABLE_TREACE.475_216)
    goto <bb 148>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 148> :
  fucntion_level.476_217 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.477_218 = RET_HEAP_OBJECT;
  if (fucntion_level.476_217 != RET_HEAP_OBJECT.477_218)
    goto <bb 149>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 149> :
  if (mallocStmt_tree != 0B)
    goto <bb 150>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 150> :
  pi1 = mallocStmt_tree->ssa_name.info.ptr_info;
  debug_tree2 (mallocStmt_tree);

  <bb 151> :
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 152>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 152> :
  _219 = BIT_FIELD_REF <*pt1, 8, 0>;
  _220 = _219 & 16;
  if (_220 != 0)
    goto <bb 153>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 153> :
  function_tree.478_221 = function_tree;
  trace_fucntion_relate_stmt (node, function_tree.478_221, mallocStmt_tree);

  <bb 154> :
  if (fucntion_level != -1)
    goto <bb 155>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 155> :
  fucntion_level.479_222 = (unsigned int) fucntion_level;
  DISABLE_TREACE.480_223 = DISABLE_TREACE;
  if (fucntion_level.479_222 != DISABLE_TREACE.480_223)
    goto <bb 156>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 156> :
  fucntion_level = fucntion_level + 1;

  <bb 157> :
  _224 = std::vector<function_path>::size (&function_path_array);
  retval.481 = _224 == 0;
  if (retval.481 != 0)
    goto <bb 158>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 158> :
  function_return_collect.483_225 = function_return_collect;
  D.250485 = hash_map<tree_node*, function_return_array>::get (function_return_collect.483_225, &function_tree);

  <bb 159> :
  _226 = D.250485;
  retval.482 = _226 != 0B;
  if (retval.482 != 0)
    goto <bb 160>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 160> :
  function_return_collect.484_227 = function_return_collect;
  D.250486 = hash_map<tree_node*, function_return_array>::get (function_return_collect.484_227, &function_tree);

  <bb 161> :
  _228 = D.250486;
  function_return_array::function_return_array (&callerFunArray, _228);

  <bb 162> :
  function_return_collect.487_229 = function_return_collect;
  D.250487 = hash_map<tree_node*, function_return_array>::get (function_return_collect.487_229, &function_tree);

  <bb 163> :
  _230 = D.250487;
  if (_230 != 0B)
    goto <bb 164>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 164> :
  _231 = callerFunArray.return_type_num;
  if (_231 == 2)
    goto <bb 165>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 165> :
  iftmp.486 = 1;
  goto <bb 167>; [INV]

  <bb 166> :
  iftmp.486 = 0;

  <bb 167> :
  retval.485 = iftmp.486;
  if (retval.485 != 0)
    goto <bb 168>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 168> :
  function_tree.488_232 = function_tree;
  D.250488 = get_name (function_tree.488_232);

  <bb 169> :
  _233 = D.250488;
  stderr.489_234 = stderr;
  fprintf2 (stderr.489_234, "%s this fucntion return value is heap-object \n", _233);

  <bb 170> :
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};

  <bb 171> :
  function_return_collect.490_235 = function_return_collect;
  D.250491 = hash_map<tree_node*, function_return_array>::get (function_return_collect.490_235, &function_tree);

  <bb 172> :
  callerFunArray = D.250491;
  std::vector<return_type>::vector (&callerRetTypearray);
  function_return_array::function_return_array (&calleeFunArray);
  if (callerFunArray != 0B)
    goto <bb 173>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 173> :
  i = 0;
  goto <bb 214>; [INV]

  <bb 174> :
  find = 0;
  _236 = (long unsigned int) i;
  _237 = std::vector<function_path>::operator[] (&function_path_array, _236);
  _238 = _237->next;
  D.250492 = get_name (_238);

  <bb 175> :
  _239 = D.250492;
  stderr.491_240 = stderr;
  fprintf2 (stderr.491_240, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _239);

  <bb 176> :
  o = 0;
  goto <bb 182>; [INV]

  <bb 177> :
  _241 = (long unsigned int) o;
  _242 = std::vector<tree_node*>::operator[] (&traceStack, _241);
  _243 = *_242;
  _244 = (long unsigned int) i;
  _245 = std::vector<function_path>::operator[] (&function_path_array, _244);
  _246 = _245->next;
  retval.492 = _243 == _246;
  if (retval.492 != 0)
    goto <bb 178>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 178> :
  find = 1;
  _247 = (long unsigned int) o;
  _248 = std::vector<tree_node*>::operator[] (&traceStack, _247);
  _249 = *_248;
  D.250493 = get_name (_249);

  <bb 179> :
  _250 = D.250493;
  stderr.493_251 = stderr;
  fprintf2 (stderr.493_251, "\x1b[40;41m =======recursive_fun2:%s========= \x1b[0m\n", _250);

  <bb 180> :
  goto <bb 183>; [INV]

  <bb 181> :
  o = o + 1;

  <bb 182> :
  _252 = (long unsigned int) o;
  _253 = std::vector<tree_node*>::size (&traceStack);
  retval.494 = _252 < _253;
  if (retval.494 != 0)
    goto <bb 177>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 183> :
  _254 = (long unsigned int) i;
  _255 = std::vector<function_path>::operator[] (&function_path_array, _254);
  _256 = _255->next;
  retval.495 = _256 != 0B;
  if (retval.495 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 207>; [INV]

  <bb 184> :
  function_return_collect.497_257 = function_return_collect;
  _258 = (long unsigned int) i;
  _259 = std::vector<function_path>::operator[] (&function_path_array, _258);
  _260 = &_259->next;
  D.250494 = hash_map<tree_node*, function_return_array>::get (function_return_collect.497_257, _260);

  <bb 185> :
  _261 = D.250494;
  retval.496 = _261 != 0B;
  if (retval.496 != 0)
    goto <bb 186>; [INV]
  else
    goto <bb 207>; [INV]

  <bb 186> :
  _262 = &callerFunArray->return_type_array;
  std::vector<return_type>::operator= (&callerRetTypearray, _262);

  <bb 187> :
  function_return_collect.498_263 = function_return_collect;
  _264 = (long unsigned int) i;
  _265 = std::vector<function_path>::operator[] (&function_path_array, _264);
  _266 = &_265->next;
  D.250495 = hash_map<tree_node*, function_return_array>::get (function_return_collect.498_263, _266);

  <bb 188> :
  _267 = D.250495;
  function_return_array::operator= (&calleeFunArray, _267);

  <bb 189> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _268 = (long unsigned int) i;
  _269 = std::vector<function_path>::operator[] (&function_path_array, _268);
  _270 = _269->next;
  getFucntionDecl = _270;
  function_return_collect.500_271 = function_return_collect;
  D.250496 = hash_map<tree_node*, function_return_array>::get (function_return_collect.500_271, &getFucntionDecl);

  <bb 190> :
  _272 = D.250496;
  retval.499 = _272 == 0B;
  if (retval.499 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 191> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 194>; [INV]

  <bb 192> :
  function_return_collect.501_273 = function_return_collect;
  D.250497 = hash_map<tree_node*, function_return_array>::get (function_return_collect.501_273, &getFucntionDecl);

  <bb 193> :
  _274 = D.250497;
  function_return_array::operator= (&find_fun_array, _274);

  <bb 194> :
  k = 0;
  goto <bb 205>; [INV]

  <bb 195> :
  _275 = calleeFunArray.return_type_num;
  if (_275 == 2)
    goto <bb 196>; [INV]
  else
    goto <bb 204>; [INV]

  <bb 196> :
  _276 = (long unsigned int) k;
  _277 = std::vector<return_type>::operator[] (&callerRetTypearray, _276);
  _278 = _277->return_tree;
  _279 = (long unsigned int) i;
  _280 = std::vector<function_path>::operator[] (&function_path_array, _279);
  _281 = _280->next;
  retval.502 = _278 == _281;
  if (retval.502 != 0)
    goto <bb 197>; [INV]
  else
    goto <bb 204>; [INV]

  <bb 197> :
  _282 = (long unsigned int) i;
  _283 = std::vector<function_path>::operator[] (&function_path_array, _282);
  _284 = _283->next;
  D.250498 = get_name (_284);

  <bb 198> :
  _285 = D.250498;
  stderr.503_286 = stderr;
  fprintf2 (stderr.503_286, "%s this fucntion return value is heap-object \n", _285);

  <bb 199> :
  _287 = (long unsigned int) k;
  _288 = std::vector<return_type>::operator[] (&callerRetTypearray, _287);
  _289 = _288->return_tree;
  D.250499 = get_name (_289);

  <bb 200> :
  _290 = D.250499;
  function_tree.504_291 = function_tree;
  D.250500 = get_name (function_tree.504_291);

  <bb 201> :
  _292 = D.250500;
  stderr.505_293 = stderr;
  fprintf2 (stderr.505_293, "%s this fucntion return value is heap-object %s\n", _292, _290);

  <bb 202> :
  fucntion_level.506_294 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.507_295 = RET_HEAP_OBJECT;
  if (fucntion_level.506_294 == RET_HEAP_OBJECT.507_295)
    goto <bb 203>; [INV]
  else
    goto <bb 204>; [INV]

  <bb 203> :
  EFFECTIVE.508_296 = EFFECTIVE;
  EFFECTIVE.509_297 = (int) EFFECTIVE.508_296;
  *freecount = EFFECTIVE.509_297;

  <bb 204> :
  k = k + 1;

  <bb 205> :
  _298 = (long unsigned int) k;
  _299 = std::vector<return_type>::size (&callerRetTypearray);
  retval.510 = _298 < _299;
  if (retval.510 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 206> :
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};

  <bb 207> :
  if (find == 0)
    goto <bb 208>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 208> :
  _300 = (long unsigned int) i;
  _301 = std::vector<function_path>::operator[] (&function_path_array, _300);
  _302 = _301->next;
  D.250504 = get_name (_302);

  <bb 209> :
  _303 = D.250504;
  stderr.511_304 = stderr;
  fprintf2 (stderr.511_304, "\x1b[40;46m =======add node_fun stack:%s========= \x1b[0m\n", _303);

  <bb 210> :
  _305 = (long unsigned int) i;
  _306 = std::vector<function_path>::operator[] (&function_path_array, _305);
  _307 = &_306->next;
  std::vector<tree_node*>::push_back (&traceStack, _307);

  <bb 211> :
  _308 = (long unsigned int) i;
  _309 = std::vector<function_path>::operator[] (&function_path_array, _308);
  _310 = _309->next;
  trace_function_path (_310, fucntion_level, mallocStmt_tree, freecount);

  <bb 212> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 213> :
  i = i + 1;

  <bb 214> :
  _311 = (long unsigned int) i;
  _312 = std::vector<function_path>::size (&function_path_array);
  retval.512 = _311 < _312;
  if (retval.512 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 215> :
  function_return_array::~function_return_array (&calleeFunArray);
  std::vector<return_type>::~vector (&callerRetTypearray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  return;

  <bb 216> :
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};

  <bb 217> :
<L165>:
  return D.250274;

  <bb 218> :
<L166>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 6

  <bb 219> :
<L167>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 5

  <bb 220> :
<L168>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 4

  <bb 221> :
<L169>:
  operator delete (D.193352, 48);
  resx 13

  <bb 222> :
<L170>:
  D.193354 = {CLOBBER};
  resx 16

  <bb 223> :
<L171>:
  D.193355 = {CLOBBER};
  resx 15

  <bb 224> :
<L172>:
  D.193357 = {CLOBBER};
  resx 19

  <bb 225> :
<L173>:
  D.193358 = {CLOBBER};
  resx 22

  <bb 226> :
<L174>:
  D.193359 = {CLOBBER};
  resx 21

  <bb 227> :
<L175>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 12

  <bb 228> :
<L176>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 11

  <bb 229> :
<L177>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 10

  <bb 230> :
<L178>:
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  resx 31

  <bb 231> :
<L179>:
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  resx 30

  <bb 232> :
<L180>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 29

  <bb 233> :
<L181>:
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  resx 37

  <bb 234> :
<L182>:
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  resx 36

  <bb 235> :
<L183>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 35

  <bb 236> :
<L184>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 42

  <bb 237> :
<L185>:
  callerFunArray = {CLOBBER};
  resx 41

  <bb 238> :
<L186>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 49

  <bb 239> :
<L187>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 48

  <bb 240> :
<L188>:
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  resx 47

  <bb 241> :
<L189>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 46

  <bb 242> :
<L190>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 45

  <bb 243> :
<L191>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 244> :
<L192>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 245> :
<L193>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_path_array>::get (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7682, decl_uid=192071, cgraph_uid=4314, symbol_order=5106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path_array * hash_map<tree_node*, function_path_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.250520;
  struct hash_entry & D.250519;
  unsigned int D.250518;
  struct hash_entry & e;
  struct function_path_array * iftmp.513;
  struct function_path_array * D.250512;

  <bb 2> :
  _1 = &this->m_table;
  D.250518 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.250518;
  D.250519 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.250519;
  D.250520 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  _3 = D.250520;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.513 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.513 = &e->m_value;

  <bb 5> :
  D.250512 = iftmp.513;

  <bb 6> :
<L3>:
  return D.250512;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE4hashERKS2_, funcdef_no=8550, decl_uid=192027, cgraph_uid=5182, symbol_order=5978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (union tree_node * const & h)
{
  hashval_t D.250521;

  <bb 2> :
  D.250521 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.250521;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8551, decl_uid=192214, cgraph_uid=5183, symbol_order=5979)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.250555;
  bool D.250554;
  bool D.250553;
  bool D.250552;
  bool D.250551;
  bool D.250550;
  struct value_type * D.250549;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.517;
  bool retval.516;
  struct value_type & D.250535;
  bool iftmp.515;
  bool retval.514;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.250550 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.250550;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.250551 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.250551;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.250552 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _11 = D.250552;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.515 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.515 = 0;

  <bb 8> :
  retval.514 = iftmp.515;
  if (retval.514 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.250535 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.250553 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.250553;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.250554 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.250554;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.250555 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _23 = D.250555;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.517 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.517 = 0;

  <bb 18> :
  retval.516 = iftmp.517;
  if (retval.516 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.250535 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.250535;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8973, decl_uid=192310, cgraph_uid=5605, symbol_order=6401)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.250558;
  bool D.250556;

  <bb 2> :
  D.250558 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (v);
  D.250556 = D.250558;

  <bb 3> :
<L0>:
  return D.250556;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8843, decl_uid=192140, cgraph_uid=5475, symbol_order=6271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.250561;
  bool D.250559;

  <bb 2> :
  D.250561 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.250559 = D.250561;

  <bb 3> :
<L0>:
  return D.250559;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8974, decl_uid=192308, cgraph_uid=5606, symbol_order=6402)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.250564;
  bool D.250562;

  <bb 2> :
  D.250564 = hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (v);
  D.250562 = D.250564;

  <bb 3> :
<L0>:
  return D.250562;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9808, decl_uid=192135, cgraph_uid=6440, symbol_order=7236)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.250567;
  bool D.250565;

  <bb 2> :
  D.250567 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.250565 = D.250567;

  <bb 3> :
<L0>:
  return D.250565;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10366, decl_uid=239527, cgraph_uid=6998, symbol_order=7798)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250568;

  <bb 2> :
  _1 = entry->m_key;
  D.250568 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.250568;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9337, decl_uid=192128, cgraph_uid=5969, symbol_order=6765)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.250572;
  bool D.250570;

  <bb 2> :
  _1 = &a->m_key;
  D.250572 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_1, b);
  D.250570 = D.250572;

  <bb 3> :
<L0>:
  return D.250570;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10equal_keysERKS2_S7_, funcdef_no=10041, decl_uid=192029, cgraph_uid=6673, symbol_order=7473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.250573;

  <bb 2> :
  D.250573 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.250573;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8552, decl_uid=212463, cgraph_uid=5184, symbol_order=5980)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250575;

  <bb 2> :
  _1 = entry->m_key;
  D.250575 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.250575;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2ERKS_, funcdef_no=6333, decl_uid=192409, cgraph_uid=3308, symbol_order=4089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, const struct function_path_array & D.192411)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192411->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192411->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2ERKS2_, funcdef_no=7684, decl_uid=175622, cgraph_uid=4316, symbol_order=5108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<function_path>::vector (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.250581;
  struct __normal_iterator D.250578;
  struct __normal_iterator D.250577;
  struct allocator D.212574;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175659;
  _2 = &__x->D.175659;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  D.212574 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<function_path>::size (__x);
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _4, &D.212574);

  <bb 3> :
  std::allocator<function_path>::~allocator (&D.212574);
  D.212574 = {CLOBBER};
  _5 = &this->D.175659;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = this->D.175659._M_impl.D.175004._M_start;
  D.250577 = std::vector<function_path>::end (__x);
  D.250578 = std::vector<function_path>::begin (__x);
  D.250581 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (D.250578, D.250577, _7, _6);

  <bb 4> :
  _8 = D.250581;
  this->D.175659._M_impl.D.175004._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<function_path>::~allocator (&D.212574);
  resx 2

  <bb 6> :
<L1>:
  D.212574 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.175659;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8554, decl_uid=174894, cgraph_uid=5186, symbol_order=5982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.250583;

  <bb 2> :
  D.250583 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250583;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E17_S_select_on_copyERKS2_, funcdef_no=8553, decl_uid=174866, cgraph_uid=5185, symbol_order=5981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI13function_pathEE37select_on_container_copy_constructionERKS1_, funcdef_no=9338, decl_uid=174831, cgraph_uid=5970, symbol_order=6766)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<function_path>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2ERKS0_, funcdef_no=10043, decl_uid=174774, cgraph_uid=6675, symbol_order=7475)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2ERKS2_, funcdef_no=10562, decl_uid=174703, cgraph_uid=7194, symbol_order=7994)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.174705)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EmRKS1_, funcdef_no=8556, decl_uid=175091, cgraph_uid=5188, symbol_order=5984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9340, decl_uid=174996, cgraph_uid=5972, symbol_order=6768)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this, __a);
  _1 = &this->D.175004;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8792, decl_uid=174951, cgraph_uid=5424, symbol_order=6220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_M_create_storageEm, funcdef_no=9342, decl_uid=175015, cgraph_uid=5974, symbol_order=6770)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.250590;

  <bb 2> :
  D.250590 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (this, __n);
  _1 = D.250590;
  this->_M_impl.D.175004._M_start = _1;
  _2 = this->_M_impl.D.175004._M_start;
  this->_M_impl.D.175004._M_finish = _2;
  _3 = this->_M_impl.D.175004._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.175004._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE11_M_allocateEm, funcdef_no=9631, decl_uid=175008, cgraph_uid=6263, symbol_order=7059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path * std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.250597;
  struct function_path * iftmp.518;
  struct function_path * D.250591;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.250597 = std::allocator_traits<std::allocator<function_path> >::allocate (_1, __n);
  iftmp.518 = D.250597;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.518 = 0B;

  <bb 5> :
  D.250591 = iftmp.518;

  <bb 6> :
<L3>:
  return D.250591;

}



;; Function std::allocator_traits<std::allocator<function_path> >::allocate (_ZNSt16allocator_traitsISaI13function_pathEE8allocateERS1_m, funcdef_no=10224, decl_uid=174809, cgraph_uid=6856, symbol_order=7656)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct function_path * std::allocator_traits<std::allocator<function_path> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct function_path * D.250600;
  struct function_path * D.250598;

  <bb 2> :
  D.250600 = __gnu_cxx::new_allocator<function_path>::allocate (__a, __n, 0B);
  D.250598 = D.250600;

  <bb 3> :
<L0>:
  return D.250598;

}



;; Function __gnu_cxx::new_allocator<function_path>::allocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE8allocateEmPKv, funcdef_no=10694, decl_uid=174663, cgraph_uid=7327, symbol_order=8127)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct function_path * __gnu_cxx::new_allocator<function_path>::allocate (struct new_allocator * const this, size_type __n, const void * D.245873)
{
  struct function_path * D.250611;
  struct function_path * D.250610;
  align_val_t __al;
  struct function_path * D.250608;
  bool retval.519;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.519 = _4 != 0;
  if (retval.519 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.250611 = operator new (_6);
  D.250608 = D.250611;

  <bb 7> :
<L6>:
  return D.250608;

}



;; Function __gnu_cxx::new_allocator<function_path>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE11_M_max_sizeEv, funcdef_no=10695, decl_uid=174690, cgraph_uid=7326, symbol_order=8126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.250612;

  <bb 2> :
  D.250612 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.250612;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implD2Ev, funcdef_no=6830, decl_uid=175051, cgraph_uid=3458, symbol_order=4240)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<function_path>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<function_path>::~allocator (_ZNSaI13function_pathED2Ev, funcdef_no=7837, decl_uid=174784, cgraph_uid=4469, symbol_order=5261)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathED2Ev, funcdef_no=8795, decl_uid=174713, cgraph_uid=5427, symbol_order=6223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8560, decl_uid=174892, cgraph_uid=5192, symbol_order=5988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.250614;

  <bb 2> :
  D.250614 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250614;

}



;; Function std::vector<function_path>::end (_ZNKSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=8559, decl_uid=175274, cgraph_uid=5191, symbol_order=5987)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::end (const struct vector * const this)
{
  struct const_iterator D.223475;
  struct const_iterator D.250616;

  <bb 2> :
  _1 = &this->D.175659._M_impl.D.175004._M_finish;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.223475, _1);
  D.250616 = D.223475;
  D.223475 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250616;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9344, decl_uid=212543, cgraph_uid=5976, symbol_order=6772)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, const struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<function_path>::begin (_ZNKSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=8558, decl_uid=175270, cgraph_uid=5190, symbol_order=5986)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::begin (const struct vector * const this)
{
  struct const_iterator D.223473;
  struct const_iterator D.250619;

  <bb 2> :
  _1 = &this->D.175659._M_impl.D.175004._M_start;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.223473, _1);
  D.250619 = D.223473;
  D.223473 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250619;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8561, decl_uid=212563, cgraph_uid=5193, symbol_order=5989)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result, struct allocator & D.223480)
{
  struct function_path * D.250624;
  struct function_path * D.250622;

  <bb 2> :
  D.250624 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.250622 = D.250624;

  <bb 3> :
<L0>:
  return D.250622;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9346, decl_uid=223482, cgraph_uid=5979, symbol_order=6775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250627;
  const bool __assignable;
  struct function_path * D.250625;

  <bb 2> :
  __assignable = 1;
  D.250627 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.250625 = D.250627;

  <bb 3> :
<L0>:
  return D.250625;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10045, decl_uid=235258, cgraph_uid=6677, symbol_order=7477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250630;
  struct function_path * D.250628;

  <bb 2> :
  D.250630 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.250628 = D.250630;

  <bb 3> :
<L0>:
  return D.250628;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10564, decl_uid=241881, cgraph_uid=7196, symbol_order=7996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250635;
  struct __normal_iterator D.250633;
  struct __normal_iterator D.250632;
  struct function_path * D.250631;

  <bb 2> :
  D.250632 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.250633 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.250635 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (D.250633, D.250632, __result);
  D.250631 = D.250635;

  <bb 3> :
<L0>:
  return D.250631;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9632, decl_uid=229317, cgraph_uid=6264, symbol_order=7060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.250636;

  <bb 2> :
  D.250636 = __it;

  <bb 3> :
<L0>:
  return D.250636;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10862, decl_uid=245329, cgraph_uid=7494, symbol_order=8296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250640;
  struct function_path * D.250638;

  <bb 2> :
  __result.520_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.520_1);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _4 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.250640 = std::__copy_move_a1<false, const function_path*, function_path*> (_4, _3, _2);
  _5 = D.250640;
  D.250638 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250638;

}



;; Function std::__niter_base<function_path*> (_ZSt12__niter_baseIP13function_pathET_S2_, funcdef_no=10230, decl_uid=229585, cgraph_uid=6862, symbol_order=7662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.250641;

  <bb 2> :
  D.250641 = __it;

  <bb 3> :
<L0>:
  return D.250641;

}



;; Function std::__niter_base<const function_path*, std::vector<function_path> > (_ZSt12__niter_baseIPK13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10225, decl_uid=237712, cgraph_uid=6857, symbol_order=7657)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * std::__niter_base<const function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  const struct function_path * D.250643;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (&__it);
  D.250643 = *_1;

  <bb 3> :
<L0>:
  return D.250643;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10696, decl_uid=212530, cgraph_uid=7328, symbol_order=8128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * const & __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  const struct function_path * const & D.250645;

  <bb 2> :
  D.250645 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250645;

}



;; Function std::__copy_move_a1<false, const function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10227, decl_uid=237866, cgraph_uid=6859, symbol_order=7659)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.250649;
  struct function_path * D.250647;

  <bb 2> :
  D.250649 = std::__copy_move_a2<false, const function_path*, function_path*> (__first, __last, __result);
  D.250647 = D.250649;

  <bb 3> :
<L0>:
  return D.250647;

}



;; Function std::__copy_move_a2<false, const function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10697, decl_uid=242633, cgraph_uid=7329, symbol_order=8129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.250650;

  <bb 2> :
  D.250650 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250650;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI13function_pathEEPT_PKS4_S7_S5_, funcdef_no=10892, decl_uid=245896, cgraph_uid=7524, symbol_order=8326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  const ptrdiff_t _Num;
  struct function_path * D.250655;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.521_2 = (long unsigned int) _Num;
  _3 = _Num.521_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.522_4 = (long unsigned int) _Num;
  _5 = _Num.522_4 * 24;
  D.250655 = __result + _5;

  <bb 5> :
<L3>:
  return D.250655;

}



;; Function std::__niter_wrap<function_path*> (_ZSt12__niter_wrapIP13function_pathET_RKS2_S2_, funcdef_no=10232, decl_uid=237909, cgraph_uid=6864, symbol_order=7664)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_wrap<function_path*> (struct function_path * const & D.242655, struct function_path * __res)
{
  struct function_path * D.250657;

  <bb 2> :
  D.250657 = __res;

  <bb 3> :
<L0>:
  return D.250657;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EED2Ev, funcdef_no=7840, decl_uid=175114, cgraph_uid=4472, symbol_order=5264)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.175004._M_end_of_storage;
  _2 = this->_M_impl.D.175004._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.175004._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8797, decl_uid=175011, cgraph_uid=5429, symbol_order=6225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (struct _Vector_base * const this, struct function_path * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<function_path> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::deallocate (_ZNSt16allocator_traitsISaI13function_pathEE10deallocateERS1_PS0_m, funcdef_no=9629, decl_uid=174816, cgraph_uid=6261, symbol_order=7057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::deallocate (struct allocator_type & __a, struct function_path * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::deallocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE10deallocateEPS1_m, funcdef_no=10223, decl_uid=174667, cgraph_uid=6855, symbol_order=7655)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::deallocate (struct new_allocator * const this, struct function_path * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, function_free_array>::get (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7690, decl_uid=192553, cgraph_uid=4322, symbol_order=5114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_free_array * hash_map<tree_node*, function_free_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.250673;
  struct hash_entry & D.250672;
  unsigned int D.250671;
  struct hash_entry & e;
  struct function_free_array * iftmp.523;
  struct function_free_array * D.250665;

  <bb 2> :
  _1 = &this->m_table;
  D.250671 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.250671;
  D.250672 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.250672;
  D.250673 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  _3 = D.250673;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.523 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.523 = &e->m_value;

  <bb 5> :
  D.250665 = iftmp.523;

  <bb 6> :
<L3>:
  return D.250665;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE4hashERKS2_, funcdef_no=8563, decl_uid=192509, cgraph_uid=5195, symbol_order=5991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (union tree_node * const & h)
{
  hashval_t D.250674;

  <bb 2> :
  D.250674 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.250674;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8564, decl_uid=192696, cgraph_uid=5196, symbol_order=5992)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.250708;
  bool D.250707;
  bool D.250706;
  bool D.250705;
  bool D.250704;
  bool D.250703;
  struct value_type * D.250702;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.527;
  bool retval.526;
  struct value_type & D.250688;
  bool iftmp.525;
  bool retval.524;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.250703 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.250703;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.250704 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.250704;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.250705 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _11 = D.250705;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.525 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.525 = 0;

  <bb 8> :
  retval.524 = iftmp.525;
  if (retval.524 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.250688 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.250706 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.250706;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.250707 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.250707;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.250708 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _23 = D.250708;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.527 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.527 = 0;

  <bb 18> :
  retval.526 = iftmp.527;
  if (retval.526 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.250688 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.250688;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8977, decl_uid=192792, cgraph_uid=5609, symbol_order=6405)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.250711;
  bool D.250709;

  <bb 2> :
  D.250711 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (v);
  D.250709 = D.250711;

  <bb 3> :
<L0>:
  return D.250709;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8676, decl_uid=192622, cgraph_uid=5308, symbol_order=6104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.250714;
  bool D.250712;

  <bb 2> :
  D.250714 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.250712 = D.250714;

  <bb 3> :
<L0>:
  return D.250712;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8978, decl_uid=192790, cgraph_uid=5610, symbol_order=6406)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.250717;
  bool D.250715;

  <bb 2> :
  D.250717 = hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (v);
  D.250715 = D.250717;

  <bb 3> :
<L0>:
  return D.250715;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9810, decl_uid=192617, cgraph_uid=6442, symbol_order=7238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.250720;
  bool D.250718;

  <bb 2> :
  D.250720 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.250718 = D.250720;

  <bb 3> :
<L0>:
  return D.250718;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10367, decl_uid=239533, cgraph_uid=6999, symbol_order=7799)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250721;

  <bb 2> :
  _1 = entry->m_key;
  D.250721 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.250721;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9350, decl_uid=192610, cgraph_uid=5982, symbol_order=6778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.250725;
  bool D.250723;

  <bb 2> :
  _1 = &a->m_key;
  D.250725 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_1, b);
  D.250723 = D.250725;

  <bb 3> :
<L0>:
  return D.250723;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10equal_keysERKS2_S7_, funcdef_no=10049, decl_uid=192511, cgraph_uid=6681, symbol_order=7481)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.250726;

  <bb 2> :
  D.250726 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.250726;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8565, decl_uid=212597, cgraph_uid=5197, symbol_order=5993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250728;

  <bb 2> :
  _1 = entry->m_key;
  D.250728 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.250728;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2ERKS_, funcdef_no=6339, decl_uid=192891, cgraph_uid=3314, symbol_order=4095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, const struct function_free_array & D.192893)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192893->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2ERKS2_, funcdef_no=7692, decl_uid=173506, cgraph_uid=4324, symbol_order=5116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<free_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.250734;
  struct __normal_iterator D.250731;
  struct __normal_iterator D.250730;
  struct allocator D.212712;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173543;
  _2 = &__x->D.173543;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  D.212712 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<free_type>::size (__x);
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _4, &D.212712);

  <bb 3> :
  std::allocator<free_type>::~allocator (&D.212712);
  D.212712 = {CLOBBER};
  _5 = &this->D.173543;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.173543._M_impl.D.172888._M_start;
  D.250730 = std::vector<free_type>::end (__x);
  D.250731 = std::vector<free_type>::begin (__x);
  D.250734 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (D.250731, D.250730, _7, _6);

  <bb 4> :
  _8 = D.250734;
  this->D.173543._M_impl.D.172888._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<free_type>::~allocator (&D.212712);
  resx 2

  <bb 6> :
<L1>:
  D.212712 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.173543;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8567, decl_uid=172778, cgraph_uid=5199, symbol_order=5995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.250736;

  <bb 2> :
  D.250736 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250736;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8566, decl_uid=172750, cgraph_uid=5198, symbol_order=5994)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI9free_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9351, decl_uid=172715, cgraph_uid=5983, symbol_order=6779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<free_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2ERKS0_, funcdef_no=10051, decl_uid=172658, cgraph_uid=6683, symbol_order=7483)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2ERKS2_, funcdef_no=10571, decl_uid=172587, cgraph_uid=7203, symbol_order=8003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.172589)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EmRKS1_, funcdef_no=8569, decl_uid=172975, cgraph_uid=5201, symbol_order=5997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9353, decl_uid=172880, cgraph_uid=5985, symbol_order=6781)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this, __a);
  _1 = &this->D.172888;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8653, decl_uid=172835, cgraph_uid=5285, symbol_order=6081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9355, decl_uid=172899, cgraph_uid=5987, symbol_order=6783)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.250743;

  <bb 2> :
  D.250743 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (this, __n);
  _1 = D.250743;
  this->_M_impl.D.172888._M_start = _1;
  _2 = this->_M_impl.D.172888._M_start;
  this->_M_impl.D.172888._M_finish = _2;
  _3 = this->_M_impl.D.172888._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.172888._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE11_M_allocateEm, funcdef_no=9457, decl_uid=172892, cgraph_uid=6089, symbol_order=6885)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.250750;
  struct free_type * iftmp.528;
  struct free_type * D.250744;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.250750 = std::allocator_traits<std::allocator<free_type> >::allocate (_1, __n);
  iftmp.528 = D.250750;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.528 = 0B;

  <bb 5> :
  D.250744 = iftmp.528;

  <bb 6> :
<L3>:
  return D.250744;

}



;; Function std::allocator_traits<std::allocator<free_type> >::allocate (_ZNSt16allocator_traitsISaI9free_typeEE8allocateERS1_m, funcdef_no=10124, decl_uid=172693, cgraph_uid=6756, symbol_order=7556)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type * std::allocator_traits<std::allocator<free_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct free_type * D.250753;
  struct free_type * D.250751;

  <bb 2> :
  D.250753 = __gnu_cxx::new_allocator<free_type>::allocate (__a, __n, 0B);
  D.250751 = D.250753;

  <bb 3> :
<L0>:
  return D.250751;

}



;; Function __gnu_cxx::new_allocator<free_type>::allocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE8allocateEmPKv, funcdef_no=10625, decl_uid=172547, cgraph_uid=7258, symbol_order=8058)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct free_type * __gnu_cxx::new_allocator<free_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245573)
{
  struct free_type * D.250764;
  struct free_type * D.250763;
  align_val_t __al;
  struct free_type * D.250761;
  bool retval.529;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.529 = _4 != 0;
  if (retval.529 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.250764 = operator new (_6);
  D.250761 = D.250764;

  <bb 7> :
<L6>:
  return D.250761;

}



;; Function __gnu_cxx::new_allocator<free_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE11_M_max_sizeEv, funcdef_no=10626, decl_uid=172574, cgraph_uid=7257, symbol_order=8057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.250765;

  <bb 2> :
  D.250765 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.250765;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6378, decl_uid=172935, cgraph_uid=3351, symbol_order=4132)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<free_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<free_type>::~allocator (_ZNSaI9free_typeED2Ev, funcdef_no=7748, decl_uid=172668, cgraph_uid=4380, symbol_order=5172)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeED2Ev, funcdef_no=8656, decl_uid=172597, cgraph_uid=5288, symbol_order=6084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8573, decl_uid=172776, cgraph_uid=5205, symbol_order=6001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.250767;

  <bb 2> :
  D.250767 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250767;

}



;; Function std::vector<free_type>::end (_ZNKSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8572, decl_uid=173158, cgraph_uid=5204, symbol_order=6000)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::end (const struct vector * const this)
{
  struct const_iterator D.223550;
  struct const_iterator D.250769;

  <bb 2> :
  _1 = &this->D.173543._M_impl.D.172888._M_finish;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.223550, _1);
  D.250769 = D.223550;
  D.223550 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250769;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9357, decl_uid=212681, cgraph_uid=5989, symbol_order=6785)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, const struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNKSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8571, decl_uid=173154, cgraph_uid=5203, symbol_order=5999)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::begin (const struct vector * const this)
{
  struct const_iterator D.223548;
  struct const_iterator D.250772;

  <bb 2> :
  _1 = &this->D.173543._M_impl.D.172888._M_start;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.223548, _1);
  D.250772 = D.223548;
  D.223548 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250772;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8574, decl_uid=212701, cgraph_uid=5206, symbol_order=6002)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result, struct allocator & D.223555)
{
  struct free_type * D.250777;
  struct free_type * D.250775;

  <bb 2> :
  D.250777 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.250775 = D.250777;

  <bb 3> :
<L0>:
  return D.250775;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9359, decl_uid=223557, cgraph_uid=5992, symbol_order=6788)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * D.250780;
  const bool __assignable;
  struct free_type * D.250778;

  <bb 2> :
  __assignable = 1;
  D.250780 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.250778 = D.250780;

  <bb 3> :
<L0>:
  return D.250778;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10053, decl_uid=235427, cgraph_uid=6685, symbol_order=7485)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.250782;
  bool retval.530;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (&__first);
  _2 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, const free_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.530 = __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (&__first, &__last);
  if (retval.530 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250782 = __cur;

  <bb 6> :
<L3>:
  return D.250782;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10576, decl_uid=212639, cgraph_uid=7208, symbol_order=8008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct free_type & D.250784;

  <bb 2> :
  D.250784 = this->_M_current;

  <bb 3> :
<L0>:
  return D.250784;

}



;; Function std::__addressof<free_type> (_ZSt11__addressofI9free_typeEPT_RS1_, funcdef_no=10575, decl_uid=226022, cgraph_uid=7207, symbol_order=8007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__addressof<free_type> (struct free_type & __r)
{
  struct free_type * D.250786;

  <bb 2> :
  D.250786 = __r;

  <bb 3> :
<L0>:
  return D.250786;

}



;; Function std::_Construct<free_type, const free_type&> (_ZSt10_ConstructI9free_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10577, decl_uid=241935, cgraph_uid=7209, symbol_order=8009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, const free_type&> (struct free_type * __p, const struct free_type & __args#0)
{
  void * D.245369;
  void * D.245368;
  const struct free_type * D.245370;

  <bb 2> :
  D.245370 = std::forward<const free_type&> (__args#0);
  D.245368 = __p;
  D.245369 = operator new (24, D.245368);
  MEM[(struct free_type *)D.245369] = *D.245370;
  return;

}



;; Function std::forward<const free_type&> (_ZSt7forwardIRK9free_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9468, decl_uid=225636, cgraph_uid=6100, symbol_order=6896)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct free_type & std::forward<const free_type&> (const struct type & __t)
{
  const struct free_type & D.250788;

  <bb 2> :
  D.250788 = __t;

  <bb 3> :
<L0>:
  return D.250788;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10574, decl_uid=212643, cgraph_uid=7206, symbol_order=8006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.250790;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.250790 = this;

  <bb 3> :
<L0>:
  return D.250790;

}



;; Function __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (_ZN9__gnu_cxxneIPK9free_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10573, decl_uid=241928, cgraph_uid=7205, symbol_order=8005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.250792;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  D.250792 = _2 != _4;

  <bb 3> :
<L0>:
  return D.250792;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10627, decl_uid=212668, cgraph_uid=7259, symbol_order=8059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * const & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  const struct free_type * const & D.250794;

  <bb 2> :
  D.250794 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250794;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EED2Ev, funcdef_no=7751, decl_uid=172998, cgraph_uid=4383, symbol_order=5175)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.172888._M_end_of_storage;
  _2 = this->_M_impl.D.172888._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.172888._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8658, decl_uid=172895, cgraph_uid=5290, symbol_order=6086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (struct _Vector_base * const this, struct free_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<free_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::deallocate (_ZNSt16allocator_traitsISaI9free_typeEE10deallocateERS1_PS0_m, funcdef_no=9455, decl_uid=172700, cgraph_uid=6087, symbol_order=6883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::deallocate (struct allocator_type & __a, struct free_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE10deallocateEPS1_m, funcdef_no=10123, decl_uid=172551, cgraph_uid=6755, symbol_order=7555)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::deallocate (struct new_allocator * const this, struct free_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, int>::hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEEC2Embbb, funcdef_no=7698, decl_uid=193344, cgraph_uid=4330, symbol_order=5122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8577, decl_uid=193303, cgraph_uid=5209, symbol_order=6005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.250803;
  unsigned int D.250802;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.250802 = hash_table_higher_prime_index (size);
  size_prime_index = D.250802;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.250803 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.250803;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9362, decl_uid=193249, cgraph_uid=5994, symbol_order=6790)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.250819;
  struct value_type * D.250818;
  struct mem_alloc_description & D.250817;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.250815;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.250818 = xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (n);
  nentries = D.250818;
  goto <bb 6>; [INV]

  <bb 5> :
  D.250819 = ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (n);
  nentries = D.250819;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.250815 = nentries;

  <bb 9> :
<L14>:
  return D.250815;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE10data_allocEm, funcdef_no=10055, decl_uid=212758, cgraph_uid=6687, symbol_order=7487)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.250822;
  struct hash_entry * D.250820;

  <bb 2> :
  D.250822 = xcalloc (count, 16);
  D.250820 = D.250822;

  <bb 3> :
<L0>:
  return D.250820;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEPT_m, funcdef_no=10056, decl_uid=235465, cgraph_uid=6688, symbol_order=7488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (size_t c)
{
  struct hash_entry * D.250829;
  struct hash_entry * D.250828;
  struct hash_entry * D.250826;
  bool retval.531;

  <bb 2> :
  retval.531 = need_finalization_p<hash_map<tree_node*, int>::hash_entry> ();
  if (retval.531 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.250828 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.250826 = D.250828;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.250829 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.250826 = D.250829;

  <bb 5> :
<L2>:
  return D.250826;

}



;; Function finalize<hash_map<tree_node*, int>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEvPv, funcdef_no=10579, decl_uid=241950, cgraph_uid=7211, symbol_order=8011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, int>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, int>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEbv, funcdef_no=10578, decl_uid=241949, cgraph_uid=7210, symbol_order=8010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, int>::hash_entry> ()
{
  bool D.250830;

  <bb 2> :
  D.250830 = 0;

  <bb 3> :
<L0>:
  return D.250830;

}



;; Function hash_map<tree_node*, int>::get (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3getERKS1_, funcdef_no=7703, decl_uid=193030, cgraph_uid=4335, symbol_order=5127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * hash_map<tree_node*, int>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.250840;
  struct hash_entry & D.250839;
  unsigned int D.250838;
  struct hash_entry & e;
  int * iftmp.532;
  int * D.250832;

  <bb 2> :
  _1 = &this->m_table;
  D.250838 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.250838;
  D.250839 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.250839;
  D.250840 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  _3 = D.250840;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.532 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.532 = &e->m_value;

  <bb 5> :
  D.250832 = iftmp.532;

  <bb 6> :
<L3>:
  return D.250832;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE4hashERKS2_, funcdef_no=8579, decl_uid=192986, cgraph_uid=5211, symbol_order=6007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (union tree_node * const & h)
{
  hashval_t D.250841;

  <bb 2> :
  D.250841 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.250841;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8582, decl_uid=193170, cgraph_uid=5214, symbol_order=6010)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.250875;
  bool D.250874;
  bool D.250873;
  bool D.250872;
  bool D.250871;
  bool D.250870;
  struct value_type * D.250869;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.536;
  bool retval.535;
  struct value_type & D.250855;
  bool iftmp.534;
  bool retval.533;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 16;
  entry = _5 + _7;
  D.250870 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.250870;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.250871 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.250871;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.250872 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _11 = D.250872;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.534 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.534 = 0;

  <bb 8> :
  retval.533 = iftmp.534;
  if (retval.533 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.250855 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  entry = _17 + _19;
  D.250873 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.250873;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.250874 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.250874;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.250875 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _23 = D.250875;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.536 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.536 = 0;

  <bb 18> :
  retval.535 = iftmp.536;
  if (retval.535 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.250855 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.250855;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8is_emptyERS8_, funcdef_no=8584, decl_uid=193266, cgraph_uid=5216, symbol_order=6012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.250878;
  bool D.250876;

  <bb 2> :
  D.250878 = hash_map<tree_node*, int>::hash_entry::is_empty (v);
  D.250876 = D.250878;

  <bb 3> :
<L0>:
  return D.250876;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry8is_emptyERKS7_, funcdef_no=8581, decl_uid=193099, cgraph_uid=5213, symbol_order=6009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.250881;
  bool D.250879;

  <bb 2> :
  D.250881 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  D.250879 = D.250881;

  <bb 3> :
<L0>:
  return D.250879;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10is_deletedERS8_, funcdef_no=8585, decl_uid=193264, cgraph_uid=5217, symbol_order=6013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.250884;
  bool D.250882;

  <bb 2> :
  D.250884 = hash_map<tree_node*, int>::hash_entry::is_deleted (v);
  D.250882 = D.250884;

  <bb 3> :
<L0>:
  return D.250882;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10is_deletedERKS7_, funcdef_no=9366, decl_uid=193094, cgraph_uid=5998, symbol_order=6794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.250887;
  bool D.250885;

  <bb 2> :
  D.250887 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (e);
  D.250885 = D.250887;

  <bb 3> :
<L0>:
  return D.250885;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10is_deletedIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=10065, decl_uid=235528, cgraph_uid=6697, symbol_order=7497)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250888;

  <bb 2> :
  _1 = entry->m_key;
  D.250888 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.250888;

}



;; Function hash_map<tree_node*, int>::hash_entry::equal (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry5equalERKS7_RKS1_, funcdef_no=9364, decl_uid=193087, cgraph_uid=5996, symbol_order=6792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.250892;
  bool D.250890;

  <bb 2> :
  _1 = &a->m_key;
  D.250892 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_1, b);
  D.250890 = D.250892;

  <bb 3> :
<L0>:
  return D.250890;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10equal_keysERKS2_S6_, funcdef_no=10063, decl_uid=192988, cgraph_uid=6695, symbol_order=7495)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.250893;

  <bb 2> :
  D.250893 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.250893;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE8is_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=8583, decl_uid=212751, cgraph_uid=5215, symbol_order=6011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250895;

  <bb 2> :
  _1 = entry->m_key;
  D.250895 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.250895;

}



;; Function gimple_block (_ZL12gimple_blockPK6gimple, funcdef_no=2001, decl_uid=92276, cgraph_uid=1138, symbol_order=1298)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * gimple_block (const struct gimple * g)
{
  union tree_node * D.250903;
  union tree_node * iftmp.537;
  union tree_node * D.250897;

  <bb 2> :
  _1 = g->location;
  _2 = IS_ADHOC_LOC (_1);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = g->location;
  line_table.538_4 = line_table;
  D.250903 = get_data_from_adhoc_loc (line_table.538_4, _3);
  iftmp.537 = D.250903;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.537 = 0B;

  <bb 5> :
  D.250897 = iftmp.537;

  <bb 6> :
<L3>:
  return D.250897;

}



;; Function IS_ADHOC_LOC (_Z12IS_ADHOC_LOCj, funcdef_no=1146, decl_uid=35072, cgraph_uid=320, symbol_order=337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool IS_ADHOC_LOC (location_t loc)
{
  bool D.250904;

  <bb 2> :
  loc.539_1 = (signed int) loc;
  D.250904 = loc.539_1 < 0;

  <bb 3> :
<L0>:
  return D.250904;

}



;; Function hash_map<tree_node*, int>::put (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3putERKS1_RKi, funcdef_no=7702, decl_uid=193026, cgraph_uid=4334, symbol_order=5126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, int>::put (struct hash_map * const this, union tree_node * const & k, const int & v)
{
  bool D.250913;
  struct hash_entry * D.250912;
  unsigned int D.250911;
  bool ins;
  struct hash_entry * e;
  bool D.250909;
  void * D.212747;
  void * D.212746;

  <bb 2> :
  _1 = &this->m_table;
  D.250911 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.250911;
  D.250912 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.250912;
  D.250913 = hash_map<tree_node*, int>::hash_entry::is_empty (e);
  ins = D.250913;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212746 = &e->m_value;
  D.212747 = operator new (4, D.212746);
  _4 = *v;
  MEM[(int *)D.212747] = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = *v;
  e->m_value = _5;

  <bb 5> :
  D.250909 = ~ins;

  <bb 6> :
<L3>:
  return D.250909;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8580, decl_uid=193181, cgraph_uid=5212, symbol_order=6008)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.250963;
  bool D.250962;
  bool D.250961;
  bool D.250960;
  bool D.250959;
  bool D.250958;
  struct value_type * D.250957;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.545;
  bool retval.544;
  bool retval.543;
  bool retval.542;
  bool retval.541;
  bool retval.540;
  struct value_type * D.250919;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 16;
  entry = _11 + _13;
  size = this->m_size;
  D.250958 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.540 = D.250958;
  if (retval.540 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.250959 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.541 = D.250959;
  if (retval.541 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 16;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.250960 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.542 = D.250960;
  if (retval.542 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  D.250919 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 16;
  entry = _24 + _26;
  D.250961 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.543 = D.250961;
  if (retval.543 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.250962 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.544 = D.250962;
  if (retval.544 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 16;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.250963 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.545 = D.250963;
  if (retval.545 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 16;
  D.250919 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.250919 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.250919 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 16;
  D.250919 = _37 + _39;

  <bb 27> :
<L37>:
  return D.250919;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9363, decl_uid=193262, cgraph_uid=5995, symbol_order=6791)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.250994;
  unsigned int D.250993;
  bool D.250992;
  bool D.250991;
  struct mem_alloc_description & D.250990;
  struct value_type * D.250989;
  unsigned int D.250988;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.235516;
  void * D.235515;
  struct hash_entry * D.235517;
  bool iftmp.549;
  bool retval.548;
  bool iftmp.547;
  bool retval.546;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 16;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.547 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.547 = 0;

  <bb 6> :
  retval.546 = iftmp.547;
  if (retval.546 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.250988 = hash_table_higher_prime_index (_5);
  nindex = D.250988;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.250989 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.250989;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.250991 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.250991;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.250992 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.250992;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.549 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.549 = 0;

  <bb 15> :
  retval.548 = iftmp.549;
  if (retval.548 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.250993 = hash_map<tree_node*, int>::hash_entry::hash (x);
  _16 = D.250993;
  D.250994 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.250994;
  D.235517 = std::move<hash_map<tree_node*, int>::hash_entry&> (x);
  D.235515 = q;
  D.235516 = operator new (16, D.235515);
  MEM[(struct value_type *)D.235516] = *D.235517;

  <bb 17> :
  p = p + 16;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10057, decl_uid=193157, cgraph_uid=6689, symbol_order=7489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.250995;

  <bb 2> :
  D.250995 = this->m_size;

  <bb 3> :
<L0>:
  return D.250995;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10058, decl_uid=193159, cgraph_uid=6690, symbol_order=7490)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.250997;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.250997 = _1 - _2;

  <bb 3> :
<L0>:
  return D.250997;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10059, decl_uid=193259, cgraph_uid=6691, symbol_order=7491)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.550;
  bool D.250999;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.550 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.550 = 0;

  <bb 6> :
  D.250999 = iftmp.550;

  <bb 7> :
<L4>:
  return D.250999;

}



;; Function hash_map<tree_node*, int>::hash_entry::hash (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry4hashERKS7_, funcdef_no=10061, decl_uid=193085, cgraph_uid=6693, symbol_order=7493)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, int>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251008;
  hashval_t D.251006;

  <bb 2> :
  _1 = &e->m_key;
  D.251008 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_1);
  D.251006 = D.251008;

  <bb 3> :
<L0>:
  return D.251006;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10060, decl_uid=193252, cgraph_uid=6692, symbol_order=7492)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251021;
  bool D.251020;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.552;
  struct value_type * D.251012;
  bool retval.551;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 16;
  slot = _2 + _4;
  D.251020 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.551 = D.251020;
  if (retval.551 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251012 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 16;
  slot = _8 + _10;
  D.251021 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.552 = D.251021;
  if (retval.552 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251012 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251012;

}



;; Function std::move<hash_map<tree_node*, int>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEONSt16remove_referenceIT_E4typeEOSB_, funcdef_no=10062, decl_uid=235489, cgraph_uid=6694, symbol_order=7494)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, int>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251022;

  <bb 2> :
  D.251022 = __t;

  <bb 3> :
<L0>:
  return D.251022;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE9data_freeEPS8_, funcdef_no=8587, decl_uid=212760, cgraph_uid=5219, symbol_order=6015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10mark_emptyERS8_, funcdef_no=9365, decl_uid=193270, cgraph_uid=5997, symbol_order=6793)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, int>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10mark_emptyERS7_, funcdef_no=10064, decl_uid=193097, cgraph_uid=6696, symbol_order=7496)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10mark_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=10580, decl_uid=241976, cgraph_uid=7212, symbol_order=8012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<free_type>::operator[] (_ZNSt6vectorI9free_typeSaIS0_EEixEm, funcdef_no=7701, decl_uid=173196, cgraph_uid=4333, symbol_order=5125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251025;

  <bb 2> :
  _1 = this->D.173543._M_impl.D.172888._M_start;
  _2 = __n * 24;
  D.251025 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251025;

}



;; Function std::vector<free_type>::size (_ZNKSt6vectorI9free_typeSaIS0_EE4sizeEv, funcdef_no=7700, decl_uid=173176, cgraph_uid=4332, symbol_order=5124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::size (const struct vector * const this)
{
  size_type D.251027;

  <bb 2> :
  _1 = this->D.173543._M_impl.D.172888._M_finish;
  _2 = this->D.173543._M_impl.D.172888._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.251027 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251027;

}



;; Function hash_map<tree_node*, int>::~hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEED2Ev, funcdef_no=6345, decl_uid=193367, cgraph_uid=3320, symbol_order=4101)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7705, decl_uid=193313, cgraph_uid=4337, symbol_order=5129)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.251042;
  bool D.251041;
  size_t i;
  bool iftmp.554;
  bool retval.553;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.251041 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.251041;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.251042 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.251042;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.554 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.554 = 0;

  <bb 7> :
  retval.553 = iftmp.554;
  if (retval.553 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, int>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::remove (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry6removeERS7_, funcdef_no=8586, decl_uid=193090, cgraph_uid=5218, symbol_order=6014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE6removeIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=9367, decl_uid=223626, cgraph_uid=5999, symbol_order=6795)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function ggc_remove<tree_node*>::remove (_ZN10ggc_removeIP9tree_nodeE6removeERS1_, funcdef_no=10066, decl_uid=85315, cgraph_uid=6698, symbol_order=7498)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<tree_node*>::remove (union tree_node * & D.241980)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::get (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7707, decl_uid=193425, cgraph_uid=4339, symbol_order=5131)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_detched_array * hash_map<tree_node*, function_pthread_detched_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.251051;
  struct hash_entry & D.251050;
  unsigned int D.251049;
  struct hash_entry & e;
  struct function_pthread_detched_array * iftmp.555;
  struct function_pthread_detched_array * D.251043;

  <bb 2> :
  _1 = &this->m_table;
  D.251049 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.251049;
  D.251050 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.251050;
  D.251051 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  _3 = D.251051;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.555 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.555 = &e->m_value;

  <bb 5> :
  D.251043 = iftmp.555;

  <bb 6> :
<L3>:
  return D.251043;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE4hashERKS2_, funcdef_no=8588, decl_uid=193381, cgraph_uid=5220, symbol_order=6016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (union tree_node * const & h)
{
  hashval_t D.251052;

  <bb 2> :
  D.251052 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.251052;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8589, decl_uid=193568, cgraph_uid=5221, symbol_order=6017)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.251086;
  bool D.251085;
  bool D.251084;
  bool D.251083;
  bool D.251082;
  bool D.251081;
  struct value_type * D.251080;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.559;
  bool retval.558;
  struct value_type & D.251066;
  bool iftmp.557;
  bool retval.556;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.251081 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.251081;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.251082 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.251082;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251083 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _11 = D.251083;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.557 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.557 = 0;

  <bb 8> :
  retval.556 = iftmp.557;
  if (retval.556 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.251066 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.251084 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.251084;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.251085 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.251085;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.251086 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _23 = D.251086;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.559 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.559 = 0;

  <bb 18> :
  retval.558 = iftmp.559;
  if (retval.558 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.251066 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.251066;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8965, decl_uid=193664, cgraph_uid=5597, symbol_order=6393)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.251089;
  bool D.251087;

  <bb 2> :
  D.251089 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (v);
  D.251087 = D.251089;

  <bb 3> :
<L0>:
  return D.251087;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8704, decl_uid=193494, cgraph_uid=5336, symbol_order=6132)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.251092;
  bool D.251090;

  <bb 2> :
  D.251092 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.251090 = D.251092;

  <bb 3> :
<L0>:
  return D.251090;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8966, decl_uid=193662, cgraph_uid=5598, symbol_order=6394)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.251095;
  bool D.251093;

  <bb 2> :
  D.251095 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (v);
  D.251093 = D.251095;

  <bb 3> :
<L0>:
  return D.251093;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9804, decl_uid=193489, cgraph_uid=6436, symbol_order=7232)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.251098;
  bool D.251096;

  <bb 2> :
  D.251098 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.251096 = D.251098;

  <bb 3> :
<L0>:
  return D.251096;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10364, decl_uid=239515, cgraph_uid=6996, symbol_order=7796)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251099;

  <bb 2> :
  _1 = entry->m_key;
  D.251099 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.251099;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9369, decl_uid=193482, cgraph_uid=6001, symbol_order=6797)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.251103;
  bool D.251101;

  <bb 2> :
  _1 = &a->m_key;
  D.251103 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_1, b);
  D.251101 = D.251103;

  <bb 3> :
<L0>:
  return D.251101;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10equal_keysERKS2_S7_, funcdef_no=10069, decl_uid=193383, cgraph_uid=6701, symbol_order=7501)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.251104;

  <bb 2> :
  D.251104 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.251104;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8590, decl_uid=212780, cgraph_uid=5222, symbol_order=6018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251106;

  <bb 2> :
  _1 = entry->m_key;
  D.251106 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.251106;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2ERKS_, funcdef_no=6348, decl_uid=193763, cgraph_uid=3323, symbol_order=4104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.193765)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193765->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2ERKS2_, funcdef_no=7709, decl_uid=177728, cgraph_uid=4341, symbol_order=5133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_detched_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.251112;
  struct __normal_iterator D.251109;
  struct __normal_iterator D.251108;
  struct allocator D.212895;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177765;
  _2 = &__x->D.177765;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  D.212895 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_detched_type>::size (__x);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _4, &D.212895);

  <bb 3> :
  std::allocator<pthread_detched_type>::~allocator (&D.212895);
  D.212895 = {CLOBBER};
  _5 = &this->D.177765;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.177765._M_impl.D.177110._M_start;
  D.251108 = std::vector<pthread_detched_type>::end (__x);
  D.251109 = std::vector<pthread_detched_type>::begin (__x);
  D.251112 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (D.251109, D.251108, _7, _6);

  <bb 4> :
  _8 = D.251112;
  this->D.177765._M_impl.D.177110._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_detched_type>::~allocator (&D.212895);
  resx 2

  <bb 6> :
<L1>:
  D.212895 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.177765;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8592, decl_uid=177000, cgraph_uid=5224, symbol_order=6020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.251114;

  <bb 2> :
  D.251114 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251114;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8591, decl_uid=176972, cgraph_uid=5223, symbol_order=6019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9370, decl_uid=176937, cgraph_uid=6002, symbol_order=6798)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2ERKS0_, funcdef_no=10071, decl_uid=176880, cgraph_uid=6703, symbol_order=7503)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2ERKS2_, funcdef_no=10588, decl_uid=176809, cgraph_uid=7220, symbol_order=8020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.176811)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EmRKS1_, funcdef_no=8594, decl_uid=177197, cgraph_uid=5226, symbol_order=6022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9372, decl_uid=177102, cgraph_uid=6004, symbol_order=6800)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this, __a);
  _1 = &this->D.177110;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8681, decl_uid=177057, cgraph_uid=5313, symbol_order=6109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9374, decl_uid=177121, cgraph_uid=6006, symbol_order=6802)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.251121;

  <bb 2> :
  D.251121 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (this, __n);
  _1 = D.251121;
  this->_M_impl.D.177110._M_start = _1;
  _2 = this->_M_impl.D.177110._M_start;
  this->_M_impl.D.177110._M_finish = _2;
  _3 = this->_M_impl.D.177110._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.177110._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE11_M_allocateEm, funcdef_no=9494, decl_uid=177114, cgraph_uid=6126, symbol_order=6922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_detched_type * std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.251128;
  struct pthread_detched_type * iftmp.560;
  struct pthread_detched_type * D.251122;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.251128 = std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_1, __n);
  iftmp.560 = D.251128;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.560 = 0B;

  <bb 5> :
  D.251122 = iftmp.560;

  <bb 6> :
<L3>:
  return D.251122;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8allocateERS1_m, funcdef_no=10148, decl_uid=176915, cgraph_uid=6780, symbol_order=7580)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_detched_type * D.251131;
  struct pthread_detched_type * D.251129;

  <bb 2> :
  D.251131 = __gnu_cxx::new_allocator<pthread_detched_type>::allocate (__a, __n, 0B);
  D.251129 = D.251131;

  <bb 3> :
<L0>:
  return D.251129;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::allocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE8allocateEmPKv, funcdef_no=10639, decl_uid=176769, cgraph_uid=7272, symbol_order=8072)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * __gnu_cxx::new_allocator<pthread_detched_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245645)
{
  struct pthread_detched_type * D.251142;
  struct pthread_detched_type * D.251141;
  align_val_t __al;
  struct pthread_detched_type * D.251139;
  bool retval.561;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.561 = _4 != 0;
  if (retval.561 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.251142 = operator new (_6);
  D.251139 = D.251142;

  <bb 7> :
<L6>:
  return D.251139;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE11_M_max_sizeEv, funcdef_no=10640, decl_uid=176796, cgraph_uid=7271, symbol_order=8071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.251143;

  <bb 2> :
  D.251143 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.251143;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6396, decl_uid=177157, cgraph_uid=3368, symbol_order=4149)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_detched_type>::~allocator (_ZNSaI20pthread_detched_typeED2Ev, funcdef_no=7763, decl_uid=176890, cgraph_uid=4395, symbol_order=5187)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeED2Ev, funcdef_no=8684, decl_uid=176819, cgraph_uid=5316, symbol_order=6112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8598, decl_uid=176998, cgraph_uid=5230, symbol_order=6026)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.251145;

  <bb 2> :
  D.251145 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251145;

}



;; Function std::vector<pthread_detched_type>::end (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8597, decl_uid=177380, cgraph_uid=5229, symbol_order=6025)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::end (const struct vector * const this)
{
  struct const_iterator D.223674;
  struct const_iterator D.251147;

  <bb 2> :
  _1 = &this->D.177765._M_impl.D.177110._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.223674, _1);
  D.251147 = D.223674;
  D.223674 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251147;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9376, decl_uid=212864, cgraph_uid=6008, symbol_order=6804)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8596, decl_uid=177376, cgraph_uid=5228, symbol_order=6024)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::begin (const struct vector * const this)
{
  struct const_iterator D.223672;
  struct const_iterator D.251150;

  <bb 2> :
  _1 = &this->D.177765._M_impl.D.177110._M_start;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.223672, _1);
  D.251150 = D.223672;
  D.223672 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251150;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8599, decl_uid=212884, cgraph_uid=5231, symbol_order=6027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result, struct allocator & D.223679)
{
  struct pthread_detched_type * D.251155;
  struct pthread_detched_type * D.251153;

  <bb 2> :
  D.251155 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.251153 = D.251155;

  <bb 3> :
<L0>:
  return D.251153;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9378, decl_uid=223681, cgraph_uid=6011, symbol_order=6807)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251158;
  const bool __assignable;
  struct pthread_detched_type * D.251156;

  <bb 2> :
  __assignable = 1;
  D.251158 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.251156 = D.251158;

  <bb 3> :
<L0>:
  return D.251156;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10073, decl_uid=235667, cgraph_uid=6705, symbol_order=7505)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251161;
  struct pthread_detched_type * D.251159;

  <bb 2> :
  D.251161 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.251159 = D.251161;

  <bb 3> :
<L0>:
  return D.251159;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10590, decl_uid=242009, cgraph_uid=7222, symbol_order=8022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251166;
  struct __normal_iterator D.251164;
  struct __normal_iterator D.251163;
  struct pthread_detched_type * D.251162;

  <bb 2> :
  D.251163 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.251164 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.251166 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (D.251164, D.251163, __result);
  D.251162 = D.251166;

  <bb 3> :
<L0>:
  return D.251162;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9498, decl_uid=226291, cgraph_uid=6130, symbol_order=6926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.251167;

  <bb 2> :
  D.251167 = __it;

  <bb 3> :
<L0>:
  return D.251167;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10863, decl_uid=245418, cgraph_uid=7495, symbol_order=8297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251171;
  struct pthread_detched_type * D.251169;

  <bb 2> :
  __result.562_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.562_1);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _4 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.251171 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.251171;
  D.251169 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251169;

}



;; Function std::__niter_base<pthread_detched_type*> (_ZSt12__niter_baseIP20pthread_detched_typeET_S2_, funcdef_no=10154, decl_uid=226557, cgraph_uid=6786, symbol_order=7586)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.251172;

  <bb 2> :
  D.251172 = __it;

  <bb 3> :
<L0>:
  return D.251172;

}



;; Function std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIPK20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10149, decl_uid=236743, cgraph_uid=6781, symbol_order=7581)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  const struct pthread_detched_type * D.251174;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.251174 = *_1;

  <bb 3> :
<L0>:
  return D.251174;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10641, decl_uid=212851, cgraph_uid=7273, symbol_order=8073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_detched_type * const & D.251176;

  <bb 2> :
  D.251176 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251176;

}



;; Function std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10151, decl_uid=236897, cgraph_uid=6783, symbol_order=7583)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251180;
  struct pthread_detched_type * D.251178;

  <bb 2> :
  D.251180 = std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.251178 = D.251180;

  <bb 3> :
<L0>:
  return D.251178;

}



;; Function std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10642, decl_uid=242342, cgraph_uid=7274, symbol_order=8074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251181;

  <bb 2> :
  D.251181 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251181;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI20pthread_detched_typeEEPT_PKS4_S7_S5_, funcdef_no=10878, decl_uid=245668, cgraph_uid=7510, symbol_order=8312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_detched_type * D.251186;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.563_2 = (long unsigned int) _Num;
  _3 = _Num.563_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.564_4 = (long unsigned int) _Num;
  _5 = _Num.564_4 * 16;
  D.251186 = __result + _5;

  <bb 5> :
<L3>:
  return D.251186;

}



;; Function std::__niter_wrap<pthread_detched_type*> (_ZSt12__niter_wrapIP20pthread_detched_typeET_RKS2_S2_, funcdef_no=10156, decl_uid=236940, cgraph_uid=6788, symbol_order=7588)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_wrap<pthread_detched_type*> (struct pthread_detched_type * const & D.242364, struct pthread_detched_type * __res)
{
  struct pthread_detched_type * D.251188;

  <bb 2> :
  D.251188 = __res;

  <bb 3> :
<L0>:
  return D.251188;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7766, decl_uid=177220, cgraph_uid=4398, symbol_order=5190)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.177110._M_end_of_storage;
  _2 = this->_M_impl.D.177110._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.177110._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8686, decl_uid=177117, cgraph_uid=5318, symbol_order=6114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_detched_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE10deallocateERS1_PS0_m, funcdef_no=9492, decl_uid=176922, cgraph_uid=6124, symbol_order=6920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (struct allocator_type & __a, struct pthread_detched_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE10deallocateEPS1_m, funcdef_no=10147, decl_uid=176773, cgraph_uid=6779, symbol_order=7579)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (struct new_allocator * const this, struct pthread_detched_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_detched_type>::operator[] (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEixEm, funcdef_no=7715, decl_uid=177418, cgraph_uid=4347, symbol_order=5139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_detched_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251196;

  <bb 2> :
  _1 = this->D.177765._M_impl.D.177110._M_start;
  _2 = __n * 16;
  D.251196 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251196;

}



;; Function std::vector<pthread_detched_type>::size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE4sizeEv, funcdef_no=7714, decl_uid=177398, cgraph_uid=4346, symbol_order=5138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::size (const struct vector * const this)
{
  size_type D.251198;

  <bb 2> :
  _1 = this->D.177765._M_impl.D.177110._M_finish;
  _2 = this->D.177765._M_impl.D.177110._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.251198 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251198;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::get (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7716, decl_uid=193901, cgraph_uid=4348, symbol_order=5140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_exit_array * hash_map<tree_node*, function_pthread_exit_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.251208;
  struct hash_entry & D.251207;
  unsigned int D.251206;
  struct hash_entry & e;
  struct function_pthread_exit_array * iftmp.565;
  struct function_pthread_exit_array * D.251200;

  <bb 2> :
  _1 = &this->m_table;
  D.251206 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.251206;
  D.251207 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.251207;
  D.251208 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  _3 = D.251208;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.565 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.565 = &e->m_value;

  <bb 5> :
  D.251200 = iftmp.565;

  <bb 6> :
<L3>:
  return D.251200;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE4hashERKS2_, funcdef_no=8601, decl_uid=193857, cgraph_uid=5233, symbol_order=6029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (union tree_node * const & h)
{
  hashval_t D.251209;

  <bb 2> :
  D.251209 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.251209;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8602, decl_uid=194044, cgraph_uid=5234, symbol_order=6030)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.251243;
  bool D.251242;
  bool D.251241;
  bool D.251240;
  bool D.251239;
  bool D.251238;
  struct value_type * D.251237;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.569;
  bool retval.568;
  struct value_type & D.251223;
  bool iftmp.567;
  bool retval.566;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.251238 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.251238;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.251239 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.251239;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251240 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _11 = D.251240;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.567 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.567 = 0;

  <bb 8> :
  retval.566 = iftmp.567;
  if (retval.566 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.251223 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.251241 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.251241;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.251242 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.251242;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.251243 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _23 = D.251243;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.569 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.569 = 0;

  <bb 18> :
  retval.568 = iftmp.569;
  if (retval.568 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.251223 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.251223;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8969, decl_uid=194140, cgraph_uid=5601, symbol_order=6397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.251246;
  bool D.251244;

  <bb 2> :
  D.251246 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (v);
  D.251244 = D.251246;

  <bb 3> :
<L0>:
  return D.251244;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8732, decl_uid=193970, cgraph_uid=5364, symbol_order=6160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.251249;
  bool D.251247;

  <bb 2> :
  D.251249 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.251247 = D.251249;

  <bb 3> :
<L0>:
  return D.251247;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8970, decl_uid=194138, cgraph_uid=5602, symbol_order=6398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.251252;
  bool D.251250;

  <bb 2> :
  D.251252 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (v);
  D.251250 = D.251252;

  <bb 3> :
<L0>:
  return D.251250;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9806, decl_uid=193965, cgraph_uid=6438, symbol_order=7234)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.251255;
  bool D.251253;

  <bb 2> :
  D.251255 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.251253 = D.251255;

  <bb 3> :
<L0>:
  return D.251253;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10365, decl_uid=239521, cgraph_uid=6997, symbol_order=7797)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251256;

  <bb 2> :
  _1 = entry->m_key;
  D.251256 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.251256;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9382, decl_uid=193958, cgraph_uid=6014, symbol_order=6810)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.251260;
  bool D.251258;

  <bb 2> :
  _1 = &a->m_key;
  D.251260 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_1, b);
  D.251258 = D.251260;

  <bb 3> :
<L0>:
  return D.251258;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10equal_keysERKS2_S7_, funcdef_no=10077, decl_uid=193859, cgraph_uid=6709, symbol_order=7509)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.251261;

  <bb 2> :
  D.251261 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.251261;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8603, decl_uid=212920, cgraph_uid=5235, symbol_order=6031)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251263;

  <bb 2> :
  _1 = entry->m_key;
  D.251263 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.251263;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2ERKS_, funcdef_no=6354, decl_uid=194239, cgraph_uid=3329, symbol_order=4110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.194241)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194241->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2ERKS2_, funcdef_no=7718, decl_uid=178773, cgraph_uid=4350, symbol_order=5142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_exit_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.251269;
  struct __normal_iterator D.251266;
  struct __normal_iterator D.251265;
  struct allocator D.213035;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178810;
  _2 = &__x->D.178810;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  D.213035 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_exit_type>::size (__x);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _4, &D.213035);

  <bb 3> :
  std::allocator<pthread_exit_type>::~allocator (&D.213035);
  D.213035 = {CLOBBER};
  _5 = &this->D.178810;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.178810._M_impl.D.178155._M_start;
  D.251265 = std::vector<pthread_exit_type>::end (__x);
  D.251266 = std::vector<pthread_exit_type>::begin (__x);
  D.251269 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (D.251266, D.251265, _7, _6);

  <bb 4> :
  _8 = D.251269;
  this->D.178810._M_impl.D.178155._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_exit_type>::~allocator (&D.213035);
  resx 2

  <bb 6> :
<L1>:
  D.213035 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.178810;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8605, decl_uid=178045, cgraph_uid=5237, symbol_order=6033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.251271;

  <bb 2> :
  D.251271 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251271;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8604, decl_uid=178017, cgraph_uid=5236, symbol_order=6032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9383, decl_uid=177982, cgraph_uid=6015, symbol_order=6811)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2ERKS0_, funcdef_no=10079, decl_uid=177925, cgraph_uid=6711, symbol_order=7511)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2ERKS2_, funcdef_no=10597, decl_uid=177854, cgraph_uid=7229, symbol_order=8029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.177856)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EmRKS1_, funcdef_no=8607, decl_uid=178242, cgraph_uid=5239, symbol_order=6035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9385, decl_uid=178147, cgraph_uid=6017, symbol_order=6813)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this, __a);
  _1 = &this->D.178155;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8709, decl_uid=178102, cgraph_uid=5341, symbol_order=6137)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9387, decl_uid=178166, cgraph_uid=6019, symbol_order=6815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.251278;

  <bb 2> :
  D.251278 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (this, __n);
  _1 = D.251278;
  this->_M_impl.D.178155._M_start = _1;
  _2 = this->_M_impl.D.178155._M_start;
  this->_M_impl.D.178155._M_finish = _2;
  _3 = this->_M_impl.D.178155._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.178155._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE11_M_allocateEm, funcdef_no=9531, decl_uid=178159, cgraph_uid=6163, symbol_order=6959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_exit_type * std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.251285;
  struct pthread_exit_type * iftmp.570;
  struct pthread_exit_type * D.251279;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.251285 = std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_1, __n);
  iftmp.570 = D.251285;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.570 = 0B;

  <bb 5> :
  D.251279 = iftmp.570;

  <bb 6> :
<L3>:
  return D.251279;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8allocateERS1_m, funcdef_no=10172, decl_uid=177960, cgraph_uid=6804, symbol_order=7604)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_exit_type * D.251288;
  struct pthread_exit_type * D.251286;

  <bb 2> :
  D.251288 = __gnu_cxx::new_allocator<pthread_exit_type>::allocate (__a, __n, 0B);
  D.251286 = D.251288;

  <bb 3> :
<L0>:
  return D.251286;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::allocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE8allocateEmPKv, funcdef_no=10652, decl_uid=177814, cgraph_uid=7285, symbol_order=8085)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * __gnu_cxx::new_allocator<pthread_exit_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245706)
{
  struct pthread_exit_type * D.251299;
  struct pthread_exit_type * D.251298;
  align_val_t __al;
  struct pthread_exit_type * D.251296;
  bool retval.571;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.571 = _4 != 0;
  if (retval.571 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.251299 = operator new (_6);
  D.251296 = D.251299;

  <bb 7> :
<L6>:
  return D.251296;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE11_M_max_sizeEv, funcdef_no=10653, decl_uid=177841, cgraph_uid=7284, symbol_order=8084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.251300;

  <bb 2> :
  D.251300 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.251300;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6410, decl_uid=178202, cgraph_uid=3382, symbol_order=4163)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_exit_type>::~allocator (_ZNSaI17pthread_exit_typeED2Ev, funcdef_no=7778, decl_uid=177935, cgraph_uid=4410, symbol_order=5202)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeED2Ev, funcdef_no=8712, decl_uid=177864, cgraph_uid=5344, symbol_order=6140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8611, decl_uid=178043, cgraph_uid=5243, symbol_order=6039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.251302;

  <bb 2> :
  D.251302 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251302;

}



;; Function std::vector<pthread_exit_type>::end (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8610, decl_uid=178425, cgraph_uid=5242, symbol_order=6038)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::end (const struct vector * const this)
{
  struct const_iterator D.223749;
  struct const_iterator D.251304;

  <bb 2> :
  _1 = &this->D.178810._M_impl.D.178155._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.223749, _1);
  D.251304 = D.223749;
  D.223749 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251304;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9389, decl_uid=213004, cgraph_uid=6021, symbol_order=6817)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8609, decl_uid=178421, cgraph_uid=5241, symbol_order=6037)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::begin (const struct vector * const this)
{
  struct const_iterator D.223747;
  struct const_iterator D.251307;

  <bb 2> :
  _1 = &this->D.178810._M_impl.D.178155._M_start;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.223747, _1);
  D.251307 = D.223747;
  D.223747 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251307;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8612, decl_uid=213024, cgraph_uid=5244, symbol_order=6040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result, struct allocator & D.223754)
{
  struct pthread_exit_type * D.251312;
  struct pthread_exit_type * D.251310;

  <bb 2> :
  D.251312 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.251310 = D.251312;

  <bb 3> :
<L0>:
  return D.251310;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9391, decl_uid=223756, cgraph_uid=6024, symbol_order=6820)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251315;
  const bool __assignable;
  struct pthread_exit_type * D.251313;

  <bb 2> :
  __assignable = 1;
  D.251315 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.251313 = D.251315;

  <bb 3> :
<L0>:
  return D.251313;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10081, decl_uid=235836, cgraph_uid=6713, symbol_order=7513)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251318;
  struct pthread_exit_type * D.251316;

  <bb 2> :
  D.251318 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.251316 = D.251318;

  <bb 3> :
<L0>:
  return D.251316;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10599, decl_uid=242045, cgraph_uid=7231, symbol_order=8031)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251323;
  struct __normal_iterator D.251321;
  struct __normal_iterator D.251320;
  struct pthread_exit_type * D.251319;

  <bb 2> :
  D.251320 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.251321 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.251323 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (D.251321, D.251320, __result);
  D.251319 = D.251323;

  <bb 3> :
<L0>:
  return D.251319;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9535, decl_uid=226997, cgraph_uid=6167, symbol_order=6963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.251324;

  <bb 2> :
  D.251324 = __it;

  <bb 3> :
<L0>:
  return D.251324;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10864, decl_uid=245453, cgraph_uid=7496, symbol_order=8298)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251328;
  struct pthread_exit_type * D.251326;

  <bb 2> :
  __result.572_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.572_1);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _4 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.251328 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.251328;
  D.251326 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251326;

}



;; Function std::__niter_base<pthread_exit_type*> (_ZSt12__niter_baseIP17pthread_exit_typeET_S2_, funcdef_no=10178, decl_uid=227263, cgraph_uid=6810, symbol_order=7610)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.251329;

  <bb 2> :
  D.251329 = __it;

  <bb 3> :
<L0>:
  return D.251329;

}



;; Function std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIPK17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10173, decl_uid=237099, cgraph_uid=6805, symbol_order=7605)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  const struct pthread_exit_type * D.251331;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.251331 = *_1;

  <bb 3> :
<L0>:
  return D.251331;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10654, decl_uid=212991, cgraph_uid=7286, symbol_order=8086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_exit_type * const & D.251333;

  <bb 2> :
  D.251333 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251333;

}



;; Function std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10175, decl_uid=237253, cgraph_uid=6807, symbol_order=7607)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251337;
  struct pthread_exit_type * D.251335;

  <bb 2> :
  D.251337 = std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251335 = D.251337;

  <bb 3> :
<L0>:
  return D.251335;

}



;; Function std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10655, decl_uid=242437, cgraph_uid=7287, symbol_order=8087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251338;

  <bb 2> :
  D.251338 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251338;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI17pthread_exit_typeEEPT_PKS4_S7_S5_, funcdef_no=10881, decl_uid=245729, cgraph_uid=7513, symbol_order=8315)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_exit_type * D.251343;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.573_2 = (long unsigned int) _Num;
  _3 = _Num.573_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.574_4 = (long unsigned int) _Num;
  _5 = _Num.574_4 * 16;
  D.251343 = __result + _5;

  <bb 5> :
<L3>:
  return D.251343;

}



;; Function std::__niter_wrap<pthread_exit_type*> (_ZSt12__niter_wrapIP17pthread_exit_typeET_RKS2_S2_, funcdef_no=10180, decl_uid=237296, cgraph_uid=6812, symbol_order=7612)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_wrap<pthread_exit_type*> (struct pthread_exit_type * const & D.242459, struct pthread_exit_type * __res)
{
  struct pthread_exit_type * D.251345;

  <bb 2> :
  D.251345 = __res;

  <bb 3> :
<L0>:
  return D.251345;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7781, decl_uid=178265, cgraph_uid=4413, symbol_order=5205)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.178155._M_end_of_storage;
  _2 = this->_M_impl.D.178155._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.178155._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8714, decl_uid=178162, cgraph_uid=5346, symbol_order=6142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_exit_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE10deallocateERS1_PS0_m, funcdef_no=9529, decl_uid=177967, cgraph_uid=6161, symbol_order=6957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (struct allocator_type & __a, struct pthread_exit_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE10deallocateEPS1_m, funcdef_no=10171, decl_uid=177818, cgraph_uid=6803, symbol_order=7603)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (struct new_allocator * const this, struct pthread_exit_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_exit_type>::operator[] (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEixEm, funcdef_no=7724, decl_uid=178463, cgraph_uid=4356, symbol_order=5148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_exit_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251353;

  <bb 2> :
  _1 = this->D.178810._M_impl.D.178155._M_start;
  _2 = __n * 16;
  D.251353 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251353;

}



;; Function std::vector<pthread_exit_type>::size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE4sizeEv, funcdef_no=7723, decl_uid=178443, cgraph_uid=4355, symbol_order=5147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::size (const struct vector * const this)
{
  size_type D.251355;

  <bb 2> :
  _1 = this->D.178810._M_impl.D.178155._M_finish;
  _2 = this->D.178810._M_impl.D.178155._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.251355 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251355;

}



;; Function std::vector<tree_node*>::operator[] (_ZNSt6vectorIP9tree_nodeSaIS1_EEixEm, funcdef_no=7727, decl_uid=184602, cgraph_uid=4359, symbol_order=5151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * & std::vector<tree_node*>::operator[] (struct vector * const this, size_type __n)
{
  union tree_node * & D.251357;

  <bb 2> :
  _1 = this->D.184949._M_impl.D.184305._M_start;
  _2 = __n * 8;
  D.251357 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251357;

}



;; Function std::vector<tree_node*>::size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE4sizeEv, funcdef_no=7726, decl_uid=184582, cgraph_uid=4358, symbol_order=5150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::size (const struct vector * const this)
{
  size_type D.251359;

  <bb 2> :
  _1 = this->D.184949._M_impl.D.184305._M_finish;
  _2 = this->D.184949._M_impl.D.184305._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.251359 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251359;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2Ev, funcdef_no=6360, decl_uid=190049, cgraph_uid=3335, symbol_order=4116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  this->return_type_num = 0;
  this->pthread_type_num = -1;
  _1 = &this->return_type_array;
  std::vector<return_type>::vector (_1);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2Ev, funcdef_no=6227, decl_uid=174602, cgraph_uid=3203, symbol_order=3965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174610;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2Ev, funcdef_no=6225, decl_uid=174060, cgraph_uid=3200, symbol_order=3962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7600, decl_uid=173952, cgraph_uid=4232, symbol_order=5024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this);
  _1 = &this->D.173955;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2Ev, funcdef_no=8419, decl_uid=173730, cgraph_uid=5051, symbol_order=5847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2Ev, funcdef_no=9214, decl_uid=173659, cgraph_uid=5846, symbol_order=6642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::operator= (_ZNSt6vectorI11return_typeSaIS0_EEaSERKS2_, funcdef_no=7728, decl_uid=174188, cgraph_uid=4362, symbol_order=5154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<return_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.251394;
  struct return_type * __tmp;
  const size_type __xlen;
  struct vector & D.251392;
  struct __normal_iterator D.251389;
  struct __normal_iterator D.251388;
  struct __normal_iterator D.251387;
  struct __normal_iterator D.251386;
  struct __normal_iterator D.251385;
  bool retval.579;
  struct __normal_iterator D.251380;
  struct __normal_iterator D.251379;
  bool retval.578;
  bool iftmp.577;
  bool retval.576;
  bool retval.575;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.575 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ();
  if (retval.575 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.174610;
  _4 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.174610;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.577 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.577 = 0;

  <bb 8> :
  retval.576 = iftmp.577;
  if (retval.576 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<return_type>::clear (this);
  _8 = &this->D.174610;
  _9 = this->D.174610._M_impl.D.173955._M_end_of_storage;
  _10 = this->D.174610._M_impl.D.173955._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 40;
  _13 = (long unsigned int) _12;
  _14 = this->D.174610._M_impl.D.173955._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_8, _14, _13);
  this->D.174610._M_impl.D.173955._M_start = 0B;
  this->D.174610._M_impl.D.173955._M_finish = 0B;
  this->D.174610._M_impl.D.173955._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.174610;
  _16 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.174610;
  _18 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<return_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<return_type>::size (__x);
  _19 = std::vector<return_type>::capacity (this);
  retval.578 = __xlen > _19;
  if (retval.578 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.251379 = std::vector<return_type>::end (__x);
  D.251380 = std::vector<return_type>::begin (__x);
  D.251394 = std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (this, __xlen, D.251380, D.251379);
  __tmp = D.251394;
  _20 = &this->D.174610;
  _21 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.174610._M_impl.D.173955._M_finish;
  _23 = this->D.174610._M_impl.D.173955._M_start;
  std::_Destroy<return_type*, return_type> (_23, _22, _21);
  _24 = &this->D.174610;
  _25 = this->D.174610._M_impl.D.173955._M_end_of_storage;
  _26 = this->D.174610._M_impl.D.173955._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 40;
  _29 = (long unsigned int) _28;
  _30 = this->D.174610._M_impl.D.173955._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_24, _30, _29);
  this->D.174610._M_impl.D.173955._M_start = __tmp;
  _31 = this->D.174610._M_impl.D.173955._M_start;
  _32 = __xlen * 40;
  _33 = _31 + _32;
  this->D.174610._M_impl.D.173955._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<return_type>::size (this);
  retval.579 = __xlen <= _34;
  if (retval.579 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.174610;
  _36 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_35);
  D.251385 = std::vector<return_type>::end (this);
  D.251386 = std::vector<return_type>::begin (this);
  D.251387 = std::vector<return_type>::end (__x);
  D.251388 = std::vector<return_type>::begin (__x);
  D.251389 = std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.251388, D.251387, D.251386);
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (D.251389, D.251385, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.174610._M_impl.D.173955._M_start;
  _38 = __x->D.174610._M_impl.D.173955._M_start;
  _39 = std::vector<return_type>::size (this);
  _40 = _39 * 40;
  _41 = _38 + _40;
  _42 = __x->D.174610._M_impl.D.173955._M_start;
  std::copy<return_type*, return_type*> (_42, _41, _37);
  _43 = &this->D.174610;
  _44 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.174610._M_impl.D.173955._M_finish;
  _46 = __x->D.174610._M_impl.D.173955._M_finish;
  _47 = __x->D.174610._M_impl.D.173955._M_start;
  _48 = std::vector<return_type>::size (this);
  _49 = _48 * 40;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.174610._M_impl.D.173955._M_start;
  _52 = __xlen * 40;
  _53 = _51 + _52;
  this->D.174610._M_impl.D.173955._M_finish = _53;

  <bb 17> :
  D.251392 = this;

  <bb 18> :
<L19>:
  return D.251392;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7729, decl_uid=173822, cgraph_uid=4360, symbol_order=5152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ()
{
  bool D.251395;

  <bb 2> :
  D.251395 = 0;

  <bb 3> :
<L0>:
  return D.251395;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E15_S_always_equalEv, funcdef_no=7730, decl_uid=173825, cgraph_uid=4361, symbol_order=5153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ()
{
  bool D.251397;

  <bb 2> :
  D.251397 = 1;

  <bb 3> :
<L0>:
  return D.251397;

}



;; Function std::operator!= (_ZStneRKSaI11return_typeES2_, funcdef_no=8614, decl_uid=173708, cgraph_uid=5246, symbol_order=6042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.223780, const struct allocator & D.223781)
{
  bool D.251399;

  <bb 2> :
  D.251399 = 0;

  <bb 3> :
<L0>:
  return D.251399;

}



;; Function std::vector<return_type>::clear (_ZNSt6vectorI11return_typeSaIS0_EE5clearEv, funcdef_no=8615, decl_uid=174340, cgraph_uid=5247, symbol_order=6043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.174610._M_impl.D.173955._M_start;
  std::vector<return_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<return_type>::_M_erase_at_end (_ZNSt6vectorI11return_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9394, decl_uid=174468, cgraph_uid=6026, symbol_order=6822)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<return_type>::_M_erase_at_end (struct vector * const this, struct return_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.174610._M_impl.D.173955._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 40;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.174610;
  _5 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.174610._M_impl.D.173955._M_finish;
  std::_Destroy<return_type*, return_type> (__pos, _6, _5);
  this->D.174610._M_impl.D.173955._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<return_type> > (_ZSt15__alloc_on_copyISaI11return_typeEEvRT_RKS2_, funcdef_no=8616, decl_uid=213085, cgraph_uid=5248, symbol_order=6044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<return_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::capacity (_ZNKSt6vectorI11return_typeSaIS0_EE8capacityEv, funcdef_no=8617, decl_uid=174256, cgraph_uid=5249, symbol_order=6045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::capacity (const struct vector * const this)
{
  size_type D.251404;

  <bb 2> :
  _1 = this->D.174610._M_impl.D.173955._M_end_of_storage;
  _2 = this->D.174610._M_impl.D.173955._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.251404 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251404;

}



;; Function std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZNSt6vectorI11return_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8618, decl_uid=213092, cgraph_uid=5250, symbol_order=6046)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct return_type * std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct return_type * D.251408;
  struct return_type * __result;
  struct return_type * D.251406;

  <bb 2> :
  _1 = &this->D.174610;
  D.251408 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_1, __n);
  __result = D.251408;
  _2 = &this->D.174610;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (__first, __last, __result, _3);

  <bb 3> :
  D.251406 = __result;

  <bb 4> :
<L0>:
  return D.251406;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.174610;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<return_type>::end (_ZNSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8621, decl_uid=174223, cgraph_uid=5253, symbol_order=6049)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::end (struct vector * const this)
{
  struct iterator D.223867;
  struct iterator D.251412;

  <bb 2> :
  _1 = &this->D.174610._M_impl.D.173955._M_finish;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.223867, _1);
  D.251412 = D.223867;
  D.223867 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251412;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9397, decl_uid=213174, cgraph_uid=6029, symbol_order=6825)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8619, decl_uid=174219, cgraph_uid=5251, symbol_order=6047)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::begin (struct vector * const this)
{
  struct iterator D.223821;
  struct iterator D.251415;

  <bb 2> :
  _1 = &this->D.174610._M_impl.D.173955._M_start;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.223821, _1);
  D.251415 = D.223821;
  D.223821 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251415;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8620, decl_uid=213193, cgraph_uid=5252, symbol_order=6048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.251420;
  struct __normal_iterator D.251419;
  struct __normal_iterator D.251418;

  <bb 2> :
  D.251419 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__last);
  D.251420 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__first);
  D.251418 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.251420, D.251419, __result);

  <bb 3> :
<L0>:
  return D.251418;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9399, decl_uid=223833, cgraph_uid=6031, symbol_order=6827)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.251422;

  <bb 2> :
  D.251422 = __it;

  <bb 3> :
<L0>:
  return D.251422;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9400, decl_uid=223839, cgraph_uid=6033, symbol_order=6829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct return_type * D.251426;
  struct __normal_iterator D.251424;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__result);
  _2 = std::__niter_base<const return_type*, std::vector<return_type> > (__last);
  _3 = std::__niter_base<const return_type*, std::vector<return_type> > (__first);
  D.251426 = std::__copy_move_a1<false, const return_type*, return_type*> (_3, _2, _1);
  _4 = D.251426;
  D.251424 = std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.251424;

}



;; Function std::__niter_base<return_type*, std::vector<return_type> > (_ZSt12__niter_baseIP11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10085, decl_uid=236040, cgraph_uid=6717, symbol_order=7517)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  struct return_type * D.251427;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__it);
  D.251427 = *_1;

  <bb 3> :
<L0>:
  return D.251427;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9425, decl_uid=213161, cgraph_uid=6057, symbol_order=6853)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * const & __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  struct return_type * const & D.251429;

  <bb 2> :
  D.251429 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251429;

}



;; Function std::__niter_base<const return_type*, std::vector<return_type> > (_ZSt12__niter_baseIPK11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10084, decl_uid=235889, cgraph_uid=6716, symbol_order=7516)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * std::__niter_base<const return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  const struct return_type * D.251431;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (&__it);
  D.251431 = *_1;

  <bb 3> :
<L0>:
  return D.251431;

}



;; Function std::__copy_move_a1<false, const return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10086, decl_uid=236043, cgraph_uid=6718, symbol_order=7518)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251435;
  struct return_type * D.251433;

  <bb 2> :
  D.251435 = std::__copy_move_a2<false, const return_type*, return_type*> (__first, __last, __result);
  D.251433 = D.251435;

  <bb 3> :
<L0>:
  return D.251433;

}



;; Function std::__copy_move_a2<false, const return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10603, decl_uid=242065, cgraph_uid=7235, symbol_order=8035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251436;

  <bb 2> :
  D.251436 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251436;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11return_typeEEPT_PKS4_S7_S5_, funcdef_no=10865, decl_uid=245481, cgraph_uid=7497, symbol_order=8299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct return_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  const ptrdiff_t _Num;
  struct return_type * D.251441;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 40;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.580_2 = (long unsigned int) _Num;
  _3 = _Num.580_2 * 40;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.581_4 = (long unsigned int) _Num;
  _5 = _Num.581_4 * 40;
  D.251441 = __result + _5;

  <bb 5> :
<L3>:
  return D.251441;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10087, decl_uid=236047, cgraph_uid=6719, symbol_order=7519)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __from, struct return_type * __res)
{
  struct __normal_iterator D.251443;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 40;
  D.251443 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.251443;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10604, decl_uid=213152, cgraph_uid=7236, symbol_order=8036)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct return_type * const D.245487;
  struct __normal_iterator D.245488;
  struct __normal_iterator D.251445;

  <bb 2> :
  _1 = this->_M_current;
  __n.582_2 = (long unsigned int) __n;
  _3 = __n.582_2 * 40;
  _4 = _1 + _3;
  D.245487 = _4;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.245488, &D.245487);
  D.251445 = D.245488;
  D.245488 = {CLOBBER};
  D.245487 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.251445;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8622, decl_uid=213199, cgraph_uid=5254, symbol_order=6050)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.223870)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9402, decl_uid=223872, cgraph_uid=6034, symbol_order=6830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10088, decl_uid=236071, cgraph_uid=6720, symbol_order=7520)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator D.242074, struct __normal_iterator D.242075)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<return_type*, return_type*> (_ZSt4copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=8623, decl_uid=213207, cgraph_uid=5255, symbol_order=6051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251451;
  struct return_type * D.251449;

  <bb 2> :
  _1 = std::__miter_base<return_type*> (__last);
  _2 = std::__miter_base<return_type*> (__first);
  D.251451 = std::__copy_move_a<false, return_type*, return_type*> (_2, _1, __result);
  D.251449 = D.251451;

  <bb 3> :
<L0>:
  return D.251449;

}



;; Function std::__miter_base<return_type*> (_ZSt12__miter_baseIP11return_typeET_S2_, funcdef_no=9403, decl_uid=223888, cgraph_uid=6035, symbol_order=6831)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__miter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.251452;

  <bb 2> :
  D.251452 = __it;

  <bb 3> :
<L0>:
  return D.251452;

}



;; Function std::__copy_move_a<false, return_type*, return_type*> (_ZSt13__copy_move_aILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=9404, decl_uid=223890, cgraph_uid=6036, symbol_order=6832)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251456;
  struct return_type * D.251454;

  <bb 2> :
  __result.583_1 = __result;
  _2 = std::__niter_base<return_type*> (__result.583_1);
  _3 = std::__niter_base<return_type*> (__last);
  _4 = std::__niter_base<return_type*> (__first);
  D.251456 = std::__copy_move_a1<false, return_type*, return_type*> (_4, _3, _2);
  _5 = D.251456;
  D.251454 = std::__niter_wrap<return_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251454;

}



;; Function std::__niter_base<return_type*> (_ZSt12__niter_baseIP11return_typeET_S2_, funcdef_no=10089, decl_uid=224505, cgraph_uid=6721, symbol_order=7521)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.251457;

  <bb 2> :
  D.251457 = __it;

  <bb 3> :
<L0>:
  return D.251457;

}



;; Function std::__copy_move_a1<false, return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10090, decl_uid=236082, cgraph_uid=6722, symbol_order=7522)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251461;
  struct return_type * D.251459;

  <bb 2> :
  D.251461 = std::__copy_move_a2<false, return_type*, return_type*> (__first, __last, __result);
  D.251459 = D.251461;

  <bb 3> :
<L0>:
  return D.251459;

}



;; Function std::__copy_move_a2<false, return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10605, decl_uid=242083, cgraph_uid=7237, symbol_order=8037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251462;

  <bb 2> :
  D.251462 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251462;

}



;; Function std::__niter_wrap<return_type*> (_ZSt12__niter_wrapIP11return_typeET_RKS2_S2_, funcdef_no=10091, decl_uid=236086, cgraph_uid=6723, symbol_order=7523)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_wrap<return_type*> (struct return_type * const & D.242087, struct return_type * __res)
{
  struct return_type * D.251464;

  <bb 2> :
  D.251464 = __res;

  <bb 3> :
<L0>:
  return D.251464;

}



;; Function std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_ZSt22__uninitialized_copy_aIP11return_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8624, decl_uid=213211, cgraph_uid=5256, symbol_order=6052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<return_type*, return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & D.223897)
{
  struct return_type * D.251468;
  struct return_type * D.251466;

  <bb 2> :
  D.251468 = std::uninitialized_copy<return_type*, return_type*> (__first, __last, __result);
  D.251466 = D.251468;

  <bb 3> :
<L0>:
  return D.251466;

}



;; Function std::uninitialized_copy<return_type*, return_type*> (_ZSt18uninitialized_copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=9405, decl_uid=223899, cgraph_uid=6037, symbol_order=6833)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251471;
  const bool __assignable;
  struct return_type * D.251469;

  <bb 2> :
  __assignable = 1;
  D.251471 = std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (__first, __last, __result);
  D.251469 = D.251471;

  <bb 3> :
<L0>:
  return D.251469;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11return_typeS3_EET0_T_S5_S4_, funcdef_no=10092, decl_uid=236120, cgraph_uid=6724, symbol_order=7524)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.251472;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, return_type&> (_1, __first);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.251472 = __cur;

  <bb 6> :
<L3>:
  return D.251472;

}



;; Function std::_Construct<return_type, return_type&> (_ZSt10_ConstructI11return_typeJRS0_EEvPT_DpOT0_, funcdef_no=10606, decl_uid=242095, cgraph_uid=7238, symbol_order=8038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, return_type&> (struct return_type * __p, struct return_type & __args#0)
{
  void * D.245507;
  void * D.245506;
  const struct return_type * D.245508;

  <bb 2> :
  D.245508 = std::forward<return_type&> (__args#0);
  D.245506 = __p;
  D.245507 = operator new (40, D.245506);
  MEM[(struct return_type *)D.245507] = *D.245508;
  return;

}



;; Function std::forward<return_type&> (_ZSt7forwardIR11return_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10866, decl_uid=245504, cgraph_uid=7498, symbol_order=8300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type&> (struct type & __t)
{
  struct return_type & D.251474;

  <bb 2> :
  D.251474 = __t;

  <bb 3> :
<L0>:
  return D.251474;

}



;; Function function_return_array::operator= (_ZN21function_return_arrayaSERKS_, funcdef_no=6362, decl_uid=194345, cgraph_uid=3337, symbol_order=4118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_return_array & function_return_array::operator= (struct function_return_array * const this, const struct function_return_array & D.194346)
{
  struct function_return_array & D.251476;

  <bb 2> :
  _1 = D.194346->return_type_num;
  this->return_type_num = _1;
  _2 = D.194346->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &D.194346->return_type_array;
  _4 = &this->return_type_array;
  std::vector<return_type>::operator= (_4, _3);
  D.251476 = this;

  <bb 3> :
<L0>:
  return D.251476;

}



;; Function std::vector<tree_node*>::push_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE9push_backERKS1_, funcdef_no=7731, decl_uid=184629, cgraph_uid=4364, symbol_order=5156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<tree_node*>::push_back (struct vector * const this, union tree_node * const & __x)
{
  struct __normal_iterator D.251481;

  <bb 2> :
  _1 = this->D.184949._M_impl.D.184305._M_finish;
  _2 = this->D.184949._M_impl.D.184305._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.184949._M_impl.D.184305._M_finish;
  _4 = &this->D.184949._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_4, _3, __x);
  _5 = this->D.184949._M_impl.D.184305._M_finish;
  _6 = _5 + 8;
  this->D.184949._M_impl.D.184305._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251481 = std::vector<tree_node*>::end (this);
  std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (this, D.251481, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_ZNSt16allocator_traitsISaIP9tree_nodeEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8625, decl_uid=213223, cgraph_uid=5257, symbol_order=6053)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (struct allocator_type & __a, union tree_node * * __p, union tree_node * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<tree_node* const&> (_ZSt7forwardIRKP9tree_nodeEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9406, decl_uid=223914, cgraph_uid=6038, symbol_order=6834)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * const & std::forward<tree_node* const&> (union tree_node * const & __t)
{
  union tree_node * const & D.251482;

  <bb 2> :
  D.251482 = __t;

  <bb 3> :
<L0>:
  return D.251482;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9407, decl_uid=223916, cgraph_uid=6039, symbol_order=6835)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (struct new_allocator * const this, union tree_node * * __p, union tree_node * const & __args#0)
{
  void * D.236132;
  void * D.236131;
  union tree_node * D.236133;

  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  D.236133 = *_1;
  D.236131 = __p;
  D.236132 = operator new (8, D.236131);
  MEM[(union tree_node * *)D.236132] = D.236133;
  return;

}



;; Function std::vector<tree_node*>::end (_ZNSt6vectorIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8626, decl_uid=184562, cgraph_uid=5258, symbol_order=6054)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::end (struct vector * const this)
{
  struct iterator D.223939;
  struct iterator D.251484;

  <bb 2> :
  _1 = &this->D.184949._M_impl.D.184305._M_finish;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.223939, _1);
  D.251484 = D.223939;
  D.223939 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251484;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9409, decl_uid=213460, cgraph_uid=6041, symbol_order=6837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (struct __normal_iterator * const this, union tree_node * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (_ZNSt6vectorIP9tree_nodeSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8627, decl_uid=213479, cgraph_uid=5262, symbol_order=6058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (struct vector * const this, struct iterator __position, union tree_node * const & __args#0)
{
  union tree_node * * D.251491;
  const size_type D.251490;
  union tree_node * * __new_finish;
  union tree_node * * __new_start;
  const size_type __elems_before;
  union tree_node * * __old_finish;
  union tree_node * * __old_start;
  const size_type __len;
  struct iterator D.223947;

  <bb 2> :
  D.251490 = std::vector<tree_node*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251490;
  __old_start = this->D.184949._M_impl.D.184305._M_start;
  __old_finish = this->D.184949._M_impl.D.184305._M_finish;
  D.223947 = std::vector<tree_node*>::begin (this);
  _1 = __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (&__position, &D.223947);
  __elems_before = (const size_type) _1;
  D.223947 = {CLOBBER};
  _2 = &this->D.184949;
  D.251491 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_2, __len);
  __new_start = D.251491;
  __new_finish = __new_start;
  _3 = std::forward<tree_node* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.184949._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.184949;
  _8 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<tree_node*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.184949;
  _12 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<tree_node*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.184949;
  _23 = this->D.184949._M_impl.D.184305._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_22, __old_start, _26);
  this->D.184949._M_impl.D.184305._M_start = __new_start;
  this->D.184949._M_impl.D.184305._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.184949._M_impl.D.184305._M_end_of_storage = _28;
  return;

}



;; Function std::vector<tree_node*>::_M_check_len (_ZNKSt6vectorIP9tree_nodeSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9411, decl_uid=184798, cgraph_uid=6043, symbol_order=6839)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<tree_node*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.586;
  size_type D.251495;
  const long unsigned int D.236142;
  bool retval.584;

  <bb 2> :
  _1 = std::vector<tree_node*>::max_size (this);
  _2 = std::vector<tree_node*>::size (this);
  _3 = _1 - _2;
  __n.585_4 = __n;
  retval.584 = _3 < __n.585_4;
  if (retval.584 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<tree_node*>::size (this);
  _6 = std::vector<tree_node*>::size (this);
  D.236142 = _6;
  _7 = std::max<long unsigned int> (&D.236142, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236142 = {CLOBBER};
  _9 = std::vector<tree_node*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<tree_node*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.586 = std::vector<tree_node*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.586 = __len;

  <bb 8> :
  D.251495 = iftmp.586;

  <bb 9> :
<L6>:
  return D.251495;

}



;; Function std::vector<tree_node*>::max_size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE8max_sizeEv, funcdef_no=10093, decl_uid=184584, cgraph_uid=6725, symbol_order=7525)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::max_size (const struct vector * const this)
{
  size_type D.251502;

  <bb 2> :
  _1 = &this->D.184949;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.251502 = std::vector<tree_node*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251502;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10608, decl_uid=184195, cgraph_uid=7240, symbol_order=8040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.251504;

  <bb 2> :
  D.251504 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251504;

}



;; Function std::vector<tree_node*>::_S_max_size (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10607, decl_uid=184805, cgraph_uid=7239, symbol_order=8039)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251506;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<tree_node*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251506 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251506;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::max_size (_ZNSt16allocator_traitsISaIP9tree_nodeEE8max_sizeERKS2_, funcdef_no=10867, decl_uid=180134, cgraph_uid=7499, symbol_order=8301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<tree_node*> >::max_size (const struct allocator_type & __a)
{
  size_type D.251509;

  <bb 2> :
  D.251509 = __gnu_cxx::new_allocator<tree_node*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251509;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE8max_sizeEv, funcdef_no=10979, decl_uid=179976, cgraph_uid=7611, symbol_order=8413)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::max_size (const struct new_allocator * const this)
{
  size_type D.251511;

  <bb 2> :
  D.251511 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251511;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE11_M_max_sizeEv, funcdef_no=10610, decl_uid=179995, cgraph_uid=7241, symbol_order=8041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.251513;

  <bb 2> :
  D.251513 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.251513;

}



;; Function std::vector<tree_node*>::begin (_ZNSt6vectorIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=9412, decl_uid=184558, cgraph_uid=6044, symbol_order=6840)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::begin (struct vector * const this)
{
  struct iterator D.236144;
  struct iterator D.251515;

  <bb 2> :
  _1 = &this->D.184949._M_impl.D.184305._M_start;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.236144, _1);
  D.251515 = D.236144;
  D.236144 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251515;

}



;; Function __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (_ZN9__gnu_cxxmiIPP9tree_nodeSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9413, decl_uid=223948, cgraph_uid=6045, symbol_order=6841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251518;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251518 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.251518;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE11_M_allocateEm, funcdef_no=9414, decl_uid=184309, cgraph_uid=6046, symbol_order=6842)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * * std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  union tree_node * * D.251526;
  union tree_node * * iftmp.587;
  union tree_node * * D.251520;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.251526 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_1, __n);
  iftmp.587 = D.251526;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.587 = 0B;

  <bb 5> :
  D.251520 = iftmp.587;

  <bb 6> :
<L3>:
  return D.251520;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::allocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE8allocateERS2_m, funcdef_no=10094, decl_uid=180114, cgraph_uid=6726, symbol_order=7526)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * std::allocator_traits<std::allocator<tree_node*> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * D.251529;
  union tree_node * * D.251527;

  <bb 2> :
  D.251529 = __gnu_cxx::new_allocator<tree_node*>::allocate (__a, __n, 0B);
  D.251527 = D.251529;

  <bb 3> :
<L0>:
  return D.251527;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::allocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE8allocateEmPKv, funcdef_no=10609, decl_uid=179968, cgraph_uid=7242, symbol_order=8042)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * __gnu_cxx::new_allocator<tree_node*>::allocate (struct new_allocator * const this, size_type __n, const void * D.245515)
{
  union tree_node * * D.251540;
  union tree_node * * D.251539;
  align_val_t __al;
  union tree_node * * D.251537;
  bool retval.588;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.588 = _4 != 0;
  if (retval.588 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.251540 = operator new (_6);
  D.251537 = D.251540;

  <bb 7> :
<L6>:
  return D.251537;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9417, decl_uid=184193, cgraph_uid=6049, symbol_order=6845)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.251541;

  <bb 2> :
  D.251541 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251541;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9416, decl_uid=213447, cgraph_uid=6048, symbol_order=6844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * const & __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (const struct __normal_iterator * const this)
{
  union tree_node * * const & D.251543;

  <bb 2> :
  D.251543 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251543;

}



;; Function std::vector<tree_node*>::_S_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9415, decl_uid=184457, cgraph_uid=6047, symbol_order=6843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251546;
  union tree_node * * D.251545;

  <bb 2> :
  D.251545 = std::vector<tree_node*>::_S_do_relocate (__first, __last, __result, __alloc, D.251546);

  <bb 3> :
<L0>:
  return D.251545;

}



;; Function std::vector<tree_node*>::_S_do_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10095, decl_uid=184445, cgraph_uid=6727, symbol_order=7527)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_do_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242110)
{
  union tree_node * * D.251548;

  <bb 2> :
  D.251548 = std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251548;

}



;; Function std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (_ZSt12__relocate_aIPP9tree_nodeS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10611, decl_uid=224113, cgraph_uid=7243, symbol_order=8043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & __alloc)
{
  union tree_node * * D.251550;

  <bb 2> :
  _1 = std::__niter_base<tree_node**> (__result);
  _2 = std::__niter_base<tree_node**> (__last);
  _3 = std::__niter_base<tree_node**> (__first);
  D.251550 = std::__relocate_a_1<tree_node*, tree_node*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251550;

}



;; Function std::__niter_base<tree_node**> (_ZSt12__niter_baseIPP9tree_nodeET_S3_, funcdef_no=10868, decl_uid=224119, cgraph_uid=7500, symbol_order=8302)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__niter_base<tree_node**> (union tree_node * * __it)
{
  union tree_node * * D.251552;

  <bb 2> :
  D.251552 = __it;

  <bb 3> :
<L0>:
  return D.251552;

}



;; Function std::__relocate_a_1<tree_node*, tree_node*> (_ZSt14__relocate_a_1IP9tree_nodeS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10869, decl_uid=224287, cgraph_uid=7501, symbol_order=8303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * * std::__relocate_a_1<tree_node*, tree_node*> (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & D.246696)
{
  ptrdiff_t __count;
  union tree_node * * D.251557;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.589_2 = (long unsigned int) __count;
  _3 = __count.589_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.590_4 = (long unsigned int) __count;
  _5 = __count.590_4 * 8;
  D.251557 = __result + _5;

  <bb 5> :
<L3>:
  return D.251557;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8397, decl_uid=184312, cgraph_uid=5029, symbol_order=5825)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (struct _Vector_base * const this, union tree_node * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::deallocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE10deallocateERS2_PS1_m, funcdef_no=9204, decl_uid=180121, cgraph_uid=5836, symbol_order=6632)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::deallocate (struct allocator_type & __a, union tree_node * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE10deallocateEPS2_m, funcdef_no=9941, decl_uid=179972, cgraph_uid=6573, symbol_order=7373)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::deallocate (struct new_allocator * const this, union tree_node * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<function_path>::operator[] (_ZNSt6vectorI13function_pathSaIS0_EEixEm, funcdef_no=7725, decl_uid=175312, cgraph_uid=4357, symbol_order=5149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<function_path>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251565;

  <bb 2> :
  _1 = this->D.175659._M_impl.D.175004._M_start;
  _2 = __n * 24;
  D.251565 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251565;

}



;; Function std::vector<tree_node*>::pop_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE8pop_backEv, funcdef_no=7733, decl_uid=184639, cgraph_uid=4365, symbol_order=5157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.184949._M_impl.D.184305._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.184949._M_impl.D.184305._M_finish = _2;
  _3 = this->D.184949._M_impl.D.184305._M_finish;
  _4 = &this->D.184949._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_ZNSt16allocator_traitsISaIP9tree_nodeEE7destroyIS1_EEvRS2_PT_, funcdef_no=8631, decl_uid=213484, cgraph_uid=5263, symbol_order=6059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (struct allocator_type & __a, union tree_node * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE7destroyIS2_EEvPT_, funcdef_no=9419, decl_uid=224306, cgraph_uid=6051, symbol_order=6847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (struct new_allocator * const this, union tree_node * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::size (_ZNKSt6vectorI13function_pathSaIS0_EE4sizeEv, funcdef_no=7689, decl_uid=175292, cgraph_uid=4321, symbol_order=5113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::size (const struct vector * const this)
{
  size_type D.251567;

  <bb 2> :
  _1 = this->D.175659._M_impl.D.175004._M_finish;
  _2 = this->D.175659._M_impl.D.175004._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.251567 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251567;

}



;; Function std::vector<free_type>::~vector (_ZNSt6vectorI9free_typeSaIS0_EED2Ev, funcdef_no=7695, decl_uid=173540, cgraph_uid=4327, symbol_order=5119)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173543;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.173543._M_impl.D.172888._M_finish;
  _4 = this->D.173543._M_impl.D.172888._M_start;
  std::_Destroy<free_type*, free_type> (_4, _3, _2);
  _5 = &this->D.173543;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<free_type*, free_type> (_ZSt8_DestroyIP9free_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8575, decl_uid=212718, cgraph_uid=5207, symbol_order=6003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct allocator & D.223576)
{
  <bb 2> :
  std::_Destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<free_type*> (_ZSt8_DestroyIP9free_typeEvT_S2_, funcdef_no=9361, decl_uid=223578, cgraph_uid=5993, symbol_order=6789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*> (struct free_type * __first, struct free_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<free_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP9free_typeEEvT_S4_, funcdef_no=10054, decl_uid=235458, cgraph_uid=6686, symbol_order=7486)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<free_type*> (struct free_type * D.241942, struct free_type * D.241943)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_free_array::~function_free_array (_ZN19function_free_arrayD2Ev, funcdef_no=6342, decl_uid=192913, cgraph_uid=3317, symbol_order=4098)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::~function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_detched_type>::~vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7712, decl_uid=177762, cgraph_uid=4344, symbol_order=5136)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177765;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.177765._M_impl.D.177110._M_finish;
  _4 = this->D.177765._M_impl.D.177110._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_4, _3, _2);
  _5 = &this->D.177765;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_detched_type*, pthread_detched_type> (_ZSt8_DestroyIP20pthread_detched_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8600, decl_uid=212901, cgraph_uid=5232, symbol_order=6028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct allocator & D.223700)
{
  <bb 2> :
  std::_Destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_detched_type*> (_ZSt8_DestroyIP20pthread_detched_typeEvT_S2_, funcdef_no=9380, decl_uid=223702, cgraph_uid=6012, symbol_order=6808)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP20pthread_detched_typeEEvT_S4_, funcdef_no=10074, decl_uid=235698, cgraph_uid=6706, symbol_order=7506)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (struct pthread_detched_type * D.242015, struct pthread_detched_type * D.242016)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_detched_array::~function_pthread_detched_array (_ZN30function_pthread_detched_arrayD2Ev, funcdef_no=6351, decl_uid=193785, cgraph_uid=3326, symbol_order=4107)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::~function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_exit_type>::~vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7721, decl_uid=178807, cgraph_uid=4353, symbol_order=5145)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178810;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.178810._M_impl.D.178155._M_finish;
  _4 = this->D.178810._M_impl.D.178155._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_4, _3, _2);
  _5 = &this->D.178810;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_exit_type*, pthread_exit_type> (_ZSt8_DestroyIP17pthread_exit_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8613, decl_uid=213041, cgraph_uid=5245, symbol_order=6041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct allocator & D.223775)
{
  <bb 2> :
  std::_Destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_exit_type*> (_ZSt8_DestroyIP17pthread_exit_typeEvT_S2_, funcdef_no=9393, decl_uid=223777, cgraph_uid=6025, symbol_order=6821)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP17pthread_exit_typeEEvT_S4_, funcdef_no=10082, decl_uid=235867, cgraph_uid=6714, symbol_order=7514)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (struct pthread_exit_type * D.242051, struct pthread_exit_type * D.242052)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_exit_array::~function_pthread_exit_array (_ZN27function_pthread_exit_arrayD2Ev, funcdef_no=6357, decl_uid=194261, cgraph_uid=3332, symbol_order=4113)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::~function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::~vector (_ZNSt6vectorI13function_pathSaIS0_EED2Ev, funcdef_no=7687, decl_uid=175656, cgraph_uid=4319, symbol_order=5111)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175659;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  _3 = this->D.175659._M_impl.D.175004._M_finish;
  _4 = this->D.175659._M_impl.D.175004._M_start;
  std::_Destroy<function_path*, function_path> (_4, _3, _2);
  _5 = &this->D.175659;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<function_path*, function_path> (_ZSt8_DestroyIP13function_pathS0_EvT_S2_RSaIT0_E, funcdef_no=8562, decl_uid=212580, cgraph_uid=5194, symbol_order=5990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct allocator & D.223501)
{
  <bb 2> :
  std::_Destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy<function_path*> (_ZSt8_DestroyIP13function_pathEvT_S2_, funcdef_no=9348, decl_uid=223503, cgraph_uid=5980, symbol_order=6776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*> (struct function_path * __first, struct function_path * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<function_path*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP13function_pathEEvT_S4_, funcdef_no=10046, decl_uid=235289, cgraph_uid=6678, symbol_order=7478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<function_path*> (struct function_path * D.241887, struct function_path * D.241888)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_path_array::~function_path_array (_ZN19function_path_arrayD2Ev, funcdef_no=6336, decl_uid=192431, cgraph_uid=3311, symbol_order=4092)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::~function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  _1 = &this->function_path_array;
  std::vector<function_path>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function tracefree_fucntion (_Z18tracefree_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6363, decl_uid=187107, cgraph_uid=3339, symbol_order=4120)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
void tracefree_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.251574;
  const char * D.251573;
  struct function * D.251572;
  struct cgraph_node * D.251571;
  availability avail;
  int fucntion_level;
  struct cgraph_edge * e;

  <bb 2> :
  symtab.591_1 = symtab;
  D.251571 = symbol_table::first_defined_function (symtab.591_1);
  node = D.251571;
  goto <bb 7>; [INV]

  <bb 3> :
  fucntion_level = 0;
  D.251572 = cgraph_node::get_fun (node);
  _2 = D.251572;
  push_cfun (_2);
  cfun.592_3 = cfun;
  _4 = cfun.592_3->decl;
  D.251573 = get_name (_4);
  _5 = D.251573;
  stderr.593_6 = stderr;
  fprintf2 (stderr.593_6, "=======node_fun:%s=========\n", _5);
  cfun.594_7 = cfun;
  if (cfun.594_7 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  stderr.595_8 = stderr;
  fprintf2 (stderr.595_8, "fucntion collect path \n");
  cfun.596_9 = cfun;
  _10 = &cfun.596_9->decl;
  std::vector<tree_node*>::push_back (&pathStack, _10);
  cfun.597_11 = cfun;
  _12 = cfun.597_11->decl;
  walk_function_path (_12, fucntion_level, ptable, user_tmp);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 6> :
  symtab.598_13 = symtab;
  D.251574 = symbol_table::next_defined_function (symtab.598_13, node);
  node = D.251574;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  stderr.599_14 = stderr;
  fprintf2 (stderr.599_14, "fucntion collect path finsh\n");
  return;

}



;; Function walk_function_path (_Z18walk_function_pathP9tree_nodeiP3ptbP12gimple_array, funcdef_no=6364, decl_uid=187103, cgraph_uid=3343, symbol_order=4124)

Merging blocks 4 and 65
Removing basic block 18
Removing basic block 19
Removing basic block 37
Removing basic block 52
Removing basic block 62
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
;;
;; Loop 1
;;  header 55, latch 54
;;  depth 1, outer 0
;;  nodes: 55 54 26 53 52 29 51 50 38 49 39 48 45 44 40 43 41 42 47 46 37 34 36 35 33 32 31 30 28 27 23 25 21 24 22 20 19
;;
;; Loop 3
;;  header 50, latch 49
;;  depth 2, outer 1
;;  nodes: 50 49 39 48 45 44 40 43 41 42 47 46
;;
;; Loop 4
;;  header 44, latch 43
;;  depth 3, outer 3
;;  nodes: 44 43 41 42
;;
;; Loop 2
;;  header 25, latch 24
;;  depth 2, outer 1
;;  nodes: 25 24 22
;; 2 succs { 71 3 }
;; 3 succs { 4 5 }
;; 4 succs { 60 }
;; 5 succs { 71 6 }
;; 6 succs { 71 7 }
;; 7 succs { 70 8 }
;; 8 succs { 67 9 }
;; 9 succs { 67 10 }
;; 10 succs { 67 11 }
;; 11 succs { 12 18 }
;; 12 succs { 67 13 }
;; 13 succs { 67 14 }
;; 14 succs { 67 15 }
;; 15 succs { 67 16 }
;; 16 succs { 17 18 }
;; 17 succs { 67 18 }
;; 18 succs { 55 }
;; 19 succs { 67 20 }
;; 20 succs { 67 21 }
;; 21 succs { 25 }
;; 22 succs { 23 24 }
;; 23 succs { 26 }
;; 24 succs { 25 }
;; 25 succs { 22 26 }
;; 26 succs { 27 54 }
;; 27 succs { 67 28 }
;; 28 succs { 67 29 }
;; 29 succs { 30 52 }
;; 30 succs { 66 31 }
;; 31 succs { 66 32 }
;; 32 succs { 63 33 }
;; 33 succs { 34 35 }
;; 34 succs { 63 37 }
;; 35 succs { 63 36 }
;; 36 succs { 63 37 }
;; 37 succs { 63 38 }
;; 38 succs { 50 }
;; 39 succs { 40 49 }
;; 40 succs { 44 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 44 }
;; 44 succs { 41 45 }
;; 45 succs { 46 49 }
;; 46 succs { 61 47 }
;; 47 succs { 61 48 }
;; 48 succs { 49 }
;; 49 succs { 50 }
;; 50 succs { 39 51 }
;; 51 succs { 52 }
;; 52 succs { 67 53 }
;; 53 succs { 54 }
;; 54 succs { 55 }
;; 55 succs { 19 56 }
;; 56 succs { 57 58 }
;; 57 succs { 67 59 }
;; 58 succs { 67 59 }
;; 59 succs { 60 }
;; 60 succs { 1 }
;; 61 succs { 62 }
;; 62 succs { 63 }
;; 63 succs { 64 }
;; 64 succs { 65 }
;; 65 succs { 66 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { }
void walk_function_path (union tree_node * function_tree, int fucntion_level, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct function_return_array * D.251627;
  struct function_return_array * D.251626;
  struct function_return_array * D.251625;
  struct function_return_array * D.251624;
  const char * D.251623;
  struct function_return_array * D.251622;
  struct function_return_array * D.251621;
  const char * D.251620;
  struct function_path_array * D.251619;
  struct function_path_array * D.251618;
  struct return_type ret_type;
  int k2;
  int find_diff;
  int k;
  struct vector funcalleeRetTypearray;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  struct function_return_array calleeFunArray;
  int o;
  int i;
  int find_thread;
  int find;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.629;
  bool retval.628;
  bool retval.623;
  bool retval.622;
  bool retval.620;
  bool retval.617;
  bool retval.614;
  bool retval.613;
  bool retval.612;
  bool retval.605;
  bool retval.600;

  <bb 2> :
  function_path_collect.601_1 = function_path_collect;
  D.251618 = hash_map<tree_node*, function_path_array>::get (function_path_collect.601_1, &function_tree);

  <bb 3> :
  _2 = D.251618;
  retval.600 = _2 == 0B;
  if (retval.600 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  goto <bb 60>; [INV]

  <bb 5> :
  function_path_collect.602_3 = function_path_collect;
  D.251619 = hash_map<tree_node*, function_path_array>::get (function_path_collect.602_3, &function_tree);

  <bb 6> :
  _4 = D.251619;
  function_path_array::function_path_array (&fun_array, _4);

  <bb 7> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 8> :
  function_return_array::function_return_array (&callerFunArray);
  std::vector<return_type>::vector (&callerRetTypearray);
  _5 = std::vector<function_path>::size (&function_path_array);
  function_tree.603_6 = function_tree;
  D.251620 = get_name (function_tree.603_6);

  <bb 9> :
  _7 = D.251620;
  stderr.604_8 = stderr;
  fprintf2 (stderr.604_8, "\x1b[40;44m =======print_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _7, _5, fucntion_level);

  <bb 10> :
  function_return_collect.606_9 = function_return_collect;
  D.251621 = hash_map<tree_node*, function_return_array>::get (function_return_collect.606_9, &function_tree);

  <bb 11> :
  _10 = D.251621;
  retval.605 = _10 != 0B;
  if (retval.605 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 12> :
  function_return_collect.607_11 = function_return_collect;
  D.251622 = hash_map<tree_node*, function_return_array>::get (function_return_collect.607_11, &function_tree);

  <bb 13> :
  _12 = D.251622;
  function_return_array::operator= (&callerFunArray, _12);

  <bb 14> :
  std::vector<return_type>::operator= (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 15> :
  _13 = callerFunArray.return_type_num;
  stderr.608_14 = stderr;
  fprintf2 (stderr.608_14, "\x1b[40;44m =======print_function_type %d  ========  \x1b[0m\n", _13);

  <bb 16> :
  _15 = callerFunArray.pthread_type_num;
  _16 = (unsigned int) _15;
  FUNCITON_THREAD.609_17 = FUNCITON_THREAD;
  if (_16 == FUNCITON_THREAD.609_17)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  stderr.610_18 = stderr;
  fprintf2 (stderr.610_18, "\x1b[40;44m =======print_pthread_type_is thread_fucntion  ========  \x1b[0m\n");

  <bb 18> :
  fucntion_level = fucntion_level + 1;
  find = 0;
  find_thread = 0;
  i = 0;
  goto <bb 55>; [INV]

  <bb 19> :
  find = 0;
  _19 = (long unsigned int) i;
  _20 = std::vector<function_path>::operator[] (&function_path_array, _19);
  _21 = _20->next;
  D.251623 = get_name (_21);

  <bb 20> :
  _22 = D.251623;
  stderr.611_23 = stderr;
  fprintf2 (stderr.611_23, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _22);

  <bb 21> :
  o = 0;
  goto <bb 25>; [INV]

  <bb 22> :
  _24 = (long unsigned int) o;
  _25 = std::vector<tree_node*>::operator[] (&pathStack, _24);
  _26 = *_25;
  _27 = (long unsigned int) i;
  _28 = std::vector<function_path>::operator[] (&function_path_array, _27);
  _29 = _28->next;
  retval.612 = _26 == _29;
  if (retval.612 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  find = 1;
  goto <bb 26>; [INV]

  <bb 24> :
  o = o + 1;

  <bb 25> :
  _30 = (long unsigned int) o;
  _31 = std::vector<tree_node*>::size (&pathStack);
  retval.613 = _30 < _31;
  if (retval.613 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  if (find == 0)
    goto <bb 27>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 27> :
  _32 = (long unsigned int) i;
  _33 = std::vector<function_path>::operator[] (&function_path_array, _32);
  _34 = &_33->next;
  std::vector<tree_node*>::push_back (&pathStack, _34);

  <bb 28> :
  function_return_collect.615_35 = function_return_collect;
  _36 = (long unsigned int) i;
  _37 = std::vector<function_path>::operator[] (&function_path_array, _36);
  _38 = &_37->next;
  D.251624 = hash_map<tree_node*, function_return_array>::get (function_return_collect.615_35, _38);

  <bb 29> :
  _39 = D.251624;
  retval.614 = _39 != 0B;
  if (retval.614 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 30> :
  function_return_collect.616_40 = function_return_collect;
  _41 = (long unsigned int) i;
  _42 = std::vector<function_path>::operator[] (&function_path_array, _41);
  _43 = &_42->next;
  D.251625 = hash_map<tree_node*, function_return_array>::get (function_return_collect.616_40, _43);

  <bb 31> :
  _44 = D.251625;
  function_return_array::function_return_array (&calleeFunArray, _44);

  <bb 32> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _45 = (long unsigned int) i;
  _46 = std::vector<function_path>::operator[] (&function_path_array, _45);
  _47 = _46->next;
  getFucntionDecl = _47;
  function_return_collect.618_48 = function_return_collect;
  D.251626 = hash_map<tree_node*, function_return_array>::get (function_return_collect.618_48, &getFucntionDecl);

  <bb 33> :
  _49 = D.251626;
  retval.617 = _49 == 0B;
  if (retval.617 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 37>; [INV]

  <bb 35> :
  function_return_collect.619_50 = function_return_collect;
  D.251627 = hash_map<tree_node*, function_return_array>::get (function_return_collect.619_50, &getFucntionDecl);

  <bb 36> :
  _51 = D.251627;
  function_return_array::operator= (&find_fun_array, _51);

  <bb 37> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 38> :
  k = 0;
  goto <bb 50>; [INV]

  <bb 39> :
  _52 = (long unsigned int) k;
  _53 = std::vector<return_type>::operator[] (&callerRetTypearray, _52);
  _54 = _53->return_type_stmt_num;
  _55 = (unsigned int) _54;
  FUNCITON_THREAD.621_56 = FUNCITON_THREAD;
  retval.620 = _55 == FUNCITON_THREAD.621_56;
  if (retval.620 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 40> :
  find_diff = 0;
  k2 = 0;
  goto <bb 44>; [INV]

  <bb 41> :
  _57 = (long unsigned int) k;
  _58 = std::vector<return_type>::operator[] (&callerRetTypearray, _57);
  _59 = _58->return_tree;
  _60 = (long unsigned int) k2;
  _61 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _60);
  _62 = _61->return_tree;
  retval.622 = _59 == _62;
  if (retval.622 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  find_diff = 1;

  <bb 43> :
  k2 = k2 + 1;

  <bb 44> :
  _63 = (long unsigned int) k2;
  _64 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.623 = _63 < _64;
  if (retval.623 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 45> :
  if (find_diff == 0)
    goto <bb 46>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 46> :
  return_type::return_type (&ret_type);
  _65 = (long unsigned int) k;
  _66 = std::vector<return_type>::operator[] (&callerRetTypearray, _65);
  _67 = _66->stmt;
  ret_type.stmt = _67;
  _68 = (long unsigned int) k;
  _69 = std::vector<return_type>::operator[] (&callerRetTypearray, _68);
  _70 = _69->return_tree;
  ret_type.return_tree = _70;
  FUNCITON_THREAD.624_71 = FUNCITON_THREAD;
  FUNCITON_THREAD.625_72 = (int) FUNCITON_THREAD.624_71;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.625_72;
  std::vector<return_type>::push_back (&find_fun_array.return_type_array, &ret_type);

  <bb 47> :
  function_return_collect.626_73 = function_return_collect;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.626_73, &getFucntionDecl, &find_fun_array);

  <bb 48> :
  FUNCITON_THREAD.627_74 = FUNCITON_THREAD;
  find_thread = (int) FUNCITON_THREAD.627_74;
  ret_type = {CLOBBER};

  <bb 49> :
  k = k + 1;

  <bb 50> :
  _75 = (long unsigned int) k;
  _76 = std::vector<return_type>::size (&callerRetTypearray);
  retval.628 = _75 < _76;
  if (retval.628 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 51> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  function_return_array::~function_return_array (&calleeFunArray);
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 52> :
  _77 = (long unsigned int) i;
  _78 = std::vector<function_path>::operator[] (&function_path_array, _77);
  _79 = _78->next;
  walk_function_path (_79, fucntion_level, ptable, user_tmp);

  <bb 53> :
  std::vector<tree_node*>::pop_back (&pathStack);

  <bb 54> :
  i = i + 1;

  <bb 55> :
  _80 = (long unsigned int) i;
  _81 = std::vector<function_path>::size (&function_path_array);
  retval.629 = _80 < _81;
  if (retval.629 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  find_thread.630_82 = (unsigned int) find_thread;
  FUNCITON_THREAD.631_83 = FUNCITON_THREAD;
  if (find_thread.630_82 == FUNCITON_THREAD.631_83)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  FUNCITON_THREAD.632_84 = FUNCITON_THREAD;
  FUNCITON_THREAD.633_85 = (int) FUNCITON_THREAD.632_84;
  function_tree.634_86 = function_tree;
  checkPointerConstraint (function_tree.634_86, ptable, user_tmp, 0B, FUNCITON_THREAD.633_85);
  goto <bb 59>; [INV]

  <bb 58> :
  function_tree.635_87 = function_tree;
  checkPointerConstraint (function_tree.635_87, ptable, user_tmp, 0B, 0);

  <bb 59> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 60> :
<L45>:
  return;

  <bb 61> :
<L46>:
  ret_type = {CLOBBER};
  resx 11

  <bb 62> :
<L47>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 10

  <bb 63> :
<L48>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 9

  <bb 64> :
<L49>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 8

  <bb 65> :
<L50>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 7

  <bb 66> :
<L51>:
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 6

  <bb 67> :
<L52>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 5

  <bb 68> :
<L53>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 4

  <bb 69> :
<L54>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 70> :
<L55>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 71> :
<L56>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 1

}



;; Function return_type::return_type (_ZN11return_typeC2Ev, funcdef_no=6366, decl_uid=194431, cgraph_uid=3341, symbol_order=4122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void return_type::return_type (struct return_type * const this)
{
  <bb 2> :
  this->return_type_stmt_num = 0;
  return;

}



;; Function std::vector<return_type>::push_back (_ZNSt6vectorI11return_typeSaIS0_EE9push_backERKS0_, funcdef_no=7734, decl_uid=174290, cgraph_uid=4367, symbol_order=5159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<return_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.251644;

  <bb 2> :
  _1 = this->D.174610._M_impl.D.173955._M_finish;
  _2 = this->D.174610._M_impl.D.173955._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.174610._M_impl.D.173955._M_finish;
  _4 = &this->D.174610._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_4, _3, __x);
  _5 = this->D.174610._M_impl.D.173955._M_finish;
  _6 = _5 + 40;
  this->D.174610._M_impl.D.173955._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251644 = std::vector<return_type>::end (this);
  std::vector<return_type>::_M_realloc_insert<const return_type&> (this, D.251644, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8632, decl_uid=213620, cgraph_uid=5264, symbol_order=6060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (struct allocator_type & __a, struct return_type * __p, const struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const return_type&> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9421, decl_uid=224322, cgraph_uid=6053, symbol_order=6849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (struct new_allocator * const this, struct return_type * __p, const struct return_type & __args#0)
{
  void * D.236177;
  void * D.236176;
  const struct return_type * D.236178;

  <bb 2> :
  D.236178 = std::forward<const return_type&> (__args#0);
  D.236176 = __p;
  D.236177 = operator new (40, D.236176);
  MEM[(struct return_type *)D.236177] = *D.236178;
  return;

}



;; Function std::vector<return_type>::_M_realloc_insert<const return_type&> (_ZNSt6vectorI11return_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8633, decl_uid=213789, cgraph_uid=5268, symbol_order=6064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::_M_realloc_insert<const return_type&> (struct vector * const this, struct iterator __position, const struct return_type & __args#0)
{
  struct return_type * D.251649;
  const size_type D.251648;
  struct return_type * __new_finish;
  struct return_type * __new_start;
  const size_type __elems_before;
  struct return_type * __old_finish;
  struct return_type * __old_start;
  const size_type __len;
  struct iterator D.224333;

  <bb 2> :
  D.251648 = std::vector<return_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251648;
  __old_start = this->D.174610._M_impl.D.173955._M_start;
  __old_finish = this->D.174610._M_impl.D.173955._M_finish;
  D.224333 = std::vector<return_type>::begin (this);
  _1 = __gnu_cxx::operator-<return_type*, std::vector<return_type> > (&__position, &D.224333);
  __elems_before = (const size_type) _1;
  D.224333 = {CLOBBER};
  _2 = &this->D.174610;
  D.251649 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_2, __len);
  __new_start = D.251649;
  __new_finish = __new_start;
  _3 = std::forward<const return_type&> (__args#0);
  _4 = __elems_before * 40;
  _5 = __new_start + _4;
  _6 = &this->D.174610._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.174610;
  _8 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<return_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 40;
  _11 = &this->D.174610;
  _12 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<return_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.174610;
  _23 = this->D.174610._M_impl.D.173955._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 40;
  _26 = (long unsigned int) _25;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.174610._M_impl.D.173955._M_start = __new_start;
  this->D.174610._M_impl.D.173955._M_finish = __new_finish;
  _27 = __len * 40;
  _28 = __new_start + _27;
  this->D.174610._M_impl.D.173955._M_end_of_storage = _28;
  return;

}



;; Function std::vector<return_type>::_M_check_len (_ZNKSt6vectorI11return_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9422, decl_uid=174459, cgraph_uid=6054, symbol_order=6850)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<return_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.638;
  size_type D.251653;
  const long unsigned int D.236183;
  bool retval.636;

  <bb 2> :
  _1 = std::vector<return_type>::max_size (this);
  _2 = std::vector<return_type>::size (this);
  _3 = _1 - _2;
  __n.637_4 = __n;
  retval.636 = _3 < __n.637_4;
  if (retval.636 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<return_type>::size (this);
  _6 = std::vector<return_type>::size (this);
  D.236183 = _6;
  _7 = std::max<long unsigned int> (&D.236183, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236183 = {CLOBBER};
  _9 = std::vector<return_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<return_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.638 = std::vector<return_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.638 = __len;

  <bb 8> :
  D.251653 = iftmp.638;

  <bb 9> :
<L6>:
  return D.251653;

}



;; Function std::vector<return_type>::max_size (_ZNKSt6vectorI11return_typeSaIS0_EE8max_sizeEv, funcdef_no=10097, decl_uid=174245, cgraph_uid=6729, symbol_order=7529)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::max_size (const struct vector * const this)
{
  size_type D.251660;

  <bb 2> :
  _1 = &this->D.174610;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  D.251660 = std::vector<return_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251660;

}



;; Function std::vector<return_type>::_S_max_size (_ZNSt6vectorI11return_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10613, decl_uid=174466, cgraph_uid=7245, symbol_order=8045)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251662;

  <bb 2> :
  __diffmax = 230584300921369395;
  _1 = std::allocator_traits<std::allocator<return_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251662 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251662;

}



;; Function std::allocator_traits<std::allocator<return_type> >::max_size (_ZNSt16allocator_traitsISaI11return_typeEE8max_sizeERKS1_, funcdef_no=10870, decl_uid=173780, cgraph_uid=7502, symbol_order=8304)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<return_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251665;

  <bb 2> :
  D.251665 = __gnu_cxx::new_allocator<return_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251665;

}



;; Function __gnu_cxx::new_allocator<return_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE8max_sizeEv, funcdef_no=10980, decl_uid=173622, cgraph_uid=7612, symbol_order=8414)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251667;

  <bb 2> :
  D.251667 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251667;

}



;; Function __gnu_cxx::operator-<return_type*, std::vector<return_type> > (_ZN9__gnu_cxxmiIP11return_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9423, decl_uid=224334, cgraph_uid=6055, symbol_order=6851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251669;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251669 = _5 /[ex] 40;

  <bb 3> :
<L0>:
  return D.251669;

}



;; Function std::vector<return_type>::_S_relocate (_ZNSt6vectorI11return_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9424, decl_uid=174117, cgraph_uid=6056, symbol_order=6852)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251672;
  struct return_type * D.251671;

  <bb 2> :
  D.251671 = std::vector<return_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251672);

  <bb 3> :
<L0>:
  return D.251671;

}



;; Function std::vector<return_type>::_S_do_relocate (_ZNSt6vectorI11return_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10098, decl_uid=174105, cgraph_uid=6730, symbol_order=7530)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_do_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242136)
{
  struct return_type * D.251674;

  <bb 2> :
  D.251674 = std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251674;

}



;; Function std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (_ZSt12__relocate_aIP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10614, decl_uid=224499, cgraph_uid=7246, symbol_order=8046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * D.251676;

  <bb 2> :
  _1 = std::__niter_base<return_type*> (__result);
  _2 = std::__niter_base<return_type*> (__last);
  _3 = std::__niter_base<return_type*> (__first);
  D.251676 = std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251676;

}



;; Function std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_ZSt14__relocate_a_1IP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10871, decl_uid=224650, cgraph_uid=7503, symbol_order=8305)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * __cur;
  struct return_type * D.251678;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__first);
  _2 = std::__addressof<return_type> (__cur);
  std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_2, _1, __alloc);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.251678 = __cur;

  <bb 6> :
<L3>:
  return D.251678;

}



;; Function std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_ZSt19__relocate_object_aI11return_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10981, decl_uid=224679, cgraph_uid=7613, symbol_order=8415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (struct return_type * restrict __dest, struct return_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<return_type&> (__orig);
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (__alloc, __dest, _1);
  _2 = std::__addressof<return_type> (__orig);
  std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (__alloc, _2);
  return;

}



;; Function std::move<return_type&> (_ZSt4moveIR11return_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11030, decl_uid=224691, cgraph_uid=7662, symbol_order=8464)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<return_type&> (struct return_type & __t)
{
  struct type & D.251680;

  <bb 2> :
  D.251680 = __t;

  <bb 3> :
<L0>:
  return D.251680;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11031, decl_uid=224693, cgraph_uid=7663, symbol_order=8465)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (struct allocator_type & __a, struct return_type * __p, struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<return_type> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (__a, __p, _1);
  return;

}



;; Function std::forward<return_type> (_ZSt7forwardI11return_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11052, decl_uid=247548, cgraph_uid=7684, symbol_order=8486)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type> (struct type & __t)
{
  struct return_type & D.251682;

  <bb 2> :
  D.251682 = __t;

  <bb 3> :
<L0>:
  return D.251682;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11053, decl_uid=247550, cgraph_uid=7685, symbol_order=8487)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (struct new_allocator * const this, struct return_type * __p, struct return_type & __args#0)
{
  void * D.247989;
  void * D.247988;
  struct return_type * D.247990;

  <bb 2> :
  D.247990 = std::forward<return_type> (__args#0);
  D.247988 = __p;
  D.247989 = operator new (40, D.247988);
  MEM[(struct return_type *)D.247989] = *D.247990;
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (_ZNSt16allocator_traitsISaI11return_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9426, decl_uid=224708, cgraph_uid=6058, symbol_order=6854)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (struct allocator_type & __a, struct return_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::destroy<return_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::destroy<return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE7destroyIS1_EEvPT_, funcdef_no=10099, decl_uid=236198, cgraph_uid=6731, symbol_order=7531)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::destroy<return_type> (struct new_allocator * const this, struct return_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::put (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7736, decl_uid=189715, cgraph_uid=4368, symbol_order=5160)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_return_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_return_array & v)
{
  bool D.251691;
  struct hash_entry * D.251690;
  unsigned int D.251689;
  bool ins;
  struct hash_entry * e;
  bool D.251687;
  void * D.213799;
  void * D.213798;

  <bb 2> :
  _1 = &this->m_table;
  D.251689 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.251689;
  D.251690 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.251690;
  D.251691 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (e);
  ins = D.251691;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213798 = &e->m_value;
  D.213799 = operator new (32, D.213798);
  function_return_array::function_return_array (D.213799, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_return_array::operator= (_4, v);

  <bb 5> :
  D.251687 = ~ins;

  <bb 6> :
<L3>:
  return D.251687;

  <bb 7> :
<L4>:
  operator delete (D.213799, D.213798);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8637, decl_uid=189873, cgraph_uid=5269, symbol_order=6065)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251742;
  bool D.251741;
  bool D.251740;
  bool D.251739;
  bool D.251738;
  bool D.251737;
  struct value_type * D.251736;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.644;
  bool retval.643;
  bool retval.642;
  bool retval.641;
  bool retval.640;
  bool retval.639;
  struct value_type * D.251698;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.251737 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.639 = D.251737;
  if (retval.639 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251738 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.640 = D.251738;
  if (retval.640 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251739 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.641 = D.251739;
  if (retval.641 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.251698 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.251740 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.642 = D.251740;
  if (retval.642 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251741 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.643 = D.251741;
  if (retval.643 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251742 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.644 = D.251742;
  if (retval.644 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.251698 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.251698 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.251698 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.251698 = _37 + _39;

  <bb 27> :
<L37>:
  return D.251698;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9427, decl_uid=189954, cgraph_uid=6071, symbol_order=6867)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251773;
  unsigned int D.251772;
  bool D.251771;
  bool D.251770;
  struct mem_alloc_description & D.251769;
  struct value_type * D.251768;
  unsigned int D.251767;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236221;
  void * D.236220;
  struct hash_entry & D.236258;
  bool iftmp.648;
  bool retval.647;
  bool iftmp.646;
  bool retval.645;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.646 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.646 = 0;

  <bb 6> :
  retval.645 = iftmp.646;
  if (retval.645 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251767 = hash_table_higher_prime_index (_5);
  nindex = D.251767;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251768 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251768;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251770 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251770;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251771 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251771;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.648 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.648 = 0;

  <bb 15> :
  retval.647 = iftmp.648;
  if (retval.647 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251772 = hash_map<tree_node*, function_return_array>::hash_entry::hash (x);
  _16 = D.251772;
  D.251773 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251773;
  D.236258 = std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (x);
  D.236220 = q;
  D.236221 = operator new (40, D.236220);
  hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (D.236221, D.236258);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10100, decl_uid=189849, cgraph_uid=6732, symbol_order=7532)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251774;

  <bb 2> :
  D.251774 = this->m_size;

  <bb 3> :
<L0>:
  return D.251774;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10101, decl_uid=189851, cgraph_uid=6733, symbol_order=7533)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251776;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251776 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251776;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10102, decl_uid=189951, cgraph_uid=6734, symbol_order=7534)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.649;
  bool D.251778;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.649 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.649 = 0;

  <bb 6> :
  D.251778 = iftmp.649;

  <bb 7> :
<L4>:
  return D.251778;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9238, decl_uid=189941, cgraph_uid=5870, symbol_order=6666)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.251800;
  struct value_type * D.251799;
  struct mem_alloc_description & D.251798;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.251796;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.251799 = xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (n);
  nentries = D.251799;
  goto <bb 6>; [INV]

  <bb 5> :
  D.251800 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (n);
  nentries = D.251800;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.251796 = nentries;

  <bb 9> :
<L14>:
  return D.251796;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9971, decl_uid=218249, cgraph_uid=6603, symbol_order=7403)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.251803;
  struct hash_entry * D.251801;

  <bb 2> :
  D.251803 = xcalloc (count, 40);
  D.251801 = D.251803;

  <bb 3> :
<L0>:
  return D.251801;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9972, decl_uid=233962, cgraph_uid=6604, symbol_order=7404)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.251810;
  struct hash_entry * D.251809;
  struct hash_entry * D.251807;
  bool retval.650;

  <bb 2> :
  retval.650 = need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ();
  if (retval.650 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.251809 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.251807 = D.251809;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.251810 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.251807 = D.251810;

  <bb 5> :
<L2>:
  return D.251807;

}



;; Function finalize<hash_map<tree_node*, function_return_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10504, decl_uid=241531, cgraph_uid=7139, symbol_order=7939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_return_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10506, decl_uid=245033, cgraph_uid=7137, symbol_order=7937)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_return_array::~function_return_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10503, decl_uid=241530, cgraph_uid=7135, symbol_order=7935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ()
{
  bool D.251811;

  <bb 2> :
  D.251811 = 1;

  <bb 3> :
<L0>:
  return D.251811;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10104, decl_uid=189774, cgraph_uid=6736, symbol_order=7536)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_return_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251815;
  hashval_t D.251813;

  <bb 2> :
  _1 = &e->m_key;
  D.251815 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_1);
  D.251813 = D.251815;

  <bb 3> :
<L0>:
  return D.251813;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10103, decl_uid=189944, cgraph_uid=6735, symbol_order=7535)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251828;
  bool D.251827;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.652;
  struct value_type * D.251819;
  bool retval.651;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.251827 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.651 = D.251827;
  if (retval.651 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251819 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.251828 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.652 = D.251828;
  if (retval.652 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251819 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251819;

}



;; Function std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10105, decl_uid=236218, cgraph_uid=6737, symbol_order=7537)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251829;

  <bb 2> :
  D.251829 = __t;

  <bb 3> :
<L0>:
  return D.251829;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9438, decl_uid=236243, cgraph_uid=6069, symbol_order=6865)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236245)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236245->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236245->m_value;
  function_return_array::function_return_array (_2, _3);
  return;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2EOS_, funcdef_no=9436, decl_uid=190066, cgraph_uid=6066, symbol_order=6862)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, struct function_return_array & D.190068)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190068->return_type_num;
  this->return_type_num = _1;
  _2 = D.190068->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.190068->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9434, decl_uid=174567, cgraph_uid=6063, symbol_order=6859)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this, struct vector & D.174569)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174610;
  _2 = &D.174569->D.174610;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9432, decl_uid=174035, cgraph_uid=6060, symbol_order=6856)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.174037)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.174037->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10107, decl_uid=173941, cgraph_uid=6739, symbol_order=7539)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  std::allocator<return_type>::allocator (this, _1);
  _2 = &this->D.173955;
  _3 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.173955;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11return_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10615, decl_uid=242166, cgraph_uid=7247, symbol_order=8047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.251831;

  <bb 2> :
  D.251831 = __t;

  <bb 3> :
<L0>:
  return D.251831;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10617, decl_uid=173897, cgraph_uid=7249, symbol_order=8049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8956, decl_uid=218251, cgraph_uid=5588, symbol_order=6384)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9440, decl_uid=189962, cgraph_uid=6072, symbol_order=6868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10109, decl_uid=189786, cgraph_uid=6741, symbol_order=7541)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10619, decl_uid=242181, cgraph_uid=7251, symbol_order=8051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function dump_fucntion (_Z13dump_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6368, decl_uid=187136, cgraph_uid=3344, symbol_order=4125)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 6 8 9 7 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 11 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 5 12 }
;; 12 succs { 1 }
void dump_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.251847;
  struct function * D.251846;
  struct function * D.251845;
  bool D.251844;
  struct cgraph_node * D.251843;
  int fucntion_level;
  struct cgraph_edge * e;
  bool retval.656;
  bool retval.655;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stderr.653_1 = stderr;
  fprintf2 (stderr.653_1, "=======node_fun: =========\n");

  <bb 4> :
  symtab.654_2 = symtab;
  D.251843 = symbol_table::first_defined_function (symtab.654_2);
  node = D.251843;
  goto <bb 11>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.251844 = gimple_has_body_p (_3);
  _4 = D.251844;
  retval.655 = ~_4;
  if (retval.655 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  fucntion_level = 0;
  D.251845 = cgraph_node::get_fun (node);
  _5 = D.251845;
  push_cfun (_5);
  D.251846 = cgraph_node::get_fun (node);
  _6 = D.251846;
  _7 = _6->decl;
  retval.656 = _7 == 0B;
  if (retval.656 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  cfun.657_8 = cfun;
  _9 = &cfun.657_8->decl;
  std::vector<tree_node*>::push_back (&pathStack, _9);
  cfun.658_10 = cfun;
  _11 = cfun.658_10->decl;
  walk_function_path (_11, fucntion_level, ptable, user_tmp);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 10> :
  symtab.659_12 = symtab;
  D.251847 = symbol_table::next_defined_function (symtab.659_12, node);
  node = D.251847;

  <bb 11> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  stderr.660_13 = stderr;
  fprintf2 (stderr.660_13, "fucntion collect path finsh\n");
  return;

}



;; Function collect_function_call (_Z21collect_function_callP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6369, decl_uid=187088, cgraph_uid=3348, symbol_order=4129)

Removing basic block 5
Removing basic block 13
Removing basic block 14
Removing basic block 15
Removing basic block 21
Removing basic block 22
Removing basic block 27
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 63
Removing basic block 83
Removing basic block 86
Removing basic block 104
Removing basic block 106
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
;;
;; Loop 2
;;  header 49, latch 48
;;  depth 1, outer 0
;;  nodes: 49 48 46 47 43 44 45 42
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 13 16 14 15
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 92 }
;; 5 succs { 6 21 }
;; 6 succs { 7 12 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 11 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 18 }
;; 13 succs { 14 17 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 13 19 }
;; 19 succs { 20 21 }
;; 20 succs { 92 }
;; 21 succs { 22 92 }
;; 22 succs { 23 92 }
;; 23 succs { 24 50 }
;; 24 succs { 25 38 }
;; 25 succs { 26 38 }
;; 26 succs { 27 38 }
;; 27 succs { 28 38 }
;; 28 succs { 29 38 }
;; 29 succs { 30 38 }
;; 30 succs { 31 38 }
;; 31 succs { 32 38 }
;; 32 succs { 33 38 }
;; 33 succs { 34 38 }
;; 34 succs { 35 38 }
;; 35 succs { 36 38 }
;; 36 succs { 37 38 }
;; 37 succs { 39 }
;; 38 succs { 39 }
;; 39 succs { 40 50 }
;; 40 succs { 41 50 }
;; 41 succs { 49 }
;; 42 succs { 43 44 }
;; 43 succs { 46 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 }
;; 49 succs { 42 50 }
;; 50 succs { 52 51 }
;; 51 succs { 52 55 }
;; 52 succs { 54 53 }
;; 53 succs { 54 }
;; 54 succs { 91 }
;; 55 succs { 62 56 }
;; 56 succs { 62 57 }
;; 57 succs { 62 58 }
;; 58 succs { 62 59 }
;; 59 succs { 62 60 }
;; 60 succs { 62 61 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 91 }
;; 66 succs { 67 68 }
;; 67 succs { 91 }
;; 68 succs { 69 84 }
;; 69 succs { 93 70 }
;; 70 succs { 93 71 }
;; 71 succs { 72 }
;; 72 succs { 93 73 }
;; 73 succs { 76 74 }
;; 74 succs { 93 75 }
;; 75 succs { 76 }
;; 76 succs { 93 77 }
;; 77 succs { 93 78 }
;; 78 succs { 79 82 }
;; 79 succs { 93 80 }
;; 80 succs { 93 81 }
;; 81 succs { 82 }
;; 82 succs { 93 83 }
;; 83 succs { 91 }
;; 84 succs { 85 87 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 91 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 }
;; 92 succs { 1 }
;; 93 succs { }
void collect_function_call (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  union tree_node * D.252020;
  union tree_node * D.252019;
  union tree_node * D.252018;
  union tree_node * D.252017;
  long int D.252015;
  union tree_node * D.252014;
  union tree_node * D.252013;
  union tree_node * D.252012;
  struct pthread_attr_array * D.252011;
  struct pthread_attr_array * D.252010;
  union tree_node * D.252009;
  union tree_node * D.252008;
  union tree_node * D.252007;
  union tree_node * D.252006;
  const char * D.252005;
  union tree_node * D.252004;
  union tree_node * D.252003;
  union tree_node * D.252002;
  unsigned int D.252001;
  union tree_node * D.252000;
  union tree_node * D.251999;
  union tree_node * D.251998;
  union tree_node * D.251997;
  unsigned int D.251996;
  const char * D.251995;
  union tree_node * D.251994;
  const char * D.251993;
  union tree_node * D.251992;
  union tree_node * D.251991;
  const char * D.251990;
  union tree_node * D.251989;
  const char * D.251988;
  union tree_node * D.251987;
  union tree_node * D.251986;
  struct pthread_attr_array pthread_attr_array;
  union tree_node * getvardecl;
  union tree_node * second;
  int i;
  const char * name2;
  size_t found;
  int i;
  int find;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.703;
  bool iftmp.702;
  bool retval.701;
  bool retval.699;
  bool retval.696;
  bool retval.695;
  bool iftmp.689;
  bool retval.688;
  bool retval.686;
  bool retval.683;
  bool retval.679;
  bool retval.676;
  bool retval.675;
  bool iftmp.674;
  bool retval.673;
  bool retval.672;
  bool retval.671;
  bool retval.670;
  struct expanded_location D.194713;
  bool retval.668;
  struct expanded_location D.194503;
  struct expanded_location D.194501;
  bool retval.667;
  bool retval.665;
  bool retval.662;
  bool retval.661;

  <bb 2> :
  loc = gimple_location_safe (gc);
  retval.661 = is_gimple_call (gc);
  if (retval.661 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  D.251986 = gimple_call_fn (gc);
  _1 = D.251986;
  retval.662 = _1 == 0B;
  if (retval.662 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 92>; [INV]

  <bb 5> :
  vscode_extensionmod.663_2 = vscode_extensionmod;
  if (vscode_extensionmod.663_2 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 6> :
  find = 0;
  vscode_extensionIgonefreemod.664_3 = vscode_extensionIgonefreemod;
  if (vscode_extensionIgonefreemod.664_3 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  retval.665 = is_gimple_call (gc);
  if (retval.665 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  D.251987 = gimple_call_fn (gc);
  _4 = D.251987;
  D.251988 = get_name (_4);
  name = D.251988;
  if (name != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _5 = strcmp (name, "free");
  if (_5 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _6 = strcmp (name, "xfree");
  if (_6 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  find = 1;
  stderr.666_7 = stderr;
  __builtin_fwrite ("set breakpoint free stmt igone\n", 1, 31, stderr.666_7);
  _8 = gimple_location_safe (gc);
  warning_at (_8, 0, "use location");

  <bb 12> :
  i = 0;
  goto <bb 18>; [INV]

  <bb 13> :
  D.194501 = expand_location (loc); [return slot optimization]
  _9 = D.194501.file;
  retval.667 = _9 != 0B;
  D.194501 = {CLOBBER};
  if (retval.667 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  _10 = (long unsigned int) i;
  _11 = std::vector<breakpoint>::operator[] (&vbreakpoint, _10);
  _12 = &_11->name;
  D.194503 = expand_location (loc); [return slot optimization]
  _13 = D.194503.file;
  found = std::__cxx11::basic_string<char>::find (_12, _13, 0);
  D.194503 = {CLOBBER};
  if (found != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = (long unsigned int) i;
  _15 = std::vector<breakpoint>::operator[] (&vbreakpoint, _14);
  _16 = _15->line;
  D.194713 = expand_location (loc); [return slot optimization]
  _17 = D.194713.line;
  retval.668 = _16 == _17;
  D.194713 = {CLOBBER};
  if (retval.668 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  debug_gimple_stmt (gc);
  _18 = (long unsigned int) i;
  _19 = std::vector<breakpoint>::operator[] (&vbreakpoint, _18);
  _20 = _19->line;
  _21 = (long unsigned int) i;
  _22 = std::vector<breakpoint>::operator[] (&vbreakpoint, _21);
  _23 = &_22->name;
  _24 = std::__cxx11::basic_string<char>::c_str (_23);
  stderr.669_25 = stderr;
  fprintf (stderr.669_25, "set breakpoint %s %d\n", _24, _20);
  find = 1;

  <bb 17> :
  i = i + 1;

  <bb 18> :
  _26 = (long unsigned int) i;
  _27 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.670 = _26 < _27;
  if (retval.670 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  if (find == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 92>; [INV]

  <bb 21> :
  retval.671 = is_gimple_call (gc);
  if (retval.671 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 22> :
  D.251989 = gimple_call_fn (gc);
  _28 = D.251989;
  D.251990 = get_name (_28);
  name = D.251990;
  if (name != 0B)
    goto <bb 23>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 23> :
  D.251991 = gimple_call_fndecl (gc);
  _29 = D.251991;
  retval.672 = _29 != 0B;
  if (retval.672 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 24> :
  D.251992 = gimple_call_fndecl (gc);
  _30 = D.251992;
  D.251993 = get_name (_30);
  name2 = D.251993;
  _31 = strcmp (name2, "realloc");
  if (_31 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 25> :
  _32 = strcmp (name2, "malloc");
  if (_32 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 26> :
  D.251994 = gimple_call_fn (gc);
  _33 = D.251994;
  D.251995 = get_name (_33);
  _34 = D.251995;
  _35 = strcmp (_34, "calloc");
  if (_35 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 27> :
  _36 = strcmp (name2, "xcalloc");
  if (_36 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 28> :
  _37 = strcmp (name2, "xmalloc");
  if (_37 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 29> :
  _38 = strcmp (name2, "strdup");
  if (_38 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 30> :
  _39 = strcmp (name2, "xstrdup");
  if (_39 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 31> :
  _40 = strcmp (name2, "free");
  if (_40 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 32> :
  _41 = strcmp (name2, "printf");
  if (_41 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 33> :
  _42 = strcmp (name2, "pthread_attr_setdetachstate");
  if (_42 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 34> :
  _43 = strcmp (name2, "pthread_create");
  if (_43 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 35> :
  _44 = strcmp (name2, "pthread_join");
  if (_44 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 36> :
  _45 = strcmp (name2, "pthread_attr_init");
  if (_45 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  iftmp.674 = 1;
  goto <bb 39>; [INV]

  <bb 38> :
  iftmp.674 = 0;

  <bb 39> :
  retval.673 = iftmp.674;
  if (retval.673 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 40> :
  D.251996 = gimple_call_num_args (gc);
  _46 = D.251996;
  retval.675 = _46 != 0;
  if (retval.675 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 41> :
  i = 0;
  goto <bb 49>; [INV]

  <bb 42> :
  second = 0B;
  i.677_47 = (unsigned int) i;
  D.251997 = gimple_call_arg (gc, i.677_47);
  _48 = D.251997;
  _49 = _48->base.code;
  retval.676 = _49 == 153;
  if (retval.676 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  i.678_50 = (unsigned int) i;
  D.251998 = gimple_call_arg (gc, i.678_50);
  second = D.251998;
  goto <bb 46>; [INV]

  <bb 44> :
  i.680_51 = (unsigned int) i;
  D.251999 = gimple_call_arg (gc, i.680_51);
  _52 = D.251999;
  _53 = _52->base.code;
  retval.679 = _53 == 131;
  if (retval.679 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  i.681_54 = (unsigned int) i;
  D.252000 = gimple_call_arg (gc, i.681_54);
  _55 = D.252000;
  second = _55->exp.operands[0];

  <bb 46> :
  if (second != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 47> :
  ptable.682_56 = ptable;
  set_ptb (bb, ptable.682_56, second, loc, 0, gc, node);

  <bb 48> :
  i = i + 1;

  <bb 49> :
  D.252001 = gimple_call_num_args (gc);
  _57 = D.252001;
  i.684_58 = (unsigned int) i;
  retval.683 = _57 > i.684_58;
  if (retval.683 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 50> :
  _59 = strcmp (name, "free");
  if (_59 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 51> :
  _60 = strcmp (name, "xfree");
  if (_60 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 52> :
  GIMPLE_FREE_COUNT.685_61 = GIMPLE_FREE_COUNT;
  _62 = GIMPLE_FREE_COUNT.685_61 + 1;
  GIMPLE_FREE_COUNT = _62;
  D.252002 = gimple_call_arg (gc, 0);
  _63 = D.252002;
  _64 = _63->base.code;
  retval.686 = _64 == 131;
  if (retval.686 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 53> :
  D.252003 = gimple_call_arg (gc, 0);
  _65 = D.252003;
  ftable.687_66 = ftable;
  set_ptb (bb, ftable.687_66, _65, loc, 0, gc, node);

  <bb 54> :
  goto <bb 91>; [INV]

  <bb 55> :
  _67 = strcmp (name, "realloc");
  if (_67 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  _68 = strcmp (name, "malloc");
  if (_68 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  D.252004 = gimple_call_fn (gc);
  _69 = D.252004;
  D.252005 = get_name (_69);
  _70 = D.252005;
  _71 = strcmp (_70, "calloc");
  if (_71 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 58> :
  _72 = strcmp (name, "xcalloc");
  if (_72 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 59> :
  _73 = strcmp (name, "xmalloc");
  if (_73 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  _74 = strcmp (name, "strdup");
  if (_74 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 61> :
  _75 = strcmp (name, "xstrdup");
  if (_75 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  iftmp.689 = 1;
  goto <bb 64>; [INV]

  <bb 63> :
  iftmp.689 = 0;

  <bb 64> :
  retval.688 = iftmp.689;
  if (retval.688 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  GIMPLE_MALLOC_COUNT.690_76 = GIMPLE_MALLOC_COUNT;
  _77 = GIMPLE_MALLOC_COUNT.690_76 + 1;
  GIMPLE_MALLOC_COUNT = _77;
  D.252006 = gimple_call_lhs (gc);
  _78 = D.252006;
  ptable.691_79 = ptable;
  set_ptb (bb, ptable.691_79, _78, loc, 0, gc, node);
  goto <bb 91>; [INV]

  <bb 66> :
  _80 = strcmp (name, "pthread_create");
  if (_80 == 0)
    goto <bb 67>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 67> :
  IS_PTHREAD_FUCNTION.692_81 = IS_PTHREAD_FUCNTION;
  IS_PTHREAD_FUCNTION.693_82 = (int) IS_PTHREAD_FUCNTION.692_81;
  D.252007 = gimple_call_arg (gc, 0);
  _83 = D.252007;
  ptable.694_84 = ptable;
  set_ptb (bb, ptable.694_84, _83, loc, IS_PTHREAD_FUCNTION.693_82, gc, node);
  goto <bb 91>; [INV]

  <bb 68> :
  _85 = strcmp (name, "pthread_attr_setdetachstate");
  if (_85 == 0)
    goto <bb 69>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 69> :
  D.252008 = gimple_call_arg (gc, 0);

  <bb 70> :
  _86 = D.252008;
  _87 = _86->exp.operands[0];
  getvardecl = _87;
  D.252009 = gimple_call_arg (gc, 1);

  <bb 71> :
  _88 = D.252009;
  _89 = _88->base.code;
  retval.695 = _89 == 26;

  <bb 72> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  pthread_attr_setdetachstates.697_90 = pthread_attr_setdetachstates;
  D.252010 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.697_90, &getvardecl);

  <bb 73> :
  _91 = D.252010;
  retval.696 = _91 == 0B;
  if (retval.696 != 0)
    goto <bb 76>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 74> :
  pthread_attr_setdetachstates.698_92 = pthread_attr_setdetachstates;
  D.252011 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.698_92, &getvardecl);

  <bb 75> :
  _93 = D.252011;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_93];

  <bb 76> :
  pthread_attr_array.stmt = gc;
  D.252012 = gimple_call_arg (gc, 0);

  <bb 77> :
  _94 = D.252012;
  pthread_attr_array.attr_tree = _94;
  D.252013 = gimple_call_arg (gc, 1);

  <bb 78> :
  _95 = D.252013;
  _96 = _95->base.code;
  retval.699 = _96 == 26;
  if (retval.699 != 0)
    goto <bb 79>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 79> :
  D.252014 = gimple_call_arg (gc, 1);

  <bb 80> :
  _97 = D.252014;
  D.252015 = int_cst_value (_97);

  <bb 81> :
  _98 = D.252015;
  _99 = (int) _98;
  pthread_attr_array.attr_type_num = _99;

  <bb 82> :
  pthread_attr_setdetachstates.700_100 = pthread_attr_setdetachstates;
  hash_map<tree_node*, pthread_attr_array>::put (pthread_attr_setdetachstates.700_100, &getvardecl, &pthread_attr_array);

  <bb 83> :
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  goto <bb 91>; [INV]

  <bb 84> :
  D.252017 = gimple_call_lhs (gc);
  _101 = D.252017;
  if (_101 != 0B)
    goto <bb 85>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 85> :
  D.252018 = gimple_call_fn (gc);
  _102 = D.252018;
  if (_102 != 0B)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.702 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.702 = 0;

  <bb 88> :
  retval.701 = iftmp.702;
  if (retval.701 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 89> :
  D.252019 = gimple_call_lhs (gc);
  _103 = D.252019;
  _104 = _103->base.code;
  retval.703 = _104 == 153;
  if (retval.703 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 90> :
  D.252020 = gimple_call_lhs (gc);
  _105 = D.252020;
  ptable.704_106 = ptable;
  set_ptb (bb, ptable.704_106, _105, loc, 0, gc, node);

  <bb 91> :

  <bb 92> :
<L120>:
  return;

  <bb 93> :
<L121>:
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  resx 4

}



;; Function std::vector<breakpoint>::operator[] (_ZNSt6vectorI10breakpointSaIS0_EEixEm, funcdef_no=7738, decl_uid=185940, cgraph_uid=4370, symbol_order=5162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<breakpoint>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.252021;

  <bb 2> :
  _1 = this->D.186287._M_impl.D.185632._M_start;
  _2 = __n * 40;
  D.252021 = _1 + _2;

  <bb 3> :
<L0>:
  return D.252021;

}



;; Function std::vector<breakpoint>::size (_ZNKSt6vectorI10breakpointSaIS0_EE4sizeEv, funcdef_no=7737, decl_uid=185920, cgraph_uid=4369, symbol_order=5161)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::size (const struct vector * const this)
{
  size_type D.252023;

  <bb 2> :
  _1 = this->D.186287._M_impl.D.185632._M_finish;
  _2 = this->D.186287._M_impl.D.185632._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.252023 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.252023;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK6gimple, funcdef_no=2132, decl_uid=92888, cgraph_uid=1269, symbol_order=1429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gimple * gs)
{
  union tree_node * D.252028;
  const struct gcall * D.252027;
  const struct gcall * gc;
  union tree_node * D.252025;

  <bb 2> :
  D.252027 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.252027;
  D.252028 = gimple_call_fndecl (gc);
  D.252025 = D.252028;

  <bb 3> :
<L0>:
  return D.252025;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK5gcall, funcdef_no=2131, decl_uid=92885, cgraph_uid=1268, symbol_order=1428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gcall * gs)
{
  union tree_node * D.252031;
  union tree_node * D.252029;

  <bb 2> :
  _1 = gimple_call_fn (gs);
  D.252031 = gimple_call_addr_fndecl (_1);
  D.252029 = D.252031;

  <bb 3> :
<L0>:
  return D.252029;

}



;; Function gimple_call_addr_fndecl (_ZL23gimple_call_addr_fndeclPK9tree_node, funcdef_no=1909, decl_uid=89977, cgraph_uid=1048, symbol_order=1208)

Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 13 }
;; 3 succs { 4 13 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
union tree_node * gimple_call_addr_fndecl (const union tree_node * fn)
{
  bool D.252051;
  union tree_node * fndecl;
  union tree_node * D.252048;
  bool iftmp.706;
  bool retval.705;

  <bb 2> :
  if (fn != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  _1 = fn->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 4> :
  fndecl = fn->exp.operands[0];
  _2 = fndecl->base.code;
  if (_2 == 165)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _3 = fndecl->exp.operands[0];
  _4 = _3->base.code;
  if (_4 == 131)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _5 = fndecl->exp.operands[1];
  D.252051 = integer_zerop (_5);
  _6 = D.252051;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.706 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.706 = 0;

  <bb 9> :
  retval.705 = iftmp.706;
  if (retval.705 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _7 = fndecl->exp.operands[0];
  fndecl = _7->exp.operands[0];

  <bb 11> :
  _8 = fndecl->base.code;
  if (_8 == 33)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.252048 = fndecl;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 13> :
  D.252048 = 0B;

  <bb 14> :
<L15>:
  return D.252048;

}



;; Function pthread_attr_array::pthread_attr_array (_ZN18pthread_attr_arrayC2Ev, funcdef_no=6371, decl_uid=194723, cgraph_uid=3346, symbol_order=4127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pthread_attr_array::pthread_attr_array (struct pthread_attr_array * const this)
{
  <bb 2> :
  this->attr_type_num = 0;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::get (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7740, decl_uid=194803, cgraph_uid=4372, symbol_order=5164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_attr_array * hash_map<tree_node*, pthread_attr_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.252060;
  struct hash_entry & D.252059;
  unsigned int D.252058;
  struct hash_entry & e;
  struct pthread_attr_array * iftmp.707;
  struct pthread_attr_array * D.252052;

  <bb 2> :
  _1 = &this->m_table;
  D.252058 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.252058;
  D.252059 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.252059;
  D.252060 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  _3 = D.252060;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.707 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.707 = &e->m_value;

  <bb 5> :
  D.252052 = iftmp.707;

  <bb 6> :
<L3>:
  return D.252052;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE4hashERKS2_, funcdef_no=8639, decl_uid=194759, cgraph_uid=5271, symbol_order=6067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (union tree_node * const & h)
{
  hashval_t D.252061;

  <bb 2> :
  D.252061 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.252061;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8640, decl_uid=194943, cgraph_uid=5272, symbol_order=6068)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.252095;
  bool D.252094;
  bool D.252093;
  bool D.252092;
  bool D.252091;
  bool D.252090;
  struct value_type * D.252089;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.711;
  bool retval.710;
  struct value_type & D.252075;
  bool iftmp.709;
  bool retval.708;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.252090 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.252090;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.252091 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.252091;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.252092 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _11 = D.252092;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.709 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.709 = 0;

  <bb 8> :
  retval.708 = iftmp.709;
  if (retval.708 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.252075 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.252093 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.252093;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.252094 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.252094;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.252095 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _23 = D.252095;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.711 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.711 = 0;

  <bb 18> :
  retval.710 = iftmp.711;
  if (retval.710 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.252075 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.252075;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8961, decl_uid=195039, cgraph_uid=5593, symbol_order=6389)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.252098;
  bool D.252096;

  <bb 2> :
  D.252098 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (v);
  D.252096 = D.252098;

  <bb 3> :
<L0>:
  return D.252096;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8643, decl_uid=194872, cgraph_uid=5275, symbol_order=6071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.252101;
  bool D.252099;

  <bb 2> :
  D.252101 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.252099 = D.252101;

  <bb 3> :
<L0>:
  return D.252099;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8962, decl_uid=195037, cgraph_uid=5594, symbol_order=6390)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.252104;
  bool D.252102;

  <bb 2> :
  D.252104 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (v);
  D.252102 = D.252104;

  <bb 3> :
<L0>:
  return D.252102;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9802, decl_uid=194867, cgraph_uid=6434, symbol_order=7230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.252107;
  bool D.252105;

  <bb 2> :
  D.252107 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.252105 = D.252107;

  <bb 3> :
<L0>:
  return D.252105;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10363, decl_uid=239509, cgraph_uid=6995, symbol_order=7795)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.252108;

  <bb 2> :
  _1 = entry->m_key;
  D.252108 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.252108;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9442, decl_uid=194860, cgraph_uid=6074, symbol_order=6870)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.252112;
  bool D.252110;

  <bb 2> :
  _1 = &a->m_key;
  D.252112 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_1, b);
  D.252110 = D.252112;

  <bb 3> :
<L0>:
  return D.252110;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10equal_keysERKS2_S7_, funcdef_no=10112, decl_uid=194761, cgraph_uid=6744, symbol_order=7544)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.252113;

  <bb 2> :
  D.252113 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.252113;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8641, decl_uid=213809, cgraph_uid=5273, symbol_order=6069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.252115;

  <bb 2> :
  _1 = entry->m_key;
  D.252115 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.252115;

}



;; Function hash_map<tree_node*, pthread_attr_array>::put (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7741, decl_uid=194799, cgraph_uid=4373, symbol_order=5165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::put (struct hash_map * const this, union tree_node * const & k, const struct pthread_attr_array & v)
{
  bool D.252124;
  struct hash_entry * D.252123;
  unsigned int D.252122;
  bool ins;
  struct hash_entry * e;
  bool D.252120;
  void * D.213817;
  void * D.213816;

  <bb 2> :
  _1 = &this->m_table;
  D.252122 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.252122;
  D.252123 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.252123;
  D.252124 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (e);
  ins = D.252124;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213816 = &e->m_value;
  D.213817 = operator new (24, D.213816);
  MEM[(struct pthread_attr_array *)D.213817] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.252120 = ~ins;

  <bb 6> :
<L3>:
  return D.252120;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8642, decl_uid=194954, cgraph_uid=5274, symbol_order=6070)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.252174;
  bool D.252173;
  bool D.252172;
  bool D.252171;
  bool D.252170;
  bool D.252169;
  struct value_type * D.252168;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.717;
  bool retval.716;
  bool retval.715;
  bool retval.714;
  bool retval.713;
  bool retval.712;
  struct value_type * D.252130;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.252169 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.712 = D.252169;
  if (retval.712 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.252170 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.713 = D.252170;
  if (retval.713 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.252171 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.714 = D.252171;
  if (retval.714 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.252130 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.252172 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.715 = D.252172;
  if (retval.715 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.252173 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.716 = D.252173;
  if (retval.716 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.252174 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.717 = D.252174;
  if (retval.717 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.252130 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.252130 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.252130 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.252130 = _37 + _39;

  <bb 27> :
<L37>:
  return D.252130;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9443, decl_uid=195035, cgraph_uid=6075, symbol_order=6871)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.252205;
  unsigned int D.252204;
  bool D.252203;
  bool D.252202;
  struct mem_alloc_description & D.252201;
  struct value_type * D.252200;
  unsigned int D.252199;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236298;
  void * D.236297;
  struct hash_entry * D.236323;
  bool iftmp.721;
  bool retval.720;
  bool iftmp.719;
  bool retval.718;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.719 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.719 = 0;

  <bb 6> :
  retval.718 = iftmp.719;
  if (retval.718 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.252199 = hash_table_higher_prime_index (_5);
  nindex = D.252199;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.252200 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.252200;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.252202 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.252202;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.252203 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.252203;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.721 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.721 = 0;

  <bb 15> :
  retval.720 = iftmp.721;
  if (retval.720 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.252204 = hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (x);
  _16 = D.252204;
  D.252205 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.252205;
  D.236323 = std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (x);
  D.236297 = q;
  D.236298 = operator new (32, D.236297);
  MEM[(struct value_type *)D.236298] = *D.236323;

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10113, decl_uid=194930, cgraph_uid=6745, symbol_order=7545)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.252206;

  <bb 2> :
  D.252206 = this->m_size;

  <bb 3> :
<L0>:
  return D.252206;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10114, decl_uid=194932, cgraph_uid=6746, symbol_order=7546)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.252208;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.252208 = _1 - _2;

  <bb 3> :
<L0>:
  return D.252208;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10115, decl_uid=195032, cgraph_uid=6747, symbol_order=7547)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.722;
  bool D.252210;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.722 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.722 = 0;

  <bb 6> :
  D.252210 = iftmp.722;

  <bb 7> :
<L4>:
  return D.252210;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9441, decl_uid=195022, cgraph_uid=6073, symbol_order=6869)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.252232;
  struct value_type * D.252231;
  struct mem_alloc_description & D.252230;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.252228;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.252231 = xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (n);
  nentries = D.252231;
  goto <bb 6>; [INV]

  <bb 5> :
  D.252232 = ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (n);
  nentries = D.252232;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.252228 = nentries;

  <bb 9> :
<L14>:
  return D.252228;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10110, decl_uid=218297, cgraph_uid=6742, symbol_order=7542)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.252235;
  struct hash_entry * D.252233;

  <bb 2> :
  D.252235 = xcalloc (count, 32);
  D.252233 = D.252235;

  <bb 3> :
<L0>:
  return D.252233;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10111, decl_uid=236268, cgraph_uid=6743, symbol_order=7543)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.252242;
  struct hash_entry * D.252241;
  struct hash_entry * D.252239;
  bool retval.723;

  <bb 2> :
  retval.723 = need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ();
  if (retval.723 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.252241 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.252239 = D.252241;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.252242 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.252239 = D.252242;

  <bb 5> :
<L2>:
  return D.252239;

}



;; Function finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10621, decl_uid=242188, cgraph_uid=7253, symbol_order=8053)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10620, decl_uid=242187, cgraph_uid=7252, symbol_order=8052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ()
{
  bool D.252243;

  <bb 2> :
  D.252243 = 0;

  <bb 3> :
<L0>:
  return D.252243;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10117, decl_uid=194858, cgraph_uid=6749, symbol_order=7549)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.252247;
  hashval_t D.252245;

  <bb 2> :
  _1 = &e->m_key;
  D.252247 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_1);
  D.252245 = D.252247;

  <bb 3> :
<L0>:
  return D.252245;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10116, decl_uid=195025, cgraph_uid=6748, symbol_order=7548)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.252260;
  bool D.252259;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.725;
  struct value_type * D.252251;
  bool retval.724;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.252259 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.724 = D.252259;
  if (retval.724 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.252251 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.252260 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.725 = D.252260;
  if (retval.725 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.252251 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.252251;

}



;; Function std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10118, decl_uid=236295, cgraph_uid=6750, symbol_order=7550)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.252261;

  <bb 2> :
  D.252261 = __t;

  <bb 3> :
<L0>:
  return D.252261;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8964, decl_uid=218299, cgraph_uid=5596, symbol_order=6392)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9444, decl_uid=195043, cgraph_uid=6076, symbol_order=6872)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10119, decl_uid=194870, cgraph_uid=6751, symbol_order=7551)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10622, decl_uid=242214, cgraph_uid=7254, symbol_order=8054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function collect_FunctionMapping_Assign (_Z30collect_FunctionMapping_AssignP6gimpleP11cgraph_nodeP15basic_block_defP3ptb, funcdef_no=6373, decl_uid=187093, cgraph_uid=3394, symbol_order=4175)

Removing basic block 14
Removing basic block 28
Removing basic block 48
Removing basic block 59
Removing basic block 60
Removing basic block 81
Removing basic block 97
Removing basic block 111
Removing basic block 129
Removing basic block 135
Removing basic block 136
Removing basic block 144
Removing basic block 157
Removing basic block 183
Removing basic block 203
Removing basic block 214
Removing basic block 216
Removing basic block 228
Removing basic block 233
Removing basic block 237
Removing basic block 238
Merging blocks 242 and 256
Removing basic block 247
Merging blocks 255 and 257
Removing basic block 261
Merging blocks 270 and 596
Removing basic block 283
Removing basic block 291
Removing basic block 303
Removing basic block 311
Removing basic block 316
Removing basic block 330
Removing basic block 346
Removing basic block 356
Removing basic block 361
Removing basic block 377
Removing basic block 397
Removing basic block 408
Removing basic block 409
Removing basic block 410
Removing basic block 412
Removing basic block 418
Removing basic block 427
Removing basic block 432
Removing basic block 453
Removing basic block 464
Removing basic block 465
Removing basic block 466
Removing basic block 467
Removing basic block 472
Removing basic block 492
Removing basic block 503
Removing basic block 504
Removing basic block 505
Removing basic block 506
Removing basic block 507
Removing basic block 508
Removing basic block 509
Removing basic block 515
Removing basic block 523
Removing basic block 525
Removing basic block 538
Removing basic block 549
Removing basic block 550
Removing basic block 551
Removing basic block 552
Removing basic block 557
Removing basic block 565
Removing basic block 571
Removing basic block 579
Removing basic block 586
Merging blocks 595 and 597
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 125, latch 124
;;  depth 1, outer 0
;;  nodes: 125 124 122 123 121 117 120 118 119
;;
;; Loop 2
;;  header 212, latch 211
;;  depth 1, outer 0
;;  nodes: 212 211 205 210 207 206 209 208 204
;;
;; Loop 1
;;  header 179, latch 178
;;  depth 1, outer 0
;;  nodes: 179 178 160 177 176 175 174 173 169 172 171 170 168 167 164 166 165 162 161 163 158 159 157 156 155 154 180
;; 2 succs { 3 237 }
;; 3 succs { 4 5 }
;; 4 succs { 526 }
;; 5 succs { 6 526 }
;; 6 succs { 9 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 59 }
;; 9 succs { 10 22 }
;; 10 succs { 530 11 }
;; 11 succs { 527 12 }
;; 12 succs { 13 14 }
;; 13 succs { 527 17 }
;; 14 succs { 527 15 }
;; 15 succs { 527 16 }
;; 16 succs { 527 17 }
;; 17 succs { 527 18 }
;; 18 succs { 527 19 }
;; 19 succs { 527 20 }
;; 20 succs { 527 21 }
;; 21 succs { 58 }
;; 22 succs { 23 58 }
;; 23 succs { 540 24 }
;; 24 succs { 538 25 }
;; 25 succs { 26 27 }
;; 26 succs { 538 30 }
;; 27 succs { 538 28 }
;; 28 succs { 538 29 }
;; 29 succs { 538 30 }
;; 30 succs { 538 31 }
;; 31 succs { 538 32 }
;; 32 succs { 538 33 }
;; 33 succs { 538 34 }
;; 34 succs { 35 57 }
;; 35 succs { 535 36 }
;; 36 succs { 37 56 }
;; 37 succs { 38 56 }
;; 38 succs { 535 39 }
;; 39 succs { 40 56 }
;; 40 succs { 534 41 }
;; 41 succs { 534 42 }
;; 42 succs { 534 43 }
;; 43 succs { 531 44 }
;; 44 succs { 45 46 }
;; 45 succs { 534 50 }
;; 46 succs { 534 47 }
;; 47 succs { 532 48 }
;; 48 succs { 532 49 }
;; 49 succs { 534 50 }
;; 50 succs { 534 51 }
;; 51 succs { 534 52 }
;; 52 succs { 534 53 }
;; 53 succs { 534 54 }
;; 54 succs { 533 55 }
;; 55 succs { 56 }
;; 56 succs { 57 }
;; 57 succs { 58 }
;; 58 succs { 236 }
;; 59 succs { 60 70 }
;; 60 succs { 543 61 }
;; 61 succs { 62 69 }
;; 62 succs { 541 63 }
;; 63 succs { 541 64 }
;; 64 succs { 541 65 }
;; 65 succs { 541 66 }
;; 66 succs { 541 67 }
;; 67 succs { 541 68 }
;; 68 succs { 69 }
;; 69 succs { 236 }
;; 70 succs { 72 71 }
;; 71 succs { 72 84 }
;; 72 succs { 545 73 }
;; 73 succs { 545 74 }
;; 74 succs { 75 76 }
;; 75 succs { 545 78 }
;; 76 succs { 545 77 }
;; 77 succs { 545 78 }
;; 78 succs { 545 79 }
;; 79 succs { 545 80 }
;; 80 succs { 545 81 }
;; 81 succs { 545 82 }
;; 82 succs { 545 83 }
;; 83 succs { 236 }
;; 84 succs { 85 128 }
;; 85 succs { 551 86 }
;; 86 succs { 551 87 }
;; 87 succs { 549 88 }
;; 88 succs { 549 89 }
;; 89 succs { 90 91 }
;; 90 succs { 549 94 }
;; 91 succs { 549 92 }
;; 92 succs { 549 93 }
;; 93 succs { 549 94 }
;; 94 succs { 549 95 }
;; 95 succs { 549 96 }
;; 96 succs { 549 97 }
;; 97 succs { 549 98 }
;; 98 succs { 549 99 }
;; 99 succs { 100 127 }
;; 100 succs { 548 101 }
;; 101 succs { 548 102 }
;; 102 succs { 103 104 }
;; 103 succs { 548 107 }
;; 104 succs { 548 105 }
;; 105 succs { 548 106 }
;; 106 succs { 548 107 }
;; 107 succs { 548 108 }
;; 108 succs { 548 109 }
;; 109 succs { 548 110 }
;; 110 succs { 548 111 }
;; 111 succs { 112 126 }
;; 112 succs { 113 126 }
;; 113 succs { 114 115 }
;; 114 succs { 116 }
;; 115 succs { 116 }
;; 116 succs { 125 }
;; 117 succs { 118 121 }
;; 118 succs { 119 121 }
;; 119 succs { 548 120 }
;; 120 succs { 121 }
;; 121 succs { 122 123 }
;; 122 succs { 124 }
;; 123 succs { 124 }
;; 124 succs { 125 }
;; 125 succs { 117 126 }
;; 126 succs { 127 }
;; 127 succs { 236 }
;; 128 succs { 129 140 }
;; 129 succs { 554 130 }
;; 130 succs { 552 131 }
;; 131 succs { 132 133 }
;; 132 succs { 552 136 }
;; 133 succs { 552 134 }
;; 134 succs { 552 135 }
;; 135 succs { 552 136 }
;; 136 succs { 552 137 }
;; 137 succs { 552 138 }
;; 138 succs { 552 139 }
;; 139 succs { 236 }
;; 140 succs { 141 152 }
;; 141 succs { 557 142 }
;; 142 succs { 555 143 }
;; 143 succs { 144 145 }
;; 144 succs { 555 148 }
;; 145 succs { 555 146 }
;; 146 succs { 555 147 }
;; 147 succs { 555 148 }
;; 148 succs { 555 149 }
;; 149 succs { 555 150 }
;; 150 succs { 555 151 }
;; 151 succs { 236 }
;; 152 succs { 570 153 }
;; 153 succs { 179 }
;; 154 succs { 561 155 }
;; 155 succs { 158 156 }
;; 156 succs { 561 157 }
;; 157 succs { 158 159 }
;; 158 succs { 160 }
;; 159 succs { 160 }
;; 160 succs { 161 178 }
;; 161 succs { 560 162 }
;; 162 succs { 163 165 }
;; 163 succs { 560 164 }
;; 164 succs { 167 }
;; 165 succs { 560 166 }
;; 166 succs { 167 }
;; 167 succs { 558 168 }
;; 168 succs { 169 170 }
;; 169 succs { 558 173 }
;; 170 succs { 558 171 }
;; 171 succs { 558 172 }
;; 172 succs { 558 173 }
;; 173 succs { 558 174 }
;; 174 succs { 558 175 }
;; 175 succs { 558 176 }
;; 176 succs { 558 177 }
;; 177 succs { 178 }
;; 178 succs { 179 }
;; 179 succs { 570 180 }
;; 180 succs { 154 181 }
;; 181 succs { 570 182 }
;; 182 succs { 183 200 }
;; 183 succs { 570 184 }
;; 184 succs { 185 200 }
;; 185 succs { 564 186 }
;; 186 succs { 562 187 }
;; 187 succs { 188 189 }
;; 188 succs { 564 193 }
;; 189 succs { 564 190 }
;; 190 succs { 563 191 }
;; 191 succs { 563 192 }
;; 192 succs { 564 193 }
;; 193 succs { 564 194 }
;; 194 succs { 564 195 }
;; 195 succs { 564 196 }
;; 196 succs { 564 197 }
;; 197 succs { 198 199 }
;; 198 succs { 564 199 }
;; 199 succs { 200 }
;; 200 succs { 570 201 }
;; 201 succs { 202 218 }
;; 202 succs { 203 215 }
;; 203 succs { 212 }
;; 204 succs { 570 205 }
;; 205 succs { 206 211 }
;; 206 succs { 570 207 }
;; 207 succs { 208 211 }
;; 208 succs { 570 209 }
;; 209 succs { 570 210 }
;; 210 succs { 211 }
;; 211 succs { 212 }
;; 212 succs { 204 213 }
;; 213 succs { 214 215 }
;; 214 succs { 235 }
;; 215 succs { 570 216 }
;; 216 succs { 570 217 }
;; 217 succs { 218 }
;; 218 succs { 219 234 }
;; 219 succs { 569 220 }
;; 220 succs { 221 222 }
;; 221 succs { 235 }
;; 222 succs { 569 223 }
;; 223 succs { 567 224 }
;; 224 succs { 225 226 }
;; 225 succs { 567 229 }
;; 226 succs { 567 227 }
;; 227 succs { 567 228 }
;; 228 succs { 567 229 }
;; 229 succs { 567 230 }
;; 230 succs { 567 231 }
;; 231 succs { 567 232 }
;; 232 succs { 567 233 }
;; 233 succs { 234 }
;; 234 succs { 236 }
;; 235 succs { 526 }
;; 236 succs { 526 }
;; 237 succs { 238 526 }
;; 238 succs { 642 239 }
;; 239 succs { 242 240 }
;; 240 succs { 642 241 }
;; 241 succs { 242 243 }
;; 242 succs { 244 }
;; 243 succs { 244 }
;; 244 succs { 245 246 }
;; 245 succs { 526 }
;; 246 succs { 642 247 }
;; 247 succs { 642 248 }
;; 248 succs { 249 266 }
;; 249 succs { 250 252 }
;; 250 succs { 251 252 }
;; 251 succs { 253 }
;; 252 succs { 253 }
;; 253 succs { 254 265 }
;; 254 succs { 255 265 }
;; 255 succs { 571 256 }
;; 256 succs { 257 258 }
;; 257 succs { 571 261 }
;; 258 succs { 571 259 }
;; 259 succs { 571 260 }
;; 260 succs { 571 261 }
;; 261 succs { 571 262 }
;; 262 succs { 571 263 }
;; 263 succs { 571 264 }
;; 264 succs { 265 }
;; 265 succs { 266 }
;; 266 succs { 267 309 }
;; 267 succs { 268 270 }
;; 268 succs { 269 270 }
;; 269 succs { 271 }
;; 270 succs { 271 }
;; 271 succs { 272 283 }
;; 272 succs { 273 283 }
;; 273 succs { 575 274 }
;; 274 succs { 275 276 }
;; 275 succs { 575 279 }
;; 276 succs { 575 277 }
;; 277 succs { 575 278 }
;; 278 succs { 575 279 }
;; 279 succs { 575 280 }
;; 280 succs { 575 281 }
;; 281 succs { 575 282 }
;; 282 succs { 283 }
;; 283 succs { 284 296 }
;; 284 succs { 578 285 }
;; 285 succs { 286 287 }
;; 286 succs { 578 290 }
;; 287 succs { 578 288 }
;; 288 succs { 578 289 }
;; 289 succs { 578 290 }
;; 290 succs { 578 291 }
;; 291 succs { 578 292 }
;; 292 succs { 578 293 }
;; 293 succs { 578 294 }
;; 294 succs { 578 295 }
;; 295 succs { 296 }
;; 296 succs { 297 308 }
;; 297 succs { 581 298 }
;; 298 succs { 299 300 }
;; 299 succs { 581 303 }
;; 300 succs { 581 301 }
;; 301 succs { 581 302 }
;; 302 succs { 581 303 }
;; 303 succs { 581 304 }
;; 304 succs { 581 305 }
;; 305 succs { 581 306 }
;; 306 succs { 581 307 }
;; 307 succs { 308 }
;; 308 succs { 309 }
;; 309 succs { 310 466 }
;; 310 succs { 311 324 }
;; 311 succs { 312 337 }
;; 312 succs { 585 313 }
;; 313 succs { 314 315 }
;; 314 succs { 585 318 }
;; 315 succs { 585 316 }
;; 316 succs { 585 317 }
;; 317 succs { 585 318 }
;; 318 succs { 585 319 }
;; 319 succs { 585 320 }
;; 320 succs { 585 321 }
;; 321 succs { 585 322 }
;; 322 succs { 585 323 }
;; 323 succs { 337 }
;; 324 succs { 325 337 }
;; 325 succs { 588 326 }
;; 326 succs { 327 328 }
;; 327 succs { 588 331 }
;; 328 succs { 588 329 }
;; 329 succs { 588 330 }
;; 330 succs { 588 331 }
;; 331 succs { 588 332 }
;; 332 succs { 588 333 }
;; 333 succs { 588 334 }
;; 334 succs { 588 335 }
;; 335 succs { 588 336 }
;; 336 succs { 337 }
;; 337 succs { 338 373 }
;; 338 succs { 642 339 }
;; 339 succs { 340 351 }
;; 340 succs { 591 341 }
;; 341 succs { 342 343 }
;; 342 succs { 591 346 }
;; 343 succs { 591 344 }
;; 344 succs { 591 345 }
;; 345 succs { 591 346 }
;; 346 succs { 591 347 }
;; 347 succs { 591 348 }
;; 348 succs { 591 349 }
;; 349 succs { 591 350 }
;; 350 succs { 351 }
;; 351 succs { 352 373 }
;; 352 succs { 600 353 }
;; 353 succs { 354 372 }
;; 354 succs { 355 372 }
;; 355 succs { 356 372 }
;; 356 succs { 598 357 }
;; 357 succs { 358 372 }
;; 358 succs { 597 359 }
;; 359 succs { 594 360 }
;; 360 succs { 361 362 }
;; 361 succs { 597 366 }
;; 362 succs { 597 363 }
;; 363 succs { 595 364 }
;; 364 succs { 595 365 }
;; 365 succs { 597 366 }
;; 366 succs { 597 367 }
;; 367 succs { 597 368 }
;; 368 succs { 597 369 }
;; 369 succs { 597 370 }
;; 370 succs { 596 371 }
;; 371 succs { 372 }
;; 372 succs { 373 }
;; 373 succs { 374 386 }
;; 374 succs { 375 386 }
;; 375 succs { 601 376 }
;; 376 succs { 377 378 }
;; 377 succs { 601 381 }
;; 378 succs { 601 379 }
;; 379 succs { 601 380 }
;; 380 succs { 601 381 }
;; 381 succs { 601 382 }
;; 382 succs { 601 383 }
;; 383 succs { 601 384 }
;; 384 succs { 601 385 }
;; 385 succs { 386 }
;; 386 succs { 387 398 }
;; 387 succs { 604 388 }
;; 388 succs { 389 390 }
;; 389 succs { 604 393 }
;; 390 succs { 604 391 }
;; 391 succs { 604 392 }
;; 392 succs { 604 393 }
;; 393 succs { 604 394 }
;; 394 succs { 604 395 }
;; 395 succs { 604 396 }
;; 396 succs { 604 397 }
;; 397 succs { 525 }
;; 398 succs { 399 525 }
;; 399 succs { 400 453 }
;; 400 succs { 401 420 }
;; 401 succs { 402 453 }
;; 402 succs { 403 453 }
;; 403 succs { 404 453 }
;; 404 succs { 625 405 }
;; 405 succs { 406 453 }
;; 406 succs { 610 407 }
;; 407 succs { 607 408 }
;; 408 succs { 409 410 }
;; 409 succs { 610 414 }
;; 410 succs { 610 411 }
;; 411 succs { 608 412 }
;; 412 succs { 608 413 }
;; 413 succs { 610 414 }
;; 414 succs { 610 415 }
;; 415 succs { 610 416 }
;; 416 succs { 610 417 }
;; 417 succs { 610 418 }
;; 418 succs { 609 419 }
;; 419 succs { 453 }
;; 420 succs { 421 431 }
;; 421 succs { 613 422 }
;; 422 succs { 423 424 }
;; 423 succs { 613 427 }
;; 424 succs { 613 425 }
;; 425 succs { 613 426 }
;; 426 succs { 613 427 }
;; 427 succs { 613 428 }
;; 428 succs { 613 429 }
;; 429 succs { 613 430 }
;; 430 succs { 453 }
;; 431 succs { 432 453 }
;; 432 succs { 433 453 }
;; 433 succs { 434 453 }
;; 434 succs { 435 453 }
;; 435 succs { 436 453 }
;; 436 succs { 437 453 }
;; 437 succs { 625 438 }
;; 438 succs { 439 453 }
;; 439 succs { 619 440 }
;; 440 succs { 616 441 }
;; 441 succs { 442 443 }
;; 442 succs { 619 447 }
;; 443 succs { 619 444 }
;; 444 succs { 617 445 }
;; 445 succs { 617 446 }
;; 446 succs { 619 447 }
;; 447 succs { 619 448 }
;; 448 succs { 619 449 }
;; 449 succs { 619 450 }
;; 450 succs { 619 451 }
;; 451 succs { 618 452 }
;; 452 succs { 453 }
;; 453 succs { 454 465 }
;; 454 succs { 455 465 }
;; 455 succs { 622 456 }
;; 456 succs { 457 458 }
;; 457 succs { 622 461 }
;; 458 succs { 622 459 }
;; 459 succs { 622 460 }
;; 460 succs { 622 461 }
;; 461 succs { 622 462 }
;; 462 succs { 622 463 }
;; 463 succs { 622 464 }
;; 464 succs { 465 }
;; 465 succs { 525 }
;; 466 succs { 467 512 }
;; 467 succs { 468 499 }
;; 468 succs { 469 488 }
;; 469 succs { 470 499 }
;; 470 succs { 471 499 }
;; 471 succs { 472 499 }
;; 472 succs { 638 473 }
;; 473 succs { 474 499 }
;; 474 succs { 629 475 }
;; 475 succs { 626 476 }
;; 476 succs { 477 478 }
;; 477 succs { 629 482 }
;; 478 succs { 629 479 }
;; 479 succs { 627 480 }
;; 480 succs { 627 481 }
;; 481 succs { 629 482 }
;; 482 succs { 629 483 }
;; 483 succs { 629 484 }
;; 484 succs { 629 485 }
;; 485 succs { 629 486 }
;; 486 succs { 628 487 }
;; 487 succs { 499 }
;; 488 succs { 489 499 }
;; 489 succs { 632 490 }
;; 490 succs { 491 492 }
;; 491 succs { 632 495 }
;; 492 succs { 632 493 }
;; 493 succs { 632 494 }
;; 494 succs { 632 495 }
;; 495 succs { 632 496 }
;; 496 succs { 632 497 }
;; 497 succs { 632 498 }
;; 498 succs { 499 }
;; 499 succs { 500 511 }
;; 500 succs { 501 511 }
;; 501 succs { 635 502 }
;; 502 succs { 503 504 }
;; 503 succs { 635 507 }
;; 504 succs { 635 505 }
;; 505 succs { 635 506 }
;; 506 succs { 635 507 }
;; 507 succs { 635 508 }
;; 508 succs { 635 509 }
;; 509 succs { 635 510 }
;; 510 succs { 511 }
;; 511 succs { 525 }
;; 512 succs { 513 525 }
;; 513 succs { 641 514 }
;; 514 succs { 639 515 }
;; 515 succs { 516 517 }
;; 516 succs { 639 520 }
;; 517 succs { 639 518 }
;; 518 succs { 639 519 }
;; 519 succs { 639 520 }
;; 520 succs { 639 521 }
;; 521 succs { 639 522 }
;; 522 succs { 639 523 }
;; 523 succs { 639 524 }
;; 524 succs { 525 }
;; 525 succs { 526 }
;; 526 succs { 1 }
;; 527 succs { 528 }
;; 528 succs { 529 }
;; 529 succs { 530 }
;; 530 succs { }
;; 531 succs { 534 }
;; 532 succs { 534 }
;; 533 succs { 534 }
;; 534 succs { 535 }
;; 535 succs { 536 }
;; 536 succs { 537 }
;; 537 succs { 538 }
;; 538 succs { 539 }
;; 539 succs { 540 }
;; 540 succs { }
;; 541 succs { 542 }
;; 542 succs { 543 }
;; 543 succs { 544 }
;; 544 succs { }
;; 545 succs { 546 }
;; 546 succs { 547 }
;; 547 succs { }
;; 548 succs { 549 }
;; 549 succs { 550 }
;; 550 succs { 551 }
;; 551 succs { }
;; 552 succs { 553 }
;; 553 succs { 554 }
;; 554 succs { }
;; 555 succs { 556 }
;; 556 succs { 557 }
;; 557 succs { }
;; 558 succs { 559 }
;; 559 succs { 560 }
;; 560 succs { 561 }
;; 561 succs { 570 }
;; 562 succs { 564 }
;; 563 succs { 564 }
;; 564 succs { 565 }
;; 565 succs { 566 }
;; 566 succs { 570 }
;; 567 succs { 568 }
;; 568 succs { 569 }
;; 569 succs { 570 }
;; 570 succs { }
;; 571 succs { 572 }
;; 572 succs { 573 }
;; 573 succs { 574 }
;; 574 succs { 642 }
;; 575 succs { 576 }
;; 576 succs { 577 }
;; 577 succs { 584 }
;; 578 succs { 579 }
;; 579 succs { 580 }
;; 580 succs { 584 }
;; 581 succs { 582 }
;; 582 succs { 583 }
;; 583 succs { 584 }
;; 584 succs { 642 }
;; 585 succs { 586 }
;; 586 succs { 587 }
;; 587 succs { 642 }
;; 588 succs { 589 }
;; 589 succs { 590 }
;; 590 succs { 642 }
;; 591 succs { 592 }
;; 592 succs { 593 }
;; 593 succs { 642 }
;; 594 succs { 597 }
;; 595 succs { 597 }
;; 596 succs { 597 }
;; 597 succs { 598 }
;; 598 succs { 599 }
;; 599 succs { 600 }
;; 600 succs { 642 }
;; 601 succs { 602 }
;; 602 succs { 603 }
;; 603 succs { 642 }
;; 604 succs { 605 }
;; 605 succs { 606 }
;; 606 succs { 642 }
;; 607 succs { 610 }
;; 608 succs { 610 }
;; 609 succs { 610 }
;; 610 succs { 611 }
;; 611 succs { 612 }
;; 612 succs { 625 }
;; 613 succs { 614 }
;; 614 succs { 615 }
;; 615 succs { 625 }
;; 616 succs { 619 }
;; 617 succs { 619 }
;; 618 succs { 619 }
;; 619 succs { 620 }
;; 620 succs { 621 }
;; 621 succs { 625 }
;; 622 succs { 623 }
;; 623 succs { 624 }
;; 624 succs { 625 }
;; 625 succs { 642 }
;; 626 succs { 629 }
;; 627 succs { 629 }
;; 628 succs { 629 }
;; 629 succs { 630 }
;; 630 succs { 631 }
;; 631 succs { 638 }
;; 632 succs { 633 }
;; 633 succs { 634 }
;; 634 succs { 638 }
;; 635 succs { 636 }
;; 636 succs { 637 }
;; 637 succs { 638 }
;; 638 succs { 642 }
;; 639 succs { 640 }
;; 640 succs { 641 }
;; 641 succs { 642 }
;; 642 succs { }
void collect_FunctionMapping_Assign (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb, struct ptb * ptable)
{
  struct function * D.252981;
  union tree_node * D.252980;
  struct function_assign_array * D.252979;
  struct function_assign_array * D.252978;
  struct function * D.252973;
  struct function_assign_array * D.252972;
  struct function_assign_array * D.252971;
  struct function * D.252967;
  struct function_assign_array * D.252966;
  struct function_assign_array * D.252965;
  union tree_node * D.252960;
  struct function * D.252959;
  union tree_node * D.252958;
  struct function_assign_array * D.252956;
  union tree_node * D.252955;
  struct function_assign_array * D.252953;
  union tree_node * D.252952;
  union tree_node * D.252951;
  struct function * D.252946;
  struct function_assign_array * D.252945;
  struct function_assign_array * D.252944;
  union tree_node * D.252939;
  struct function * D.252938;
  union tree_node * D.252937;
  struct function_assign_array * D.252935;
  union tree_node * D.252934;
  struct function_assign_array * D.252932;
  union tree_node * D.252931;
  union tree_node * D.252930;
  struct function * D.252926;
  struct function_assign_array * D.252925;
  struct function_assign_array * D.252924;
  union tree_node * D.252919;
  struct function * D.252918;
  union tree_node * D.252917;
  struct function_assign_array * D.252915;
  union tree_node * D.252914;
  struct function_assign_array * D.252912;
  union tree_node * D.252911;
  union tree_node * D.252910;
  struct function * D.252906;
  union tree_node * D.252905;
  struct function_assign_array * D.252904;
  struct function_assign_array * D.252903;
  struct function * D.252899;
  union tree_node * D.252898;
  struct function_assign_array * D.252897;
  struct function_assign_array * D.252896;
  union tree_node * D.252890;
  struct function * D.252889;
  union tree_node * D.252888;
  struct function_assign_array * D.252886;
  union tree_node * D.252885;
  struct function_assign_array * D.252883;
  union tree_node * D.252882;
  union tree_node * D.252881;
  union tree_node * D.252880;
  struct function * D.252876;
  union tree_node * D.252875;
  struct function_assign_array * D.252874;
  struct function_assign_array * D.252873;
  union tree_node * D.252872;
  struct function * D.252868;
  union tree_node * D.252867;
  union tree_node * D.252866;
  struct function_assign_array * D.252865;
  struct function_assign_array * D.252864;
  struct function * D.252860;
  union tree_node * D.252859;
  union tree_node * D.252858;
  struct function_assign_array * D.252857;
  struct function_assign_array * D.252856;
  struct function * D.252851;
  union tree_node * D.252850;
  struct function_assign_array * D.252849;
  struct function_assign_array * D.252848;
  struct function * D.252844;
  union tree_node * D.252843;
  union tree_node * D.252842;
  struct function_assign_array * D.252841;
  struct function_assign_array * D.252840;
  struct function * D.252836;
  struct function_assign_array * D.252835;
  struct function_assign_array * D.252834;
  struct function * D.252829;
  struct function_assign_array * D.252828;
  struct function_assign_array * D.252827;
  union tree_node * D.252826;
  union tree_node * D.252825;
  union tree_node * D.252824;
  union tree_node * D.252823;
  struct function * D.252814;
  struct function * D.252813;
  struct function_return_array * D.252812;
  struct function_return_array * D.252811;
  struct function * D.252810;
  struct function_return_array * D.252809;
  const char * D.252808;
  union tree_node * D.252807;
  union tree_node * D.252806;
  union tree_node * D.252802;
  struct function * D.252801;
  union tree_node * D.252800;
  struct function_assign_array * D.252798;
  union tree_node * D.252797;
  struct function_assign_array * D.252795;
  union tree_node * D.252794;
  union tree_node * D.252793;
  unsigned int D.252792;
  unsigned int D.252791;
  struct function * D.252786;
  union tree_node * D.252785;
  struct function_assign_array * D.252784;
  struct function_assign_array * D.252783;
  union tree_node * D.252782;
  union tree_node * D.252781;
  union tree_node * D.252780;
  union tree_node * D.252779;
  union tree_node * D.252778;
  union tree_node * D.252774;
  struct function_pthread_exit_array * D.252773;
  struct function_pthread_exit_array * D.252772;
  struct function * D.252771;
  union tree_node * D.252767;
  struct function_pthread_detched_array * D.252766;
  struct function_pthread_detched_array * D.252765;
  struct function * D.252764;
  struct function * D.252759;
  struct function * D.252758;
  union tree_node * D.252757;
  struct function_assign_array * D.252756;
  struct function_assign_array * D.252755;
  union tree_node * D.252754;
  union tree_node * D.252753;
  struct function * D.252752;
  union tree_node * D.252751;
  struct function_assign_array * D.252750;
  struct function_assign_array * D.252749;
  union tree_node * D.252748;
  struct function * D.252744;
  union tree_node * D.252743;
  struct function * D.252742;
  struct function_return_array * D.252741;
  struct function_return_array * D.252740;
  struct function * D.252739;
  struct function * D.252734;
  struct function * D.252733;
  struct function * D.252732;
  union tree_node * D.252731;
  union tree_node * D.252722;
  struct function * D.252721;
  union tree_node * D.252720;
  struct function_assign_array * D.252718;
  union tree_node * D.252717;
  struct function_assign_array * D.252715;
  union tree_node * D.252714;
  union tree_node * D.252713;
  union tree_node * D.252712;
  union tree_node * D.252711;
  union tree_node * D.252710;
  union tree_node * D.252709;
  struct function_free_array * D.252708;
  struct function_free_array * D.252707;
  struct function * D.252706;
  union tree_node * D.252705;
  struct function * D.252700;
  union tree_node * D.252699;
  struct function_assign_array * D.252698;
  struct function_assign_array * D.252697;
  union tree_node * D.252696;
  union tree_node * D.252695;
  union tree_node * D.252694;
  const char * D.252693;
  union tree_node * D.252692;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * four;
  union tree_node * three;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * ssa_var;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * ssa_var;
  union tree_node * getFunctionAssignLHS;
  union tree_node * getFunctionAssignRHS;
  struct return_type ret_type;
  struct function_return_array fun_array;
  struct vector ret_type_array;
  union tree_node * getFucntionDecl;
  size_t found;
  int i;
  int find;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getVARDECLtree;
  int i;
  union tree_node * getreturnFucntionDecl;
  union tree_node * checklhstree;
  union tree_node * getVARDECLtree;
  struct pthread_exit_type pthread_exit_type;
  struct vector pthread_exit_array;
  struct function_pthread_exit_array fun_array;
  union tree_node * getFucntionDecl;
  struct pthread_detched_type pthread_detched_type;
  struct vector pthread_detched_array;
  struct function_pthread_detched_array fun_array;
  union tree_node * getFucntionDecl;
  union tree_node * second;
  union tree_node * t2;
  struct ptb * table1;
  struct assign_type assign_type;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getFunctionCallarg;
  struct return_type ret_type;
  union tree_node * getFucntionDecl;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_arg_tree;
  struct function_return_array fun_array;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct free_type free_type;
  struct function_free_array fun_array;
  struct vector free_type_array;
  union tree_node * getFucntionDecl;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * get_function_return_tree;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.948;
  bool retval.941;
  bool retval.934;
  union tree_node * const D.195900;
  union tree_node * const D.195898;
  union tree_node * const D.195897;
  bool retval.929;
  bool retval.928;
  bool retval.927;
  bool retval.916;
  union tree_node * const D.195887;
  union tree_node * const D.195885;
  union tree_node * const D.195884;
  bool retval.910;
  bool retval.909;
  bool retval.908;
  bool retval.900;
  union tree_node * const D.195875;
  union tree_node * const D.195873;
  union tree_node * const D.195872;
  bool retval.895;
  bool retval.894;
  bool retval.893;
  bool retval.883;
  bool retval.877;
  union tree_node * const D.195856;
  union tree_node * const D.195854;
  union tree_node * const D.195853;
  bool retval.871;
  bool retval.870;
  bool retval.869;
  bool retval.864;
  bool retval.859;
  bool retval.854;
  bool retval.847;
  bool retval.841;
  bool retval.835;
  union tree_node * iftmp.829;
  bool retval.823;
  union tree_node * iftmp.817;
  bool iftmp.815;
  bool retval.814;
  bool retval.813;
  bool retval.808;
  bool retval.806;
  bool retval.804;
  struct expanded_location D.195811;
  bool retval.802;
  struct expanded_location D.195808;
  bool retval.800;
  union tree_node * const D.195801;
  union tree_node * const D.195800;
  bool retval.795;
  bool retval.794;
  bool retval.793;
  bool retval.791;
  bool retval.786;
  bool retval.782;
  bool iftmp.779;
  bool retval.778;
  bool retval.774;
  bool retval.770;
  union tree_node * iftmp.769;
  union tree_node * iftmp.764;
  bool retval.759;
  bool retval.757;
  bool retval.753;
  bool retval.745;
  union tree_node * const D.195389;
  union tree_node * const D.195387;
  union tree_node * const D.195386;
  bool retval.740;
  bool retval.739;
  bool retval.738;
  bool retval.737;
  bool retval.733;
  bool retval.732;
  bool retval.728;
  bool retval.727;
  bool retval.726;

  <bb 2> :
  loc = gimple_location_safe (gc);
  _1 = gimple_code (gc);
  retval.726 = _1 == 8;
  if (retval.726 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 237>; [INV]

  <bb 3> :
  D.252692 = gimple_call_fn (gc);
  _2 = D.252692;
  D.252693 = get_name (_2);
  name = D.252693;
  D.252694 = gimple_call_fn (gc);
  get_function_return_tree = D.252694;
  _3 = get_function_return_tree->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 526>; [INV]

  <bb 5> :
  if (name != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 526>; [INV]

  <bb 6> :
  _4 = strcmp (name, "free");
  if (_4 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _5 = strcmp (name, "xfree");
  if (_5 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _6 = strcmp (name, "realloc");
  if (_6 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 9> :
  D.252695 = gimple_call_arg (gc, 0);
  _7 = D.252695;
  _8 = _7->base.code;
  retval.727 = _8 == 131;
  if (retval.727 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 10> :
  D.252696 = gimple_call_arg (gc, 0);

  <bb 11> :
  _9 = D.252696;
  _10 = _9->exp.operands[0];
  second = _10;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.729_11 = function_assign_collect;
  D.252697 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.729_11, &second);

  <bb 12> :
  _12 = D.252697;
  retval.728 = _12 == 0B;
  if (retval.728 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 17>; [INV]

  <bb 14> :
  function_assign_collect.730_13 = function_assign_collect;
  D.252698 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.730_13, &second);

  <bb 15> :
  _14 = D.252698;
  function_assign_array::operator= (&assign_array, _14);

  <bb 16> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 17> :
  assign_type.stmt = gc;
  D.252699 = gimple_call_arg (gc, 0);

  <bb 18> :
  _15 = D.252699;
  assign_type.assign_tree = _15;
  D.252700 = cgraph_node::get_fun (node);

  <bb 19> :
  _16 = D.252700;
  _17 = _16->decl;
  assign_type.form_tree = _17;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 20> :
  function_assign_collect.731_18 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.731_18, &second, &assign_array);

  <bb 21> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  goto <bb 58>; [INV]

  <bb 22> :
  D.252705 = gimple_call_arg (gc, 0);
  _19 = D.252705;
  _20 = _19->base.code;
  retval.732 = _20 == 153;
  if (retval.732 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 23> :
  D.252706 = cgraph_node::get_fun (node);

  <bb 24> :
  _21 = D.252706;
  _22 = _21->decl;
  getFucntionDecl = _22;
  std::vector<free_type>::vector (&free_type_array);
  function_free_array::function_free_array (&fun_array);
  function_free_collect.734_23 = function_free_collect;
  D.252707 = hash_map<tree_node*, function_free_array>::get (function_free_collect.734_23, &getFucntionDecl);

  <bb 25> :
  _24 = D.252707;
  retval.733 = _24 == 0B;
  if (retval.733 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  std::vector<free_type>::operator= (&fun_array.free_type_array, &free_type_array);
  goto <bb 30>; [INV]

  <bb 27> :
  function_free_collect.735_25 = function_free_collect;
  D.252708 = hash_map<tree_node*, function_free_array>::get (function_free_collect.735_25, &getFucntionDecl);

  <bb 28> :
  _26 = D.252708;
  function_free_array::operator= (&fun_array, _26);

  <bb 29> :
  std::vector<free_type>::operator= (&free_type_array, &fun_array.free_type_array);

  <bb 30> :
  free_type::free_type (&free_type);
  free_type.stmt = gc;
  D.252709 = gimple_call_arg (gc, 0);

  <bb 31> :
  _27 = D.252709;
  free_type.free_tree = _27;
  std::vector<free_type>::push_back (&fun_array.free_type_array, &free_type);

  <bb 32> :
  function_free_collect.736_28 = function_free_collect;
  hash_map<tree_node*, function_free_array>::put (function_free_collect.736_28, &getFucntionDecl, &fun_array);

  <bb 33> :
  D.252710 = gimple_call_arg (gc, 0);

  <bb 34> :
  _29 = D.252710;
  _30 = _29->base.code;
  retval.737 = _30 == 153;
  if (retval.737 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 35> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  D.252711 = gimple_call_arg (gc, 0);

  <bb 36> :
  _31 = D.252711;
  def_stmt = _31->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 37>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 37> :
  retval.738 = is_gimple_assign (def_stmt);
  if (retval.738 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 38> :
  D.252712 = gimple_assign_rhs1 (def_stmt);

  <bb 39> :
  _32 = D.252712;
  _33 = _32->base.code;
  retval.739 = _33 == 36;
  if (retval.739 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 40> :
  D.252713 = gimple_assign_rhs1 (def_stmt);

  <bb 41> :
  _34 = D.252713;
  debug_tree (_34);

  <bb 42> :
  function_assign_collect.741_35 = function_assign_collect;
  D.252714 = gimple_assign_rhs1 (def_stmt);

  <bb 43> :
  _36 = D.252714;
  D.195386 = _36;
  D.252715 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.741_35, &D.195386);

  <bb 44> :
  _37 = D.252715;
  retval.740 = _37 == 0B;
  D.195386 = {CLOBBER};
  if (retval.740 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 50>; [INV]

  <bb 46> :
  function_assign_collect.742_38 = function_assign_collect;
  D.252717 = gimple_assign_rhs1 (def_stmt);

  <bb 47> :
  _39 = D.252717;
  D.195387 = _39;
  D.252718 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.742_38, &D.195387);

  <bb 48> :
  _40 = D.252718;
  function_assign_array::operator= (&assign_array, _40);

  <bb 49> :
  D.195387 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 50> :
  assign_type.stmt = gc;
  D.252720 = gimple_call_arg (gc, 0);

  <bb 51> :
  _41 = D.252720;
  assign_type.assign_tree = _41;
  D.252721 = cgraph_node::get_fun (node);

  <bb 52> :
  _42 = D.252721;
  _43 = _42->decl;
  assign_type.form_tree = _43;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 53> :
  function_assign_collect.743_44 = function_assign_collect;
  D.252722 = gimple_assign_rhs1 (def_stmt);

  <bb 54> :
  _45 = D.252722;
  D.195389 = _45;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.743_44, &D.195389, &assign_array);

  <bb 55> :
  D.195389 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 56> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 57> :
  function_free_array::~function_free_array (&fun_array);
  std::vector<free_type>::~vector (&free_type_array);
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};

  <bb 58> :
  goto <bb 236>; [INV]

  <bb 59> :
  _46 = strcmp (name, "exit");
  if (_46 == 0)
    goto <bb 60>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 60> :
  function_return_array::function_return_array (&fun_array);
  D.252731 = gimple_call_arg (gc, 0);

  <bb 61> :
  get_function_arg_tree = D.252731;
  std::vector<return_type>::vector (&ret_type_array);
  if (get_function_return_tree != 0B)
    goto <bb 62>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 62> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  D.252732 = cgraph_node::get_fun (node);

  <bb 63> :
  _47 = D.252732;
  _48 = _47->decl;
  ret_type.locfucntion = _48;
  D.252733 = cgraph_node::get_fun (node);

  <bb 64> :
  _49 = D.252733;
  _50 = _49->decl;
  ret_type.locfucntion = _50;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 65> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 66> :
  function_return_collect.744_51 = function_return_collect;
  D.252734 = cgraph_node::get_fun (node);

  <bb 67> :
  _52 = D.252734;
  _53 = &_52->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.744_51, _53, &fun_array);

  <bb 68> :
  ret_type = {CLOBBER};

  <bb 69> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 236>; [INV]

  <bb 70> :
  _54 = strcmp (name, "pthread_mutex_lock");
  if (_54 == 0)
    goto <bb 72>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 71> :
  _55 = strcmp (name, "pthread_mutex_unlock");
  if (_55 == 0)
    goto <bb 72>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 72> :
  function_return_array::function_return_array (&fun_array);
  std::vector<return_type>::vector (&ret_type_array);
  D.252739 = cgraph_node::get_fun (node);

  <bb 73> :
  _56 = D.252739;
  _57 = _56->decl;
  getFucntionDecl = _57;
  function_return_collect.746_58 = function_return_collect;
  D.252740 = hash_map<tree_node*, function_return_array>::get (function_return_collect.746_58, &getFucntionDecl);

  <bb 74> :
  _59 = D.252740;
  retval.745 = _59 == 0B;
  if (retval.745 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 75> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 78>; [INV]

  <bb 76> :
  function_return_collect.747_60 = function_return_collect;
  D.252741 = hash_map<tree_node*, function_return_array>::get (function_return_collect.747_60, &getFucntionDecl);

  <bb 77> :
  _61 = D.252741;
  function_return_array::operator= (&fun_array, _61);

  <bb 78> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  D.252742 = cgraph_node::get_fun (node);

  <bb 79> :
  _62 = D.252742;
  _63 = _62->decl;
  ret_type.locfucntion = _63;
  D.252743 = gimple_call_arg (gc, 0);

  <bb 80> :
  _64 = D.252743;
  ret_type.return_tree = _64;
  FUNCITON_THREAD.748_65 = FUNCITON_THREAD;
  FUNCITON_THREAD.749_66 = (int) FUNCITON_THREAD.748_65;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.749_66;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 81> :
  function_return_collect.750_67 = function_return_collect;
  D.252744 = cgraph_node::get_fun (node);

  <bb 82> :
  _68 = D.252744;
  _69 = &_68->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.750_67, _69, &fun_array);

  <bb 83> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 236>; [INV]

  <bb 84> :
  _70 = strcmp (name, "pthread_create");
  if (_70 == 0)
    goto <bb 85>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 85> :
  stderr.751_71 = stderr;
  __builtin_fwrite ("----------------test-------------\n", 1, 34, stderr.751_71);

  <bb 86> :
  D.252748 = gimple_call_arg (gc, 0);

  <bb 87> :
  _72 = D.252748;
  getFunctionCallarg = _72;
  getFunctionCallarg.752_73 = getFunctionCallarg;
  _74 = getFunctionCallarg.752_73->exp.operands[0];
  getFunctionCallarg = _74;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  debug (gc);

  <bb 88> :
  function_assign_collect.754_75 = function_assign_collect;
  D.252749 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.754_75, &getFunctionCallarg);

  <bb 89> :
  _76 = D.252749;
  retval.753 = _76 == 0B;
  if (retval.753 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 90> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 94>; [INV]

  <bb 91> :
  function_assign_collect.755_77 = function_assign_collect;
  D.252750 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.755_77, &getFunctionCallarg);

  <bb 92> :
  _78 = D.252750;
  function_assign_array::operator= (&assign_array, _78);

  <bb 93> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 94> :
  assign_type.stmt = gc;
  D.252751 = gimple_call_arg (gc, 0);

  <bb 95> :
  _79 = D.252751;
  assign_type.assign_tree = _79;
  D.252752 = cgraph_node::get_fun (node);

  <bb 96> :
  _80 = D.252752;
  _81 = _80->decl;
  assign_type.form_tree = _81;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 97> :
  function_assign_collect.756_82 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.756_82, &getFunctionCallarg, &assign_array);

  <bb 98> :
  D.252753 = gimple_call_arg (gc, 3);

  <bb 99> :
  _83 = D.252753;
  retval.757 = _83 != 0B;
  if (retval.757 != 0)
    goto <bb 100>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 100> :
  D.252754 = gimple_call_arg (gc, 0);

  <bb 101> :
  _84 = D.252754;
  getFunctionCallarg = _84;
  getFunctionCallarg.758_85 = getFunctionCallarg;
  _86 = getFunctionCallarg.758_85->exp.operands[0];
  getFunctionCallarg = _86;
  function_assign_collect.760_87 = function_assign_collect;
  D.252755 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.760_87, &getFunctionCallarg);

  <bb 102> :
  _88 = D.252755;
  retval.759 = _88 == 0B;
  if (retval.759 != 0)
    goto <bb 103>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 103> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 107>; [INV]

  <bb 104> :
  function_assign_collect.761_89 = function_assign_collect;
  D.252756 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.761_89, &getFunctionCallarg);

  <bb 105> :
  _90 = D.252756;
  function_assign_array::operator= (&assign_array, _90);

  <bb 106> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 107> :
  assign_type.stmt = gc;
  D.252757 = gimple_call_arg (gc, 3);

  <bb 108> :
  _91 = D.252757;
  assign_type.assign_tree = _91;
  D.252758 = cgraph_node::get_fun (node);

  <bb 109> :
  _92 = D.252758;
  _93 = _92->decl;
  assign_type.form_tree = _93;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 110> :
  function_assign_collect.762_94 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.762_94, &getFunctionCallarg, &assign_array);

  <bb 111> :
  getFunctionCallarg.763_95 = getFunctionCallarg;
  _96 = getFunctionCallarg.763_95->base.code;
  if (_96 == 36)
    goto <bb 112>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 112> :
  table1 = ptable;
  t2 = 0B;
  _97 = ptable->size;
  if (_97 >= 0)
    goto <bb 113>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 113> :
  if (table1 != 0B)
    goto <bb 114>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 114> :
  iftmp.764 = table1->target;
  goto <bb 116>; [INV]

  <bb 115> :
  iftmp.764 = 0B;

  <bb 116> :
  t2 = iftmp.764;
  goto <bb 125>; [INV]

  <bb 117> :
  _98 = table1->target;
  _99 = _98->base.code;
  if (_99 == 131)
    goto <bb 118>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 118> :
  _100 = table1->target;
  second = _100->exp.operands[0];
  getFunctionCallarg.765_101 = getFunctionCallarg;
  if (second == getFunctionCallarg.765_101)
    goto <bb 119>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 119> :
  _102 = table1->target;
  table1->swap_target = _102;
  _103 = table1->last_stmt;
  table1->swap_stmt = _103;
  getFunctionCallarg.766_104 = getFunctionCallarg;
  table1->target = getFunctionCallarg.766_104;
  table1->last_stmt = gc;
  FUNCITON_THREAD.767_105 = FUNCITON_THREAD;
  FUNCITON_THREAD.768_106 = (int) FUNCITON_THREAD.767_105;
  table1->swap_type = FUNCITON_THREAD.768_106;
  _107 = table1->last_stmt;
  assign_type.stmt = _107;
  _108 = table1->target;
  assign_type.assign_tree = _108;
  D.252759 = cgraph_node::get_fun (node);

  <bb 120> :
  _109 = D.252759;
  _110 = _109->decl;
  assign_type.form_tree = _110;

  <bb 121> :
  table1 = table1->next;
  if (table1 != 0B)
    goto <bb 122>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 122> :
  iftmp.769 = table1->target;
  goto <bb 124>; [INV]

  <bb 123> :
  iftmp.769 = 0B;

  <bb 124> :
  t2 = iftmp.769;

  <bb 125> :
  if (t2 != 0B)
    goto <bb 117>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 126> :
  assign_type = {CLOBBER};

  <bb 127> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionCallarg = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 236>; [INV]

  <bb 128> :
  _111 = strcmp (name, "pthread_detach");
  if (_111 == 0)
    goto <bb 129>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 129> :
  D.252764 = cgraph_node::get_fun (node);

  <bb 130> :
  _112 = D.252764;
  _113 = _112->decl;
  getFucntionDecl = _113;
  function_pthread_detched_array::function_pthread_detched_array (&fun_array);
  std::vector<pthread_detched_type>::vector (&pthread_detched_array);
  function_pthread_detched_collect.771_114 = function_pthread_detched_collect;
  D.252765 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.771_114, &getFucntionDecl);

  <bb 131> :
  _115 = D.252765;
  retval.770 = _115 == 0B;
  if (retval.770 != 0)
    goto <bb 132>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 132> :
  std::vector<pthread_detched_type>::operator= (&fun_array.pthread_detched_array, &pthread_detched_array);
  goto <bb 136>; [INV]

  <bb 133> :
  function_pthread_detched_collect.772_116 = function_pthread_detched_collect;
  D.252766 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.772_116, &getFucntionDecl);

  <bb 134> :
  _117 = D.252766;
  function_pthread_detched_array::operator= (&fun_array, _117);

  <bb 135> :
  std::vector<pthread_detched_type>::operator= (&pthread_detched_array, &fun_array.pthread_detched_array);

  <bb 136> :
  pthread_detched_type.stmt = gc;
  D.252767 = gimple_call_arg (gc, 0);

  <bb 137> :
  _118 = D.252767;
  pthread_detched_type.pthread_detched_tree = _118;
  std::vector<pthread_detched_type>::push_back (&fun_array.pthread_detched_array, &pthread_detched_type);

  <bb 138> :
  function_pthread_detched_collect.773_119 = function_pthread_detched_collect;
  hash_map<tree_node*, function_pthread_detched_array>::put (function_pthread_detched_collect.773_119, &getFucntionDecl, &fun_array);

  <bb 139> :
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  goto <bb 236>; [INV]

  <bb 140> :
  _120 = strcmp (name, "pthread_exit");
  if (_120 == 0)
    goto <bb 141>; [INV]
  else
    goto <bb 152>; [INV]

  <bb 141> :
  D.252771 = cgraph_node::get_fun (node);

  <bb 142> :
  _121 = D.252771;
  _122 = _121->decl;
  getFucntionDecl = _122;
  function_pthread_exit_array::function_pthread_exit_array (&fun_array);
  std::vector<pthread_exit_type>::vector (&pthread_exit_array);
  function_pthread_exit_collect.775_123 = function_pthread_exit_collect;
  D.252772 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.775_123, &getFucntionDecl);

  <bb 143> :
  _124 = D.252772;
  retval.774 = _124 == 0B;
  if (retval.774 != 0)
    goto <bb 144>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 144> :
  std::vector<pthread_exit_type>::operator= (&fun_array.pthread_exit_array, &pthread_exit_array);
  goto <bb 148>; [INV]

  <bb 145> :
  function_pthread_exit_collect.776_125 = function_pthread_exit_collect;
  D.252773 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.776_125, &getFucntionDecl);

  <bb 146> :
  _126 = D.252773;
  function_pthread_exit_array::operator= (&fun_array, _126);

  <bb 147> :
  std::vector<pthread_exit_type>::operator= (&pthread_exit_array, &fun_array.pthread_exit_array);

  <bb 148> :
  pthread_exit_type.stmt = gc;
  D.252774 = gimple_call_arg (gc, 0);

  <bb 149> :
  _127 = D.252774;
  pthread_exit_type.pthread_exit_tree = _127;
  std::vector<pthread_exit_type>::push_back (&fun_array.pthread_exit_array, &pthread_exit_type);

  <bb 150> :
  function_pthread_exit_collect.777_128 = function_pthread_exit_collect;
  hash_map<tree_node*, function_pthread_exit_array>::put (function_pthread_exit_collect.777_128, &getFucntionDecl, &fun_array);

  <bb 151> :
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  goto <bb 236>; [INV]

  <bb 152> :
  debug_gimple_stmt (gc);

  <bb 153> :
  i = 0;
  goto <bb 179>; [INV]

  <bb 154> :
  i.780_129 = (unsigned int) i;
  D.252778 = gimple_call_arg (gc, i.780_129);

  <bb 155> :
  _130 = D.252778;
  _131 = _130->base.code;
  if (_131 == 131)
    goto <bb 158>; [INV]
  else
    goto <bb 156>; [INV]

  <bb 156> :
  i.781_132 = (unsigned int) i;
  D.252779 = gimple_call_arg (gc, i.781_132);

  <bb 157> :
  _133 = D.252779;
  _134 = _133->base.code;
  if (_134 == 36)
    goto <bb 158>; [INV]
  else
    goto <bb 159>; [INV]

  <bb 158> :
  iftmp.779 = 1;
  goto <bb 160>; [INV]

  <bb 159> :
  iftmp.779 = 0;

  <bb 160> :
  retval.778 = iftmp.779;
  if (retval.778 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 161> :
  i.783_135 = (unsigned int) i;
  D.252780 = gimple_call_arg (gc, i.783_135);

  <bb 162> :
  _136 = D.252780;
  _137 = _136->base.code;
  retval.782 = _137 == 131;
  if (retval.782 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 163> :
  i.784_138 = (unsigned int) i;
  D.252781 = gimple_call_arg (gc, i.784_138);

  <bb 164> :
  _139 = D.252781;
  _140 = _139->exp.operands[0];
  getVARDECLtree = _140;
  goto <bb 167>; [INV]

  <bb 165> :
  i.785_141 = (unsigned int) i;
  D.252782 = gimple_call_arg (gc, i.785_141);

  <bb 166> :
  _142 = D.252782;
  getVARDECLtree = _142;

  <bb 167> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.787_143 = function_assign_collect;
  D.252783 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.787_143, &getVARDECLtree);

  <bb 168> :
  _144 = D.252783;
  retval.786 = _144 == 0B;
  if (retval.786 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 173>; [INV]

  <bb 170> :
  function_assign_collect.788_145 = function_assign_collect;
  D.252784 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.788_145, &getVARDECLtree);

  <bb 171> :
  _146 = D.252784;
  function_assign_array::operator= (&assign_array, _146);

  <bb 172> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 173> :
  assign_type.stmt = gc;
  i.789_147 = (unsigned int) i;
  D.252785 = gimple_call_arg (gc, i.789_147);

  <bb 174> :
  _148 = D.252785;
  assign_type.assign_tree = _148;
  D.252786 = cgraph_node::get_fun (node);

  <bb 175> :
  _149 = D.252786;
  _150 = _149->decl;
  assign_type.form_tree = _150;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 176> :
  function_assign_collect.790_151 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.790_151, &getVARDECLtree, &assign_array);

  <bb 177> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 178> :
  getVARDECLtree = {CLOBBER};
  i = i + 1;

  <bb 179> :
  D.252791 = gimple_call_num_args (gc);

  <bb 180> :
  _152 = D.252791;
  i.792_153 = (unsigned int) i;
  retval.791 = _152 > i.792_153;
  if (retval.791 != 0)
    goto <bb 154>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 181> :
  D.252792 = gimple_call_num_args (gc);

  <bb 182> :
  _154 = D.252792;
  retval.793 = _154 != 0;
  if (retval.793 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 183> :
  D.252793 = gimple_call_arg (gc, 0);

  <bb 184> :
  _155 = D.252793;
  _156 = _155->base.code;
  retval.794 = _156 == 131;
  if (retval.794 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 185> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.796_157 = function_assign_collect;
  D.252794 = gimple_call_fn (gc);

  <bb 186> :
  _158 = D.252794;
  D.195800 = _158;
  D.252795 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.796_157, &D.195800);

  <bb 187> :
  _159 = D.252795;
  retval.795 = _159 == 0B;
  D.195800 = {CLOBBER};
  if (retval.795 != 0)
    goto <bb 188>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 188> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 193>; [INV]

  <bb 189> :
  function_assign_collect.797_160 = function_assign_collect;
  D.252797 = gimple_call_fn (gc);

  <bb 190> :
  _161 = D.252797;
  D.195801 = _161;
  D.252798 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.797_160, &D.195801);

  <bb 191> :
  _162 = D.252798;
  function_assign_array::operator= (&assign_array, _162);

  <bb 192> :
  D.195801 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 193> :
  assign_type.stmt = gc;
  D.252800 = gimple_call_arg (gc, 0);

  <bb 194> :
  _163 = D.252800;
  assign_type.assign_tree = _163;
  D.252801 = cgraph_node::get_fun (node);

  <bb 195> :
  _164 = D.252801;
  _165 = _164->decl;
  assign_type.form_tree = _165;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 196> :
  D.252802 = gimple_call_arg (gc, 0);

  <bb 197> :
  _166 = D.252802;
  _167 = _166->exp.operands[0];
  second = _167;
  second.798_168 = second;
  _169 = second.798_168->base.code;
  if (_169 == 36)
    goto <bb 198>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 198> :
  function_assign_collect.799_170 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.799_170, &second, &assign_array);

  <bb 199> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};

  <bb 200> :
  D.252806 = gimple_call_lhs (gc);

  <bb 201> :
  checklhstree = D.252806;
  _171 = gimple_code (gc);
  retval.800 = _171 == 8;
  if (retval.800 != 0)
    goto <bb 202>; [INV]
  else
    goto <bb 218>; [INV]

  <bb 202> :
  vscode_extensionmod.801_172 = vscode_extensionmod;
  if (vscode_extensionmod.801_172 != 0)
    goto <bb 203>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 203> :
  find = 0;
  i = 0;
  goto <bb 212>; [INV]

  <bb 204> :
  _173 = (long unsigned int) i;
  _174 = std::vector<breakpoint>::operator[] (&vbreakpoint, _173);
  _175 = &_174->name;
  D.195808 = expand_location (loc); [return slot optimization]

  <bb 205> :
  _176 = D.195808.file;
  found = std::__cxx11::basic_string<char>::find (_175, _176, 0);
  D.195808 = {CLOBBER};
  if (found != 0)
    goto <bb 206>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 206> :
  _177 = (long unsigned int) i;
  _178 = std::vector<breakpoint>::operator[] (&vbreakpoint, _177);
  _179 = _178->line;
  D.195811 = expand_location (loc); [return slot optimization]

  <bb 207> :
  _180 = D.195811.line;
  retval.802 = _179 == _180;
  D.195811 = {CLOBBER};
  if (retval.802 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 208> :
  debug_gimple_stmt (gc);

  <bb 209> :
  _181 = (long unsigned int) i;
  _182 = std::vector<breakpoint>::operator[] (&vbreakpoint, _181);
  _183 = _182->line;
  _184 = (long unsigned int) i;
  _185 = std::vector<breakpoint>::operator[] (&vbreakpoint, _184);
  _186 = &_185->name;
  _187 = std::__cxx11::basic_string<char>::c_str (_186);
  stderr.803_188 = stderr;
  fprintf (stderr.803_188, "set breakpoint %s %d\n", _187, _183);

  <bb 210> :
  find = 1;

  <bb 211> :
  i = i + 1;

  <bb 212> :
  _189 = (long unsigned int) i;
  _190 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.804 = _189 < _190;
  if (retval.804 != 0)
    goto <bb 204>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 213> :
  if (find == 0)
    goto <bb 214>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 214> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 235>; [INV]

  <bb 215> :
  D.252807 = gimple_call_fn (gc);

  <bb 216> :
  _191 = D.252807;
  D.252808 = get_name (_191);

  <bb 217> :
  name = D.252808;

  <bb 218> :
  _192 = get_function_return_tree->exp.operands[0];
  getreturnFucntionDecl = _192;
  getreturnFucntionDecl.805_193 = getreturnFucntionDecl;
  if (getreturnFucntionDecl.805_193 != 0B)
    goto <bb 219>; [INV]
  else
    goto <bb 234>; [INV]

  <bb 219> :
  function_return_collect.807_194 = function_return_collect;
  D.252809 = hash_map<tree_node*, function_return_array>::get (function_return_collect.807_194, &getreturnFucntionDecl);

  <bb 220> :
  _195 = D.252809;
  retval.806 = _195 == 0B;
  if (retval.806 != 0)
    goto <bb 221>; [INV]
  else
    goto <bb 222>; [INV]

  <bb 221> :
  // predicted unlikely by early return (on trees) predictor.
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 235>; [INV]

  <bb 222> :
  D.252810 = cgraph_node::get_fun (node);

  <bb 223> :
  _196 = D.252810;
  _197 = _196->decl;
  getFucntionDecl = _197;
  std::vector<return_type>::vector (&ret_type_array);
  function_return_array::function_return_array (&fun_array);
  function_return_collect.809_198 = function_return_collect;
  D.252811 = hash_map<tree_node*, function_return_array>::get (function_return_collect.809_198, &getFucntionDecl);

  <bb 224> :
  _199 = D.252811;
  retval.808 = _199 == 0B;
  if (retval.808 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 225> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 229>; [INV]

  <bb 226> :
  function_return_collect.810_200 = function_return_collect;
  D.252812 = hash_map<tree_node*, function_return_array>::get (function_return_collect.810_200, &getFucntionDecl);

  <bb 227> :
  _201 = D.252812;
  function_return_array::operator= (&fun_array, _201);

  <bb 228> :
  std::vector<return_type>::operator= (&ret_type_array, &fun_array.return_type_array);

  <bb 229> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  getreturnFucntionDecl.811_202 = getreturnFucntionDecl;
  ret_type.return_tree = getreturnFucntionDecl.811_202;
  D.252813 = cgraph_node::get_fun (node);

  <bb 230> :
  _203 = D.252813;
  _204 = _203->decl;
  ret_type.locfucntion = _204;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 231> :
  function_return_collect.812_205 = function_return_collect;
  D.252814 = cgraph_node::get_fun (node);

  <bb 232> :
  _206 = D.252814;
  _207 = &_206->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.812_205, _207, &fun_array);

  <bb 233> :
  function_return_array::~function_return_array (&fun_array);
  std::vector<return_type>::~vector (&ret_type_array);
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};

  <bb 234> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 236>; [INV]

  <bb 235> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 526>; [INV]

  <bb 236> :
  goto <bb 526>; [INV]

  <bb 237> :
  _208 = gimple_code (gc);
  retval.813 = _208 == 6;
  if (retval.813 != 0)
    goto <bb 238>; [INV]
  else
    goto <bb 526>; [INV]

  <bb 238> :
  D.252823 = gimple_assign_lhs (gc);

  <bb 239> :
  _209 = D.252823;
  if (_209 == 0B)
    goto <bb 242>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 240> :
  D.252824 = gimple_assign_rhs1 (gc);

  <bb 241> :
  _210 = D.252824;
  if (_210 == 0B)
    goto <bb 242>; [INV]
  else
    goto <bb 243>; [INV]

  <bb 242> :
  iftmp.815 = 1;
  goto <bb 244>; [INV]

  <bb 243> :
  iftmp.815 = 0;

  <bb 244> :
  retval.814 = iftmp.815;
  if (retval.814 != 0)
    goto <bb 245>; [INV]
  else
    goto <bb 246>; [INV]

  <bb 245> :
  // predicted unlikely by early return (on trees) predictor.
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  goto <bb 526>; [INV]

  <bb 246> :
  D.252825 = gimple_assign_rhs1 (gc);

  <bb 247> :
  _211 = D.252825;
  getFunctionAssignRHS = _211;
  D.252826 = gimple_assign_lhs (gc);

  <bb 248> :
  _212 = D.252826;
  getFunctionAssignLHS = _212;
  getFunctionAssignRHS.816_213 = getFunctionAssignRHS;
  _214 = getFunctionAssignRHS.816_213->base.code;
  if (_214 == 153)
    goto <bb 249>; [INV]
  else
    goto <bb 266>; [INV]

  <bb 249> :
  getFunctionAssignRHS.818_215 = getFunctionAssignRHS;
  _216 = getFunctionAssignRHS.818_215->ssa_name.var;
  if (_216 != 0B)
    goto <bb 250>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 250> :
  getFunctionAssignRHS.819_217 = getFunctionAssignRHS;
  _218 = getFunctionAssignRHS.819_217->ssa_name.var;
  _219 = _218->base.code;
  if (_219 != 1)
    goto <bb 251>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 251> :
  getFunctionAssignRHS.820_220 = getFunctionAssignRHS;
  iftmp.817 = getFunctionAssignRHS.820_220->ssa_name.var;
  goto <bb 253>; [INV]

  <bb 252> :
  iftmp.817 = 0B;

  <bb 253> :
  ssa_var = iftmp.817;
  ssa_var.821_221 = ssa_var;
  if (ssa_var.821_221 != 0B)
    goto <bb 254>; [INV]
  else
    goto <bb 265>; [INV]

  <bb 254> :
  ssa_var.822_222 = ssa_var;
  _223 = ssa_var.822_222->base.code;
  if (_223 == 36)
    goto <bb 255>; [INV]
  else
    goto <bb 265>; [INV]

  <bb 255> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.824_224 = function_assign_collect;
  D.252827 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.824_224, &ssa_var);

  <bb 256> :
  _225 = D.252827;
  retval.823 = _225 == 0B;
  if (retval.823 != 0)
    goto <bb 257>; [INV]
  else
    goto <bb 258>; [INV]

  <bb 257> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 261>; [INV]

  <bb 258> :
  function_assign_collect.825_226 = function_assign_collect;
  D.252828 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.825_226, &ssa_var);

  <bb 259> :
  _227 = D.252828;
  function_assign_array::operator= (&assign_array, _227);

  <bb 260> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 261> :
  assign_type.stmt = gc;
  ssa_var.826_228 = ssa_var;
  assign_type.assign_tree = ssa_var.826_228;
  D.252829 = cgraph_node::get_fun (node);

  <bb 262> :
  _229 = D.252829;
  _230 = _229->decl;
  assign_type.form_tree = _230;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 263> :
  function_assign_collect.827_231 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.827_231, &ssa_var, &assign_array);

  <bb 264> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 265> :
  ssa_var = {CLOBBER};

  <bb 266> :
  getFunctionAssignLHS.828_232 = getFunctionAssignLHS;
  _233 = getFunctionAssignLHS.828_232->base.code;
  if (_233 == 153)
    goto <bb 267>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 267> :
  getFunctionAssignLHS.830_234 = getFunctionAssignLHS;
  _235 = getFunctionAssignLHS.830_234->ssa_name.var;
  if (_235 != 0B)
    goto <bb 268>; [INV]
  else
    goto <bb 270>; [INV]

  <bb 268> :
  getFunctionAssignLHS.831_236 = getFunctionAssignLHS;
  _237 = getFunctionAssignLHS.831_236->ssa_name.var;
  _238 = _237->base.code;
  if (_238 != 1)
    goto <bb 269>; [INV]
  else
    goto <bb 270>; [INV]

  <bb 269> :
  getFunctionAssignLHS.832_239 = getFunctionAssignLHS;
  iftmp.829 = getFunctionAssignLHS.832_239->ssa_name.var;
  goto <bb 271>; [INV]

  <bb 270> :
  iftmp.829 = 0B;

  <bb 271> :
  ssa_var = iftmp.829;
  ssa_var.833_240 = ssa_var;
  if (ssa_var.833_240 != 0B)
    goto <bb 272>; [INV]
  else
    goto <bb 283>; [INV]

  <bb 272> :
  ssa_var.834_241 = ssa_var;
  _242 = ssa_var.834_241->base.code;
  if (_242 == 36)
    goto <bb 273>; [INV]
  else
    goto <bb 283>; [INV]

  <bb 273> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.836_243 = function_assign_collect;
  D.252834 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.836_243, &ssa_var);

  <bb 274> :
  _244 = D.252834;
  retval.835 = _244 == 0B;
  if (retval.835 != 0)
    goto <bb 275>; [INV]
  else
    goto <bb 276>; [INV]

  <bb 275> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 279>; [INV]

  <bb 276> :
  function_assign_collect.837_245 = function_assign_collect;
  D.252835 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.837_245, &ssa_var);

  <bb 277> :
  _246 = D.252835;
  function_assign_array::operator= (&assign_array, _246);

  <bb 278> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 279> :
  assign_type.stmt = gc;
  ssa_var.838_247 = ssa_var;
  assign_type.assign_tree = ssa_var.838_247;
  D.252836 = cgraph_node::get_fun (node);

  <bb 280> :
  _248 = D.252836;
  _249 = _248->decl;
  assign_type.form_tree = _249;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 281> :
  function_assign_collect.839_250 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.839_250, &ssa_var, &assign_array);

  <bb 282> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 283> :
  getFunctionAssignRHS.840_251 = getFunctionAssignRHS;
  _252 = getFunctionAssignRHS.840_251->base.code;
  if (_252 == 36)
    goto <bb 284>; [INV]
  else
    goto <bb 296>; [INV]

  <bb 284> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.842_253 = function_assign_collect;
  D.252840 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.842_253, &getFunctionAssignRHS);

  <bb 285> :
  _254 = D.252840;
  retval.841 = _254 == 0B;
  if (retval.841 != 0)
    goto <bb 286>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 286> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 290>; [INV]

  <bb 287> :
  function_assign_collect.843_255 = function_assign_collect;
  D.252841 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.843_255, &getFunctionAssignRHS);

  <bb 288> :
  _256 = D.252841;
  function_assign_array::operator= (&assign_array, _256);

  <bb 289> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 290> :
  D.252842 = gimple_assign_lhs (gc);

  <bb 291> :
  function_return_lhstree = D.252842;
  assign_type.stmt = gc;
  D.252843 = gimple_assign_lhs (gc);

  <bb 292> :
  _257 = D.252843;
  assign_type.assign_tree = _257;
  D.252844 = cgraph_node::get_fun (node);

  <bb 293> :
  _258 = D.252844;
  _259 = _258->decl;
  assign_type.form_tree = _259;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 294> :
  function_assign_collect.844_260 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.844_260, &getFunctionAssignRHS, &assign_array);

  <bb 295> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 296> :
  getFunctionAssignRHS.845_261 = getFunctionAssignRHS;
  _262 = getFunctionAssignRHS.845_261->base.code;
  if (_262 == 49)
    goto <bb 297>; [INV]
  else
    goto <bb 308>; [INV]

  <bb 297> :
  getFunctionAssignRHS.846_263 = getFunctionAssignRHS;
  _264 = getFunctionAssignRHS.846_263->exp.operands[0];
  second = _264;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.848_265 = function_assign_collect;
  D.252848 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.848_265, &second);

  <bb 298> :
  _266 = D.252848;
  retval.847 = _266 == 0B;
  if (retval.847 != 0)
    goto <bb 299>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 299> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 303>; [INV]

  <bb 300> :
  function_assign_collect.849_267 = function_assign_collect;
  D.252849 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.849_267, &second);

  <bb 301> :
  _268 = D.252849;
  function_assign_array::operator= (&assign_array, _268);

  <bb 302> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 303> :
  assign_type.stmt = gc;
  D.252850 = gimple_assign_lhs (gc);

  <bb 304> :
  _269 = D.252850;
  assign_type.assign_tree = _269;
  D.252851 = cgraph_node::get_fun (node);

  <bb 305> :
  _270 = D.252851;
  _271 = _270->decl;
  assign_type.form_tree = _271;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 306> :
  function_assign_collect.850_272 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.850_272, &second, &assign_array);

  <bb 307> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 308> :
  ssa_var = {CLOBBER};

  <bb 309> :
  getFunctionAssignLHS.851_273 = getFunctionAssignLHS;
  _274 = getFunctionAssignLHS.851_273->base.code;
  if (_274 == 36)
    goto <bb 310>; [INV]
  else
    goto <bb 466>; [INV]

  <bb 310> :
  getFunctionAssignRHS.852_275 = getFunctionAssignRHS;
  _276 = getFunctionAssignRHS.852_275->base.code;
  if (_276 == 131)
    goto <bb 311>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 311> :
  getFunctionAssignRHS.853_277 = getFunctionAssignRHS;
  second = getFunctionAssignRHS.853_277->exp.operands[0];
  _278 = second->base.code;
  if (_278 == 36)
    goto <bb 312>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 312> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.855_279 = function_assign_collect;
  D.252856 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.855_279, &getFunctionAssignLHS);

  <bb 313> :
  _280 = D.252856;
  retval.854 = _280 == 0B;
  if (retval.854 != 0)
    goto <bb 314>; [INV]
  else
    goto <bb 315>; [INV]

  <bb 314> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 318>; [INV]

  <bb 315> :
  function_assign_collect.856_281 = function_assign_collect;
  D.252857 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.856_281, &getFunctionAssignLHS);

  <bb 316> :
  _282 = D.252857;
  function_assign_array::operator= (&assign_array, _282);

  <bb 317> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 318> :
  D.252858 = gimple_call_lhs (gc);

  <bb 319> :
  function_return_lhstree = D.252858;
  assign_type.stmt = gc;
  D.252859 = gimple_assign_lhs (gc);

  <bb 320> :
  _283 = D.252859;
  assign_type.assign_tree = _283;
  D.252860 = cgraph_node::get_fun (node);

  <bb 321> :
  _284 = D.252860;
  _285 = _284->decl;
  assign_type.form_tree = _285;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 322> :
  function_assign_collect.857_286 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.857_286, &getFunctionAssignLHS, &assign_array);

  <bb 323> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 337>; [INV]

  <bb 324> :
  getFunctionAssignRHS.858_287 = getFunctionAssignRHS;
  _288 = getFunctionAssignRHS.858_287->base.code;
  if (_288 == 153)
    goto <bb 325>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 325> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.860_289 = function_assign_collect;
  D.252864 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.860_289, &getFunctionAssignLHS);

  <bb 326> :
  _290 = D.252864;
  retval.859 = _290 == 0B;
  if (retval.859 != 0)
    goto <bb 327>; [INV]
  else
    goto <bb 328>; [INV]

  <bb 327> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 331>; [INV]

  <bb 328> :
  function_assign_collect.861_291 = function_assign_collect;
  D.252865 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.861_291, &getFunctionAssignLHS);

  <bb 329> :
  _292 = D.252865;
  function_assign_array::operator= (&assign_array, _292);

  <bb 330> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 331> :
  D.252866 = gimple_assign_rhs1 (gc);

  <bb 332> :
  function_return_lhstree = D.252866;
  assign_type.stmt = gc;
  D.252867 = gimple_assign_rhs1 (gc);

  <bb 333> :
  _293 = D.252867;
  assign_type.assign_tree = _293;
  D.252868 = cgraph_node::get_fun (node);

  <bb 334> :
  _294 = D.252868;
  _295 = _294->decl;
  assign_type.form_tree = _295;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 335> :
  function_assign_collect.862_296 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.862_296, &getFunctionAssignLHS, &assign_array);

  <bb 336> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 337> :
  getFunctionAssignLHS.863_297 = getFunctionAssignLHS;
  _298 = getFunctionAssignLHS.863_297->base.code;
  if (_298 == 165)
    goto <bb 338>; [INV]
  else
    goto <bb 373>; [INV]

  <bb 338> :
  D.252872 = gimple_assign_lhs (gc);

  <bb 339> :
  _299 = D.252872;
  first = _299->exp.operands[0];
  _300 = first->base.code;
  if (_300 == 131)
    goto <bb 340>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 340> :
  _301 = first->exp.operands[0];
  second = _301;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.865_302 = function_assign_collect;
  D.252873 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.865_302, &second);

  <bb 341> :
  _303 = D.252873;
  retval.864 = _303 == 0B;
  if (retval.864 != 0)
    goto <bb 342>; [INV]
  else
    goto <bb 343>; [INV]

  <bb 342> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 346>; [INV]

  <bb 343> :
  function_assign_collect.866_304 = function_assign_collect;
  D.252874 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.866_304, &second);

  <bb 344> :
  _305 = D.252874;
  function_assign_array::operator= (&assign_array, _305);

  <bb 345> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 346> :
  assign_type.stmt = gc;
  D.252875 = gimple_assign_lhs (gc);

  <bb 347> :
  _306 = D.252875;
  assign_type.assign_tree = _306;
  D.252876 = cgraph_node::get_fun (node);

  <bb 348> :
  _307 = D.252876;
  _308 = _307->decl;
  assign_type.form_tree = _308;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 349> :
  function_assign_collect.867_309 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.867_309, &second, &assign_array);

  <bb 350> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 351> :
  getFunctionAssignRHS.868_310 = getFunctionAssignRHS;
  _311 = getFunctionAssignRHS.868_310->base.code;
  if (_311 == 26)
    goto <bb 352>; [INV]
  else
    goto <bb 373>; [INV]

  <bb 352> :
  second = 0B;
  D.252880 = gimple_assign_lhs (gc);

  <bb 353> :
  _312 = D.252880;
  second = _312->exp.operands[0];
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  _313 = second->base.code;
  if (_313 == 153)
    goto <bb 354>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 354> :
  def_stmt = second->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 355>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 355> :
  retval.869 = is_gimple_assign (def_stmt);
  if (retval.869 != 0)
    goto <bb 356>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 356> :
  D.252881 = gimple_assign_rhs1 (def_stmt);

  <bb 357> :
  _314 = D.252881;
  _315 = _314->base.code;
  retval.870 = _315 == 36;
  if (retval.870 != 0)
    goto <bb 358>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 358> :
  function_assign_collect.872_316 = function_assign_collect;
  D.252882 = gimple_assign_rhs1 (def_stmt);

  <bb 359> :
  _317 = D.252882;
  D.195853 = _317;
  D.252883 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.872_316, &D.195853);

  <bb 360> :
  _318 = D.252883;
  retval.871 = _318 == 0B;
  D.195853 = {CLOBBER};
  if (retval.871 != 0)
    goto <bb 361>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 361> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 366>; [INV]

  <bb 362> :
  function_assign_collect.873_319 = function_assign_collect;
  D.252885 = gimple_assign_rhs1 (def_stmt);

  <bb 363> :
  _320 = D.252885;
  D.195854 = _320;
  D.252886 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.873_319, &D.195854);

  <bb 364> :
  _321 = D.252886;
  function_assign_array::operator= (&assign_array, _321);

  <bb 365> :
  D.195854 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 366> :
  assign_type.stmt = gc;
  D.252888 = gimple_assign_lhs (gc);

  <bb 367> :
  _322 = D.252888;
  assign_type.assign_tree = _322;
  D.252889 = cgraph_node::get_fun (node);

  <bb 368> :
  _323 = D.252889;
  _324 = _323->decl;
  assign_type.form_tree = _324;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 369> :
  function_assign_collect.874_325 = function_assign_collect;
  D.252890 = gimple_assign_rhs1 (def_stmt);

  <bb 370> :
  _326 = D.252890;
  D.195856 = _326;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.874_325, &D.195856, &assign_array);

  <bb 371> :
  D.195856 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 372> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 373> :
  getFunctionAssignRHS.875_327 = getFunctionAssignRHS;
  _328 = getFunctionAssignRHS.875_327->base.code;
  if (_328 == 165)
    goto <bb 374>; [INV]
  else
    goto <bb 386>; [INV]

  <bb 374> :
  getFunctionAssignRHS.876_329 = getFunctionAssignRHS;
  first = getFunctionAssignRHS.876_329->exp.operands[0];
  _330 = first->base.code;
  if (_330 == 131)
    goto <bb 375>; [INV]
  else
    goto <bb 386>; [INV]

  <bb 375> :
  _331 = first->exp.operands[0];
  second = _331;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.878_332 = function_assign_collect;
  D.252896 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.878_332, &second);

  <bb 376> :
  _333 = D.252896;
  retval.877 = _333 == 0B;
  if (retval.877 != 0)
    goto <bb 377>; [INV]
  else
    goto <bb 378>; [INV]

  <bb 377> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 381>; [INV]

  <bb 378> :
  function_assign_collect.879_334 = function_assign_collect;
  D.252897 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.879_334, &second);

  <bb 379> :
  _335 = D.252897;
  function_assign_array::operator= (&assign_array, _335);

  <bb 380> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 381> :
  assign_type.stmt = gc;
  D.252898 = gimple_assign_lhs (gc);

  <bb 382> :
  _336 = D.252898;
  assign_type.assign_tree = _336;
  D.252899 = cgraph_node::get_fun (node);

  <bb 383> :
  _337 = D.252899;
  _338 = _337->decl;
  assign_type.form_tree = _338;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 384> :
  function_assign_collect.880_339 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.880_339, &second, &assign_array);

  <bb 385> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 386> :
  getFunctionAssignRHS.881_340 = getFunctionAssignRHS;
  _341 = getFunctionAssignRHS.881_340->base.code;
  if (_341 == 49)
    goto <bb 387>; [INV]
  else
    goto <bb 398>; [INV]

  <bb 387> :
  getFunctionAssignRHS.882_342 = getFunctionAssignRHS;
  _343 = getFunctionAssignRHS.882_342->exp.operands[0];
  second = _343;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.884_344 = function_assign_collect;
  D.252903 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.884_344, &second);

  <bb 388> :
  _345 = D.252903;
  retval.883 = _345 == 0B;
  if (retval.883 != 0)
    goto <bb 389>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 389> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 393>; [INV]

  <bb 390> :
  function_assign_collect.885_346 = function_assign_collect;
  D.252904 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.885_346, &second);

  <bb 391> :
  _347 = D.252904;
  function_assign_array::operator= (&assign_array, _347);

  <bb 392> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 393> :
  assign_type.stmt = gc;
  D.252905 = gimple_assign_lhs (gc);

  <bb 394> :
  _348 = D.252905;
  assign_type.assign_tree = _348;
  D.252906 = cgraph_node::get_fun (node);

  <bb 395> :
  _349 = D.252906;
  _350 = _349->decl;
  assign_type.form_tree = _350;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 396> :
  function_assign_collect.886_351 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.886_351, &second, &assign_array);

  <bb 397> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 525>; [INV]

  <bb 398> :
  getFunctionAssignRHS.887_352 = getFunctionAssignRHS;
  _353 = getFunctionAssignRHS.887_352->base.code;
  if (_353 == 47)
    goto <bb 399>; [INV]
  else
    goto <bb 525>; [INV]

  <bb 399> :
  getFunctionAssignRHS.888_354 = getFunctionAssignRHS;
  _355 = getFunctionAssignRHS.888_354->exp.operands[0];
  second = _355;
  getFunctionAssignRHS.889_356 = getFunctionAssignRHS;
  _357 = getFunctionAssignRHS.889_356->exp.operands[1];
  second2 = _357;
  second.890_358 = second;
  if (second.890_358 != 0B)
    goto <bb 400>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 400> :
  second.891_359 = second;
  _360 = second.891_359->base.code;
  if (_360 == 165)
    goto <bb 401>; [INV]
  else
    goto <bb 420>; [INV]

  <bb 401> :
  second.892_361 = second;
  three = second.892_361->exp.operands[0];
  if (three != 0B)
    goto <bb 402>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 402> :
  _362 = three->base.code;
  if (_362 == 153)
    goto <bb 403>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 403> :
  def_stmt = three->ssa_name.def_stmt;
  retval.893 = is_gimple_assign (def_stmt);
  if (retval.893 != 0)
    goto <bb 404>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 404> :
  D.252910 = gimple_assign_rhs1 (def_stmt);

  <bb 405> :
  _363 = D.252910;
  _364 = _363->base.code;
  retval.894 = _364 == 36;
  if (retval.894 != 0)
    goto <bb 406>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 406> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.896_365 = function_assign_collect;
  D.252911 = gimple_assign_rhs1 (def_stmt);

  <bb 407> :
  _366 = D.252911;
  D.195872 = _366;
  D.252912 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.896_365, &D.195872);

  <bb 408> :
  _367 = D.252912;
  retval.895 = _367 == 0B;
  D.195872 = {CLOBBER};
  if (retval.895 != 0)
    goto <bb 409>; [INV]
  else
    goto <bb 410>; [INV]

  <bb 409> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 414>; [INV]

  <bb 410> :
  function_assign_collect.897_368 = function_assign_collect;
  D.252914 = gimple_assign_rhs1 (def_stmt);

  <bb 411> :
  _369 = D.252914;
  D.195873 = _369;
  D.252915 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.897_368, &D.195873);

  <bb 412> :
  _370 = D.252915;
  function_assign_array::operator= (&assign_array, _370);

  <bb 413> :
  D.195873 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 414> :
  assign_type.stmt = gc;
  D.252917 = gimple_assign_lhs (def_stmt);

  <bb 415> :
  _371 = D.252917;
  assign_type.assign_tree = _371;
  D.252918 = cgraph_node::get_fun (node);

  <bb 416> :
  _372 = D.252918;
  _373 = _372->decl;
  assign_type.form_tree = _373;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 417> :
  function_assign_collect.898_374 = function_assign_collect;
  D.252919 = gimple_assign_rhs1 (def_stmt);

  <bb 418> :
  _375 = D.252919;
  D.195875 = _375;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.898_374, &D.195875, &assign_array);

  <bb 419> :
  D.195875 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 453>; [INV]

  <bb 420> :
  second.899_376 = second;
  _377 = second.899_376->base.code;
  if (_377 == 36)
    goto <bb 421>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 421> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.901_378 = function_assign_collect;
  D.252924 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.901_378, &second);

  <bb 422> :
  _379 = D.252924;
  retval.900 = _379 == 0B;
  if (retval.900 != 0)
    goto <bb 423>; [INV]
  else
    goto <bb 424>; [INV]

  <bb 423> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 427>; [INV]

  <bb 424> :
  function_assign_collect.902_380 = function_assign_collect;
  D.252925 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.902_380, &second);

  <bb 425> :
  _381 = D.252925;
  function_assign_array::operator= (&assign_array, _381);

  <bb 426> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 427> :
  assign_type.stmt = gc;
  second.903_382 = second;
  assign_type.assign_tree = second.903_382;
  D.252926 = cgraph_node::get_fun (node);

  <bb 428> :
  _383 = D.252926;
  _384 = _383->decl;
  assign_type.form_tree = _384;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 429> :
  function_assign_collect.904_385 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.904_385, &second, &assign_array);

  <bb 430> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 453>; [INV]

  <bb 431> :
  second.905_386 = second;
  _387 = second.905_386->base.code;
  if (_387 == 47)
    goto <bb 432>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 432> :
  getFunctionAssignLHS.906_388 = getFunctionAssignLHS;
  three = getFunctionAssignLHS.906_388->exp.operands[0];
  if (three != 0B)
    goto <bb 433>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 433> :
  _389 = three->base.code;
  if (_389 == 165)
    goto <bb 434>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 434> :
  second.907_390 = second;
  four = second.907_390->exp.operands[0];
  if (four != 0B)
    goto <bb 435>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 435> :
  _391 = four->base.code;
  if (_391 == 153)
    goto <bb 436>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 436> :
  def_stmt = four->ssa_name.def_stmt;
  retval.908 = is_gimple_assign (def_stmt);
  if (retval.908 != 0)
    goto <bb 437>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 437> :
  D.252930 = gimple_assign_rhs1 (def_stmt);

  <bb 438> :
  _392 = D.252930;
  _393 = _392->base.code;
  retval.909 = _393 == 36;
  if (retval.909 != 0)
    goto <bb 439>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 439> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.911_394 = function_assign_collect;
  D.252931 = gimple_assign_rhs1 (def_stmt);

  <bb 440> :
  _395 = D.252931;
  D.195884 = _395;
  D.252932 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.911_394, &D.195884);

  <bb 441> :
  _396 = D.252932;
  retval.910 = _396 == 0B;
  D.195884 = {CLOBBER};
  if (retval.910 != 0)
    goto <bb 442>; [INV]
  else
    goto <bb 443>; [INV]

  <bb 442> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 447>; [INV]

  <bb 443> :
  function_assign_collect.912_397 = function_assign_collect;
  D.252934 = gimple_assign_rhs1 (def_stmt);

  <bb 444> :
  _398 = D.252934;
  D.195885 = _398;
  D.252935 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.912_397, &D.195885);

  <bb 445> :
  _399 = D.252935;
  function_assign_array::operator= (&assign_array, _399);

  <bb 446> :
  D.195885 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 447> :
  assign_type.stmt = gc;
  D.252937 = gimple_assign_lhs (def_stmt);

  <bb 448> :
  _400 = D.252937;
  assign_type.assign_tree = _400;
  D.252938 = cgraph_node::get_fun (node);

  <bb 449> :
  _401 = D.252938;
  _402 = _401->decl;
  assign_type.form_tree = _402;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 450> :
  function_assign_collect.913_403 = function_assign_collect;
  D.252939 = gimple_assign_rhs1 (def_stmt);

  <bb 451> :
  _404 = D.252939;
  D.195887 = _404;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.913_403, &D.195887, &assign_array);

  <bb 452> :
  D.195887 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 453> :
  second2.914_405 = second2;
  if (second2.914_405 != 0B)
    goto <bb 454>; [INV]
  else
    goto <bb 465>; [INV]

  <bb 454> :
  second2.915_406 = second2;
  _407 = second2.915_406->base.code;
  if (_407 == 35)
    goto <bb 455>; [INV]
  else
    goto <bb 465>; [INV]

  <bb 455> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.917_408 = function_assign_collect;
  D.252944 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.917_408, &second2);

  <bb 456> :
  _409 = D.252944;
  retval.916 = _409 == 0B;
  if (retval.916 != 0)
    goto <bb 457>; [INV]
  else
    goto <bb 458>; [INV]

  <bb 457> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 461>; [INV]

  <bb 458> :
  function_assign_collect.918_410 = function_assign_collect;
  D.252945 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.918_410, &second2);

  <bb 459> :
  _411 = D.252945;
  function_assign_array::operator= (&assign_array, _411);

  <bb 460> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 461> :
  assign_type.stmt = gc;
  getFunctionAssignRHS.919_412 = getFunctionAssignRHS;
  assign_type.assign_tree = getFunctionAssignRHS.919_412;
  D.252946 = cgraph_node::get_fun (node);

  <bb 462> :
  _413 = D.252946;
  _414 = _413->decl;
  assign_type.form_tree = _414;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 463> :
  function_assign_collect.920_415 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.920_415, &second2, &assign_array);

  <bb 464> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 465> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 525>; [INV]

  <bb 466> :
  getFunctionAssignLHS.921_416 = getFunctionAssignLHS;
  _417 = getFunctionAssignLHS.921_416->base.code;
  if (_417 == 47)
    goto <bb 467>; [INV]
  else
    goto <bb 512>; [INV]

  <bb 467> :
  getFunctionAssignLHS.922_418 = getFunctionAssignLHS;
  _419 = getFunctionAssignLHS.922_418->exp.operands[0];
  second = _419;
  getFunctionAssignLHS.923_420 = getFunctionAssignLHS;
  _421 = getFunctionAssignLHS.923_420->exp.operands[1];
  second2 = _421;
  second.924_422 = second;
  if (second.924_422 != 0B)
    goto <bb 468>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 468> :
  second.925_423 = second;
  _424 = second.925_423->base.code;
  if (_424 == 165)
    goto <bb 469>; [INV]
  else
    goto <bb 488>; [INV]

  <bb 469> :
  second.926_425 = second;
  three = second.926_425->exp.operands[0];
  if (three != 0B)
    goto <bb 470>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 470> :
  _426 = three->base.code;
  if (_426 == 153)
    goto <bb 471>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 471> :
  def_stmt = three->ssa_name.def_stmt;
  retval.927 = is_gimple_assign (def_stmt);
  if (retval.927 != 0)
    goto <bb 472>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 472> :
  D.252951 = gimple_assign_rhs1 (def_stmt);

  <bb 473> :
  _427 = D.252951;
  _428 = _427->base.code;
  retval.928 = _428 == 36;
  if (retval.928 != 0)
    goto <bb 474>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 474> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.930_429 = function_assign_collect;
  D.252952 = gimple_assign_rhs1 (def_stmt);

  <bb 475> :
  _430 = D.252952;
  D.195897 = _430;
  D.252953 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.930_429, &D.195897);

  <bb 476> :
  _431 = D.252953;
  retval.929 = _431 == 0B;
  D.195897 = {CLOBBER};
  if (retval.929 != 0)
    goto <bb 477>; [INV]
  else
    goto <bb 478>; [INV]

  <bb 477> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 482>; [INV]

  <bb 478> :
  function_assign_collect.931_432 = function_assign_collect;
  D.252955 = gimple_assign_rhs1 (def_stmt);

  <bb 479> :
  _433 = D.252955;
  D.195898 = _433;
  D.252956 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.931_432, &D.195898);

  <bb 480> :
  _434 = D.252956;
  function_assign_array::operator= (&assign_array, _434);

  <bb 481> :
  D.195898 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 482> :
  assign_type.stmt = gc;
  D.252958 = gimple_assign_lhs (def_stmt);

  <bb 483> :
  _435 = D.252958;
  assign_type.assign_tree = _435;
  D.252959 = cgraph_node::get_fun (node);

  <bb 484> :
  _436 = D.252959;
  _437 = _436->decl;
  assign_type.form_tree = _437;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 485> :
  function_assign_collect.932_438 = function_assign_collect;
  D.252960 = gimple_assign_rhs1 (def_stmt);

  <bb 486> :
  _439 = D.252960;
  D.195900 = _439;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.932_438, &D.195900, &assign_array);

  <bb 487> :
  D.195900 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 499>; [INV]

  <bb 488> :
  second.933_440 = second;
  _441 = second.933_440->base.code;
  if (_441 == 36)
    goto <bb 489>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 489> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.935_442 = function_assign_collect;
  D.252965 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.935_442, &second);

  <bb 490> :
  _443 = D.252965;
  retval.934 = _443 == 0B;
  if (retval.934 != 0)
    goto <bb 491>; [INV]
  else
    goto <bb 492>; [INV]

  <bb 491> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 495>; [INV]

  <bb 492> :
  function_assign_collect.936_444 = function_assign_collect;
  D.252966 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.936_444, &second);

  <bb 493> :
  _445 = D.252966;
  function_assign_array::operator= (&assign_array, _445);

  <bb 494> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 495> :
  assign_type.stmt = gc;
  second.937_446 = second;
  assign_type.assign_tree = second.937_446;
  D.252967 = cgraph_node::get_fun (node);

  <bb 496> :
  _447 = D.252967;
  _448 = _447->decl;
  assign_type.form_tree = _448;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 497> :
  function_assign_collect.938_449 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.938_449, &second, &assign_array);

  <bb 498> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 499> :
  second2.939_450 = second2;
  if (second2.939_450 != 0B)
    goto <bb 500>; [INV]
  else
    goto <bb 511>; [INV]

  <bb 500> :
  second2.940_451 = second2;
  _452 = second2.940_451->base.code;
  if (_452 == 35)
    goto <bb 501>; [INV]
  else
    goto <bb 511>; [INV]

  <bb 501> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.942_453 = function_assign_collect;
  D.252971 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.942_453, &second2);

  <bb 502> :
  _454 = D.252971;
  retval.941 = _454 == 0B;
  if (retval.941 != 0)
    goto <bb 503>; [INV]
  else
    goto <bb 504>; [INV]

  <bb 503> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 507>; [INV]

  <bb 504> :
  function_assign_collect.943_455 = function_assign_collect;
  D.252972 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.943_455, &second2);

  <bb 505> :
  _456 = D.252972;
  function_assign_array::operator= (&assign_array, _456);

  <bb 506> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 507> :
  assign_type.stmt = gc;
  getFunctionAssignLHS.944_457 = getFunctionAssignLHS;
  assign_type.assign_tree = getFunctionAssignLHS.944_457;
  D.252973 = cgraph_node::get_fun (node);

  <bb 508> :
  _458 = D.252973;
  _459 = _458->decl;
  assign_type.form_tree = _459;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 509> :
  function_assign_collect.945_460 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.945_460, &second2, &assign_array);

  <bb 510> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 511> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 525>; [INV]

  <bb 512> :
  getFunctionAssignLHS.946_461 = getFunctionAssignLHS;
  _462 = getFunctionAssignLHS.946_461->base.code;
  if (_462 == 49)
    goto <bb 513>; [INV]
  else
    goto <bb 525>; [INV]

  <bb 513> :
  debug_gimple_stmt (gc);

  <bb 514> :
  getFunctionAssignLHS.947_463 = getFunctionAssignLHS;
  _464 = getFunctionAssignLHS.947_463->exp.operands[0];
  second = _464;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.949_465 = function_assign_collect;
  D.252978 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.949_465, &second);

  <bb 515> :
  _466 = D.252978;
  retval.948 = _466 == 0B;
  if (retval.948 != 0)
    goto <bb 516>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 516> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 520>; [INV]

  <bb 517> :
  function_assign_collect.950_467 = function_assign_collect;
  D.252979 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.950_467, &second);

  <bb 518> :
  _468 = D.252979;
  function_assign_array::operator= (&assign_array, _468);

  <bb 519> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 520> :
  assign_type.stmt = gc;
  D.252980 = gimple_assign_rhs1 (gc);

  <bb 521> :
  _469 = D.252980;
  assign_type.assign_tree = _469;
  D.252981 = cgraph_node::get_fun (node);

  <bb 522> :
  _470 = D.252981;
  _471 = _470->decl;
  assign_type.form_tree = _471;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 523> :
  function_assign_collect.951_472 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.951_472, &second, &assign_array);

  <bb 524> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 525> :
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};

  <bb 526> :
<L381>:
  return;

  <bb 527> :
<L382>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 4

  <bb 528> :
<L383>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 529> :
<L384>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 2

  <bb 530> :
<L385>:
  second = {CLOBBER};
  resx 1

  <bb 531> :
<L386>:
  D.195386 = {CLOBBER};
  resx 16

  <bb 532> :
<L387>:
  D.195387 = {CLOBBER};
  resx 18

  <bb 533> :
<L388>:
  D.195389 = {CLOBBER};
  resx 20

  <bb 534> :
<L389>:
  assign_type = {CLOBBER};
  resx 15

  <bb 535> :
<L390>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 14

  <bb 536> :
<L391>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 13

  <bb 537> :
<L392>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 12

  <bb 538> :
<L393>:
  function_free_array::~function_free_array (&fun_array);
  resx 11

  <bb 539> :
<L394>:
  std::vector<free_type>::~vector (&free_type_array);
  resx 10

  <bb 540> :
<L395>:
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};
  resx 9

  <bb 541> :
<L396>:
  ret_type = {CLOBBER};
  resx 32

  <bb 542> :
<L397>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 31

  <bb 543> :
<L398>:
  function_return_array::~function_return_array (&fun_array);
  resx 30

  <bb 544> :
<L399>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 29

  <bb 545> :
<L400>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 39

  <bb 546> :
<L401>:
  function_return_array::~function_return_array (&fun_array);
  resx 38

  <bb 547> :
<L402>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  resx 37

  <bb 548> :
<L403>:
  assign_type = {CLOBBER};
  resx 46

  <bb 549> :
<L404>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 45

  <bb 550> :
<L405>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 44

  <bb 551> :
<L406>:
  getFunctionCallarg = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 43

  <bb 552> :
<L407>:
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  resx 53

  <bb 553> :
<L408>:
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  resx 52

  <bb 554> :
<L409>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  resx 51

  <bb 555> :
<L410>:
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  resx 59

  <bb 556> :
<L411>:
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  resx 58

  <bb 557> :
<L412>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  resx 57

  <bb 558> :
<L413>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 67

  <bb 559> :
<L414>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 66

  <bb 560> :
<L415>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 65

  <bb 561> :
<L416>:
  getVARDECLtree = {CLOBBER};
  resx 64

  <bb 562> :
<L417>:
  D.195800 = {CLOBBER};
  resx 75

  <bb 563> :
<L418>:
  D.195801 = {CLOBBER};
  resx 77

  <bb 564> :
<L419>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 74

  <bb 565> :
<L420>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 73

  <bb 566> :
<L421>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  resx 72

  <bb 567> :
<L422>:
  function_return_array::~function_return_array (&fun_array);
  resx 86

  <bb 568> :
<L423>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 85

  <bb 569> :
<L424>:
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 84

  <bb 570> :
<L425>:
  getreturnFucntionDecl = {CLOBBER};
  resx 63

  <bb 571> :
<L426>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 95

  <bb 572> :
<L427>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 94

  <bb 573> :
<L428>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 93

  <bb 574> :
<L429>:
  ssa_var = {CLOBBER};
  resx 92

  <bb 575> :
<L430>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 103

  <bb 576> :
<L431>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 102

  <bb 577> :
<L432>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 101

  <bb 578> :
<L433>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 109

  <bb 579> :
<L434>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 108

  <bb 580> :
<L435>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 107

  <bb 581> :
<L436>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 115

  <bb 582> :
<L437>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 114

  <bb 583> :
<L438>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 113

  <bb 584> :
<L439>:
  ssa_var = {CLOBBER};
  resx 100

  <bb 585> :
<L440>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 122

  <bb 586> :
<L441>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 121

  <bb 587> :
<L442>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 120

  <bb 588> :
<L443>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 128

  <bb 589> :
<L444>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 127

  <bb 590> :
<L445>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 126

  <bb 591> :
<L446>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 134

  <bb 592> :
<L447>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 133

  <bb 593> :
<L448>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 132

  <bb 594> :
<L449>:
  D.195853 = {CLOBBER};
  resx 142

  <bb 595> :
<L450>:
  D.195854 = {CLOBBER};
  resx 144

  <bb 596> :
<L451>:
  D.195856 = {CLOBBER};
  resx 146

  <bb 597> :
<L452>:
  assign_type = {CLOBBER};
  resx 141

  <bb 598> :
<L453>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 140

  <bb 599> :
<L454>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 139

  <bb 600> :
<L455>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 138

  <bb 601> :
<L456>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 154

  <bb 602> :
<L457>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 153

  <bb 603> :
<L458>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 152

  <bb 604> :
<L459>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 160

  <bb 605> :
<L460>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 159

  <bb 606> :
<L461>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 158

  <bb 607> :
<L462>:
  D.195872 = {CLOBBER};
  resx 168

  <bb 608> :
<L463>:
  D.195873 = {CLOBBER};
  resx 170

  <bb 609> :
<L464>:
  D.195875 = {CLOBBER};
  resx 172

  <bb 610> :
<L465>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 167

  <bb 611> :
<L466>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 166

  <bb 612> :
<L467>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 165

  <bb 613> :
<L468>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 179

  <bb 614> :
<L469>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 178

  <bb 615> :
<L470>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 177

  <bb 616> :
<L471>:
  D.195884 = {CLOBBER};
  resx 186

  <bb 617> :
<L472>:
  D.195885 = {CLOBBER};
  resx 188

  <bb 618> :
<L473>:
  D.195887 = {CLOBBER};
  resx 190

  <bb 619> :
<L474>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 185

  <bb 620> :
<L475>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 184

  <bb 621> :
<L476>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 183

  <bb 622> :
<L477>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 197

  <bb 623> :
<L478>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 196

  <bb 624> :
<L479>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 195

  <bb 625> :
<L480>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 164

  <bb 626> :
<L481>:
  D.195897 = {CLOBBER};
  resx 206

  <bb 627> :
<L482>:
  D.195898 = {CLOBBER};
  resx 208

  <bb 628> :
<L483>:
  D.195900 = {CLOBBER};
  resx 210

  <bb 629> :
<L484>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 205

  <bb 630> :
<L485>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 204

  <bb 631> :
<L486>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 203

  <bb 632> :
<L487>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 217

  <bb 633> :
<L488>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 216

  <bb 634> :
<L489>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 215

  <bb 635> :
<L490>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 223

  <bb 636> :
<L491>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 222

  <bb 637> :
<L492>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 221

  <bb 638> :
<L493>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 202

  <bb 639> :
<L494>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 230

  <bb 640> :
<L495>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 229

  <bb 641> :
<L496>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 228

  <bb 642> :
<L497>:
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  resx 91

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2Ev, funcdef_no=6382, decl_uid=173535, cgraph_uid=3357, symbol_order=4138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173543;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2Ev, funcdef_no=6380, decl_uid=172993, cgraph_uid=3354, symbol_order=4135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7745, decl_uid=172885, cgraph_uid=4377, symbol_order=5169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this);
  _1 = &this->D.172888;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2Ev, funcdef_no=8650, decl_uid=172663, cgraph_uid=5282, symbol_order=6078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2Ev, funcdef_no=9453, decl_uid=172592, cgraph_uid=6085, symbol_order=6881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2Ev, funcdef_no=6385, decl_uid=192883, cgraph_uid=3360, symbol_order=4141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::vector (_1);
  return;

}



;; Function function_free_array::operator= (_ZN19function_free_arrayaSERKS_, funcdef_no=6387, decl_uid=195339, cgraph_uid=3362, symbol_order=4143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_free_array & function_free_array::operator= (struct function_free_array * const this, const struct function_free_array & D.195340)
{
  struct function_free_array & D.252988;

  <bb 2> :
  _1 = &D.195340->free_type_array;
  _2 = &this->free_type_array;
  std::vector<free_type>::operator= (_2, _1);
  D.252988 = this;

  <bb 3> :
<L0>:
  return D.252988;

}



;; Function std::vector<free_type>::operator= (_ZNSt6vectorI9free_typeSaIS0_EEaSERKS2_, funcdef_no=7753, decl_uid=173121, cgraph_uid=4387, symbol_order=5179)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<free_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.253023;
  struct free_type * __tmp;
  const size_type __xlen;
  struct vector & D.253021;
  struct __normal_iterator D.253018;
  struct __normal_iterator D.253017;
  struct __normal_iterator D.253016;
  struct __normal_iterator D.253015;
  struct __normal_iterator D.253014;
  bool retval.956;
  struct __normal_iterator D.253009;
  struct __normal_iterator D.253008;
  bool retval.955;
  bool iftmp.954;
  bool retval.953;
  bool retval.952;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.952 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ();
  if (retval.952 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.173543;
  _4 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.173543;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.954 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.954 = 0;

  <bb 8> :
  retval.953 = iftmp.954;
  if (retval.953 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<free_type>::clear (this);
  _8 = &this->D.173543;
  _9 = this->D.173543._M_impl.D.172888._M_end_of_storage;
  _10 = this->D.173543._M_impl.D.172888._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.173543._M_impl.D.172888._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_8, _14, _13);
  this->D.173543._M_impl.D.172888._M_start = 0B;
  this->D.173543._M_impl.D.172888._M_finish = 0B;
  this->D.173543._M_impl.D.172888._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.173543;
  _16 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.173543;
  _18 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<free_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<free_type>::size (__x);
  _19 = std::vector<free_type>::capacity (this);
  retval.955 = __xlen > _19;
  if (retval.955 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.253008 = std::vector<free_type>::end (__x);
  D.253009 = std::vector<free_type>::begin (__x);
  D.253023 = std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (this, __xlen, D.253009, D.253008);
  __tmp = D.253023;
  _20 = &this->D.173543;
  _21 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.173543._M_impl.D.172888._M_finish;
  _23 = this->D.173543._M_impl.D.172888._M_start;
  std::_Destroy<free_type*, free_type> (_23, _22, _21);
  _24 = &this->D.173543;
  _25 = this->D.173543._M_impl.D.172888._M_end_of_storage;
  _26 = this->D.173543._M_impl.D.172888._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.173543._M_impl.D.172888._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_24, _30, _29);
  this->D.173543._M_impl.D.172888._M_start = __tmp;
  _31 = this->D.173543._M_impl.D.172888._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.173543._M_impl.D.172888._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<free_type>::size (this);
  retval.956 = __xlen <= _34;
  if (retval.956 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.173543;
  _36 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_35);
  D.253014 = std::vector<free_type>::end (this);
  D.253015 = std::vector<free_type>::begin (this);
  D.253016 = std::vector<free_type>::end (__x);
  D.253017 = std::vector<free_type>::begin (__x);
  D.253018 = std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.253017, D.253016, D.253015);
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (D.253018, D.253014, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.173543._M_impl.D.172888._M_start;
  _38 = __x->D.173543._M_impl.D.172888._M_start;
  _39 = std::vector<free_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.173543._M_impl.D.172888._M_start;
  std::copy<free_type*, free_type*> (_42, _41, _37);
  _43 = &this->D.173543;
  _44 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.173543._M_impl.D.172888._M_finish;
  _46 = __x->D.173543._M_impl.D.172888._M_finish;
  _47 = __x->D.173543._M_impl.D.172888._M_start;
  _48 = std::vector<free_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.173543._M_impl.D.172888._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.173543._M_impl.D.172888._M_finish = _53;

  <bb 17> :
  D.253021 = this;

  <bb 18> :
<L19>:
  return D.253021;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7754, decl_uid=172755, cgraph_uid=4385, symbol_order=5177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ()
{
  bool D.253024;

  <bb 2> :
  D.253024 = 0;

  <bb 3> :
<L0>:
  return D.253024;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E15_S_always_equalEv, funcdef_no=7755, decl_uid=172758, cgraph_uid=4386, symbol_order=5178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ()
{
  bool D.253026;

  <bb 2> :
  D.253026 = 1;

  <bb 3> :
<L0>:
  return D.253026;

}



;; Function std::operator!= (_ZStneRKSaI9free_typeES2_, funcdef_no=8659, decl_uid=172641, cgraph_uid=5291, symbol_order=6087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.225502, const struct allocator & D.225503)
{
  bool D.253028;

  <bb 2> :
  D.253028 = 0;

  <bb 3> :
<L0>:
  return D.253028;

}



;; Function std::vector<free_type>::clear (_ZNSt6vectorI9free_typeSaIS0_EE5clearEv, funcdef_no=8660, decl_uid=173273, cgraph_uid=5292, symbol_order=6088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.173543._M_impl.D.172888._M_start;
  std::vector<free_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<free_type>::_M_erase_at_end (_ZNSt6vectorI9free_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9456, decl_uid=173401, cgraph_uid=6088, symbol_order=6884)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<free_type>::_M_erase_at_end (struct vector * const this, struct free_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.173543._M_impl.D.172888._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.173543;
  _5 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.173543._M_impl.D.172888._M_finish;
  std::_Destroy<free_type*, free_type> (__pos, _6, _5);
  this->D.173543._M_impl.D.172888._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<free_type> > (_ZSt15__alloc_on_copyISaI9free_typeEEvRT_RKS2_, funcdef_no=8661, decl_uid=214033, cgraph_uid=5293, symbol_order=6089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<free_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<free_type>::capacity (_ZNKSt6vectorI9free_typeSaIS0_EE8capacityEv, funcdef_no=8662, decl_uid=173189, cgraph_uid=5294, symbol_order=6090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::capacity (const struct vector * const this)
{
  size_type D.253033;

  <bb 2> :
  _1 = this->D.173543._M_impl.D.172888._M_end_of_storage;
  _2 = this->D.173543._M_impl.D.172888._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.253033 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253033;

}



;; Function std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZNSt6vectorI9free_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8663, decl_uid=214040, cgraph_uid=5295, symbol_order=6091)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct free_type * std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct free_type * D.253037;
  struct free_type * __result;
  struct free_type * D.253035;

  <bb 2> :
  _1 = &this->D.173543;
  D.253037 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_1, __n);
  __result = D.253037;
  _2 = &this->D.173543;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (__first, __last, __result, _3);

  <bb 3> :
  D.253035 = __result;

  <bb 4> :
<L0>:
  return D.253035;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.173543;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<free_type>::end (_ZNSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8666, decl_uid=173156, cgraph_uid=5298, symbol_order=6094)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::end (struct vector * const this)
{
  struct iterator D.225589;
  struct iterator D.253041;

  <bb 2> :
  _1 = &this->D.173543._M_impl.D.172888._M_finish;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.225589, _1);
  D.253041 = D.225589;
  D.225589 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253041;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9459, decl_uid=214122, cgraph_uid=6091, symbol_order=6887)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8664, decl_uid=173152, cgraph_uid=5296, symbol_order=6092)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::begin (struct vector * const this)
{
  struct iterator D.225543;
  struct iterator D.253044;

  <bb 2> :
  _1 = &this->D.173543._M_impl.D.172888._M_start;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.225543, _1);
  D.253044 = D.225543;
  D.225543 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253044;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8665, decl_uid=214141, cgraph_uid=5297, symbol_order=6093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.253049;
  struct __normal_iterator D.253048;
  struct __normal_iterator D.253047;

  <bb 2> :
  D.253048 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__last);
  D.253049 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__first);
  D.253047 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.253049, D.253048, __result);

  <bb 3> :
<L0>:
  return D.253047;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9461, decl_uid=225555, cgraph_uid=6093, symbol_order=6889)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.253051;

  <bb 2> :
  D.253051 = __it;

  <bb 3> :
<L0>:
  return D.253051;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9462, decl_uid=225561, cgraph_uid=6095, symbol_order=6891)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct free_type * D.253055;
  struct __normal_iterator D.253053;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__result);
  _2 = std::__niter_base<const free_type*, std::vector<free_type> > (__last);
  _3 = std::__niter_base<const free_type*, std::vector<free_type> > (__first);
  D.253055 = std::__copy_move_a1<false, const free_type*, free_type*> (_3, _2, _1);
  _4 = D.253055;
  D.253053 = std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.253053;

}



;; Function std::__niter_base<free_type*, std::vector<free_type> > (_ZSt12__niter_baseIP9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10126, decl_uid=236538, cgraph_uid=6758, symbol_order=7558)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  struct free_type * D.253056;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__it);
  D.253056 = *_1;

  <bb 3> :
<L0>:
  return D.253056;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9473, decl_uid=214109, cgraph_uid=6105, symbol_order=6901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * const & __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  struct free_type * const & D.253058;

  <bb 2> :
  D.253058 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253058;

}



;; Function std::__niter_base<const free_type*, std::vector<free_type> > (_ZSt12__niter_baseIPK9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10125, decl_uid=236387, cgraph_uid=6757, symbol_order=7557)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * std::__niter_base<const free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  const struct free_type * D.253060;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (&__it);
  D.253060 = *_1;

  <bb 3> :
<L0>:
  return D.253060;

}



;; Function std::__copy_move_a1<false, const free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10127, decl_uid=236541, cgraph_uid=6759, symbol_order=7559)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253064;
  struct free_type * D.253062;

  <bb 2> :
  D.253064 = std::__copy_move_a2<false, const free_type*, free_type*> (__first, __last, __result);
  D.253062 = D.253064;

  <bb 3> :
<L0>:
  return D.253062;

}



;; Function std::__copy_move_a2<false, const free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10628, decl_uid=242239, cgraph_uid=7260, symbol_order=8060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253065;

  <bb 2> :
  D.253065 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253065;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI9free_typeEEPT_PKS4_S7_S5_, funcdef_no=10874, decl_uid=245596, cgraph_uid=7506, symbol_order=8308)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct free_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  const ptrdiff_t _Num;
  struct free_type * D.253070;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.957_2 = (long unsigned int) _Num;
  _3 = _Num.957_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.958_4 = (long unsigned int) _Num;
  _5 = _Num.958_4 * 24;
  D.253070 = __result + _5;

  <bb 5> :
<L3>:
  return D.253070;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10128, decl_uid=236545, cgraph_uid=6760, symbol_order=7560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __from, struct free_type * __res)
{
  struct __normal_iterator D.253072;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.253072 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.253072;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10629, decl_uid=214100, cgraph_uid=7261, symbol_order=8061)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct free_type * const D.245602;
  struct __normal_iterator D.245603;
  struct __normal_iterator D.253074;

  <bb 2> :
  _1 = this->_M_current;
  __n.959_2 = (long unsigned int) __n;
  _3 = __n.959_2 * 24;
  _4 = _1 + _3;
  D.245602 = _4;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.245603, &D.245602);
  D.253074 = D.245603;
  D.245603 = {CLOBBER};
  D.245602 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.253074;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8667, decl_uid=214147, cgraph_uid=5299, symbol_order=6095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.225592)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9464, decl_uid=225594, cgraph_uid=6096, symbol_order=6892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10129, decl_uid=236569, cgraph_uid=6761, symbol_order=7561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator D.242248, struct __normal_iterator D.242249)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<free_type*, free_type*> (_ZSt4copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=8668, decl_uid=214155, cgraph_uid=5300, symbol_order=6096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253080;
  struct free_type * D.253078;

  <bb 2> :
  _1 = std::__miter_base<free_type*> (__last);
  _2 = std::__miter_base<free_type*> (__first);
  D.253080 = std::__copy_move_a<false, free_type*, free_type*> (_2, _1, __result);
  D.253078 = D.253080;

  <bb 3> :
<L0>:
  return D.253078;

}



;; Function std::__miter_base<free_type*> (_ZSt12__miter_baseIP9free_typeET_S2_, funcdef_no=9465, decl_uid=225610, cgraph_uid=6097, symbol_order=6893)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__miter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.253081;

  <bb 2> :
  D.253081 = __it;

  <bb 3> :
<L0>:
  return D.253081;

}



;; Function std::__copy_move_a<false, free_type*, free_type*> (_ZSt13__copy_move_aILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=9466, decl_uid=225612, cgraph_uid=6098, symbol_order=6894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253085;
  struct free_type * D.253083;

  <bb 2> :
  __result.960_1 = __result;
  _2 = std::__niter_base<free_type*> (__result.960_1);
  _3 = std::__niter_base<free_type*> (__last);
  _4 = std::__niter_base<free_type*> (__first);
  D.253085 = std::__copy_move_a1<false, free_type*, free_type*> (_4, _3, _2);
  _5 = D.253085;
  D.253083 = std::__niter_wrap<free_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.253083;

}



;; Function std::__niter_base<free_type*> (_ZSt12__niter_baseIP9free_typeET_S2_, funcdef_no=10130, decl_uid=225821, cgraph_uid=6762, symbol_order=7562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.253086;

  <bb 2> :
  D.253086 = __it;

  <bb 3> :
<L0>:
  return D.253086;

}



;; Function std::__copy_move_a1<false, free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10131, decl_uid=236580, cgraph_uid=6763, symbol_order=7563)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253090;
  struct free_type * D.253088;

  <bb 2> :
  D.253090 = std::__copy_move_a2<false, free_type*, free_type*> (__first, __last, __result);
  D.253088 = D.253090;

  <bb 3> :
<L0>:
  return D.253088;

}



;; Function std::__copy_move_a2<false, free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10630, decl_uid=242257, cgraph_uid=7262, symbol_order=8062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253091;

  <bb 2> :
  D.253091 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253091;

}



;; Function std::__niter_wrap<free_type*> (_ZSt12__niter_wrapIP9free_typeET_RKS2_S2_, funcdef_no=10132, decl_uid=236584, cgraph_uid=6764, symbol_order=7564)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_wrap<free_type*> (struct free_type * const & D.242261, struct free_type * __res)
{
  struct free_type * D.253093;

  <bb 2> :
  D.253093 = __res;

  <bb 3> :
<L0>:
  return D.253093;

}



;; Function std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_ZSt22__uninitialized_copy_aIP9free_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8669, decl_uid=214159, cgraph_uid=5301, symbol_order=6097)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<free_type*, free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & D.225619)
{
  struct free_type * D.253097;
  struct free_type * D.253095;

  <bb 2> :
  D.253097 = std::uninitialized_copy<free_type*, free_type*> (__first, __last, __result);
  D.253095 = D.253097;

  <bb 3> :
<L0>:
  return D.253095;

}



;; Function std::uninitialized_copy<free_type*, free_type*> (_ZSt18uninitialized_copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=9467, decl_uid=225621, cgraph_uid=6099, symbol_order=6895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253100;
  const bool __assignable;
  struct free_type * D.253098;

  <bb 2> :
  __assignable = 1;
  D.253100 = std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (__first, __last, __result);
  D.253098 = D.253100;

  <bb 3> :
<L0>:
  return D.253098;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP9free_typeS3_EET0_T_S5_S4_, funcdef_no=10133, decl_uid=236618, cgraph_uid=6765, symbol_order=7565)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.253101;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, free_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.253101 = __cur;

  <bb 6> :
<L3>:
  return D.253101;

}



;; Function std::_Construct<free_type, free_type&> (_ZSt10_ConstructI9free_typeJRS0_EEvPT_DpOT0_, funcdef_no=10631, decl_uid=242269, cgraph_uid=7263, symbol_order=8063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, free_type&> (struct free_type * __p, struct free_type & __args#0)
{
  void * D.245622;
  void * D.245621;
  const struct free_type * D.245623;

  <bb 2> :
  D.245623 = std::forward<free_type&> (__args#0);
  D.245621 = __p;
  D.245622 = operator new (24, D.245621);
  MEM[(struct free_type *)D.245622] = *D.245623;
  return;

}



;; Function std::forward<free_type&> (_ZSt7forwardIR9free_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10875, decl_uid=245619, cgraph_uid=7507, symbol_order=8309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type&> (struct type & __t)
{
  struct free_type & D.253103;

  <bb 2> :
  D.253103 = __t;

  <bb 3> :
<L0>:
  return D.253103;

}



;; Function free_type::free_type (_ZN9free_typeC2Ev, funcdef_no=6389, decl_uid=195351, cgraph_uid=3364, symbol_order=4145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void free_type::free_type (struct free_type * const this)
{
  <bb 2> :
  this->Looserulesfree = 0;
  return;

}



;; Function std::vector<free_type>::push_back (_ZNSt6vectorI9free_typeSaIS0_EE9push_backERKS0_, funcdef_no=7756, decl_uid=173223, cgraph_uid=4389, symbol_order=5181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<free_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.253108;

  <bb 2> :
  _1 = this->D.173543._M_impl.D.172888._M_finish;
  _2 = this->D.173543._M_impl.D.172888._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.173543._M_impl.D.172888._M_finish;
  _4 = &this->D.173543._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_4, _3, __x);
  _5 = this->D.173543._M_impl.D.172888._M_finish;
  _6 = _5 + 24;
  this->D.173543._M_impl.D.172888._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253108 = std::vector<free_type>::end (this);
  std::vector<free_type>::_M_realloc_insert<const free_type&> (this, D.253108, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8670, decl_uid=214171, cgraph_uid=5302, symbol_order=6098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (struct allocator_type & __a, struct free_type * __p, const struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const free_type&> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9469, decl_uid=225638, cgraph_uid=6101, symbol_order=6897)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (struct new_allocator * const this, struct free_type * __p, const struct free_type & __args#0)
{
  void * D.236630;
  void * D.236629;
  const struct free_type * D.236631;

  <bb 2> :
  D.236631 = std::forward<const free_type&> (__args#0);
  D.236629 = __p;
  D.236630 = operator new (24, D.236629);
  MEM[(struct free_type *)D.236630] = *D.236631;
  return;

}



;; Function std::vector<free_type>::_M_realloc_insert<const free_type&> (_ZNSt6vectorI9free_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8671, decl_uid=214340, cgraph_uid=5306, symbol_order=6102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::_M_realloc_insert<const free_type&> (struct vector * const this, struct iterator __position, const struct free_type & __args#0)
{
  struct free_type * D.253113;
  const size_type D.253112;
  struct free_type * __new_finish;
  struct free_type * __new_start;
  const size_type __elems_before;
  struct free_type * __old_finish;
  struct free_type * __old_start;
  const size_type __len;
  struct iterator D.225649;

  <bb 2> :
  D.253112 = std::vector<free_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253112;
  __old_start = this->D.173543._M_impl.D.172888._M_start;
  __old_finish = this->D.173543._M_impl.D.172888._M_finish;
  D.225649 = std::vector<free_type>::begin (this);
  _1 = __gnu_cxx::operator-<free_type*, std::vector<free_type> > (&__position, &D.225649);
  __elems_before = (const size_type) _1;
  D.225649 = {CLOBBER};
  _2 = &this->D.173543;
  D.253113 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_2, __len);
  __new_start = D.253113;
  __new_finish = __new_start;
  _3 = std::forward<const free_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.173543._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.173543;
  _8 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<free_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.173543;
  _12 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<free_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.173543;
  _23 = this->D.173543._M_impl.D.172888._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.173543._M_impl.D.172888._M_start = __new_start;
  this->D.173543._M_impl.D.172888._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.173543._M_impl.D.172888._M_end_of_storage = _28;
  return;

}



;; Function std::vector<free_type>::_M_check_len (_ZNKSt6vectorI9free_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9470, decl_uid=173392, cgraph_uid=6102, symbol_order=6898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<free_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.963;
  size_type D.253117;
  const long unsigned int D.236636;
  bool retval.961;

  <bb 2> :
  _1 = std::vector<free_type>::max_size (this);
  _2 = std::vector<free_type>::size (this);
  _3 = _1 - _2;
  __n.962_4 = __n;
  retval.961 = _3 < __n.962_4;
  if (retval.961 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<free_type>::size (this);
  _6 = std::vector<free_type>::size (this);
  D.236636 = _6;
  _7 = std::max<long unsigned int> (&D.236636, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236636 = {CLOBBER};
  _9 = std::vector<free_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<free_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.963 = std::vector<free_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.963 = __len;

  <bb 8> :
  D.253117 = iftmp.963;

  <bb 9> :
<L6>:
  return D.253117;

}



;; Function std::vector<free_type>::max_size (_ZNKSt6vectorI9free_typeSaIS0_EE8max_sizeEv, funcdef_no=10134, decl_uid=173178, cgraph_uid=6766, symbol_order=7566)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::max_size (const struct vector * const this)
{
  size_type D.253124;

  <bb 2> :
  _1 = &this->D.173543;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  D.253124 = std::vector<free_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253124;

}



;; Function std::vector<free_type>::_S_max_size (_ZNSt6vectorI9free_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10632, decl_uid=173399, cgraph_uid=7264, symbol_order=8064)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253126;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<free_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253126 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253126;

}



;; Function std::allocator_traits<std::allocator<free_type> >::max_size (_ZNSt16allocator_traitsISaI9free_typeEE8max_sizeERKS1_, funcdef_no=10876, decl_uid=172713, cgraph_uid=7508, symbol_order=8310)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<free_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.253129;

  <bb 2> :
  D.253129 = __gnu_cxx::new_allocator<free_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253129;

}



;; Function __gnu_cxx::new_allocator<free_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE8max_sizeEv, funcdef_no=10983, decl_uid=172555, cgraph_uid=7615, symbol_order=8417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::max_size (const struct new_allocator * const this)
{
  size_type D.253131;

  <bb 2> :
  D.253131 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253131;

}



;; Function __gnu_cxx::operator-<free_type*, std::vector<free_type> > (_ZN9__gnu_cxxmiIP9free_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9471, decl_uid=225650, cgraph_uid=6103, symbol_order=6899)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253133;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253133 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.253133;

}



;; Function std::vector<free_type>::_S_relocate (_ZNSt6vectorI9free_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9472, decl_uid=173050, cgraph_uid=6104, symbol_order=6900)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253136;
  struct free_type * D.253135;

  <bb 2> :
  D.253135 = std::vector<free_type>::_S_do_relocate (__first, __last, __result, __alloc, D.253136);

  <bb 3> :
<L0>:
  return D.253135;

}



;; Function std::vector<free_type>::_S_do_relocate (_ZNSt6vectorI9free_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10135, decl_uid=173038, cgraph_uid=6767, symbol_order=7567)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_do_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242281)
{
  struct free_type * D.253138;

  <bb 2> :
  D.253138 = std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253138;

}



;; Function std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (_ZSt12__relocate_aIP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10633, decl_uid=225815, cgraph_uid=7265, symbol_order=8065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * D.253140;

  <bb 2> :
  _1 = std::__niter_base<free_type*> (__result);
  _2 = std::__niter_base<free_type*> (__last);
  _3 = std::__niter_base<free_type*> (__first);
  D.253140 = std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253140;

}



;; Function std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_ZSt14__relocate_a_1IP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10877, decl_uid=225966, cgraph_uid=7509, symbol_order=8311)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * __cur;
  struct free_type * D.253142;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__first);
  _2 = std::__addressof<free_type> (__cur);
  std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.253142 = __cur;

  <bb 6> :
<L3>:
  return D.253142;

}



;; Function std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_ZSt19__relocate_object_aI9free_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10984, decl_uid=225995, cgraph_uid=7616, symbol_order=8418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (struct free_type * restrict __dest, struct free_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<free_type&> (__orig);
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (__alloc, __dest, _1);
  _2 = std::__addressof<free_type> (__orig);
  std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (__alloc, _2);
  return;

}



;; Function std::move<free_type&> (_ZSt4moveIR9free_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11032, decl_uid=226007, cgraph_uid=7664, symbol_order=8466)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<free_type&> (struct free_type & __t)
{
  struct type & D.253144;

  <bb 2> :
  D.253144 = __t;

  <bb 3> :
<L0>:
  return D.253144;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11033, decl_uid=226009, cgraph_uid=7665, symbol_order=8467)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (struct allocator_type & __a, struct free_type * __p, struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<free_type> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (__a, __p, _1);
  return;

}



;; Function std::forward<free_type> (_ZSt7forwardI9free_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11054, decl_uid=247569, cgraph_uid=7686, symbol_order=8488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type> (struct type & __t)
{
  struct free_type & D.253146;

  <bb 2> :
  D.253146 = __t;

  <bb 3> :
<L0>:
  return D.253146;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11055, decl_uid=247571, cgraph_uid=7687, symbol_order=8489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (struct new_allocator * const this, struct free_type * __p, struct free_type & __args#0)
{
  void * D.247999;
  void * D.247998;
  struct free_type * D.248000;

  <bb 2> :
  D.248000 = std::forward<free_type> (__args#0);
  D.247998 = __p;
  D.247999 = operator new (24, D.247998);
  MEM[(struct free_type *)D.247999] = *D.248000;
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (_ZNSt16allocator_traitsISaI9free_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9474, decl_uid=226024, cgraph_uid=6106, symbol_order=6902)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (struct allocator_type & __a, struct free_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::destroy<free_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::destroy<free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE7destroyIS1_EEvPT_, funcdef_no=10136, decl_uid=236651, cgraph_uid=6768, symbol_order=7568)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::destroy<free_type> (struct new_allocator * const this, struct free_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::put (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7758, decl_uid=192549, cgraph_uid=4390, symbol_order=5182)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_free_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_free_array & v)
{
  bool D.253155;
  struct hash_entry * D.253154;
  unsigned int D.253153;
  bool ins;
  struct hash_entry * e;
  bool D.253151;
  void * D.214350;
  void * D.214349;

  <bb 2> :
  _1 = &this->m_table;
  D.253153 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.253153;
  D.253154 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.253154;
  D.253155 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (e);
  ins = D.253155;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214349 = &e->m_value;
  D.214350 = operator new (24, D.214349);
  function_free_array::function_free_array (D.214350, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_free_array::operator= (_4, v);

  <bb 5> :
  D.253151 = ~ins;

  <bb 6> :
<L3>:
  return D.253151;

  <bb 7> :
<L4>:
  operator delete (D.214350, D.214349);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8675, decl_uid=192707, cgraph_uid=5307, symbol_order=6103)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.253206;
  bool D.253205;
  bool D.253204;
  bool D.253203;
  bool D.253202;
  bool D.253201;
  struct value_type * D.253200;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.969;
  bool retval.968;
  bool retval.967;
  bool retval.966;
  bool retval.965;
  bool retval.964;
  struct value_type * D.253162;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.253201 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.964 = D.253201;
  if (retval.964 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.253202 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.965 = D.253202;
  if (retval.965 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.253203 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.966 = D.253203;
  if (retval.966 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.253162 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.253204 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.967 = D.253204;
  if (retval.967 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.253205 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.968 = D.253205;
  if (retval.968 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.253206 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.969 = D.253206;
  if (retval.969 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.253162 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.253162 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.253162 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.253162 = _37 + _39;

  <bb 27> :
<L37>:
  return D.253162;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9475, decl_uid=192788, cgraph_uid=6119, symbol_order=6915)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.253237;
  unsigned int D.253236;
  bool D.253235;
  bool D.253234;
  struct mem_alloc_description & D.253233;
  struct value_type * D.253232;
  unsigned int D.253231;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236674;
  void * D.236673;
  struct hash_entry & D.236711;
  bool iftmp.973;
  bool retval.972;
  bool iftmp.971;
  bool retval.970;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.971 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.971 = 0;

  <bb 6> :
  retval.970 = iftmp.971;
  if (retval.970 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.253231 = hash_table_higher_prime_index (_5);
  nindex = D.253231;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.253232 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.253232;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.253234 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.253234;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.253235 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.253235;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.973 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.973 = 0;

  <bb 15> :
  retval.972 = iftmp.973;
  if (retval.972 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.253236 = hash_map<tree_node*, function_free_array>::hash_entry::hash (x);
  _16 = D.253236;
  D.253237 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.253237;
  D.236711 = std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (x);
  D.236673 = q;
  D.236674 = operator new (32, D.236673);
  hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (D.236674, D.236711);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10137, decl_uid=192683, cgraph_uid=6769, symbol_order=7569)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.253238;

  <bb 2> :
  D.253238 = this->m_size;

  <bb 3> :
<L0>:
  return D.253238;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10138, decl_uid=192685, cgraph_uid=6770, symbol_order=7570)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.253240;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.253240 = _1 - _2;

  <bb 3> :
<L0>:
  return D.253240;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10139, decl_uid=192785, cgraph_uid=6771, symbol_order=7571)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.974;
  bool D.253242;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.974 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.974 = 0;

  <bb 6> :
  D.253242 = iftmp.974;

  <bb 7> :
<L4>:
  return D.253242;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9349, decl_uid=192775, cgraph_uid=5981, symbol_order=6777)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.253264;
  struct value_type * D.253263;
  struct mem_alloc_description & D.253262;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.253260;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253263 = xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (n);
  nentries = D.253263;
  goto <bb 6>; [INV]

  <bb 5> :
  D.253264 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (n);
  nentries = D.253264;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.253260 = nentries;

  <bb 9> :
<L14>:
  return D.253260;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10047, decl_uid=218393, cgraph_uid=6679, symbol_order=7479)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.253267;
  struct hash_entry * D.253265;

  <bb 2> :
  D.253267 = xcalloc (count, 32);
  D.253265 = D.253267;

  <bb 3> :
<L0>:
  return D.253265;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10048, decl_uid=235296, cgraph_uid=6680, symbol_order=7480)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.253274;
  struct hash_entry * D.253273;
  struct hash_entry * D.253271;
  bool retval.975;

  <bb 2> :
  retval.975 = need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ();
  if (retval.975 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.253273 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.253271 = D.253273;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.253274 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.253271 = D.253274;

  <bb 5> :
<L2>:
  return D.253271;

}



;; Function finalize<hash_map<tree_node*, function_free_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10566, decl_uid=241895, cgraph_uid=7201, symbol_order=8001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_free_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10568, decl_uid=245342, cgraph_uid=7199, symbol_order=7999)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_free_array::~function_free_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10565, decl_uid=241894, cgraph_uid=7197, symbol_order=7997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ()
{
  bool D.253275;

  <bb 2> :
  D.253275 = 1;

  <bb 3> :
<L0>:
  return D.253275;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10141, decl_uid=192608, cgraph_uid=6773, symbol_order=7573)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_free_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.253279;
  hashval_t D.253277;

  <bb 2> :
  _1 = &e->m_key;
  D.253279 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_1);
  D.253277 = D.253279;

  <bb 3> :
<L0>:
  return D.253277;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10140, decl_uid=192778, cgraph_uid=6772, symbol_order=7572)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.253292;
  bool D.253291;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.977;
  struct value_type * D.253283;
  bool retval.976;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.253291 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.976 = D.253291;
  if (retval.976 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253283 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.253292 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.977 = D.253292;
  if (retval.977 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.253283 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.253283;

}



;; Function std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10142, decl_uid=236671, cgraph_uid=6774, symbol_order=7574)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.253293;

  <bb 2> :
  D.253293 = __t;

  <bb 3> :
<L0>:
  return D.253293;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9486, decl_uid=236696, cgraph_uid=6117, symbol_order=6913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236698)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236698->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236698->m_value;
  function_free_array::function_free_array (_2, _3);
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2EOS_, funcdef_no=9484, decl_uid=192900, cgraph_uid=6114, symbol_order=6910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, struct function_free_array & D.192902)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192902->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9482, decl_uid=173500, cgraph_uid=6111, symbol_order=6907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this, struct vector & D.173502)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173543;
  _2 = &D.173502->D.173543;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9480, decl_uid=172968, cgraph_uid=6108, symbol_order=6904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.172970)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.172970->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10144, decl_uid=172874, cgraph_uid=6776, symbol_order=7576)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  std::allocator<free_type>::allocator (this, _1);
  _2 = &this->D.172888;
  _3 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.172888;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI9free_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10634, decl_uid=242311, cgraph_uid=7266, symbol_order=8066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.253295;

  <bb 2> :
  D.253295 = __t;

  <bb 3> :
<L0>:
  return D.253295;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10636, decl_uid=172830, cgraph_uid=7268, symbol_order=8068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8980, decl_uid=218395, cgraph_uid=5612, symbol_order=6408)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9488, decl_uid=192796, cgraph_uid=6120, symbol_order=6916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10146, decl_uid=192620, cgraph_uid=6778, symbol_order=7578)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10638, decl_uid=242326, cgraph_uid=7270, symbol_order=8070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2Ev, funcdef_no=6402, decl_uid=193755, cgraph_uid=3377, symbol_order=4158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6400, decl_uid=177757, cgraph_uid=3374, symbol_order=4155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177765;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6398, decl_uid=177215, cgraph_uid=3371, symbol_order=4152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7760, decl_uid=177107, cgraph_uid=4392, symbol_order=5184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this);
  _1 = &this->D.177110;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2Ev, funcdef_no=8678, decl_uid=176885, cgraph_uid=5310, symbol_order=6106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2Ev, funcdef_no=9490, decl_uid=176814, cgraph_uid=6122, symbol_order=6918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_detched_array::operator= (_ZN30function_pthread_detched_arrayaSERKS_, funcdef_no=6404, decl_uid=195558, cgraph_uid=3379, symbol_order=4160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_detched_array & function_pthread_detched_array::operator= (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.195559)
{
  struct function_pthread_detched_array & D.253298;

  <bb 2> :
  _1 = &D.195559->pthread_detched_array;
  _2 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::operator= (_2, _1);
  D.253298 = this;

  <bb 3> :
<L0>:
  return D.253298;

}



;; Function std::vector<pthread_detched_type>::operator= (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEaSERKS2_, funcdef_no=7768, decl_uid=177343, cgraph_uid=4402, symbol_order=5194)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_detched_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.253333;
  struct pthread_detched_type * __tmp;
  const size_type __xlen;
  struct vector & D.253331;
  struct __normal_iterator D.253328;
  struct __normal_iterator D.253327;
  struct __normal_iterator D.253326;
  struct __normal_iterator D.253325;
  struct __normal_iterator D.253324;
  bool retval.982;
  struct __normal_iterator D.253319;
  struct __normal_iterator D.253318;
  bool retval.981;
  bool iftmp.980;
  bool retval.979;
  bool retval.978;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.978 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ();
  if (retval.978 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.177765;
  _4 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.177765;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.980 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.980 = 0;

  <bb 8> :
  retval.979 = iftmp.980;
  if (retval.979 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_detched_type>::clear (this);
  _8 = &this->D.177765;
  _9 = this->D.177765._M_impl.D.177110._M_end_of_storage;
  _10 = this->D.177765._M_impl.D.177110._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.177765._M_impl.D.177110._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_8, _14, _13);
  this->D.177765._M_impl.D.177110._M_start = 0B;
  this->D.177765._M_impl.D.177110._M_finish = 0B;
  this->D.177765._M_impl.D.177110._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.177765;
  _16 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.177765;
  _18 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_detched_type>::size (__x);
  _19 = std::vector<pthread_detched_type>::capacity (this);
  retval.981 = __xlen > _19;
  if (retval.981 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.253318 = std::vector<pthread_detched_type>::end (__x);
  D.253319 = std::vector<pthread_detched_type>::begin (__x);
  D.253333 = std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (this, __xlen, D.253319, D.253318);
  __tmp = D.253333;
  _20 = &this->D.177765;
  _21 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.177765._M_impl.D.177110._M_finish;
  _23 = this->D.177765._M_impl.D.177110._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_23, _22, _21);
  _24 = &this->D.177765;
  _25 = this->D.177765._M_impl.D.177110._M_end_of_storage;
  _26 = this->D.177765._M_impl.D.177110._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.177765._M_impl.D.177110._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_24, _30, _29);
  this->D.177765._M_impl.D.177110._M_start = __tmp;
  _31 = this->D.177765._M_impl.D.177110._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.177765._M_impl.D.177110._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_detched_type>::size (this);
  retval.982 = __xlen <= _34;
  if (retval.982 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.177765;
  _36 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_35);
  D.253324 = std::vector<pthread_detched_type>::end (this);
  D.253325 = std::vector<pthread_detched_type>::begin (this);
  D.253326 = std::vector<pthread_detched_type>::end (__x);
  D.253327 = std::vector<pthread_detched_type>::begin (__x);
  D.253328 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.253327, D.253326, D.253325);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (D.253328, D.253324, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.177765._M_impl.D.177110._M_start;
  _38 = __x->D.177765._M_impl.D.177110._M_start;
  _39 = std::vector<pthread_detched_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.177765._M_impl.D.177110._M_start;
  std::copy<pthread_detched_type*, pthread_detched_type*> (_42, _41, _37);
  _43 = &this->D.177765;
  _44 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.177765._M_impl.D.177110._M_finish;
  _46 = __x->D.177765._M_impl.D.177110._M_finish;
  _47 = __x->D.177765._M_impl.D.177110._M_start;
  _48 = std::vector<pthread_detched_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.177765._M_impl.D.177110._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.177765._M_impl.D.177110._M_finish = _53;

  <bb 17> :
  D.253331 = this;

  <bb 18> :
<L19>:
  return D.253331;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7769, decl_uid=176977, cgraph_uid=4400, symbol_order=5192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ()
{
  bool D.253334;

  <bb 2> :
  D.253334 = 0;

  <bb 3> :
<L0>:
  return D.253334;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E15_S_always_equalEv, funcdef_no=7770, decl_uid=176980, cgraph_uid=4401, symbol_order=5193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ()
{
  bool D.253336;

  <bb 2> :
  D.253336 = 1;

  <bb 3> :
<L0>:
  return D.253336;

}



;; Function std::operator!= (_ZStneRKSaI20pthread_detched_typeES2_, funcdef_no=8687, decl_uid=176863, cgraph_uid=5319, symbol_order=6115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.226238, const struct allocator & D.226239)
{
  bool D.253338;

  <bb 2> :
  D.253338 = 0;

  <bb 3> :
<L0>:
  return D.253338;

}



;; Function std::vector<pthread_detched_type>::clear (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5clearEv, funcdef_no=8688, decl_uid=177495, cgraph_uid=5320, symbol_order=6116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.177765._M_impl.D.177110._M_start;
  std::vector<pthread_detched_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_detched_type>::_M_erase_at_end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9493, decl_uid=177623, cgraph_uid=6125, symbol_order=6921)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_detched_type>::_M_erase_at_end (struct vector * const this, struct pthread_detched_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.177765._M_impl.D.177110._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.177765;
  _5 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.177765._M_impl.D.177110._M_finish;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (__pos, _6, _5);
  this->D.177765._M_impl.D.177110._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_ZSt15__alloc_on_copyISaI20pthread_detched_typeEEvRT_RKS2_, funcdef_no=8689, decl_uid=214391, cgraph_uid=5321, symbol_order=6117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_detched_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_detched_type>::capacity (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8capacityEv, funcdef_no=8690, decl_uid=177411, cgraph_uid=5322, symbol_order=6118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::capacity (const struct vector * const this)
{
  size_type D.253343;

  <bb 2> :
  _1 = this->D.177765._M_impl.D.177110._M_end_of_storage;
  _2 = this->D.177765._M_impl.D.177110._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.253343 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253343;

}



;; Function std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8691, decl_uid=214398, cgraph_uid=5323, symbol_order=6119)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_detched_type * std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_detched_type * D.253347;
  struct pthread_detched_type * __result;
  struct pthread_detched_type * D.253345;

  <bb 2> :
  _1 = &this->D.177765;
  D.253347 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_1, __n);
  __result = D.253347;
  _2 = &this->D.177765;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (__first, __last, __result, _3);

  <bb 3> :
  D.253345 = __result;

  <bb 4> :
<L0>:
  return D.253345;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.177765;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_detched_type>::end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8694, decl_uid=177378, cgraph_uid=5326, symbol_order=6122)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::end (struct vector * const this)
{
  struct iterator D.226325;
  struct iterator D.253351;

  <bb 2> :
  _1 = &this->D.177765._M_impl.D.177110._M_finish;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.226325, _1);
  D.253351 = D.226325;
  D.226325 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253351;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9496, decl_uid=214480, cgraph_uid=6128, symbol_order=6924)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8692, decl_uid=177374, cgraph_uid=5324, symbol_order=6120)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::begin (struct vector * const this)
{
  struct iterator D.226279;
  struct iterator D.253354;

  <bb 2> :
  _1 = &this->D.177765._M_impl.D.177110._M_start;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.226279, _1);
  D.253354 = D.226279;
  D.226279 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253354;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8693, decl_uid=214499, cgraph_uid=5325, symbol_order=6121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.253359;
  struct __normal_iterator D.253358;
  struct __normal_iterator D.253357;

  <bb 2> :
  D.253358 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.253359 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.253357 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.253359, D.253358, __result);

  <bb 3> :
<L0>:
  return D.253357;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9499, decl_uid=226297, cgraph_uid=6132, symbol_order=6928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_detched_type * D.253363;
  struct __normal_iterator D.253361;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__result);
  _2 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.253363 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_3, _2, _1);
  _4 = D.253363;
  D.253361 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.253361;

}



;; Function std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIP20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10150, decl_uid=236894, cgraph_uid=6782, symbol_order=7582)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  struct pthread_detched_type * D.253364;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.253364 = *_1;

  <bb 3> :
<L0>:
  return D.253364;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9510, decl_uid=214467, cgraph_uid=6142, symbol_order=6938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_detched_type * const & D.253366;

  <bb 2> :
  D.253366 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253366;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10152, decl_uid=236901, cgraph_uid=6784, symbol_order=7584)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __from, struct pthread_detched_type * __res)
{
  struct __normal_iterator D.253368;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.253368 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.253368;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10643, decl_uid=214458, cgraph_uid=7275, symbol_order=8075)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_detched_type * const D.245674;
  struct __normal_iterator D.245675;
  struct __normal_iterator D.253370;

  <bb 2> :
  _1 = this->_M_current;
  __n.983_2 = (long unsigned int) __n;
  _3 = __n.983_2 * 16;
  _4 = _1 + _3;
  D.245674 = _4;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.245675, &D.245674);
  D.253370 = D.245675;
  D.245675 = {CLOBBER};
  D.245674 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.253370;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8695, decl_uid=214505, cgraph_uid=5327, symbol_order=6123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.226328)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9501, decl_uid=226330, cgraph_uid=6133, symbol_order=6929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10153, decl_uid=236925, cgraph_uid=6785, symbol_order=7585)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator D.242351, struct __normal_iterator D.242352)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_detched_type*, pthread_detched_type*> (_ZSt4copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=8696, decl_uid=214513, cgraph_uid=5328, symbol_order=6124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253376;
  struct pthread_detched_type * D.253374;

  <bb 2> :
  _1 = std::__miter_base<pthread_detched_type*> (__last);
  _2 = std::__miter_base<pthread_detched_type*> (__first);
  D.253376 = std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_2, _1, __result);
  D.253374 = D.253376;

  <bb 3> :
<L0>:
  return D.253374;

}



;; Function std::__miter_base<pthread_detched_type*> (_ZSt12__miter_baseIP20pthread_detched_typeET_S2_, funcdef_no=9502, decl_uid=226346, cgraph_uid=6134, symbol_order=6930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__miter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.253377;

  <bb 2> :
  D.253377 = __it;

  <bb 3> :
<L0>:
  return D.253377;

}



;; Function std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_ZSt13__copy_move_aILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=9503, decl_uid=226348, cgraph_uid=6135, symbol_order=6931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253381;
  struct pthread_detched_type * D.253379;

  <bb 2> :
  __result.984_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.984_1);
  _3 = std::__niter_base<pthread_detched_type*> (__last);
  _4 = std::__niter_base<pthread_detched_type*> (__first);
  D.253381 = std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.253381;
  D.253379 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.253379;

}



;; Function std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10155, decl_uid=236936, cgraph_uid=6787, symbol_order=7587)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253384;
  struct pthread_detched_type * D.253382;

  <bb 2> :
  D.253384 = std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253382 = D.253384;

  <bb 3> :
<L0>:
  return D.253382;

}



;; Function std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10644, decl_uid=242360, cgraph_uid=7276, symbol_order=8076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253385;

  <bb 2> :
  D.253385 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253385;

}



;; Function std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIP20pthread_detched_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8697, decl_uid=214517, cgraph_uid=5329, symbol_order=6125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.226355)
{
  struct pthread_detched_type * D.253389;
  struct pthread_detched_type * D.253387;

  <bb 2> :
  D.253389 = std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253387 = D.253389;

  <bb 3> :
<L0>:
  return D.253387;

}



;; Function std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (_ZSt18uninitialized_copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=9504, decl_uid=226357, cgraph_uid=6136, symbol_order=6932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253392;
  const bool __assignable;
  struct pthread_detched_type * D.253390;

  <bb 2> :
  __assignable = 1;
  D.253392 = std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253390 = D.253392;

  <bb 3> :
<L0>:
  return D.253390;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP20pthread_detched_typeS3_EET0_T_S5_S4_, funcdef_no=10157, decl_uid=236974, cgraph_uid=6789, symbol_order=7589)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253395;
  struct pthread_detched_type * D.253393;

  <bb 2> :
  D.253395 = std::copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253393 = D.253395;

  <bb 3> :
<L0>:
  return D.253393;

}



;; Function std::vector<pthread_detched_type>::push_back (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE9push_backERKS0_, funcdef_no=7771, decl_uid=177445, cgraph_uid=4404, symbol_order=5196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_detched_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.253399;

  <bb 2> :
  _1 = this->D.177765._M_impl.D.177110._M_finish;
  _2 = this->D.177765._M_impl.D.177110._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.177765._M_impl.D.177110._M_finish;
  _4 = &this->D.177765._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_4, _3, __x);
  _5 = this->D.177765._M_impl.D.177110._M_finish;
  _6 = _5 + 16;
  this->D.177765._M_impl.D.177110._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253399 = std::vector<pthread_detched_type>::end (this);
  std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (this, D.253399, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8698, decl_uid=214529, cgraph_uid=5330, symbol_order=6126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (struct allocator_type & __a, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_detched_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_detched_type&> (_ZSt7forwardIRK20pthread_detched_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9505, decl_uid=226372, cgraph_uid=6137, symbol_order=6933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_detched_type & std::forward<const pthread_detched_type&> (const struct type & __t)
{
  const struct pthread_detched_type & D.253400;

  <bb 2> :
  D.253400 = __t;

  <bb 3> :
<L0>:
  return D.253400;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9506, decl_uid=226374, cgraph_uid=6138, symbol_order=6934)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (struct new_allocator * const this, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  void * D.236986;
  void * D.236985;
  const struct pthread_detched_type * D.236987;

  <bb 2> :
  D.236987 = std::forward<const pthread_detched_type&> (__args#0);
  D.236985 = __p;
  D.236986 = operator new (16, D.236985);
  MEM[(struct pthread_detched_type *)D.236986] = *D.236987;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8699, decl_uid=214698, cgraph_uid=5334, symbol_order=6130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (struct vector * const this, struct iterator __position, const struct pthread_detched_type & __args#0)
{
  struct pthread_detched_type * D.253406;
  const size_type D.253405;
  struct pthread_detched_type * __new_finish;
  struct pthread_detched_type * __new_start;
  const size_type __elems_before;
  struct pthread_detched_type * __old_finish;
  struct pthread_detched_type * __old_start;
  const size_type __len;
  struct iterator D.226385;

  <bb 2> :
  D.253405 = std::vector<pthread_detched_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253405;
  __old_start = this->D.177765._M_impl.D.177110._M_start;
  __old_finish = this->D.177765._M_impl.D.177110._M_finish;
  D.226385 = std::vector<pthread_detched_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (&__position, &D.226385);
  __elems_before = (const size_type) _1;
  D.226385 = {CLOBBER};
  _2 = &this->D.177765;
  D.253406 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_2, __len);
  __new_start = D.253406;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_detched_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.177765._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.177765;
  _8 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.177765;
  _12 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.177765;
  _23 = this->D.177765._M_impl.D.177110._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.177765._M_impl.D.177110._M_start = __new_start;
  this->D.177765._M_impl.D.177110._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.177765._M_impl.D.177110._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_check_len (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9507, decl_uid=177614, cgraph_uid=6139, symbol_order=6935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_detched_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.987;
  size_type D.253410;
  const long unsigned int D.236992;
  bool retval.985;

  <bb 2> :
  _1 = std::vector<pthread_detched_type>::max_size (this);
  _2 = std::vector<pthread_detched_type>::size (this);
  _3 = _1 - _2;
  __n.986_4 = __n;
  retval.985 = _3 < __n.986_4;
  if (retval.985 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_detched_type>::size (this);
  _6 = std::vector<pthread_detched_type>::size (this);
  D.236992 = _6;
  _7 = std::max<long unsigned int> (&D.236992, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236992 = {CLOBBER};
  _9 = std::vector<pthread_detched_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_detched_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.987 = std::vector<pthread_detched_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.987 = __len;

  <bb 8> :
  D.253410 = iftmp.987;

  <bb 9> :
<L6>:
  return D.253410;

}



;; Function std::vector<pthread_detched_type>::max_size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8max_sizeEv, funcdef_no=10158, decl_uid=177400, cgraph_uid=6790, symbol_order=7590)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::max_size (const struct vector * const this)
{
  size_type D.253417;

  <bb 2> :
  _1 = &this->D.177765;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  D.253417 = std::vector<pthread_detched_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253417;

}



;; Function std::vector<pthread_detched_type>::_S_max_size (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10645, decl_uid=177621, cgraph_uid=7277, symbol_order=8077)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253419;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253419 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253419;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8max_sizeERKS1_, funcdef_no=10879, decl_uid=176935, cgraph_uid=7511, symbol_order=8313)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.253422;

  <bb 2> :
  D.253422 = __gnu_cxx::new_allocator<pthread_detched_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253422;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE8max_sizeEv, funcdef_no=10985, decl_uid=176777, cgraph_uid=7617, symbol_order=8419)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::max_size (const struct new_allocator * const this)
{
  size_type D.253424;

  <bb 2> :
  D.253424 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253424;

}



;; Function __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZN9__gnu_cxxmiIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9508, decl_uid=226386, cgraph_uid=6140, symbol_order=6936)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253426;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253426 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.253426;

}



;; Function std::vector<pthread_detched_type>::_S_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9509, decl_uid=177272, cgraph_uid=6141, symbol_order=6937)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253429;
  struct pthread_detched_type * D.253428;

  <bb 2> :
  D.253428 = std::vector<pthread_detched_type>::_S_do_relocate (__first, __last, __result, __alloc, D.253429);

  <bb 3> :
<L0>:
  return D.253428;

}



;; Function std::vector<pthread_detched_type>::_S_do_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10159, decl_uid=177260, cgraph_uid=6791, symbol_order=7591)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_do_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242376)
{
  struct pthread_detched_type * D.253431;

  <bb 2> :
  D.253431 = std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253431;

}



;; Function std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (_ZSt12__relocate_aIP20pthread_detched_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10646, decl_uid=226551, cgraph_uid=7278, symbol_order=8078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & __alloc)
{
  struct pthread_detched_type * D.253433;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*> (__result);
  _2 = std::__niter_base<pthread_detched_type*> (__last);
  _3 = std::__niter_base<pthread_detched_type*> (__first);
  D.253433 = std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253433;

}



;; Function std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_ZSt14__relocate_a_1I20pthread_detched_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10880, decl_uid=226725, cgraph_uid=7512, symbol_order=8314)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.246792)
{
  ptrdiff_t __count;
  struct pthread_detched_type * D.253438;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.988_2 = (long unsigned int) __count;
  _3 = __count.988_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.989_4 = (long unsigned int) __count;
  _5 = __count.989_4 * 16;
  D.253438 = __result + _5;

  <bb 5> :
<L3>:
  return D.253438;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::put (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7773, decl_uid=193421, cgraph_uid=4405, symbol_order=5197)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_detched_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_detched_array & v)
{
  bool D.253447;
  struct hash_entry * D.253446;
  unsigned int D.253445;
  bool ins;
  struct hash_entry * e;
  bool D.253443;
  void * D.214708;
  void * D.214707;

  <bb 2> :
  _1 = &this->m_table;
  D.253445 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.253445;
  D.253446 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.253446;
  D.253447 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (e);
  ins = D.253447;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214707 = &e->m_value;
  D.214708 = operator new (24, D.214707);
  function_pthread_detched_array::function_pthread_detched_array (D.214708, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_detched_array::operator= (_4, v);

  <bb 5> :
  D.253443 = ~ins;

  <bb 6> :
<L3>:
  return D.253443;

  <bb 7> :
<L4>:
  operator delete (D.214708, D.214707);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8703, decl_uid=193579, cgraph_uid=5335, symbol_order=6131)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.253498;
  bool D.253497;
  bool D.253496;
  bool D.253495;
  bool D.253494;
  bool D.253493;
  struct value_type * D.253492;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.995;
  bool retval.994;
  bool retval.993;
  bool retval.992;
  bool retval.991;
  bool retval.990;
  struct value_type * D.253454;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.253493 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.990 = D.253493;
  if (retval.990 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.253494 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.991 = D.253494;
  if (retval.991 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.253495 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.992 = D.253495;
  if (retval.992 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.253454 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.253496 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.993 = D.253496;
  if (retval.993 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.253497 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.994 = D.253497;
  if (retval.994 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.253498 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.995 = D.253498;
  if (retval.995 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.253454 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.253454 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.253454 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.253454 = _37 + _39;

  <bb 27> :
<L37>:
  return D.253454;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9512, decl_uid=193660, cgraph_uid=6156, symbol_order=6952)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.253529;
  unsigned int D.253528;
  bool D.253527;
  bool D.253526;
  struct mem_alloc_description & D.253525;
  struct value_type * D.253524;
  unsigned int D.253523;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.237030;
  void * D.237029;
  struct hash_entry & D.237067;
  bool iftmp.999;
  bool retval.998;
  bool iftmp.997;
  bool retval.996;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.997 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.997 = 0;

  <bb 6> :
  retval.996 = iftmp.997;
  if (retval.996 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.253523 = hash_table_higher_prime_index (_5);
  nindex = D.253523;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.253524 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.253524;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.253526 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.253526;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.253527 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.253527;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.999 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.999 = 0;

  <bb 15> :
  retval.998 = iftmp.999;
  if (retval.998 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.253528 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (x);
  _16 = D.253528;
  D.253529 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.253529;
  D.237067 = std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (x);
  D.237029 = q;
  D.237030 = operator new (32, D.237029);
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (D.237030, D.237067);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10161, decl_uid=193555, cgraph_uid=6793, symbol_order=7593)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.253530;

  <bb 2> :
  D.253530 = this->m_size;

  <bb 3> :
<L0>:
  return D.253530;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10162, decl_uid=193557, cgraph_uid=6794, symbol_order=7594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.253532;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.253532 = _1 - _2;

  <bb 3> :
<L0>:
  return D.253532;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10163, decl_uid=193657, cgraph_uid=6795, symbol_order=7595)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1000;
  bool D.253534;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1000 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1000 = 0;

  <bb 6> :
  D.253534 = iftmp.1000;

  <bb 7> :
<L4>:
  return D.253534;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9368, decl_uid=193647, cgraph_uid=6000, symbol_order=6796)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.253556;
  struct value_type * D.253555;
  struct mem_alloc_description & D.253554;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.253552;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253555 = xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (n);
  nentries = D.253555;
  goto <bb 6>; [INV]

  <bb 5> :
  D.253556 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (n);
  nentries = D.253556;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.253552 = nentries;

  <bb 9> :
<L14>:
  return D.253552;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10067, decl_uid=218321, cgraph_uid=6699, symbol_order=7499)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.253559;
  struct hash_entry * D.253557;

  <bb 2> :
  D.253559 = xcalloc (count, 32);
  D.253557 = D.253559;

  <bb 3> :
<L0>:
  return D.253557;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10068, decl_uid=235536, cgraph_uid=6700, symbol_order=7500)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.253566;
  struct hash_entry * D.253565;
  struct hash_entry * D.253563;
  bool retval.1001;

  <bb 2> :
  retval.1001 = need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ();
  if (retval.1001 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.253565 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.253563 = D.253565;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.253566 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.253563 = D.253566;

  <bb 5> :
<L2>:
  return D.253563;

}



;; Function finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10583, decl_uid=241987, cgraph_uid=7218, symbol_order=8018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10585, decl_uid=245396, cgraph_uid=7216, symbol_order=8016)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10582, decl_uid=241986, cgraph_uid=7214, symbol_order=8014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ()
{
  bool D.253567;

  <bb 2> :
  D.253567 = 1;

  <bb 3> :
<L0>:
  return D.253567;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10165, decl_uid=193480, cgraph_uid=6797, symbol_order=7597)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.253571;
  hashval_t D.253569;

  <bb 2> :
  _1 = &e->m_key;
  D.253571 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_1);
  D.253569 = D.253571;

  <bb 3> :
<L0>:
  return D.253569;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10164, decl_uid=193650, cgraph_uid=6796, symbol_order=7596)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.253584;
  bool D.253583;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1003;
  struct value_type * D.253575;
  bool retval.1002;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.253583 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1002 = D.253583;
  if (retval.1002 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253575 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.253584 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1003 = D.253584;
  if (retval.1003 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.253575 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.253575;

}



;; Function std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10166, decl_uid=237027, cgraph_uid=6798, symbol_order=7598)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.253585;

  <bb 2> :
  D.253585 = __t;

  <bb 3> :
<L0>:
  return D.253585;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9523, decl_uid=237052, cgraph_uid=6154, symbol_order=6950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.237054)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.237054->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.237054->m_value;
  function_pthread_detched_array::function_pthread_detched_array (_2, _3);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2EOS_, funcdef_no=9521, decl_uid=193772, cgraph_uid=6151, symbol_order=6947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, struct function_pthread_detched_array & D.193774)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193774->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9519, decl_uid=177722, cgraph_uid=6148, symbol_order=6944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this, struct vector & D.177724)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177765;
  _2 = &D.177724->D.177765;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9517, decl_uid=177190, cgraph_uid=6145, symbol_order=6941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.177192)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.177192->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10168, decl_uid=177096, cgraph_uid=6800, symbol_order=7600)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_detched_type>::allocator (this, _1);
  _2 = &this->D.177110;
  _3 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.177110;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI20pthread_detched_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10647, decl_uid=242406, cgraph_uid=7279, symbol_order=8079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.253587;

  <bb 2> :
  D.253587 = __t;

  <bb 3> :
<L0>:
  return D.253587;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10649, decl_uid=177052, cgraph_uid=7281, symbol_order=8081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8968, decl_uid=218323, cgraph_uid=5600, symbol_order=6396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9525, decl_uid=193668, cgraph_uid=6157, symbol_order=6953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10170, decl_uid=193492, cgraph_uid=6802, symbol_order=7602)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10651, decl_uid=242421, cgraph_uid=7283, symbol_order=8083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2Ev, funcdef_no=6416, decl_uid=194231, cgraph_uid=3391, symbol_order=4172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6414, decl_uid=178802, cgraph_uid=3388, symbol_order=4169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178810;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6412, decl_uid=178260, cgraph_uid=3385, symbol_order=4166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7775, decl_uid=178152, cgraph_uid=4407, symbol_order=5199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this);
  _1 = &this->D.178155;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2Ev, funcdef_no=8706, decl_uid=177930, cgraph_uid=5338, symbol_order=6134)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2Ev, funcdef_no=9527, decl_uid=177859, cgraph_uid=6159, symbol_order=6955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_exit_array::operator= (_ZN27function_pthread_exit_arrayaSERKS_, funcdef_no=6418, decl_uid=195751, cgraph_uid=3393, symbol_order=4174)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_exit_array & function_pthread_exit_array::operator= (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.195752)
{
  struct function_pthread_exit_array & D.253590;

  <bb 2> :
  _1 = &D.195752->pthread_exit_array;
  _2 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::operator= (_2, _1);
  D.253590 = this;

  <bb 3> :
<L0>:
  return D.253590;

}



;; Function std::vector<pthread_exit_type>::operator= (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEaSERKS2_, funcdef_no=7783, decl_uid=178388, cgraph_uid=4417, symbol_order=5209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_exit_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.253625;
  struct pthread_exit_type * __tmp;
  const size_type __xlen;
  struct vector & D.253623;
  struct __normal_iterator D.253620;
  struct __normal_iterator D.253619;
  struct __normal_iterator D.253618;
  struct __normal_iterator D.253617;
  struct __normal_iterator D.253616;
  bool retval.1008;
  struct __normal_iterator D.253611;
  struct __normal_iterator D.253610;
  bool retval.1007;
  bool iftmp.1006;
  bool retval.1005;
  bool retval.1004;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1004 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ();
  if (retval.1004 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.178810;
  _4 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.178810;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1006 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1006 = 0;

  <bb 8> :
  retval.1005 = iftmp.1006;
  if (retval.1005 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_exit_type>::clear (this);
  _8 = &this->D.178810;
  _9 = this->D.178810._M_impl.D.178155._M_end_of_storage;
  _10 = this->D.178810._M_impl.D.178155._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.178810._M_impl.D.178155._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_8, _14, _13);
  this->D.178810._M_impl.D.178155._M_start = 0B;
  this->D.178810._M_impl.D.178155._M_finish = 0B;
  this->D.178810._M_impl.D.178155._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.178810;
  _16 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.178810;
  _18 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_exit_type>::size (__x);
  _19 = std::vector<pthread_exit_type>::capacity (this);
  retval.1007 = __xlen > _19;
  if (retval.1007 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.253610 = std::vector<pthread_exit_type>::end (__x);
  D.253611 = std::vector<pthread_exit_type>::begin (__x);
  D.253625 = std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (this, __xlen, D.253611, D.253610);
  __tmp = D.253625;
  _20 = &this->D.178810;
  _21 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.178810._M_impl.D.178155._M_finish;
  _23 = this->D.178810._M_impl.D.178155._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_23, _22, _21);
  _24 = &this->D.178810;
  _25 = this->D.178810._M_impl.D.178155._M_end_of_storage;
  _26 = this->D.178810._M_impl.D.178155._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.178810._M_impl.D.178155._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_24, _30, _29);
  this->D.178810._M_impl.D.178155._M_start = __tmp;
  _31 = this->D.178810._M_impl.D.178155._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.178810._M_impl.D.178155._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_exit_type>::size (this);
  retval.1008 = __xlen <= _34;
  if (retval.1008 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.178810;
  _36 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_35);
  D.253616 = std::vector<pthread_exit_type>::end (this);
  D.253617 = std::vector<pthread_exit_type>::begin (this);
  D.253618 = std::vector<pthread_exit_type>::end (__x);
  D.253619 = std::vector<pthread_exit_type>::begin (__x);
  D.253620 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.253619, D.253618, D.253617);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (D.253620, D.253616, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.178810._M_impl.D.178155._M_start;
  _38 = __x->D.178810._M_impl.D.178155._M_start;
  _39 = std::vector<pthread_exit_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.178810._M_impl.D.178155._M_start;
  std::copy<pthread_exit_type*, pthread_exit_type*> (_42, _41, _37);
  _43 = &this->D.178810;
  _44 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.178810._M_impl.D.178155._M_finish;
  _46 = __x->D.178810._M_impl.D.178155._M_finish;
  _47 = __x->D.178810._M_impl.D.178155._M_start;
  _48 = std::vector<pthread_exit_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.178810._M_impl.D.178155._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.178810._M_impl.D.178155._M_finish = _53;

  <bb 17> :
  D.253623 = this;

  <bb 18> :
<L19>:
  return D.253623;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7784, decl_uid=178022, cgraph_uid=4415, symbol_order=5207)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ()
{
  bool D.253626;

  <bb 2> :
  D.253626 = 0;

  <bb 3> :
<L0>:
  return D.253626;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E15_S_always_equalEv, funcdef_no=7785, decl_uid=178025, cgraph_uid=4416, symbol_order=5208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ()
{
  bool D.253628;

  <bb 2> :
  D.253628 = 1;

  <bb 3> :
<L0>:
  return D.253628;

}



;; Function std::operator!= (_ZStneRKSaI17pthread_exit_typeES2_, funcdef_no=8715, decl_uid=177908, cgraph_uid=5347, symbol_order=6143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.226944, const struct allocator & D.226945)
{
  bool D.253630;

  <bb 2> :
  D.253630 = 0;

  <bb 3> :
<L0>:
  return D.253630;

}



;; Function std::vector<pthread_exit_type>::clear (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5clearEv, funcdef_no=8716, decl_uid=178540, cgraph_uid=5348, symbol_order=6144)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.178810._M_impl.D.178155._M_start;
  std::vector<pthread_exit_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_exit_type>::_M_erase_at_end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9530, decl_uid=178668, cgraph_uid=6162, symbol_order=6958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_exit_type>::_M_erase_at_end (struct vector * const this, struct pthread_exit_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.178810._M_impl.D.178155._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.178810;
  _5 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.178810._M_impl.D.178155._M_finish;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (__pos, _6, _5);
  this->D.178810._M_impl.D.178155._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_ZSt15__alloc_on_copyISaI17pthread_exit_typeEEvRT_RKS2_, funcdef_no=8717, decl_uid=214749, cgraph_uid=5349, symbol_order=6145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_exit_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_exit_type>::capacity (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8capacityEv, funcdef_no=8718, decl_uid=178456, cgraph_uid=5350, symbol_order=6146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::capacity (const struct vector * const this)
{
  size_type D.253635;

  <bb 2> :
  _1 = this->D.178810._M_impl.D.178155._M_end_of_storage;
  _2 = this->D.178810._M_impl.D.178155._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.253635 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253635;

}



;; Function std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8719, decl_uid=214756, cgraph_uid=5351, symbol_order=6147)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_exit_type * std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_exit_type * D.253639;
  struct pthread_exit_type * __result;
  struct pthread_exit_type * D.253637;

  <bb 2> :
  _1 = &this->D.178810;
  D.253639 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_1, __n);
  __result = D.253639;
  _2 = &this->D.178810;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (__first, __last, __result, _3);

  <bb 3> :
  D.253637 = __result;

  <bb 4> :
<L0>:
  return D.253637;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.178810;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_exit_type>::end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8722, decl_uid=178423, cgraph_uid=5354, symbol_order=6150)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::end (struct vector * const this)
{
  struct iterator D.227031;
  struct iterator D.253643;

  <bb 2> :
  _1 = &this->D.178810._M_impl.D.178155._M_finish;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.227031, _1);
  D.253643 = D.227031;
  D.227031 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253643;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9533, decl_uid=214838, cgraph_uid=6165, symbol_order=6961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8720, decl_uid=178419, cgraph_uid=5352, symbol_order=6148)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::begin (struct vector * const this)
{
  struct iterator D.226985;
  struct iterator D.253646;

  <bb 2> :
  _1 = &this->D.178810._M_impl.D.178155._M_start;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.226985, _1);
  D.253646 = D.226985;
  D.226985 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253646;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8721, decl_uid=214857, cgraph_uid=5353, symbol_order=6149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.253651;
  struct __normal_iterator D.253650;
  struct __normal_iterator D.253649;

  <bb 2> :
  D.253650 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.253651 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.253649 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.253651, D.253650, __result);

  <bb 3> :
<L0>:
  return D.253649;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9536, decl_uid=227003, cgraph_uid=6169, symbol_order=6965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_exit_type * D.253655;
  struct __normal_iterator D.253653;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__result);
  _2 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.253655 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_3, _2, _1);
  _4 = D.253655;
  D.253653 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.253653;

}



;; Function std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIP17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10174, decl_uid=237250, cgraph_uid=6806, symbol_order=7606)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  struct pthread_exit_type * D.253656;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.253656 = *_1;

  <bb 3> :
<L0>:
  return D.253656;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9547, decl_uid=214825, cgraph_uid=6179, symbol_order=6975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_exit_type * const & D.253658;

  <bb 2> :
  D.253658 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253658;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10176, decl_uid=237257, cgraph_uid=6808, symbol_order=7608)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __from, struct pthread_exit_type * __res)
{
  struct __normal_iterator D.253660;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.253660 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.253660;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10656, decl_uid=214816, cgraph_uid=7288, symbol_order=8088)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_exit_type * const D.245735;
  struct __normal_iterator D.245736;
  struct __normal_iterator D.253662;

  <bb 2> :
  _1 = this->_M_current;
  __n.1009_2 = (long unsigned int) __n;
  _3 = __n.1009_2 * 16;
  _4 = _1 + _3;
  D.245735 = _4;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.245736, &D.245735);
  D.253662 = D.245736;
  D.245736 = {CLOBBER};
  D.245735 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.253662;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8723, decl_uid=214863, cgraph_uid=5355, symbol_order=6151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.227034)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9538, decl_uid=227036, cgraph_uid=6170, symbol_order=6966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10177, decl_uid=237281, cgraph_uid=6809, symbol_order=7609)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator D.242446, struct __normal_iterator D.242447)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_exit_type*, pthread_exit_type*> (_ZSt4copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=8724, decl_uid=214871, cgraph_uid=5356, symbol_order=6152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253668;
  struct pthread_exit_type * D.253666;

  <bb 2> :
  _1 = std::__miter_base<pthread_exit_type*> (__last);
  _2 = std::__miter_base<pthread_exit_type*> (__first);
  D.253668 = std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_2, _1, __result);
  D.253666 = D.253668;

  <bb 3> :
<L0>:
  return D.253666;

}



;; Function std::__miter_base<pthread_exit_type*> (_ZSt12__miter_baseIP17pthread_exit_typeET_S2_, funcdef_no=9539, decl_uid=227052, cgraph_uid=6171, symbol_order=6967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__miter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.253669;

  <bb 2> :
  D.253669 = __it;

  <bb 3> :
<L0>:
  return D.253669;

}



;; Function std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_ZSt13__copy_move_aILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=9540, decl_uid=227054, cgraph_uid=6172, symbol_order=6968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253673;
  struct pthread_exit_type * D.253671;

  <bb 2> :
  __result.1010_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.1010_1);
  _3 = std::__niter_base<pthread_exit_type*> (__last);
  _4 = std::__niter_base<pthread_exit_type*> (__first);
  D.253673 = std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.253673;
  D.253671 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.253671;

}



;; Function std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10179, decl_uid=237292, cgraph_uid=6811, symbol_order=7611)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253676;
  struct pthread_exit_type * D.253674;

  <bb 2> :
  D.253676 = std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253674 = D.253676;

  <bb 3> :
<L0>:
  return D.253674;

}



;; Function std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10657, decl_uid=242455, cgraph_uid=7289, symbol_order=8089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253677;

  <bb 2> :
  D.253677 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253677;

}



;; Function std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIP17pthread_exit_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8725, decl_uid=214875, cgraph_uid=5357, symbol_order=6153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.227061)
{
  struct pthread_exit_type * D.253681;
  struct pthread_exit_type * D.253679;

  <bb 2> :
  D.253681 = std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253679 = D.253681;

  <bb 3> :
<L0>:
  return D.253679;

}



;; Function std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (_ZSt18uninitialized_copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=9541, decl_uid=227063, cgraph_uid=6173, symbol_order=6969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253684;
  const bool __assignable;
  struct pthread_exit_type * D.253682;

  <bb 2> :
  __assignable = 1;
  D.253684 = std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253682 = D.253684;

  <bb 3> :
<L0>:
  return D.253682;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP17pthread_exit_typeS3_EET0_T_S5_S4_, funcdef_no=10181, decl_uid=237330, cgraph_uid=6813, symbol_order=7613)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253687;
  struct pthread_exit_type * D.253685;

  <bb 2> :
  D.253687 = std::copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253685 = D.253687;

  <bb 3> :
<L0>:
  return D.253685;

}



;; Function std::vector<pthread_exit_type>::push_back (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE9push_backERKS0_, funcdef_no=7786, decl_uid=178490, cgraph_uid=4419, symbol_order=5211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_exit_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.253691;

  <bb 2> :
  _1 = this->D.178810._M_impl.D.178155._M_finish;
  _2 = this->D.178810._M_impl.D.178155._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.178810._M_impl.D.178155._M_finish;
  _4 = &this->D.178810._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_4, _3, __x);
  _5 = this->D.178810._M_impl.D.178155._M_finish;
  _6 = _5 + 16;
  this->D.178810._M_impl.D.178155._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253691 = std::vector<pthread_exit_type>::end (this);
  std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (this, D.253691, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8726, decl_uid=214887, cgraph_uid=5358, symbol_order=6154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (struct allocator_type & __a, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_exit_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_exit_type&> (_ZSt7forwardIRK17pthread_exit_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9542, decl_uid=227078, cgraph_uid=6174, symbol_order=6970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_exit_type & std::forward<const pthread_exit_type&> (const struct type & __t)
{
  const struct pthread_exit_type & D.253692;

  <bb 2> :
  D.253692 = __t;

  <bb 3> :
<L0>:
  return D.253692;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9543, decl_uid=227080, cgraph_uid=6175, symbol_order=6971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (struct new_allocator * const this, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  void * D.237342;
  void * D.237341;
  const struct pthread_exit_type * D.237343;

  <bb 2> :
  D.237343 = std::forward<const pthread_exit_type&> (__args#0);
  D.237341 = __p;
  D.237342 = operator new (16, D.237341);
  MEM[(struct pthread_exit_type *)D.237342] = *D.237343;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8727, decl_uid=215056, cgraph_uid=5362, symbol_order=6158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (struct vector * const this, struct iterator __position, const struct pthread_exit_type & __args#0)
{
  struct pthread_exit_type * D.253698;
  const size_type D.253697;
  struct pthread_exit_type * __new_finish;
  struct pthread_exit_type * __new_start;
  const size_type __elems_before;
  struct pthread_exit_type * __old_finish;
  struct pthread_exit_type * __old_start;
  const size_type __len;
  struct iterator D.227091;

  <bb 2> :
  D.253697 = std::vector<pthread_exit_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253697;
  __old_start = this->D.178810._M_impl.D.178155._M_start;
  __old_finish = this->D.178810._M_impl.D.178155._M_finish;
  D.227091 = std::vector<pthread_exit_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (&__position, &D.227091);
  __elems_before = (const size_type) _1;
  D.227091 = {CLOBBER};
  _2 = &this->D.178810;
  D.253698 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_2, __len);
  __new_start = D.253698;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_exit_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.178810._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.178810;
  _8 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.178810;
  _12 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.178810;
  _23 = this->D.178810._M_impl.D.178155._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.178810._M_impl.D.178155._M_start = __new_start;
  this->D.178810._M_impl.D.178155._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.178810._M_impl.D.178155._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_check_len (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9544, decl_uid=178659, cgraph_uid=6176, symbol_order=6972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_exit_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1013;
  size_type D.253702;
  const long unsigned int D.237348;
  bool retval.1011;

  <bb 2> :
  _1 = std::vector<pthread_exit_type>::max_size (this);
  _2 = std::vector<pthread_exit_type>::size (this);
  _3 = _1 - _2;
  __n.1012_4 = __n;
  retval.1011 = _3 < __n.1012_4;
  if (retval.1011 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_exit_type>::size (this);
  _6 = std::vector<pthread_exit_type>::size (this);
  D.237348 = _6;
  _7 = std::max<long unsigned int> (&D.237348, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237348 = {CLOBBER};
  _9 = std::vector<pthread_exit_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_exit_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1013 = std::vector<pthread_exit_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1013 = __len;

  <bb 8> :
  D.253702 = iftmp.1013;

  <bb 9> :
<L6>:
  return D.253702;

}



;; Function std::vector<pthread_exit_type>::max_size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8max_sizeEv, funcdef_no=10182, decl_uid=178445, cgraph_uid=6814, symbol_order=7614)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::max_size (const struct vector * const this)
{
  size_type D.253709;

  <bb 2> :
  _1 = &this->D.178810;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  D.253709 = std::vector<pthread_exit_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253709;

}



;; Function std::vector<pthread_exit_type>::_S_max_size (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10658, decl_uid=178666, cgraph_uid=7290, symbol_order=8090)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253711;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253711 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253711;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8max_sizeERKS1_, funcdef_no=10882, decl_uid=177980, cgraph_uid=7514, symbol_order=8316)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.253714;

  <bb 2> :
  D.253714 = __gnu_cxx::new_allocator<pthread_exit_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253714;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE8max_sizeEv, funcdef_no=10986, decl_uid=177822, cgraph_uid=7618, symbol_order=8420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::max_size (const struct new_allocator * const this)
{
  size_type D.253716;

  <bb 2> :
  D.253716 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253716;

}



;; Function __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZN9__gnu_cxxmiIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9545, decl_uid=227092, cgraph_uid=6177, symbol_order=6973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253718;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253718 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.253718;

}



;; Function std::vector<pthread_exit_type>::_S_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9546, decl_uid=178317, cgraph_uid=6178, symbol_order=6974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253721;
  struct pthread_exit_type * D.253720;

  <bb 2> :
  D.253720 = std::vector<pthread_exit_type>::_S_do_relocate (__first, __last, __result, __alloc, D.253721);

  <bb 3> :
<L0>:
  return D.253720;

}



;; Function std::vector<pthread_exit_type>::_S_do_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10183, decl_uid=178305, cgraph_uid=6815, symbol_order=7615)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_do_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242471)
{
  struct pthread_exit_type * D.253723;

  <bb 2> :
  D.253723 = std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253723;

}



;; Function std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (_ZSt12__relocate_aIP17pthread_exit_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10659, decl_uid=227257, cgraph_uid=7291, symbol_order=8091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & __alloc)
{
  struct pthread_exit_type * D.253725;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*> (__result);
  _2 = std::__niter_base<pthread_exit_type*> (__last);
  _3 = std::__niter_base<pthread_exit_type*> (__first);
  D.253725 = std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253725;

}



;; Function std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_ZSt14__relocate_a_1I17pthread_exit_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10883, decl_uid=227431, cgraph_uid=7515, symbol_order=8317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.246824)
{
  ptrdiff_t __count;
  struct pthread_exit_type * D.253730;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1014_2 = (long unsigned int) __count;
  _3 = __count.1014_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1015_4 = (long unsigned int) __count;
  _5 = __count.1015_4 * 16;
  D.253730 = __result + _5;

  <bb 5> :
<L3>:
  return D.253730;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::put (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7788, decl_uid=193897, cgraph_uid=4420, symbol_order=5212)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_exit_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_exit_array & v)
{
  bool D.253739;
  struct hash_entry * D.253738;
  unsigned int D.253737;
  bool ins;
  struct hash_entry * e;
  bool D.253735;
  void * D.215066;
  void * D.215065;

  <bb 2> :
  _1 = &this->m_table;
  D.253737 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.253737;
  D.253738 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.253738;
  D.253739 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (e);
  ins = D.253739;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.215065 = &e->m_value;
  D.215066 = operator new (24, D.215065);
  function_pthread_exit_array::function_pthread_exit_array (D.215066, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_exit_array::operator= (_4, v);

  <bb 5> :
  D.253735 = ~ins;

  <bb 6> :
<L3>:
  return D.253735;

  <bb 7> :
<L4>:
  operator delete (D.215066, D.215065);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8731, decl_uid=194055, cgraph_uid=5363, symbol_order=6159)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.253790;
  bool D.253789;
  bool D.253788;
  bool D.253787;
  bool D.253786;
  bool D.253785;
  struct value_type * D.253784;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1021;
  bool retval.1020;
  bool retval.1019;
  bool retval.1018;
  bool retval.1017;
  bool retval.1016;
  struct value_type * D.253746;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.253785 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1016 = D.253785;
  if (retval.1016 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.253786 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1017 = D.253786;
  if (retval.1017 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.253787 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.1018 = D.253787;
  if (retval.1018 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.253746 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.253788 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1019 = D.253788;
  if (retval.1019 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.253789 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1020 = D.253789;
  if (retval.1020 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.253790 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.1021 = D.253790;
  if (retval.1021 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.253746 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.253746 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.253746 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.253746 = _37 + _39;

  <bb 27> :
<L37>:
  return D.253746;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9549, decl_uid=194136, cgraph_uid=6193, symbol_order=6989)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.253821;
  unsigned int D.253820;
  bool D.253819;
  bool D.253818;
  struct mem_alloc_description & D.253817;
  struct value_type * D.253816;
  unsigned int D.253815;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.237386;
  void * D.237385;
  struct hash_entry & D.237423;
  bool iftmp.1025;
  bool retval.1024;
  bool iftmp.1023;
  bool retval.1022;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1023 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1023 = 0;

  <bb 6> :
  retval.1022 = iftmp.1023;
  if (retval.1022 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.253815 = hash_table_higher_prime_index (_5);
  nindex = D.253815;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.253816 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.253816;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.253818 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.253818;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.253819 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.253819;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1025 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1025 = 0;

  <bb 15> :
  retval.1024 = iftmp.1025;
  if (retval.1024 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.253820 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (x);
  _16 = D.253820;
  D.253821 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.253821;
  D.237423 = std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (x);
  D.237385 = q;
  D.237386 = operator new (32, D.237385);
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (D.237386, D.237423);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10185, decl_uid=194031, cgraph_uid=6817, symbol_order=7617)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.253822;

  <bb 2> :
  D.253822 = this->m_size;

  <bb 3> :
<L0>:
  return D.253822;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10186, decl_uid=194033, cgraph_uid=6818, symbol_order=7618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.253824;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.253824 = _1 - _2;

  <bb 3> :
<L0>:
  return D.253824;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10187, decl_uid=194133, cgraph_uid=6819, symbol_order=7619)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1026;
  bool D.253826;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1026 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1026 = 0;

  <bb 6> :
  D.253826 = iftmp.1026;

  <bb 7> :
<L4>:
  return D.253826;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9381, decl_uid=194123, cgraph_uid=6013, symbol_order=6809)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.253848;
  struct value_type * D.253847;
  struct mem_alloc_description & D.253846;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.253844;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253847 = xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (n);
  nentries = D.253847;
  goto <bb 6>; [INV]

  <bb 5> :
  D.253848 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (n);
  nentries = D.253848;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.253844 = nentries;

  <bb 9> :
<L14>:
  return D.253844;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10075, decl_uid=218345, cgraph_uid=6707, symbol_order=7507)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.253851;
  struct hash_entry * D.253849;

  <bb 2> :
  D.253851 = xcalloc (count, 32);
  D.253849 = D.253851;

  <bb 3> :
<L0>:
  return D.253849;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10076, decl_uid=235705, cgraph_uid=6708, symbol_order=7508)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.253858;
  struct hash_entry * D.253857;
  struct hash_entry * D.253855;
  bool retval.1027;

  <bb 2> :
  retval.1027 = need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ();
  if (retval.1027 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.253857 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.253855 = D.253857;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.253858 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.253855 = D.253858;

  <bb 5> :
<L2>:
  return D.253855;

}



;; Function finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10592, decl_uid=242023, cgraph_uid=7227, symbol_order=8027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10594, decl_uid=245431, cgraph_uid=7225, symbol_order=8025)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10591, decl_uid=242022, cgraph_uid=7223, symbol_order=8023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ()
{
  bool D.253859;

  <bb 2> :
  D.253859 = 1;

  <bb 3> :
<L0>:
  return D.253859;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10189, decl_uid=193956, cgraph_uid=6821, symbol_order=7621)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.253863;
  hashval_t D.253861;

  <bb 2> :
  _1 = &e->m_key;
  D.253863 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_1);
  D.253861 = D.253863;

  <bb 3> :
<L0>:
  return D.253861;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10188, decl_uid=194126, cgraph_uid=6820, symbol_order=7620)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.253876;
  bool D.253875;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1029;
  struct value_type * D.253867;
  bool retval.1028;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.253875 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1028 = D.253875;
  if (retval.1028 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253867 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.253876 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1029 = D.253876;
  if (retval.1029 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.253867 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.253867;

}



;; Function std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10190, decl_uid=237383, cgraph_uid=6822, symbol_order=7622)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.253877;

  <bb 2> :
  D.253877 = __t;

  <bb 3> :
<L0>:
  return D.253877;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9560, decl_uid=237408, cgraph_uid=6191, symbol_order=6987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.237410)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.237410->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.237410->m_value;
  function_pthread_exit_array::function_pthread_exit_array (_2, _3);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2EOS_, funcdef_no=9558, decl_uid=194248, cgraph_uid=6188, symbol_order=6984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, struct function_pthread_exit_array & D.194250)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194250->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9556, decl_uid=178767, cgraph_uid=6185, symbol_order=6981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this, struct vector & D.178769)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178810;
  _2 = &D.178769->D.178810;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9554, decl_uid=178235, cgraph_uid=6182, symbol_order=6978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.178237)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.178237->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10192, decl_uid=178141, cgraph_uid=6824, symbol_order=7624)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_exit_type>::allocator (this, _1);
  _2 = &this->D.178155;
  _3 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.178155;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI17pthread_exit_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10660, decl_uid=242501, cgraph_uid=7292, symbol_order=8092)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.253879;

  <bb 2> :
  D.253879 = __t;

  <bb 3> :
<L0>:
  return D.253879;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10662, decl_uid=178097, cgraph_uid=7294, symbol_order=8094)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8972, decl_uid=218347, cgraph_uid=5604, symbol_order=6400)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9562, decl_uid=194144, cgraph_uid=6194, symbol_order=6990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10194, decl_uid=193968, cgraph_uid=6826, symbol_order=7626)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10664, decl_uid=242516, cgraph_uid=7296, symbol_order=8096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<assign_type>::push_back (_ZNSt6vectorI11assign_typeSaIS0_EE9push_backERKS0_, funcdef_no=7742, decl_uid=176387, cgraph_uid=4375, symbol_order=5167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<assign_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.253885;

  <bb 2> :
  _1 = this->D.176707._M_impl.D.176052._M_finish;
  _2 = this->D.176707._M_impl.D.176052._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.176707._M_impl.D.176052._M_finish;
  _4 = &this->D.176707._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_4, _3, __x);
  _5 = this->D.176707._M_impl.D.176052._M_finish;
  _6 = _5 + 24;
  this->D.176707._M_impl.D.176052._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253885 = std::vector<assign_type>::end (this);
  std::vector<assign_type>::_M_realloc_insert<const assign_type&> (this, D.253885, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_ZNSt16allocator_traitsISaI11assign_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8644, decl_uid=213820, cgraph_uid=5276, symbol_order=6072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (struct allocator_type & __a, struct assign_type * __p, const struct assign_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const assign_type&> (__args#0);
  __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const assign_type&> (_ZSt7forwardIRK11assign_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9445, decl_uid=224945, cgraph_uid=6077, symbol_order=6873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct assign_type & std::forward<const assign_type&> (const struct type & __t)
{
  const struct assign_type & D.253886;

  <bb 2> :
  D.253886 = __t;

  <bb 3> :
<L0>:
  return D.253886;

}



;; Function __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (_ZN9__gnu_cxx13new_allocatorI11assign_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9446, decl_uid=224947, cgraph_uid=6078, symbol_order=6874)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (struct new_allocator * const this, struct assign_type * __p, const struct assign_type & __args#0)
{
  void * D.236337;
  void * D.236336;
  const struct assign_type * D.236338;

  <bb 2> :
  D.236338 = std::forward<const assign_type&> (__args#0);
  D.236336 = __p;
  D.236337 = operator new (24, D.236336);
  MEM[(struct assign_type *)D.236337] = *D.236338;
  return;

}



;; Function std::vector<assign_type>::_M_realloc_insert<const assign_type&> (_ZNSt6vectorI11assign_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8645, decl_uid=213989, cgraph_uid=5280, symbol_order=6076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_realloc_insert<const assign_type&> (struct vector * const this, struct iterator __position, const struct assign_type & __args#0)
{
  struct assign_type * D.253892;
  const size_type D.253891;
  struct assign_type * __new_finish;
  struct assign_type * __new_start;
  const size_type __elems_before;
  struct assign_type * __old_finish;
  struct assign_type * __old_start;
  const size_type __len;
  struct iterator D.224958;

  <bb 2> :
  D.253891 = std::vector<assign_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253891;
  __old_start = this->D.176707._M_impl.D.176052._M_start;
  __old_finish = this->D.176707._M_impl.D.176052._M_finish;
  D.224958 = std::vector<assign_type>::begin (this);
  _1 = __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (&__position, &D.224958);
  __elems_before = (const size_type) _1;
  D.224958 = {CLOBBER};
  _2 = &this->D.176707;
  D.253892 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_2, __len);
  __new_start = D.253892;
  __new_finish = __new_start;
  _3 = std::forward<const assign_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.176707._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.176707;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<assign_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.176707;
  _12 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<assign_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.176707;
  _23 = this->D.176707._M_impl.D.176052._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.176707._M_impl.D.176052._M_start = __new_start;
  this->D.176707._M_impl.D.176052._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.176707._M_impl.D.176052._M_end_of_storage = _28;
  return;

}



;; Function std::vector<assign_type>::_M_check_len (_ZNKSt6vectorI11assign_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9447, decl_uid=176556, cgraph_uid=6079, symbol_order=6875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<assign_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1032;
  size_type D.253896;
  const long unsigned int D.236343;
  bool retval.1030;

  <bb 2> :
  _1 = std::vector<assign_type>::max_size (this);
  _2 = std::vector<assign_type>::size (this);
  _3 = _1 - _2;
  __n.1031_4 = __n;
  retval.1030 = _3 < __n.1031_4;
  if (retval.1030 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<assign_type>::size (this);
  _6 = std::vector<assign_type>::size (this);
  D.236343 = _6;
  _7 = std::max<long unsigned int> (&D.236343, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236343 = {CLOBBER};
  _9 = std::vector<assign_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<assign_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1032 = std::vector<assign_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1032 = __len;

  <bb 8> :
  D.253896 = iftmp.1032;

  <bb 9> :
<L6>:
  return D.253896;

}



;; Function std::vector<assign_type>::max_size (_ZNKSt6vectorI11assign_typeSaIS0_EE8max_sizeEv, funcdef_no=10120, decl_uid=176342, cgraph_uid=6752, symbol_order=7552)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::max_size (const struct vector * const this)
{
  size_type D.253903;

  <bb 2> :
  _1 = &this->D.176707;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  D.253903 = std::vector<assign_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253903;

}



;; Function std::vector<assign_type>::_S_max_size (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10623, decl_uid=176563, cgraph_uid=7255, symbol_order=8055)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253905;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<assign_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253905 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253905;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::max_size (_ZNSt16allocator_traitsISaI11assign_typeEE8max_sizeERKS1_, funcdef_no=10872, decl_uid=175877, cgraph_uid=7504, symbol_order=8306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<assign_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.253908;

  <bb 2> :
  D.253908 = __gnu_cxx::new_allocator<assign_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253908;

}



;; Function __gnu_cxx::new_allocator<assign_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE8max_sizeEv, funcdef_no=10982, decl_uid=175719, cgraph_uid=7614, symbol_order=8416)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::max_size (const struct new_allocator * const this)
{
  size_type D.253910;

  <bb 2> :
  D.253910 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253910;

}



;; Function __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (_ZN9__gnu_cxxmiIP11assign_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9448, decl_uid=224959, cgraph_uid=6080, symbol_order=6876)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253912;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253912 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.253912;

}



;; Function std::vector<assign_type>::_S_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9449, decl_uid=176214, cgraph_uid=6081, symbol_order=6877)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253915;
  struct assign_type * D.253914;

  <bb 2> :
  D.253914 = std::vector<assign_type>::_S_do_relocate (__first, __last, __result, __alloc, D.253915);

  <bb 3> :
<L0>:
  return D.253914;

}



;; Function std::vector<assign_type>::_S_do_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10121, decl_uid=176202, cgraph_uid=6753, symbol_order=7553)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_do_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242221)
{
  struct assign_type * D.253917;

  <bb 2> :
  D.253917 = std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253917;

}



;; Function std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (_ZSt12__relocate_aIP11assign_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10624, decl_uid=225124, cgraph_uid=7256, symbol_order=8056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & __alloc)
{
  struct assign_type * D.253919;

  <bb 2> :
  _1 = std::__niter_base<assign_type*> (__result);
  _2 = std::__niter_base<assign_type*> (__last);
  _3 = std::__niter_base<assign_type*> (__first);
  D.253919 = std::__relocate_a_1<assign_type, assign_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253919;

}



;; Function std::__relocate_a_1<assign_type, assign_type> (_ZSt14__relocate_a_1I11assign_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10873, decl_uid=225298, cgraph_uid=7505, symbol_order=8307)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__relocate_a_1<assign_type, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.246718)
{
  ptrdiff_t __count;
  struct assign_type * D.253924;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1033_2 = (long unsigned int) __count;
  _3 = __count.1033_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1034_4 = (long unsigned int) __count;
  _5 = __count.1034_4 * 24;
  D.253924 = __result + _5;

  <bb 5> :
<L3>:
  return D.253924;

}



;; Function collect_function_return (_Z23collect_function_returnP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6419, decl_uid=187117, cgraph_uid=3395, symbol_order=4176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 15 3 }
;; 3 succs { 4 6 }
;; 4 succs { 15 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 14 8 }
;; 8 succs { 14 9 }
;; 9 succs { 14 10 }
;; 10 succs { 14 11 }
;; 11 succs { 14 12 }
;; 12 succs { 14 13 }
;; 13 succs { 1 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { }
void collect_function_return (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  struct function * D.253933;
  struct function * D.253932;
  struct greturn * D.253931;
  struct greturn * D.253930;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_return_tree;
  struct function_return_array fun_array;
  bool retval.1035;

  <bb 2> :
  function_return_array::function_return_array (&fun_array);
  D.253930 = as_a<greturn*, gimple> (gc);

  <bb 3> :
  _1 = D.253930;
  _2 = gimple_return_retval (_1);
  retval.1035 = _2 != 0B;
  if (retval.1035 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  D.253931 = as_a<greturn*, gimple> (gc);

  <bb 5> :
  _3 = D.253931;
  get_function_return_tree = gimple_return_retval (_3);
  goto <bb 7>; [INV]

  <bb 6> :
  get_function_return_tree = 0B;

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array);
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);

  <bb 8> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  D.253932 = cgraph_node::get_fun (node);

  <bb 9> :
  _4 = D.253932;
  _5 = _4->decl;
  ret_type.locfucntion = _5;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 10> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 11> :
  function_return_collect.1036_6 = function_return_collect;
  D.253933 = cgraph_node::get_fun (node);

  <bb 12> :
  _7 = D.253933;
  _8 = &_7->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.1036_6, _8, &fun_array);

  <bb 13> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  return;

  <bb 14> :
<L3>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 15> :
<L4>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 16> :
<L5>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 1

}



;; Function as_a<greturn*, gimple> (_Z4as_aIP7greturn6gimpleET_PT0_, funcdef_no=7789, decl_uid=195930, cgraph_uid=4421, symbol_order=5213)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * as_a<greturn*, gimple> (struct gimple * p)
{
  struct greturn * D.253937;

  <bb 2> :
  D.253937 = reinterpret_is_a_helper<greturn*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.253937;

}



;; Function reinterpret_is_a_helper<greturn*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7greturnE4castI6gimpleEES1_PT_, funcdef_no=8734, decl_uid=215073, cgraph_uid=5366, symbol_order=6162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * reinterpret_is_a_helper<greturn*>::cast<gimple> (struct gimple * p)
{
  struct greturn * D.253939;

  <bb 2> :
  D.253939 = p;

  <bb 3> :
<L0>:
  return D.253939;

}



;; Function gimple_return_retval (_ZL20gimple_return_retvalPK7greturn, funcdef_no=2464, decl_uid=94269, cgraph_uid=1601, symbol_order=1761)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_return_retval (const struct greturn * gs)
{
  union tree_node * D.253941;

  <bb 2> :
  D.253941 = gs->D.90483.op[0];

  <bb 3> :
<L0>:
  return D.253941;

}



;; Function collect_function_continue (_Z25collect_function_continueP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6420, decl_uid=187121, cgraph_uid=3396, symbol_order=4177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 6 4 }
;; 4 succs { 6 5 }
;; 5 succs { 1 }
;; 6 succs { }
void collect_function_continue (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  const char * D.253944;
  struct function * D.253943;
  struct return_type ret_type;
  union tree_node * get_function_return_tree;

  <bb 2> :
  get_function_return_tree = 0B;
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  D.253943 = cgraph_node::get_fun (node);

  <bb 3> :
  _1 = D.253943;
  _2 = _1->decl;
  ret_type.locfucntion = _2;
  ret_type.return_tree = get_function_return_tree;
  _3 = gimple_predict_predictor (gc);
  D.253944 = predictor_name (_3);

  <bb 4> :
  _4 = D.253944;
  ret_type.name = _4;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 5> :
  ret_type = {CLOBBER};
  return;

  <bb 6> :
<L0>:
  ret_type = {CLOBBER};
  resx 1

}



;; Function gimple_predict_predictor (_ZL24gimple_predict_predictorPK6gimple, funcdef_no=4827, decl_uid=146115, cgraph_uid=2602, symbol_order=2792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
br_predictor gimple_predict_predictor (const struct gimple * gs)
{
  br_predictor D.253946;

  <bb 2> :
  _1 = gs->subcode;
  _2 = (int) _1;
  _3 = _2 & -32769;
  D.253946 = (br_predictor) _3;

  <bb 3> :
<L0>:
  return D.253946;

}



;; Function FunctionStmtMappingRet (_Z22FunctionStmtMappingRetP3ptbS0_P12gimple_array, funcdef_no=6421, decl_uid=187125, cgraph_uid=3397, symbol_order=4178)

Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 55
Removing basic block 69
Removing basic block 70
Removing basic block 76
Removing basic block 82
Merging blocks 83 and 85
Removing basic block 86
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
;;
;; Loop 1
;;  header 81, latch 80
;;  depth 1, outer 0
;;  nodes: 81 80 78 79 77 6 76 75 8 7 74 73 19 72 71 23 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32 21 22 20 18 17 16 15 13 12 11 10 9 14
;;
;; Loop 2
;;  header 71, latch 70
;;  depth 2, outer 1
;;  nodes: 71 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 81 }
;; 6 succs { 7 77 }
;; 7 succs { 88 8 }
;; 8 succs { 9 77 }
;; 9 succs { 87 10 }
;; 10 succs { 87 11 }
;; 11 succs { 87 12 }
;; 12 succs { 87 13 }
;; 13 succs { 14 15 }
;; 14 succs { 76 }
;; 15 succs { 87 16 }
;; 16 succs { 87 17 }
;; 17 succs { 87 18 }
;; 18 succs { 19 20 }
;; 19 succs { 73 }
;; 20 succs { 86 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 71 }
;; 24 succs { 25 52 }
;; 25 succs { 26 70 }
;; 26 succs { 31 27 }
;; 27 succs { 31 28 }
;; 28 succs { 31 29 }
;; 29 succs { 31 30 }
;; 30 succs { 31 42 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 41 }
;; 36 succs { 37 41 }
;; 37 succs { 85 38 }
;; 38 succs { 39 41 }
;; 39 succs { 85 40 }
;; 40 succs { 85 41 }
;; 41 succs { 51 }
;; 42 succs { 44 43 }
;; 43 succs { 44 51 }
;; 44 succs { 45 51 }
;; 45 succs { 83 46 }
;; 46 succs { 83 47 }
;; 47 succs { 48 50 }
;; 48 succs { 83 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 70 }
;; 52 succs { 53 65 }
;; 53 succs { 54 70 }
;; 54 succs { 85 55 }
;; 55 succs { 85 56 }
;; 56 succs { 58 57 }
;; 57 succs { 58 70 }
;; 58 succs { 59 70 }
;; 59 succs { 84 60 }
;; 60 succs { 84 61 }
;; 61 succs { 62 64 }
;; 62 succs { 84 63 }
;; 63 succs { 64 }
;; 64 succs { 70 }
;; 65 succs { 66 70 }
;; 66 succs { 85 67 }
;; 67 succs { 68 70 }
;; 68 succs { 85 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 24 72 }
;; 72 succs { 73 }
;; 73 succs { 76 74 }
;; 74 succs { 75 }
;; 75 succs { 77 }
;; 76 succs { 77 }
;; 77 succs { 78 79 }
;; 78 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 81 }
;; 81 succs { 6 82 }
;; 82 succs { 1 }
;; 83 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 86 }
;; 86 succs { 87 }
;; 87 succs { 88 }
;; 88 succs { }
void FunctionStmtMappingRet (struct ptb * ptable, struct ptb * ftable, struct gimple_array * user_tmp)
{
  int finally_tmp.1062;
  union tree_node * D.254055;
  struct pthread_attr_array * D.254053;
  struct pthread_attr_array * D.254052;
  union tree_node * D.254051;
  const char * D.254050;
  union tree_node * D.254049;
  struct pthread_attr_array * D.254047;
  struct pthread_attr_array * D.254046;
  union tree_node * D.254045;
  struct function * D.254044;
  bool D.254043;
  struct function_return_array * D.254042;
  struct function * D.254041;
  struct function_return_array * D.254040;
  struct function * D.254039;
  const char * D.254038;
  union tree_node * D.254037;
  struct gimple_array * D.254036;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  const char * name;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  int i;
  struct gimple * def_stmt;
  union tree_node * second;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  const char * name;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.1061;
  bool retval.1060;
  bool retval.1059;
  bool retval.1058;
  bool retval.1055;
  bool retval.1053;
  bool retval.1048;
  bool retval.1046;
  bool retval.1045;
  bool iftmp.1044;
  bool retval.1043;
  bool retval.1042;
  bool retval.1039;
  union tree_node * iftmp.1037;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1037 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1037 = 0B;

  <bb 5> :
  t = iftmp.1037;
  goto <bb 81>; [INV]

  <bb 6> :
  _1 = table_temp->target;
  if (_1 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 7> :
  treeGimpleArray.1038_2 = treeGimpleArray;
  _3 = &table_temp->target;
  D.254036 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1038_2, _3);

  <bb 8> :
  user_tmp = D.254036;
  if (user_tmp != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 9> :
  _4 = table_temp->last_stmt;
  D.254037 = gimple_call_fn (_4);

  <bb 10> :
  _5 = D.254037;
  D.254038 = get_name (_5);

  <bb 11> :
  name = D.254038;
  function_return_collect.1040_6 = function_return_collect;
  _7 = table_temp->node;
  D.254039 = cgraph_node::get_fun (_7);

  <bb 12> :
  _8 = D.254039;
  _9 = &_8->decl;
  D.254040 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1040_6, _9);

  <bb 13> :
  _10 = D.254040;
  retval.1039 = _10 == 0B;
  if (retval.1039 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  // predicted unlikely by continue predictor.
  goto <bb 76>; [INV]

  <bb 15> :
  function_return_collect.1041_11 = function_return_collect;
  _12 = table_temp->node;
  D.254041 = cgraph_node::get_fun (_12);

  <bb 16> :
  _13 = D.254041;
  _14 = &_13->decl;
  D.254042 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1041_11, _14);

  <bb 17> :
  _15 = D.254042;
  function_return_array::function_return_array (&fun_array, _15);

  <bb 18> :
  _16 = fun_array.return_type_num;
  if (_16 == 2)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  // predicted unlikely by continue predictor.
  finally_tmp.1062 = 0;
  goto <bb 73>; [INV]

  <bb 20> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 21> :
  _17 = table_temp->target;
  _18 = _17->base.code;
  if (_18 == 131)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _19 = table_temp->target;
  second = _19->exp.operands[0];
  _20 = table_temp->target;
  def_stmt = _20->ssa_name.def_stmt;
  table_temp->target = second;
  table_temp->last_stmt = def_stmt;

  <bb 23> :
  i = 0;
  goto <bb 71>; [INV]

  <bb 24> :
  _21 = table_temp->last_stmt;
  _22 = gimple_code (_21);
  retval.1042 = _22 == 8;
  if (retval.1042 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 25> :
  if (name != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 26> :
  _23 = strcmp (name, "realloc");
  if (_23 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _24 = strcmp (name, "malloc");
  if (_24 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  _25 = strcmp (name, "calloc");
  if (_25 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _26 = strcmp (name, "xmalloc");
  if (_26 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _27 = strcmp (name, "strdup");
  if (_27 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 31> :
  _28 = (long unsigned int) i;
  _29 = std::vector<return_type>::operator[] (&ret_type_array, _28);
  _30 = _29->return_tree;
  if (_30 != 0B)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _31 = table_temp->target;
  if (_31 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  iftmp.1044 = 1;
  goto <bb 35>; [INV]

  <bb 34> :
  iftmp.1044 = 0;

  <bb 35> :
  retval.1043 = iftmp.1044;
  if (retval.1043 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 36> :
  _32 = (long unsigned int) i;
  _33 = std::vector<return_type>::operator[] (&ret_type_array, _32);
  _34 = _33->return_tree;
  _35 = _34->base.code;
  retval.1045 = _35 == 153;
  if (retval.1045 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  _36 = (long unsigned int) i;
  _37 = std::vector<return_type>::operator[] (&ret_type_array, _36);
  _38 = _37->return_tree;
  _39 = table_temp->target;
  D.254043 = ptr_derefs_may_alias_p (_39, _38);

  <bb 38> :
  retval.1046 = D.254043;
  if (retval.1046 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 39> :
  fun_array.return_type_num = 2;
  function_return_collect.1047_40 = function_return_collect;
  _41 = table_temp->node;
  D.254044 = cgraph_node::get_fun (_41);

  <bb 40> :
  _42 = D.254044;
  _43 = &_42->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.1047_40, _43, &fun_array);

  <bb 41> :
  goto <bb 51>; [INV]

  <bb 42> :
  _44 = strcmp (name, "pthread_create");
  if (_44 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  _45 = strcmp (name, "pthread_join");
  if (_45 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 44> :
  _46 = strcmp (name, "pthread_create");
  if (_46 == 0)
    goto <bb 45>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 45> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _47 = table_temp->last_stmt;
  D.254045 = gimple_call_arg (_47, 1);

  <bb 46> :
  _48 = D.254045;
  _49 = _48->exp.operands[0];
  getvardecl = _49;
  pthread_attr_setdetachstates.1049_50 = pthread_attr_setdetachstates;
  D.254046 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1049_50, &getvardecl);

  <bb 47> :
  _51 = D.254046;
  retval.1048 = _51 != 0B;
  if (retval.1048 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 48> :
  pthread_attr_setdetachstates.1050_52 = pthread_attr_setdetachstates;
  D.254047 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1050_52, &getvardecl);

  <bb 49> :
  _53 = D.254047;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_53];
  FUNCITON_THREAD.1051_54 = FUNCITON_THREAD;
  FUNCITON_THREAD.1052_55 = (int) FUNCITON_THREAD.1051_54;
  table_temp->swap_type = FUNCITON_THREAD.1052_55;
  _56 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _56;

  <bb 50> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};

  <bb 51> :
  goto <bb 70>; [INV]

  <bb 52> :
  _57 = table_temp->last_stmt;
  _58 = gimple_code (_57);
  retval.1053 = _58 == 6;
  if (retval.1053 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 53> :
  _59 = table_temp->swap_type;
  _60 = (unsigned int) _59;
  FUNCITON_THREAD.1054_61 = FUNCITON_THREAD;
  if (_60 == FUNCITON_THREAD.1054_61)
    goto <bb 54>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 54> :
  _62 = table_temp->swap_stmt;
  D.254049 = gimple_call_fn (_62);

  <bb 55> :
  _63 = D.254049;
  D.254050 = get_name (_63);

  <bb 56> :
  name = D.254050;
  _64 = strcmp (name, "pthread_create");
  if (_64 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  _65 = strcmp (name, "pthread_join");
  if (_65 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 58> :
  _66 = strcmp (name, "pthread_create");
  if (_66 == 0)
    goto <bb 59>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 59> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _67 = table_temp->swap_stmt;
  D.254051 = gimple_call_arg (_67, 1);

  <bb 60> :
  _68 = D.254051;
  _69 = _68->exp.operands[0];
  getvardecl = _69;
  pthread_attr_setdetachstates.1056_70 = pthread_attr_setdetachstates;
  D.254052 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1056_70, &getvardecl);

  <bb 61> :
  _71 = D.254052;
  retval.1055 = _71 != 0B;
  if (retval.1055 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 62> :
  pthread_attr_setdetachstates.1057_72 = pthread_attr_setdetachstates;
  D.254053 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1057_72, &getvardecl);

  <bb 63> :
  _73 = D.254053;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_73];
  _74 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _74;

  <bb 64> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  goto <bb 70>; [INV]

  <bb 65> :
  _75 = table_temp->last_stmt;
  _76 = gimple_code (_75);
  retval.1058 = _76 == 18;
  if (retval.1058 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 66> :
  _77 = (long unsigned int) i;
  _78 = std::vector<return_type>::operator[] (&ret_type_array, _77);
  _79 = _78->return_tree;
  _80 = table_temp->last_stmt;
  D.254055 = gimple_phi_result (_80);

  <bb 67> :
  _81 = D.254055;
  retval.1059 = _79 == _81;
  if (retval.1059 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 68> :
  _82 = (long unsigned int) i;
  _83 = std::vector<return_type>::operator[] (&ret_type_array, _82);
  _84 = _83->stmt;
  _85 = (long unsigned int) i;
  _86 = std::vector<return_type>::operator[] (&ret_type_array, _85);
  _87 = _86->return_tree;
  _88 = (long unsigned int) i;
  _89 = std::vector<return_type>::operator[] (&ret_type_array, _88);
  _90 = _89->return_tree;
  _91 = table_temp->last_stmt;
  set_gimple_array (user_tmp, _91, _90, _87, _84);

  <bb 69> :
  // predicted unlikely by continue predictor.

  <bb 70> :
  i = i + 1;

  <bb 71> :
  _92 = (long unsigned int) i;
  _93 = std::vector<return_type>::size (&ret_type_array);
  retval.1060 = _92 < _93;
  if (retval.1060 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  std::vector<return_type>::~vector (&ret_type_array);
  finally_tmp.1062 = 1;

  <bb 73> :
  function_return_array::~function_return_array (&fun_array);
  if (finally_tmp.1062 == 1)
    goto <bb 74>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 74> :
<L73>:

  <bb 75> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 77>; [INV]

  <bb 76> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 77> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 78> :
  iftmp.1061 = table_temp->target;
  goto <bb 80>; [INV]

  <bb 79> :
  iftmp.1061 = 0B;

  <bb 80> :
  t = iftmp.1061;

  <bb 81> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 82> :
  start = {CLOBBER};
  return;

  <bb 83> :
<L88>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 5

  <bb 84> :
<L89>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 7

  <bb 85> :
<L90>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 4

  <bb 86> :
<L91>:
  function_return_array::~function_return_array (&fun_array);
  resx 3

  <bb 87> :
<L92>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 2

  <bb 88> :
<L93>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK6gimple, funcdef_no=2265, decl_uid=93420, cgraph_uid=1402, symbol_order=1562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gimple * gs)
{
  const struct gphi * D.254069;
  const struct gphi * phi_stmt;
  union tree_node * D.254067;

  <bb 2> :
  D.254069 = as_a<const gphi*, const gimple> (gs);
  phi_stmt = D.254069;
  D.254067 = gimple_phi_result (phi_stmt);

  <bb 3> :
<L0>:
  return D.254067;

}



;; Function as_a<const gphi*, const gimple> (_Z4as_aIPK4gphiK6gimpleET_PT0_, funcdef_no=7087, decl_uid=93408, cgraph_uid=3719, symbol_order=4508)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * as_a<const gphi*, const gimple> (const struct gimple * p)
{
  const struct gphi * D.254072;
  const struct gphi * D.254070;

  <bb 2> :
  D.254072 = is_a_helper<const gphi*>::cast<gimple> (p);
  D.254070 = D.254072;

  <bb 3> :
<L0>:
  return D.254070;

}



;; Function is_a_helper<const gphi*>::cast<gimple> (_ZN11is_a_helperIPK4gphiE4castI6gimpleEES2_PKT_, funcdef_no=8088, decl_uid=207132, cgraph_uid=4720, symbol_order=5512)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * is_a_helper<const gphi*>::cast<gimple> (const struct gimple * p)
{
  const struct gphi * D.254073;

  <bb 2> :
  D.254073 = reinterpret_is_a_helper<gphi*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.254073;

}



;; Function reinterpret_is_a_helper<gphi*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP4gphiE4castI6gimpleEES1_PT_, funcdef_no=8090, decl_uid=207140, cgraph_uid=4722, symbol_order=5514)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gphi * reinterpret_is_a_helper<gphi*>::cast<gimple> (struct gimple * p)
{
  struct gphi * D.254075;

  <bb 2> :
  D.254075 = p;

  <bb 3> :
<L0>:
  return D.254075;

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK4gphi, funcdef_no=2264, decl_uid=93417, cgraph_uid=1401, symbol_order=1561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gphi * gs)
{
  union tree_node * D.254077;

  <bb 2> :
  D.254077 = gs->result;

  <bb 3> :
<L0>:
  return D.254077;

}



;; Function FunctionStmtMappingAssign (_Z25FunctionStmtMappingAssignP3ptbP12gimple_array, funcdef_no=6422, decl_uid=187128, cgraph_uid=3398, symbol_order=4179)

Removing basic block 21
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 1
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 26 6 11 25 24 13 23 22 14 21 19 20 17 18 16 15 12 9 8 7 5 4 10
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 22 14 21 19 20 17 18 16 15
;;
;; Loop 3
;;  header 22, latch 21
;;  depth 3, outer 2
;;  nodes: 22 21 19 20 17 18 16 15
;; 2 succs { 31 3 }
;; 3 succs { 28 }
;; 4 succs { 31 5 }
;; 5 succs { 6 7 }
;; 6 succs { 26 }
;; 7 succs { 31 8 }
;; 8 succs { 31 9 }
;; 9 succs { 10 12 }
;; 10 succs { 31 11 }
;; 11 succs { 26 }
;; 12 succs { 31 13 }
;; 13 succs { 24 }
;; 14 succs { 22 }
;; 15 succs { 17 16 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 30 21 }
;; 21 succs { 22 }
;; 22 succs { 15 23 }
;; 23 succs { 24 }
;; 24 succs { 14 25 }
;; 25 succs { 31 26 }
;; 26 succs { 31 27 }
;; 27 succs { 28 }
;; 28 succs { 4 29 }
;; 29 succs { 1 }
;; 30 succs { 31 }
;; 31 succs { }
void FunctionStmtMappingAssign (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.254098;
  struct function * D.254096;
  bool D.254095;
  struct cgraph_node * D.254094;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.1069;
  bool iftmp.1068;
  bool retval.1067;
  bool retval.1064;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.1063_1 = symtab;
  D.254094 = symbol_table::first_defined_function (symtab.1063_1);

  <bb 3> :
  node = D.254094;
  goto <bb 28>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.254095 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.254095;
  retval.1064 = ~_3;
  if (retval.1064 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 7> :
  D.254096 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.254096;
  push_cfun (_4);

  <bb 9> :
  cfun.1065_5 = cfun;
  if (cfun.1065_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 12> :
  calculate_dominance_info (1);

  <bb 13> :
  cfun.1066_6 = cfun;
  _7 = cfun.1066_6->cfg;
  _8 = _7->x_entry_block_ptr;
  bb = _8->next_bb;
  goto <bb 24>; [INV]

  <bb 14> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 22>; [INV]

  <bb 15> :
  gc = gsi_stmt (gsi);
  _9 = is_gimple_call (gc);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _10 = is_gimple_assign (gc);
  if (_10 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1068 = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.1068 = 0;

  <bb 19> :
  retval.1067 = iftmp.1068;
  if (retval.1067 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  collect_FunctionMapping_Assign (gc, node, bb, ptable);

  <bb 21> :
  gsi_next (&gsi);

  <bb 22> :
  _11 = gsi_end_p (gsi);
  retval.1069 = ~_11;
  if (retval.1069 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 24> :
  cfun.1070_12 = cfun;
  _13 = cfun.1070_12->cfg;
  _14 = _13->x_exit_block_ptr;
  if (bb != _14)
    goto <bb 14>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  pop_cfun ();

  <bb 26> :
  symtab.1071_15 = symtab;
  D.254098 = symbol_table::next_defined_function (symtab.1071_15, node);

  <bb 27> :
  node = D.254098;

  <bb 28> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  start = {CLOBBER};
  return;

  <bb 30> :
<L21>:
  gsi = {CLOBBER};
  resx 2

  <bb 31> :
<L22>:
  start = {CLOBBER};
  resx 1

}



;; Function parseLine (_Z9parseLinePc, funcdef_no=6423, decl_uid=196003, cgraph_uid=3399, symbol_order=4180)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 3 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
int parseLine (char * line)
{
  const char * p;
  int i;
  int D.254101;

  <bb 2> :
  _1 = strlen (line);
  i = (int) _1;
  p = line;
  goto <bb 4>; [INV]

  <bb 3> :
  p = p + 1;

  <bb 4> :
  _2 = *p;
  if (_2 <= 47)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = *p;
  if (_3 > 57)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _4 = (sizetype) i;
  _5 = _4 + 18446744073709551613;
  _6 = line + _5;
  *_6 = 0;
  i = atoi (p);
  D.254101 = i;

  <bb 7> :
<L4>:
  return D.254101;

}



;; Function GetProcessMemory (_Z16GetProcessMemoryv, funcdef_no=6424, decl_uid=196015, cgraph_uid=3400, symbol_order=4181)

Merging blocks 13 and 14
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 10, latch 7
;;  depth 1, outer 0
;;  nodes: 10 7 4 11
;; 2 succs { 15 3 }
;; 3 succs { 10 }
;; 4 succs { 5 7 }
;; 5 succs { 15 6 }
;; 6 succs { 12 }
;; 7 succs { 8 10 }
;; 8 succs { 15 9 }
;; 9 succs { 12 }
;; 10 succs { 15 11 }
;; 11 succs { 4 12 }
;; 12 succs { 15 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
;; 15 succs { }
struct processMem_t GetProcessMemory ()
{
  char * D.254113;
  int D.254112;
  int D.254111;
  struct FILE * D.254110;
  struct processMem_t processMem;
  char line[128];
  struct FILE * file;
  struct processMem_t D.254108;
  bool retval.1072;

  <bb 2> :
  D.254110 = fopen ("/proc/self/status", "r");

  <bb 3> :
  file = D.254110;
  goto <bb 10>; [INV]

  <bb 4> :
  _1 = strncmp (&line, "VmSize:", 7);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.254111 = parseLine (&line);

  <bb 6> :
  _2 = D.254111;
  _3 = (unsigned int) _2;
  processMem.virtualMem = _3;
  goto <bb 12>; [INV]

  <bb 7> :
  _4 = strncmp (&line, "VmRSS:", 6);
  if (_4 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  D.254112 = parseLine (&line);

  <bb 9> :
  _5 = D.254112;
  _6 = (unsigned int) _5;
  processMem.physicalMem = _6;
  goto <bb 12>; [INV]

  <bb 10> :
  D.254113 = fgets (&line, 128, file);

  <bb 11> :
  _7 = D.254113;
  retval.1072 = _7 != 0B;
  if (retval.1072 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  fclose (file);

  <bb 13> :
  D.254108 = processMem;
  line = {CLOBBER};
  processMem = {CLOBBER};

  <bb 14> :
<L8>:
  return D.254108;

  <bb 15> :
<L9>:
  line = {CLOBBER};
  processMem = {CLOBBER};
  resx 1

}



;; Function diff (_Z4diff8timespecS_, funcdef_no=6425, decl_uid=187131, cgraph_uid=3401, symbol_order=4182)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct timespec diff (struct timespec start, struct timespec end)
{
  struct timespec temp;
  struct timespec D.254119;

  <bb 2> :
  _1 = end.tv_nsec;
  _2 = start.tv_nsec;
  _3 = _1 - _2;
  if (_3 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = end.tv_sec;
  _5 = start.tv_sec;
  _6 = _4 - _5;
  _7 = _6 + -1;
  temp.tv_sec = _7;
  _8 = end.tv_nsec;
  _9 = _8 + 1000000000;
  _10 = start.tv_nsec;
  _11 = _9 - _10;
  temp.tv_nsec = _11;
  goto <bb 5>; [INV]

  <bb 4> :
  _12 = end.tv_sec;
  _13 = start.tv_sec;
  _14 = _12 - _13;
  temp.tv_sec = _14;
  _15 = end.tv_nsec;
  _16 = start.tv_nsec;
  _17 = _15 - _16;
  temp.tv_nsec = _17;

  <bb 5> :
  D.254119 = temp;
  temp = {CLOBBER};

  <bb 6> :
<L4>:
  return D.254119;

}



;; Function Varnew_search_imm_use (_Z21Varnew_search_imm_useP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6428, decl_uid=196297, cgraph_uid=3408, symbol_order=4189)

Removing basic block 28
Removing basic block 29
Removing basic block 42
Removing basic block 47
Removing basic block 57
Removing basic block 58
Removing basic block 84
Removing basic block 85
Removing basic block 93
Removing basic block 94
Removing basic block 110
Removing basic block 111
Removing basic block 114
Removing basic block 115
Removing basic block 146
Removing basic block 147
Removing basic block 148
Removing basic block 149
Removing basic block 150
Removing basic block 161
Removing basic block 162
Removing basic block 163
Removing basic block 164
Removing basic block 187
Removing basic block 188
Removing basic block 189
Removing basic block 190
Removing basic block 205
Removing basic block 206
Removing basic block 207
Removing basic block 208
Removing basic block 209
Removing basic block 220
Removing basic block 221
Removing basic block 222
Removing basic block 223
Removing basic block 246
Removing basic block 247
Removing basic block 248
Removing basic block 249
Removing basic block 250
Removing basic block 253
Removing basic block 254
Removing basic block 255
Removing basic block 257
Removing basic block 258
Removing basic block 260
Removing basic block 276
Removing basic block 287
Removing basic block 288
Removing basic block 289
Removing basic block 292
Removing basic block 293
Removing basic block 327
Removing basic block 328
Removing basic block 329
Removing basic block 330
Removing basic block 331
Removing basic block 345
Removing basic block 346
Removing basic block 347
Removing basic block 348
Removing basic block 371
Removing basic block 372
Removing basic block 373
Removing basic block 374
Removing basic block 392
Removing basic block 393
Removing basic block 394
Removing basic block 395
Removing basic block 396
Removing basic block 410
Removing basic block 411
Removing basic block 412
Removing basic block 413
Removing basic block 414
Removing basic block 415
Removing basic block 437
Removing basic block 438
Removing basic block 439
Removing basic block 440
Removing basic block 441
Removing basic block 444
Removing basic block 445
Removing basic block 446
Removing basic block 448
Removing basic block 449
Removing basic block 453
Removing basic block 454
Removing basic block 455
Removing basic block 466
Removing basic block 477
Removing basic block 491
Removing basic block 505
Removing basic block 506
Removing basic block 507
Removing basic block 508
Removing basic block 509
Removing basic block 510
Removing basic block 511
Removing basic block 519
Removing basic block 534
Removing basic block 535
Removing basic block 536
Removing basic block 560
Removing basic block 561
Removing basic block 562
Removing basic block 563
Removing basic block 564
Removing basic block 565
Removing basic block 566
Removing basic block 567
Removing basic block 568
Removing basic block 581
Removing basic block 594
Removing basic block 595
Removing basic block 596
Removing basic block 597
Removing basic block 598
Removing basic block 599
Removing basic block 612
Removing basic block 615
Removing basic block 616
Removing basic block 617
Removing basic block 625
Removing basic block 642
Removing basic block 643
Removing basic block 644
Removing basic block 645
Removing basic block 669
Removing basic block 670
Removing basic block 671
Removing basic block 672
Removing basic block 673
Removing basic block 674
Removing basic block 675
Removing basic block 676
Removing basic block 677
Removing basic block 698
Removing basic block 699
Removing basic block 700
Removing basic block 701
Removing basic block 702
Removing basic block 703
Removing basic block 711
Removing basic block 714
Removing basic block 715
Removing basic block 716
Removing basic block 717
Removing basic block 740
Removing basic block 741
Removing basic block 744
Removing basic block 747
Removing basic block 760
Removing basic block 761
Removing basic block 766
Removing basic block 767
Removing basic block 770
Removing basic block 777
Removing basic block 793
Removing basic block 794
Removing basic block 795
Removing basic block 796
Removing basic block 799
Removing basic block 800
Removing basic block 801
Removing basic block 802
Removing basic block 803
Removing basic block 806
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 637, latch 636
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 5
;;  header 612, latch 611
;;  depth 2, outer 3
;;  nodes: 612 611 599 608 606 603 610 609 602 601 600 605 604 607 598 597
;;
;; Loop 4
;;  header 635, latch 634
;;  depth 2, outer 3
;;  nodes: 635 634 623 633 625 630 628 627 626 629 624 632 631 622 621
;;
;; Loop 2
;;  header 361, latch 360
;;  depth 1, outer 0
;;  nodes: 361 360 256 310 308 347 354 344 296 303 293 359 358 357 356 355 291 292 289 290 287 288 275 276 273 274 264 267 272 269 265 268 271 270 266 263 261 262 259 260 258 257 277 286 278 282 285 280 279 284 283 281 301 302 298 300 299 297 295 294 342 343 340 341 338 339 328 330 334 337 332 329 331 336 335 333 327 325 326 316 319 324 321 317 320 323 322 318 315 313 314 311 312 352 353 349 351 350 348 346 345 307 306 305 304 309
;;
;; Loop 1
;;  header 211, latch 210
;;  depth 1, outer 0
;;  nodes: 211 210 117 165 163 197 204 194 151 158 148 209 208 207 206 205 146 147 144 145 142 143 133 134 131 132 125 128 130 129 127 126 124 122 123 120 121 119 118 135 141 137 139 140 138 136 156 157 153 155 154 152 150 149 192 193 190 191 188 189 179 180 177 178 171 174 176 175 173 172 170 168 169 166 167 181 187 183 185 186 184 182 202 203 199 201 200 198 196 195 162 161 160 159 164
;; 2 succs { 3 4 }
;; 3 succs { 28 }
;; 4 succs { 5 6 }
;; 5 succs { 16 6 }
;; 6 succs { 7 8 }
;; 7 succs { 16 8 }
;; 8 succs { 9 10 }
;; 9 succs { 16 10 }
;; 10 succs { 11 12 }
;; 11 succs { 16 12 }
;; 12 succs { 13 14 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 28 }
;; 20 succs { 21 28 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 640 }
;; 29 succs { 31 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 366 }
;; 34 succs { 35 44 }
;; 35 succs { 651 36 }
;; 36 succs { 37 40 }
;; 37 succs { 651 38 }
;; 38 succs { 39 366 }
;; 39 succs { 366 }
;; 40 succs { 651 41 }
;; 41 succs { 42 366 }
;; 42 succs { 651 43 }
;; 43 succs { 366 }
;; 44 succs { 45 366 }
;; 45 succs { 46 53 }
;; 46 succs { 47 49 }
;; 47 succs { 48 49 }
;; 48 succs { 50 }
;; 49 succs { 50 }
;; 50 succs { 51 53 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 651 54 }
;; 54 succs { 55 58 }
;; 55 succs { 651 56 }
;; 56 succs { 57 58 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 60 62 }
;; 60 succs { 651 61 }
;; 61 succs { 62 }
;; 62 succs { 651 63 }
;; 63 succs { 64 67 }
;; 64 succs { 651 65 }
;; 65 succs { 66 67 }
;; 66 succs { 68 }
;; 67 succs { 68 }
;; 68 succs { 69 71 }
;; 69 succs { 651 70 }
;; 70 succs { 71 }
;; 71 succs { 651 72 }
;; 72 succs { 73 78 }
;; 73 succs { 651 74 }
;; 74 succs { 75 78 }
;; 75 succs { 651 76 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 651 79 }
;; 79 succs { 80 85 }
;; 80 succs { 651 81 }
;; 81 succs { 82 85 }
;; 82 succs { 651 83 }
;; 83 succs { 84 85 }
;; 84 succs { 85 }
;; 85 succs { 651 86 }
;; 86 succs { 87 214 }
;; 87 succs { 651 88 }
;; 88 succs { 89 214 }
;; 89 succs { 644 90 }
;; 90 succs { 644 91 }
;; 91 succs { 92 213 }
;; 92 succs { 93 102 }
;; 93 succs { 94 104 }
;; 94 succs { 95 100 }
;; 95 succs { 96 104 }
;; 96 succs { 644 97 }
;; 97 succs { 98 104 }
;; 98 succs { 644 99 }
;; 99 succs { 104 }
;; 100 succs { 101 104 }
;; 101 succs { 104 }
;; 102 succs { 103 104 }
;; 103 succs { 104 }
;; 104 succs { 105 213 }
;; 105 succs { 106 213 }
;; 106 succs { 107 108 }
;; 107 succs { 108 }
;; 108 succs { 641 109 }
;; 109 succs { 110 212 }
;; 110 succs { 641 111 }
;; 111 succs { 641 112 }
;; 112 succs { 641 113 }
;; 113 succs { 641 114 }
;; 114 succs { 115 212 }
;; 115 succs { 116 212 }
;; 116 succs { 211 }
;; 117 succs { 118 210 }
;; 118 succs { 641 119 }
;; 119 succs { 120 164 }
;; 120 succs { 121 122 }
;; 121 succs { 122 }
;; 122 succs { 123 124 }
;; 123 succs { 124 }
;; 124 succs { 125 132 }
;; 125 succs { 126 133 }
;; 126 succs { 641 127 }
;; 127 succs { 128 133 }
;; 128 succs { 129 133 }
;; 129 succs { 130 133 }
;; 130 succs { 131 133 }
;; 131 succs { 133 }
;; 132 succs { 133 }
;; 133 succs { 134 143 }
;; 134 succs { 135 143 }
;; 135 succs { 136 142 }
;; 136 succs { 641 137 }
;; 137 succs { 138 142 }
;; 138 succs { 139 142 }
;; 139 succs { 140 142 }
;; 140 succs { 141 142 }
;; 141 succs { 142 }
;; 142 succs { 144 }
;; 143 succs { 144 }
;; 144 succs { 145 146 }
;; 145 succs { 146 }
;; 146 succs { 147 148 }
;; 147 succs { 148 }
;; 148 succs { 149 210 }
;; 149 succs { 641 150 }
;; 150 succs { 641 151 }
;; 151 succs { 152 210 }
;; 152 succs { 641 153 }
;; 153 succs { 154 157 }
;; 154 succs { 641 155 }
;; 155 succs { 156 157 }
;; 156 succs { 158 }
;; 157 succs { 158 }
;; 158 succs { 159 210 }
;; 159 succs { 641 160 }
;; 160 succs { 641 161 }
;; 161 succs { 641 162 }
;; 162 succs { 641 163 }
;; 163 succs { 641 210 }
;; 164 succs { 641 165 }
;; 165 succs { 166 210 }
;; 166 succs { 167 168 }
;; 167 succs { 168 }
;; 168 succs { 169 170 }
;; 169 succs { 170 }
;; 170 succs { 171 178 }
;; 171 succs { 172 179 }
;; 172 succs { 641 173 }
;; 173 succs { 174 179 }
;; 174 succs { 175 179 }
;; 175 succs { 176 179 }
;; 176 succs { 177 179 }
;; 177 succs { 179 }
;; 178 succs { 179 }
;; 179 succs { 180 189 }
;; 180 succs { 181 189 }
;; 181 succs { 182 188 }
;; 182 succs { 641 183 }
;; 183 succs { 184 188 }
;; 184 succs { 185 188 }
;; 185 succs { 186 188 }
;; 186 succs { 187 188 }
;; 187 succs { 188 }
;; 188 succs { 190 }
;; 189 succs { 190 }
;; 190 succs { 191 192 }
;; 191 succs { 192 }
;; 192 succs { 193 194 }
;; 193 succs { 194 }
;; 194 succs { 195 210 }
;; 195 succs { 641 196 }
;; 196 succs { 641 197 }
;; 197 succs { 198 210 }
;; 198 succs { 641 199 }
;; 199 succs { 200 203 }
;; 200 succs { 641 201 }
;; 201 succs { 202 203 }
;; 202 succs { 204 }
;; 203 succs { 204 }
;; 204 succs { 205 210 }
;; 205 succs { 641 206 }
;; 206 succs { 641 207 }
;; 207 succs { 641 208 }
;; 208 succs { 641 209 }
;; 209 succs { 641 210 }
;; 210 succs { 211 }
;; 211 succs { 117 212 }
;; 212 succs { 213 }
;; 213 succs { 214 }
;; 214 succs { 651 215 }
;; 215 succs { 216 366 }
;; 216 succs { 651 217 }
;; 217 succs { 218 366 }
;; 218 succs { 648 219 }
;; 219 succs { 648 220 }
;; 220 succs { 221 363 }
;; 221 succs { 222 241 }
;; 222 succs { 223 241 }
;; 223 succs { 224 239 }
;; 224 succs { 225 229 }
;; 225 succs { 648 226 }
;; 226 succs { 227 229 }
;; 227 succs { 648 228 }
;; 228 succs { 229 }
;; 229 succs { 648 230 }
;; 230 succs { 231 241 }
;; 231 succs { 232 235 }
;; 232 succs { 648 233 }
;; 233 succs { 234 235 }
;; 234 succs { 236 }
;; 235 succs { 236 }
;; 236 succs { 237 241 }
;; 237 succs { 648 238 }
;; 238 succs { 648 241 }
;; 239 succs { 240 241 }
;; 240 succs { 241 }
;; 241 succs { 242 365 }
;; 242 succs { 243 365 }
;; 243 succs { 244 245 }
;; 244 succs { 245 }
;; 245 succs { 645 246 }
;; 246 succs { 247 362 }
;; 247 succs { 645 248 }
;; 248 succs { 645 249 }
;; 249 succs { 645 250 }
;; 250 succs { 645 251 }
;; 251 succs { 252 362 }
;; 252 succs { 253 254 }
;; 253 succs { 254 }
;; 254 succs { 255 362 }
;; 255 succs { 361 }
;; 256 succs { 257 360 }
;; 257 succs { 645 258 }
;; 258 succs { 259 309 }
;; 259 succs { 260 261 }
;; 260 succs { 261 }
;; 261 succs { 262 263 }
;; 262 succs { 263 }
;; 263 succs { 264 274 }
;; 264 succs { 265 275 }
;; 265 succs { 266 275 }
;; 266 succs { 645 267 }
;; 267 succs { 268 275 }
;; 268 succs { 645 269 }
;; 269 succs { 270 275 }
;; 270 succs { 271 273 }
;; 271 succs { 645 272 }
;; 272 succs { 275 }
;; 273 succs { 275 }
;; 274 succs { 275 }
;; 275 succs { 276 288 }
;; 276 succs { 277 288 }
;; 277 succs { 278 287 }
;; 278 succs { 279 287 }
;; 279 succs { 645 280 }
;; 280 succs { 281 287 }
;; 281 succs { 645 282 }
;; 282 succs { 283 287 }
;; 283 succs { 284 286 }
;; 284 succs { 645 285 }
;; 285 succs { 287 }
;; 286 succs { 287 }
;; 287 succs { 289 }
;; 288 succs { 289 }
;; 289 succs { 290 291 }
;; 290 succs { 291 }
;; 291 succs { 292 293 }
;; 292 succs { 293 }
;; 293 succs { 294 360 }
;; 294 succs { 645 295 }
;; 295 succs { 645 296 }
;; 296 succs { 297 360 }
;; 297 succs { 645 298 }
;; 298 succs { 299 302 }
;; 299 succs { 645 300 }
;; 300 succs { 301 302 }
;; 301 succs { 303 }
;; 302 succs { 303 }
;; 303 succs { 304 360 }
;; 304 succs { 645 305 }
;; 305 succs { 645 306 }
;; 306 succs { 645 307 }
;; 307 succs { 645 308 }
;; 308 succs { 645 360 }
;; 309 succs { 645 310 }
;; 310 succs { 311 360 }
;; 311 succs { 312 313 }
;; 312 succs { 313 }
;; 313 succs { 314 315 }
;; 314 succs { 315 }
;; 315 succs { 316 326 }
;; 316 succs { 317 327 }
;; 317 succs { 318 327 }
;; 318 succs { 645 319 }
;; 319 succs { 320 327 }
;; 320 succs { 645 321 }
;; 321 succs { 322 327 }
;; 322 succs { 323 325 }
;; 323 succs { 645 324 }
;; 324 succs { 327 }
;; 325 succs { 327 }
;; 326 succs { 327 }
;; 327 succs { 328 339 }
;; 328 succs { 329 340 }
;; 329 succs { 330 340 }
;; 330 succs { 331 340 }
;; 331 succs { 645 332 }
;; 332 succs { 333 340 }
;; 333 succs { 645 334 }
;; 334 succs { 335 340 }
;; 335 succs { 336 338 }
;; 336 succs { 645 337 }
;; 337 succs { 340 }
;; 338 succs { 340 }
;; 339 succs { 340 }
;; 340 succs { 341 342 }
;; 341 succs { 342 }
;; 342 succs { 343 344 }
;; 343 succs { 344 }
;; 344 succs { 345 360 }
;; 345 succs { 645 346 }
;; 346 succs { 645 347 }
;; 347 succs { 348 360 }
;; 348 succs { 645 349 }
;; 349 succs { 350 353 }
;; 350 succs { 645 351 }
;; 351 succs { 352 353 }
;; 352 succs { 354 }
;; 353 succs { 354 }
;; 354 succs { 355 360 }
;; 355 succs { 645 356 }
;; 356 succs { 645 357 }
;; 357 succs { 645 358 }
;; 358 succs { 645 359 }
;; 359 succs { 645 360 }
;; 360 succs { 361 }
;; 361 succs { 256 362 }
;; 362 succs { 365 }
;; 363 succs { 364 365 }
;; 364 succs { 365 }
;; 365 succs { 366 }
;; 366 succs { 651 367 }
;; 367 succs { 651 368 }
;; 368 succs { 369 372 }
;; 369 succs { 651 370 }
;; 370 succs { 371 372 }
;; 371 succs { 373 }
;; 372 succs { 373 }
;; 373 succs { 374 376 }
;; 374 succs { 651 375 }
;; 375 succs { 651 386 }
;; 376 succs { 651 377 }
;; 377 succs { 651 378 }
;; 378 succs { 379 382 }
;; 379 succs { 651 380 }
;; 380 succs { 381 382 }
;; 381 succs { 383 }
;; 382 succs { 383 }
;; 383 succs { 384 386 }
;; 384 succs { 651 385 }
;; 385 succs { 651 386 }
;; 386 succs { 387 639 }
;; 387 succs { 649 388 }
;; 388 succs { 389 638 }
;; 389 succs { 649 390 }
;; 390 succs { 637 }
;; 391 succs { 392 569 }
;; 392 succs { 649 393 }
;; 393 succs { 394 412 }
;; 394 succs { 649 395 }
;; 395 succs { 649 396 }
;; 396 succs { 397 636 }
;; 397 succs { 398 399 }
;; 398 succs { 649 401 }
;; 399 succs { 649 400 }
;; 400 succs { 649 401 }
;; 401 succs { 649 402 }
;; 402 succs { 403 636 }
;; 403 succs { 404 636 }
;; 404 succs { 405 636 }
;; 405 succs { 649 406 }
;; 406 succs { 407 636 }
;; 407 succs { 649 408 }
;; 408 succs { 409 636 }
;; 409 succs { 649 410 }
;; 410 succs { 649 411 }
;; 411 succs { 649 636 }
;; 412 succs { 649 413 }
;; 413 succs { 414 494 }
;; 414 succs { 649 415 }
;; 415 succs { 649 416 }
;; 416 succs { 417 433 }
;; 417 succs { 418 419 }
;; 418 succs { 649 421 }
;; 419 succs { 649 420 }
;; 420 succs { 649 421 }
;; 421 succs { 649 422 }
;; 422 succs { 423 433 }
;; 423 succs { 649 424 }
;; 424 succs { 425 428 }
;; 425 succs { 649 426 }
;; 426 succs { 427 428 }
;; 427 succs { 429 }
;; 428 succs { 429 }
;; 429 succs { 430 433 }
;; 430 succs { 649 431 }
;; 431 succs { 649 432 }
;; 432 succs { 649 433 }
;; 433 succs { 649 434 }
;; 434 succs { 435 438 }
;; 435 succs { 649 436 }
;; 436 succs { 437 438 }
;; 437 succs { 439 }
;; 438 succs { 439 }
;; 439 succs { 440 456 }
;; 440 succs { 649 441 }
;; 441 succs { 649 442 }
;; 442 succs { 443 636 }
;; 443 succs { 649 444 }
;; 444 succs { 445 636 }
;; 445 succs { 446 636 }
;; 446 succs { 447 636 }
;; 447 succs { 448 636 }
;; 448 succs { 449 636 }
;; 449 succs { 649 450 }
;; 450 succs { 451 636 }
;; 451 succs { 649 452 }
;; 452 succs { 453 636 }
;; 453 succs { 649 454 }
;; 454 succs { 649 455 }
;; 455 succs { 649 636 }
;; 456 succs { 649 457 }
;; 457 succs { 458 461 }
;; 458 succs { 649 459 }
;; 459 succs { 460 461 }
;; 460 succs { 462 }
;; 461 succs { 462 }
;; 462 succs { 463 480 }
;; 463 succs { 649 464 }
;; 464 succs { 649 465 }
;; 465 succs { 466 636 }
;; 466 succs { 467 468 }
;; 467 succs { 649 470 }
;; 468 succs { 649 469 }
;; 469 succs { 649 470 }
;; 470 succs { 649 471 }
;; 471 succs { 472 636 }
;; 472 succs { 473 636 }
;; 473 succs { 649 474 }
;; 474 succs { 475 636 }
;; 475 succs { 649 476 }
;; 476 succs { 477 636 }
;; 477 succs { 649 478 }
;; 478 succs { 649 479 }
;; 479 succs { 649 636 }
;; 480 succs { 649 481 }
;; 481 succs { 482 485 }
;; 482 succs { 649 483 }
;; 483 succs { 484 485 }
;; 484 succs { 486 }
;; 485 succs { 486 }
;; 486 succs { 487 636 }
;; 487 succs { 649 488 }
;; 488 succs { 649 489 }
;; 489 succs { 490 636 }
;; 490 succs { 491 492 }
;; 491 succs { 649 636 }
;; 492 succs { 649 493 }
;; 493 succs { 649 636 }
;; 494 succs { 649 495 }
;; 495 succs { 496 636 }
;; 496 succs { 649 497 }
;; 497 succs { 649 498 }
;; 498 succs { 499 517 }
;; 499 succs { 500 501 }
;; 500 succs { 649 503 }
;; 501 succs { 649 502 }
;; 502 succs { 649 503 }
;; 503 succs { 649 504 }
;; 504 succs { 505 517 }
;; 505 succs { 649 506 }
;; 506 succs { 507 517 }
;; 507 succs { 649 508 }
;; 508 succs { 509 512 }
;; 509 succs { 649 510 }
;; 510 succs { 511 512 }
;; 511 succs { 513 }
;; 512 succs { 513 }
;; 513 succs { 514 517 }
;; 514 succs { 649 515 }
;; 515 succs { 649 516 }
;; 516 succs { 649 517 }
;; 517 succs { 649 518 }
;; 518 succs { 519 522 }
;; 519 succs { 649 520 }
;; 520 succs { 521 522 }
;; 521 succs { 523 }
;; 522 succs { 523 }
;; 523 succs { 524 540 }
;; 524 succs { 649 525 }
;; 525 succs { 649 526 }
;; 526 succs { 527 636 }
;; 527 succs { 649 528 }
;; 528 succs { 529 636 }
;; 529 succs { 530 636 }
;; 530 succs { 531 636 }
;; 531 succs { 532 636 }
;; 532 succs { 533 636 }
;; 533 succs { 649 534 }
;; 534 succs { 535 636 }
;; 535 succs { 649 536 }
;; 536 succs { 537 636 }
;; 537 succs { 649 538 }
;; 538 succs { 649 539 }
;; 539 succs { 649 636 }
;; 540 succs { 649 541 }
;; 541 succs { 542 545 }
;; 542 succs { 649 543 }
;; 543 succs { 544 545 }
;; 544 succs { 546 }
;; 545 succs { 546 }
;; 546 succs { 547 560 }
;; 547 succs { 649 548 }
;; 548 succs { 649 549 }
;; 549 succs { 550 636 }
;; 550 succs { 649 551 }
;; 551 succs { 552 636 }
;; 552 succs { 553 636 }
;; 553 succs { 649 554 }
;; 554 succs { 555 636 }
;; 555 succs { 649 556 }
;; 556 succs { 557 636 }
;; 557 succs { 649 558 }
;; 558 succs { 649 559 }
;; 559 succs { 649 636 }
;; 560 succs { 649 561 }
;; 561 succs { 562 636 }
;; 562 succs { 649 563 }
;; 563 succs { 649 564 }
;; 564 succs { 565 636 }
;; 565 succs { 566 567 }
;; 566 succs { 649 636 }
;; 567 succs { 649 568 }
;; 568 succs { 649 636 }
;; 569 succs { 570 636 }
;; 570 succs { 571 636 }
;; 571 succs { 649 572 }
;; 572 succs { 573 636 }
;; 573 succs { 649 574 }
;; 574 succs { 649 575 }
;; 575 succs { 649 576 }
;; 576 succs { 579 577 }
;; 577 succs { 649 578 }
;; 578 succs { 579 580 }
;; 579 succs { 581 }
;; 580 succs { 581 }
;; 581 succs { 582 636 }
;; 582 succs { 649 583 }
;; 583 succs { 649 584 }
;; 584 succs { 585 613 }
;; 585 succs { 586 595 }
;; 586 succs { 587 591 }
;; 587 succs { 649 588 }
;; 588 succs { 589 595 }
;; 589 succs { 649 590 }
;; 590 succs { 649 595 }
;; 591 succs { 592 593 }
;; 592 succs { 649 595 }
;; 593 succs { 649 594 }
;; 594 succs { 649 595 }
;; 595 succs { 649 596 }
;; 596 succs { 612 }
;; 597 succs { 649 598 }
;; 598 succs { 649 599 }
;; 599 succs { 600 611 }
;; 600 succs { 649 601 }
;; 601 succs { 602 607 }
;; 602 succs { 649 603 }
;; 603 succs { 604 611 }
;; 604 succs { 649 605 }
;; 605 succs { 649 606 }
;; 606 succs { 649 611 }
;; 607 succs { 649 608 }
;; 608 succs { 609 611 }
;; 609 succs { 649 610 }
;; 610 succs { 649 611 }
;; 611 succs { 612 }
;; 612 succs { 597 636 }
;; 613 succs { 649 614 }
;; 614 succs { 615 636 }
;; 615 succs { 649 616 }
;; 616 succs { 617 619 }
;; 617 succs { 649 618 }
;; 618 succs { 649 619 }
;; 619 succs { 649 620 }
;; 620 succs { 635 }
;; 621 succs { 649 622 }
;; 622 succs { 649 623 }
;; 623 succs { 624 634 }
;; 624 succs { 649 625 }
;; 625 succs { 626 634 }
;; 626 succs { 649 627 }
;; 627 succs { 649 628 }
;; 628 succs { 629 634 }
;; 629 succs { 649 630 }
;; 630 succs { 631 634 }
;; 631 succs { 649 632 }
;; 632 succs { 649 633 }
;; 633 succs { 649 634 }
;; 634 succs { 635 }
;; 635 succs { 621 636 }
;; 636 succs { 637 }
;; 637 succs { 391 638 }
;; 638 succs { 639 }
;; 639 succs { 640 }
;; 640 succs { 1 }
;; 641 succs { 642 }
;; 642 succs { 643 }
;; 643 succs { 644 }
;; 644 succs { 651 }
;; 645 succs { 646 }
;; 646 succs { 647 }
;; 647 succs { 648 }
;; 648 succs { 651 }
;; 649 succs { 650 }
;; 650 succs { 651 }
;; 651 succs { }
void Varnew_search_imm_use (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.255245;
  union tree_node * D.255244;
  union tree_node * D.255243;
  int D.255242;
  union tree_node * D.255241;
  union tree_node * D.255240;
  int D.255239;
  union tree_node * D.255238;
  unsigned int D.255237;
  union tree_node * D.255236;
  union tree_node * D.255235;
  int D.255234;
  union tree_node * D.255233;
  union tree_node * D.255232;
  union tree_node * D.255231;
  union tree_node * D.255230;
  union tree_node * D.255229;
  union tree_node * D.255228;
  int D.255227;
  union tree_node * D.255226;
  unsigned int D.255225;
  union tree_node * D.255224;
  union tree_node * D.255223;
  int D.255222;
  int D.255221;
  union tree_node * D.255220;
  union tree_node * D.255219;
  union tree_node * D.255218;
  const char * D.255217;
  union tree_node * D.255216;
  union tree_node * D.255215;
  union tree_node * D.255214;
  int D.255213;
  union tree_node * D.255212;
  union tree_node * D.255211;
  union tree_node * D.255210;
  union tree_node * D.255209;
  union tree_node * D.255208;
  union tree_node * D.255207;
  union tree_node * D.255206;
  int D.255205;
  union tree_node * D.255204;
  union tree_node * D.255203;
  union tree_node * D.255202;
  union tree_node * D.255201;
  union tree_node * D.255200;
  union tree_node * D.255199;
  union tree_node * D.255198;
  union tree_node * D.255197;
  int D.255196;
  union tree_node * D.255195;
  union tree_node * D.255194;
  union tree_node * D.255193;
  union tree_node * D.255192;
  union tree_node * D.255191;
  int D.255190;
  union tree_node * D.255189;
  int D.255188;
  union tree_node * D.255187;
  union tree_node * D.255186;
  int D.255185;
  union tree_node * D.255184;
  union tree_node * D.255183;
  union tree_node * D.255182;
  int D.255181;
  union tree_node * D.255180;
  union tree_node * D.255179;
  union tree_node * D.255178;
  union tree_node * D.255177;
  union tree_node * D.255176;
  union tree_node * D.255175;
  union tree_node * D.255174;
  union tree_node * D.255173;
  union tree_node * D.255172;
  int D.255171;
  union tree_node * D.255170;
  union tree_node * D.255169;
  union tree_node * D.255168;
  union tree_node * D.255167;
  union tree_node * D.255166;
  union tree_node * D.255165;
  union tree_node * D.255164;
  union tree_node * D.255163;
  int D.255162;
  union tree_node * D.255161;
  union tree_node * D.255160;
  union tree_node * D.255159;
  union tree_node * D.255158;
  union tree_node * D.255157;
  int D.255156;
  union tree_node * D.255155;
  int D.255154;
  union tree_node * D.255153;
  int D.255152;
  union tree_node * D.255151;
  union tree_node * D.255150;
  union tree_node * D.255149;
  union tree_node * D.255148;
  union tree_node * D.255147;
  union tree_node * D.255146;
  union tree_node * D.255145;
  union tree_node * D.255144;
  int D.255143;
  union tree_node * D.255142;
  union tree_node * D.255141;
  struct function_assign_array * D.255140;
  union tree_node * D.255139;
  int D.255138;
  int D.255137;
  union tree_node * D.255136;
  union tree_node * D.255135;
  int D.255134;
  int D.255133;
  union tree_node * D.255132;
  union tree_node * D.255127;
  union tree_node * D.255126;
  union tree_node * D.255125;
  int D.255124;
  union tree_node * D.255123;
  int D.255122;
  union tree_node * D.255121;
  union tree_node * D.255120;
  union tree_node * D.255119;
  union tree_node * D.255118;
  union tree_node * D.255117;
  union tree_node * D.255116;
  union tree_node * D.255115;
  union tree_node * D.255114;
  union tree_node * D.255113;
  union tree_node * D.255112;
  union tree_node * D.255111;
  int D.255110;
  union tree_node * D.255109;
  int D.255108;
  union tree_node * D.255107;
  union tree_node * D.255106;
  union tree_node * D.255105;
  union tree_node * D.255104;
  union tree_node * D.255103;
  union tree_node * D.255102;
  union tree_node * D.255101;
  union tree_node * D.255100;
  struct function_assign_array * D.255099;
  struct function_assign_array * D.255098;
  struct function_assign_array * D.255097;
  int D.255096;
  int D.255095;
  union tree_node * D.255094;
  union tree_node * D.255093;
  union tree_node * D.255092;
  union tree_node * D.255091;
  union tree_node * D.255090;
  union tree_node * D.255089;
  union tree_node * D.255084;
  union tree_node * D.255083;
  union tree_node * D.255082;
  int D.255081;
  union tree_node * D.255080;
  int D.255079;
  union tree_node * D.255078;
  union tree_node * D.255077;
  union tree_node * D.255076;
  union tree_node * D.255075;
  union tree_node * D.255074;
  union tree_node * D.255073;
  union tree_node * D.255072;
  int D.255071;
  union tree_node * D.255070;
  int D.255069;
  union tree_node * D.255068;
  union tree_node * D.255067;
  union tree_node * D.255066;
  union tree_node * D.255065;
  struct function_assign_array * D.255064;
  struct function_assign_array * D.255063;
  struct function_assign_array * D.255062;
  union tree_node * D.255061;
  union tree_node * D.255060;
  union tree_node * D.255059;
  union tree_node * D.255058;
  union tree_node * D.255057;
  union tree_node * D.255056;
  union tree_node * D.255055;
  union tree_node * D.255054;
  union tree_node * D.255053;
  union tree_node * D.255052;
  union tree_node * D.255051;
  union tree_node * D.255050;
  union tree_node * D.255049;
  union tree_node * D.255048;
  union tree_node * D.255047;
  union tree_node * D.255046;
  union tree_node * D.255045;
  union tree_node * D.255044;
  union tree_node * D.255043;
  union tree_node * D.255042;
  union tree_node * D.255041;
  union tree_node * D.255040;
  union tree_node * D.255039;
  union tree_node * D.255038;
  union tree_node * D.255037;
  union tree_node * D.255036;
  union tree_node * D.255035;
  union tree_node * D.255034;
  union tree_node * D.255033;
  union tree_node * D.255032;
  union tree_node * D.255031;
  union tree_node * D.255030;
  union tree_node * D.255029;
  union tree_node * D.255028;
  int i;
  int size;
  int i;
  int size;
  const char * name;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * nowstmt;
  int i;
  struct function_assign_array assign_array;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * getfiledtree;
  struct gimple * def_stmt2;
  union tree_node * getfiledtree;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  union tree_node * getfiledtree;
  struct gimple * def_stmt2;
  union tree_node * getfiledtree;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * second;
  union tree_node * second;
  union tree_node * ssa_var;
  union tree_node * first;
  union tree_node * getFunctionAssignVAR;
  union tree_node * ssa_var;
  int passfilter;
  bool retval.1244;
  bool retval.1240;
  bool retval.1238;
  bool retval.1236;
  bool retval.1234;
  bool retval.1233;
  bool retval.1232;
  bool retval.1229;
  bool retval.1225;
  bool retval.1223;
  bool retval.1221;
  bool retval.1220;
  bool retval.1219;
  bool retval.1218;
  bool iftmp.1217;
  bool retval.1216;
  bool retval.1215;
  bool retval.1214;
  bool retval.1213;
  bool retval.1212;
  bool retval.1211;
  bool retval.1210;
  bool retval.1209;
  bool retval.1208;
  bool retval.1207;
  bool retval.1206;
  bool iftmp.1205;
  bool retval.1204;
  bool retval.1203;
  bool retval.1202;
  bool retval.1201;
  bool retval.1200;
  bool iftmp.1199;
  bool retval.1198;
  bool iftmp.1197;
  bool retval.1196;
  bool retval.1195;
  bool retval.1194;
  bool retval.1193;
  bool retval.1192;
  bool retval.1191;
  bool retval.1190;
  bool retval.1189;
  bool iftmp.1188;
  bool retval.1187;
  bool retval.1186;
  bool retval.1185;
  bool retval.1184;
  bool retval.1183;
  bool retval.1182;
  bool iftmp.1181;
  bool retval.1180;
  bool retval.1179;
  bool retval.1178;
  bool retval.1177;
  bool retval.1176;
  bool iftmp.1175;
  bool retval.1174;
  bool iftmp.1173;
  bool retval.1172;
  bool retval.1171;
  bool retval.1170;
  bool retval.1169;
  bool retval.1168;
  bool retval.1167;
  bool retval.1166;
  bool retval.1165;
  bool retval.1164;
  bool retval.1163;
  bool retval.1162;
  bool retval.1161;
  struct function_assign_array D.196353;
  bool retval.1158;
  bool iftmp.1156;
  bool retval.1155;
  bool iftmp.1154;
  bool retval.1153;
  bool retval.1152;
  bool iftmp.1151;
  bool retval.1150;
  bool retval.1149;
  bool retval.1148;
  bool retval.1147;
  bool retval.1146;
  bool retval.1145;
  bool retval.1144;
  bool retval.1143;
  bool retval.1142;
  bool iftmp.1141;
  bool retval.1140;
  bool retval.1139;
  bool retval.1138;
  bool retval.1137;
  bool retval.1136;
  bool retval.1135;
  bool retval.1134;
  bool retval.1133;
  bool retval.1132;
  bool retval.1131;
  bool retval.1129;
  bool retval.1126;
  bool iftmp.1123;
  bool retval.1122;
  bool retval.1121;
  bool retval.1120;
  bool retval.1119;
  bool retval.1118;
  bool retval.1117;
  bool retval.1116;
  bool iftmp.1115;
  bool retval.1114;
  bool retval.1113;
  bool retval.1112;
  bool retval.1111;
  bool retval.1110;
  bool iftmp.1109;
  bool retval.1108;
  bool retval.1107;
  bool retval.1106;
  bool retval.1105;
  bool retval.1104;
  bool retval.1103;
  bool retval.1101;
  bool retval.1098;
  bool retval.1095;
  bool retval.1094;
  bool retval.1093;
  bool retval.1092;
  bool retval.1091;
  bool retval.1090;
  bool retval.1089;
  bool retval.1088;
  bool iftmp.1087;
  bool retval.1086;
  bool iftmp.1085;
  bool retval.1084;
  union tree_node * iftmp.1083;
  bool retval.1082;
  bool retval.1081;
  bool retval.1080;
  bool retval.1079;
  bool iftmp.1078;
  bool retval.1077;
  union tree_node * iftmp.1076;
  bool iftmp.1075;
  bool retval.1074;
  bool retval.1073;

  <bb 2> :
  passfilter = 0;
  retval.1073 = is_gimple_call (use_stmt);
  if (retval.1073 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  passfilter = 1;
  goto <bb 28>; [INV]

  <bb 4> :
  D.255028 = gimple_assign_lhs (use_stmt);
  _1 = D.255028;
  if (_1 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.255029 = gimple_assign_lhs (use_stmt);
  _2 = D.255029;
  _3 = _2->base.code;
  if (_3 == 36)
    goto <bb 16>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  D.255030 = gimple_assign_rhs1 (use_stmt);
  _4 = D.255030;
  if (_4 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.255031 = gimple_assign_rhs1 (use_stmt);
  _5 = D.255031;
  _6 = _5->base.code;
  if (_6 == 36)
    goto <bb 16>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.255032 = gimple_assign_rhs1 (use_stmt);
  _7 = D.255032;
  if (_7 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.255033 = gimple_assign_rhs1 (use_stmt);
  _8 = D.255033;
  _9 = _8->base.code;
  if (_9 == 49)
    goto <bb 16>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  D.255034 = gimple_assign_lhs (use_stmt);
  _10 = D.255034;
  if (_10 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.255035 = gimple_assign_lhs (use_stmt);
  _11 = D.255035;
  _12 = _11->base.code;
  if (_12 == 49)
    goto <bb 16>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  D.255036 = gimple_assign_rhs1 (use_stmt);
  _13 = D.255036;
  if (_13 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  D.255037 = gimple_assign_rhs1 (use_stmt);
  _14 = D.255037;
  _15 = _14->base.code;
  if (_15 == 47)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.255038 = gimple_assign_lhs (use_stmt);
  _16 = D.255038;
  if (_16 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.255039 = gimple_assign_lhs (use_stmt);
  _17 = D.255039;
  _18 = _17->base.code;
  if (_18 == 47)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1075 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1075 = 0;

  <bb 18> :
  retval.1074 = iftmp.1075;
  if (retval.1074 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  passfilter = 1;
  goto <bb 28>; [INV]

  <bb 20> :
  _19 = target->base.code;
  if (_19 == 153)
    goto <bb 21>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 21> :
  _20 = target->ssa_name.var;
  if (_20 != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  _21 = target->ssa_name.var;
  _22 = _21->base.code;
  if (_22 != 1)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  iftmp.1076 = target->ssa_name.var;
  goto <bb 25>; [INV]

  <bb 24> :
  iftmp.1076 = 0B;

  <bb 25> :
  ssa_var = iftmp.1076;
  if (ssa_var != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  _23 = ssa_var->base.code;
  if (_23 == 36)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  passfilter = 1;

  <bb 28> :
  if (passfilter != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 640>; [INV]

  <bb 29> :
  _24 = is_gimple_assign (use_stmt);
  if (_24 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _25 = is_gimple_call (use_stmt);
  if (_25 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1078 = 1;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.1078 = 0;

  <bb 33> :
  retval.1077 = iftmp.1078;
  if (retval.1077 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 34> :
  retval.1079 = is_gimple_call (use_stmt);
  if (retval.1079 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 35> :
  D.255040 = gimple_call_arg (use_stmt, 0);

  <bb 36> :
  _26 = D.255040;
  _27 = _26->base.code;
  retval.1080 = _27 == 131;
  if (retval.1080 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 37> :
  D.255041 = gimple_call_arg (use_stmt, 0);

  <bb 38> :
  _28 = D.255041;
  first = _28->exp.operands[0];
  _29 = first->base.code;
  if (_29 == 36)
    goto <bb 39>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 39> :
  getFunctionAssignVAR = first;
  goto <bb 366>; [INV]

  <bb 40> :
  D.255042 = gimple_call_arg (use_stmt, 0);

  <bb 41> :
  _30 = D.255042;
  _31 = _30->base.code;
  retval.1081 = _31 == 36;
  if (retval.1081 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 42> :
  D.255043 = gimple_call_arg (use_stmt, 0);

  <bb 43> :
  _32 = D.255043;
  getFunctionAssignVAR = _32;
  goto <bb 366>; [INV]

  <bb 44> :
  retval.1082 = is_gimple_assign (use_stmt);
  if (retval.1082 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 45> :
  _33 = target->base.code;
  if (_33 == 153)
    goto <bb 46>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 46> :
  _34 = target->ssa_name.var;
  if (_34 != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _35 = target->ssa_name.var;
  _36 = _35->base.code;
  if (_36 != 1)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  iftmp.1083 = target->ssa_name.var;
  goto <bb 50>; [INV]

  <bb 49> :
  iftmp.1083 = 0B;

  <bb 50> :
  ssa_var = iftmp.1083;
  if (ssa_var != 0B)
    goto <bb 51>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 51> :
  _37 = ssa_var->base.code;
  if (_37 == 36)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  getFunctionAssignVAR = ssa_var;

  <bb 53> :
  D.255044 = gimple_assign_lhs (use_stmt);

  <bb 54> :
  _38 = D.255044;
  if (_38 != 0B)
    goto <bb 55>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 55> :
  D.255045 = gimple_assign_lhs (use_stmt);

  <bb 56> :
  _39 = D.255045;
  _40 = _39->base.code;
  if (_40 == 36)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  iftmp.1085 = 1;
  goto <bb 59>; [INV]

  <bb 58> :
  iftmp.1085 = 0;

  <bb 59> :
  retval.1084 = iftmp.1085;
  if (retval.1084 != 0)
    goto <bb 60>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 60> :
  D.255046 = gimple_assign_lhs (use_stmt);

  <bb 61> :
  _41 = D.255046;
  getFunctionAssignVAR = _41;

  <bb 62> :
  D.255047 = gimple_assign_rhs1 (use_stmt);

  <bb 63> :
  _42 = D.255047;
  if (_42 != 0B)
    goto <bb 64>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 64> :
  D.255048 = gimple_assign_rhs1 (use_stmt);

  <bb 65> :
  _43 = D.255048;
  _44 = _43->base.code;
  if (_44 == 36)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  iftmp.1087 = 1;
  goto <bb 68>; [INV]

  <bb 67> :
  iftmp.1087 = 0;

  <bb 68> :
  retval.1086 = iftmp.1087;
  if (retval.1086 != 0)
    goto <bb 69>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 69> :
  D.255049 = gimple_assign_rhs1 (use_stmt);

  <bb 70> :
  _45 = D.255049;
  getFunctionAssignVAR = _45;

  <bb 71> :
  D.255050 = gimple_assign_rhs1 (use_stmt);

  <bb 72> :
  _46 = D.255050;
  retval.1088 = _46 != 0B;
  if (retval.1088 != 0)
    goto <bb 73>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 73> :
  D.255051 = gimple_assign_rhs1 (use_stmt);

  <bb 74> :
  _47 = D.255051;
  _48 = _47->base.code;
  retval.1089 = _48 == 49;
  if (retval.1089 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 75> :
  D.255052 = gimple_assign_rhs1 (use_stmt);

  <bb 76> :
  _49 = D.255052;
  second = _49->exp.operands[0];
  if (second != 0B)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  getFunctionAssignVAR = second;

  <bb 78> :
  D.255053 = gimple_assign_lhs (use_stmt);

  <bb 79> :
  _50 = D.255053;
  retval.1090 = _50 != 0B;
  if (retval.1090 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 80> :
  D.255054 = gimple_assign_lhs (use_stmt);

  <bb 81> :
  _51 = D.255054;
  _52 = _51->base.code;
  retval.1091 = _52 == 49;
  if (retval.1091 != 0)
    goto <bb 82>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 82> :
  D.255055 = gimple_assign_lhs (use_stmt);

  <bb 83> :
  _53 = D.255055;
  second = _53->exp.operands[0];
  if (second != 0B)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  getFunctionAssignVAR = second;

  <bb 85> :
  D.255056 = gimple_assign_rhs1 (use_stmt);

  <bb 86> :
  _54 = D.255056;
  retval.1092 = _54 != 0B;
  if (retval.1092 != 0)
    goto <bb 87>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 87> :
  D.255057 = gimple_assign_rhs1 (use_stmt);

  <bb 88> :
  _55 = D.255057;
  _56 = _55->base.code;
  retval.1093 = _56 == 47;
  if (retval.1093 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 89> :
  D.255058 = gimple_assign_rhs1 (use_stmt);

  <bb 90> :
  _57 = D.255058;
  second = _57->exp.operands[0];
  D.255059 = gimple_assign_rhs1 (use_stmt);

  <bb 91> :
  _58 = D.255059;
  _59 = _58->exp.operands[1];
  second2 = _59;
  if (second != 0B)
    goto <bb 92>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 92> :
  _60 = second->base.code;
  if (_60 == 165)
    goto <bb 93>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 93> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 94>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 94> :
  _61 = three->base.code;
  if (_61 == 153)
    goto <bb 95>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 95> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1094 = is_gimple_assign (def_stmt);
  if (retval.1094 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 96> :
  D.255060 = gimple_assign_rhs1 (def_stmt);

  <bb 97> :
  _62 = D.255060;
  _63 = _62->base.code;
  retval.1095 = _63 == 36;
  if (retval.1095 != 0)
    goto <bb 98>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 98> :
  D.255061 = gimple_assign_rhs1 (def_stmt);

  <bb 99> :
  _64 = D.255061;
  getFunctionAssignVAR = _64;
  goto <bb 104>; [INV]

  <bb 100> :
  _65 = three->base.code;
  if (_65 == 36)
    goto <bb 101>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 101> :
  getFunctionAssignVAR = three;
  goto <bb 104>; [INV]

  <bb 102> :
  _66 = second->base.code;
  if (_66 == 36)
    goto <bb 103>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 103> :
  getFunctionAssignVAR = second;

  <bb 104> :
  second2.1096_67 = second2;
  if (second2.1096_67 != 0B)
    goto <bb 105>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 105> :
  second2.1097_68 = second2;
  _69 = second2.1097_68->base.code;
  if (_69 == 35)
    goto <bb 106>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 106> :
  _70 = second->base.code;
  if (_70 == 36)
    goto <bb 107>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 107> :
  getFunctionAssignVAR = second;

  <bb 108> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1099_71 = function_assign_collect;
  D.255062 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1099_71, &second2);

  <bb 109> :
  _72 = D.255062;
  retval.1098 = _72 != 0B;
  if (retval.1098 != 0)
    goto <bb 110>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 110> :
  function_assign_collect.1100_73 = function_assign_collect;
  D.255063 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1100_73, &second2);

  <bb 111> :
  _74 = D.255063;
  function_assign_array::operator= (&assign_array, _74);

  <bb 112> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 113> :
  function_assign_collect.1102_75 = function_assign_collect;
  D.255064 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1102_75, &second2);

  <bb 114> :
  _76 = D.255064;
  retval.1101 = _76 != 0B;
  if (retval.1101 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 115> :
  _77 = second->base.code;
  if (_77 != 36)
    goto <bb 116>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 116> :
  i = 0;
  goto <bb 211>; [INV]

  <bb 117> :
  _78 = (long unsigned int) i;
  _79 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _78);
  _80 = _79->stmt;
  _81 = gimple_code (_80);
  retval.1103 = _81 == 6;
  if (retval.1103 != 0)
    goto <bb 118>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 118> :
  _82 = (long unsigned int) i;
  _83 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _82);
  _84 = _83->stmt;
  D.255065 = gimple_assign_rhs1 (_84);

  <bb 119> :
  _85 = D.255065;
  _86 = _85->base.code;
  retval.1104 = _86 == 153;
  if (retval.1104 != 0)
    goto <bb 120>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 120> :
  filed_from = second->exp.operands[0];
  _87 = (long unsigned int) i;
  _88 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _87);
  _89 = _88->assign_tree;
  filed_from2 = _89->exp.operands[0];
  _90 = filed_from2->base.code;
  if (_90 == 165)
    goto <bb 121>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 121> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 122> :
  _91 = filed_from->base.code;
  if (_91 == 165)
    goto <bb 123>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 123> :
  filed_from = filed_from->exp.operands[0];

  <bb 124> :
  _92 = filed_from2->base.code;
  if (_92 == 153)
    goto <bb 125>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 125> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  getfiledtree = filed_from2;
  _93 = filed_from->base.code;
  if (_93 != 36)
    goto <bb 126>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 126> :
  D.255066 = gimple_assign_rhs1 (def_stmt);

  <bb 127> :
  getfiledtree = D.255066;
  if (def_stmt != 0B)
    goto <bb 128>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 128> :
  _94 = gimple_code (def_stmt);
  retval.1105 = _94 != 20;
  if (retval.1105 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 129> :
  if (getfiledtree != 0B)
    goto <bb 130>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 130> :
  _95 = getfiledtree->base.code;
  if (_95 != 0)
    goto <bb 131>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 131> :
  treecheck = getfiledtree;
  goto <bb 133>; [INV]

  <bb 132> :
  treecheck = filed_from2;

  <bb 133> :
  _96 = second->base.code;
  if (_96 != 36)
    goto <bb 134>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 134> :
  _97 = filed_from->base.code;
  if (_97 != 26)
    goto <bb 135>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 135> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  getfiledtree = filed_from;
  _98 = filed_from->base.code;
  if (_98 != 36)
    goto <bb 136>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 136> :
  D.255067 = gimple_assign_rhs1 (def_stmt2);

  <bb 137> :
  getfiledtree = D.255067;
  if (def_stmt2 != 0B)
    goto <bb 138>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 138> :
  _99 = gimple_code (def_stmt2);
  retval.1106 = _99 != 20;
  if (retval.1106 != 0)
    goto <bb 139>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 139> :
  if (getfiledtree != 0B)
    goto <bb 140>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 140> :
  _100 = getfiledtree->base.code;
  if (_100 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 141> :
  treecheck2 = getfiledtree;

  <bb 142> :
  goto <bb 144>; [INV]

  <bb 143> :
  treecheck2 = filed_from;

  <bb 144> :
  if (treecheck == 0B)
    goto <bb 145>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 145> :
  treecheck = filed_from2;

  <bb 146> :
  if (treecheck2 == 0B)
    goto <bb 147>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 147> :
  treecheck2 = filed_from;

  <bb 148> :
  if (treecheck2 == treecheck)
    goto <bb 149>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 149> :
  _101 = (long unsigned int) i;
  _102 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _101);
  _103 = _102->stmt;
  D.255068 = gimple_assign_rhs1 (_103);

  <bb 150> :
  _104 = D.255068;
  D.255069 = check_stmtStack (_104);

  <bb 151> :
  _105 = D.255069;
  retval.1107 = _105 == 0;
  if (retval.1107 != 0)
    goto <bb 152>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 152> :
  _106 = (long unsigned int) i;
  _107 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _106);
  _108 = _107->stmt;
  D.255070 = gimple_assign_rhs1 (_108);

  <bb 153> :
  _109 = D.255070;
  if (target2 != _109)
    goto <bb 154>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 154> :
  _110 = (long unsigned int) i;
  _111 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _110);
  _112 = _111->stmt;
  D.255071 = check_stmtStack2 (_112);

  <bb 155> :
  _113 = D.255071;
  if (_113 == 0)
    goto <bb 156>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 156> :
  iftmp.1109 = 1;
  goto <bb 158>; [INV]

  <bb 157> :
  iftmp.1109 = 0;

  <bb 158> :
  retval.1108 = iftmp.1109;
  if (retval.1108 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 159> :
  _114 = (long unsigned int) i;
  _115 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _114);
  _116 = _115->stmt;
  D.255072 = gimple_assign_rhs1 (_116);

  <bb 160> :
  _117 = D.255072;
  _118 = (long unsigned int) i;
  _119 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _118);
  _120 = _119->stmt;
  set_gimple_array (used_stmt, _120, _117, target, 0B);

  <bb 161> :
  _121 = (long unsigned int) i;
  _122 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _121);
  _123 = _122->stmt;
  D.255073 = gimple_assign_rhs1 (_123);

  <bb 162> :
  _124 = D.255073;
  _125 = (long unsigned int) i;
  _126 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _125);
  _127 = _126->stmt;
  D.255074 = gimple_assign_rhs1 (_127);

  <bb 163> :
  _128 = D.255074;
  new_search_imm_use (used_stmt, _128, _124);
  goto <bb 210>; [INV]

  <bb 164> :
  _129 = (long unsigned int) i;
  _130 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _129);
  _131 = _130->stmt;
  D.255075 = gimple_assign_lhs (_131);

  <bb 165> :
  _132 = D.255075;
  _133 = _132->base.code;
  retval.1110 = _133 == 153;
  if (retval.1110 != 0)
    goto <bb 166>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 166> :
  filed_from = second->exp.operands[0];
  _134 = (long unsigned int) i;
  _135 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _134);
  _136 = _135->assign_tree;
  filed_from2 = _136->exp.operands[0];
  _137 = filed_from2->base.code;
  if (_137 == 165)
    goto <bb 167>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 167> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 168> :
  _138 = filed_from->base.code;
  if (_138 == 165)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  filed_from = filed_from->exp.operands[0];

  <bb 170> :
  _139 = filed_from2->base.code;
  if (_139 == 153)
    goto <bb 171>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 171> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  getfiledtree = filed_from2;
  _140 = filed_from->base.code;
  if (_140 != 36)
    goto <bb 172>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 172> :
  D.255076 = gimple_assign_rhs1 (def_stmt);

  <bb 173> :
  getfiledtree = D.255076;
  if (def_stmt != 0B)
    goto <bb 174>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 174> :
  _141 = gimple_code (def_stmt);
  retval.1111 = _141 != 20;
  if (retval.1111 != 0)
    goto <bb 175>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 175> :
  if (getfiledtree != 0B)
    goto <bb 176>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 176> :
  _142 = getfiledtree->base.code;
  if (_142 != 0)
    goto <bb 177>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 177> :
  treecheck = getfiledtree;
  goto <bb 179>; [INV]

  <bb 178> :
  treecheck = filed_from2;

  <bb 179> :
  _143 = second->base.code;
  if (_143 != 36)
    goto <bb 180>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 180> :
  _144 = filed_from->base.code;
  if (_144 != 26)
    goto <bb 181>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 181> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  getfiledtree = filed_from;
  _145 = filed_from->base.code;
  if (_145 != 36)
    goto <bb 182>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 182> :
  D.255077 = gimple_assign_rhs1 (def_stmt2);

  <bb 183> :
  getfiledtree = D.255077;
  if (def_stmt2 != 0B)
    goto <bb 184>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 184> :
  _146 = gimple_code (def_stmt2);
  retval.1112 = _146 != 20;
  if (retval.1112 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 185> :
  if (getfiledtree != 0B)
    goto <bb 186>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 186> :
  _147 = getfiledtree->base.code;
  if (_147 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 187> :
  treecheck2 = getfiledtree;

  <bb 188> :
  goto <bb 190>; [INV]

  <bb 189> :
  treecheck2 = filed_from;

  <bb 190> :
  if (treecheck == 0B)
    goto <bb 191>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 191> :
  treecheck = filed_from2;

  <bb 192> :
  if (treecheck2 == 0B)
    goto <bb 193>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 193> :
  treecheck2 = filed_from;

  <bb 194> :
  if (treecheck2 == treecheck)
    goto <bb 195>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 195> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.255078 = gimple_assign_lhs (_150);

  <bb 196> :
  _151 = D.255078;
  D.255079 = check_stmtStack (_151);

  <bb 197> :
  _152 = D.255079;
  retval.1113 = _152 == 0;
  if (retval.1113 != 0)
    goto <bb 198>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 198> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.255080 = gimple_assign_lhs (_155);

  <bb 199> :
  _156 = D.255080;
  if (target2 != _156)
    goto <bb 200>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 200> :
  _157 = (long unsigned int) i;
  _158 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _157);
  _159 = _158->stmt;
  D.255081 = check_stmtStack2 (_159);

  <bb 201> :
  _160 = D.255081;
  if (_160 == 0)
    goto <bb 202>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 202> :
  iftmp.1115 = 1;
  goto <bb 204>; [INV]

  <bb 203> :
  iftmp.1115 = 0;

  <bb 204> :
  retval.1114 = iftmp.1115;
  if (retval.1114 != 0)
    goto <bb 205>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 205> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->stmt;
  D.255082 = gimple_assign_rhs1 (_163);

  <bb 206> :
  _164 = D.255082;
  _165 = (long unsigned int) i;
  _166 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _165);
  _167 = _166->stmt;
  set_gimple_array (used_stmt, _167, _164, target, 0B);

  <bb 207> :
  _168 = (long unsigned int) i;
  _169 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _168);
  _170 = _169->stmt;
  D.255083 = gimple_assign_lhs (_170);

  <bb 208> :
  _171 = D.255083;
  _172 = (long unsigned int) i;
  _173 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _172);
  _174 = _173->stmt;
  D.255084 = gimple_assign_lhs (_174);

  <bb 209> :
  _175 = D.255084;
  new_search_imm_use (used_stmt, _175, _171);

  <bb 210> :
  i = i + 1;

  <bb 211> :
  _176 = (long unsigned int) i;
  _177 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1116 = _176 < _177;
  if (retval.1116 != 0)
    goto <bb 117>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 212> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 213> :
  second2 = {CLOBBER};

  <bb 214> :
  D.255089 = gimple_assign_lhs (use_stmt);

  <bb 215> :
  _178 = D.255089;
  retval.1117 = _178 != 0B;
  if (retval.1117 != 0)
    goto <bb 216>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 216> :
  D.255090 = gimple_assign_lhs (use_stmt);

  <bb 217> :
  _179 = D.255090;
  _180 = _179->base.code;
  retval.1118 = _180 == 47;
  if (retval.1118 != 0)
    goto <bb 218>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 218> :
  D.255091 = gimple_assign_lhs (use_stmt);

  <bb 219> :
  _181 = D.255091;
  second = _181->exp.operands[0];
  D.255092 = gimple_assign_lhs (use_stmt);

  <bb 220> :
  _182 = D.255092;
  _183 = _182->exp.operands[1];
  second2 = _183;
  if (second != 0B)
    goto <bb 221>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 221> :
  three = second->exp.operands[0];
  _184 = second->base.code;
  if (_184 == 165)
    goto <bb 222>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 222> :
  if (three != 0B)
    goto <bb 223>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 223> :
  _185 = three->base.code;
  if (_185 == 153)
    goto <bb 224>; [INV]
  else
    goto <bb 239>; [INV]

  <bb 224> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1119 = is_gimple_assign (def_stmt);
  if (retval.1119 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 229>; [INV]

  <bb 225> :
  D.255093 = gimple_assign_rhs1 (def_stmt);

  <bb 226> :
  _186 = D.255093;
  _187 = _186->base.code;
  retval.1120 = _187 == 36;
  if (retval.1120 != 0)
    goto <bb 227>; [INV]
  else
    goto <bb 229>; [INV]

  <bb 227> :
  D.255094 = gimple_assign_rhs1 (def_stmt);

  <bb 228> :
  _188 = D.255094;
  getFunctionAssignVAR = _188;

  <bb 229> :
  D.255095 = check_stmtStack (three);

  <bb 230> :
  _189 = D.255095;
  retval.1121 = _189 == 0;
  if (retval.1121 != 0)
    goto <bb 231>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 231> :
  if (three != target2)
    goto <bb 232>; [INV]
  else
    goto <bb 235>; [INV]

  <bb 232> :
  D.255096 = check_stmtStack2 (use_stmt);

  <bb 233> :
  _190 = D.255096;
  if (_190 == 0)
    goto <bb 234>; [INV]
  else
    goto <bb 235>; [INV]

  <bb 234> :
  iftmp.1123 = 1;
  goto <bb 236>; [INV]

  <bb 235> :
  iftmp.1123 = 0;

  <bb 236> :
  retval.1122 = iftmp.1123;
  if (retval.1122 != 0)
    goto <bb 237>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 237> :
  set_gimple_array (used_stmt, use_stmt, three, target, 0B);

  <bb 238> :
  new_search_imm_use (used_stmt, three, three);
  goto <bb 241>; [INV]

  <bb 239> :
  _191 = three->base.code;
  if (_191 == 36)
    goto <bb 240>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 240> :
  getFunctionAssignVAR = three;

  <bb 241> :
  second2.1124_192 = second2;
  if (second2.1124_192 != 0B)
    goto <bb 242>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 242> :
  second2.1125_193 = second2;
  _194 = second2.1125_193->base.code;
  if (_194 == 35)
    goto <bb 243>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 243> :
  _195 = second->base.code;
  if (_195 == 36)
    goto <bb 244>; [INV]
  else
    goto <bb 245>; [INV]

  <bb 244> :
  getFunctionAssignVAR = second;

  <bb 245> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1127_196 = function_assign_collect;
  D.255097 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1127_196, &second2);

  <bb 246> :
  _197 = D.255097;
  retval.1126 = _197 != 0B;
  if (retval.1126 != 0)
    goto <bb 247>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 247> :
  function_assign_collect.1128_198 = function_assign_collect;
  D.255098 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1128_198, &second2);

  <bb 248> :
  _199 = D.255098;
  function_assign_array::operator= (&assign_array, _199);

  <bb 249> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 250> :
  function_assign_collect.1130_200 = function_assign_collect;
  D.255099 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1130_200, &second2);

  <bb 251> :
  _201 = D.255099;
  retval.1129 = _201 != 0B;
  if (retval.1129 != 0)
    goto <bb 252>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 252> :
  _202 = second->base.code;
  if (_202 == 36)
    goto <bb 253>; [INV]
  else
    goto <bb 254>; [INV]

  <bb 253> :
  getFunctionAssignVAR = second;

  <bb 254> :
  _203 = second->base.code;
  if (_203 != 36)
    goto <bb 255>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 255> :
  i = 0;
  goto <bb 361>; [INV]

  <bb 256> :
  _204 = (long unsigned int) i;
  _205 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _204);
  _206 = _205->stmt;
  _207 = gimple_code (_206);
  retval.1131 = _207 == 6;
  if (retval.1131 != 0)
    goto <bb 257>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 257> :
  _208 = (long unsigned int) i;
  _209 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _208);
  _210 = _209->stmt;
  D.255100 = gimple_assign_rhs1 (_210);

  <bb 258> :
  _211 = D.255100;
  _212 = _211->base.code;
  retval.1132 = _212 == 153;
  if (retval.1132 != 0)
    goto <bb 259>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 259> :
  filed_from = second->exp.operands[0];
  _213 = (long unsigned int) i;
  _214 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _213);
  _215 = _214->assign_tree;
  filed_from2 = _215->exp.operands[0];
  _216 = filed_from2->base.code;
  if (_216 == 165)
    goto <bb 260>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 260> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 261> :
  _217 = filed_from->base.code;
  if (_217 == 165)
    goto <bb 262>; [INV]
  else
    goto <bb 263>; [INV]

  <bb 262> :
  filed_from = filed_from->exp.operands[0];

  <bb 263> :
  _218 = filed_from2->base.code;
  if (_218 == 153)
    goto <bb 264>; [INV]
  else
    goto <bb 274>; [INV]

  <bb 264> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 265>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 265> :
  _219 = gimple_code (def_stmt);
  retval.1133 = _219 != 20;
  if (retval.1133 != 0)
    goto <bb 266>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 266> :
  D.255101 = gimple_assign_rhs1 (def_stmt);

  <bb 267> :
  _220 = D.255101;
  retval.1134 = _220 != 0B;
  if (retval.1134 != 0)
    goto <bb 268>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 268> :
  D.255102 = gimple_assign_rhs1 (def_stmt);

  <bb 269> :
  _221 = D.255102;
  _222 = _221->base.code;
  retval.1135 = _222 != 0;
  if (retval.1135 != 0)
    goto <bb 270>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 270> :
  if (def_stmt != 0B)
    goto <bb 271>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 271> :
  D.255103 = gimple_assign_rhs1 (def_stmt);

  <bb 272> :
  treecheck = D.255103;
  goto <bb 275>; [INV]

  <bb 273> :
  treecheck = filed_from2;
  goto <bb 275>; [INV]

  <bb 274> :
  treecheck = filed_from2;

  <bb 275> :
  _223 = second->base.code;
  if (_223 != 36)
    goto <bb 276>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 276> :
  _224 = filed_from->base.code;
  if (_224 != 26)
    goto <bb 277>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 277> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 278>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 278> :
  _225 = gimple_code (def_stmt2);
  retval.1136 = _225 != 20;
  if (retval.1136 != 0)
    goto <bb 279>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 279> :
  D.255104 = gimple_assign_rhs1 (def_stmt2);

  <bb 280> :
  _226 = D.255104;
  retval.1137 = _226 != 0B;
  if (retval.1137 != 0)
    goto <bb 281>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 281> :
  D.255105 = gimple_assign_rhs1 (def_stmt2);

  <bb 282> :
  _227 = D.255105;
  _228 = _227->base.code;
  retval.1138 = _228 != 0;
  if (retval.1138 != 0)
    goto <bb 283>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 283> :
  if (def_stmt2 != 0B)
    goto <bb 284>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 284> :
  D.255106 = gimple_assign_rhs1 (def_stmt2);

  <bb 285> :
  treecheck2 = D.255106;
  goto <bb 287>; [INV]

  <bb 286> :
  treecheck2 = filed_from;

  <bb 287> :
  goto <bb 289>; [INV]

  <bb 288> :
  treecheck2 = filed_from;

  <bb 289> :
  if (treecheck == 0B)
    goto <bb 290>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 290> :
  treecheck = filed_from2;

  <bb 291> :
  if (treecheck2 == 0B)
    goto <bb 292>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 292> :
  treecheck2 = filed_from;

  <bb 293> :
  if (treecheck2 == treecheck)
    goto <bb 294>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 294> :
  _229 = (long unsigned int) i;
  _230 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _229);
  _231 = _230->stmt;
  D.255107 = gimple_assign_rhs1 (_231);

  <bb 295> :
  _232 = D.255107;
  D.255108 = check_stmtStack (_232);

  <bb 296> :
  _233 = D.255108;
  retval.1139 = _233 == 0;
  if (retval.1139 != 0)
    goto <bb 297>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 297> :
  _234 = (long unsigned int) i;
  _235 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _234);
  _236 = _235->stmt;
  D.255109 = gimple_assign_rhs1 (_236);

  <bb 298> :
  _237 = D.255109;
  if (target2 != _237)
    goto <bb 299>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 299> :
  _238 = (long unsigned int) i;
  _239 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _238);
  _240 = _239->stmt;
  D.255110 = check_stmtStack2 (_240);

  <bb 300> :
  _241 = D.255110;
  if (_241 == 0)
    goto <bb 301>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 301> :
  iftmp.1141 = 1;
  goto <bb 303>; [INV]

  <bb 302> :
  iftmp.1141 = 0;

  <bb 303> :
  retval.1140 = iftmp.1141;
  if (retval.1140 != 0)
    goto <bb 304>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 304> :
  _242 = (long unsigned int) i;
  _243 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _242);
  _244 = _243->stmt;
  D.255111 = gimple_assign_rhs1 (_244);

  <bb 305> :
  _245 = D.255111;
  _246 = (long unsigned int) i;
  _247 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _246);
  _248 = _247->stmt;
  set_gimple_array (used_stmt, _248, _245, target, 0B);

  <bb 306> :
  _249 = (long unsigned int) i;
  _250 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _249);
  _251 = _250->stmt;
  D.255112 = gimple_assign_rhs1 (_251);

  <bb 307> :
  _252 = D.255112;
  _253 = (long unsigned int) i;
  _254 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _253);
  _255 = _254->stmt;
  D.255113 = gimple_assign_rhs1 (_255);

  <bb 308> :
  _256 = D.255113;
  new_search_imm_use (used_stmt, _256, _252);
  goto <bb 360>; [INV]

  <bb 309> :
  _257 = (long unsigned int) i;
  _258 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _257);
  _259 = _258->stmt;
  D.255114 = gimple_assign_lhs (_259);

  <bb 310> :
  _260 = D.255114;
  _261 = _260->base.code;
  retval.1142 = _261 == 153;
  if (retval.1142 != 0)
    goto <bb 311>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 311> :
  filed_from = second->exp.operands[0];
  _262 = (long unsigned int) i;
  _263 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _262);
  _264 = _263->assign_tree;
  filed_from2 = _264->exp.operands[0];
  _265 = filed_from2->base.code;
  if (_265 == 165)
    goto <bb 312>; [INV]
  else
    goto <bb 313>; [INV]

  <bb 312> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 313> :
  _266 = filed_from->base.code;
  if (_266 == 165)
    goto <bb 314>; [INV]
  else
    goto <bb 315>; [INV]

  <bb 314> :
  filed_from = filed_from->exp.operands[0];

  <bb 315> :
  _267 = filed_from2->base.code;
  if (_267 == 153)
    goto <bb 316>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 316> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 317>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 317> :
  _268 = gimple_code (def_stmt);
  retval.1143 = _268 != 20;
  if (retval.1143 != 0)
    goto <bb 318>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 318> :
  D.255115 = gimple_assign_rhs1 (def_stmt);

  <bb 319> :
  _269 = D.255115;
  retval.1144 = _269 != 0B;
  if (retval.1144 != 0)
    goto <bb 320>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 320> :
  D.255116 = gimple_assign_rhs1 (def_stmt);

  <bb 321> :
  _270 = D.255116;
  _271 = _270->base.code;
  retval.1145 = _271 != 0;
  if (retval.1145 != 0)
    goto <bb 322>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 322> :
  if (def_stmt != 0B)
    goto <bb 323>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 323> :
  D.255117 = gimple_assign_rhs1 (def_stmt);

  <bb 324> :
  treecheck = D.255117;
  goto <bb 327>; [INV]

  <bb 325> :
  treecheck = filed_from2;
  goto <bb 327>; [INV]

  <bb 326> :
  treecheck = filed_from2;

  <bb 327> :
  _272 = filed_from->base.code;
  if (_272 == 153)
    goto <bb 328>; [INV]
  else
    goto <bb 339>; [INV]

  <bb 328> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 329>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 329> :
  _273 = filed_from->base.code;
  if (_273 != 20)
    goto <bb 330>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 330> :
  _274 = gimple_code (def_stmt2);
  retval.1146 = _274 != 20;
  if (retval.1146 != 0)
    goto <bb 331>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 331> :
  D.255118 = gimple_assign_rhs1 (def_stmt2);

  <bb 332> :
  _275 = D.255118;
  retval.1147 = _275 != 0B;
  if (retval.1147 != 0)
    goto <bb 333>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 333> :
  D.255119 = gimple_assign_rhs1 (def_stmt2);

  <bb 334> :
  _276 = D.255119;
  _277 = _276->base.code;
  retval.1148 = _277 != 0;
  if (retval.1148 != 0)
    goto <bb 335>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 335> :
  if (def_stmt2 != 0B)
    goto <bb 336>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 336> :
  D.255120 = gimple_assign_rhs1 (def_stmt2);

  <bb 337> :
  treecheck2 = D.255120;
  goto <bb 340>; [INV]

  <bb 338> :
  treecheck2 = filed_from;
  goto <bb 340>; [INV]

  <bb 339> :
  treecheck2 = filed_from;

  <bb 340> :
  if (treecheck == 0B)
    goto <bb 341>; [INV]
  else
    goto <bb 342>; [INV]

  <bb 341> :
  treecheck = filed_from2;

  <bb 342> :
  if (treecheck2 == 0B)
    goto <bb 343>; [INV]
  else
    goto <bb 344>; [INV]

  <bb 343> :
  treecheck2 = filed_from;

  <bb 344> :
  if (treecheck2 == treecheck)
    goto <bb 345>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 345> :
  _278 = (long unsigned int) i;
  _279 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _278);
  _280 = _279->stmt;
  D.255121 = gimple_assign_lhs (_280);

  <bb 346> :
  _281 = D.255121;
  D.255122 = check_stmtStack (_281);

  <bb 347> :
  _282 = D.255122;
  retval.1149 = _282 == 0;
  if (retval.1149 != 0)
    goto <bb 348>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 348> :
  _283 = (long unsigned int) i;
  _284 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _283);
  _285 = _284->stmt;
  D.255123 = gimple_assign_lhs (_285);

  <bb 349> :
  _286 = D.255123;
  if (target2 != _286)
    goto <bb 350>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 350> :
  _287 = (long unsigned int) i;
  _288 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _287);
  _289 = _288->stmt;
  D.255124 = check_stmtStack2 (_289);

  <bb 351> :
  _290 = D.255124;
  if (_290 == 0)
    goto <bb 352>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 352> :
  iftmp.1151 = 1;
  goto <bb 354>; [INV]

  <bb 353> :
  iftmp.1151 = 0;

  <bb 354> :
  retval.1150 = iftmp.1151;
  if (retval.1150 != 0)
    goto <bb 355>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 355> :
  _291 = (long unsigned int) i;
  _292 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _291);
  _293 = _292->stmt;
  D.255125 = gimple_assign_rhs1 (_293);

  <bb 356> :
  _294 = D.255125;
  _295 = (long unsigned int) i;
  _296 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _295);
  _297 = _296->stmt;
  set_gimple_array (used_stmt, _297, _294, target, 0B);

  <bb 357> :
  _298 = (long unsigned int) i;
  _299 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _298);
  _300 = _299->stmt;
  D.255126 = gimple_assign_lhs (_300);

  <bb 358> :
  _301 = D.255126;
  _302 = (long unsigned int) i;
  _303 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _302);
  _304 = _303->stmt;
  D.255127 = gimple_assign_lhs (_304);

  <bb 359> :
  _305 = D.255127;
  new_search_imm_use (used_stmt, _305, _301);

  <bb 360> :
  i = i + 1;

  <bb 361> :
  _306 = (long unsigned int) i;
  _307 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1152 = _306 < _307;
  if (retval.1152 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 362> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 365>; [INV]

  <bb 363> :
  _308 = second->base.code;
  if (_308 == 36)
    goto <bb 364>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 364> :
  getFunctionAssignVAR = second;

  <bb 365> :
  second2 = {CLOBBER};

  <bb 366> :
  D.255132 = gimple_assign_lhs (use_stmt);

  <bb 367> :
  _309 = D.255132;
  D.255133 = check_stmtStack (_309);

  <bb 368> :
  _310 = D.255133;
  if (_310 == 0)
    goto <bb 369>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 369> :
  D.255134 = check_stmtStack2 (use_stmt);

  <bb 370> :
  _311 = D.255134;
  if (_311 == 0)
    goto <bb 371>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 371> :
  iftmp.1154 = 1;
  goto <bb 373>; [INV]

  <bb 372> :
  iftmp.1154 = 0;

  <bb 373> :
  retval.1153 = iftmp.1154;
  if (retval.1153 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 376>; [INV]

  <bb 374> :
  D.255135 = gimple_assign_lhs (use_stmt);

  <bb 375> :
  _312 = D.255135;
  set_gimple_array (used_stmt, use_stmt, _312, target, 0B);
  goto <bb 386>; [INV]

  <bb 376> :
  D.255136 = gimple_assign_rhs1 (use_stmt);

  <bb 377> :
  _313 = D.255136;
  D.255137 = check_stmtStack (_313);

  <bb 378> :
  _314 = D.255137;
  if (_314 == 0)
    goto <bb 379>; [INV]
  else
    goto <bb 382>; [INV]

  <bb 379> :
  D.255138 = check_stmtStack2 (use_stmt);

  <bb 380> :
  _315 = D.255138;
  if (_315 == 0)
    goto <bb 381>; [INV]
  else
    goto <bb 382>; [INV]

  <bb 381> :
  iftmp.1156 = 1;
  goto <bb 383>; [INV]

  <bb 382> :
  iftmp.1156 = 0;

  <bb 383> :
  retval.1155 = iftmp.1156;
  if (retval.1155 != 0)
    goto <bb 384>; [INV]
  else
    goto <bb 386>; [INV]

  <bb 384> :
  D.255139 = gimple_assign_rhs1 (use_stmt);

  <bb 385> :
  _316 = D.255139;
  set_gimple_array (used_stmt, use_stmt, _316, target, 0B);

  <bb 386> :
  getFunctionAssignVAR.1157_317 = getFunctionAssignVAR;
  if (getFunctionAssignVAR.1157_317 != 0B)
    goto <bb 387>; [INV]
  else
    goto <bb 639>; [INV]

  <bb 387> :
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1159_318 = function_assign_collect;
  D.255140 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1159_318, &getFunctionAssignVAR);

  <bb 388> :
  _319 = D.255140;
  retval.1158 = _319 != 0B;
  if (retval.1158 != 0)
    goto <bb 389>; [INV]
  else
    goto <bb 638>; [INV]

  <bb 389> :
  getFunctionAssignVAR.1160_320 = getFunctionAssignVAR;
  D.196353 = ret_function_varstmt (getFunctionAssignVAR.1160_320); [return slot optimization]

  <bb 390> :
  function_assign_array::operator= (&assign_array, &D.196353);
  function_assign_array::~function_assign_array (&D.196353);
  D.196353 = {CLOBBER};
  i = 0;
  goto <bb 637>; [INV]

  <bb 391> :
  _321 = (long unsigned int) i;
  _322 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _321);
  nowstmt = _322->stmt;
  _323 = gimple_code (nowstmt);
  retval.1161 = _323 == 6;
  if (retval.1161 != 0)
    goto <bb 392>; [INV]
  else
    goto <bb 569>; [INV]

  <bb 392> :
  D.255141 = gimple_assign_lhs (nowstmt);

  <bb 393> :
  _324 = D.255141;
  _325 = _324->base.code;
  retval.1162 = _325 == 165;
  if (retval.1162 != 0)
    goto <bb 394>; [INV]
  else
    goto <bb 412>; [INV]

  <bb 394> :
  D.255142 = gimple_assign_lhs (nowstmt);

  <bb 395> :
  _326 = D.255142;
  D.255143 = check_stmtStack (_326);

  <bb 396> :
  _327 = D.255143;
  retval.1163 = _327 == 0;
  if (retval.1163 != 0)
    goto <bb 397>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 397> :
  _328 = (long unsigned int) i;
  _329 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _328);
  _330 = _329->form_tree;
  retval.1164 = _330 != 0B;
  if (retval.1164 != 0)
    goto <bb 398>; [INV]
  else
    goto <bb 399>; [INV]

  <bb 398> :
  _331 = (long unsigned int) i;
  _332 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _331);
  _333 = _332->form_tree;
  set_gimple_array (used_stmt, nowstmt, _333, target, 0B);
  goto <bb 401>; [INV]

  <bb 399> :
  D.255144 = gimple_assign_lhs (nowstmt);

  <bb 400> :
  _334 = D.255144;
  set_gimple_array (used_stmt, nowstmt, _334, target, 0B);

  <bb 401> :
  D.255145 = gimple_assign_lhs (nowstmt);

  <bb 402> :
  _335 = D.255145;
  second = _335->exp.operands[0];
  if (second != 0B)
    goto <bb 403>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 403> :
  _336 = second->base.code;
  if (_336 == 153)
    goto <bb 404>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 404> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1165 = is_gimple_assign (def_stmt);
  if (retval.1165 != 0)
    goto <bb 405>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 405> :
  D.255146 = gimple_assign_lhs (def_stmt);

  <bb 406> :
  _337 = D.255146;
  _338 = _337->base.code;
  retval.1166 = _338 == 153;
  if (retval.1166 != 0)
    goto <bb 407>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 407> :
  D.255147 = gimple_assign_lhs (def_stmt);

  <bb 408> :
  _339 = D.255147;
  retval.1167 = target2 != _339;
  if (retval.1167 != 0)
    goto <bb 409>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 409> :
  D.255148 = gimple_assign_lhs (def_stmt);

  <bb 410> :
  _340 = D.255148;
  D.255149 = gimple_assign_lhs (def_stmt);

  <bb 411> :
  _341 = D.255149;
  new_search_imm_use (used_stmt, _341, _340);
  goto <bb 636>; [INV]

  <bb 412> :
  D.255150 = gimple_assign_lhs (nowstmt);

  <bb 413> :
  _342 = D.255150;
  _343 = _342->base.code;
  retval.1168 = _343 == 153;
  if (retval.1168 != 0)
    goto <bb 414>; [INV]
  else
    goto <bb 494>; [INV]

  <bb 414> :
  D.255151 = gimple_assign_lhs (nowstmt);

  <bb 415> :
  _344 = D.255151;
  D.255152 = check_stmtStack (_344);

  <bb 416> :
  _345 = D.255152;
  retval.1169 = _345 == 0;
  if (retval.1169 != 0)
    goto <bb 417>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 417> :
  _346 = (long unsigned int) i;
  _347 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _346);
  _348 = _347->form_tree;
  retval.1170 = _348 != 0B;
  if (retval.1170 != 0)
    goto <bb 418>; [INV]
  else
    goto <bb 419>; [INV]

  <bb 418> :
  _349 = (long unsigned int) i;
  _350 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _349);
  _351 = _350->form_tree;
  set_gimple_array (used_stmt, nowstmt, _351, target, 0B);
  goto <bb 421>; [INV]

  <bb 419> :
  D.255153 = gimple_assign_lhs (nowstmt);

  <bb 420> :
  _352 = D.255153;
  set_gimple_array (used_stmt, nowstmt, _352, target, 0B);

  <bb 421> :
  D.255154 = check_stmtStack4 (nowstmt);

  <bb 422> :
  _353 = D.255154;
  retval.1171 = _353 == 0;
  if (retval.1171 != 0)
    goto <bb 423>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 423> :
  D.255155 = gimple_assign_lhs (nowstmt);

  <bb 424> :
  _354 = D.255155;
  if (target2 != _354)
    goto <bb 425>; [INV]
  else
    goto <bb 428>; [INV]

  <bb 425> :
  D.255156 = check_stmtStack2 (nowstmt);

  <bb 426> :
  _355 = D.255156;
  if (_355 == 0)
    goto <bb 427>; [INV]
  else
    goto <bb 428>; [INV]

  <bb 427> :
  iftmp.1173 = 1;
  goto <bb 429>; [INV]

  <bb 428> :
  iftmp.1173 = 0;

  <bb 429> :
  retval.1172 = iftmp.1173;
  if (retval.1172 != 0)
    goto <bb 430>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 430> :
  D.255157 = gimple_assign_lhs (nowstmt);

  <bb 431> :
  _356 = D.255157;
  D.255158 = gimple_assign_lhs (nowstmt);

  <bb 432> :
  _357 = D.255158;
  new_search_imm_use (used_stmt, _357, _356);

  <bb 433> :
  D.255159 = gimple_assign_rhs1 (nowstmt);

  <bb 434> :
  _358 = D.255159;
  if (_358 != 0B)
    goto <bb 435>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 435> :
  D.255160 = gimple_assign_rhs1 (nowstmt);

  <bb 436> :
  _359 = D.255160;
  _360 = _359->base.code;
  if (_360 == 47)
    goto <bb 437>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 437> :
  iftmp.1175 = 1;
  goto <bb 439>; [INV]

  <bb 438> :
  iftmp.1175 = 0;

  <bb 439> :
  retval.1174 = iftmp.1175;
  if (retval.1174 != 0)
    goto <bb 440>; [INV]
  else
    goto <bb 456>; [INV]

  <bb 440> :
  D.255161 = gimple_assign_rhs1 (nowstmt);

  <bb 441> :
  _361 = D.255161;
  D.255162 = check_stmtStack (_361);

  <bb 442> :
  _362 = D.255162;
  retval.1176 = _362 == 0;
  if (retval.1176 != 0)
    goto <bb 443>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 443> :
  D.255163 = gimple_assign_rhs1 (nowstmt);

  <bb 444> :
  _363 = D.255163;
  second = _363->exp.operands[0];
  if (second != 0B)
    goto <bb 445>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 445> :
  _364 = second->base.code;
  if (_364 == 165)
    goto <bb 446>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 446> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 447>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 447> :
  _365 = three->base.code;
  if (_365 == 153)
    goto <bb 448>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 448> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1177 = is_gimple_assign (def_stmt);
  if (retval.1177 != 0)
    goto <bb 449>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 449> :
  D.255164 = gimple_assign_lhs (def_stmt);

  <bb 450> :
  _366 = D.255164;
  _367 = _366->base.code;
  retval.1178 = _367 == 153;
  if (retval.1178 != 0)
    goto <bb 451>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 451> :
  D.255165 = gimple_assign_lhs (def_stmt);

  <bb 452> :
  _368 = D.255165;
  retval.1179 = target2 != _368;
  if (retval.1179 != 0)
    goto <bb 453>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 453> :
  D.255166 = gimple_assign_lhs (def_stmt);

  <bb 454> :
  _369 = D.255166;
  D.255167 = gimple_assign_lhs (def_stmt);

  <bb 455> :
  _370 = D.255167;
  new_search_imm_use (used_stmt, _370, _369);
  goto <bb 636>; [INV]

  <bb 456> :
  D.255168 = gimple_assign_rhs1 (nowstmt);

  <bb 457> :
  _371 = D.255168;
  if (_371 != 0B)
    goto <bb 458>; [INV]
  else
    goto <bb 461>; [INV]

  <bb 458> :
  D.255169 = gimple_assign_rhs1 (nowstmt);

  <bb 459> :
  _372 = D.255169;
  _373 = _372->base.code;
  if (_373 == 165)
    goto <bb 460>; [INV]
  else
    goto <bb 461>; [INV]

  <bb 460> :
  iftmp.1181 = 1;
  goto <bb 462>; [INV]

  <bb 461> :
  iftmp.1181 = 0;

  <bb 462> :
  retval.1180 = iftmp.1181;
  if (retval.1180 != 0)
    goto <bb 463>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 463> :
  D.255170 = gimple_assign_rhs1 (nowstmt);

  <bb 464> :
  _374 = D.255170;
  D.255171 = check_stmtStack (_374);

  <bb 465> :
  _375 = D.255171;
  retval.1182 = _375 == 0;
  if (retval.1182 != 0)
    goto <bb 466>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 466> :
  _376 = (long unsigned int) i;
  _377 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _376);
  _378 = _377->form_tree;
  retval.1183 = _378 != 0B;
  if (retval.1183 != 0)
    goto <bb 467>; [INV]
  else
    goto <bb 468>; [INV]

  <bb 467> :
  _379 = (long unsigned int) i;
  _380 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _379);
  _381 = _380->form_tree;
  set_gimple_array (used_stmt, nowstmt, _381, target, 0B);
  goto <bb 470>; [INV]

  <bb 468> :
  D.255172 = gimple_assign_rhs1 (nowstmt);

  <bb 469> :
  _382 = D.255172;
  set_gimple_array (used_stmt, nowstmt, _382, target, 0B);

  <bb 470> :
  D.255173 = gimple_assign_rhs1 (nowstmt);

  <bb 471> :
  _383 = D.255173;
  second = _383->exp.operands[0];
  _384 = second->base.code;
  if (_384 == 165)
    goto <bb 472>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 472> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1184 = is_gimple_assign (def_stmt);
  if (retval.1184 != 0)
    goto <bb 473>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 473> :
  D.255174 = gimple_assign_lhs (def_stmt);

  <bb 474> :
  _385 = D.255174;
  _386 = _385->base.code;
  retval.1185 = _386 == 153;
  if (retval.1185 != 0)
    goto <bb 475>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 475> :
  D.255175 = gimple_assign_lhs (def_stmt);

  <bb 476> :
  _387 = D.255175;
  retval.1186 = target2 != _387;
  if (retval.1186 != 0)
    goto <bb 477>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 477> :
  D.255176 = gimple_assign_lhs (def_stmt);

  <bb 478> :
  _388 = D.255176;
  D.255177 = gimple_assign_lhs (def_stmt);

  <bb 479> :
  _389 = D.255177;
  new_search_imm_use (used_stmt, _389, _388);
  goto <bb 636>; [INV]

  <bb 480> :
  D.255178 = gimple_assign_rhs1 (nowstmt);

  <bb 481> :
  _390 = D.255178;
  if (_390 != 0B)
    goto <bb 482>; [INV]
  else
    goto <bb 485>; [INV]

  <bb 482> :
  D.255179 = gimple_assign_rhs1 (nowstmt);

  <bb 483> :
  _391 = D.255179;
  _392 = _391->base.code;
  if (_392 == 49)
    goto <bb 484>; [INV]
  else
    goto <bb 485>; [INV]

  <bb 484> :
  iftmp.1188 = 1;
  goto <bb 486>; [INV]

  <bb 485> :
  iftmp.1188 = 0;

  <bb 486> :
  retval.1187 = iftmp.1188;
  if (retval.1187 != 0)
    goto <bb 487>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 487> :
  D.255180 = gimple_assign_rhs1 (nowstmt);

  <bb 488> :
  _393 = D.255180;
  D.255181 = check_stmtStack (_393);

  <bb 489> :
  _394 = D.255181;
  retval.1189 = _394 == 0;
  if (retval.1189 != 0)
    goto <bb 490>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 490> :
  _395 = (long unsigned int) i;
  _396 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _395);
  _397 = _396->form_tree;
  retval.1190 = _397 != 0B;
  if (retval.1190 != 0)
    goto <bb 491>; [INV]
  else
    goto <bb 492>; [INV]

  <bb 491> :
  _398 = (long unsigned int) i;
  _399 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _398);
  _400 = _399->form_tree;
  set_gimple_array (used_stmt, nowstmt, _400, target, 0B);
  goto <bb 636>; [INV]

  <bb 492> :
  D.255182 = gimple_assign_rhs1 (nowstmt);

  <bb 493> :
  _401 = D.255182;
  set_gimple_array (used_stmt, nowstmt, _401, target, 0B);
  goto <bb 636>; [INV]

  <bb 494> :
  D.255183 = gimple_assign_rhs1 (nowstmt);

  <bb 495> :
  _402 = D.255183;
  _403 = _402->base.code;
  retval.1191 = _403 == 153;
  if (retval.1191 != 0)
    goto <bb 496>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 496> :
  D.255184 = gimple_assign_rhs1 (nowstmt);

  <bb 497> :
  _404 = D.255184;
  D.255185 = check_stmtStack (_404);

  <bb 498> :
  _405 = D.255185;
  retval.1192 = _405 == 0;
  if (retval.1192 != 0)
    goto <bb 499>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 499> :
  _406 = (long unsigned int) i;
  _407 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _406);
  _408 = _407->form_tree;
  retval.1193 = _408 != 0B;
  if (retval.1193 != 0)
    goto <bb 500>; [INV]
  else
    goto <bb 501>; [INV]

  <bb 500> :
  _409 = (long unsigned int) i;
  _410 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _409);
  _411 = _410->form_tree;
  set_gimple_array (used_stmt, nowstmt, _411, target, 0B);
  goto <bb 503>; [INV]

  <bb 501> :
  D.255186 = gimple_assign_rhs1 (nowstmt);

  <bb 502> :
  _412 = D.255186;
  set_gimple_array (used_stmt, nowstmt, _412, target, 0B);

  <bb 503> :
  D.255187 = gimple_assign_rhs1 (nowstmt);

  <bb 504> :
  _413 = D.255187;
  retval.1194 = target2 != _413;
  if (retval.1194 != 0)
    goto <bb 505>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 505> :
  D.255188 = check_stmtStack4 (nowstmt);

  <bb 506> :
  _414 = D.255188;
  retval.1195 = _414 == 0;
  if (retval.1195 != 0)
    goto <bb 507>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 507> :
  D.255189 = gimple_assign_rhs1 (nowstmt);

  <bb 508> :
  _415 = D.255189;
  if (target2 != _415)
    goto <bb 509>; [INV]
  else
    goto <bb 512>; [INV]

  <bb 509> :
  D.255190 = check_stmtStack2 (nowstmt);

  <bb 510> :
  _416 = D.255190;
  if (_416 == 0)
    goto <bb 511>; [INV]
  else
    goto <bb 512>; [INV]

  <bb 511> :
  iftmp.1197 = 1;
  goto <bb 513>; [INV]

  <bb 512> :
  iftmp.1197 = 0;

  <bb 513> :
  retval.1196 = iftmp.1197;
  if (retval.1196 != 0)
    goto <bb 514>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 514> :
  D.255191 = gimple_assign_rhs1 (nowstmt);

  <bb 515> :
  _417 = D.255191;
  D.255192 = gimple_assign_rhs1 (nowstmt);

  <bb 516> :
  _418 = D.255192;
  new_search_imm_use (used_stmt, _418, _417);

  <bb 517> :
  D.255193 = gimple_assign_lhs (nowstmt);

  <bb 518> :
  _419 = D.255193;
  if (_419 != 0B)
    goto <bb 519>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 519> :
  D.255194 = gimple_assign_lhs (nowstmt);

  <bb 520> :
  _420 = D.255194;
  _421 = _420->base.code;
  if (_421 == 47)
    goto <bb 521>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 521> :
  iftmp.1199 = 1;
  goto <bb 523>; [INV]

  <bb 522> :
  iftmp.1199 = 0;

  <bb 523> :
  retval.1198 = iftmp.1199;
  if (retval.1198 != 0)
    goto <bb 524>; [INV]
  else
    goto <bb 540>; [INV]

  <bb 524> :
  D.255195 = gimple_assign_lhs (nowstmt);

  <bb 525> :
  _422 = D.255195;
  D.255196 = check_stmtStack (_422);

  <bb 526> :
  _423 = D.255196;
  retval.1200 = _423 == 0;
  if (retval.1200 != 0)
    goto <bb 527>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 527> :
  D.255197 = gimple_assign_lhs (nowstmt);

  <bb 528> :
  _424 = D.255197;
  second = _424->exp.operands[0];
  if (second != 0B)
    goto <bb 529>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 529> :
  _425 = second->base.code;
  if (_425 == 165)
    goto <bb 530>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 530> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 531>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 531> :
  _426 = three->base.code;
  if (_426 == 153)
    goto <bb 532>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 532> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1201 = is_gimple_assign (def_stmt);
  if (retval.1201 != 0)
    goto <bb 533>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 533> :
  D.255198 = gimple_assign_lhs (def_stmt);

  <bb 534> :
  _427 = D.255198;
  _428 = _427->base.code;
  retval.1202 = _428 == 153;
  if (retval.1202 != 0)
    goto <bb 535>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 535> :
  D.255199 = gimple_assign_lhs (def_stmt);

  <bb 536> :
  _429 = D.255199;
  retval.1203 = target2 != _429;
  if (retval.1203 != 0)
    goto <bb 537>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 537> :
  D.255200 = gimple_assign_lhs (def_stmt);

  <bb 538> :
  _430 = D.255200;
  D.255201 = gimple_assign_lhs (def_stmt);

  <bb 539> :
  _431 = D.255201;
  new_search_imm_use (used_stmt, _431, _430);
  goto <bb 636>; [INV]

  <bb 540> :
  D.255202 = gimple_assign_lhs (nowstmt);

  <bb 541> :
  _432 = D.255202;
  if (_432 != 0B)
    goto <bb 542>; [INV]
  else
    goto <bb 545>; [INV]

  <bb 542> :
  D.255203 = gimple_assign_lhs (nowstmt);

  <bb 543> :
  _433 = D.255203;
  _434 = _433->base.code;
  if (_434 == 165)
    goto <bb 544>; [INV]
  else
    goto <bb 545>; [INV]

  <bb 544> :
  iftmp.1205 = 1;
  goto <bb 546>; [INV]

  <bb 545> :
  iftmp.1205 = 0;

  <bb 546> :
  retval.1204 = iftmp.1205;
  if (retval.1204 != 0)
    goto <bb 547>; [INV]
  else
    goto <bb 560>; [INV]

  <bb 547> :
  D.255204 = gimple_assign_lhs (nowstmt);

  <bb 548> :
  _435 = D.255204;
  D.255205 = check_stmtStack (_435);

  <bb 549> :
  _436 = D.255205;
  retval.1206 = _436 == 0;
  if (retval.1206 != 0)
    goto <bb 550>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 550> :
  D.255206 = gimple_assign_lhs (nowstmt);

  <bb 551> :
  _437 = D.255206;
  second = _437->exp.operands[0];
  _438 = second->base.code;
  if (_438 == 165)
    goto <bb 552>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 552> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1207 = is_gimple_assign (def_stmt);
  if (retval.1207 != 0)
    goto <bb 553>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 553> :
  D.255207 = gimple_assign_lhs (def_stmt);

  <bb 554> :
  _439 = D.255207;
  _440 = _439->base.code;
  retval.1208 = _440 == 153;
  if (retval.1208 != 0)
    goto <bb 555>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 555> :
  D.255208 = gimple_assign_lhs (def_stmt);

  <bb 556> :
  _441 = D.255208;
  retval.1209 = target2 != _441;
  if (retval.1209 != 0)
    goto <bb 557>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 557> :
  D.255209 = gimple_assign_lhs (def_stmt);

  <bb 558> :
  _442 = D.255209;
  D.255210 = gimple_assign_lhs (def_stmt);

  <bb 559> :
  _443 = D.255210;
  new_search_imm_use (used_stmt, _443, _442);
  goto <bb 636>; [INV]

  <bb 560> :
  D.255211 = gimple_assign_lhs (nowstmt);

  <bb 561> :
  _444 = D.255211;
  _445 = _444->base.code;
  retval.1210 = _445 == 49;
  if (retval.1210 != 0)
    goto <bb 562>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 562> :
  D.255212 = gimple_assign_lhs (nowstmt);

  <bb 563> :
  _446 = D.255212;
  D.255213 = check_stmtStack (_446);

  <bb 564> :
  _447 = D.255213;
  retval.1211 = _447 == 0;
  if (retval.1211 != 0)
    goto <bb 565>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 565> :
  _448 = (long unsigned int) i;
  _449 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _448);
  _450 = _449->form_tree;
  retval.1212 = _450 != 0B;
  if (retval.1212 != 0)
    goto <bb 566>; [INV]
  else
    goto <bb 567>; [INV]

  <bb 566> :
  _451 = (long unsigned int) i;
  _452 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _451);
  _453 = _452->form_tree;
  set_gimple_array (used_stmt, nowstmt, _453, target, 0B);
  goto <bb 636>; [INV]

  <bb 567> :
  D.255214 = gimple_assign_lhs (nowstmt);

  <bb 568> :
  _454 = D.255214;
  set_gimple_array (used_stmt, nowstmt, _454, target, 0B);
  goto <bb 636>; [INV]

  <bb 569> :
  _455 = gimple_code (nowstmt);
  retval.1213 = _455 == 8;
  if (retval.1213 != 0)
    goto <bb 570>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 570> :
  _456 = gimple_code (nowstmt);
  retval.1214 = _456 == 8;
  if (retval.1214 != 0)
    goto <bb 571>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 571> :
  D.255215 = gimple_call_fn (nowstmt);

  <bb 572> :
  _457 = D.255215;
  retval.1215 = _457 != 0B;
  if (retval.1215 != 0)
    goto <bb 573>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 573> :
  D.255216 = gimple_call_fn (nowstmt);

  <bb 574> :
  _458 = D.255216;
  D.255217 = get_name (_458);

  <bb 575> :
  name = D.255217;
  D.255218 = gimple_call_lhs (nowstmt);

  <bb 576> :
  _459 = D.255218;
  if (_459 != 0B)
    goto <bb 579>; [INV]
  else
    goto <bb 577>; [INV]

  <bb 577> :
  D.255219 = gimple_call_fndecl (nowstmt);

  <bb 578> :
  _460 = D.255219;
  if (_460 != 0B)
    goto <bb 579>; [INV]
  else
    goto <bb 580>; [INV]

  <bb 579> :
  iftmp.1217 = 1;
  goto <bb 581>; [INV]

  <bb 580> :
  iftmp.1217 = 0;

  <bb 581> :
  retval.1216 = iftmp.1217;
  if (retval.1216 != 0)
    goto <bb 582>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 582> :
  D.255220 = gimple_call_lhs (nowstmt);

  <bb 583> :
  _461 = D.255220;
  D.255221 = check_stmtStack (_461);

  <bb 584> :
  _462 = D.255221;
  retval.1218 = _462 == 0;
  if (retval.1218 != 0)
    goto <bb 585>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 585> :
  if (name != 0B)
    goto <bb 586>; [INV]
  else
    goto <bb 595>; [INV]

  <bb 586> :
  _463 = strcmp (name, "free");
  if (_463 == 0)
    goto <bb 587>; [INV]
  else
    goto <bb 591>; [INV]

  <bb 587> :
  D.255222 = check_stmtStack2 (nowstmt);

  <bb 588> :
  _464 = D.255222;
  retval.1219 = _464 == 0;
  if (retval.1219 != 0)
    goto <bb 589>; [INV]
  else
    goto <bb 595>; [INV]

  <bb 589> :
  D.255223 = gimple_call_arg (nowstmt, 0);

  <bb 590> :
  _465 = D.255223;
  set_gimple_array (used_stmt, nowstmt, _465, target, 0B);
  goto <bb 595>; [INV]

  <bb 591> :
  _466 = (long unsigned int) i;
  _467 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _466);
  _468 = _467->form_tree;
  retval.1220 = _468 != 0B;
  if (retval.1220 != 0)
    goto <bb 592>; [INV]
  else
    goto <bb 593>; [INV]

  <bb 592> :
  _469 = (long unsigned int) i;
  _470 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _469);
  _471 = _470->form_tree;
  set_gimple_array (used_stmt, nowstmt, _471, target, 0B);
  goto <bb 595>; [INV]

  <bb 593> :
  D.255224 = gimple_call_lhs (nowstmt);

  <bb 594> :
  _472 = D.255224;
  set_gimple_array (used_stmt, nowstmt, _472, target, 0B);

  <bb 595> :
  D.255225 = gimple_call_num_args (nowstmt);

  <bb 596> :
  _473 = D.255225;
  size = (int) _473;
  i = 0;
  goto <bb 612>; [INV]

  <bb 597> :
  i.1222_474 = (unsigned int) i;
  D.255226 = gimple_call_arg (nowstmt, i.1222_474);

  <bb 598> :
  _475 = D.255226;
  D.255227 = check_stmtStack (_475);

  <bb 599> :
  _476 = D.255227;
  retval.1221 = _476 == 0;
  if (retval.1221 != 0)
    goto <bb 600>; [INV]
  else
    goto <bb 611>; [INV]

  <bb 600> :
  i.1224_477 = (unsigned int) i;
  D.255228 = gimple_call_arg (nowstmt, i.1224_477);

  <bb 601> :
  _478 = D.255228;
  _479 = _478->base.code;
  retval.1223 = _479 == 153;
  if (retval.1223 != 0)
    goto <bb 602>; [INV]
  else
    goto <bb 607>; [INV]

  <bb 602> :
  i.1226_480 = (unsigned int) i;
  D.255229 = gimple_call_arg (nowstmt, i.1226_480);

  <bb 603> :
  _481 = D.255229;
  retval.1225 = target2 != _481;
  if (retval.1225 != 0)
    goto <bb 604>; [INV]
  else
    goto <bb 611>; [INV]

  <bb 604> :
  i.1227_482 = (unsigned int) i;
  D.255230 = gimple_call_arg (nowstmt, i.1227_482);

  <bb 605> :
  _483 = D.255230;
  i.1228_484 = (unsigned int) i;
  D.255231 = gimple_call_arg (nowstmt, i.1228_484);

  <bb 606> :
  _485 = D.255231;
  new_search_imm_use (used_stmt, _485, _483);
  goto <bb 611>; [INV]

  <bb 607> :
  i.1230_486 = (unsigned int) i;
  D.255232 = gimple_call_arg (nowstmt, i.1230_486);

  <bb 608> :
  _487 = D.255232;
  _488 = _487->base.code;
  retval.1229 = _488 == 131;
  if (retval.1229 != 0)
    goto <bb 609>; [INV]
  else
    goto <bb 611>; [INV]

  <bb 609> :
  i.1231_489 = (unsigned int) i;
  D.255233 = gimple_call_arg (nowstmt, i.1231_489);

  <bb 610> :
  _490 = D.255233;
  set_gimple_array (used_stmt, nowstmt, _490, target, 0B);

  <bb 611> :
  i = i + 1;

  <bb 612> :
  if (i < size)
    goto <bb 597>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 613> :
  D.255234 = check_stmtStack2 (nowstmt);

  <bb 614> :
  _491 = D.255234;
  retval.1232 = _491 == 0;
  if (retval.1232 != 0)
    goto <bb 615>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 615> :
  D.255235 = gimple_call_arg (nowstmt, 0);

  <bb 616> :
  _492 = D.255235;
  _493 = _492->base.code;
  retval.1233 = _493 == 131;
  if (retval.1233 != 0)
    goto <bb 617>; [INV]
  else
    goto <bb 619>; [INV]

  <bb 617> :
  D.255236 = gimple_call_arg (nowstmt, 0);

  <bb 618> :
  _494 = D.255236;
  set_gimple_array (used_stmt, nowstmt, _494, target, 0B);

  <bb 619> :
  D.255237 = gimple_call_num_args (nowstmt);

  <bb 620> :
  _495 = D.255237;
  size = (int) _495;
  i = 0;
  goto <bb 635>; [INV]

  <bb 621> :
  i.1235_496 = (unsigned int) i;
  D.255238 = gimple_call_arg (nowstmt, i.1235_496);

  <bb 622> :
  _497 = D.255238;
  D.255239 = check_stmtStack (_497);

  <bb 623> :
  _498 = D.255239;
  retval.1234 = _498 == 0;
  if (retval.1234 != 0)
    goto <bb 624>; [INV]
  else
    goto <bb 634>; [INV]

  <bb 624> :
  i.1237_499 = (unsigned int) i;
  D.255240 = gimple_call_arg (nowstmt, i.1237_499);

  <bb 625> :
  _500 = D.255240;
  _501 = _500->base.code;
  retval.1236 = _501 == 153;
  if (retval.1236 != 0)
    goto <bb 626>; [INV]
  else
    goto <bb 634>; [INV]

  <bb 626> :
  i.1239_502 = (unsigned int) i;
  D.255241 = gimple_call_arg (nowstmt, i.1239_502);

  <bb 627> :
  _503 = D.255241;
  D.255242 = check_stmtStack (_503);

  <bb 628> :
  _504 = D.255242;
  retval.1238 = _504 == 0;
  if (retval.1238 != 0)
    goto <bb 629>; [INV]
  else
    goto <bb 634>; [INV]

  <bb 629> :
  i.1241_505 = (unsigned int) i;
  D.255243 = gimple_call_arg (nowstmt, i.1241_505);

  <bb 630> :
  _506 = D.255243;
  retval.1240 = target2 != _506;
  if (retval.1240 != 0)
    goto <bb 631>; [INV]
  else
    goto <bb 634>; [INV]

  <bb 631> :
  i.1242_507 = (unsigned int) i;
  D.255244 = gimple_call_arg (nowstmt, i.1242_507);

  <bb 632> :
  _508 = D.255244;
  i.1243_509 = (unsigned int) i;
  D.255245 = gimple_call_arg (nowstmt, i.1243_509);

  <bb 633> :
  _510 = D.255245;
  new_search_imm_use (used_stmt, _510, _508);

  <bb 634> :
  i = i + 1;

  <bb 635> :
  if (i < size)
    goto <bb 621>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 636> :
  i = i + 1;

  <bb 637> :
  _511 = (long unsigned int) i;
  _512 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1244 = _511 < _512;
  if (retval.1244 != 0)
    goto <bb 391>; [INV]
  else
    goto <bb 638>; [INV]

  <bb 638> :
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};

  <bb 639> :
  getFunctionAssignVAR = {CLOBBER};

  <bb 640> :
  return;

  <bb 641> :
<L775>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 5

  <bb 642> :
<L776>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 4

  <bb 643> :
<L777>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 3

  <bb 644> :
<L778>:
  second2 = {CLOBBER};
  resx 2

  <bb 645> :
<L779>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 13

  <bb 646> :
<L780>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 12

  <bb 647> :
<L781>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 11

  <bb 648> :
<L782>:
  second2 = {CLOBBER};
  resx 10

  <bb 649> :
<L783>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 19

  <bb 650> :
<L784>:
  assign_array = {CLOBBER};
  resx 18

  <bb 651> :
<L785>:
  getFunctionAssignVAR = {CLOBBER};
  resx 1

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSEOS_, funcdef_no=6432, decl_uid=191198, cgraph_uid=3407, symbol_order=4188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, struct function_assign_array & D.191199)
{
  struct function_assign_array & D.255249;

  <bb 2> :
  _1 = D.191199->pass;
  this->pass = _1;
  _2 = &D.191199->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.255249 = this;

  <bb 3> :
<L0>:
  return D.255249;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSEOS2_, funcdef_no=7790, decl_uid=176297, cgraph_uid=4422, symbol_order=5214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, struct vector & __x)
{
  const bool __move_storage;
  struct vector & D.255252;
  struct integral_constant D.255251;

  <bb 2> :
  __move_storage = 1;
  _1 = std::move<std::vector<assign_type>&> (__x);
  std::vector<assign_type>::_M_move_assign (this, _1, D.255251);
  D.255252 = this;

  <bb 3> :
<L0>:
  return D.255252;

}



;; Function std::move<std::vector<assign_type>&> (_ZSt4moveIRSt6vectorI11assign_typeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=8735, decl_uid=215083, cgraph_uid=5367, symbol_order=6163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::vector<assign_type>&> (struct vector & __t)
{
  struct type & D.255254;

  <bb 2> :
  D.255254 = __t;

  <bb 3> :
<L0>:
  return D.255254;

}



;; Function std::vector<assign_type>::_M_move_assign (_ZNSt6vectorI11assign_typeSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE, funcdef_no=8736, decl_uid=176575, cgraph_uid=5368, symbol_order=6164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_move_assign (struct vector * const this, struct vector & __x, struct true_type D.227642)
{
  struct vector __tmp;
  struct allocator_type D.227645;

  <bb 2> :
  _1 = &this->D.176707;
  D.227645 = std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_1); [return slot optimization]
  std::vector<assign_type>::vector (&__tmp, &D.227645);
  std::allocator<assign_type>::~allocator (&D.227645);
  D.227645 = {CLOBBER};
  _2 = &this->D.176707._M_impl.D.176052;
  _3 = &__x->D.176707._M_impl.D.176052;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_2, _3);
  _4 = &__x->D.176707._M_impl.D.176052;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (&__tmp.D.176707._M_impl.D.176052, _4);
  _5 = &__x->D.176707;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = &this->D.176707;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  std::__alloc_on_move<std::allocator<assign_type> > (_8, _6);
  std::vector<assign_type>::~vector (&__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE13get_allocatorEv, funcdef_no=9563, decl_uid=175944, cgraph_uid=6195, symbol_order=6991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (const struct _Vector_base * const this)
{
  <bb 2> :
  _1 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (this);
  std::allocator<assign_type>::allocator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=9565, decl_uid=176694, cgraph_uid=6197, symbol_order=6993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176707;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=10196, decl_uid=176152, cgraph_uid=6828, symbol_order=7628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_, funcdef_no=9567, decl_uid=175988, cgraph_uid=6199, symbol_order=6995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  struct _Vector_impl_data __tmp;

  <bb 2> :
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (&__tmp);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (&__tmp, this);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (this, __x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (__x, &__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_, funcdef_no=10198, decl_uid=175985, cgraph_uid=6830, symbol_order=7630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (struct _Vector_impl_data * const this, const struct _Vector_impl_data & __x)
{
  <bb 2> :
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  return;

}



;; Function std::__alloc_on_move<std::allocator<assign_type> > (_ZSt15__alloc_on_moveISaI11assign_typeEEvRT_S3_, funcdef_no=9568, decl_uid=227646, cgraph_uid=6200, symbol_order=6996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_move<std::allocator<assign_type> > (struct allocator & __one, struct allocator & __two)
{
  <bb 2> :
  std::move<std::allocator<assign_type>&> (__two);
  return;

}



;; Function std::move<std::allocator<assign_type>&> (_ZSt4moveIRSaI11assign_typeEEONSt16remove_referenceIT_E4typeEOS4_, funcdef_no=10199, decl_uid=237448, cgraph_uid=6831, symbol_order=7631)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<assign_type>&> (struct allocator & __t)
{
  struct type & D.255258;

  <bb 2> :
  D.255258 = __t;

  <bb 3> :
<L0>:
  return D.255258;

}



;; Function Prenew_search_imm_use (_Z21Prenew_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6433, decl_uid=187144, cgraph_uid=3409, symbol_order=4190)

Removing basic block 36
Removing basic block 39
Removing basic block 40
Removing basic block 48
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 89
Removing basic block 90
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 118
Removing basic block 119
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 132
Removing basic block 149
Removing basic block 150
Removing basic block 151
Removing basic block 152
Removing basic block 176
Removing basic block 177
Removing basic block 178
Removing basic block 179
Removing basic block 180
Removing basic block 181
Removing basic block 182
Removing basic block 183
Removing basic block 184
Removing basic block 205
Removing basic block 206
Removing basic block 207
Removing basic block 208
Removing basic block 209
Removing basic block 210
Removing basic block 211
Removing basic block 212
Removing basic block 221
Removing basic block 222
Removing basic block 230
Removing basic block 233
Removing basic block 234
Removing basic block 235
Removing basic block 238
Removing basic block 243
Removing basic block 246
Removing basic block 247
Removing basic block 248
Removing basic block 249
Removing basic block 250
Removing basic block 251
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 192, latch 191
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 186, latch 185
;;  depth 2, outer 1
;;  nodes: 186 185 88 168 184 37 167 134 137 139 142 144 140 138 136 157 160 164 162 159 147 101 68 71 73 76 78 74 72 70 91 94 98 96 93 81 35 33 154 103 178 182 180 179 181 177 176 170 175 173 172 171 174 169 102 39 38 30 29 28 152 153 149 151 150 148 131 129 130 126 128 127 125 106 124 112 121 114 113 119 120 116 118 117 115 111 108 110 109 107 123 122 105 104 32 31 34 80 79 92 95 97 90 89 69 77 75 67 66 65 63 64 60 62 61 59 42 58 48 55 53 54 50 52 51 49 47 44 46 45 43 57 56 41 40 100 99 146 145 158 161 163 156 155 135 143 141 133 132 166 165 36 183 86 87 83 85 84 82
;; 2 succs { 3 193 }
;; 3 succs { 4 193 }
;; 4 succs { 5 193 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 193 }
;; 10 succs { 11 193 }
;; 11 succs { 12 193 }
;; 12 succs { 192 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 188 }
;; 18 succs { 195 19 }
;; 19 succs { 20 22 }
;; 20 succs { 195 21 }
;; 21 succs { 24 }
;; 22 succs { 195 23 }
;; 23 succs { 24 }
;; 24 succs { 194 25 }
;; 25 succs { 26 187 }
;; 26 succs { 194 27 }
;; 27 succs { 186 }
;; 28 succs { 29 168 }
;; 29 succs { 194 30 }
;; 30 succs { 31 38 }
;; 31 succs { 194 32 }
;; 32 succs { 194 33 }
;; 33 succs { 34 185 }
;; 34 succs { 35 36 }
;; 35 succs { 194 185 }
;; 36 succs { 194 37 }
;; 37 succs { 194 185 }
;; 38 succs { 194 39 }
;; 39 succs { 40 102 }
;; 40 succs { 194 41 }
;; 41 succs { 194 42 }
;; 42 succs { 43 59 }
;; 43 succs { 44 45 }
;; 44 succs { 194 47 }
;; 45 succs { 194 46 }
;; 46 succs { 194 47 }
;; 47 succs { 194 48 }
;; 48 succs { 49 59 }
;; 49 succs { 194 50 }
;; 50 succs { 51 54 }
;; 51 succs { 194 52 }
;; 52 succs { 53 54 }
;; 53 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 56 59 }
;; 56 succs { 194 57 }
;; 57 succs { 194 58 }
;; 58 succs { 194 59 }
;; 59 succs { 194 60 }
;; 60 succs { 61 64 }
;; 61 succs { 194 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 82 }
;; 66 succs { 194 67 }
;; 67 succs { 194 68 }
;; 68 succs { 69 185 }
;; 69 succs { 194 70 }
;; 70 succs { 71 185 }
;; 71 succs { 72 185 }
;; 72 succs { 73 185 }
;; 73 succs { 74 185 }
;; 74 succs { 75 185 }
;; 75 succs { 194 76 }
;; 76 succs { 77 185 }
;; 77 succs { 194 78 }
;; 78 succs { 79 185 }
;; 79 succs { 194 80 }
;; 80 succs { 194 81 }
;; 81 succs { 194 185 }
;; 82 succs { 194 83 }
;; 83 succs { 84 87 }
;; 84 succs { 194 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 185 }
;; 89 succs { 194 90 }
;; 90 succs { 194 91 }
;; 91 succs { 92 185 }
;; 92 succs { 194 93 }
;; 93 succs { 94 185 }
;; 94 succs { 95 185 }
;; 95 succs { 194 96 }
;; 96 succs { 97 185 }
;; 97 succs { 194 98 }
;; 98 succs { 99 185 }
;; 99 succs { 194 100 }
;; 100 succs { 194 101 }
;; 101 succs { 194 185 }
;; 102 succs { 194 103 }
;; 103 succs { 104 185 }
;; 104 succs { 194 105 }
;; 105 succs { 194 106 }
;; 106 succs { 107 125 }
;; 107 succs { 108 109 }
;; 108 succs { 194 111 }
;; 109 succs { 194 110 }
;; 110 succs { 194 111 }
;; 111 succs { 194 112 }
;; 112 succs { 113 125 }
;; 113 succs { 194 114 }
;; 114 succs { 115 125 }
;; 115 succs { 194 116 }
;; 116 succs { 117 120 }
;; 117 succs { 194 118 }
;; 118 succs { 119 120 }
;; 119 succs { 121 }
;; 120 succs { 121 }
;; 121 succs { 122 125 }
;; 122 succs { 194 123 }
;; 123 succs { 194 124 }
;; 124 succs { 194 125 }
;; 125 succs { 194 126 }
;; 126 succs { 127 130 }
;; 127 succs { 194 128 }
;; 128 succs { 129 130 }
;; 129 succs { 131 }
;; 130 succs { 131 }
;; 131 succs { 132 148 }
;; 132 succs { 194 133 }
;; 133 succs { 194 134 }
;; 134 succs { 135 185 }
;; 135 succs { 194 136 }
;; 136 succs { 137 185 }
;; 137 succs { 138 185 }
;; 138 succs { 139 185 }
;; 139 succs { 140 185 }
;; 140 succs { 141 185 }
;; 141 succs { 194 142 }
;; 142 succs { 143 185 }
;; 143 succs { 194 144 }
;; 144 succs { 145 185 }
;; 145 succs { 194 146 }
;; 146 succs { 194 147 }
;; 147 succs { 194 185 }
;; 148 succs { 194 149 }
;; 149 succs { 150 153 }
;; 150 succs { 194 151 }
;; 151 succs { 152 153 }
;; 152 succs { 154 }
;; 153 succs { 154 }
;; 154 succs { 155 185 }
;; 155 succs { 194 156 }
;; 156 succs { 194 157 }
;; 157 succs { 158 185 }
;; 158 succs { 194 159 }
;; 159 succs { 160 185 }
;; 160 succs { 161 185 }
;; 161 succs { 194 162 }
;; 162 succs { 163 185 }
;; 163 succs { 194 164 }
;; 164 succs { 165 185 }
;; 165 succs { 194 166 }
;; 166 succs { 194 167 }
;; 167 succs { 194 185 }
;; 168 succs { 169 185 }
;; 169 succs { 194 170 }
;; 170 succs { 171 176 }
;; 171 succs { 194 172 }
;; 172 succs { 194 173 }
;; 173 succs { 174 176 }
;; 174 succs { 194 175 }
;; 175 succs { 194 176 }
;; 176 succs { 194 177 }
;; 177 succs { 194 178 }
;; 178 succs { 179 185 }
;; 179 succs { 194 180 }
;; 180 succs { 181 185 }
;; 181 succs { 182 183 }
;; 182 succs { 194 185 }
;; 183 succs { 194 184 }
;; 184 succs { 194 185 }
;; 185 succs { 186 }
;; 186 succs { 28 187 }
;; 187 succs { 191 }
;; 188 succs { 189 191 }
;; 189 succs { 190 191 }
;; 190 succs { 191 }
;; 191 succs { 192 }
;; 192 succs { 13 193 }
;; 193 succs { 1 }
;; 194 succs { 195 }
;; 195 succs { }
void Prenew_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  unsigned int D.255624;
  union tree_node * D.255623;
  union tree_node * D.255622;
  int D.255621;
  union tree_node * D.255620;
  union tree_node * D.255619;
  union tree_node * D.255616;
  union tree_node * D.255615;
  int D.255614;
  union tree_node * D.255613;
  union tree_node * D.255612;
  int D.255611;
  union tree_node * D.255610;
  union tree_node * D.255609;
  union tree_node * D.255608;
  union tree_node * D.255607;
  union tree_node * D.255606;
  union tree_node * D.255605;
  union tree_node * D.255604;
  int D.255603;
  union tree_node * D.255602;
  union tree_node * D.255601;
  union tree_node * D.255600;
  union tree_node * D.255599;
  union tree_node * D.255598;
  union tree_node * D.255597;
  union tree_node * D.255596;
  union tree_node * D.255595;
  int D.255594;
  union tree_node * D.255593;
  union tree_node * D.255592;
  union tree_node * D.255591;
  union tree_node * D.255590;
  union tree_node * D.255589;
  int D.255588;
  union tree_node * D.255587;
  int D.255586;
  union tree_node * D.255585;
  union tree_node * D.255584;
  int D.255583;
  union tree_node * D.255582;
  union tree_node * D.255581;
  union tree_node * D.255580;
  union tree_node * D.255579;
  union tree_node * D.255578;
  union tree_node * D.255577;
  union tree_node * D.255576;
  int D.255575;
  union tree_node * D.255574;
  union tree_node * D.255573;
  union tree_node * D.255572;
  union tree_node * D.255571;
  union tree_node * D.255570;
  union tree_node * D.255569;
  union tree_node * D.255568;
  union tree_node * D.255567;
  int D.255566;
  union tree_node * D.255565;
  union tree_node * D.255564;
  union tree_node * D.255563;
  union tree_node * D.255562;
  union tree_node * D.255561;
  int D.255560;
  union tree_node * D.255559;
  int D.255558;
  union tree_node * D.255557;
  int D.255556;
  union tree_node * D.255555;
  union tree_node * D.255554;
  union tree_node * D.255553;
  int D.255552;
  union tree_node * D.255551;
  union tree_node * D.255550;
  struct function_assign_array * D.255549;
  union tree_node * D.255548;
  union tree_node * D.255547;
  union tree_node * D.255546;
  union tree_node * D.255545;
  union tree_node * D.255544;
  unsigned int D.255543;
  union tree_node * D.255542;
  union tree_node * D.255541;
  union tree_node * D.255540;
  union tree_node * D.255539;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  union tree_node * second;
  int i;
  struct gimple * def_stmt;
  bool retval.1316;
  bool retval.1312;
  bool retval.1310;
  bool retval.1309;
  bool retval.1308;
  bool retval.1307;
  bool retval.1306;
  bool retval.1305;
  bool retval.1304;
  bool retval.1303;
  bool retval.1302;
  bool retval.1301;
  bool retval.1300;
  bool retval.1299;
  bool iftmp.1298;
  bool retval.1297;
  bool retval.1296;
  bool retval.1295;
  bool retval.1294;
  bool retval.1293;
  bool iftmp.1292;
  bool retval.1291;
  bool iftmp.1290;
  bool retval.1289;
  bool retval.1288;
  bool retval.1287;
  bool retval.1286;
  bool retval.1285;
  bool retval.1284;
  bool retval.1283;
  bool retval.1282;
  bool retval.1281;
  bool retval.1280;
  bool iftmp.1279;
  bool retval.1278;
  bool retval.1277;
  bool retval.1276;
  bool retval.1275;
  bool retval.1274;
  bool iftmp.1273;
  bool retval.1272;
  bool iftmp.1271;
  bool retval.1270;
  bool retval.1269;
  bool retval.1268;
  bool retval.1267;
  bool retval.1266;
  bool retval.1265;
  bool retval.1264;
  bool retval.1263;
  bool retval.1262;
  struct function_assign_array D.196410;
  bool retval.1259;
  bool retval.1255;
  bool iftmp.1252;
  bool retval.1251;
  bool retval.1250;
  bool retval.1249;
  bool iftmp.1248;
  bool retval.1247;
  bool retval.1246;
  bool retval.1245;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 3> :
  _1 = gimple_code (def_stmt);
  retval.1245 = _1 == 8;
  if (retval.1245 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 4> :
  D.255539 = gimple_call_lhs (def_stmt);
  _2 = D.255539;
  retval.1246 = _2 != 0B;
  if (retval.1246 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 5> :
  D.255540 = gimple_call_lhs (def_stmt);
  _3 = D.255540;
  if (_3 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  D.255541 = gimple_call_lhs (def_stmt);
  _4 = D.255541;
  _5 = _4->base.code;
  if (_5 == 153)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1248 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1248 = 0;

  <bb 9> :
  retval.1247 = iftmp.1248;
  if (retval.1247 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 10> :
  D.255542 = gimple_assign_rhs1 (def_stmt);
  _6 = D.255542;
  retval.1249 = _6 != 0B;
  if (retval.1249 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 11> :
  D.255543 = gimple_call_num_args (def_stmt);
  _7 = D.255543;
  retval.1250 = _7 != 0;
  if (retval.1250 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 12> :
  i = 0;
  goto <bb 192>; [INV]

  <bb 13> :
  i.1253_8 = (unsigned int) i;
  D.255544 = gimple_call_arg (def_stmt, i.1253_8);
  _9 = D.255544;
  _10 = _9->base.code;
  if (_10 == 131)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  i.1254_11 = (unsigned int) i;
  D.255545 = gimple_call_arg (def_stmt, i.1254_11);
  _12 = D.255545;
  _13 = _12->base.code;
  if (_13 == 36)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1252 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1252 = 0;

  <bb 17> :
  retval.1251 = iftmp.1252;
  if (retval.1251 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 18> :
  i.1256_14 = (unsigned int) i;
  D.255546 = gimple_call_arg (def_stmt, i.1256_14);

  <bb 19> :
  _15 = D.255546;
  _16 = _15->base.code;
  retval.1255 = _16 == 131;
  if (retval.1255 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  i.1257_17 = (unsigned int) i;
  D.255547 = gimple_call_arg (def_stmt, i.1257_17);

  <bb 21> :
  _18 = D.255547;
  second = _18->exp.operands[0];
  goto <bb 24>; [INV]

  <bb 22> :
  i.1258_19 = (unsigned int) i;
  D.255548 = gimple_call_arg (def_stmt, i.1258_19);

  <bb 23> :
  second = D.255548;

  <bb 24> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1260_20 = function_assign_collect;
  D.255549 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1260_20, &getFunctionAssignVAR);

  <bb 25> :
  _21 = D.255549;
  retval.1259 = _21 != 0B;
  if (retval.1259 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 26> :
  getFunctionAssignVAR.1261_22 = getFunctionAssignVAR;
  D.196410 = ret_function_varstmt (getFunctionAssignVAR.1261_22); [return slot optimization]

  <bb 27> :
  function_assign_array::operator= (&assign_array, &D.196410);
  function_assign_array::~function_assign_array (&D.196410);
  D.196410 = {CLOBBER};
  i = 0;
  goto <bb 186>; [INV]

  <bb 28> :
  _23 = (long unsigned int) i;
  _24 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _23);
  _25 = _24->stmt;
  _26 = gimple_code (_25);
  retval.1262 = _26 == 6;
  if (retval.1262 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 29> :
  _27 = (long unsigned int) i;
  _28 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _27);
  _29 = _28->stmt;
  D.255550 = gimple_assign_lhs (_29);

  <bb 30> :
  _30 = D.255550;
  _31 = _30->base.code;
  retval.1263 = _31 == 165;
  if (retval.1263 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 31> :
  _32 = (long unsigned int) i;
  _33 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _32);
  _34 = _33->stmt;
  D.255551 = gimple_assign_lhs (_34);

  <bb 32> :
  _35 = D.255551;
  D.255552 = check_stmtStack (_35);

  <bb 33> :
  _36 = D.255552;
  retval.1264 = _36 == 0;
  if (retval.1264 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 34> :
  _37 = (long unsigned int) i;
  _38 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _37);
  _39 = _38->form_tree;
  retval.1265 = _39 != 0B;
  if (retval.1265 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _40 = (long unsigned int) i;
  _41 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _40);
  _42 = _41->form_tree;
  _43 = (long unsigned int) i;
  _44 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _43);
  _45 = _44->stmt;
  set_gimple_array (used_stmt, _45, _42, target, 0B);
  goto <bb 185>; [INV]

  <bb 36> :
  _46 = (long unsigned int) i;
  _47 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _46);
  _48 = _47->stmt;
  D.255553 = gimple_assign_lhs (_48);

  <bb 37> :
  _49 = D.255553;
  _50 = (long unsigned int) i;
  _51 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _50);
  _52 = _51->stmt;
  set_gimple_array (used_stmt, _52, _49, target, 0B);
  goto <bb 185>; [INV]

  <bb 38> :
  _53 = (long unsigned int) i;
  _54 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _53);
  _55 = _54->stmt;
  D.255554 = gimple_assign_lhs (_55);

  <bb 39> :
  _56 = D.255554;
  _57 = _56->base.code;
  retval.1266 = _57 == 153;
  if (retval.1266 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 40> :
  _58 = (long unsigned int) i;
  _59 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _58);
  _60 = _59->stmt;
  D.255555 = gimple_assign_lhs (_60);

  <bb 41> :
  _61 = D.255555;
  D.255556 = check_stmtStack (_61);

  <bb 42> :
  _62 = D.255556;
  retval.1267 = _62 == 0;
  if (retval.1267 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 43> :
  _63 = (long unsigned int) i;
  _64 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _63);
  _65 = _64->form_tree;
  retval.1268 = _65 != 0B;
  if (retval.1268 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  _66 = (long unsigned int) i;
  _67 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _66);
  _68 = _67->form_tree;
  _69 = (long unsigned int) i;
  _70 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _69);
  _71 = _70->stmt;
  set_gimple_array (used_stmt, _71, _68, target, 0B);
  goto <bb 47>; [INV]

  <bb 45> :
  _72 = (long unsigned int) i;
  _73 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _72);
  _74 = _73->stmt;
  D.255557 = gimple_assign_lhs (_74);

  <bb 46> :
  _75 = D.255557;
  _76 = (long unsigned int) i;
  _77 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _76);
  _78 = _77->stmt;
  set_gimple_array (used_stmt, _78, _75, target, 0B);

  <bb 47> :
  _79 = (long unsigned int) i;
  _80 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _79);
  _81 = _80->stmt;
  D.255558 = check_stmtStack4 (_81);

  <bb 48> :
  _82 = D.255558;
  retval.1269 = _82 == 0;
  if (retval.1269 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 49> :
  _83 = (long unsigned int) i;
  _84 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _83);
  _85 = _84->stmt;
  D.255559 = gimple_assign_lhs (_85);

  <bb 50> :
  _86 = D.255559;
  if (target2 != _86)
    goto <bb 51>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 51> :
  _87 = (long unsigned int) i;
  _88 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _87);
  _89 = _88->stmt;
  D.255560 = check_stmtStack2 (_89);

  <bb 52> :
  _90 = D.255560;
  if (_90 == 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  iftmp.1271 = 1;
  goto <bb 55>; [INV]

  <bb 54> :
  iftmp.1271 = 0;

  <bb 55> :
  retval.1270 = iftmp.1271;
  if (retval.1270 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 56> :
  _91 = (long unsigned int) i;
  _92 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _91);
  _93 = _92->stmt;
  D.255561 = gimple_assign_lhs (_93);

  <bb 57> :
  _94 = D.255561;
  _95 = (long unsigned int) i;
  _96 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _95);
  _97 = _96->stmt;
  D.255562 = gimple_assign_lhs (_97);

  <bb 58> :
  _98 = D.255562;
  new_search_imm_use (used_stmt, _98, _94);

  <bb 59> :
  _99 = (long unsigned int) i;
  _100 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _99);
  _101 = _100->stmt;
  D.255563 = gimple_assign_rhs1 (_101);

  <bb 60> :
  _102 = D.255563;
  if (_102 != 0B)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  _103 = (long unsigned int) i;
  _104 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _103);
  _105 = _104->stmt;
  D.255564 = gimple_assign_rhs1 (_105);

  <bb 62> :
  _106 = D.255564;
  _107 = _106->base.code;
  if (_107 == 47)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1273 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.1273 = 0;

  <bb 65> :
  retval.1272 = iftmp.1273;
  if (retval.1272 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 66> :
  _108 = (long unsigned int) i;
  _109 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _108);
  _110 = _109->stmt;
  D.255565 = gimple_assign_rhs1 (_110);

  <bb 67> :
  _111 = D.255565;
  D.255566 = check_stmtStack (_111);

  <bb 68> :
  _112 = D.255566;
  retval.1274 = _112 == 0;
  if (retval.1274 != 0)
    goto <bb 69>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 69> :
  _113 = (long unsigned int) i;
  _114 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _113);
  _115 = _114->stmt;
  D.255567 = gimple_assign_rhs1 (_115);

  <bb 70> :
  _116 = D.255567;
  second = _116->exp.operands[0];
  if (second != 0B)
    goto <bb 71>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 71> :
  _117 = second->base.code;
  if (_117 == 165)
    goto <bb 72>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 72> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 73>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 73> :
  _118 = three->base.code;
  if (_118 == 153)
    goto <bb 74>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 74> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1275 = is_gimple_assign (def_stmt);
  if (retval.1275 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 75> :
  D.255568 = gimple_assign_lhs (def_stmt);

  <bb 76> :
  _119 = D.255568;
  _120 = _119->base.code;
  retval.1276 = _120 == 153;
  if (retval.1276 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 77> :
  D.255569 = gimple_assign_lhs (def_stmt);

  <bb 78> :
  _121 = D.255569;
  retval.1277 = target2 != _121;
  if (retval.1277 != 0)
    goto <bb 79>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 79> :
  D.255570 = gimple_assign_lhs (def_stmt);

  <bb 80> :
  _122 = D.255570;
  D.255571 = gimple_assign_lhs (def_stmt);

  <bb 81> :
  _123 = D.255571;
  new_search_imm_use (used_stmt, _123, _122);
  goto <bb 185>; [INV]

  <bb 82> :
  _124 = (long unsigned int) i;
  _125 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _124);
  _126 = _125->stmt;
  D.255572 = gimple_assign_rhs1 (_126);

  <bb 83> :
  _127 = D.255572;
  if (_127 != 0B)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  _128 = (long unsigned int) i;
  _129 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _128);
  _130 = _129->stmt;
  D.255573 = gimple_assign_rhs1 (_130);

  <bb 85> :
  _131 = D.255573;
  _132 = _131->base.code;
  if (_132 == 165)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1279 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1279 = 0;

  <bb 88> :
  retval.1278 = iftmp.1279;
  if (retval.1278 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 89> :
  _133 = (long unsigned int) i;
  _134 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _133);
  _135 = _134->stmt;
  D.255574 = gimple_assign_rhs1 (_135);

  <bb 90> :
  _136 = D.255574;
  D.255575 = check_stmtStack (_136);

  <bb 91> :
  _137 = D.255575;
  retval.1280 = _137 == 0;
  if (retval.1280 != 0)
    goto <bb 92>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 92> :
  _138 = (long unsigned int) i;
  _139 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _138);
  _140 = _139->stmt;
  D.255576 = gimple_assign_rhs1 (_140);

  <bb 93> :
  _141 = D.255576;
  second = _141->exp.operands[0];
  _142 = second->base.code;
  if (_142 == 165)
    goto <bb 94>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 94> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1281 = is_gimple_assign (def_stmt);
  if (retval.1281 != 0)
    goto <bb 95>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 95> :
  D.255577 = gimple_assign_lhs (def_stmt);

  <bb 96> :
  _143 = D.255577;
  _144 = _143->base.code;
  retval.1282 = _144 == 153;
  if (retval.1282 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 97> :
  D.255578 = gimple_assign_lhs (def_stmt);

  <bb 98> :
  _145 = D.255578;
  retval.1283 = target2 != _145;
  if (retval.1283 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 99> :
  D.255579 = gimple_assign_lhs (def_stmt);

  <bb 100> :
  _146 = D.255579;
  D.255580 = gimple_assign_lhs (def_stmt);

  <bb 101> :
  _147 = D.255580;
  new_search_imm_use (used_stmt, _147, _146);
  goto <bb 185>; [INV]

  <bb 102> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.255581 = gimple_assign_rhs1 (_150);

  <bb 103> :
  _151 = D.255581;
  _152 = _151->base.code;
  retval.1284 = _152 == 153;
  if (retval.1284 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 104> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.255582 = gimple_assign_rhs1 (_155);

  <bb 105> :
  _156 = D.255582;
  D.255583 = check_stmtStack (_156);

  <bb 106> :
  _157 = D.255583;
  retval.1285 = _157 == 0;
  if (retval.1285 != 0)
    goto <bb 107>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 107> :
  _158 = (long unsigned int) i;
  _159 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _158);
  _160 = _159->form_tree;
  retval.1286 = _160 != 0B;
  if (retval.1286 != 0)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->form_tree;
  _164 = (long unsigned int) i;
  _165 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _164);
  _166 = _165->stmt;
  set_gimple_array (used_stmt, _166, _163, target, 0B);
  goto <bb 111>; [INV]

  <bb 109> :
  _167 = (long unsigned int) i;
  _168 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _167);
  _169 = _168->stmt;
  D.255584 = gimple_assign_rhs1 (_169);

  <bb 110> :
  _170 = D.255584;
  _171 = (long unsigned int) i;
  _172 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _171);
  _173 = _172->stmt;
  set_gimple_array (used_stmt, _173, _170, target, 0B);

  <bb 111> :
  _174 = (long unsigned int) i;
  _175 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _174);
  _176 = _175->stmt;
  D.255585 = gimple_assign_rhs1 (_176);

  <bb 112> :
  _177 = D.255585;
  retval.1287 = target2 != _177;
  if (retval.1287 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 113> :
  _178 = (long unsigned int) i;
  _179 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _178);
  _180 = _179->stmt;
  D.255586 = check_stmtStack4 (_180);

  <bb 114> :
  _181 = D.255586;
  retval.1288 = _181 == 0;
  if (retval.1288 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 115> :
  _182 = (long unsigned int) i;
  _183 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _182);
  _184 = _183->stmt;
  D.255587 = gimple_assign_rhs1 (_184);

  <bb 116> :
  _185 = D.255587;
  if (target2 != _185)
    goto <bb 117>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 117> :
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->stmt;
  D.255588 = check_stmtStack2 (_188);

  <bb 118> :
  _189 = D.255588;
  if (_189 == 0)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  iftmp.1290 = 1;
  goto <bb 121>; [INV]

  <bb 120> :
  iftmp.1290 = 0;

  <bb 121> :
  retval.1289 = iftmp.1290;
  if (retval.1289 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 122> :
  _190 = (long unsigned int) i;
  _191 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _190);
  _192 = _191->stmt;
  D.255589 = gimple_assign_rhs1 (_192);

  <bb 123> :
  _193 = D.255589;
  _194 = (long unsigned int) i;
  _195 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _194);
  _196 = _195->stmt;
  D.255590 = gimple_assign_rhs1 (_196);

  <bb 124> :
  _197 = D.255590;
  new_search_imm_use (used_stmt, _197, _193);

  <bb 125> :
  _198 = (long unsigned int) i;
  _199 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _198);
  _200 = _199->stmt;
  D.255591 = gimple_assign_lhs (_200);

  <bb 126> :
  _201 = D.255591;
  if (_201 != 0B)
    goto <bb 127>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 127> :
  _202 = (long unsigned int) i;
  _203 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _202);
  _204 = _203->stmt;
  D.255592 = gimple_assign_lhs (_204);

  <bb 128> :
  _205 = D.255592;
  _206 = _205->base.code;
  if (_206 == 47)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  iftmp.1292 = 1;
  goto <bb 131>; [INV]

  <bb 130> :
  iftmp.1292 = 0;

  <bb 131> :
  retval.1291 = iftmp.1292;
  if (retval.1291 != 0)
    goto <bb 132>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 132> :
  _207 = (long unsigned int) i;
  _208 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _207);
  _209 = _208->stmt;
  D.255593 = gimple_assign_lhs (_209);

  <bb 133> :
  _210 = D.255593;
  D.255594 = check_stmtStack (_210);

  <bb 134> :
  _211 = D.255594;
  retval.1293 = _211 == 0;
  if (retval.1293 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 135> :
  _212 = (long unsigned int) i;
  _213 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _212);
  _214 = _213->stmt;
  D.255595 = gimple_assign_lhs (_214);

  <bb 136> :
  _215 = D.255595;
  second = _215->exp.operands[0];
  if (second != 0B)
    goto <bb 137>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 137> :
  _216 = second->base.code;
  if (_216 == 165)
    goto <bb 138>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 138> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 139>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 139> :
  _217 = three->base.code;
  if (_217 == 153)
    goto <bb 140>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 140> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1294 = is_gimple_assign (def_stmt);
  if (retval.1294 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 141> :
  D.255596 = gimple_assign_lhs (def_stmt);

  <bb 142> :
  _218 = D.255596;
  _219 = _218->base.code;
  retval.1295 = _219 == 153;
  if (retval.1295 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 143> :
  D.255597 = gimple_assign_lhs (def_stmt);

  <bb 144> :
  _220 = D.255597;
  retval.1296 = target2 != _220;
  if (retval.1296 != 0)
    goto <bb 145>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 145> :
  D.255598 = gimple_assign_lhs (def_stmt);

  <bb 146> :
  _221 = D.255598;
  D.255599 = gimple_assign_lhs (def_stmt);

  <bb 147> :
  _222 = D.255599;
  new_search_imm_use (used_stmt, _222, _221);
  goto <bb 185>; [INV]

  <bb 148> :
  _223 = (long unsigned int) i;
  _224 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _223);
  _225 = _224->stmt;
  D.255600 = gimple_assign_lhs (_225);

  <bb 149> :
  _226 = D.255600;
  if (_226 != 0B)
    goto <bb 150>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 150> :
  _227 = (long unsigned int) i;
  _228 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _227);
  _229 = _228->stmt;
  D.255601 = gimple_assign_lhs (_229);

  <bb 151> :
  _230 = D.255601;
  _231 = _230->base.code;
  if (_231 == 165)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  iftmp.1298 = 1;
  goto <bb 154>; [INV]

  <bb 153> :
  iftmp.1298 = 0;

  <bb 154> :
  retval.1297 = iftmp.1298;
  if (retval.1297 != 0)
    goto <bb 155>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 155> :
  _232 = (long unsigned int) i;
  _233 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _232);
  _234 = _233->stmt;
  D.255602 = gimple_assign_lhs (_234);

  <bb 156> :
  _235 = D.255602;
  D.255603 = check_stmtStack (_235);

  <bb 157> :
  _236 = D.255603;
  retval.1299 = _236 == 0;
  if (retval.1299 != 0)
    goto <bb 158>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 158> :
  _237 = (long unsigned int) i;
  _238 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _237);
  _239 = _238->stmt;
  D.255604 = gimple_assign_lhs (_239);

  <bb 159> :
  _240 = D.255604;
  second = _240->exp.operands[0];
  _241 = second->base.code;
  if (_241 == 165)
    goto <bb 160>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 160> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1300 = is_gimple_assign (def_stmt);
  if (retval.1300 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 161> :
  D.255605 = gimple_assign_lhs (def_stmt);

  <bb 162> :
  _242 = D.255605;
  _243 = _242->base.code;
  retval.1301 = _243 == 153;
  if (retval.1301 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 163> :
  D.255606 = gimple_assign_lhs (def_stmt);

  <bb 164> :
  _244 = D.255606;
  retval.1302 = target2 != _244;
  if (retval.1302 != 0)
    goto <bb 165>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 165> :
  D.255607 = gimple_assign_lhs (def_stmt);

  <bb 166> :
  _245 = D.255607;
  D.255608 = gimple_assign_lhs (def_stmt);

  <bb 167> :
  _246 = D.255608;
  new_search_imm_use (used_stmt, _246, _245);
  goto <bb 185>; [INV]

  <bb 168> :
  _247 = (long unsigned int) i;
  _248 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _247);
  _249 = _248->stmt;
  _250 = gimple_code (_249);
  retval.1303 = _250 == 8;
  if (retval.1303 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 169> :
  _251 = (long unsigned int) i;
  _252 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _251);
  _253 = _252->stmt;
  D.255609 = gimple_call_arg (_253, 0);

  <bb 170> :
  _254 = D.255609;
  _255 = _254->base.code;
  retval.1304 = _255 == 131;
  if (retval.1304 != 0)
    goto <bb 171>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 171> :
  _256 = (long unsigned int) i;
  _257 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _256);
  _258 = _257->stmt;
  D.255610 = gimple_call_arg (_258, 0);

  <bb 172> :
  _259 = D.255610;
  D.255611 = check_stmtStack (_259);

  <bb 173> :
  _260 = D.255611;
  retval.1305 = _260 == 0;
  if (retval.1305 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 174> :
  _261 = (long unsigned int) i;
  _262 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _261);
  _263 = _262->stmt;
  D.255612 = gimple_call_arg (_263, 0);

  <bb 175> :
  _264 = D.255612;
  _265 = (long unsigned int) i;
  _266 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _265);
  _267 = _266->stmt;
  set_gimple_array (used_stmt, _267, _264, target, 0B);

  <bb 176> :
  _268 = (long unsigned int) i;
  _269 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _268);
  _270 = _269->stmt;
  D.255613 = gimple_call_arg (_270, 0);

  <bb 177> :
  _271 = D.255613;
  D.255614 = check_stmtStack (_271);

  <bb 178> :
  _272 = D.255614;
  retval.1306 = _272 == 0;
  if (retval.1306 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 179> :
  _273 = (long unsigned int) i;
  _274 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _273);
  _275 = _274->stmt;
  D.255615 = gimple_call_arg (_275, 0);

  <bb 180> :
  _276 = D.255615;
  _277 = _276->base.code;
  retval.1307 = _277 == 153;
  if (retval.1307 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 181> :
  _278 = (long unsigned int) i;
  _279 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _278);
  _280 = _279->form_tree;
  retval.1308 = _280 != 0B;
  if (retval.1308 != 0)
    goto <bb 182>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 182> :
  _281 = (long unsigned int) i;
  _282 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _281);
  _283 = _282->form_tree;
  _284 = (long unsigned int) i;
  _285 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _284);
  _286 = _285->stmt;
  set_gimple_array (used_stmt, _286, _283, target, 0B);
  goto <bb 185>; [INV]

  <bb 183> :
  _287 = (long unsigned int) i;
  _288 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _287);
  _289 = _288->stmt;
  D.255616 = gimple_call_arg (_289, 0);

  <bb 184> :
  _290 = D.255616;
  _291 = (long unsigned int) i;
  _292 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _291);
  _293 = _292->stmt;
  set_gimple_array (used_stmt, _293, _290, target, 0B);

  <bb 185> :
  i = i + 1;

  <bb 186> :
  _294 = (long unsigned int) i;
  _295 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1309 = _294 < _295;
  if (retval.1309 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 187> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  goto <bb 191>; [INV]

  <bb 188> :
  i.1311_296 = (unsigned int) i;
  D.255619 = gimple_call_arg (def_stmt, i.1311_296);
  _297 = D.255619;
  _298 = _297->base.code;
  retval.1310 = _298 == 153;
  if (retval.1310 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 189> :
  i.1313_299 = (unsigned int) i;
  D.255620 = gimple_call_arg (def_stmt, i.1313_299);
  _300 = D.255620;
  D.255621 = check_stmtStack (_300);
  _301 = D.255621;
  retval.1312 = _301 == 0;
  if (retval.1312 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 190> :
  i.1314_302 = (unsigned int) i;
  D.255622 = gimple_call_arg (def_stmt, i.1314_302);
  _303 = D.255622;
  i.1315_304 = (unsigned int) i;
  D.255623 = gimple_call_arg (def_stmt, i.1315_304);
  _305 = D.255623;
  new_search_imm_use (used_stmt, _305, _303);

  <bb 191> :
  i = i + 1;

  <bb 192> :
  D.255624 = gimple_call_num_args (def_stmt);
  _306 = D.255624;
  i.1317_307 = (unsigned int) i;
  retval.1316 = _306 > i.1317_307;
  if (retval.1316 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 193> :
  return;

  <bb 194> :
<L224>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 195> :
<L225>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 1

}



;; Function new_search_imm_use (_Z18new_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6434, decl_uid=187140, cgraph_uid=3410, symbol_order=4191)

Removing basic block 11
Removing basic block 12
Removing basic block 16
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 49
Removing basic block 50
Removing basic block 76
Removing basic block 78
Removing basic block 90
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 106
Removing basic block 108
Removing basic block 110
Removing basic block 119
Removing basic block 121
Removing basic block 123
Removing basic block 127
Removing basic block 134
Removing basic block 141
Removing basic block 142
Removing basic block 143
Removing basic block 153
Removing basic block 154
Removing basic block 155
Removing basic block 170
Removing basic block 171
Removing basic block 172
Removing basic block 173
Removing basic block 200
Removing basic block 201
Removing basic block 202
Removing basic block 203
Removing basic block 204
Removing basic block 225
Removing basic block 226
Removing basic block 239
Removing basic block 240
Removing basic block 241
Removing basic block 242
Removing basic block 262
Removing basic block 263
Removing basic block 264
Removing basic block 268
Removing basic block 269
Removing basic block 270
Removing basic block 271
Removing basic block 284
Removing basic block 285
Removing basic block 295
Removing basic block 323
Removing basic block 329
Removing basic block 330
Removing basic block 343
Removing basic block 349
Removing basic block 350
Removing basic block 351
Removing basic block 360
Removing basic block 361
Removing basic block 362
Removing basic block 365
Removing basic block 367
Removing basic block 377
Removing basic block 378
Removing basic block 401
Removing basic block 402
Removing basic block 425
Removing basic block 426
Removing basic block 427
Removing basic block 428
Removing basic block 429
Removing basic block 433
Removing basic block 434
Removing basic block 435
Removing basic block 436
Removing basic block 437
Removing basic block 448
Removing basic block 449
Removing basic block 462
Removing basic block 468
Removing basic block 472
Removing basic block 473
Removing basic block 474
Removing basic block 475
Removing basic block 476
Removing basic block 478
Removing basic block 479
Removing basic block 483
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 218, latch 217
;;  depth 1, outer 0
;;  nodes: 218 217 209 216 211 213 212 210 215 214 208 219
;;
;; Loop 2
;;  header 355, latch 354
;;  depth 1, outer 0
;;  nodes: 355 354 341 353 343 348 350 345 344 349 347 346 342 352 351 340 356
;;
;; Loop 1
;;  header 299, latch 298
;;  depth 1, outer 0
;;  nodes: 299 298 279 290 297 272 282 265 289 292 295 294 293 291 288 287 284 286 285 283 264 263 262 260 261 257 259 258 256 255 281 280 271 270 267 269 268 266 296 277 278 274 276 275 273
;; 2 succs { 4 3 }
;; 3 succs { 4 391 }
;; 4 succs { 5 7 }
;; 5 succs { 396 6 }
;; 6 succs { 238 }
;; 7 succs { 8 11 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 22 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 392 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 391 }
;; 19 succs { 390 }
;; 20 succs { 396 21 }
;; 21 succs { 22 388 }
;; 22 succs { 396 23 }
;; 23 succs { 24 36 }
;; 24 succs { 25 36 }
;; 25 succs { 396 26 }
;; 26 succs { 27 36 }
;; 27 succs { 396 28 }
;; 28 succs { 29 31 }
;; 29 succs { 30 31 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 36 }
;; 33 succs { 396 34 }
;; 34 succs { 35 36 }
;; 35 succs { 396 36 }
;; 36 succs { 37 41 }
;; 37 succs { 396 38 }
;; 38 succs { 396 39 }
;; 39 succs { 40 388 }
;; 40 succs { 396 388 }
;; 41 succs { 42 141 }
;; 42 succs { 396 43 }
;; 43 succs { 396 44 }
;; 44 succs { 396 45 }
;; 45 succs { 396 46 }
;; 46 succs { 47 93 }
;; 47 succs { 48 93 }
;; 48 succs { 396 49 }
;; 49 succs { 50 79 }
;; 50 succs { 396 51 }
;; 51 succs { 52 56 }
;; 52 succs { 396 53 }
;; 53 succs { 396 54 }
;; 54 succs { 55 56 }
;; 55 succs { 57 }
;; 56 succs { 57 }
;; 57 succs { 58 67 }
;; 58 succs { 396 59 }
;; 59 succs { 60 63 }
;; 60 succs { 396 61 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 396 66 }
;; 66 succs { 396 79 }
;; 67 succs { 68 79 }
;; 68 succs { 69 79 }
;; 69 succs { 396 70 }
;; 70 succs { 71 79 }
;; 71 succs { 72 75 }
;; 72 succs { 396 73 }
;; 73 succs { 74 75 }
;; 74 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 77 78 }
;; 77 succs { 396 78 }
;; 78 succs { 396 79 }
;; 79 succs { 80 92 }
;; 80 succs { 81 92 }
;; 81 succs { 396 82 }
;; 82 succs { 83 91 }
;; 83 succs { 84 87 }
;; 84 succs { 396 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 90 }
;; 89 succs { 396 90 }
;; 90 succs { 396 91 }
;; 91 succs { 396 92 }
;; 92 succs { 102 }
;; 93 succs { 94 102 }
;; 94 succs { 95 102 }
;; 95 succs { 396 96 }
;; 96 succs { 97 101 }
;; 97 succs { 396 98 }
;; 98 succs { 99 100 }
;; 99 succs { 396 100 }
;; 100 succs { 396 101 }
;; 101 succs { 396 102 }
;; 102 succs { 396 103 }
;; 103 succs { 104 105 }
;; 104 succs { 396 105 }
;; 105 succs { 396 106 }
;; 106 succs { 107 118 }
;; 107 succs { 108 118 }
;; 108 succs { 396 109 }
;; 109 succs { 110 111 }
;; 110 succs { 396 111 }
;; 111 succs { 112 117 }
;; 112 succs { 396 113 }
;; 113 succs { 114 117 }
;; 114 succs { 396 115 }
;; 115 succs { 116 117 }
;; 116 succs { 396 117 }
;; 117 succs { 140 }
;; 118 succs { 119 127 }
;; 119 succs { 120 127 }
;; 120 succs { 121 126 }
;; 121 succs { 396 122 }
;; 122 succs { 123 126 }
;; 123 succs { 396 124 }
;; 124 succs { 125 126 }
;; 125 succs { 396 126 }
;; 126 succs { 140 }
;; 127 succs { 128 140 }
;; 128 succs { 129 140 }
;; 129 succs { 130 140 }
;; 130 succs { 396 131 }
;; 131 succs { 134 132 }
;; 132 succs { 396 133 }
;; 133 succs { 134 135 }
;; 134 succs { 136 }
;; 135 succs { 136 }
;; 136 succs { 137 140 }
;; 137 succs { 396 138 }
;; 138 succs { 139 140 }
;; 139 succs { 396 140 }
;; 140 succs { 388 }
;; 141 succs { 142 166 }
;; 142 succs { 396 143 }
;; 143 succs { 144 147 }
;; 144 succs { 396 145 }
;; 145 succs { 146 147 }
;; 146 succs { 148 }
;; 147 succs { 148 }
;; 148 succs { 149 388 }
;; 149 succs { 396 150 }
;; 150 succs { 151 388 }
;; 151 succs { 396 152 }
;; 152 succs { 396 153 }
;; 153 succs { 154 157 }
;; 154 succs { 396 155 }
;; 155 succs { 156 157 }
;; 156 succs { 158 }
;; 157 succs { 158 }
;; 158 succs { 159 388 }
;; 159 succs { 396 160 }
;; 160 succs { 396 161 }
;; 161 succs { 396 162 }
;; 162 succs { 163 388 }
;; 163 succs { 396 164 }
;; 164 succs { 396 165 }
;; 165 succs { 396 388 }
;; 166 succs { 167 388 }
;; 167 succs { 396 168 }
;; 168 succs { 169 170 }
;; 169 succs { 392 }
;; 170 succs { 396 171 }
;; 171 succs { 396 172 }
;; 172 succs { 173 388 }
;; 173 succs { 174 220 }
;; 174 succs { 396 175 }
;; 175 succs { 176 198 }
;; 176 succs { 396 177 }
;; 177 succs { 396 178 }
;; 178 succs { 179 186 }
;; 179 succs { 396 180 }
;; 180 succs { 396 181 }
;; 181 succs { 396 182 }
;; 182 succs { 183 387 }
;; 183 succs { 396 184 }
;; 184 succs { 396 185 }
;; 185 succs { 396 387 }
;; 186 succs { 396 187 }
;; 187 succs { 188 387 }
;; 188 succs { 396 189 }
;; 189 succs { 396 190 }
;; 190 succs { 191 387 }
;; 191 succs { 396 192 }
;; 192 succs { 396 193 }
;; 193 succs { 396 194 }
;; 194 succs { 195 387 }
;; 195 succs { 396 196 }
;; 196 succs { 396 197 }
;; 197 succs { 396 387 }
;; 198 succs { 396 199 }
;; 199 succs { 200 387 }
;; 200 succs { 396 201 }
;; 201 succs { 396 202 }
;; 202 succs { 203 387 }
;; 203 succs { 396 204 }
;; 204 succs { 396 205 }
;; 205 succs { 396 206 }
;; 206 succs { 207 387 }
;; 207 succs { 218 }
;; 208 succs { 396 209 }
;; 209 succs { 210 217 }
;; 210 succs { 396 211 }
;; 211 succs { 212 217 }
;; 212 succs { 396 213 }
;; 213 succs { 214 217 }
;; 214 succs { 396 215 }
;; 215 succs { 396 216 }
;; 216 succs { 396 217 }
;; 217 succs { 218 }
;; 218 succs { 396 219 }
;; 219 succs { 208 387 }
;; 220 succs { 222 221 }
;; 221 succs { 222 233 }
;; 222 succs { 396 223 }
;; 223 succs { 396 224 }
;; 224 succs { 225 232 }
;; 225 succs { 396 226 }
;; 226 succs { 396 227 }
;; 227 succs { 396 228 }
;; 228 succs { 229 232 }
;; 229 succs { 396 230 }
;; 230 succs { 396 231 }
;; 231 succs { 396 232 }
;; 232 succs { 387 }
;; 233 succs { 235 234 }
;; 234 succs { 235 311 }
;; 235 succs { 396 236 }
;; 236 succs { 396 237 }
;; 237 succs { 238 310 }
;; 238 succs { 239 241 }
;; 239 succs { 240 241 }
;; 240 succs { 241 }
;; 241 succs { 396 242 }
;; 242 succs { 243 245 }
;; 243 succs { 396 244 }
;; 244 succs { 249 }
;; 245 succs { 396 246 }
;; 246 succs { 247 249 }
;; 247 succs { 396 248 }
;; 248 succs { 249 }
;; 249 succs { 250 301 }
;; 250 succs { 251 301 }
;; 251 succs { 394 252 }
;; 252 succs { 253 300 }
;; 253 succs { 394 254 }
;; 254 succs { 299 }
;; 255 succs { 256 290 }
;; 256 succs { 394 257 }
;; 257 succs { 258 261 }
;; 258 succs { 394 259 }
;; 259 succs { 260 261 }
;; 260 succs { 262 }
;; 261 succs { 262 }
;; 262 succs { 263 273 }
;; 263 succs { 394 264 }
;; 264 succs { 394 265 }
;; 265 succs { 266 298 }
;; 266 succs { 267 268 }
;; 267 succs { 394 270 }
;; 268 succs { 394 269 }
;; 269 succs { 394 270 }
;; 270 succs { 394 271 }
;; 271 succs { 394 272 }
;; 272 succs { 394 298 }
;; 273 succs { 394 274 }
;; 274 succs { 275 278 }
;; 275 succs { 394 276 }
;; 276 succs { 277 278 }
;; 277 succs { 279 }
;; 278 succs { 279 }
;; 279 succs { 280 298 }
;; 280 succs { 394 281 }
;; 281 succs { 394 282 }
;; 282 succs { 283 298 }
;; 283 succs { 284 285 }
;; 284 succs { 394 287 }
;; 285 succs { 394 286 }
;; 286 succs { 394 287 }
;; 287 succs { 394 288 }
;; 288 succs { 394 289 }
;; 289 succs { 394 298 }
;; 290 succs { 291 298 }
;; 291 succs { 394 292 }
;; 292 succs { 293 298 }
;; 293 succs { 394 294 }
;; 294 succs { 394 295 }
;; 295 succs { 296 298 }
;; 296 succs { 394 297 }
;; 297 succs { 394 298 }
;; 298 succs { 299 }
;; 299 succs { 255 300 }
;; 300 succs { 301 }
;; 301 succs { 302 303 }
;; 302 succs { 392 }
;; 303 succs { 396 304 }
;; 304 succs { 396 305 }
;; 305 succs { 396 306 }
;; 306 succs { 307 310 }
;; 307 succs { 396 308 }
;; 308 succs { 396 309 }
;; 309 succs { 396 310 }
;; 310 succs { 387 }
;; 311 succs { 396 312 }
;; 312 succs { 313 318 }
;; 313 succs { 396 314 }
;; 314 succs { 315 318 }
;; 315 succs { 396 316 }
;; 316 succs { 317 318 }
;; 317 succs { 319 }
;; 318 succs { 319 }
;; 319 succs { 320 357 }
;; 320 succs { 396 321 }
;; 321 succs { 396 322 }
;; 322 succs { 323 387 }
;; 323 succs { 396 324 }
;; 324 succs { 396 325 }
;; 325 succs { 396 326 }
;; 326 succs { 327 332 }
;; 327 succs { 396 328 }
;; 328 succs { 329 332 }
;; 329 succs { 396 330 }
;; 330 succs { 396 331 }
;; 331 succs { 396 332 }
;; 332 succs { 396 333 }
;; 333 succs { 334 387 }
;; 334 succs { 396 335 }
;; 335 succs { 396 336 }
;; 336 succs { 337 387 }
;; 337 succs { 396 338 }
;; 338 succs { 339 387 }
;; 339 succs { 355 }
;; 340 succs { 396 341 }
;; 341 succs { 342 354 }
;; 342 succs { 396 343 }
;; 343 succs { 344 354 }
;; 344 succs { 396 345 }
;; 345 succs { 346 354 }
;; 346 succs { 396 347 }
;; 347 succs { 396 348 }
;; 348 succs { 349 354 }
;; 349 succs { 396 350 }
;; 350 succs { 351 354 }
;; 351 succs { 396 352 }
;; 352 succs { 396 353 }
;; 353 succs { 396 354 }
;; 354 succs { 355 }
;; 355 succs { 396 356 }
;; 356 succs { 340 387 }
;; 357 succs { 396 358 }
;; 358 succs { 396 359 }
;; 359 succs { 360 367 }
;; 360 succs { 396 361 }
;; 361 succs { 396 362 }
;; 362 succs { 396 363 }
;; 363 succs { 364 367 }
;; 364 succs { 396 365 }
;; 365 succs { 396 366 }
;; 366 succs { 396 367 }
;; 367 succs { 396 368 }
;; 368 succs { 369 387 }
;; 369 succs { 396 370 }
;; 370 succs { 396 371 }
;; 371 succs { 372 387 }
;; 372 succs { 396 373 }
;; 373 succs { 374 387 }
;; 374 succs { 396 375 }
;; 375 succs { 376 379 }
;; 376 succs { 396 377 }
;; 377 succs { 396 378 }
;; 378 succs { 396 379 }
;; 379 succs { 396 380 }
;; 380 succs { 381 387 }
;; 381 succs { 396 382 }
;; 382 succs { 383 384 }
;; 383 succs { 396 387 }
;; 384 succs { 396 385 }
;; 385 succs { 386 387 }
;; 386 succs { 396 387 }
;; 387 succs { 388 }
;; 388 succs { 396 389 }
;; 389 succs { 390 }
;; 390 succs { 20 391 }
;; 391 succs { 393 }
;; 392 succs { 393 }
;; 393 succs { 1 }
;; 394 succs { 395 }
;; 395 succs { 396 }
;; 396 succs { }
void new_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  struct ssa_use_operand_t * D.256251;
  union tree_node * D.256250;
  union tree_node * D.256249;
  union tree_node * D.256248;
  union tree_node * D.256247;
  union tree_node * D.256246;
  union tree_node * D.256245;
  union tree_node * D.256244;
  int D.256243;
  union tree_node * D.256242;
  union tree_node * D.256241;
  union tree_node * D.256240;
  union tree_node * D.256239;
  union tree_node * D.256238;
  union tree_node * D.256237;
  int D.256236;
  union tree_node * D.256235;
  unsigned int D.256234;
  union tree_node * D.256233;
  union tree_node * D.256232;
  union tree_node * D.256231;
  int D.256230;
  union tree_node * D.256229;
  union tree_node * D.256228;
  union tree_node * D.256227;
  union tree_node * D.256226;
  unsigned int D.256225;
  int D.256224;
  union tree_node * D.256223;
  union tree_node * D.256222;
  union tree_node * D.256221;
  union tree_node * D.256220;
  int D.256219;
  union tree_node * D.256218;
  union tree_node * D.256217;
  int D.256216;
  union tree_node * D.256215;
  union tree_node * D.256214;
  union tree_node * D.256213;
  union tree_node * D.256212;
  union tree_node * D.256211;
  union tree_node * D.256210;
  union tree_node * D.256209;
  union tree_node * D.256208;
  union tree_node * D.256205;
  int D.256204;
  union tree_node * D.256203;
  union tree_node * D.256202;
  union tree_node * D.256201;
  union tree_node * D.256200;
  union tree_node * D.256199;
  int D.256198;
  union tree_node * D.256197;
  union tree_node * D.256196;
  union tree_node * D.256195;
  union tree_node * D.256194;
  union tree_node * D.256193;
  union tree_node * D.256192;
  int D.256191;
  union tree_node * D.256190;
  union tree_node * D.256189;
  union tree_node * D.256188;
  struct function_assign_array * D.256187;
  union tree_node * D.256186;
  union tree_node * D.256185;
  union tree_node * D.256184;
  union tree_node * D.256183;
  int D.256182;
  union tree_node * D.256181;
  union tree_node * D.256180;
  union tree_node * D.256179;
  union tree_node * D.256178;
  union tree_node * D.256177;
  int D.256176;
  union tree_node * D.256175;
  unsigned int D.256174;
  union tree_node * D.256173;
  union tree_node * D.256172;
  union tree_node * D.256171;
  union tree_node * D.256170;
  union tree_node * D.256169;
  unsigned int D.256168;
  union tree_node * D.256167;
  int D.256166;
  union tree_node * D.256165;
  union tree_node * D.256164;
  union tree_node * D.256163;
  union tree_node * D.256162;
  union tree_node * D.256161;
  union tree_node * D.256160;
  int D.256159;
  union tree_node * D.256158;
  union tree_node * D.256157;
  union tree_node * D.256156;
  union tree_node * D.256155;
  union tree_node * D.256154;
  union tree_node * D.256153;
  int D.256152;
  union tree_node * D.256151;
  union tree_node * D.256150;
  const char * D.256149;
  union tree_node * D.256148;
  union tree_node * D.256147;
  union tree_node * D.256146;
  union tree_node * D.256145;
  union tree_node * D.256144;
  union tree_node * D.256143;
  int D.256142;
  int D.256141;
  union tree_node * D.256140;
  union tree_node * D.256139;
  union tree_node * D.256138;
  union tree_node * D.256137;
  int D.256136;
  int D.256135;
  int D.256134;
  int D.256133;
  int D.256132;
  int D.256131;
  int D.256130;
  int D.256129;
  int D.256128;
  int D.256127;
  int D.256126;
  int D.256125;
  int D.256124;
  union tree_node * D.256123;
  int D.256122;
  union tree_node * D.256121;
  union tree_node * D.256120;
  union tree_node * D.256119;
  union tree_node * D.256118;
  union tree_node * D.256117;
  int D.256116;
  struct greturn * D.256115;
  int D.256114;
  const struct gcond * D.256113;
  union tree_node * D.256112;
  tree_code D.256111;
  int D.256110;
  struct gimple * def_stmt;
  int i;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  int isVardecl;
  union tree_node * second;
  int i;
  union tree_node * fundecl;
  union tree_node * gimpleassignrhs;
  union tree_node * gimpleassignlhs;
  int ssa_name_assign;
  union tree_node * return_tree;
  const struct gcond * gc;
  const struct ssa_use_operand_t * const head;
  int has_single_use_flag;
  int var_declsuperjump;
  int size;
  struct gimple * def_stmt;
  const char * name;
  struct gimple * gc;
  struct gimple * use_stmt;
  struct ssa_use_operand_t * use_p;
  struct imm_use_iterator imm_iter;
  bool retval.1434;
  bool retval.1433;
  bool retval.1432;
  bool retval.1431;
  bool retval.1430;
  bool retval.1429;
  bool retval.1428;
  bool retval.1427;
  bool retval.1426;
  bool retval.1425;
  bool retval.1423;
  bool retval.1419;
  bool retval.1417;
  bool retval.1415;
  bool retval.1413;
  bool retval.1411;
  bool retval.1410;
  bool retval.1409;
  bool retval.1408;
  bool retval.1407;
  bool retval.1406;
  bool retval.1405;
  bool iftmp.1404;
  bool retval.1403;
  bool retval.1402;
  bool retval.1401;
  bool retval.1400;
  bool retval.1399;
  bool retval.1398;
  bool retval.1397;
  bool retval.1396;
  bool iftmp.1395;
  bool retval.1394;
  bool retval.1393;
  bool retval.1392;
  bool iftmp.1391;
  bool retval.1390;
  bool retval.1389;
  struct function_assign_array D.196491;
  bool retval.1386;
  bool retval.1385;
  bool retval.1384;
  bool retval.1383;
  bool retval.1382;
  bool retval.1381;
  bool retval.1379;
  bool retval.1375;
  bool retval.1373;
  bool retval.1371;
  bool retval.1370;
  bool retval.1369;
  bool retval.1368;
  bool retval.1367;
  bool retval.1366;
  bool retval.1365;
  bool retval.1364;
  bool retval.1363;
  bool retval.1362;
  bool retval.1361;
  bool retval.1360;
  bool retval.1359;
  bool iftmp.1358;
  bool retval.1357;
  bool retval.1356;
  bool iftmp.1355;
  bool retval.1354;
  bool retval.1353;
  bool iftmp.1352;
  bool retval.1351;
  bool retval.1350;
  bool retval.1349;
  bool retval.1348;
  bool retval.1347;
  bool retval.1346;
  bool iftmp.1345;
  bool retval.1344;
  bool retval.1343;
  bool iftmp.1342;
  bool retval.1341;
  bool retval.1340;
  bool iftmp.1339;
  bool retval.1338;
  bool iftmp.1337;
  bool retval.1336;
  bool retval.1335;
  bool retval.1334;
  bool retval.1333;
  bool retval.1332;
  bool retval.1331;
  bool iftmp.1330;
  bool retval.1329;
  bool retval.1328;
  bool retval.1327;
  bool retval.1326;
  bool retval.1325;
  bool iftmp.1324;
  bool retval.1323;
  bool retval.1320;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  size = 8;
  var_declsuperjump = 0;
  has_single_use_flag = 0;
  levelsize.1318_1 = levelsize;
  _2 = levelsize.1318_1 + 1;
  levelsize = _2;
  _3 = target->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _4 = target->base.code;
  if (_4 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 391>; [INV]

  <bb 4> :
  head = &target->ssa_name.imm_uses;
  _5 = target->base.code;
  if (_5 == 131)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  stderr.1319_6 = stderr;
  __builtin_fwrite ("GIMPLE CODE :var_declsuperjump-------\n", 1, 38, stderr.1319_6);

  <bb 6> :
  var_declsuperjump = 1;
  // predicted unlikely by goto predictor.
  goto <bb 238>; [INV]

  <bb 7> :
  _7 = head->next;
  _8 = _7->loc.stmt;
  if (_8 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _9 = num_imm_uses (target);
  retval.1320 = _9 == 1;
  if (retval.1320 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  has_single_use_flag = 1;
  if (target != target2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _10 = head->next;
  use_stmt = _10->loc.stmt;
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 11> :
  levelsize.1321_11 = levelsize;
  if (levelsize.1321_11 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  now_tree.1322_12 = now_tree;
  if (target == now_tree.1322_12)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 392>; [INV]

  <bb 14> :
  _13 = num_imm_uses (target);
  if (_13 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = head->next;
  if (_14 != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1324 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1324 = 0;

  <bb 18> :
  retval.1323 = iftmp.1324;
  if (retval.1323 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 391>; [INV]

  <bb 19> :
  use_p = first_readonly_imm_use (&imm_iter, target);
  goto <bb 390>; [INV]

  <bb 20> :
  use_stmt = use_p->loc.stmt;
  D.256110 = check_stmtStack4 (use_stmt);

  <bb 21> :
  _15 = D.256110;
  retval.1325 = _15 == 0;
  if (retval.1325 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 388>; [INV]

  <bb 22> :
has_single_use_jump:
  D.256111 = gimple_cond_code (use_stmt);

  <bb 23> :
  _16 = D.256111;
  retval.1326 = _16 != 0;
  if (retval.1326 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 24> :
  _17 = is_gimple_assign (use_stmt);
  retval.1327 = ~_17;
  if (retval.1327 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 25> :
  D.256112 = gimple_cond_lhs (use_stmt);

  <bb 26> :
  _18 = D.256112;
  retval.1328 = _18 != 0B;
  if (retval.1328 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 27> :
  D.256113 = GIMPLE_CHECK2<const gcond*> (use_stmt);

  <bb 28> :
  gc = D.256113;
  _19 = gimple_cond_rhs (gc);
  if (_19 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 29> :
  _20 = gimple_cond_lhs (gc);
  if (_20 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  iftmp.1330 = 1;
  goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1330 = 0;

  <bb 32> :
  retval.1329 = iftmp.1330;
  if (retval.1329 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 33> :
  _21 = gimple_cond_rhs (gc);
  D.256114 = check_stmtStack (_21);

  <bb 34> :
  _22 = D.256114;
  retval.1331 = _22 == 0;
  if (retval.1331 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _23 = gimple_cond_lhs (gc);
  set_gimple_array (used_stmt, use_stmt, _23, target, 0B);

  <bb 36> :
  _24 = gimple_code (use_stmt);
  retval.1332 = _24 == 10;
  if (retval.1332 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  D.256115 = as_a<greturn*, gimple> (use_stmt);

  <bb 38> :
  _25 = D.256115;
  return_tree = gimple_return_retval (_25);
  D.256116 = check_stmtStack (return_tree);

  <bb 39> :
  _26 = D.256116;
  retval.1333 = _26 == 0;
  if (retval.1333 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 388>; [INV]

  <bb 40> :
  set_gimple_array (used_stmt, use_stmt, return_tree, return_tree, 0B);
  goto <bb 388>; [INV]

  <bb 41> :
  _27 = gimple_code (use_stmt);
  retval.1334 = _27 == 6;
  if (retval.1334 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 42> :
  ssa_name_assign = 0;
  D.256117 = gimple_assign_lhs (use_stmt);

  <bb 43> :
  _28 = D.256117;
  D.256118 = prechecktree (_28);

  <bb 44> :
  gimpleassignlhs = D.256118;
  D.256119 = gimple_assign_rhs1 (use_stmt);

  <bb 45> :
  _29 = D.256119;
  D.256120 = prechecktree (_29);

  <bb 46> :
  gimpleassignrhs = D.256120;
  if (gimpleassignlhs != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 47> :
  _30 = gimpleassignlhs->base.code;
  if (_30 == 153)
    goto <bb 48>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 48> :
  D.256121 = gimple_call_fn (use_stmt);

  <bb 49> :
  _31 = D.256121;
  retval.1335 = _31 != 0B;
  if (retval.1335 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 50> :
  D.256122 = check_stmtStack (gimpleassignlhs);

  <bb 51> :
  _32 = D.256122;
  if (_32 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 52> :
  D.256123 = gimple_call_fn (use_stmt);

  <bb 53> :
  _33 = D.256123;
  D.256124 = check_stmtStack (_33);

  <bb 54> :
  _34 = D.256124;
  if (_34 == 0)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  iftmp.1337 = 1;
  goto <bb 57>; [INV]

  <bb 56> :
  iftmp.1337 = 0;

  <bb 57> :
  retval.1336 = iftmp.1337;
  if (retval.1336 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 58> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 59> :
  ssa_name_assign = 1;
  if (gimpleassignlhs != target2)
    goto <bb 60>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 60> :
  D.256125 = check_stmtStack2 (use_stmt);

  <bb 61> :
  _35 = D.256125;
  if (_35 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  iftmp.1339 = 1;
  goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1339 = 0;

  <bb 64> :
  retval.1338 = iftmp.1339;
  if (retval.1338 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 66> :
  Checknew_search_imm_use_lhs (used_stmt, use_stmt, target, target2);
  goto <bb 79>; [INV]

  <bb 67> :
  if (gimpleassignrhs != 0B)
    goto <bb 68>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 68> :
  _36 = gimpleassignrhs->base.code;
  if (_36 == 153)
    goto <bb 69>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 69> :
  D.256126 = check_stmtStack (gimpleassignrhs);

  <bb 70> :
  _37 = D.256126;
  retval.1340 = _37 == 0;
  if (retval.1340 != 0)
    goto <bb 71>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 71> :
  if (gimpleassignrhs != target2)
    goto <bb 72>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 72> :
  D.256127 = check_stmtStack2 (use_stmt);

  <bb 73> :
  _38 = D.256127;
  if (_38 == 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  iftmp.1342 = 1;
  goto <bb 76>; [INV]

  <bb 75> :
  iftmp.1342 = 0;

  <bb 76> :
  retval.1341 = iftmp.1342;
  if (retval.1341 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 78> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 79> :
  if (gimpleassignlhs != 0B)
    goto <bb 80>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 80> :
  _39 = gimpleassignlhs->base.code;
  if (_39 == 153)
    goto <bb 81>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 81> :
  D.256128 = check_stmtStack (gimpleassignlhs);

  <bb 82> :
  _40 = D.256128;
  retval.1343 = _40 == 0;
  if (retval.1343 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 83> :
  if (gimpleassignlhs != target2)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  D.256129 = check_stmtStack2 (use_stmt);

  <bb 85> :
  _41 = D.256129;
  if (_41 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1345 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1345 = 0;

  <bb 88> :
  retval.1344 = iftmp.1345;
  if (retval.1344 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 89> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 90> :
  Checknew_search_imm_use_lhs (used_stmt, use_stmt, target, target2);

  <bb 91> :
  Varnew_search_imm_use (used_stmt, use_stmt, gimpleassignlhs, target2);

  <bb 92> :
  goto <bb 102>; [INV]

  <bb 93> :
  if (gimpleassignrhs != 0B)
    goto <bb 94>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 94> :
  _42 = gimpleassignrhs->base.code;
  if (_42 == 153)
    goto <bb 95>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 95> :
  D.256130 = check_stmtStack (gimpleassignrhs);

  <bb 96> :
  _43 = D.256130;
  retval.1346 = _43 == 0;
  if (retval.1346 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 97> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 98> :
  if (gimpleassignrhs != target2)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 100> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 101> :
  Varnew_search_imm_use (used_stmt, use_stmt, gimpleassignrhs, target2);

  <bb 102> :
  D.256131 = check_stmtStack (target);

  <bb 103> :
  _44 = D.256131;
  retval.1347 = _44 == 0;
  if (retval.1347 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 104> :
  set_gimple_array (used_stmt, use_stmt, target, target2, 0B);

  <bb 105> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 106> :
  if (gimpleassignlhs != 0B)
    goto <bb 107>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 107> :
  _45 = gimpleassignlhs->base.code;
  if (_45 == 165)
    goto <bb 108>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 108> :
  fundecl = gimpleassignlhs->exp.operands[0];
  D.256132 = check_stmtStack (gimpleassignlhs);

  <bb 109> :
  _46 = D.256132;
  retval.1348 = _46 == 0;
  if (retval.1348 != 0)
    goto <bb 110>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 110> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 111> :
  _47 = fundecl->base.code;
  if (_47 == 153)
    goto <bb 112>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 112> :
  D.256133 = check_stmtStack (fundecl);

  <bb 113> :
  _48 = D.256133;
  retval.1349 = _48 == 0;
  if (retval.1349 != 0)
    goto <bb 114>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 114> :
  set_gimple_array (used_stmt, use_stmt, fundecl, target, 0B);

  <bb 115> :
  if (fundecl != target2)
    goto <bb 116>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 116> :
  new_search_imm_use (used_stmt, fundecl, fundecl);

  <bb 117> :
  goto <bb 140>; [INV]

  <bb 118> :
  if (gimpleassignlhs != 0B)
    goto <bb 119>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 119> :
  _49 = gimpleassignlhs->base.code;
  if (_49 == 47)
    goto <bb 120>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 120> :
  _50 = gimpleassignrhs->base.code;
  if (_50 == 153)
    goto <bb 121>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 121> :
  D.256134 = check_stmtStack (gimpleassignrhs);

  <bb 122> :
  _51 = D.256134;
  retval.1350 = _51 == 0;
  if (retval.1350 != 0)
    goto <bb 123>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 123> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 124> :
  if (gimpleassignrhs != target2)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 126> :
  goto <bb 140>; [INV]

  <bb 127> :
  if (gimpleassignrhs != 0B)
    goto <bb 128>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 128> :
  _52 = gimpleassignrhs->base.code;
  if (_52 == 47)
    goto <bb 129>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 129> :
  _53 = gimpleassignlhs->base.code;
  if (_53 == 153)
    goto <bb 130>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 130> :
  D.256135 = check_stmtStack (gimpleassignlhs);

  <bb 131> :
  _54 = D.256135;
  if (_54 == 0)
    goto <bb 134>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 132> :
  D.256136 = check_stmtStack2 (use_stmt);

  <bb 133> :
  _55 = D.256136;
  if (_55 == 0)
    goto <bb 134>; [INV]
  else
    goto <bb 135>; [INV]

  <bb 134> :
  iftmp.1352 = 1;
  goto <bb 136>; [INV]

  <bb 135> :
  iftmp.1352 = 0;

  <bb 136> :
  retval.1351 = iftmp.1352;
  if (retval.1351 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 137> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 138> :
  if (gimpleassignlhs != target2)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 140> :
  goto <bb 388>; [INV]

  <bb 141> :
  _56 = gimple_code (use_stmt);
  retval.1353 = _56 == 18;
  if (retval.1353 != 0)
    goto <bb 142>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 142> :
  D.256137 = gimple_phi_result (use_stmt);

  <bb 143> :
  _57 = D.256137;
  if (_57 != 0B)
    goto <bb 144>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 144> :
  D.256138 = gimple_phi_result (use_stmt);

  <bb 145> :
  _58 = D.256138;
  _59 = _58->base.code;
  if (_59 == 153)
    goto <bb 146>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 146> :
  iftmp.1355 = 1;
  goto <bb 148>; [INV]

  <bb 147> :
  iftmp.1355 = 0;

  <bb 148> :
  retval.1354 = iftmp.1355;
  if (retval.1354 != 0)
    goto <bb 149>; [INV]
  else
    goto <bb 388>; [INV]

  <bb 149> :
  D.256139 = gimple_phi_result (use_stmt);

  <bb 150> :
  _60 = D.256139;
  _61 = _60->base.code;
  retval.1356 = _61 == 153;
  if (retval.1356 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 388>; [INV]

  <bb 151> :
  D.256140 = gimple_phi_result (use_stmt);

  <bb 152> :
  _62 = D.256140;
  D.256141 = check_stmtStack (_62);

  <bb 153> :
  _63 = D.256141;
  if (_63 == 0)
    goto <bb 154>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 154> :
  D.256142 = check_stmtStack2 (use_stmt);

  <bb 155> :
  _64 = D.256142;
  if (_64 == 0)
    goto <bb 156>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 156> :
  iftmp.1358 = 1;
  goto <bb 158>; [INV]

  <bb 157> :
  iftmp.1358 = 0;

  <bb 158> :
  retval.1357 = iftmp.1358;
  if (retval.1357 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 388>; [INV]

  <bb 159> :
  D.256143 = gimple_phi_result (use_stmt);

  <bb 160> :
  _65 = D.256143;
  set_gimple_array (used_stmt, use_stmt, _65, target, 0B);

  <bb 161> :
  D.256144 = gimple_phi_result (use_stmt);

  <bb 162> :
  _66 = D.256144;
  retval.1359 = target2 != _66;
  if (retval.1359 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 388>; [INV]

  <bb 163> :
  D.256145 = gimple_phi_result (use_stmt);

  <bb 164> :
  _67 = D.256145;
  D.256146 = gimple_phi_result (use_stmt);

  <bb 165> :
  _68 = D.256146;
  new_search_imm_use (used_stmt, _68, _67);
  goto <bb 388>; [INV]

  <bb 166> :
  _69 = gimple_code (use_stmt);
  retval.1360 = _69 == 8;
  if (retval.1360 != 0)
    goto <bb 167>; [INV]
  else
    goto <bb 388>; [INV]

  <bb 167> :
  D.256147 = gimple_call_fn (use_stmt);

  <bb 168> :
  _70 = D.256147;
  retval.1361 = _70 == 0B;
  if (retval.1361 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 392>; [INV]

  <bb 170> :
  D.256148 = gimple_call_fn (use_stmt);

  <bb 171> :
  _71 = D.256148;
  D.256149 = get_name (_71);

  <bb 172> :
  name = D.256149;
  if (name != 0B)
    goto <bb 173>; [INV]
  else
    goto <bb 388>; [INV]

  <bb 173> :
  _72 = strcmp (name, "realloc");
  if (_72 == 0)
    goto <bb 174>; [INV]
  else
    goto <bb 220>; [INV]

  <bb 174> :
  D.256150 = gimple_call_lhs (use_stmt);

  <bb 175> :
  _73 = D.256150;
  retval.1362 = _73 != 0B;
  if (retval.1362 != 0)
    goto <bb 176>; [INV]
  else
    goto <bb 198>; [INV]

  <bb 176> :
  D.256151 = gimple_call_lhs (use_stmt);

  <bb 177> :
  _74 = D.256151;
  D.256152 = check_stmtStack (_74);

  <bb 178> :
  _75 = D.256152;
  retval.1363 = _75 == 0;
  if (retval.1363 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 186>; [INV]

  <bb 179> :
  D.256153 = gimple_call_lhs (use_stmt);

  <bb 180> :
  _76 = D.256153;
  set_gimple_array (used_stmt, use_stmt, _76, target, 0B);

  <bb 181> :
  D.256154 = gimple_call_lhs (use_stmt);

  <bb 182> :
  _77 = D.256154;
  _78 = _77->base.code;
  retval.1364 = _78 == 153;
  if (retval.1364 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 183> :
  D.256155 = gimple_call_lhs (use_stmt);

  <bb 184> :
  _79 = D.256155;
  D.256156 = gimple_call_lhs (use_stmt);

  <bb 185> :
  _80 = D.256156;
  new_search_imm_use (used_stmt, _80, _79);
  goto <bb 387>; [INV]

  <bb 186> :
  D.256157 = gimple_call_fn (use_stmt);

  <bb 187> :
  _81 = D.256157;
  retval.1365 = _81 != 0B;
  if (retval.1365 != 0)
    goto <bb 188>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 188> :
  D.256158 = gimple_call_arg (use_stmt, 0);

  <bb 189> :
  _82 = D.256158;
  D.256159 = check_stmtStack (_82);

  <bb 190> :
  _83 = D.256159;
  retval.1366 = _83 == 0;
  if (retval.1366 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 191> :
  D.256160 = gimple_call_arg (use_stmt, 0);

  <bb 192> :
  _84 = D.256160;
  set_gimple_array (used_stmt, use_stmt, _84, target, 0B);

  <bb 193> :
  D.256161 = gimple_call_arg (use_stmt, 0);

  <bb 194> :
  _85 = D.256161;
  _86 = _85->base.code;
  retval.1367 = _86 == 153;
  if (retval.1367 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 195> :
  D.256162 = gimple_call_arg (use_stmt, 0);

  <bb 196> :
  _87 = D.256162;
  D.256163 = gimple_call_arg (use_stmt, 0);

  <bb 197> :
  _88 = D.256163;
  new_search_imm_use (used_stmt, _88, _87);
  goto <bb 387>; [INV]

  <bb 198> :
  D.256164 = gimple_call_fn (use_stmt);

  <bb 199> :
  _89 = D.256164;
  retval.1368 = _89 != 0B;
  if (retval.1368 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 200> :
  D.256165 = gimple_call_fn (use_stmt);

  <bb 201> :
  _90 = D.256165;
  D.256166 = check_stmtStack (_90);

  <bb 202> :
  _91 = D.256166;
  retval.1369 = _91 == 0;
  if (retval.1369 != 0)
    goto <bb 203>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 203> :
  D.256167 = gimple_call_fn (use_stmt);

  <bb 204> :
  _92 = D.256167;
  set_gimple_array (used_stmt, use_stmt, _92, target, 0B);

  <bb 205> :
  D.256168 = gimple_call_num_args (use_stmt);

  <bb 206> :
  _93 = D.256168;
  retval.1370 = _93 != 0;
  if (retval.1370 != 0)
    goto <bb 207>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 207> :
  i = 0;
  goto <bb 218>; [INV]

  <bb 208> :
  i.1372_94 = (unsigned int) i;
  D.256169 = gimple_call_arg (use_stmt, i.1372_94);

  <bb 209> :
  _95 = D.256169;
  retval.1371 = _95 != 0B;
  if (retval.1371 != 0)
    goto <bb 210>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 210> :
  i.1374_96 = (unsigned int) i;
  D.256170 = gimple_call_arg (use_stmt, i.1374_96);

  <bb 211> :
  _97 = D.256170;
  retval.1373 = target2 != _97;
  if (retval.1373 != 0)
    goto <bb 212>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 212> :
  i.1376_98 = (unsigned int) i;
  D.256171 = gimple_call_arg (use_stmt, i.1376_98);

  <bb 213> :
  _99 = D.256171;
  _100 = _99->base.code;
  retval.1375 = _100 == 153;
  if (retval.1375 != 0)
    goto <bb 214>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 214> :
  i.1377_101 = (unsigned int) i;
  D.256172 = gimple_call_arg (use_stmt, i.1377_101);

  <bb 215> :
  _102 = D.256172;
  i.1378_103 = (unsigned int) i;
  D.256173 = gimple_call_arg (use_stmt, i.1378_103);

  <bb 216> :
  _104 = D.256173;
  new_search_imm_use (used_stmt, _104, _102);

  <bb 217> :
  i = i + 1;

  <bb 218> :
  D.256174 = gimple_call_num_args (use_stmt);

  <bb 219> :
  _105 = D.256174;
  i.1380_106 = (unsigned int) i;
  retval.1379 = _105 > i.1380_106;
  if (retval.1379 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 220> :
  _107 = strcmp (name, "free");
  if (_107 == 0)
    goto <bb 222>; [INV]
  else
    goto <bb 221>; [INV]

  <bb 221> :
  _108 = strcmp (name, "xfree");
  if (_108 == 0)
    goto <bb 222>; [INV]
  else
    goto <bb 233>; [INV]

  <bb 222> :
  D.256175 = gimple_call_fn (use_stmt);

  <bb 223> :
  _109 = D.256175;
  D.256176 = check_stmtStack (_109);

  <bb 224> :
  _110 = D.256176;
  retval.1381 = _110 == 0;
  if (retval.1381 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 232>; [INV]

  <bb 225> :
  D.256177 = gimple_call_fn (use_stmt);

  <bb 226> :
  _111 = D.256177;
  set_gimple_array (used_stmt, use_stmt, _111, target, 0B);

  <bb 227> :
  D.256178 = gimple_call_fn (use_stmt);

  <bb 228> :
  _112 = D.256178;
  _113 = _112->base.code;
  retval.1382 = _113 == 153;
  if (retval.1382 != 0)
    goto <bb 229>; [INV]
  else
    goto <bb 232>; [INV]

  <bb 229> :
  D.256179 = gimple_call_fn (use_stmt);

  <bb 230> :
  _114 = D.256179;
  D.256180 = gimple_call_fn (use_stmt);

  <bb 231> :
  _115 = D.256180;
  new_search_imm_use (used_stmt, _115, _114);

  <bb 232> :
  goto <bb 387>; [INV]

  <bb 233> :
  _116 = strcmp (name, "pthread_create");
  if (_116 == 0)
    goto <bb 235>; [INV]
  else
    goto <bb 234>; [INV]

  <bb 234> :
  _117 = strcmp (name, "pthread_join");
  if (_117 == 0)
    goto <bb 235>; [INV]
  else
    goto <bb 311>; [INV]

  <bb 235> :
  D.256181 = gimple_call_fn (use_stmt);

  <bb 236> :
  _118 = D.256181;
  D.256182 = check_stmtStack (_118);

  <bb 237> :
  _119 = D.256182;
  retval.1383 = _119 == 0;
  if (retval.1383 != 0)
    goto <bb 238>; [INV]
  else
    goto <bb 310>; [INV]

  <bb 238> :
has_single_use_addr_expr_jump:
  second = 0B;
  isVardecl = 0;
  if (var_declsuperjump == 1)
    goto <bb 239>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 239> :
  _120 = target->base.code;
  if (_120 == 131)
    goto <bb 240>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 240> :
  second = target->exp.operands[0];
  target = target;
  isVardecl = 1;

  <bb 241> :
  D.256183 = gimple_assign_rhs1 (def_stmt);

  <bb 242> :
  _121 = D.256183;
  _122 = _121->base.code;
  retval.1384 = _122 == 131;
  if (retval.1384 != 0)
    goto <bb 243>; [INV]
  else
    goto <bb 245>; [INV]

  <bb 243> :
  D.256184 = gimple_assign_rhs1 (def_stmt);

  <bb 244> :
  _123 = D.256184;
  second = _123->exp.operands[0];
  second = second->exp.operands[0];
  isVardecl = 1;
  goto <bb 249>; [INV]

  <bb 245> :
  D.256185 = gimple_assign_rhs1 (def_stmt);

  <bb 246> :
  _124 = D.256185;
  _125 = _124->base.code;
  retval.1385 = _125 == 36;
  if (retval.1385 != 0)
    goto <bb 247>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 247> :
  D.256186 = gimple_assign_rhs1 (def_stmt);

  <bb 248> :
  second = D.256186;
  isVardecl = 1;

  <bb 249> :
  if (second != 0B)
    goto <bb 250>; [INV]
  else
    goto <bb 301>; [INV]

  <bb 250> :
  _126 = second->base.code;
  if (_126 == 36)
    goto <bb 251>; [INV]
  else
    goto <bb 301>; [INV]

  <bb 251> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1387_127 = function_assign_collect;
  D.256187 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1387_127, &getFunctionAssignVAR);

  <bb 252> :
  _128 = D.256187;
  retval.1386 = _128 != 0B;
  if (retval.1386 != 0)
    goto <bb 253>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 253> :
  getFunctionAssignVAR.1388_129 = getFunctionAssignVAR;
  D.196491 = ret_function_varstmt (getFunctionAssignVAR.1388_129); [return slot optimization]

  <bb 254> :
  function_assign_array::operator= (&assign_array, &D.196491);
  function_assign_array::~function_assign_array (&D.196491);
  D.196491 = {CLOBBER};
  i = 0;
  goto <bb 299>; [INV]

  <bb 255> :
  _130 = (long unsigned int) i;
  _131 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _130);
  _132 = _131->stmt;
  _133 = gimple_code (_132);
  retval.1389 = _133 == 6;
  if (retval.1389 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 290>; [INV]

  <bb 256> :
  _134 = (long unsigned int) i;
  _135 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _134);
  _136 = _135->stmt;
  D.256188 = gimple_assign_lhs (_136);

  <bb 257> :
  _137 = D.256188;
  if (target != _137)
    goto <bb 258>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 258> :
  _138 = (long unsigned int) i;
  _139 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _138);
  _140 = _139->stmt;
  D.256189 = gimple_assign_lhs (_140);

  <bb 259> :
  _141 = D.256189;
  _142 = _141->base.code;
  if (_142 == 153)
    goto <bb 260>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 260> :
  iftmp.1391 = 1;
  goto <bb 262>; [INV]

  <bb 261> :
  iftmp.1391 = 0;

  <bb 262> :
  retval.1390 = iftmp.1391;
  if (retval.1390 != 0)
    goto <bb 263>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 263> :
  _143 = (long unsigned int) i;
  _144 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _143);
  _145 = _144->stmt;
  D.256190 = gimple_assign_lhs (_145);

  <bb 264> :
  _146 = D.256190;
  D.256191 = check_stmtStack (_146);

  <bb 265> :
  _147 = D.256191;
  retval.1392 = _147 == 0;
  if (retval.1392 != 0)
    goto <bb 266>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 266> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->form_tree;
  retval.1393 = _150 != 0B;
  if (retval.1393 != 0)
    goto <bb 267>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 267> :
  _151 = (long unsigned int) i;
  _152 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _151);
  _153 = _152->form_tree;
  _154 = (long unsigned int) i;
  _155 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _154);
  _156 = _155->stmt;
  set_gimple_array (used_stmt, _156, _153, target, 0B);
  goto <bb 270>; [INV]

  <bb 268> :
  _157 = (long unsigned int) i;
  _158 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _157);
  _159 = _158->stmt;
  D.256192 = gimple_assign_lhs (_159);

  <bb 269> :
  _160 = D.256192;
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->stmt;
  set_gimple_array (used_stmt, _163, _160, target, 0B);

  <bb 270> :
  _164 = (long unsigned int) i;
  _165 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _164);
  _166 = _165->stmt;
  D.256193 = gimple_assign_lhs (_166);

  <bb 271> :
  _167 = D.256193;
  _168 = (long unsigned int) i;
  _169 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _168);
  _170 = _169->stmt;
  D.256194 = gimple_assign_lhs (_170);

  <bb 272> :
  _171 = D.256194;
  new_search_imm_use (used_stmt, _171, _167);
  goto <bb 298>; [INV]

  <bb 273> :
  _172 = (long unsigned int) i;
  _173 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _172);
  _174 = _173->stmt;
  D.256195 = gimple_assign_rhs1 (_174);

  <bb 274> :
  _175 = D.256195;
  if (target != _175)
    goto <bb 275>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 275> :
  _176 = (long unsigned int) i;
  _177 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _176);
  _178 = _177->stmt;
  D.256196 = gimple_assign_rhs1 (_178);

  <bb 276> :
  _179 = D.256196;
  _180 = _179->base.code;
  if (_180 == 153)
    goto <bb 277>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 277> :
  iftmp.1395 = 1;
  goto <bb 279>; [INV]

  <bb 278> :
  iftmp.1395 = 0;

  <bb 279> :
  retval.1394 = iftmp.1395;
  if (retval.1394 != 0)
    goto <bb 280>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 280> :
  _181 = (long unsigned int) i;
  _182 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _181);
  _183 = _182->stmt;
  D.256197 = gimple_assign_rhs1 (_183);

  <bb 281> :
  _184 = D.256197;
  D.256198 = check_stmtStack (_184);

  <bb 282> :
  _185 = D.256198;
  retval.1396 = _185 == 0;
  if (retval.1396 != 0)
    goto <bb 283>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 283> :
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->form_tree;
  retval.1397 = _188 != 0B;
  if (retval.1397 != 0)
    goto <bb 284>; [INV]
  else
    goto <bb 285>; [INV]

  <bb 284> :
  _189 = (long unsigned int) i;
  _190 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _189);
  _191 = _190->form_tree;
  _192 = (long unsigned int) i;
  _193 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _192);
  _194 = _193->stmt;
  set_gimple_array (used_stmt, _194, _191, target, 0B);
  goto <bb 287>; [INV]

  <bb 285> :
  _195 = (long unsigned int) i;
  _196 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _195);
  _197 = _196->stmt;
  D.256199 = gimple_assign_rhs1 (_197);

  <bb 286> :
  _198 = D.256199;
  _199 = (long unsigned int) i;
  _200 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _199);
  _201 = _200->stmt;
  set_gimple_array (used_stmt, _201, _198, target, 0B);

  <bb 287> :
  _202 = (long unsigned int) i;
  _203 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _202);
  _204 = _203->stmt;
  D.256200 = gimple_assign_rhs1 (_204);

  <bb 288> :
  _205 = D.256200;
  _206 = (long unsigned int) i;
  _207 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _206);
  _208 = _207->stmt;
  D.256201 = gimple_assign_rhs1 (_208);

  <bb 289> :
  _209 = D.256201;
  new_search_imm_use (used_stmt, _209, _205);
  goto <bb 298>; [INV]

  <bb 290> :
  _210 = (long unsigned int) i;
  _211 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _210);
  _212 = _211->stmt;
  _213 = gimple_code (_212);
  retval.1398 = _213 == 8;
  if (retval.1398 != 0)
    goto <bb 291>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 291> :
  _214 = (long unsigned int) i;
  _215 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _214);
  _216 = _215->stmt;
  D.256202 = gimple_call_arg (_216, 0);

  <bb 292> :
  _217 = D.256202;
  _218 = _217->base.code;
  retval.1399 = _218 == 131;
  if (retval.1399 != 0)
    goto <bb 293>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 293> :
  _219 = (long unsigned int) i;
  _220 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _219);
  _221 = _220->stmt;
  D.256203 = gimple_call_arg (_221, 0);

  <bb 294> :
  _222 = D.256203;
  D.256204 = check_stmtStack (_222);

  <bb 295> :
  _223 = D.256204;
  retval.1400 = _223 == 0;
  if (retval.1400 != 0)
    goto <bb 296>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 296> :
  _224 = (long unsigned int) i;
  _225 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _224);
  _226 = _225->stmt;
  D.256205 = gimple_call_arg (_226, 0);

  <bb 297> :
  _227 = D.256205;
  _228 = (long unsigned int) i;
  _229 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _228);
  _230 = _229->stmt;
  set_gimple_array (used_stmt, _230, _227, target, 0B);

  <bb 298> :
  i = i + 1;

  <bb 299> :
  _231 = (long unsigned int) i;
  _232 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1401 = _231 < _232;
  if (retval.1401 != 0)
    goto <bb 255>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 300> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};

  <bb 301> :
  if (var_declsuperjump == 1)
    goto <bb 302>; [INV]
  else
    goto <bb 303>; [INV]

  <bb 302> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 392>; [INV]

  <bb 303> :
  D.256208 = gimple_call_fn (use_stmt);

  <bb 304> :
  _233 = D.256208;
  set_gimple_array (used_stmt, use_stmt, _233, target, 0B);

  <bb 305> :
  D.256209 = gimple_call_fn (use_stmt);

  <bb 306> :
  _234 = D.256209;
  _235 = _234->base.code;
  retval.1402 = _235 == 153;
  if (retval.1402 != 0)
    goto <bb 307>; [INV]
  else
    goto <bb 310>; [INV]

  <bb 307> :
  D.256210 = gimple_call_fn (use_stmt);

  <bb 308> :
  _236 = D.256210;
  D.256211 = gimple_call_fn (use_stmt);

  <bb 309> :
  _237 = D.256211;
  new_search_imm_use (used_stmt, _237, _236);

  <bb 310> :
  goto <bb 387>; [INV]

  <bb 311> :
  D.256212 = gimple_call_fn (use_stmt);

  <bb 312> :
  _238 = D.256212;
  if (_238 != 0B)
    goto <bb 313>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 313> :
  D.256213 = gimple_call_lhs (use_stmt);

  <bb 314> :
  _239 = D.256213;
  if (_239 != 0B)
    goto <bb 315>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 315> :
  D.256214 = gimple_call_lhs (use_stmt);

  <bb 316> :
  _240 = D.256214;
  _241 = _240->base.code;
  if (_241 == 153)
    goto <bb 317>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 317> :
  iftmp.1404 = 1;
  goto <bb 319>; [INV]

  <bb 318> :
  iftmp.1404 = 0;

  <bb 319> :
  retval.1403 = iftmp.1404;
  if (retval.1403 != 0)
    goto <bb 320>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 320> :
  D.256215 = gimple_call_lhs (use_stmt);

  <bb 321> :
  _242 = D.256215;
  D.256216 = check_stmtStack (_242);

  <bb 322> :
  _243 = D.256216;
  retval.1405 = _243 == 0;
  if (retval.1405 != 0)
    goto <bb 323>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 323> :
  D.256217 = gimple_call_lhs (use_stmt);

  <bb 324> :
  _244 = D.256217;
  set_gimple_array (used_stmt, use_stmt, _244, target, 0B);

  <bb 325> :
  D.256218 = gimple_call_lhs (use_stmt);

  <bb 326> :
  _245 = D.256218;
  retval.1406 = target2 != _245;
  if (retval.1406 != 0)
    goto <bb 327>; [INV]
  else
    goto <bb 332>; [INV]

  <bb 327> :
  D.256219 = check_stmtStack2 (use_stmt);

  <bb 328> :
  _246 = D.256219;
  retval.1407 = _246 == 0;
  if (retval.1407 != 0)
    goto <bb 329>; [INV]
  else
    goto <bb 332>; [INV]

  <bb 329> :
  D.256220 = gimple_call_lhs (use_stmt);

  <bb 330> :
  _247 = D.256220;
  D.256221 = gimple_call_lhs (use_stmt);

  <bb 331> :
  _248 = D.256221;
  new_search_imm_use (used_stmt, _248, _247);

  <bb 332> :
  D.256222 = gimple_call_fn (use_stmt);

  <bb 333> :
  _249 = D.256222;
  retval.1408 = _249 != 0B;
  if (retval.1408 != 0)
    goto <bb 334>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 334> :
  D.256223 = gimple_call_fn (use_stmt);

  <bb 335> :
  _250 = D.256223;
  D.256224 = check_stmtStack (_250);

  <bb 336> :
  _251 = D.256224;
  retval.1409 = _251 == 0;
  if (retval.1409 != 0)
    goto <bb 337>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 337> :
  D.256225 = gimple_call_num_args (use_stmt);

  <bb 338> :
  _252 = D.256225;
  retval.1410 = _252 != 0;
  if (retval.1410 != 0)
    goto <bb 339>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 339> :
  i = 0;
  goto <bb 355>; [INV]

  <bb 340> :
  i.1412_253 = (unsigned int) i;
  D.256226 = gimple_call_arg (use_stmt, i.1412_253);

  <bb 341> :
  _254 = D.256226;
  retval.1411 = _254 != 0B;
  if (retval.1411 != 0)
    goto <bb 342>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 342> :
  i.1414_255 = (unsigned int) i;
  D.256227 = gimple_call_arg (use_stmt, i.1414_255);

  <bb 343> :
  _256 = D.256227;
  retval.1413 = target2 != _256;
  if (retval.1413 != 0)
    goto <bb 344>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 344> :
  i.1416_257 = (unsigned int) i;
  D.256228 = gimple_call_arg (use_stmt, i.1416_257);

  <bb 345> :
  _258 = D.256228;
  _259 = _258->base.code;
  retval.1415 = _259 == 153;
  if (retval.1415 != 0)
    goto <bb 346>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 346> :
  i.1418_260 = (unsigned int) i;
  D.256229 = gimple_call_arg (use_stmt, i.1418_260);

  <bb 347> :
  _261 = D.256229;
  D.256230 = check_stmtStack (_261);

  <bb 348> :
  _262 = D.256230;
  retval.1417 = _262 == 0;
  if (retval.1417 != 0)
    goto <bb 349>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 349> :
  i.1420_263 = (unsigned int) i;
  D.256231 = gimple_call_arg (use_stmt, i.1420_263);

  <bb 350> :
  _264 = D.256231;
  retval.1419 = target2 != _264;
  if (retval.1419 != 0)
    goto <bb 351>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 351> :
  i.1421_265 = (unsigned int) i;
  D.256232 = gimple_call_arg (use_stmt, i.1421_265);

  <bb 352> :
  _266 = D.256232;
  i.1422_267 = (unsigned int) i;
  D.256233 = gimple_call_arg (use_stmt, i.1422_267);

  <bb 353> :
  _268 = D.256233;
  new_search_imm_use (used_stmt, _268, _266);

  <bb 354> :
  i = i + 1;

  <bb 355> :
  D.256234 = gimple_call_num_args (use_stmt);

  <bb 356> :
  _269 = D.256234;
  i.1424_270 = (unsigned int) i;
  retval.1423 = _269 > i.1424_270;
  if (retval.1423 != 0)
    goto <bb 340>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 357> :
  D.256235 = gimple_call_fn (use_stmt);

  <bb 358> :
  _271 = D.256235;
  D.256236 = check_stmtStack (_271);

  <bb 359> :
  _272 = D.256236;
  retval.1425 = _272 == 0;
  if (retval.1425 != 0)
    goto <bb 360>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 360> :
  D.256237 = gimple_call_fn (use_stmt);

  <bb 361> :
  _273 = D.256237;
  set_gimple_array (used_stmt, use_stmt, _273, target, 0B);

  <bb 362> :
  D.256238 = gimple_call_fn (use_stmt);

  <bb 363> :
  _274 = D.256238;
  _275 = _274->base.code;
  retval.1426 = _275 == 153;
  if (retval.1426 != 0)
    goto <bb 364>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 364> :
  D.256239 = gimple_call_fn (use_stmt);

  <bb 365> :
  _276 = D.256239;
  D.256240 = gimple_call_fn (use_stmt);

  <bb 366> :
  _277 = D.256240;
  new_search_imm_use (used_stmt, _277, _276);

  <bb 367> :
  D.256241 = gimple_call_arg (use_stmt, 0);

  <bb 368> :
  _278 = D.256241;
  retval.1427 = _278 != 0B;
  if (retval.1427 != 0)
    goto <bb 369>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 369> :
  D.256242 = gimple_call_arg (use_stmt, 0);

  <bb 370> :
  _279 = D.256242;
  D.256243 = check_stmtStack (_279);

  <bb 371> :
  _280 = D.256243;
  retval.1428 = _280 == 0;
  if (retval.1428 != 0)
    goto <bb 372>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 372> :
  D.256244 = gimple_call_arg (use_stmt, 0);

  <bb 373> :
  _281 = D.256244;
  _282 = _281->base.code;
  retval.1429 = _282 == 153;
  if (retval.1429 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 374> :
  D.256245 = gimple_call_arg (use_stmt, 0);

  <bb 375> :
  _283 = D.256245;
  _284 = _283->base.code;
  retval.1430 = _284 == 153;
  if (retval.1430 != 0)
    goto <bb 376>; [INV]
  else
    goto <bb 379>; [INV]

  <bb 376> :
  D.256246 = gimple_call_arg (use_stmt, 0);

  <bb 377> :
  _285 = D.256246;
  D.256247 = gimple_call_arg (use_stmt, 0);

  <bb 378> :
  _286 = D.256247;
  new_search_imm_use (used_stmt, _286, _285);

  <bb 379> :
  D.256248 = gimple_call_arg (use_stmt, 0);

  <bb 380> :
  _287 = D.256248;
  def_stmt = _287->ssa_name.def_stmt;
  retval.1431 = is_gimple_assign (def_stmt);
  if (retval.1431 != 0)
    goto <bb 381>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 381> :
  D.256249 = gimple_assign_lhs (def_stmt);

  <bb 382> :
  _288 = D.256249;
  _289 = _288->base.code;
  retval.1432 = _289 == 36;
  if (retval.1432 != 0)
    goto <bb 383>; [INV]
  else
    goto <bb 384>; [INV]

  <bb 383> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 387>; [INV]

  <bb 384> :
  D.256250 = gimple_assign_rhs1 (def_stmt);

  <bb 385> :
  _290 = D.256250;
  _291 = _290->base.code;
  retval.1433 = _291 == 36;
  if (retval.1433 != 0)
    goto <bb 386>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 386> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);

  <bb 387> :

  <bb 388> :
  D.256251 = next_readonly_imm_use (&imm_iter);

  <bb 389> :
  use_p = D.256251;

  <bb 390> :
  _292 = end_readonly_imm_use_p (&imm_iter);
  retval.1434 = ~_292;
  if (retval.1434 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 391>; [INV]

  <bb 391> :
  imm_iter = {CLOBBER};
  goto <bb 393>; [INV]

  <bb 392> :
  imm_iter = {CLOBBER};

  <bb 393> :
<L403>:
  return;

  <bb 394> :
<L404>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 395> :
<L405>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 2

  <bb 396> :
<L406>:
  imm_iter = {CLOBBER};
  resx 1

}



;; Function num_imm_uses (_ZL12num_imm_usesPK9tree_node, funcdef_no=2993, decl_uid=109485, cgraph_uid=2095, symbol_order=2260)

Removing basic block 8
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5
;;
;; Loop 1
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 13 14 11 12 9 10
;; 2 succs { 3 8 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 4 17 }
;; 8 succs { 16 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 9 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
unsigned int num_imm_uses (const union tree_node * var)
{
  unsigned int num;
  const struct ssa_use_operand_t * ptr;
  const struct ssa_use_operand_t * const start;
  unsigned int D.256270;
  bool iftmp.1436;
  bool retval.1435;

  <bb 2> :
  start = &var->ssa_name.imm_uses;
  num = 0;
  _1 = global_options.x_flag_var_tracking_assignments;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  ptr = start->next;
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = ptr->loc.stmt;
  if (_2 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  num = num + 1;

  <bb 6> :
  ptr = ptr->next;

  <bb 7> :
  if (ptr != start)
    goto <bb 4>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  ptr = start->next;
  goto <bb 16>; [INV]

  <bb 9> :
  _3 = ptr->loc.stmt;
  if (_3 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _4 = ptr->loc.stmt;
  _5 = is_gimple_debug (_4);
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.1436 = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.1436 = 0;

  <bb 13> :
  retval.1435 = iftmp.1436;
  if (retval.1435 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  num = num + 1;

  <bb 15> :
  ptr = ptr->next;

  <bb 16> :
  if (ptr != start)
    goto <bb 9>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  D.256270 = num;

  <bb 18> :
<L19>:
  return D.256270;

}



;; Function is_gimple_debug (_ZL15is_gimple_debugPK6gimple, funcdef_no=2297, decl_uid=93567, cgraph_uid=1434, symbol_order=1594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_debug (const struct gimple * gs)
{
  bool D.256272;

  <bb 2> :
  _1 = gimple_code (gs);
  D.256272 = _1 == 2;

  <bb 3> :
<L0>:
  return D.256272;

}



;; Function first_readonly_imm_use (_ZL22first_readonly_imm_useP16imm_use_iteratorP9tree_node, funcdef_no=2988, decl_uid=109451, cgraph_uid=2090, symbol_order=2255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct ssa_use_operand_t * first_readonly_imm_use (struct imm_use_iterator * imm, union tree_node * var)
{
  struct ssa_use_operand_t * D.256277;
  bool retval.1437;

  <bb 2> :
  _1 = &var->ssa_name.imm_uses;
  imm->end_p = _1;
  _2 = imm->end_p;
  _3 = _2->next;
  imm->imm_use = _3;
  _4 = imm->imm_use;
  _5 = _4->next;
  imm->iter_node.next = _5;
  retval.1437 = end_readonly_imm_use_p (imm);
  if (retval.1437 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256277 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.256277 = imm->imm_use;

  <bb 5> :
<L2>:
  return D.256277;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK6gimple, funcdef_no=2174, decl_uid=93048, cgraph_uid=1311, symbol_order=1471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gimple * gs)
{
  const struct gcond * D.256281;
  const struct gcond * gc;
  tree_code D.256279;

  <bb 2> :
  D.256281 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.256281;
  D.256279 = gimple_cond_code (gc);

  <bb 3> :
<L0>:
  return D.256279;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_PK6gimple, funcdef_no=7080, decl_uid=93051, cgraph_uid=3712, symbol_order=4501)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (const struct gimple * gs)
{
  const struct gcond * D.256284;
  const struct gcond * D.256282;

  <bb 2> :
  D.256284 = as_a<const gcond*, const gimple> (gs);
  D.256282 = D.256284;

  <bb 3> :
<L0>:
  return D.256282;

}



;; Function as_a<const gcond*, const gimple> (_Z4as_aIPK5gcondK6gimpleET_PT0_, funcdef_no=8074, decl_uid=207074, cgraph_uid=4706, symbol_order=5498)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, const gimple> (const struct gimple * p)
{
  const struct gcond * D.256287;
  const struct gcond * D.256285;

  <bb 2> :
  D.256287 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.256285 = D.256287;

  <bb 3> :
<L0>:
  return D.256285;

}



;; Function is_a_helper<const gcond*>::cast<gimple> (_ZN11is_a_helperIPK5gcondE4castI6gimpleEES2_PKT_, funcdef_no=8078, decl_uid=207092, cgraph_uid=4710, symbol_order=5502)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * is_a_helper<const gcond*>::cast<gimple> (const struct gimple * p)
{
  const struct gcond * D.256288;

  <bb 2> :
  D.256288 = reinterpret_is_a_helper<gcond*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.256288;

}



;; Function reinterpret_is_a_helper<gcond*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcondE4castI6gimpleEES1_PT_, funcdef_no=9049, decl_uid=219540, cgraph_uid=5681, symbol_order=6477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcond * reinterpret_is_a_helper<gcond*>::cast<gimple> (struct gimple * p)
{
  struct gcond * D.256290;

  <bb 2> :
  D.256290 = p;

  <bb 3> :
<L0>:
  return D.256290;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK5gcond, funcdef_no=2173, decl_uid=93045, cgraph_uid=1310, symbol_order=1470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gcond * gs)
{
  tree_code D.256292;

  <bb 2> :
  _1 = gs->D.90458.D.90144.D.90137.subcode;
  D.256292 = (tree_code) _1;

  <bb 3> :
<L0>:
  return D.256292;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK6gimple, funcdef_no=2177, decl_uid=93063, cgraph_uid=1314, symbol_order=1474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gimple * gs)
{
  const struct gcond * D.256296;
  const struct gcond * gc;
  union tree_node * D.256294;

  <bb 2> :
  D.256296 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.256296;
  D.256294 = gimple_cond_lhs (gc);

  <bb 3> :
<L0>:
  return D.256294;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_P6gimple, funcdef_no=7791, decl_uid=93053, cgraph_uid=4423, symbol_order=5215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (struct gimple * gs)
{
  const struct gcond * D.256299;
  const struct gcond * D.256297;

  <bb 2> :
  D.256299 = as_a<const gcond*, gimple> (gs);
  D.256297 = D.256299;

  <bb 3> :
<L0>:
  return D.256297;

}



;; Function as_a<const gcond*, gimple> (_Z4as_aIPK5gcond6gimpleET_PT0_, funcdef_no=8737, decl_uid=215088, cgraph_uid=5369, symbol_order=6165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, gimple> (struct gimple * p)
{
  const struct gcond * D.256302;
  const struct gcond * D.256300;

  <bb 2> :
  D.256302 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.256300 = D.256302;

  <bb 3> :
<L0>:
  return D.256300;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK5gcond, funcdef_no=2180, decl_uid=93074, cgraph_uid=1317, symbol_order=1477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gcond * gs)
{
  union tree_node * D.256303;

  <bb 2> :
  D.256303 = gs->D.90458.op[1];

  <bb 3> :
<L0>:
  return D.256303;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK5gcond, funcdef_no=2176, decl_uid=93060, cgraph_uid=1313, symbol_order=1473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gcond * gs)
{
  union tree_node * D.256305;

  <bb 2> :
  D.256305 = gs->D.90458.op[0];

  <bb 3> :
<L0>:
  return D.256305;

}



;; Function next_readonly_imm_use (_ZL21next_readonly_imm_useP16imm_use_iterator, funcdef_no=2989, decl_uid=109454, cgraph_uid=2091, symbol_order=2256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct ssa_use_operand_t * next_readonly_imm_use (struct imm_use_iterator * imm)
{
  static const char __FUNCTION__[22] [value-expr: "next_readonly_imm_use"];
  struct ssa_use_operand_t * old;
  struct ssa_use_operand_t * D.256315;
  bool retval.1438;

  <bb 2> :
  old = imm->imm_use;
  _1 = global_options.x_flag_checking;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = imm->iter_node.next;
  _3 = old->next;
  if (_2 != _3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/ssa-iterators.h", 374, "next_readonly_imm_use");

  <bb 5> :
  _4 = old->next;
  _5 = _4->next;
  imm->iter_node.next = _5;

  <bb 6> :
  _6 = old->next;
  imm->imm_use = _6;
  retval.1438 = end_readonly_imm_use_p (imm);
  if (retval.1438 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.256315 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  D.256315 = imm->imm_use;

  <bb 9> :
<L7>:
  return D.256315;

}



;; Function end_readonly_imm_use_p (_ZL22end_readonly_imm_use_pPK16imm_use_iterator, funcdef_no=2987, decl_uid=109447, cgraph_uid=2089, symbol_order=2254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool end_readonly_imm_use_p (const struct imm_use_iterator * imm)
{
  bool D.256317;

  <bb 2> :
  _1 = imm->imm_use;
  _2 = imm->end_p;
  D.256317 = _1 == _2;

  <bb 3> :
<L0>:
  return D.256317;

}



;; Function check_bbStack (_Z13check_bbStackP15basic_block_def, funcdef_no=6435, decl_uid=196512, cgraph_uid=3411, symbol_order=4192)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_bbStack (struct basic_block_def * target)
{
  int o;
  int size;
  int D.256322;
  bool retval.1439;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::size (&new_path_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&new_path_array, _4);
  _6 = *_5;
  target.1440_7 = target;
  retval.1439 = _6 == target.1440_7;
  if (retval.1439 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256322 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1441_8 = totalsize;
  _9 = size + totalsize.1441_8;
  totalsize = _9;
  std::vector<basic_block_def*>::push_back (&new_path_array, &target);
  D.256322 = 0;

  <bb 8> :
<L5>:
  return D.256322;

}



;; Function std::vector<basic_block_def*>::size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE4sizeEv, funcdef_no=7792, decl_uid=169984, cgraph_uid=4424, symbol_order=5216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::size (const struct vector * const this)
{
  size_type D.256324;

  <bb 2> :
  _1 = this->D.170351._M_impl.D.169696._M_finish;
  _2 = this->D.170351._M_impl.D.169696._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.256324 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.256324;

}



;; Function std::vector<basic_block_def*>::operator[] (_ZNSt6vectorIP15basic_block_defSaIS1_EEixEm, funcdef_no=7793, decl_uid=170004, cgraph_uid=4425, symbol_order=5217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * & std::vector<basic_block_def*>::operator[] (struct vector * const this, size_type __n)
{
  struct basic_block_def * & D.256326;

  <bb 2> :
  _1 = this->D.170351._M_impl.D.169696._M_start;
  _2 = __n * 8;
  D.256326 = _1 + _2;

  <bb 3> :
<L0>:
  return D.256326;

}



;; Function std::vector<basic_block_def*>::push_back (_ZNSt6vectorIP15basic_block_defSaIS1_EE9push_backERKS1_, funcdef_no=7794, decl_uid=170031, cgraph_uid=4427, symbol_order=5219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<basic_block_def*>::push_back (struct vector * const this, struct basic_block_def * const & __x)
{
  struct __normal_iterator D.256331;

  <bb 2> :
  _1 = this->D.170351._M_impl.D.169696._M_finish;
  _2 = this->D.170351._M_impl.D.169696._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.170351._M_impl.D.169696._M_finish;
  _4 = &this->D.170351._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_4, _3, __x);
  _5 = this->D.170351._M_impl.D.169696._M_finish;
  _6 = _5 + 8;
  this->D.170351._M_impl.D.169696._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.256331 = std::vector<basic_block_def*>::end (this);
  std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (this, D.256331, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_ZNSt16allocator_traitsISaIP15basic_block_defEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8738, decl_uid=215095, cgraph_uid=5370, symbol_order=6166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (struct allocator_type & __a, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<basic_block_def* const&> (_ZSt7forwardIRKP15basic_block_defEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9570, decl_uid=227664, cgraph_uid=6202, symbol_order=6998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * const & std::forward<basic_block_def* const&> (struct basic_block_def * const & __t)
{
  struct basic_block_def * const & D.256332;

  <bb 2> :
  D.256332 = __t;

  <bb 3> :
<L0>:
  return D.256332;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9571, decl_uid=227666, cgraph_uid=6203, symbol_order=6999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (struct new_allocator * const this, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  void * D.237465;
  void * D.237464;
  struct basic_block_def * D.237466;

  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  D.237466 = *_1;
  D.237464 = __p;
  D.237465 = operator new (8, D.237464);
  MEM[(struct basic_block_def * *)D.237465] = D.237466;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=8739, decl_uid=169964, cgraph_uid=5371, symbol_order=6167)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::end (struct vector * const this)
{
  struct iterator D.227689;
  struct iterator D.256334;

  <bb 2> :
  _1 = &this->D.170351._M_impl.D.169696._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.227689, _1);
  D.256334 = D.227689;
  D.227689 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256334;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9573, decl_uid=215342, cgraph_uid=6205, symbol_order=7001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (_ZNSt6vectorIP15basic_block_defSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8740, decl_uid=215361, cgraph_uid=5375, symbol_order=6171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (struct vector * const this, struct iterator __position, struct basic_block_def * const & __args#0)
{
  struct basic_block_def * * D.256341;
  const size_type D.256340;
  struct basic_block_def * * __new_finish;
  struct basic_block_def * * __new_start;
  const size_type __elems_before;
  struct basic_block_def * * __old_finish;
  struct basic_block_def * * __old_start;
  const size_type __len;
  struct iterator D.227697;

  <bb 2> :
  D.256340 = std::vector<basic_block_def*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.256340;
  __old_start = this->D.170351._M_impl.D.169696._M_start;
  __old_finish = this->D.170351._M_impl.D.169696._M_finish;
  D.227697 = std::vector<basic_block_def*>::begin (this);
  _1 = __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (&__position, &D.227697);
  __elems_before = (const size_type) _1;
  D.227697 = {CLOBBER};
  _2 = &this->D.170351;
  D.256341 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_2, __len);
  __new_start = D.256341;
  __new_finish = __new_start;
  _3 = std::forward<basic_block_def* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.170351._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.170351;
  _8 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.170351;
  _12 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.170351;
  _23 = this->D.170351._M_impl.D.169696._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_22, __old_start, _26);
  this->D.170351._M_impl.D.169696._M_start = __new_start;
  this->D.170351._M_impl.D.169696._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.170351._M_impl.D.169696._M_end_of_storage = _28;
  return;

}



;; Function std::vector<basic_block_def*>::_M_check_len (_ZNKSt6vectorIP15basic_block_defSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9575, decl_uid=170200, cgraph_uid=6207, symbol_order=7003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<basic_block_def*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1444;
  size_type D.256345;
  const long unsigned int D.237475;
  bool retval.1442;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::max_size (this);
  _2 = std::vector<basic_block_def*>::size (this);
  _3 = _1 - _2;
  __n.1443_4 = __n;
  retval.1442 = _3 < __n.1443_4;
  if (retval.1442 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<basic_block_def*>::size (this);
  _6 = std::vector<basic_block_def*>::size (this);
  D.237475 = _6;
  _7 = std::max<long unsigned int> (&D.237475, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237475 = {CLOBBER};
  _9 = std::vector<basic_block_def*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<basic_block_def*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1444 = std::vector<basic_block_def*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1444 = __len;

  <bb 8> :
  D.256345 = iftmp.1444;

  <bb 9> :
<L6>:
  return D.256345;

}



;; Function std::vector<basic_block_def*>::max_size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8max_sizeEv, funcdef_no=10200, decl_uid=169986, cgraph_uid=6832, symbol_order=7632)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::max_size (const struct vector * const this)
{
  size_type D.256352;

  <bb 2> :
  _1 = &this->D.170351;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  D.256352 = std::vector<basic_block_def*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.256352;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9672, decl_uid=169586, cgraph_uid=6304, symbol_order=7100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.256354;

  <bb 2> :
  D.256354 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256354;

}



;; Function std::vector<basic_block_def*>::_S_max_size (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10665, decl_uid=170207, cgraph_uid=7297, symbol_order=8097)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.256356;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<basic_block_def*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.256356 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256356;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::max_size (_ZNSt16allocator_traitsISaIP15basic_block_defEE8max_sizeERKS2_, funcdef_no=10884, decl_uid=169521, cgraph_uid=7516, symbol_order=8318)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<basic_block_def*> >::max_size (const struct allocator_type & __a)
{
  size_type D.256359;

  <bb 2> :
  D.256359 = __gnu_cxx::new_allocator<basic_block_def*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.256359;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE8max_sizeEv, funcdef_no=10987, decl_uid=169363, cgraph_uid=7619, symbol_order=8421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::max_size (const struct new_allocator * const this)
{
  size_type D.256361;

  <bb 2> :
  D.256361 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.256361;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE11_M_max_sizeEv, funcdef_no=10667, decl_uid=169382, cgraph_uid=7298, symbol_order=8098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.256363;

  <bb 2> :
  D.256363 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.256363;

}



;; Function std::vector<basic_block_def*>::begin (_ZNSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9576, decl_uid=169960, cgraph_uid=6208, symbol_order=7004)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::begin (struct vector * const this)
{
  struct iterator D.237477;
  struct iterator D.256365;

  <bb 2> :
  _1 = &this->D.170351._M_impl.D.169696._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.237477, _1);
  D.256365 = D.237477;
  D.237477 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256365;

}



;; Function __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (_ZN9__gnu_cxxmiIPP15basic_block_defSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9577, decl_uid=227698, cgraph_uid=6209, symbol_order=7005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.256368;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.256368 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.256368;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE11_M_allocateEm, funcdef_no=9578, decl_uid=169700, cgraph_uid=6210, symbol_order=7006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct basic_block_def * * std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.256376;
  struct basic_block_def * * iftmp.1445;
  struct basic_block_def * * D.256370;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.256376 = std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_1, __n);
  iftmp.1445 = D.256376;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1445 = 0B;

  <bb 5> :
  D.256370 = iftmp.1445;

  <bb 6> :
<L3>:
  return D.256370;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE8allocateERS2_m, funcdef_no=10201, decl_uid=169501, cgraph_uid=6833, symbol_order=7633)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * std::allocator_traits<std::allocator<basic_block_def*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct basic_block_def * * D.256379;
  struct basic_block_def * * D.256377;

  <bb 2> :
  D.256379 = __gnu_cxx::new_allocator<basic_block_def*>::allocate (__a, __n, 0B);
  D.256377 = D.256379;

  <bb 3> :
<L0>:
  return D.256377;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::allocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE8allocateEmPKv, funcdef_no=10666, decl_uid=169355, cgraph_uid=7299, symbol_order=8099)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * __gnu_cxx::new_allocator<basic_block_def*>::allocate (struct new_allocator * const this, size_type __n, const void * D.245771)
{
  struct basic_block_def * * D.256390;
  struct basic_block_def * * D.256389;
  align_val_t __al;
  struct basic_block_def * * D.256387;
  bool retval.1446;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1446 = _4 != 0;
  if (retval.1446 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.256390 = operator new (_6);
  D.256387 = D.256390;

  <bb 7> :
<L6>:
  return D.256387;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8765, decl_uid=169584, cgraph_uid=5397, symbol_order=6193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256391;

  <bb 2> :
  D.256391 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256391;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9580, decl_uid=215329, cgraph_uid=6212, symbol_order=7008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * const & __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * * const & D.256393;

  <bb 2> :
  D.256393 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256393;

}



;; Function std::vector<basic_block_def*>::_S_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9579, decl_uid=169858, cgraph_uid=6211, symbol_order=7007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.256396;
  struct basic_block_def * * D.256395;

  <bb 2> :
  D.256395 = std::vector<basic_block_def*>::_S_do_relocate (__first, __last, __result, __alloc, D.256396);

  <bb 3> :
<L0>:
  return D.256395;

}



;; Function std::vector<basic_block_def*>::_S_do_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10202, decl_uid=169846, cgraph_uid=6834, symbol_order=7634)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_do_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242536)
{
  struct basic_block_def * * D.256398;

  <bb 2> :
  D.256398 = std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.256398;

}



;; Function std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (_ZSt12__relocate_aIPP15basic_block_defS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10668, decl_uid=227863, cgraph_uid=7300, symbol_order=8100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & __alloc)
{
  struct basic_block_def * * D.256400;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**> (__result);
  _2 = std::__niter_base<basic_block_def**> (__last);
  _3 = std::__niter_base<basic_block_def**> (__first);
  D.256400 = std::__relocate_a_1<basic_block_def*, basic_block_def*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.256400;

}



;; Function std::__niter_base<basic_block_def**> (_ZSt12__niter_baseIPP15basic_block_defET_S3_, funcdef_no=10724, decl_uid=227869, cgraph_uid=7356, symbol_order=8156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.256402;

  <bb 2> :
  D.256402 = __it;

  <bb 3> :
<L0>:
  return D.256402;

}



;; Function std::__relocate_a_1<basic_block_def*, basic_block_def*> (_ZSt14__relocate_a_1IP15basic_block_defS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10885, decl_uid=228037, cgraph_uid=7517, symbol_order=8319)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__relocate_a_1<basic_block_def*, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.246832)
{
  ptrdiff_t __count;
  struct basic_block_def * * D.256407;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1447_2 = (long unsigned int) __count;
  _3 = __count.1447_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1448_4 = (long unsigned int) __count;
  _5 = __count.1448_4 * 8;
  D.256407 = __result + _5;

  <bb 5> :
<L3>:
  return D.256407;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8407, decl_uid=169703, cgraph_uid=5039, symbol_order=5835)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (struct _Vector_base * const this, struct basic_block_def * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE10deallocateERS2_PS1_m, funcdef_no=9208, decl_uid=169508, cgraph_uid=5840, symbol_order=6636)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (struct allocator_type & __a, struct basic_block_def * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE10deallocateEPS2_m, funcdef_no=9942, decl_uid=169359, cgraph_uid=6574, symbol_order=7374)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::deallocate (struct new_allocator * const this, struct basic_block_def * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack (_Z15check_stmtStackP9tree_node, funcdef_no=6436, decl_uid=187066, cgraph_uid=3412, symbol_order=4193)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack (union tree_node * target)
{
  int o;
  int size;
  int D.256418;
  bool retval.1449;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  target.1450_7 = target;
  retval.1449 = _6 == target.1450_7;
  if (retval.1449 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256418 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1451_8 = totalsize;
  _9 = size + totalsize.1451_8;
  totalsize = _9;
  std::vector<tree_node*>::push_back (&new_gimpletree_array, &target);
  D.256418 = 0;

  <bb 8> :
<L5>:
  return D.256418;

}



;; Function check_stmtStack2 (_Z16check_stmtStack2P6gimple, funcdef_no=6437, decl_uid=187064, cgraph_uid=3413, symbol_order=4194)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack2 (struct gimple * stmt)
{
  int o;
  int size;
  int D.256423;
  bool retval.1452;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  stmt.1453_7 = stmt;
  retval.1452 = _6 == stmt.1453_7;
  if (retval.1452 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256423 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1454_8 = totalsize;
  _9 = size + totalsize.1454_8;
  totalsize = _9;
  std::vector<gimple*>::push_back (&new_gimple_array, &stmt);
  D.256423 = 0;

  <bb 8> :
<L5>:
  return D.256423;

}



;; Function std::vector<gimple*>::size (_ZNKSt6vectorIP6gimpleSaIS1_EE4sizeEv, funcdef_no=7796, decl_uid=183668, cgraph_uid=4428, symbol_order=5220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::size (const struct vector * const this)
{
  size_type D.256425;

  <bb 2> :
  _1 = this->D.184035._M_impl.D.183391._M_finish;
  _2 = this->D.184035._M_impl.D.183391._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.256425 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.256425;

}



;; Function std::vector<gimple*>::operator[] (_ZNSt6vectorIP6gimpleSaIS1_EEixEm, funcdef_no=7797, decl_uid=183688, cgraph_uid=4429, symbol_order=5221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * & std::vector<gimple*>::operator[] (struct vector * const this, size_type __n)
{
  struct gimple * & D.256427;

  <bb 2> :
  _1 = this->D.184035._M_impl.D.183391._M_start;
  _2 = __n * 8;
  D.256427 = _1 + _2;

  <bb 3> :
<L0>:
  return D.256427;

}



;; Function std::vector<gimple*>::push_back (_ZNSt6vectorIP6gimpleSaIS1_EE9push_backERKS1_, funcdef_no=7798, decl_uid=183715, cgraph_uid=4431, symbol_order=5223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<gimple*>::push_back (struct vector * const this, struct gimple * const & __x)
{
  struct __normal_iterator D.256432;

  <bb 2> :
  _1 = this->D.184035._M_impl.D.183391._M_finish;
  _2 = this->D.184035._M_impl.D.183391._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.184035._M_impl.D.183391._M_finish;
  _4 = &this->D.184035._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_4, _3, __x);
  _5 = this->D.184035._M_impl.D.183391._M_finish;
  _6 = _5 + 8;
  this->D.184035._M_impl.D.183391._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.256432 = std::vector<gimple*>::end (this);
  std::vector<gimple*>::_M_realloc_insert<gimple* const&> (this, D.256432, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_ZNSt16allocator_traitsISaIP6gimpleEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8744, decl_uid=215370, cgraph_uid=5376, symbol_order=6172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (struct allocator_type & __a, struct gimple * * __p, struct gimple * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<gimple* const&> (_ZSt7forwardIRKP6gimpleEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9582, decl_uid=228189, cgraph_uid=6214, symbol_order=7010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * const & std::forward<gimple* const&> (struct gimple * const & __t)
{
  struct gimple * const & D.256433;

  <bb 2> :
  D.256433 = __t;

  <bb 3> :
<L0>:
  return D.256433;

}



;; Function __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9583, decl_uid=228191, cgraph_uid=6215, symbol_order=7011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (struct new_allocator * const this, struct gimple * * __p, struct gimple * const & __args#0)
{
  void * D.237506;
  void * D.237505;
  struct gimple * D.237507;

  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  D.237507 = *_1;
  D.237505 = __p;
  D.237506 = operator new (8, D.237505);
  MEM[(struct gimple * *)D.237506] = D.237507;
  return;

}



;; Function std::vector<gimple*>::end (_ZNSt6vectorIP6gimpleSaIS1_EE3endEv, funcdef_no=8745, decl_uid=183648, cgraph_uid=5377, symbol_order=6173)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::end (struct vector * const this)
{
  struct iterator D.228214;
  struct iterator D.256435;

  <bb 2> :
  _1 = &this->D.184035._M_impl.D.183391._M_finish;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.228214, _1);
  D.256435 = D.228214;
  D.228214 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256435;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9585, decl_uid=215607, cgraph_uid=6217, symbol_order=7013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (struct __normal_iterator * const this, struct gimple * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<gimple*>::_M_realloc_insert<gimple* const&> (_ZNSt6vectorIP6gimpleSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8746, decl_uid=215626, cgraph_uid=5381, symbol_order=6177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::_M_realloc_insert<gimple* const&> (struct vector * const this, struct iterator __position, struct gimple * const & __args#0)
{
  struct gimple * * D.256442;
  const size_type D.256441;
  struct gimple * * __new_finish;
  struct gimple * * __new_start;
  const size_type __elems_before;
  struct gimple * * __old_finish;
  struct gimple * * __old_start;
  const size_type __len;
  struct iterator D.228222;

  <bb 2> :
  D.256441 = std::vector<gimple*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.256441;
  __old_start = this->D.184035._M_impl.D.183391._M_start;
  __old_finish = this->D.184035._M_impl.D.183391._M_finish;
  D.228222 = std::vector<gimple*>::begin (this);
  _1 = __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (&__position, &D.228222);
  __elems_before = (const size_type) _1;
  D.228222 = {CLOBBER};
  _2 = &this->D.184035;
  D.256442 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_2, __len);
  __new_start = D.256442;
  __new_finish = __new_start;
  _3 = std::forward<gimple* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.184035._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.184035;
  _8 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<gimple*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.184035;
  _12 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<gimple*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.184035;
  _23 = this->D.184035._M_impl.D.183391._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_22, __old_start, _26);
  this->D.184035._M_impl.D.183391._M_start = __new_start;
  this->D.184035._M_impl.D.183391._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.184035._M_impl.D.183391._M_end_of_storage = _28;
  return;

}



;; Function std::vector<gimple*>::_M_check_len (_ZNKSt6vectorIP6gimpleSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9587, decl_uid=183884, cgraph_uid=6219, symbol_order=7015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<gimple*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1457;
  size_type D.256446;
  const long unsigned int D.237516;
  bool retval.1455;

  <bb 2> :
  _1 = std::vector<gimple*>::max_size (this);
  _2 = std::vector<gimple*>::size (this);
  _3 = _1 - _2;
  __n.1456_4 = __n;
  retval.1455 = _3 < __n.1456_4;
  if (retval.1455 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<gimple*>::size (this);
  _6 = std::vector<gimple*>::size (this);
  D.237516 = _6;
  _7 = std::max<long unsigned int> (&D.237516, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237516 = {CLOBBER};
  _9 = std::vector<gimple*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<gimple*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1457 = std::vector<gimple*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1457 = __len;

  <bb 8> :
  D.256446 = iftmp.1457;

  <bb 9> :
<L6>:
  return D.256446;

}



;; Function std::vector<gimple*>::max_size (_ZNKSt6vectorIP6gimpleSaIS1_EE8max_sizeEv, funcdef_no=10204, decl_uid=183670, cgraph_uid=6836, symbol_order=7636)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::max_size (const struct vector * const this)
{
  size_type D.256453;

  <bb 2> :
  _1 = &this->D.184035;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.256453 = std::vector<gimple*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.256453;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10670, decl_uid=183281, cgraph_uid=7302, symbol_order=8102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.256455;

  <bb 2> :
  D.256455 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256455;

}



;; Function std::vector<gimple*>::_S_max_size (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10669, decl_uid=183891, cgraph_uid=7301, symbol_order=8101)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.256457;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<gimple*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.256457 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256457;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::max_size (_ZNSt16allocator_traitsISaIP6gimpleEE8max_sizeERKS2_, funcdef_no=10886, decl_uid=181847, cgraph_uid=7518, symbol_order=8320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<gimple*> >::max_size (const struct allocator_type & __a)
{
  size_type D.256460;

  <bb 2> :
  D.256460 = __gnu_cxx::new_allocator<gimple*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.256460;

}



;; Function __gnu_cxx::new_allocator<gimple*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE8max_sizeEv, funcdef_no=10988, decl_uid=181689, cgraph_uid=7620, symbol_order=8422)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::max_size (const struct new_allocator * const this)
{
  size_type D.256462;

  <bb 2> :
  D.256462 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.256462;

}



;; Function __gnu_cxx::new_allocator<gimple*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE11_M_max_sizeEv, funcdef_no=10672, decl_uid=181708, cgraph_uid=7303, symbol_order=8103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.256464;

  <bb 2> :
  D.256464 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.256464;

}



;; Function std::vector<gimple*>::begin (_ZNSt6vectorIP6gimpleSaIS1_EE5beginEv, funcdef_no=9588, decl_uid=183644, cgraph_uid=6220, symbol_order=7016)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::begin (struct vector * const this)
{
  struct iterator D.237518;
  struct iterator D.256466;

  <bb 2> :
  _1 = &this->D.184035._M_impl.D.183391._M_start;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.237518, _1);
  D.256466 = D.237518;
  D.237518 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256466;

}



;; Function __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (_ZN9__gnu_cxxmiIPP6gimpleSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9589, decl_uid=228223, cgraph_uid=6221, symbol_order=7017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.256469;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.256469 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.256469;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE11_M_allocateEm, funcdef_no=9590, decl_uid=183395, cgraph_uid=6222, symbol_order=7018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct gimple * * D.256477;
  struct gimple * * iftmp.1458;
  struct gimple * * D.256471;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.256477 = std::allocator_traits<std::allocator<gimple*> >::allocate (_1, __n);
  iftmp.1458 = D.256477;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1458 = 0B;

  <bb 5> :
  D.256471 = iftmp.1458;

  <bb 6> :
<L3>:
  return D.256471;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::allocate (_ZNSt16allocator_traitsISaIP6gimpleEE8allocateERS2_m, funcdef_no=10205, decl_uid=181827, cgraph_uid=6837, symbol_order=7637)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * std::allocator_traits<std::allocator<gimple*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * D.256480;
  struct gimple * * D.256478;

  <bb 2> :
  D.256480 = __gnu_cxx::new_allocator<gimple*>::allocate (__a, __n, 0B);
  D.256478 = D.256480;

  <bb 3> :
<L0>:
  return D.256478;

}



;; Function __gnu_cxx::new_allocator<gimple*>::allocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE8allocateEmPKv, funcdef_no=10671, decl_uid=181681, cgraph_uid=7304, symbol_order=8104)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * __gnu_cxx::new_allocator<gimple*>::allocate (struct new_allocator * const this, size_type __n, const void * D.245788)
{
  struct gimple * * D.256491;
  struct gimple * * D.256490;
  align_val_t __al;
  struct gimple * * D.256488;
  bool retval.1459;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1459 = _4 != 0;
  if (retval.1459 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.256491 = operator new (_6);
  D.256488 = D.256491;

  <bb 7> :
<L6>:
  return D.256488;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9593, decl_uid=183279, cgraph_uid=6225, symbol_order=7021)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256492;

  <bb 2> :
  D.256492 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256492;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9592, decl_uid=215594, cgraph_uid=6224, symbol_order=7020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * const & __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (const struct __normal_iterator * const this)
{
  struct gimple * * const & D.256494;

  <bb 2> :
  D.256494 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256494;

}



;; Function std::vector<gimple*>::_S_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9591, decl_uid=183543, cgraph_uid=6223, symbol_order=7019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.256497;
  struct gimple * * D.256496;

  <bb 2> :
  D.256496 = std::vector<gimple*>::_S_do_relocate (__first, __last, __result, __alloc, D.256497);

  <bb 3> :
<L0>:
  return D.256496;

}



;; Function std::vector<gimple*>::_S_do_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10206, decl_uid=183531, cgraph_uid=6838, symbol_order=7638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_do_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242548)
{
  struct gimple * * D.256499;

  <bb 2> :
  D.256499 = std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.256499;

}



;; Function std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (_ZSt12__relocate_aIPP6gimpleS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10673, decl_uid=228388, cgraph_uid=7305, symbol_order=8105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & __alloc)
{
  struct gimple * * D.256501;

  <bb 2> :
  _1 = std::__niter_base<gimple**> (__result);
  _2 = std::__niter_base<gimple**> (__last);
  _3 = std::__niter_base<gimple**> (__first);
  D.256501 = std::__relocate_a_1<gimple*, gimple*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.256501;

}



;; Function std::__niter_base<gimple**> (_ZSt12__niter_baseIPP6gimpleET_S3_, funcdef_no=10887, decl_uid=228394, cgraph_uid=7519, symbol_order=8321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__niter_base<gimple**> (struct gimple * * __it)
{
  struct gimple * * D.256503;

  <bb 2> :
  D.256503 = __it;

  <bb 3> :
<L0>:
  return D.256503;

}



;; Function std::__relocate_a_1<gimple*, gimple*> (_ZSt14__relocate_a_1IP6gimpleS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10888, decl_uid=228562, cgraph_uid=7520, symbol_order=8322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct gimple * * std::__relocate_a_1<gimple*, gimple*> (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & D.246842)
{
  ptrdiff_t __count;
  struct gimple * * D.256508;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1460_2 = (long unsigned int) __count;
  _3 = __count.1460_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1461_4 = (long unsigned int) __count;
  _5 = __count.1461_4 * 8;
  D.256508 = __result + _5;

  <bb 5> :
<L3>:
  return D.256508;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8387, decl_uid=183398, cgraph_uid=5019, symbol_order=5815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (struct _Vector_base * const this, struct gimple * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::deallocate (_ZNSt16allocator_traitsISaIP6gimpleEE10deallocateERS2_PS1_m, funcdef_no=9200, decl_uid=181834, cgraph_uid=5832, symbol_order=6628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::deallocate (struct allocator_type & __a, struct gimple * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE10deallocateEPS2_m, funcdef_no=9940, decl_uid=181685, cgraph_uid=6572, symbol_order=7372)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::deallocate (struct new_allocator * const this, struct gimple * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack3 (_Z16check_stmtStack3P9tree_node, funcdef_no=6438, decl_uid=187062, cgraph_uid=3414, symbol_order=4195)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack3 (union tree_node * target)
{
  int o;
  int D.256519;
  bool retval.1462;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  retval.1462 = target == _6;
  if (retval.1462 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256519 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.256519 = 0;

  <bb 8> :
<L5>:
  return D.256519;

}



;; Function check_stmtStack4 (_Z16check_stmtStack4P6gimple, funcdef_no=6439, decl_uid=187060, cgraph_uid=3415, symbol_order=4196)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack4 (struct gimple * stmt)
{
  int o;
  int D.256524;
  bool retval.1463;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  retval.1463 = stmt == _6;
  if (retval.1463 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256524 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.256524 = 0;

  <bb 8> :
<L5>:
  return D.256524;

}



;; Function Checknew_search_imm_use_lhs (_Z27Checknew_search_imm_use_lhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6440, decl_uid=187058, cgraph_uid=3416, symbol_order=4197)

Removing basic block 14
Removing basic block 15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 14 }
;; 5 succs { 6 14 }
;; 6 succs { 7 8 }
;; 7 succs { 14 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 12 }
;; 11 succs { 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void Checknew_search_imm_use_lhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.256557;
  union tree_node * D.256556;
  union tree_node * D.256555;
  union tree_node * D.256554;
  union tree_node * D.256553;
  union tree_node * D.256552;
  struct gimple * def_stmt;
  struct gimple * def_stmt;
  bool retval.1468;
  bool retval.1467;
  bool retval.1466;
  bool retval.1465;
  bool retval.1464;

  <bb 2> :
  def_stmt = use_stmt;
  D.256552 = gimple_assign_lhs (use_stmt);
  _1 = D.256552;
  _2 = _1->base.code;
  retval.1464 = _2 == 153;
  if (retval.1464 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256553 = gimple_assign_lhs (use_stmt);
  _3 = D.256553;
  def_stmt = _3->ssa_name.def_stmt;

  <bb 4> :
  if (def_stmt != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  D.256554 = gimple_assign_lhs (def_stmt);
  _4 = D.256554;
  retval.1465 = _4 != 0B;
  if (retval.1465 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  D.256555 = gimple_assign_lhs (def_stmt);
  _5 = D.256555;
  _6 = _5->base.code;
  retval.1466 = _6 == 49;
  if (retval.1466 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 8> :
  D.256556 = gimple_assign_lhs (def_stmt);
  _7 = D.256556;
  _8 = _7->base.code;
  retval.1467 = _8 == 47;
  if (retval.1467 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 10> :
  D.256557 = gimple_assign_lhs (def_stmt);
  _9 = D.256557;
  _10 = _9->base.code;
  retval.1468 = _10 == 165;
  if (retval.1468 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 12> :
  _11 = target->base.code;
  if (_11 == 36)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 14> :
  return;

}



;; Function Checknew_search_imm_use_rhs (_Z27Checknew_search_imm_use_rhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6441, decl_uid=187053, cgraph_uid=3417, symbol_order=4198)

Removing basic block 14
Removing basic block 15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 14 }
;; 5 succs { 6 14 }
;; 6 succs { 7 8 }
;; 7 succs { 14 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 12 }
;; 11 succs { 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void Checknew_search_imm_use_rhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.256589;
  union tree_node * D.256588;
  union tree_node * D.256587;
  union tree_node * D.256586;
  union tree_node * D.256585;
  union tree_node * D.256584;
  struct gimple * def_stmt;
  bool retval.1473;
  bool retval.1472;
  bool retval.1471;
  bool retval.1470;
  bool retval.1469;

  <bb 2> :
  def_stmt = use_stmt;
  D.256584 = gimple_assign_rhs1 (use_stmt);
  _1 = D.256584;
  _2 = _1->base.code;
  retval.1469 = _2 == 153;
  if (retval.1469 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256585 = gimple_assign_rhs1 (use_stmt);
  _3 = D.256585;
  def_stmt = _3->ssa_name.def_stmt;

  <bb 4> :
  if (def_stmt != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  D.256586 = gimple_assign_rhs1 (def_stmt);
  _4 = D.256586;
  retval.1470 = _4 != 0B;
  if (retval.1470 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  D.256587 = gimple_assign_rhs1 (def_stmt);
  _5 = D.256587;
  _6 = _5->base.code;
  retval.1471 = _6 == 49;
  if (retval.1471 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 8> :
  D.256588 = gimple_assign_rhs1 (def_stmt);
  _7 = D.256588;
  _8 = _7->base.code;
  retval.1472 = _8 == 47;
  if (retval.1472 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 10> :
  D.256589 = gimple_assign_rhs1 (def_stmt);
  _9 = D.256589;
  _10 = _9->base.code;
  retval.1473 = _10 == 165;
  if (retval.1473 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 12> :
  _11 = target->base.code;
  if (_11 == 36)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 14> :
  return;

}



;; Function prechecktree (_Z12prechecktreeP9tree_node, funcdef_no=6442, decl_uid=187040, cgraph_uid=3418, symbol_order=4200)

Removing basic block 7
Removing basic block 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
union tree_node * prechecktree (union tree_node * tree)
{
  union tree_node * D.256598;

  <bb 2> :
  if (tree != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _1 = tree->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _2 = tree->exp.operands[0];
  gettree = _2;
  gettree.1474_3 = gettree;
  if (gettree.1474_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  gettree.1475_4 = gettree;
  _5 = gettree.1475_4->base.code;
  if (_5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.256598 = gettree;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  D.256598 = tree;

  <bb 8> :
<L10>:
  return D.256598;

}



;; Function check_bbinfo (_Z12check_bbinfoP11cgraph_nodeP15basic_block_def, funcdef_no=6443, decl_uid=187048, cgraph_uid=3419, symbol_order=4201)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 21 17 20 18 19 15 16 14 13 9 12 10 11 7 8 6 5
;; 2 succs { 3 28 }
;; 3 succs { 23 }
;; 4 succs { 5 22 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 13 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 21 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 4 24 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 1 }
void check_bbinfo (struct cgraph_node * m, struct basic_block_def * bb)
{
  bool D.256643;
  bool D.256642;
  struct function * D.256641;
  struct symbolicinfo * D.256640;
  struct symbolicinfo * D.256639;
  struct symbolicinfo * symbolicinfotmp;
  int o;
  int find_path_constraint;
  bool retval.1487;
  bool retval.1486;
  bool iftmp.1485;
  bool retval.1484;
  bool retval.1483;
  bool iftmp.1482;
  bool retval.1481;
  bool retval.1478;

  <bb 2> :
  pathconstraint.1476_1 = pathconstraint;
  if (pathconstraint.1476_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 3> :
  find_path_constraint = 0;
  stderr.1477_2 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1477_2);
  o = 0;
  goto <bb 23>; [INV]

  <bb 4> :
  syminfo.1479_3 = syminfo;
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _4);
  D.256639 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1479_3, _5);
  _6 = D.256639;
  retval.1478 = _6 != 0B;
  if (retval.1478 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 5> :
  syminfo.1480_7 = syminfo;
  _8 = (long unsigned int) o;
  _9 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _8);
  D.256640 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1480_7, _9);
  symbolicinfotmp = D.256640;
  _10 = symbolicinfotmp->node;
  D.256641 = cgraph_node::get_fun (_10);
  _11 = D.256641;
  push_cfun (_11);
  calculate_dominance_info (1);
  _12 = symbolicinfotmp->cond_truebranch;
  if (bb == _12)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _13 = symbolicinfotmp->cond_truebranch;
  D.256642 = dominated_by_p (1, bb, _13);
  _14 = D.256642;
  if (_14 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1482 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1482 = 0;

  <bb 9> :
  retval.1481 = iftmp.1482;
  if (retval.1481 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  _15 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_15);
  retval.1483 = 1;
  if (retval.1483 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _16 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_16);

  <bb 12> :
  _17 = symbolicinfotmp->cond_stmt;
  _18 = gimple_location_safe (_17);
  warning_at (_18, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 13> :
  _19 = symbolicinfotmp->cond_falsebranch;
  if (bb == _19)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _20 = symbolicinfotmp->cond_falsebranch;
  D.256643 = dominated_by_p (1, bb, _20);
  _21 = D.256643;
  if (_21 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1485 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1485 = 0;

  <bb 17> :
  retval.1484 = iftmp.1485;
  if (retval.1484 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _22 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_22);
  retval.1486 = 1;
  if (retval.1486 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _23 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_23);

  <bb 20> :
  _24 = symbolicinfotmp->cond_stmt;
  _25 = gimple_location_safe (_24);
  warning_at (_25, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  o = o + 1;

  <bb 23> :
  _26 = (long unsigned int) o;
  _27 = std::vector<basic_block_def*>::size (&symbolicExecution);
  retval.1487 = _26 < _27;
  if (retval.1487 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find_path_constraint == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  stderr.1488_28 = stderr;
  __builtin_fwrite ("=======================NO find Path Constaint===========================\n\n", 1, 74, stderr.1488_28);
  goto <bb 27>; [INV]

  <bb 26> :
  stderr.1489_29 = stderr;
  fprintf (stderr.1489_29, "=======================Path Constaint=====%d======================\n\n", find_path_constraint);

  <bb 27> :
  stderr.1490_30 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1490_30);

  <bb 28> :
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::get (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7800, decl_uid=196674, cgraph_uid=4432, symbol_order=5224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfo * hash_map<basic_block_def*, symbolicinfo>::get (struct hash_map * const this, struct basic_block_def * const & k)
{
  bool D.256652;
  struct hash_entry & D.256651;
  unsigned int D.256650;
  struct hash_entry & e;
  struct symbolicinfo * iftmp.1491;
  struct symbolicinfo * D.256644;

  <bb 2> :
  _1 = &this->m_table;
  D.256650 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.256650;
  D.256651 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.256651;
  D.256652 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  _3 = D.256652;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1491 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1491 = &e->m_value;

  <bb 5> :
  D.256644 = iftmp.1491;

  <bb 6> :
<L3>:
  return D.256644;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE4hashERKS2_, funcdef_no=8750, decl_uid=196630, cgraph_uid=5382, symbol_order=6178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (struct basic_block_def * const & h)
{
  hashval_t D.256653;

  <bb 2> :
  D.256653 = pointer_hash<basic_block_def>::hash (h);

  <bb 3> :
<L0>:
  return D.256653;

}



;; Function pointer_hash<basic_block_def>::hash (_ZN12pointer_hashI15basic_block_defE4hashERKPS0_, funcdef_no=9595, decl_uid=196587, cgraph_uid=6227, symbol_order=7023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<basic_block_def>::hash (struct basic_block_def * const & candidate)
{
  hashval_t D.256655;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.256655 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.256655;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8751, decl_uid=196817, cgraph_uid=5383, symbol_order=6179)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash)
{
  bool D.256689;
  bool D.256688;
  bool D.256687;
  bool D.256686;
  bool D.256685;
  bool D.256684;
  struct value_type * D.256683;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.1495;
  bool retval.1494;
  struct value_type & D.256669;
  bool iftmp.1493;
  bool retval.1492;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 168;
  entry = _5 + _7;
  D.256684 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.256684;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.256685 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.256685;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.256686 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _11 = D.256686;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1493 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1493 = 0;

  <bb 8> :
  retval.1492 = iftmp.1493;
  if (retval.1492 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.256669 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  entry = _17 + _19;
  D.256687 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.256687;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.256688 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.256688;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.256689 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _23 = D.256689;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1495 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1495 = 0;

  <bb 18> :
  retval.1494 = iftmp.1495;
  if (retval.1494 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.256669 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.256669;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8945, decl_uid=196913, cgraph_uid=5577, symbol_order=6373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.256692;
  bool D.256690;

  <bb 2> :
  D.256692 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (v);
  D.256690 = D.256692;

  <bb 3> :
<L0>:
  return D.256690;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8829, decl_uid=196743, cgraph_uid=5461, symbol_order=6257)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.256695;
  bool D.256693;

  <bb 2> :
  D.256695 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.256693 = D.256695;

  <bb 3> :
<L0>:
  return D.256693;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8946, decl_uid=196911, cgraph_uid=5578, symbol_order=6374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.256698;
  bool D.256696;

  <bb 2> :
  D.256698 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (v);
  D.256696 = D.256698;

  <bb 3> :
<L0>:
  return D.256696;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9794, decl_uid=196738, cgraph_uid=6426, symbol_order=7222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.256701;
  bool D.256699;

  <bb 2> :
  D.256701 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.256699 = D.256701;

  <bb 3> :
<L0>:
  return D.256699;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10357, decl_uid=239485, cgraph_uid=6989, symbol_order=7789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256702;

  <bb 2> :
  _1 = entry->m_key;
  D.256702 = pointer_hash<basic_block_def>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.256702;

}



;; Function pointer_hash<basic_block_def>::is_deleted (_ZN12pointer_hashI15basic_block_defE10is_deletedEPS0_, funcdef_no=10779, decl_uid=196597, cgraph_uid=7411, symbol_order=8211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_deleted (struct basic_block_def * e)
{
  bool D.256704;

  <bb 2> :
  D.256704 = e == 1B;

  <bb 3> :
<L0>:
  return D.256704;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9597, decl_uid=196731, cgraph_uid=6229, symbol_order=7025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (const struct hash_entry & a, struct basic_block_def * const & b)
{
  bool D.256708;
  bool D.256706;

  <bb 2> :
  _1 = &a->m_key;
  D.256708 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_1, b);
  D.256706 = D.256708;

  <bb 3> :
<L0>:
  return D.256706;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10equal_keysERKS2_S7_, funcdef_no=10210, decl_uid=196632, cgraph_uid=6842, symbol_order=7642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (struct basic_block_def * const & k1, struct basic_block_def * const & k2)
{
  bool D.256709;

  <bb 2> :
  D.256709 = pointer_hash<basic_block_def>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.256709;

}



;; Function pointer_hash<basic_block_def>::equal (_ZN12pointer_hashI15basic_block_defE5equalERKPS0_S4_, funcdef_no=10680, decl_uid=196589, cgraph_uid=7312, symbol_order=8112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::equal (struct basic_block_def * const & existing, struct basic_block_def * const & candidate)
{
  bool D.256711;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.256711 = _1 == _2;

  <bb 3> :
<L0>:
  return D.256711;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8752, decl_uid=215633, cgraph_uid=5384, symbol_order=6180)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256713;

  <bb 2> :
  _1 = entry->m_key;
  D.256713 = pointer_hash<basic_block_def>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.256713;

}



;; Function pointer_hash<basic_block_def>::is_empty (_ZN12pointer_hashI15basic_block_defE8is_emptyEPS0_, funcdef_no=9598, decl_uid=196599, cgraph_uid=6230, symbol_order=7026)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_empty (struct basic_block_def * e)
{
  bool D.256715;

  <bb 2> :
  D.256715 = e == 0B;

  <bb 3> :
<L0>:
  return D.256715;

}



;; Function checkPointerConstraint (_Z22checkPointerConstraintP9tree_nodeP3ptbP12gimple_arrayS0_i, funcdef_no=6801, decl_uid=187082, cgraph_uid=3455, symbol_order=4237)

Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 68
Removing basic block 69
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 112
Removing basic block 118
Removing basic block 132
Removing basic block 133
Removing basic block 146
Removing basic block 147
Removing basic block 163
Removing basic block 164
Removing basic block 165
Removing basic block 166
Removing basic block 167
Removing basic block 168
Removing basic block 175
Removing basic block 211
Removing basic block 212
Removing basic block 217
Removing basic block 218
Removing basic block 219
Removing basic block 225
Removing basic block 262
Removing basic block 271
Removing basic block 286
Removing basic block 289
Removing basic block 292
Removing basic block 299
Removing basic block 305
Removing basic block 311
Removing basic block 320
Removing basic block 322
Removing basic block 323
Removing basic block 326
Removing basic block 341
Removing basic block 360
Removing basic block 361
Removing basic block 381
Removing basic block 397
Removing basic block 400
Removing basic block 409
Removing basic block 412
Removing basic block 413
Removing basic block 414
Removing basic block 424
Removing basic block 425
Removing basic block 440
Removing basic block 441
Removing basic block 449
Removing basic block 453
Removing basic block 454
Removing basic block 459
Removing basic block 469
Removing basic block 477
Removing basic block 478
Removing basic block 480
Removing basic block 481
Removing basic block 482
Removing basic block 506
Removing basic block 507
Removing basic block 524
Removing basic block 526
Removing basic block 532
Removing basic block 533
Removing basic block 534
Removing basic block 555
Removing basic block 557
Removing basic block 581
Removing basic block 590
Removing basic block 591
Removing basic block 645
Removing basic block 653
Removing basic block 662
Removing basic block 663
Removing basic block 664
Removing basic block 665
Removing basic block 666
Removing basic block 667
Removing basic block 668
Removing basic block 674
Removing basic block 699
Removing basic block 702
Removing basic block 705
Removing basic block 706
Removing basic block 713
Removing basic block 716
Removing basic block 722
Removing basic block 727
Removing basic block 748
Removing basic block 766
Removing basic block 770
Removing basic block 771
Removing basic block 772
Removing basic block 780
Removing basic block 781
Removing basic block 786
Removing basic block 787
Removing basic block 795
Removing basic block 812
Removing basic block 815
Removing basic block 816
Removing basic block 817
Removing basic block 825
Removing basic block 837
Removing basic block 841
Removing basic block 845
Removing basic block 855
Removing basic block 858
Removing basic block 860
Removing basic block 871
Removing basic block 876
Removing basic block 879
Removing basic block 884
Removing basic block 890
Removing basic block 898
Removing basic block 900
Removing basic block 909
Removing basic block 915
Removing basic block 918
Removing basic block 924
Removing basic block 925
Removing basic block 930
Merging blocks 931 and 933
Merging blocks 932 and 936
Removing basic block 934
;; 20 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 809, latch 808
;;  depth 1, outer 0
;;  nodes: 809 808 806 807 805 804 803 800 39 799 798 765 769 777 780 792 785 797 793 786 781 796 795 794 784 783 782 790 791 789 788 787 779 778 770 766 745 736 744 742 743 740 741 739 738 737 733 734 735 721 732 729 726 725 724 723 722 728 727 731 730 719 720 96 95 82 94 91 93 92 89 88 87 86 85 84 83 90 40 81 78 80 79 41 42 77 58 65 64 69 75 67 63 76 66 62 61 60 59 74 73 72 71 70 68 57 44 49 48 53 51 56 50 55 54 52 47 46 45 43 36 35 34 33 32 31 30 718 633 717 716 636 715 640 714 712 713 711 710 641 709 644 652 672 679 683 708 646 686 685 684 655 682 680 673 678 677 676 675 674 658 671 659 660 670 662 669 668 663 667 665 666 664 661 657 656 681 654 653 647 651 650 649 648 645 706 707 705 704 703 702 701 700 699 698 697 696 695 694 693 692 691 689 690 688 687 643 642 638 639 637 635 634 515 519 518 632 631 630 629 524 628 528 627 625 626 624 530 623 587 533 586 534 585 584 538 583 541 582 547 552 562 581 580 560 550 549 548 558 559 557 556 555 554 553 579 578 577 576 574 575 573 572 571 570 569 568 566 567 565 564 563 561 551 545 546 542 543 544 540 539 537 536 535 532 531 588 622 589 621 620 591 619 618 617 592 616 597 615 600 599 598 613 614 612 610 611 609 608 607 606 605 604 603 602 601 595 596 594 593 590 529 526 527 525 523 522 521 520 517 516 484 491 490 493 514 513 497 512 499 511 510 509 508 506 507 504 500 503 502 501 505 498 496 495 494 492 489 488 487 486 485 464 483 465 467 482 471 481 480 479 478 477 476 475 474 473 472 470 469 468 466 462 463 425 428 426 427 424 113 423 421 422 420 418 419 146 309 308 307 306 305 304 303 302 301 300 298 286 297 295 296 293 292 291 290 289 288 287 294 284 285 276 283 278 282 281 280 279 277 275 192 274 199 198 197 193 196 195 194 264 273 243 242 241 236 240 239 238 237 235 234 233 217 232 231 230 229 228 227 226 225 224 222 223 219 221 220 218 216 215 214 213 212 211 210 209 208 207 206 205 204 203 202 201 200 272 271 270 265 269 268 267 266 259 263 262 261 260 246 245 244 257 258 251 256 254 255 253 252 250 249 248 247 148 147 120 134 121 124 131 130 137 126 122 125 136 135 129 128 127 123 133 132 114 119 116 115 118 117 145 144 143 142 141 140 139 138 191 326 323 157 153 417 339 396 400 401 403 341 398 402 416 415 409 408 407 406 405 404 414 413 412 411 410 397 340 329 328 327 399 393 395 392 391 389 390 388 387 378 386 384 383 382 381 380 379 385 376 377 373 375 374 364 372 370 368 369 366 367 365 371 356 362 358 363 361 360 359 357 355 354 348 353 351 350 349 352 347 346 345 344 343 342 394 338 336 337 334 333 332 331 330 335 149 152 151 150 156 155 154 321 322 318 320 319 299 317 316 315 314 313 312 311 310 325 324 190 189 188 175 187 182 180 181 177 179 178 176 186 185 184 183 174 173 172 171 170 169 168 167 166 165 164 163 162 161 160 159 158 111 112 110 109 108 106 107 105 101 104 103 102 100 99 98 97 460 461 459 445 458 447 457 455 456 454 453 452 451 450 449 448 446 444 434 443 442 436 441 437 440 439 438 435 433 432 431 430 429 775 776 774 773 772 771 768 767 754 760 761 764 763 762 755 751 750 749 746 748 747 758 759 757 756 753 752 38 37 802 801
;;
;; Loop 11
;;  header 749, latch 748
;;  depth 2, outer 3
;;  nodes: 749 748 747
;;
;; Loop 10
;;  header 715, latch 714
;;  depth 2, outer 3
;;  nodes: 715 714 712 713 711 710 641 709 644 652 672 679 683 708 646 686 685 684 655 682 680 673 678 677 676 675 674 658 671 659 660 670 662 669 668 663 667 665 666 664 661 657 656 681 654 653 647 651 650 649 648 645 706 707 705 704 703 702 701 700 699 698 697 696 695 694 693 692 691 689 690 688 687 643 642
;;
;; Loop 12
;;  header 710, latch 709
;;  depth 3, outer 10
;;  nodes: 710 709 644 652 672 679 683 708 646 686 685 684 655 682 680 673 678 677 676 675 674 658 671 659 660 670 662 669 668 663 667 665 666 664 661 657 656 681 654 653 647 651 650 649 648 645 706 707 705 704 703 702 701 700 699 698 697 696 695 694 693 692 691 689 690 688 687 643 642
;;
;; Loop 13
;;  header 668, latch 667
;;  depth 4, outer 12
;;  nodes: 668 667 665 666 664 669
;;
;; Loop 9
;;  header 628, latch 627
;;  depth 2, outer 3
;;  nodes: 628 627 625 626 624 530 623 587 533 586 534 585 584 538 583 541 582 547 552 562 581 580 560 550 549 548 558 559 557 556 555 554 553 579 578 577 576 574 575 573 572 571 570 569 568 566 567 565 564 563 561 551 545 546 542 543 544 540 539 537 536 535 532 531 588 622 589 621 620 591 619 618 617 592 616 597 615 600 599 598 613 614 612 610 611 609 608 607 606 605 604 603 602 601 595 596 594 593 590 529
;;
;; Loop 17
;;  header 587, latch 586
;;  depth 3, outer 9
;;  nodes: 587 586 534 585 584 538 583 541 582 547 552 562 581 580 560 550 549 548 558 559 557 556 555 554 553 579 578 577 576 574 575 573 572 571 570 569 568 566 567 565 564 563 561 551 545 546 542 543 544 540 539 537 536 535
;;
;; Loop 18
;;  header 584, latch 583
;;  depth 4, outer 17
;;  nodes: 584 583 541 582 547 552 562 581 580 560 550 549 548 558 559 557 556 555 554 553 579 578 577 576 574 575 573 572 571 570 569 568 566 567 565 564 563 561 551 545 546 542 543 544 540 539
;;
;; Loop 14
;;  header 623, latch 622
;;  depth 3, outer 9
;;  nodes: 623 622 589 621 620 591 619 618 617 592 616 597 615 600 599 598 613 614 612 610 611 609 608 607 606 605 604 603 602 601 595 596 594 593 590
;;
;; Loop 15
;;  header 620, latch 619
;;  depth 4, outer 14
;;  nodes: 620 619 618 617 592 616 597 615 600 599 598 613 614 612 610 611 609 608 607 606 605 604 603 602 601 595 596 594 593 621
;;
;; Loop 16
;;  header 617, latch 616
;;  depth 5, outer 15
;;  nodes: 617 616 597 615 600 599 598 613 614 612 610 611 609 608 607 606 605 604 603 602 601 595 596 594 593 618
;;
;; Loop 8
;;  header 513, latch 512
;;  depth 2, outer 3
;;  nodes: 513 512 499 511 510 509 508 506 507 504 500 503 502 501 505 498
;;
;; Loop 7
;;  header 482, latch 481
;;  depth 2, outer 3
;;  nodes: 482 481 480 479 478 477 476 475 474 473 472
;;
;; Loop 6
;;  header 459, latch 458
;;  depth 2, outer 3
;;  nodes: 459 458 447 457 455 456 454 453 452 451 450 449 448 446
;;
;; Loop 5
;;  header 444, latch 443
;;  depth 2, outer 3
;;  nodes: 444 443 442 436 441 437 440 439 438 435
;;
;; Loop 19
;;  header 442, latch 441
;;  depth 3, outer 5
;;  nodes: 442 441 437 440 439 438
;;
;; Loop 4
;;  header 424, latch 423
;;  depth 2, outer 3
;;  nodes
;;
;; Loop 2
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 15 19 18 17 16
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 842 6 }
;; 6 succs { 842 7 }
;; 7 succs { 8 24 }
;; 8 succs { 9 24 }
;; 9 succs { 812 10 }
;; 10 succs { 812 11 }
;; 11 succs { 812 12 }
;; 12 succs { 812 13 }
;; 13 succs { 812 14 }
;; 14 succs { 21 }
;; 15 succs { 16 20 }
;; 16 succs { 811 17 }
;; 17 succs { 811 18 }
;; 18 succs { 811 19 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 15 22 }
;; 22 succs { 811 23 }
;; 23 succs { 24 }
;; 24 succs { 842 25 }
;; 25 succs { 842 26 }
;; 26 succs { 27 28 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 809 }
;; 30 succs { 840 31 }
;; 31 succs { 32 804 }
;; 32 succs { 33 804 }
;; 33 succs { 838 34 }
;; 34 succs { 838 35 }
;; 35 succs { 37 36 }
;; 36 succs { 37 40 }
;; 37 succs { 838 38 }
;; 38 succs { 838 39 }
;; 39 succs { 800 }
;; 40 succs { 41 82 }
;; 41 succs { 42 79 }
;; 42 succs { 43 79 }
;; 43 succs { 838 44 }
;; 44 succs { 45 57 }
;; 45 succs { 838 46 }
;; 46 succs { 47 49 }
;; 47 succs { 838 48 }
;; 48 succs { 57 }
;; 49 succs { 50 57 }
;; 50 succs { 51 57 }
;; 51 succs { 52 57 }
;; 52 succs { 838 53 }
;; 53 succs { 54 57 }
;; 54 succs { 838 55 }
;; 55 succs { 838 56 }
;; 56 succs { 57 }
;; 57 succs { 838 58 }
;; 58 succs { 59 77 }
;; 59 succs { 60 65 }
;; 60 succs { 838 61 }
;; 61 succs { 838 62 }
;; 62 succs { 838 63 }
;; 63 succs { 64 77 }
;; 64 succs { 838 77 }
;; 65 succs { 66 77 }
;; 66 succs { 67 77 }
;; 67 succs { 68 77 }
;; 68 succs { 838 69 }
;; 69 succs { 70 77 }
;; 70 succs { 838 71 }
;; 71 succs { 838 72 }
;; 72 succs { 838 73 }
;; 73 succs { 838 74 }
;; 74 succs { 838 75 }
;; 75 succs { 76 77 }
;; 76 succs { 838 77 }
;; 77 succs { 838 78 }
;; 78 succs { 81 }
;; 79 succs { 838 80 }
;; 80 succs { 838 81 }
;; 81 succs { 82 }
;; 82 succs { 83 95 }
;; 83 succs { 90 84 }
;; 84 succs { 90 85 }
;; 85 succs { 90 86 }
;; 86 succs { 90 87 }
;; 87 succs { 90 88 }
;; 88 succs { 90 89 }
;; 89 succs { 90 92 }
;; 90 succs { 838 91 }
;; 91 succs { 94 }
;; 92 succs { 838 93 }
;; 93 succs { 838 94 }
;; 94 succs { 95 }
;; 95 succs { 838 96 }
;; 96 succs { 97 720 }
;; 97 succs { 834 98 }
;; 98 succs { 814 99 }
;; 99 succs { 832 100 }
;; 100 succs { 101 102 }
;; 101 succs { 832 105 }
;; 102 succs { 832 103 }
;; 103 succs { 832 104 }
;; 104 succs { 832 105 }
;; 105 succs { 106 107 }
;; 106 succs { 832 108 }
;; 107 succs { 832 108 }
;; 108 succs { 832 109 }
;; 109 succs { 110 463 }
;; 110 succs { 111 112 }
;; 111 succs { 113 }
;; 112 succs { 113 }
;; 113 succs { 424 }
;; 114 succs { 115 120 }
;; 115 succs { 816 116 }
;; 116 succs { 117 120 }
;; 117 succs { 816 118 }
;; 118 succs { 816 119 }
;; 119 succs { 816 120 }
;; 120 succs { 121 147 }
;; 121 succs { 122 147 }
;; 122 succs { 123 147 }
;; 123 succs { 816 124 }
;; 124 succs { 125 147 }
;; 125 succs { 816 126 }
;; 126 succs { 127 147 }
;; 127 succs { 816 128 }
;; 128 succs { 816 129 }
;; 129 succs { 130 132 }
;; 130 succs { 131 147 }
;; 131 succs { 816 147 }
;; 132 succs { 816 133 }
;; 133 succs { 816 134 }
;; 134 succs { 135 147 }
;; 135 succs { 816 136 }
;; 136 succs { 816 137 }
;; 137 succs { 138 147 }
;; 138 succs { 816 139 }
;; 139 succs { 816 140 }
;; 140 succs { 816 141 }
;; 141 succs { 816 142 }
;; 142 succs { 816 143 }
;; 143 succs { 816 144 }
;; 144 succs { 816 145 }
;; 145 succs { 816 146 }
;; 146 succs { 419 }
;; 147 succs { 148 418 }
;; 148 succs { 149 192 }
;; 149 succs { 150 153 }
;; 150 succs { 816 151 }
;; 151 succs { 816 152 }
;; 152 succs { 816 153 }
;; 153 succs { 154 418 }
;; 154 succs { 816 155 }
;; 155 succs { 816 156 }
;; 156 succs { 816 157 }
;; 157 succs { 158 418 }
;; 158 succs { 816 159 }
;; 159 succs { 816 160 }
;; 160 succs { 816 161 }
;; 161 succs { 816 162 }
;; 162 succs { 816 163 }
;; 163 succs { 816 164 }
;; 164 succs { 816 165 }
;; 165 succs { 816 166 }
;; 166 succs { 816 167 }
;; 167 succs { 816 168 }
;; 168 succs { 816 169 }
;; 169 succs { 816 170 }
;; 170 succs { 816 171 }
;; 171 succs { 816 172 }
;; 172 succs { 816 173 }
;; 173 succs { 816 174 }
;; 174 succs { 816 175 }
;; 175 succs { 176 188 }
;; 176 succs { 816 177 }
;; 177 succs { 178 181 }
;; 178 succs { 816 179 }
;; 179 succs { 180 181 }
;; 180 succs { 182 }
;; 181 succs { 182 }
;; 182 succs { 183 188 }
;; 183 succs { 816 184 }
;; 184 succs { 816 185 }
;; 185 succs { 816 186 }
;; 186 succs { 816 187 }
;; 187 succs { 816 188 }
;; 188 succs { 816 189 }
;; 189 succs { 816 190 }
;; 190 succs { 816 191 }
;; 191 succs { 816 418 }
;; 192 succs { 193 275 }
;; 193 succs { 194 197 }
;; 194 succs { 816 195 }
;; 195 succs { 816 196 }
;; 196 succs { 816 197 }
;; 197 succs { 816 198 }
;; 198 succs { 816 199 }
;; 199 succs { 200 275 }
;; 200 succs { 815 201 }
;; 201 succs { 815 202 }
;; 202 succs { 815 203 }
;; 203 succs { 815 204 }
;; 204 succs { 815 205 }
;; 205 succs { 815 206 }
;; 206 succs { 815 207 }
;; 207 succs { 815 208 }
;; 208 succs { 815 209 }
;; 209 succs { 815 210 }
;; 210 succs { 815 211 }
;; 211 succs { 815 212 }
;; 212 succs { 815 213 }
;; 213 succs { 815 214 }
;; 214 succs { 815 215 }
;; 215 succs { 815 216 }
;; 216 succs { 815 217 }
;; 217 succs { 218 233 }
;; 218 succs { 815 219 }
;; 219 succs { 220 223 }
;; 220 succs { 815 221 }
;; 221 succs { 222 223 }
;; 222 succs { 224 }
;; 223 succs { 224 }
;; 224 succs { 225 232 }
;; 225 succs { 815 226 }
;; 226 succs { 815 227 }
;; 227 succs { 815 228 }
;; 228 succs { 815 229 }
;; 229 succs { 815 230 }
;; 230 succs { 815 231 }
;; 231 succs { 233 }
;; 232 succs { 233 }
;; 233 succs { 815 234 }
;; 234 succs { 815 235 }
;; 235 succs { 236 265 }
;; 236 succs { 237 241 }
;; 237 succs { 815 238 }
;; 238 succs { 815 239 }
;; 239 succs { 815 240 }
;; 240 succs { 815 241 }
;; 241 succs { 815 242 }
;; 242 succs { 815 243 }
;; 243 succs { 244 274 }
;; 244 succs { 247 245 }
;; 245 succs { 247 246 }
;; 246 succs { 247 260 }
;; 247 succs { 815 248 }
;; 248 succs { 815 249 }
;; 249 succs { 815 250 }
;; 250 succs { 815 251 }
;; 251 succs { 252 257 }
;; 252 succs { 815 253 }
;; 253 succs { 254 255 }
;; 254 succs { 815 256 }
;; 255 succs { 815 256 }
;; 256 succs { 815 257 }
;; 257 succs { 258 259 }
;; 258 succs { 815 259 }
;; 259 succs { 264 }
;; 260 succs { 815 261 }
;; 261 succs { 815 262 }
;; 262 succs { 815 263 }
;; 263 succs { 815 264 }
;; 264 succs { 274 }
;; 265 succs { 266 270 }
;; 266 succs { 815 267 }
;; 267 succs { 815 268 }
;; 268 succs { 815 269 }
;; 269 succs { 815 270 }
;; 270 succs { 815 271 }
;; 271 succs { 815 272 }
;; 272 succs { 815 273 }
;; 273 succs { 815 274 }
;; 274 succs { 275 }
;; 275 succs { 276 418 }
;; 276 succs { 277 284 }
;; 277 succs { 816 278 }
;; 278 succs { 279 284 }
;; 279 succs { 816 280 }
;; 280 succs { 816 281 }
;; 281 succs { 282 283 }
;; 282 succs { 816 284 }
;; 283 succs { 816 284 }
;; 284 succs { 285 286 }
;; 285 succs { 816 286 }
;; 286 succs { 287 298 }
;; 287 succs { 294 288 }
;; 288 succs { 294 289 }
;; 289 succs { 294 290 }
;; 290 succs { 294 291 }
;; 291 succs { 294 292 }
;; 292 succs { 294 293 }
;; 293 succs { 294 296 }
;; 294 succs { 816 295 }
;; 295 succs { 297 }
;; 296 succs { 297 }
;; 297 succs { 298 }
;; 298 succs { 299 300 }
;; 299 succs { 816 318 }
;; 300 succs { 301 318 }
;; 301 succs { 302 318 }
;; 302 succs { 303 318 }
;; 303 succs { 816 304 }
;; 304 succs { 305 310 }
;; 305 succs { 816 306 }
;; 306 succs { 816 307 }
;; 307 succs { 816 308 }
;; 308 succs { 816 309 }
;; 309 succs { 419 }
;; 310 succs { 816 311 }
;; 311 succs { 816 312 }
;; 312 succs { 816 313 }
;; 313 succs { 816 314 }
;; 314 succs { 816 315 }
;; 315 succs { 816 316 }
;; 316 succs { 816 317 }
;; 317 succs { 816 318 }
;; 318 succs { 319 322 }
;; 319 succs { 321 320 }
;; 320 succs { 321 322 }
;; 321 succs { 323 }
;; 322 succs { 323 }
;; 323 succs { 324 418 }
;; 324 succs { 816 325 }
;; 325 succs { 816 326 }
;; 326 succs { 327 418 }
;; 327 succs { 330 328 }
;; 328 succs { 330 329 }
;; 329 succs { 330 340 }
;; 330 succs { 816 331 }
;; 331 succs { 816 332 }
;; 332 succs { 816 333 }
;; 333 succs { 816 334 }
;; 334 succs { 335 337 }
;; 335 succs { 816 336 }
;; 336 succs { 816 338 }
;; 337 succs { 816 338 }
;; 338 succs { 816 339 }
;; 339 succs { 417 }
;; 340 succs { 341 397 }
;; 341 succs { 342 417 }
;; 342 succs { 816 343 }
;; 343 succs { 816 344 }
;; 344 succs { 816 345 }
;; 345 succs { 816 346 }
;; 346 succs { 816 347 }
;; 347 succs { 816 348 }
;; 348 succs { 349 354 }
;; 349 succs { 350 352 }
;; 350 succs { 816 351 }
;; 351 succs { 816 354 }
;; 352 succs { 816 353 }
;; 353 succs { 816 354 }
;; 354 succs { 816 355 }
;; 355 succs { 816 356 }
;; 356 succs { 357 364 }
;; 357 succs { 816 358 }
;; 358 succs { 359 364 }
;; 359 succs { 816 360 }
;; 360 succs { 361 362 }
;; 361 succs { 816 364 }
;; 362 succs { 363 364 }
;; 363 succs { 816 364 }
;; 364 succs { 365 373 }
;; 365 succs { 816 366 }
;; 366 succs { 367 369 }
;; 367 succs { 368 369 }
;; 368 succs { 370 }
;; 369 succs { 370 }
;; 370 succs { 371 373 }
;; 371 succs { 816 372 }
;; 372 succs { 816 373 }
;; 373 succs { 374 377 }
;; 374 succs { 816 375 }
;; 375 succs { 376 377 }
;; 376 succs { 378 }
;; 377 succs { 378 }
;; 378 succs { 379 387 }
;; 379 succs { 816 380 }
;; 380 succs { 816 381 }
;; 381 succs { 816 382 }
;; 382 succs { 816 383 }
;; 383 succs { 816 384 }
;; 384 succs { 385 387 }
;; 385 succs { 816 386 }
;; 386 succs { 816 387 }
;; 387 succs { 388 394 }
;; 388 succs { 389 390 }
;; 389 succs { 391 }
;; 390 succs { 391 }
;; 391 succs { 816 392 }
;; 392 succs { 393 396 }
;; 393 succs { 396 }
;; 394 succs { 816 395 }
;; 395 succs { 396 }
;; 396 succs { 816 417 }
;; 397 succs { 398 401 }
;; 398 succs { 399 417 }
;; 399 succs { 816 400 }
;; 400 succs { 417 }
;; 401 succs { 402 417 }
;; 402 succs { 417 403 }
;; 403 succs { 417 404 }
;; 404 succs { 417 405 }
;; 405 succs { 417 406 }
;; 406 succs { 417 407 }
;; 407 succs { 417 408 }
;; 408 succs { 417 409 }
;; 409 succs { 417 410 }
;; 410 succs { 816 411 }
;; 411 succs { 816 412 }
;; 412 succs { 816 413 }
;; 413 succs { 816 414 }
;; 414 succs { 816 415 }
;; 415 succs { 416 417 }
;; 416 succs { 816 417 }
;; 417 succs { 418 }
;; 418 succs { 420 }
;; 419 succs { 420 }
;; 420 succs { 421 422 }
;; 421 succs { 423 }
;; 422 succs { 423 }
;; 423 succs { 424 }
;; 424 succs { 114 425 }
;; 425 succs { 426 464 }
;; 426 succs { 427 464 }
;; 427 succs { 832 428 }
;; 428 succs { 429 464 }
;; 429 succs { 818 430 }
;; 430 succs { 818 431 }
;; 431 succs { 818 432 }
;; 432 succs { 818 433 }
;; 433 succs { 817 434 }
;; 434 succs { 444 }
;; 435 succs { 818 436 }
;; 436 succs { 442 }
;; 437 succs { 438 441 }
;; 438 succs { 818 439 }
;; 439 succs { 440 441 }
;; 440 succs { 818 441 }
;; 441 succs { 442 }
;; 442 succs { 437 443 }
;; 443 succs { 444 }
;; 444 succs { 435 445 }
;; 445 succs { 459 }
;; 446 succs { 818 447 }
;; 447 succs { 448 458 }
;; 448 succs { 818 449 }
;; 449 succs { 818 450 }
;; 450 succs { 818 451 }
;; 451 succs { 818 452 }
;; 452 succs { 818 453 }
;; 453 succs { 818 454 }
;; 454 succs { 818 455 }
;; 455 succs { 456 457 }
;; 456 succs { 818 457 }
;; 457 succs { 818 458 }
;; 458 succs { 459 }
;; 459 succs { 446 460 }
;; 460 succs { 461 462 }
;; 461 succs { 462 }
;; 462 succs { 464 }
;; 463 succs { 464 }
;; 464 succs { 465 484 }
;; 465 succs { 466 484 }
;; 466 succs { 819 467 }
;; 467 succs { 468 483 }
;; 468 succs { 819 469 }
;; 469 succs { 819 470 }
;; 470 succs { 819 471 }
;; 471 succs { 482 }
;; 472 succs { 819 473 }
;; 473 succs { 819 474 }
;; 474 succs { 819 475 }
;; 475 succs { 819 476 }
;; 476 succs { 819 477 }
;; 477 succs { 819 478 }
;; 478 succs { 819 479 }
;; 479 succs { 819 480 }
;; 480 succs { 819 481 }
;; 481 succs { 482 }
;; 482 succs { 472 483 }
;; 483 succs { 484 }
;; 484 succs { 485 515 }
;; 485 succs { 832 486 }
;; 486 succs { 832 487 }
;; 487 succs { 832 488 }
;; 488 succs { 832 489 }
;; 489 succs { 491 490 }
;; 490 succs { 491 515 }
;; 491 succs { 492 515 }
;; 492 succs { 832 493 }
;; 493 succs { 494 515 }
;; 494 succs { 825 495 }
;; 495 succs { 825 496 }
;; 496 succs { 824 497 }
;; 497 succs { 513 }
;; 498 succs { 823 499 }
;; 499 succs { 500 512 }
;; 500 succs { 501 504 }
;; 501 succs { 822 502 }
;; 502 succs { 822 503 }
;; 503 succs { 504 }
;; 504 succs { 505 507 }
;; 505 succs { 822 506 }
;; 506 succs { 822 508 }
;; 507 succs { 822 508 }
;; 508 succs { 822 509 }
;; 509 succs { 822 510 }
;; 510 succs { 822 511 }
;; 511 succs { 512 }
;; 512 succs { 513 }
;; 513 succs { 498 514 }
;; 514 succs { 515 }
;; 515 succs { 516 633 }
;; 516 succs { 832 517 }
;; 517 succs { 519 518 }
;; 518 succs { 519 633 }
;; 519 succs { 520 633 }
;; 520 succs { 830 521 }
;; 521 succs { 830 522 }
;; 522 succs { 830 523 }
;; 523 succs { 830 524 }
;; 524 succs { 525 629 }
;; 525 succs { 526 527 }
;; 526 succs { 528 }
;; 527 succs { 528 }
;; 528 succs { 628 }
;; 529 succs { 830 530 }
;; 530 succs { 531 624 }
;; 531 succs { 830 532 }
;; 532 succs { 533 588 }
;; 533 succs { 587 }
;; 534 succs { 535 586 }
;; 535 succs { 828 536 }
;; 536 succs { 828 537 }
;; 537 succs { 827 538 }
;; 538 succs { 584 }
;; 539 succs { 826 540 }
;; 540 succs { 826 541 }
;; 541 succs { 542 583 }
;; 542 succs { 543 546 }
;; 543 succs { 544 546 }
;; 544 succs { 545 546 }
;; 545 succs { 547 }
;; 546 succs { 547 }
;; 547 succs { 548 583 }
;; 548 succs { 826 549 }
;; 549 succs { 826 550 }
;; 550 succs { 551 583 }
;; 551 succs { 826 552 }
;; 552 succs { 553 583 }
;; 553 succs { 826 554 }
;; 554 succs { 558 555 }
;; 555 succs { 826 556 }
;; 556 succs { 826 557 }
;; 557 succs { 558 559 }
;; 558 succs { 560 }
;; 559 succs { 560 }
;; 560 succs { 561 583 }
;; 561 succs { 826 562 }
;; 562 succs { 563 583 }
;; 563 succs { 826 564 }
;; 564 succs { 826 565 }
;; 565 succs { 826 566 }
;; 566 succs { 567 568 }
;; 567 succs { 826 568 }
;; 568 succs { 826 569 }
;; 569 succs { 826 570 }
;; 570 succs { 826 571 }
;; 571 succs { 826 572 }
;; 572 succs { 826 573 }
;; 573 succs { 574 575 }
;; 574 succs { 826 576 }
;; 575 succs { 826 576 }
;; 576 succs { 826 577 }
;; 577 succs { 826 578 }
;; 578 succs { 826 579 }
;; 579 succs { 826 580 }
;; 580 succs { 581 583 }
;; 581 succs { 582 583 }
;; 582 succs { 583 }
;; 583 succs { 584 }
;; 584 succs { 539 585 }
;; 585 succs { 586 }
;; 586 succs { 587 }
;; 587 succs { 534 624 }
;; 588 succs { 623 }
;; 589 succs { 590 622 }
;; 590 succs { 830 591 }
;; 591 succs { 620 }
;; 592 succs { 617 }
;; 593 succs { 595 594 }
;; 594 succs { 595 596 }
;; 595 succs { 597 }
;; 596 succs { 597 }
;; 597 succs { 598 616 }
;; 598 succs { 829 599 }
;; 599 succs { 829 600 }
;; 600 succs { 601 616 }
;; 601 succs { 829 602 }
;; 602 succs { 829 603 }
;; 603 succs { 829 604 }
;; 604 succs { 829 605 }
;; 605 succs { 829 606 }
;; 606 succs { 829 607 }
;; 607 succs { 829 608 }
;; 608 succs { 829 609 }
;; 609 succs { 829 610 }
;; 610 succs { 611 612 }
;; 611 succs { 829 612 }
;; 612 succs { 613 614 }
;; 613 succs { 829 615 }
;; 614 succs { 829 615 }
;; 615 succs { 829 616 }
;; 616 succs { 829 617 }
;; 617 succs { 829 618 }
;; 618 succs { 593 619 }
;; 619 succs { 620 }
;; 620 succs { 830 621 }
;; 621 succs { 592 622 }
;; 622 succs { 623 }
;; 623 succs { 589 624 }
;; 624 succs { 625 626 }
;; 625 succs { 627 }
;; 626 succs { 627 }
;; 627 succs { 628 }
;; 628 succs { 529 629 }
;; 629 succs { 830 630 }
;; 630 succs { 830 631 }
;; 631 succs { 830 632 }
;; 632 succs { 633 }
;; 633 succs { 634 718 }
;; 634 succs { 831 635 }
;; 635 succs { 831 636 }
;; 636 succs { 637 716 }
;; 637 succs { 638 639 }
;; 638 succs { 640 }
;; 639 succs { 640 }
;; 640 succs { 715 }
;; 641 succs { 710 }
;; 642 succs { 831 643 }
;; 643 succs { 831 644 }
;; 644 succs { 645 709 }
;; 645 succs { 831 646 }
;; 646 succs { 647 709 }
;; 647 succs { 648 653 }
;; 648 succs { 831 649 }
;; 649 succs { 831 650 }
;; 650 succs { 831 651 }
;; 651 succs { 652 653 }
;; 652 succs { 709 }
;; 653 succs { 831 654 }
;; 654 succs { 831 655 }
;; 655 succs { 656 684 }
;; 656 succs { 831 657 }
;; 657 succs { 831 658 }
;; 658 succs { 659 673 }
;; 659 succs { 660 673 }
;; 660 succs { 661 673 }
;; 661 succs { 831 662 }
;; 662 succs { 663 670 }
;; 663 succs { 668 }
;; 664 succs { 831 665 }
;; 665 succs { 666 667 }
;; 666 succs { 667 }
;; 667 succs { 668 }
;; 668 succs { 831 669 }
;; 669 succs { 664 670 }
;; 670 succs { 831 671 }
;; 671 succs { 672 673 }
;; 672 succs { 709 }
;; 673 succs { 674 680 }
;; 674 succs { 831 675 }
;; 675 succs { 831 676 }
;; 676 succs { 831 677 }
;; 677 succs { 678 680 }
;; 678 succs { 679 680 }
;; 679 succs { 709 }
;; 680 succs { 681 684 }
;; 681 succs { 831 682 }
;; 682 succs { 683 684 }
;; 683 succs { 709 }
;; 684 succs { 831 685 }
;; 685 succs { 831 686 }
;; 686 succs { 687 709 }
;; 687 succs { 831 688 }
;; 688 succs { 831 689 }
;; 689 succs { 690 691 }
;; 690 succs { 831 691 }
;; 691 succs { 831 692 }
;; 692 succs { 831 693 }
;; 693 succs { 831 694 }
;; 694 succs { 831 695 }
;; 695 succs { 831 696 }
;; 696 succs { 831 697 }
;; 697 succs { 831 698 }
;; 698 succs { 831 699 }
;; 699 succs { 831 700 }
;; 700 succs { 831 701 }
;; 701 succs { 831 702 }
;; 702 succs { 831 703 }
;; 703 succs { 831 704 }
;; 704 succs { 831 705 }
;; 705 succs { 706 707 }
;; 706 succs { 831 708 }
;; 707 succs { 831 708 }
;; 708 succs { 831 709 }
;; 709 succs { 710 }
;; 710 succs { 642 711 }
;; 711 succs { 712 713 }
;; 712 succs { 714 }
;; 713 succs { 714 }
;; 714 succs { 715 }
;; 715 succs { 641 716 }
;; 716 succs { 831 717 }
;; 717 succs { 718 }
;; 718 succs { 832 719 }
;; 719 succs { 721 }
;; 720 succs { 721 }
;; 721 succs { 722 733 }
;; 722 succs { 723 730 }
;; 723 succs { 724 727 }
;; 724 succs { 837 725 }
;; 725 succs { 837 726 }
;; 726 succs { 837 733 }
;; 727 succs { 837 728 }
;; 728 succs { 837 729 }
;; 729 succs { 837 733 }
;; 730 succs { 837 731 }
;; 731 succs { 837 732 }
;; 732 succs { 837 733 }
;; 733 succs { 734 736 }
;; 734 succs { 735 736 }
;; 735 succs { 736 }
;; 736 succs { 737 745 }
;; 737 succs { 837 738 }
;; 738 succs { 837 739 }
;; 739 succs { 837 740 }
;; 740 succs { 741 742 }
;; 741 succs { 837 742 }
;; 742 succs { 743 744 }
;; 743 succs { 837 744 }
;; 744 succs { 837 745 }
;; 745 succs { 746 766 }
;; 746 succs { 749 }
;; 747 succs { 835 748 }
;; 748 succs { 749 }
;; 749 succs { 747 750 }
;; 750 succs { 835 751 }
;; 751 succs { 752 755 }
;; 752 succs { 835 753 }
;; 753 succs { 835 754 }
;; 754 succs { 835 765 }
;; 755 succs { 756 761 }
;; 756 succs { 835 757 }
;; 757 succs { 758 759 }
;; 758 succs { 835 760 }
;; 759 succs { 835 760 }
;; 760 succs { 835 765 }
;; 761 succs { 762 765 }
;; 762 succs { 835 763 }
;; 763 succs { 835 764 }
;; 764 succs { 835 765 }
;; 765 succs { 798 }
;; 766 succs { 767 770 }
;; 767 succs { 837 768 }
;; 768 succs { 837 769 }
;; 769 succs { 837 798 }
;; 770 succs { 771 778 }
;; 771 succs { 837 772 }
;; 772 succs { 837 773 }
;; 773 succs { 837 774 }
;; 774 succs { 837 775 }
;; 775 succs { 776 777 }
;; 776 succs { 837 777 }
;; 777 succs { 837 798 }
;; 778 succs { 837 779 }
;; 779 succs { 837 780 }
;; 780 succs { 781 798 }
;; 781 succs { 782 786 }
;; 782 succs { 837 783 }
;; 783 succs { 837 784 }
;; 784 succs { 837 785 }
;; 785 succs { 837 798 }
;; 786 succs { 787 793 }
;; 787 succs { 837 788 }
;; 788 succs { 837 789 }
;; 789 succs { 790 791 }
;; 790 succs { 837 792 }
;; 791 succs { 837 792 }
;; 792 succs { 837 798 }
;; 793 succs { 794 798 }
;; 794 succs { 837 795 }
;; 795 succs { 837 796 }
;; 796 succs { 837 797 }
;; 797 succs { 837 798 }
;; 798 succs { 837 799 }
;; 799 succs { 800 }
;; 800 succs { 803 801 }
;; 801 succs { 802 }
;; 802 succs { 804 }
;; 803 succs { 805 }
;; 804 succs { 805 }
;; 805 succs { 806 807 }
;; 806 succs { 808 }
;; 807 succs { 808 }
;; 808 succs { 809 }
;; 809 succs { 30 810 }
;; 810 succs { 1 }
;; 811 succs { 812 }
;; 812 succs { 813 }
;; 813 succs { 842 }
;; 814 succs { 834 }
;; 815 succs { 816 }
;; 816 succs { 832 }
;; 817 succs { 818 }
;; 818 succs { 832 }
;; 819 succs { 820 }
;; 820 succs { 821 }
;; 821 succs { 832 }
;; 822 succs { 823 }
;; 823 succs { 824 }
;; 824 succs { 825 }
;; 825 succs { 832 }
;; 826 succs { 827 }
;; 827 succs { 828 }
;; 828 succs { 830 }
;; 829 succs { 830 }
;; 830 succs { 832 }
;; 831 succs { 832 }
;; 832 succs { 833 }
;; 833 succs { 834 }
;; 834 succs { 837 }
;; 835 succs { 836 }
;; 836 succs { 837 }
;; 837 succs { 838 }
;; 838 succs { 839 }
;; 839 succs { 840 }
;; 840 succs { 841 }
;; 841 succs { 842 }
;; 842 succs { }
void checkPointerConstraint (union tree_node * function_tree, struct ptb * ptable, struct gimple_array * user_tmp, union tree_node * checkTree, int calleetype)
{
  int finally_tmp.1912;
  bool D.257586;
  const char * D.257579;
  union tree_node * D.257578;
  struct value_type & D.257577;
  struct value_type & D.257576;
  struct value_type & D.257575;
  struct value_type & D.257574;
  struct value_type & D.257573;
  bool D.257572;
  struct value_type & D.257571;
  union tree_node * D.257570;
  union tree_node * D.257569;
  union tree_node * D.257568;
  struct value_type & D.257567;
  union tree_node * D.257566;
  unsigned int D.257565;
  union tree_node * D.257564;
  unsigned int D.257563;
  union tree_node * D.257562;
  struct value_type & D.257561;
  unsigned int D.257560;
  struct value_type & D.257559;
  union tree_node * D.257558;
  union tree_node * D.257557;
  struct value_type & D.257556;
  struct value_type & D.257555;
  union tree_node * D.257554;
  struct value_type & D.257553;
  struct gimple_array * D.257552;
  struct function * D.257550;
  bool D.257548;
  const char * D.257547;
  struct function * D.257546;
  bool D.257545;
  struct Graph * D.257544;
  struct function * D.257543;
  const char * D.257539;
  struct function * D.257538;
  bool D.257537;
  bool D.257536;
  struct Graph * D.257535;
  bool D.257534;
  bool D.257533;
  bool D.257532;
  bool D.257531;
  struct function * D.257530;
  union tree_node * D.257529;
  struct function_free_array * D.257528;
  struct function_free_array * D.257527;
  union tree_node * D.257526;
  struct function * D.257525;
  struct gimple_array * D.257524;
  const char * D.257519;
  union tree_node * D.257518;
  bool D.257517;
  struct function_free_array * D.257516;
  struct function_free_array * D.257515;
  const char * D.257511;
  struct function_relate_array * D.257510;
  struct function_relate_array * D.257509;
  const char * D.257507;
  int * D.257506;
  int * D.257505;
  void * D.257503;
  struct function_relate_array * D.257502;
  struct function_relate_array * D.257501;
  union tree_node * D.257497;
  union tree_node * D.257496;
  union tree_node * D.257495;
  union tree_node * D.257494;
  unsigned int D.257493;
  union tree_node * D.257492;
  unsigned int D.257491;
  union tree_node * D.257490;
  unsigned int D.257489;
  union tree_node * D.257488;
  union tree_node * D.257487;
  union tree_node * D.257486;
  unsigned int D.257485;
  const char * D.257484;
  union tree_node * D.257483;
  union tree_node * D.257482;
  const char * D.257481;
  union tree_node * D.257480;
  union tree_node * D.257479;
  const char * D.257477;
  union tree_node * D.257476;
  union tree_node * D.257475;
  const char * D.257474;
  union tree_node * D.257473;
  union tree_node * D.257472;
  union tree_node * D.257471;
  union tree_node * D.257470;
  const char * D.257469;
  const char * D.257468;
  const char * D.257467;
  union tree_node * D.257466;
  union tree_node * D.257465;
  union tree_node * D.257464;
  union tree_node * D.257463;
  const char * D.257462;
  const char * D.257461;
  const char * D.257460;
  union tree_node * D.257459;
  const char * D.257458;
  union tree_node * D.257457;
  union tree_node * D.257456;
  union tree_node * D.257455;
  union tree_node * D.257454;
  union tree_node * D.257453;
  bool D.257452;
  struct function_relate_array * D.257451;
  struct function_relate_array * D.257450;
  void * D.257448;
  struct gimple_array * D.257447;
  union tree_node * D.257446;
  const char * D.257445;
  union tree_node * D.257444;
  union tree_node * D.257443;
  const char * D.257442;
  const char * D.257441;
  union tree_node * D.257440;
  union tree_node * D.257439;
  const char * D.257438;
  struct function * D.257437;
  const char * D.257436;
  struct function_return_array * D.257432;
  const char * D.257431;
  const char * D.257430;
  int i;
  struct defmalloc_type defmalloc_type;
  union tree_node * arg;
  int k;
  struct gimple * def_stmt;
  union tree_node * callarg;
  int i;
  struct gimple_array start;
  struct edge_iterator ei;
  struct edge_def * e;
  struct basic_block_def * bb;
  int k;
  int k2;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  int k;
  struct gimple_array start;
  struct free_type free_type;
  int k;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  long unsigned int x;
  int k;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  long unsigned int x;
  struct gimple * def_stmt;
  int max_bb;
  int max_bb;
  int j;
  int i;
  struct iterator it_i;
  struct hash_map * function_maxbasicblock_collect;
  int freecount;
  union tree_node * findtree;
  union tree_node * findtree;
  const char * name;
  struct gimple * def_stmt;
  struct relate_type relate_type;
  struct gimple * finalstmt;
  struct free_type free_type;
  int lastbasicblock;
  struct function_relate_array maxbb_array;
  struct vector maxbb_type_array;
  struct gimple * laststmt;
  union tree_node * lastfucntion;
  struct hash_map * function_maxbb_collect;
  const char * name;
  const char * name;
  struct vector earlyend;
  struct gimple * def_stmt;
  const char * name;
  struct vector free_array;
  int init_check_table_stmt;
  int find_mallocstmt;
  int is_pthread_detched;
  int find_pthread_join;
  int find_pthread_detched;
  int find_retheapstmt;
  int find_freestmt;
  int find_phistmt;
  int childptable_type;
  int ptable_type;
  int find_Looserulesfreestmt;
  int k;
  int find_thread_count;
  int find_thread;
  struct vector funcalleeRetTypearray;
  struct function_return_array find_fun_array;
  struct vector defmalloc_array;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * user_tmp2;
  struct gimple_array * used_stmt2;
  struct gimple_array * used_stmt;
  struct gimple_array start2;
  struct gimple_array start;
  struct gimple * u_stmt2;
  struct gimple * u_stmt;
  union tree_node * iftmp.1911;
  bool retval.1888;
  bool retval.1863;
  struct gimple * iftmp.1832;
  bool retval.1831;
  bool retval.1824;
  bool retval.1821;
  bool retval.1820;
  bool retval.1819;
  bool retval.1818;
  bool retval.1817;
  bool retval.1816;
  bool retval.1814;
  bool retval.1813;
  bool retval.1812;
  bool retval.1811;
  bool retval.1810;
  bool retval.1809;
  bool retval.1808;
  bool retval.1807;
  struct gimple * iftmp.1806;
  struct gimple * iftmp.1801;
  bool retval.1800;
  bool retval.1799;
  bool retval.1798;
  bool retval.1794;
  bool retval.1786;
  bool iftmp.1784;
  bool retval.1783;
  bool retval.1781;
  bool retval.1780;
  bool retval.1779;
  bool retval.1777;
  bool retval.1776;
  bool retval.1771;
  bool retval.1767;
  bool iftmp.1765;
  bool retval.1764;
  bool retval.1763;
  bool retval.1762;
  bool iftmp.1761;
  bool retval.1760;
  bool retval.1759;
  bool retval.1756;
  bool retval.1754;
  bool retval.1753;
  struct gimple * iftmp.1752;
  bool retval.1748;
  bool retval.1744;
  bool retval.1743;
  bool retval.1740;
  bool retval.1734;
  bool retval.1725;
  struct hash_map * function_maxbb_collect.1721;
  struct iterator D.202800;
  bool retval.1720;
  bool retval.1718;
  bool retval.1712;
  bool retval.1711;
  bool retval.1710;
  bool retval.1709;
  bool retval.1708;
  void * D.202666;
  bool retval.1707;
  struct gimple * iftmp.1704;
  const char[16] * iftmp.1692;
  bool iftmp.1688;
  bool retval.1687;
  bool iftmp.1686;
  bool retval.1685;
  bool retval.1682;
  bool retval.1681;
  bool retval.1679;
  bool retval.1678;
  bool iftmp.1656;
  bool retval.1655;
  bool retval.1646;
  bool retval.1645;
  bool retval.1634;
  bool retval.1631;
  bool retval.1630;
  bool retval.1611;
  bool iftmp.1605;
  bool retval.1604;
  bool retval.1603;
  bool iftmp.1580;
  bool retval.1579;
  bool retval.1578;
  bool retval.1566;
  bool retval.1557;
  bool retval.1556;
  bool retval.1555;
  bool retval.1554;
  bool retval.1553;
  bool retval.1552;
  bool retval.1547;
  struct gimple * iftmp.1545;
  bool retval.1540;
  void * D.202651;
  bool retval.1527;
  bool retval.1526;
  bool retval.1519;
  bool retval.1518;
  bool retval.1513;
  union tree_node * iftmp.1512;
  bool retval.1508;
  bool retval.1505;
  bool retval.1496;

  <bb 2> :
  gimple_array::gimple_array (&start);
  gimple_array::gimple_array (&start2);
  start.stmt = 0B;
  start2.stmt = 0B;
  used_stmt = &start;
  used_stmt2 = &start;
  user_tmp2 = user_tmp;
  table_temp = ptable;
  goto <bb 4>; [INV]

  <bb 3> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 4> :
  _1 = std::vector<tree_node*>::size (&traceStack);
  retval.1496 = _1 != 0;
  if (retval.1496 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  function_tree.1497_2 = function_tree;
  D.257430 = get_name (function_tree.1497_2);

  <bb 6> :
  _3 = D.257430;
  stderr.1498_4 = stderr;
  fprintf2 (stderr.1498_4, "\x1b[40;42m =======pre_check_funciton:%s========= \x1b[0m\n", _3);

  <bb 7> :
  calleetype.1499_5 = (unsigned int) calleetype;
  FUNCITON_THREAD.1500_6 = FUNCITON_THREAD;
  if (calleetype.1499_5 == FUNCITON_THREAD.1500_6)
    goto <bb 8>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 8> :
  threadmod.1501_7 = threadmod;
  _8 = (int) threadmod.1501_7;
  if (_8 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 9> :
  function_return_array::function_return_array (&find_fun_array);
  function_tree.1502_9 = function_tree;
  D.257431 = get_name (function_tree.1502_9);

  <bb 10> :
  _10 = D.257431;
  stderr.1503_11 = stderr;
  fprintf2 (stderr.1503_11, "\x1b[40;42m =======thread job funciton:%s========= \x1b[0m\n", _10);

  <bb 11> :
  function_return_collect.1504_12 = function_return_collect;
  D.257432 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1504_12, &function_tree);

  <bb 12> :
  _13 = D.257432;
  function_return_array::operator= (&find_fun_array, _13);

  <bb 13> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 14> :
  find_thread = 0;
  find_thread_count = 0;
  k = 0;
  goto <bb 21>; [INV]

  <bb 15> :
  _14 = (long unsigned int) k;
  _15 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _14);
  _16 = _15->return_type_stmt_num;
  _17 = (unsigned int) _16;
  FUNCITON_THREAD.1506_18 = FUNCITON_THREAD;
  retval.1505 = _17 == FUNCITON_THREAD.1506_18;
  if (retval.1505 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  _19 = (long unsigned int) k;
  _20 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _19);
  _21 = _20->return_type_stmt_num;
  stderr.1507_22 = stderr;
  fprintf2 (stderr.1507_22, "\x1b[40;44m ======= print pthread lock stmt %d ========  \x1b[0m\n", _21);

  <bb 17> :
  _23 = (long unsigned int) k;
  _24 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _23);
  _25 = _24->stmt;
  debug_gimple_stmt2 (_25);

  <bb 18> :
  _26 = (long unsigned int) k;
  _27 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _26);
  _28 = _27->stmt;
  _29 = gimple_location_safe (_28);
  warning_at2 (_29, 0, "use location");

  <bb 19> :
  find_thread_count = find_thread_count + 1;

  <bb 20> :
  k = k + 1;

  <bb 21> :
  _30 = (long unsigned int) k;
  _31 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.1508 = _30 < _31;
  if (retval.1508 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  stderr.1509_32 = stderr;
  fprintf2 (stderr.1509_32, "\x1b[40;42m =======thread job funciton lock count :%d========= \x1b[0m\n", find_thread_count);

  <bb 23> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 24> :
  function_tree.1510_33 = function_tree;
  D.257436 = get_name (function_tree.1510_33);

  <bb 25> :
  _34 = D.257436;
  stderr.1511_35 = stderr;
  fprintf2 (stderr.1511_35, "\x1b[40;42m =======start_check_funciton:%s========= \x1b[0m\n", _34);

  <bb 26> :
  std::vector<defmalloc_type>::vector (&defmalloc_array);
  if (table_temp != 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  iftmp.1512 = table_temp->target;
  goto <bb 29>; [INV]

  <bb 28> :
  iftmp.1512 = 0B;

  <bb 29> :
  t = iftmp.1512;
  goto <bb 809>; [INV]

  <bb 30> :
  find_Looserulesfreestmt = 0;
  ptable_type = 0;
  childptable_type = 0;
  find_phistmt = 0;
  find_freestmt = 0;
  find_retheapstmt = -2;
  find_pthread_detched = 0;
  find_pthread_join = 0;
  is_pthread_detched = 0;
  find_mallocstmt = 0;
  init_check_table_stmt = 0;
  _36 = table_temp->node;
  D.257437 = cgraph_node::get_fun (_36);

  <bb 31> :
  _37 = D.257437;
  _38 = _37->decl;
  function_tree.1514_39 = function_tree;
  retval.1513 = _38 == function_tree.1514_39;
  if (retval.1513 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 804>; [INV]

  <bb 32> :
  _40 = table_temp->target;
  if (_40 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 804>; [INV]

  <bb 33> :
  std::vector<free_type>::vector (&free_array);
  find_phistmt = 0;
  find_mallocstmt = find_phistmt;
  find_freestmt = find_mallocstmt;
  stderr.1515_41 = stderr;
  fprintf2 (stderr.1515_41, "\ndot graph START\n");

  <bb 34> :
  stderr.1516_42 = stderr;
  fprintf2 (stderr.1516_42, "\n======================================================================\n");

  <bb 35> :
  name = "";
  _43 = table_temp->target;
  _44 = _43->base.code;
  if (_44 == 26)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _45 = table_temp->target;
  _46 = _45->base.code;
  if (_46 == 32)
    goto <bb 37>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 37> :
  stderr.1517_47 = stderr;
  fprintf2 (stderr.1517_47, "\n ================== collect possiable invalid ================== \n");

  <bb 38> :
  _48 = table_temp->target;
  debug_tree2 (_48);

  <bb 39> :
  // predicted unlikely by continue predictor.
  finally_tmp.1912 = 0;
  goto <bb 800>; [INV]

  <bb 40> :
  _49 = table_temp->target;
  def_stmt = _49->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 41>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 41> :
  _50 = table_temp->target;
  _51 = _50->base.code;
  if (_51 != 36)
    goto <bb 42>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 42> :
  _52 = table_temp->target;
  _53 = _52->base.code;
  if (_53 != 38)
    goto <bb 43>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 43> :
  _54 = table_temp->target;
  debug_tree2 (_54);

  <bb 44> :
  if (def_stmt != 0B)
    goto <bb 45>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 45> :
  _55 = table_temp->target;
  debug_tree2 (_55);

  <bb 46> :
  _56 = table_temp->target;
  _57 = _56->base.code;
  if (_57 == 33)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _58 = table_temp->target;
  D.257438 = get_name (_58);

  <bb 48> :
  name = D.257438;
  goto <bb 57>; [INV]

  <bb 49> :
  _59 = table_temp->target;
  _60 = _59->base.code;
  if (_60 != 131)
    goto <bb 50>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 50> :
  _61 = table_temp->target;
  _62 = _61->base.code;
  if (_62 != 0)
    goto <bb 51>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 51> :
  retval.1518 = is_gimple_call (def_stmt);
  if (retval.1518 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 52> :
  D.257439 = gimple_call_fndecl (def_stmt);

  <bb 53> :
  _63 = D.257439;
  retval.1519 = _63 != 0B;
  if (retval.1519 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 54> :
  D.257440 = gimple_call_fndecl (def_stmt);

  <bb 55> :
  _64 = D.257440;
  D.257441 = get_name (_64);

  <bb 56> :
  name = D.257441;

  <bb 57> :
  stderr.1520_65 = stderr;
  fprintf2 (stderr.1520_65, "\n ================== pre trace ptable ================== \n");

  <bb 58> :
  if (def_stmt != 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 59> :
  _66 = table_temp->target;
  _67 = _66->base.code;
  if (_67 == 33)
    goto <bb 60>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 60> :
  _68 = table_temp->target;
  D.257442 = get_name (_68);

  <bb 61> :
  name = D.257442;
  stderr.1521_69 = stderr;
  fprintf2 (stderr.1521_69, "trace fucntion name:%s \n", name);

  <bb 62> :
  _70 = table_temp->target;
  RET_HEAP_OBJECT.1522_71 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1523_72 = (int) RET_HEAP_OBJECT.1522_71;
  _73 = table_temp->target;
  trace_function_path (_73, RET_HEAP_OBJECT.1523_72, _70, &find_retheapstmt);

  <bb 63> :
  find_retheapstmt.1524_74 = find_retheapstmt;
  if (find_retheapstmt.1524_74 > 0)
    goto <bb 64>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 64> :
  stderr.1525_75 = stderr;
  fprintf2 (stderr.1525_75, "some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n");
  goto <bb 77>; [INV]

  <bb 65> :
  _76 = table_temp->target;
  _77 = _76->base.code;
  if (_77 != 131)
    goto <bb 66>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 66> :
  _78 = table_temp->target;
  _79 = _78->base.code;
  if (_79 != 38)
    goto <bb 67>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 67> :
  retval.1526 = is_gimple_call (def_stmt);
  if (retval.1526 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 68> :
  D.257443 = gimple_call_fn (def_stmt);

  <bb 69> :
  _80 = D.257443;
  retval.1527 = _80 != 0B;
  if (retval.1527 != 0)
    goto <bb 70>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 70> :
  D.257444 = gimple_call_fn (def_stmt);

  <bb 71> :
  _81 = D.257444;
  D.257445 = get_name (_81);

  <bb 72> :
  name = D.257445;
  stderr.1528_82 = stderr;
  fprintf2 (stderr.1528_82, "trace fucntion name:%s \n", name);

  <bb 73> :
  _83 = table_temp->target;
  RET_HEAP_OBJECT.1529_84 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1530_85 = (int) RET_HEAP_OBJECT.1529_84;
  D.257446 = gimple_call_fndecl (def_stmt);

  <bb 74> :
  _86 = D.257446;
  trace_function_path (_86, RET_HEAP_OBJECT.1530_85, _83, &find_retheapstmt);

  <bb 75> :
  find_retheapstmt.1531_87 = find_retheapstmt;
  if (find_retheapstmt.1531_87 > 0)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  stderr.1532_88 = stderr;
  fprintf2 (stderr.1532_88, "some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n");

  <bb 77> :
  stderr.1533_89 = stderr;
  fprintf2 (stderr.1533_89, "\n ================== pre trace ptable finish================== \n");

  <bb 78> :
  goto <bb 81>; [INV]

  <bb 79> :
  _90 = table_temp->target;
  debug_tree2 (_90);

  <bb 80> :
  stderr.1534_91 = stderr;
  fprintf2 (stderr.1534_91, "\n ================== this stmt hava call fucntion ================== \n");

  <bb 81> :

  <bb 82> :
  if (name != 0B)
    goto <bb 83>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 83> :
  _92 = strcmp (name, "realloc");
  if (_92 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 84> :
  _93 = strcmp (name, "malloc");
  if (_93 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 85> :
  _94 = strcmp (name, "xmalloc");
  if (_94 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  _95 = strcmp (name, "calloc");
  if (_95 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 87> :
  _96 = strcmp (name, "xcalloc");
  if (_96 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  _97 = strcmp (name, "strdup");
  if (_97 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 89> :
  _98 = strcmp (name, "xstrdup");
  if (_98 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 90> :
  IS_MALLOC_FUCNTION.1535_99 = IS_MALLOC_FUCNTION;
  ptable_type = (int) IS_MALLOC_FUCNTION.1535_99;
  stderr.1536_100 = stderr;
  fprintf2 (stderr.1536_100, "is Reserved word function :%s\n", name);

  <bb 91> :
  goto <bb 94>; [INV]

  <bb 92> :
  IS_OTHRER_FUCNTION.1537_101 = IS_OTHRER_FUCNTION;
  ptable_type = (int) IS_OTHRER_FUCNTION.1537_101;
  _102 = table_temp->target;
  debug_tree2 (_102);

  <bb 93> :
  stderr.1538_103 = stderr;
  fprintf2 (stderr.1538_103, "is Other function %s\n", name);

  <bb 94> :

  <bb 95> :
  treeGimpleArray.1539_104 = treeGimpleArray;
  _105 = &table_temp->target;
  D.257447 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1539_104, _105);

  <bb 96> :
  user_tmp = D.257447;
  std::vector<basic_block_def*>::vector (&earlyend);
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 97>; [INV]
  else
    goto <bb 720>; [INV]

  <bb 97> :
  D.257448 = operator new (48);

  <bb 98> :
  D.202651 = D.257448;
  hash_map<tree_node*, function_relate_array>::hash_map (D.202651, 13, 0, 1, 0);

  <bb 99> :
  function_maxbb_collect = D.202651;
  lastfucntion = 0B;
  laststmt = 0B;
  std::vector<relate_type>::vector (&maxbb_type_array);
  function_relate_array::function_relate_array (&maxbb_array);
  _106 = &table_temp->target;
  D.257450 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _106);

  <bb 100> :
  _107 = D.257450;
  retval.1540 = _107 == 0B;
  if (retval.1540 != 0)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  std::vector<relate_type>::operator= (&maxbb_array.relate_type_array, &maxbb_type_array);
  goto <bb 105>; [INV]

  <bb 102> :
  _108 = &table_temp->target;
  D.257451 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _108);

  <bb 103> :
  _109 = D.257451;
  function_relate_array::operator= (&maxbb_array, _109);

  <bb 104> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 105> :
  lastbasicblock = -1;
  _110 = table_temp->swap_type;
  _111 = (unsigned int) _110;
  FUNCITON_THREAD.1541_112 = FUNCITON_THREAD;
  if (_111 == FUNCITON_THREAD.1541_112)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  stderr.1542_113 = stderr;
  fprintf2 (stderr.1542_113, " \n Start is Pthread Job Collect  \n");
  goto <bb 108>; [INV]

  <bb 107> :
  stderr.1543_114 = stderr;
  fprintf2 (stderr.1543_114, " \n Start check Pointer Collect  \n");

  <bb 108> :
  stderr.1544_115 = stderr;
  fprintf2 (stderr.1544_115, "\n======================================================================\n");

  <bb 109> :
  _116 = user_tmp->size;
  if (_116 > 0)
    goto <bb 110>; [INV]
  else
    goto <bb 463>; [INV]

  <bb 110> :
  if (user_tmp != 0B)
    goto <bb 111>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 111> :
  iftmp.1545 = user_tmp->stmt;
  goto <bb 113>; [INV]

  <bb 112> :
  iftmp.1545 = 0B;

  <bb 113> :
  u_stmt = iftmp.1545;
  goto <bb 424>; [INV]

  <bb 114> :
  stmtloopcheck.1546_117 = stmtloopcheck;
  if (stmtloopcheck.1546_117 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 115> :
  _118 = gimple_bb (u_stmt);
  D.257452 = bb_in_loop_p (_118);

  <bb 116> :
  retval.1547 = D.257452;
  if (retval.1547 != 0)
    goto <bb 117>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 117> :
  stderr.1548_119 = stderr;
  fprintf2 (stderr.1548_119, "\n======================================================================\n");

  <bb 118> :
  stderr.1549_120 = stderr;
  fprintf2 (stderr.1549_120, "\x1b[40;31m    collect Stmt in loop \x1b[0m\n");

  <bb 119> :
  stderr.1550_121 = stderr;
  fprintf2 (stderr.1550_121, "\n======================================================================\n");

  <bb 120> :
  samefucntioncheck.1551_122 = samefucntioncheck;
  if (samefucntioncheck.1551_122 != 0)
    goto <bb 121>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 121> :
  _123 = table_temp->last_stmt;
  _124 = gimple_code (_123);
  retval.1552 = _124 == 8;
  if (retval.1552 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 122> :
  _125 = gimple_code (u_stmt);
  retval.1553 = _125 == 8;
  if (retval.1553 != 0)
    goto <bb 123>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 123> :
  _126 = table_temp->last_stmt;
  D.257453 = gimple_call_fn (_126);

  <bb 124> :
  _127 = D.257453;
  retval.1554 = _127 != 0B;
  if (retval.1554 != 0)
    goto <bb 125>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 125> :
  D.257454 = gimple_call_fn (u_stmt);

  <bb 126> :
  _128 = D.257454;
  retval.1555 = _128 != 0B;
  if (retval.1555 != 0)
    goto <bb 127>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 127> :
  _129 = table_temp->last_stmt;
  D.257455 = gimple_call_fn (_129);

  <bb 128> :
  _130 = D.257455;
  D.257456 = gimple_call_fn (u_stmt);

  <bb 129> :
  _131 = D.257456;
  retval.1556 = _130 == _131;
  if (retval.1556 != 0)
    goto <bb 130>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 130> :
  _132 = table_temp->last_stmt;
  if (u_stmt == _132)
    goto <bb 131>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 131> :
  debug_gimple_stmt2 (u_stmt);
  goto <bb 147>; [INV]

  <bb 132> :
  D.257457 = gimple_call_fn (u_stmt);

  <bb 133> :
  _133 = D.257457;
  D.257458 = get_name (_133);

  <bb 134> :
  name = D.257458;
  if (name != 0B)
    goto <bb 135>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 135> :
  _134 = table_temp->last_stmt;
  D.257459 = gimple_call_fn (_134);

  <bb 136> :
  _135 = D.257459;
  D.257460 = get_name (_135);

  <bb 137> :
  _136 = D.257460;
  _137 = strcmp (name, _136);
  retval.1557 = _137 == 0;
  if (retval.1557 != 0)
    goto <bb 138>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 138> :
  stderr.1558_138 = stderr;
  fprintf2 (stderr.1558_138, "\n======================================================================\n");

  <bb 139> :
  stderr.1559_139 = stderr;
  fprintf2 (stderr.1559_139, "\n Expand conflict \n", name);

  <bb 140> :
  stderr.1560_140 = stderr;
  fprintf2 (stderr.1560_140, " The same function may have multiple branches :%s\n", name);

  <bb 141> :
  _141 = table_temp->last_stmt;
  debug_gimple_stmt2 (_141);

  <bb 142> :
  _142 = table_temp->last_stmt;
  _143 = gimple_location_safe (_142);
  warning_at2 (_143, 0, "use location");

  <bb 143> :
  debug_gimple_stmt2 (u_stmt);

  <bb 144> :
  _144 = gimple_location_safe (u_stmt);
  warning_at2 (_144, 0, "use location");

  <bb 145> :
  _145 = gimple_bb (u_stmt);
  _146 = table_temp->node;
  check_bbinfo (_146, _145);

  <bb 146> :
  // predicted unlikely by continue predictor.
  goto <bb 419>; [INV]

  <bb 147> :
  free_type::free_type (&free_type);
  memoryleakcheck.1561_147 = memoryleakcheck;
  if (memoryleakcheck.1561_147 != 0)
    goto <bb 148>; [INV]
  else
    goto <bb 418>; [INV]

  <bb 148> :
  _148 = user_tmp->ret_stmt;
  if (_148 != 0B)
    goto <bb 149>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 149> :
  debugmod.1562_149 = debugmod;
  if (debugmod.1562_149 != 0)
    goto <bb 150>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 150> :
  function_tree.1563_150 = function_tree;
  D.257461 = get_name (function_tree.1563_150);

  <bb 151> :
  _151 = D.257461;
  stderr.1564_152 = stderr;
  fprintf2 (stderr.1564_152, "dot graph entry %s\n", _151);

  <bb 152> :
  stderr.1565_153 = stderr;
  fprintf2 (stderr.1565_153, "dot graph target entry end\n\n");

  <bb 153> :
  _154 = user_tmp->ret_stmt;
  _155 = gimple_code (_154);
  retval.1566 = _155 == 10;
  if (retval.1566 != 0)
    goto <bb 154>; [INV]
  else
    goto <bb 418>; [INV]

  <bb 154> :
  _156 = user_tmp->ret_stmt;
  debug2 (_156);

  <bb 155> :
  _157 = user_tmp->ret_stmt;
  _158 = gimple_location_safe (_157);
  warning_at2 (_158, 0, "use location");

  <bb 156> :
  _159 = user_tmp->ret_stmt;
  debug_gimple_stmt2 (_159);

  <bb 157> :
  _160 = user_tmp->ret_stmt;
  now_stmt = _160;
  debugmod.1567_161 = debugmod;
  if (debugmod.1567_161 != 0)
    goto <bb 158>; [INV]
  else
    goto <bb 418>; [INV]

  <bb 158> :
  stderr.1568_162 = stderr;
  fprintf2 (stderr.1568_162, "dot graph target loc start ");

  <bb 159> :
  _163 = user_tmp->ret_stmt;
  debug_gimple_stmt2 (_163);

  <bb 160> :
  _164 = user_tmp->ret_stmt;
  _165 = gimple_location_safe (_164);
  warning_at2 (_165, 0, "use location");

  <bb 161> :
  stderr.1569_166 = stderr;
  fprintf2 (stderr.1569_166, "dot graph target loc en1\n\n");

  <bb 162> :
  _167 = user_tmp->ret_stmt;
  _168 = gimple_bb (_167);
  _169 = _168->index;
  stderr.1570_170 = stderr;
  fprintf2 (stderr.1570_170, "dot graph target line desc form basic block %d: ", _169);

  <bb 163> :
  _171 = user_tmp->ret_stmt;
  debug_gimple_stmt2 (_171);

  <bb 164> :
  _172 = user_tmp->ret_stmt;
  _173 = gimple_location_safe (_172);
  warning_at2 (_173, 0, "use location");

  <bb 165> :
  stderr.1571_174 = stderr;
  fprintf2 (stderr.1571_174, "dot graph target line desend\n\n");

  <bb 166> :
  stderr.1572_175 = stderr;
  fprintf2 (stderr.1572_175, "dot graph target loc start ");

  <bb 167> :
  _176 = user_tmp->ret_stmt;
  debug_gimple_stmt2 (_176);

  <bb 168> :
  _177 = user_tmp->ret_stmt;
  _178 = gimple_location_safe (_177);
  warning_at2 (_178, 0, "use location");

  <bb 169> :
  stderr.1573_179 = stderr;
  fprintf2 (stderr.1573_179, "dot graph target loc end\n\n");

  <bb 170> :
  stderr.1574_180 = stderr;
  fprintf2 (stderr.1574_180, "dot graph target basicblock start ");

  <bb 171> :
  _181 = user_tmp->ret_stmt;
  _182 = gimple_bb (_181);
  _183 = _182->index;
  function_tree.1575_184 = function_tree;
  D.257462 = get_name (function_tree.1575_184);

  <bb 172> :
  _185 = D.257462;
  stderr.1576_186 = stderr;
  fprintf2 (stderr.1576_186, "from %s basic block %d", _185, _183);

  <bb 173> :
  stderr.1577_187 = stderr;
  fprintf2 (stderr.1577_187, "dot graph target basicblock end\n\n");

  <bb 174> :
  _188 = user_tmp->ret_stmt;
  D.257463 = gimple_block (_188);

  <bb 175> :
  _189 = D.257463;
  retval.1578 = _189 != 0B;
  if (retval.1578 != 0)
    goto <bb 176>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 176> :
  _190 = user_tmp->ret_stmt;
  D.257464 = gimple_block (_190);

  <bb 177> :
  _191 = D.257464;
  _192 = _191->block.supercontext;
  _193 = _192->base.code;
  if (_193 == 33)
    goto <bb 178>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 178> :
  _194 = user_tmp->ret_stmt;
  D.257465 = gimple_block (_194);

  <bb 179> :
  _195 = D.257465;
  _196 = _195->block.supercontext;
  function_tree.1581_197 = function_tree;
  if (_196 != function_tree.1581_197)
    goto <bb 180>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 180> :
  iftmp.1580 = 1;
  goto <bb 182>; [INV]

  <bb 181> :
  iftmp.1580 = 0;

  <bb 182> :
  retval.1579 = iftmp.1580;
  if (retval.1579 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 183> :
  stderr.1582_198 = stderr;
  fprintf2 (stderr.1582_198, "dot graph target basicblock star1 ");

  <bb 184> :
  _199 = user_tmp->ret_stmt;
  _200 = gimple_bb (_199);
  _201 = _200->index;
  _202 = user_tmp->ret_stmt;
  D.257466 = gimple_block (_202);

  <bb 185> :
  _203 = D.257466;
  _204 = _203->block.supercontext;
  D.257467 = get_name (_204);

  <bb 186> :
  _205 = D.257467;
  stderr.1583_206 = stderr;
  fprintf2 (stderr.1583_206, "from %s basic block %d", _205, _201);

  <bb 187> :
  stderr.1584_207 = stderr;
  fprintf2 (stderr.1584_207, "dot graph target basicblock end\n\n");

  <bb 188> :
  stderr.1585_208 = stderr;
  fprintf2 (stderr.1585_208, "dot graph stmt start ");

  <bb 189> :
  _209 = user_tmp->ret_stmt;
  debug2 (_209);

  <bb 190> :
  _210 = user_tmp->ret_stmt;
  _211 = gimple_location_safe (_210);
  warning_at2 (_211, 0, "use location");

  <bb 191> :
  stderr.1586_212 = stderr;
  fprintf2 (stderr.1586_212, "dot graph stmt end\n\n");
  goto <bb 418>; [INV]

  <bb 192> :
  _213 = user_tmp->target;
  if (_213 != 0B)
    goto <bb 193>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 193> :
  debugmod.1587_214 = debugmod;
  if (debugmod.1587_214 != 0)
    goto <bb 194>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 194> :
  function_tree.1588_215 = function_tree;
  D.257468 = get_name (function_tree.1588_215);

  <bb 195> :
  _216 = D.257468;
  stderr.1589_217 = stderr;
  fprintf2 (stderr.1589_217, "dot graph entry %s\n", _216);

  <bb 196> :
  stderr.1590_218 = stderr;
  fprintf2 (stderr.1590_218, "dot graph target entry end\n\n");

  <bb 197> :
  finalstmt = u_stmt;
  debug2 (u_stmt);

  <bb 198> :
  _219 = gimple_location_safe (u_stmt);
  warning_at2 (_219, 0, "use location");

  <bb 199> :
  now_stmt = u_stmt;
  debugmod.1591_220 = debugmod;
  if (debugmod.1591_220 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 200> :
  stderr.1592_221 = stderr;
  fprintf2 (stderr.1592_221, "dot graph target loc start ");

  <bb 201> :
  _222 = table_temp->last_stmt;
  debug_gimple_stmt2 (_222);

  <bb 202> :
  _223 = table_temp->last_stmt;
  _224 = gimple_location_safe (_223);
  warning_at2 (_224, 0, "use location");

  <bb 203> :
  stderr.1593_225 = stderr;
  fprintf2 (stderr.1593_225, "dot graph target loc en1\n\n");

  <bb 204> :
  _226 = gimple_bb (u_stmt);
  _227 = _226->index;
  stderr.1594_228 = stderr;
  fprintf2 (stderr.1594_228, "dot graph target line desc form basic block %d: ", _227);

  <bb 205> :
  debug2 (u_stmt);

  <bb 206> :
  _229 = gimple_location_safe (u_stmt);
  warning_at2 (_229, 0, "use location");

  <bb 207> :
  stderr.1595_230 = stderr;
  fprintf2 (stderr.1595_230, "dot graph target line desend\n\n");

  <bb 208> :
  stderr.1596_231 = stderr;
  fprintf2 (stderr.1596_231, "dot graph target loc start ");

  <bb 209> :
  _232 = table_temp->last_stmt;
  debug_gimple_stmt2 (_232);

  <bb 210> :
  _233 = table_temp->last_stmt;
  _234 = gimple_location_safe (_233);
  warning_at2 (_234, 0, "use location");

  <bb 211> :
  stderr.1597_235 = stderr;
  fprintf2 (stderr.1597_235, "dot graph target loc end\n\n");

  <bb 212> :
  stderr.1598_236 = stderr;
  fprintf2 (stderr.1598_236, "dot graph target basicblock start ");

  <bb 213> :
  _237 = gimple_bb (u_stmt);
  _238 = _237->index;
  function_tree.1599_239 = function_tree;
  D.257469 = get_name (function_tree.1599_239);

  <bb 214> :
  _240 = D.257469;
  stderr.1600_241 = stderr;
  fprintf2 (stderr.1600_241, "from %s basic block %d", _240, _238);

  <bb 215> :
  stderr.1601_242 = stderr;
  fprintf2 (stderr.1601_242, "dot graph target basicblock en1\n\n");

  <bb 216> :
  relate_type::relate_type (&relate_type);
  function_tree.1602_243 = function_tree;
  relate_type.relate_funtree = function_tree.1602_243;
  D.257470 = gimple_block (u_stmt);

  <bb 217> :
  _244 = D.257470;
  retval.1603 = _244 != 0B;
  if (retval.1603 != 0)
    goto <bb 218>; [INV]
  else
    goto <bb 233>; [INV]

  <bb 218> :
  D.257471 = gimple_block (u_stmt);

  <bb 219> :
  _245 = D.257471;
  _246 = _245->block.supercontext;
  _247 = _246->base.code;
  if (_247 == 33)
    goto <bb 220>; [INV]
  else
    goto <bb 223>; [INV]

  <bb 220> :
  D.257472 = gimple_block (u_stmt);

  <bb 221> :
  _248 = D.257472;
  _249 = _248->block.supercontext;
  function_tree.1606_250 = function_tree;
  if (_249 != function_tree.1606_250)
    goto <bb 222>; [INV]
  else
    goto <bb 223>; [INV]

  <bb 222> :
  iftmp.1605 = 1;
  goto <bb 224>; [INV]

  <bb 223> :
  iftmp.1605 = 0;

  <bb 224> :
  retval.1604 = iftmp.1605;
  if (retval.1604 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 232>; [INV]

  <bb 225> :
  stderr.1607_251 = stderr;
  fprintf2 (stderr.1607_251, "dot graph target basicblock star1 ");

  <bb 226> :
  _252 = gimple_bb (u_stmt);
  _253 = _252->index;
  D.257473 = gimple_block (u_stmt);

  <bb 227> :
  _254 = D.257473;
  _255 = _254->block.supercontext;
  D.257474 = get_name (_255);

  <bb 228> :
  _256 = D.257474;
  stderr.1608_257 = stderr;
  fprintf2 (stderr.1608_257, "from %s basic block %d", _256, _253);

  <bb 229> :
  stderr.1609_258 = stderr;
  fprintf2 (stderr.1609_258, "dot graph target basicblock end\n\n");

  <bb 230> :
  D.257475 = gimple_block (u_stmt);

  <bb 231> :
  _259 = D.257475;
  _260 = _259->block.supercontext;
  relate_type.relate_funtree = _260;
  goto <bb 233>; [INV]

  <bb 232> :
  function_tree.1610_261 = function_tree;
  relate_type.relate_funtree = function_tree.1610_261;

  <bb 233> :
  _262 = table_temp->last_stmt;
  relate_type.laststmt = _262;
  relate_type.stmt = u_stmt;
  _263 = user_tmp->target;
  relate_type.relate_tree = _263;
  _264 = gimple_bb (u_stmt);
  _265 = _264->index;
  relate_type.now_basicblock = _265;
  std::vector<relate_type>::push_back (&maxbb_array.relate_type_array, &relate_type);

  <bb 234> :
  _266 = &table_temp->target;
  hash_map<tree_node*, function_relate_array>::put (function_maxbb_collect, _266, &maxbb_array);

  <bb 235> :
  _267 = gimple_code (u_stmt);
  retval.1611 = _267 == 8;
  if (retval.1611 != 0)
    goto <bb 236>; [INV]
  else
    goto <bb 265>; [INV]

  <bb 236> :
  debugmod.1612_268 = debugmod;
  if (debugmod.1612_268 != 0)
    goto <bb 237>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 237> :
  stderr.1613_269 = stderr;
  fprintf2 (stderr.1613_269, "dot graph stmt start ");

  <bb 238> :
  debug2 (finalstmt);

  <bb 239> :
  _270 = table_temp->last_stmt;
  debug2 (_270);

  <bb 240> :
  stderr.1614_271 = stderr;
  fprintf2 (stderr.1614_271, "dot graph stmt end\n\n");

  <bb 241> :
  D.257476 = gimple_call_fn (u_stmt);

  <bb 242> :
  _272 = D.257476;
  D.257477 = get_name (_272);

  <bb 243> :
  name = D.257477;
  if (name != 0B)
    goto <bb 244>; [INV]
  else
    goto <bb 274>; [INV]

  <bb 244> :
  _273 = strcmp (name, "free");
  if (_273 == 0)
    goto <bb 247>; [INV]
  else
    goto <bb 245>; [INV]

  <bb 245> :
  _274 = strcmp (name, "xfree");
  if (_274 == 0)
    goto <bb 247>; [INV]
  else
    goto <bb 246>; [INV]

  <bb 246> :
  _275 = strcmp (name, "realloc");
  if (_275 == 0)
    goto <bb 247>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 247> :
  stderr.1615_276 = stderr;
  fprintf2 (stderr.1615_276, "dot graph stmt start ");

  <bb 248> :
  debug2 (u_stmt);

  <bb 249> :
  _277 = gimple_location_safe (u_stmt);
  warning_at2 (_277, 0, "use location");

  <bb 250> :
  stderr.1616_278 = stderr;
  fprintf2 (stderr.1616_278, "dot graph stmt end\n\n");

  <bb 251> :
  freemod.1617_279 = freemod;
  if (freemod.1617_279 != 0)
    goto <bb 252>; [INV]
  else
    goto <bb 257>; [INV]

  <bb 252> :
  stderr.1618_280 = stderr;
  fprintf2 (stderr.1618_280, "dot graph target color desc");

  <bb 253> :
  _281 = strcmp (name, "realloc");
  if (_281 == 0)
    goto <bb 254>; [INV]
  else
    goto <bb 255>; [INV]

  <bb 254> :
  stderr.1619_282 = stderr;
  fprintf2 (stderr.1619_282, "red");
  goto <bb 256>; [INV]

  <bb 255> :
  stderr.1620_283 = stderr;
  fprintf2 (stderr.1620_283, "green");

  <bb 256> :
  stderr.1621_284 = stderr;
  fprintf2 (stderr.1621_284, "dot graph target color desend\n\n");

  <bb 257> :
  _285 = strcmp (name, "realloc");
  if (_285 == 0)
    goto <bb 258>; [INV]
  else
    goto <bb 259>; [INV]

  <bb 258> :
  stderr.1622_286 = stderr;
  fprintf2 (stderr.1622_286, "If realloc() fails, the initial memory block will not be freed() ");

  <bb 259> :
  goto <bb 264>; [INV]

  <bb 260> :
  stderr.1623_287 = stderr;
  fprintf2 (stderr.1623_287, "dot graph stmt start ");

  <bb 261> :
  debug2 (u_stmt);

  <bb 262> :
  _288 = gimple_location_safe (u_stmt);
  warning_at2 (_288, 0, "use location");

  <bb 263> :
  stderr.1624_289 = stderr;
  fprintf2 (stderr.1624_289, "dot graph stmt end\n\n");

  <bb 264> :
  goto <bb 274>; [INV]

  <bb 265> :
  debugmod.1625_290 = debugmod;
  if (debugmod.1625_290 != 0)
    goto <bb 266>; [INV]
  else
    goto <bb 270>; [INV]

  <bb 266> :
  stderr.1626_291 = stderr;
  fprintf2 (stderr.1626_291, "dot graph stmt start ");

  <bb 267> :
  debug2 (u_stmt);

  <bb 268> :
  _292 = table_temp->last_stmt;
  debug2 (_292);

  <bb 269> :
  stderr.1627_293 = stderr;
  fprintf2 (stderr.1627_293, "dot graph stmt end\n\n");

  <bb 270> :
  stderr.1628_294 = stderr;
  fprintf2 (stderr.1628_294, "dot graph stmt start ");

  <bb 271> :
  debug2 (u_stmt);

  <bb 272> :
  _295 = gimple_location_safe (u_stmt);
  warning_at2 (_295, 0, "use location");

  <bb 273> :
  stderr.1629_296 = stderr;
  fprintf2 (stderr.1629_296, "dot graph stmt end\n\n");

  <bb 274> :
  relate_type = {CLOBBER};

  <bb 275> :
  _297 = user_tmp->target;
  if (_297 != 0B)
    goto <bb 276>; [INV]
  else
    goto <bb 418>; [INV]

  <bb 276> :
  _298 = gimple_code (u_stmt);
  retval.1630 = _298 == 8;
  if (retval.1630 != 0)
    goto <bb 277>; [INV]
  else
    goto <bb 284>; [INV]

  <bb 277> :
  D.257479 = gimple_call_fndecl (u_stmt);

  <bb 278> :
  _299 = D.257479;
  retval.1631 = _299 != 0B;
  if (retval.1631 != 0)
    goto <bb 279>; [INV]
  else
    goto <bb 284>; [INV]

  <bb 279> :
  D.257480 = gimple_call_fndecl (u_stmt);

  <bb 280> :
  _300 = D.257480;
  D.257481 = get_name (_300);

  <bb 281> :
  name = D.257481;
  if (name != 0B)
    goto <bb 282>; [INV]
  else
    goto <bb 283>; [INV]

  <bb 282> :
  stderr.1632_301 = stderr;
  fprintf2 (stderr.1632_301, "this stmt call this function :%s\n", name);
  goto <bb 284>; [INV]

  <bb 283> :
  stderr.1633_302 = stderr;
  fprintf2 (stderr.1633_302, "this stmt call this function :null\n", name);

  <bb 284> :
  _303 = gimple_code (u_stmt);
  retval.1634 = _303 == 18;
  if (retval.1634 != 0)
    goto <bb 285>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 285> :
  find_phistmt = 1;
  stderr.1635_304 = stderr;
  fprintf2 (stderr.1635_304, "this stmt have mutiple branch ---%s-----\n", name);

  <bb 286> :
  if (name != 0B)
    goto <bb 287>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 287> :
  _305 = strcmp (name, "realloc");
  if (_305 == 0)
    goto <bb 294>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 288> :
  _306 = strcmp (name, "malloc");
  if (_306 == 0)
    goto <bb 294>; [INV]
  else
    goto <bb 289>; [INV]

  <bb 289> :
  _307 = strcmp (name, "xmalloc");
  if (_307 == 0)
    goto <bb 294>; [INV]
  else
    goto <bb 290>; [INV]

  <bb 290> :
  _308 = strcmp (name, "calloc");
  if (_308 == 0)
    goto <bb 294>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 291> :
  _309 = strcmp (name, "xcalloc");
  if (_309 == 0)
    goto <bb 294>; [INV]
  else
    goto <bb 292>; [INV]

  <bb 292> :
  _310 = strcmp (name, "strdup");
  if (_310 == 0)
    goto <bb 294>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 293> :
  _311 = strcmp (name, "xstrdup");
  if (_311 == 0)
    goto <bb 294>; [INV]
  else
    goto <bb 296>; [INV]

  <bb 294> :
  stderr.1636_312 = stderr;
  fprintf2 (stderr.1636_312, "\nThis stmt may duplicate memory requests.\n");

  <bb 295> :
  IS_MALLOC_FUCNTION.1637_313 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1637_313;
  goto <bb 297>; [INV]

  <bb 296> :
  IS_OTHRER_FUCNTION.1638_314 = IS_OTHRER_FUCNTION;
  find_mallocstmt = (int) IS_OTHRER_FUCNTION.1638_314;

  <bb 297> :

  <bb 298> :
  calleetype.1639_315 = (unsigned int) calleetype;
  FUNCITON_HEAP.1640_316 = FUNCITON_HEAP;
  if (calleetype.1639_315 == FUNCITON_HEAP.1640_316)
    goto <bb 299>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 299> :
  function_tree.1641_317 = function_tree;
  debug_tree2 (function_tree.1641_317);
  goto <bb 318>; [INV]

  <bb 300> :
  calleetype.1642_318 = (unsigned int) calleetype;
  FUNCITON_THREAD.1643_319 = FUNCITON_THREAD;
  if (calleetype.1642_318 == FUNCITON_THREAD.1643_319)
    goto <bb 301>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 301> :
  threadmod.1644_320 = threadmod;
  _321 = (int) threadmod.1644_320;
  if (_321 == 1)
    goto <bb 302>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 302> :
  _322 = gimple_code (finalstmt);
  retval.1645 = _322 == 6;
  if (retval.1645 != 0)
    goto <bb 303>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 303> :
  D.257482 = gimple_assign_lhs (finalstmt);

  <bb 304> :
  _323 = D.257482;
  _324 = BIT_FIELD_REF <_323->base, 8, 24>;
  _325 = _324 & 4;
  _326 = _325 == 0;
  _327 = (int) _326;
  retval.1646 = _327 == 1;
  if (retval.1646 != 0)
    goto <bb 305>; [INV]
  else
    goto <bb 310>; [INV]

  <bb 305> :
  stderr.1647_328 = stderr;
  fprintf2 (stderr.1647_328, " \n LOCAL VARIBALE  \n");

  <bb 306> :
  debug_gimple_stmt2 (finalstmt);

  <bb 307> :
  _329 = gimple_location_safe (finalstmt);
  warning_at2 (_329, 0, "use location");

  <bb 308> :
  stderr.1648_330 = stderr;
  fprintf2 (stderr.1648_330, " \n LOCAL VARIBALE  \n");

  <bb 309> :
  // predicted unlikely by continue predictor.
  goto <bb 419>; [INV]

  <bb 310> :
  stderr.1649_331 = stderr;
  fprintf2 (stderr.1649_331, "\n ================== warring  ================== \n");

  <bb 311> :
  stderr.1650_332 = stderr;
  fprintf2 (stderr.1650_332, "\x1b[40;35m warring thread fucntion detction is on \x1b[0m\n");

  <bb 312> :
  stderr.1651_333 = stderr;
  fprintf2 (stderr.1651_333, "\x1b[40;35m Detect GLOBAL VARIBALE \x1b[0m\n");

  <bb 313> :
  debug_gimple_stmt2 (finalstmt);

  <bb 314> :
  _334 = gimple_location_safe (finalstmt);
  warning_at2 (_334, 0, "use location");

  <bb 315> :
  stderr.1652_335 = stderr;
  fprintf2 (stderr.1652_335, "\x1b[40;35m thread job function \x1b[0m\n");

  <bb 316> :
  stderr.1653_336 = stderr;
  fprintf2 (stderr.1653_336, "\x1b[40;35m this stmt possible have Race Condition \xe3\x80\x82 \x1b[0m\n");

  <bb 317> :
  stderr.1654_337 = stderr;
  fprintf2 (stderr.1654_337, "\n ================== warring  ================== \n");

  <bb 318> :
  _338 = gimple_code (u_stmt);
  if (_338 == 8)
    goto <bb 319>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 319> :
  find_mallocstmt.1657_339 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1658_340 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1657_339 == IS_MALLOC_FUCNTION.1658_340)
    goto <bb 321>; [INV]
  else
    goto <bb 320>; [INV]

  <bb 320> :
  find_mallocstmt.1659_341 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1660_342 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1659_341 == IS_OTHRER_FUCNTION.1660_342)
    goto <bb 321>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 321> :
  iftmp.1656 = 1;
  goto <bb 323>; [INV]

  <bb 322> :
  iftmp.1656 = 0;

  <bb 323> :
  retval.1655 = iftmp.1656;
  if (retval.1655 != 0)
    goto <bb 324>; [INV]
  else
    goto <bb 418>; [INV]

  <bb 324> :
  IS_MALLOC_FUCNTION.1661_343 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1661_343;
  _344 = user_tmp->target;
  def_stmt = _344->ssa_name.def_stmt;
  D.257483 = gimple_call_fn (u_stmt);

  <bb 325> :
  _345 = D.257483;
  D.257484 = get_name (_345);

  <bb 326> :
  name = D.257484;
  if (name != 0B)
    goto <bb 327>; [INV]
  else
    goto <bb 418>; [INV]

  <bb 327> :
  _346 = strcmp (name, "free");
  if (_346 == 0)
    goto <bb 330>; [INV]
  else
    goto <bb 328>; [INV]

  <bb 328> :
  _347 = strcmp (name, "xfree");
  if (_347 == 0)
    goto <bb 330>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 329> :
  _348 = strcmp (name, "realloc");
  if (_348 == 0)
    goto <bb 330>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 330> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 331> :
  stderr.1662_349 = stderr;
  fprintf2 (stderr.1662_349, "\n ================== find free stmt ================== \n");

  <bb 332> :
  debug2 (u_stmt);

  <bb 333> :
  _350 = gimple_location_safe (u_stmt);
  warning_at2 (_350, 0, "use location");

  <bb 334> :
  _351 = strcmp (name, "realloc");
  if (_351 == 0)
    goto <bb 335>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 335> :
  find_freestmt.1663_352 = find_freestmt;
  _353 = find_freestmt.1663_352 + 1;
  find_freestmt = _353;
  find_freestmt.1664_354 = find_freestmt;
  stderr.1665_355 = stderr;
  fprintf2 (stderr.1665_355, "\x1b[40;32m    FIND REALLOC STMT count:%d name:%s \x1b[0m\n", find_freestmt.1664_354, name);

  <bb 336> :
  find_freestmt.1666_356 = find_freestmt;
  stderr.1667_357 = stderr;
  fprintf2 (stderr.1667_357, "\x1b[40;32m    this stmt possiable free memory \x1b[0m\n", find_freestmt.1666_356, name);
  goto <bb 338>; [INV]

  <bb 337> :
  find_freestmt.1668_358 = find_freestmt;
  _359 = find_freestmt.1668_358 + 1;
  find_freestmt = _359;
  find_freestmt.1669_360 = find_freestmt;
  stderr.1670_361 = stderr;
  fprintf2 (stderr.1670_361, "\x1b[40;32m    HAS FREE STMT count:%d name:%s \x1b[0m\n", find_freestmt.1669_360, name);

  <bb 338> :
  stderr.1671_362 = stderr;
  fprintf2 (stderr.1671_362, "\n ================== find free stmt ================== \n");

  <bb 339> :
  goto <bb 417>; [INV]

  <bb 340> :
  _363 = strcmp (name, "pthread_create");
  if (_363 == 0)
    goto <bb 341>; [INV]
  else
    goto <bb 397>; [INV]

  <bb 341> :
  table_temp->last_stmt = u_stmt;
  FUNCITON_THREAD.1672_364 = FUNCITON_THREAD;
  FUNCITON_THREAD.1673_365 = (int) FUNCITON_THREAD.1672_364;
  table_temp->swap_type = FUNCITON_THREAD.1673_365;
  _366 = table_temp->swap_type;
  _367 = (unsigned int) _366;
  FUNCITON_THREAD.1674_368 = FUNCITON_THREAD;
  if (_367 == FUNCITON_THREAD.1674_368)
    goto <bb 342>; [INV]
  else
    goto <bb 417>; [INV]

  <bb 342> :
  stderr.1675_369 = stderr;
  fprintf2 (stderr.1675_369, "\n ================== find pthread stmt ================== \n");

  <bb 343> :
  debug2 (u_stmt);

  <bb 344> :
  _370 = gimple_location_safe (u_stmt);
  warning_at2 (_370, 0, "use location");

  <bb 345> :
  stderr.1676_371 = stderr;
  fprintf2 (stderr.1676_371, "\x1b[40;32m    FIND PTHREAD_CREATED STMT  \x1b[0m\n");

  <bb 346> :
  stderr.1677_372 = stderr;
  fprintf2 (stderr.1677_372, "\n ================== pre_pthread_detched ================== \n");

  <bb 347> :
  _373 = table_temp->last_stmt;
  D.257485 = gimple_call_num_args (_373);

  <bb 348> :
  _374 = D.257485;
  retval.1678 = _374 != 0;
  if (retval.1678 != 0)
    goto <bb 349>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 349> :
  _375 = table_temp->last_stmt;
  retval.1679 = is_gimple_assign (_375);
  if (retval.1679 != 0)
    goto <bb 350>; [INV]
  else
    goto <bb 352>; [INV]

  <bb 350> :
  _376 = table_temp->last_stmt;
  D.257486 = gimple_assign_lhs (_376);

  <bb 351> :
  _377 = D.257486;
  trace_function_path (_377, -1, 0B, &find_pthread_detched);
  goto <bb 354>; [INV]

  <bb 352> :
  _378 = table_temp->last_stmt;
  D.257487 = gimple_call_arg (_378, 2);

  <bb 353> :
  _379 = D.257487;
  _380 = _379->exp.operands[0];
  trace_function_path (_380, -1, 0B, &find_pthread_detched);

  <bb 354> :
  stderr.1680_381 = stderr;
  fprintf2 (stderr.1680_381, "\n ================== pre_pthread_detched end ================== \n");

  <bb 355> :
  _382 = table_temp->last_stmt;
  D.257488 = gimple_call_arg (_382, 3);

  <bb 356> :
  findtree = D.257488;
  retval.1681 = is_gimple_call (u_stmt);
  if (retval.1681 != 0)
    goto <bb 357>; [INV]
  else
    goto <bb 364>; [INV]

  <bb 357> :
  D.257489 = gimple_call_num_args (u_stmt);

  <bb 358> :
  _383 = D.257489;
  retval.1682 = _383 != 0;
  if (retval.1682 != 0)
    goto <bb 359>; [INV]
  else
    goto <bb 364>; [INV]

  <bb 359> :
  D.257490 = gimple_call_arg (u_stmt, 3);

  <bb 360> :
  findtree = D.257490;
  _384 = findtree->base.code;
  if (_384 == 131)
    goto <bb 361>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 361> :
  _385 = findtree->exp.operands[0];
  function_tree.1683_386 = function_tree;
  trace_function_path (function_tree.1683_386, -1, _385, &find_freestmt);
  goto <bb 364>; [INV]

  <bb 362> :
  _387 = findtree->base.code;
  if (_387 == 153)
    goto <bb 363>; [INV]
  else
    goto <bb 364>; [INV]

  <bb 363> :
  function_tree.1684_388 = function_tree;
  trace_function_path (function_tree.1684_388, -1, findtree, &find_freestmt);

  <bb 364> :
  if (findtree != 0B)
    goto <bb 365>; [INV]
  else
    goto <bb 373>; [INV]

  <bb 365> :
  _389 = table_temp->last_stmt;
  D.257491 = gimple_call_num_args (_389);

  <bb 366> :
  _390 = D.257491;
  if (_390 != 0)
    goto <bb 367>; [INV]
  else
    goto <bb 369>; [INV]

  <bb 367> :
  _391 = table_temp->last_stmt;
  _392 = is_gimple_call (_391);
  if (_392 != 0)
    goto <bb 368>; [INV]
  else
    goto <bb 369>; [INV]

  <bb 368> :
  iftmp.1686 = 1;
  goto <bb 370>; [INV]

  <bb 369> :
  iftmp.1686 = 0;

  <bb 370> :
  retval.1685 = iftmp.1686;
  if (retval.1685 != 0)
    goto <bb 371>; [INV]
  else
    goto <bb 373>; [INV]

  <bb 371> :
  _393 = table_temp->last_stmt;
  D.257492 = gimple_call_arg (_393, 2);

  <bb 372> :
  _394 = D.257492;
  _395 = _394->exp.operands[0];
  trace_function_path (_395, 0, findtree, &find_freestmt);

  <bb 373> :
  _396 = table_temp->swap_stmt;
  if (_396 != 0B)
    goto <bb 374>; [INV]
  else
    goto <bb 377>; [INV]

  <bb 374> :
  _397 = table_temp->swap_stmt;
  D.257493 = gimple_call_num_args (_397);

  <bb 375> :
  _398 = D.257493;
  if (_398 != 0)
    goto <bb 376>; [INV]
  else
    goto <bb 377>; [INV]

  <bb 376> :
  iftmp.1688 = 1;
  goto <bb 378>; [INV]

  <bb 377> :
  iftmp.1688 = 0;

  <bb 378> :
  retval.1687 = iftmp.1688;
  if (retval.1687 != 0)
    goto <bb 379>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 379> :
  stderr.1689_399 = stderr;
  fprintf2 (stderr.1689_399, "\n ================== pre_pthread_detched ================== \n");

  <bb 380> :
  _400 = table_temp->swap_stmt;
  D.257494 = gimple_call_arg (_400, 2);

  <bb 381> :
  _401 = D.257494;
  _402 = _401->exp.operands[0];
  trace_function_path (_402, -1, 0B, &find_pthread_detched);

  <bb 382> :
  stderr.1690_403 = stderr;
  fprintf2 (stderr.1690_403, "\n ================== pre_pthread_detched end ================== \n");

  <bb 383> :
  _404 = table_temp->swap_stmt;
  D.257495 = gimple_call_arg (_404, 3);

  <bb 384> :
  findtree = D.257495;
  if (findtree != 0B)
    goto <bb 385>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 385> :
  _405 = table_temp->swap_stmt;
  D.257496 = gimple_call_arg (_405, 2);

  <bb 386> :
  _406 = D.257496;
  _407 = _406->exp.operands[0];
  trace_function_path (_407, 0, findtree, &find_freestmt);

  <bb 387> :
  find_pthread_detched.1691_408 = find_pthread_detched;
  if (find_pthread_detched.1691_408 == 0)
    goto <bb 388>; [INV]
  else
    goto <bb 394>; [INV]

  <bb 388> :
  _409 = table_temp->pthread_type;
  if (_409 == 0)
    goto <bb 389>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 389> :
  iftmp.1692 = "CREATE_JOINABLE";
  goto <bb 391>; [INV]

  <bb 390> :
  iftmp.1692 = "CREATE_DETACHED";

  <bb 391> :
  stderr.1693_410 = stderr;
  fprintf2 (stderr.1693_410, "\x1b[40;32m    FIND PTHREAD_CREATED TYPE is %s  \x1b[0m\n", iftmp.1692);

  <bb 392> :
  is_pthread_detched = 0;
  _411 = table_temp->pthread_type;
  if (_411 == 1)
    goto <bb 393>; [INV]
  else
    goto <bb 396>; [INV]

  <bb 393> :
  is_pthread_detched = 1;
  goto <bb 396>; [INV]

  <bb 394> :
  stderr.1694_412 = stderr;
  fprintf2 (stderr.1694_412, "\x1b[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_DETACHED  \x1b[0m\n");

  <bb 395> :
  is_pthread_detched = 1;

  <bb 396> :
  stderr.1695_413 = stderr;
  fprintf2 (stderr.1695_413, "\n ================== find pthread stmt ================== \n");
  goto <bb 417>; [INV]

  <bb 397> :
  _414 = strcmp (name, "pthread_join");
  if (_414 == 0)
    goto <bb 398>; [INV]
  else
    goto <bb 401>; [INV]

  <bb 398> :
  _415 = table_temp->swap_type;
  _416 = (unsigned int) _415;
  FUNCITON_THREAD.1696_417 = FUNCITON_THREAD;
  if (_416 == FUNCITON_THREAD.1696_417)
    goto <bb 399>; [INV]
  else
    goto <bb 417>; [INV]

  <bb 399> :
  stderr.1697_418 = stderr;
  fprintf2 (stderr.1697_418, "\x1b[40;32m    FIND PTHREAD_JOIN \x1b[0m\n");

  <bb 400> :
  find_pthread_join = find_pthread_join + 1;
  goto <bb 417>; [INV]

  <bb 401> :
  freecount = find_freestmt;
  if (name != 0B)
    goto <bb 402>; [INV]
  else
    goto <bb 417>; [INV]

  <bb 402> :
  _419 = strcmp (name, "realloc");
  if (_419 == 0)
    goto <bb 417>; [INV]
  else
    goto <bb 403>; [INV]

  <bb 403> :
  _420 = strcmp (name, "malloc");
  if (_420 == 0)
    goto <bb 417>; [INV]
  else
    goto <bb 404>; [INV]

  <bb 404> :
  _421 = strcmp (name, "xmalloc");
  if (_421 == 0)
    goto <bb 417>; [INV]
  else
    goto <bb 405>; [INV]

  <bb 405> :
  _422 = strcmp (name, "calloc");
  if (_422 == 0)
    goto <bb 417>; [INV]
  else
    goto <bb 406>; [INV]

  <bb 406> :
  _423 = strcmp (name, "xcalloc");
  if (_423 == 0)
    goto <bb 417>; [INV]
  else
    goto <bb 407>; [INV]

  <bb 407> :
  _424 = strcmp (name, "strdup");
  if (_424 == 0)
    goto <bb 417>; [INV]
  else
    goto <bb 408>; [INV]

  <bb 408> :
  _425 = strcmp (name, "xstrdup");
  if (_425 == 0)
    goto <bb 417>; [INV]
  else
    goto <bb 409>; [INV]

  <bb 409> :
  _426 = strcmp (name, "fprintf");
  if (_426 == 0)
    goto <bb 417>; [INV]
  else
    goto <bb 410>; [INV]

  <bb 410> :
  IS_MALLOC_FUCNTION.1698_427 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1698_427;
  stderr.1699_428 = stderr;
  fprintf2 (stderr.1699_428, "trace fucntion name:%s \n", name);

  <bb 411> :
  _429 = table_temp->target;
  D.257497 = gimple_call_fndecl (u_stmt);

  <bb 412> :
  _430 = D.257497;
  trace_function_path (_430, 0, _429, &find_freestmt);

  <bb 413> :
  stderr.1700_431 = stderr;
  fprintf2 (stderr.1700_431, "\n ================== trace ================== \n");

  <bb 414> :
  find_freestmt.1701_432 = find_freestmt;
  stderr.1702_433 = stderr;
  fprintf2 (stderr.1702_433, "trace fucntion free:%d \n", find_freestmt.1701_432);

  <bb 415> :
  find_freestmt.1703_434 = find_freestmt;
  if (freecount < find_freestmt.1703_434)
    goto <bb 416>; [INV]
  else
    goto <bb 417>; [INV]

  <bb 416> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 417> :

  <bb 418> :
  free_type = {CLOBBER};
  goto <bb 420>; [INV]

  <bb 419> :
  free_type = {CLOBBER};

  <bb 420> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 421>; [INV]
  else
    goto <bb 422>; [INV]

  <bb 421> :
  iftmp.1704 = user_tmp->stmt;
  goto <bb 423>; [INV]

  <bb 422> :
  iftmp.1704 = 0B;

  <bb 423> :
  u_stmt = iftmp.1704;

  <bb 424> :
  if (user_tmp != 0B)
    goto <bb 114>; [INV]
  else
    goto <bb 425>; [INV]

  <bb 425> :
  samefucntioncheck.1705_435 = samefucntioncheck;
  if (samefucntioncheck.1705_435 != 0)
    goto <bb 426>; [INV]
  else
    goto <bb 464>; [INV]

  <bb 426> :
  debugmod.1706_436 = debugmod;
  if (debugmod.1706_436 != 0)
    goto <bb 427>; [INV]
  else
    goto <bb 464>; [INV]

  <bb 427> :
  lastbasicblock = -1;
  _437 = &table_temp->target;
  D.257501 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _437);

  <bb 428> :
  _438 = D.257501;
  retval.1707 = _438 != 0B;
  if (retval.1707 != 0)
    goto <bb 429>; [INV]
  else
    goto <bb 464>; [INV]

  <bb 429> :
  _439 = &table_temp->target;
  D.257502 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _439);

  <bb 430> :
  _440 = D.257502;
  function_relate_array::operator= (&maxbb_array, _440);

  <bb 431> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 432> :
  D.257503 = operator new (48);

  <bb 433> :
  D.202666 = D.257503;
  hash_map<tree_node*, int>::hash_map (D.202666, 13, 0, 1, 0);

  <bb 434> :
  function_maxbasicblock_collect = D.202666;
  i = 0;
  goto <bb 444>; [INV]

  <bb 435> :
  _441 = (long unsigned int) i;
  _442 = std::vector<relate_type>::operator[] (&maxbb_type_array, _441);
  _443 = &_442->now_basicblock;
  _444 = (long unsigned int) i;
  _445 = std::vector<relate_type>::operator[] (&maxbb_type_array, _444);
  _446 = &_445->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _446, _443);

  <bb 436> :
  j = 0;
  goto <bb 442>; [INV]

  <bb 437> :
  _447 = (long unsigned int) i;
  _448 = std::vector<relate_type>::operator[] (&maxbb_type_array, _447);
  _449 = _448->relate_funtree;
  _450 = (long unsigned int) j;
  _451 = std::vector<relate_type>::operator[] (&maxbb_type_array, _450);
  _452 = _451->relate_funtree;
  retval.1708 = _449 == _452;
  if (retval.1708 != 0)
    goto <bb 438>; [INV]
  else
    goto <bb 441>; [INV]

  <bb 438> :
  _453 = (long unsigned int) i;
  _454 = std::vector<relate_type>::operator[] (&maxbb_type_array, _453);
  _455 = &_454->relate_funtree;
  D.257505 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _455);

  <bb 439> :
  _456 = D.257505;
  max_bb = *_456;
  _457 = (long unsigned int) j;
  _458 = std::vector<relate_type>::operator[] (&maxbb_type_array, _457);
  _459 = _458->now_basicblock;
  retval.1709 = max_bb <= _459;
  if (retval.1709 != 0)
    goto <bb 440>; [INV]
  else
    goto <bb 441>; [INV]

  <bb 440> :
  _460 = (long unsigned int) j;
  _461 = std::vector<relate_type>::operator[] (&maxbb_type_array, _460);
  _462 = &_461->now_basicblock;
  _463 = (long unsigned int) j;
  _464 = std::vector<relate_type>::operator[] (&maxbb_type_array, _463);
  _465 = &_464->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _465, _462);

  <bb 441> :
  j = j + 1;

  <bb 442> :
  _466 = (long unsigned int) j;
  _467 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1710 = _466 < _467;
  if (retval.1710 != 0)
    goto <bb 437>; [INV]
  else
    goto <bb 443>; [INV]

  <bb 443> :
  i = i + 1;

  <bb 444> :
  _468 = (long unsigned int) i;
  _469 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1711 = _468 < _469;
  if (retval.1711 != 0)
    goto <bb 435>; [INV]
  else
    goto <bb 445>; [INV]

  <bb 445> :
  it_i._M_current = 0B;
  it_i = std::vector<relate_type>::begin (&maxbb_type_array);
  goto <bb 459>; [INV]

  <bb 446> :
  _470 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _471 = &_470->relate_funtree;
  D.257506 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _471);

  <bb 447> :
  _472 = D.257506;
  max_bb = *_472;
  _473 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _474 = _473->now_basicblock;
  retval.1712 = max_bb == _474;
  if (retval.1712 != 0)
    goto <bb 448>; [INV]
  else
    goto <bb 458>; [INV]

  <bb 448> :
  _475 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _476 = _475->relate_tree;
  def_stmt = _476->ssa_name.def_stmt;
  stderr.1713_477 = stderr;
  fprintf2 (stderr.1713_477, "dot graph target basicblock start ");

  <bb 449> :
  _478 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _479 = _478->stmt;
  _480 = gimple_bb (_479);
  _481 = _480->index;
  _482 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _483 = _482->relate_funtree;
  D.257507 = get_name (_483);

  <bb 450> :
  _484 = D.257507;
  stderr.1714_485 = stderr;
  fprintf2 (stderr.1714_485, "from %s basic block %d", _484, _481);

  <bb 451> :
  stderr.1715_486 = stderr;
  fprintf2 (stderr.1715_486, "dot graph target basicblock en1\n\n");

  <bb 452> :
  _487 = rand ();
  x = (long unsigned int) _487;
  stderr.1716_488 = stderr;
  fprintf2 (stderr.1716_488, "dot graph arrow");

  <bb 453> :
  stderr.1717_489 = stderr;
  fprintf2 (stderr.1717_489, "subgraph cluster_%lu dot graph subgraph  ", x);

  <bb 454> :
  _490 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _491 = _490->stmt;
  debug2 (_491);

  <bb 455> :
  _492 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _493 = _492->relate_tree;
  _494 = _493->base.code;
  retval.1718 = _494 == 153;
  if (retval.1718 != 0)
    goto <bb 456>; [INV]
  else
    goto <bb 457>; [INV]

  <bb 456> :
  debug2 (def_stmt);

  <bb 457> :
  stderr.1719_495 = stderr;
  fprintf2 (stderr.1719_495, "dot graph subgrapend\n\n");

  <bb 458> :
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (&it_i);

  <bb 459> :
  D.202800 = std::vector<relate_type>::end (&maxbb_type_array);
  retval.1720 = __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (&it_i, &D.202800);
  D.202800 = {CLOBBER};
  if (retval.1720 != 0)
    goto <bb 446>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 460> :
  function_maxbb_collect.1721 = function_maxbb_collect;
  if (function_maxbb_collect.1721 != 0B)
    goto <bb 461>; [INV]
  else
    goto <bb 462>; [INV]

  <bb 461> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_maxbb_collect.1721);
  operator delete (function_maxbb_collect.1721, 48);

  <bb 462> :
  it_i = {CLOBBER};
  goto <bb 464>; [INV]

  <bb 463> :
  PTABLE_IS_NULL.1722_496 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1722_496;

  <bb 464> :
  relatemod.1723_497 = relatemod;
  if (relatemod.1723_497 != 0)
    goto <bb 465>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 465> :
  debugmod.1724_498 = debugmod;
  if (debugmod.1724_498 != 0)
    goto <bb 466>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 466> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  function_relate_collect.1726_499 = function_relate_collect;
  _500 = &table_temp->target;
  D.257509 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1726_499, _500);

  <bb 467> :
  _501 = D.257509;
  retval.1725 = _501 != 0B;
  if (retval.1725 != 0)
    goto <bb 468>; [INV]
  else
    goto <bb 483>; [INV]

  <bb 468> :
  function_relate_collect.1727_502 = function_relate_collect;
  _503 = &table_temp->target;
  D.257510 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1727_502, _503);

  <bb 469> :
  _504 = D.257510;
  function_relate_array::operator= (&fun_array, _504);

  <bb 470> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 471> :
  k = 0;
  goto <bb 482>; [INV]

  <bb 472> :
  _505 = rand ();
  x = (long unsigned int) _505;
  stderr.1728_506 = stderr;
  fprintf2 (stderr.1728_506, "dot graph start relate for1");

  <bb 473> :
  _507 = (long unsigned int) k;
  _508 = std::vector<relate_type>::operator[] (&relate_type_array, _507);
  _509 = _508->now_fucntion;
  stderr.1729_510 = stderr;
  fprintf2 (stderr.1729_510, "ID : %lu\n", _509);

  <bb 474> :
  _511 = (long unsigned int) k;
  _512 = std::vector<relate_type>::operator[] (&relate_type_array, _511);
  _513 = _512->stmt;
  _514 = gimple_bb (_513);
  _515 = _514->index;
  _516 = (long unsigned int) k;
  _517 = std::vector<relate_type>::operator[] (&relate_type_array, _516);
  _518 = _517->relate_funtree;
  D.257511 = get_name (_518);

  <bb 475> :
  _519 = D.257511;
  stderr.1730_520 = stderr;
  fprintf2 (stderr.1730_520, "from %s basic block %d", _519, _515);

  <bb 476> :
  stderr.1731_521 = stderr;
  fprintf2 (stderr.1731_521, "dot graph end relate end\n\n");

  <bb 477> :
  _522 = (long unsigned int) k;
  _523 = std::vector<relate_type>::operator[] (&relate_type_array, _522);
  _524 = _523->now_fucntion;
  _525 = (long unsigned int) k;
  _526 = std::vector<relate_type>::operator[] (&relate_type_array, _525);
  _527 = _526->now_stmt;
  stderr.1732_528 = stderr;
  fprintf2 (stderr.1732_528, "subgraph cluster_%lu dot graph subgraph  start ID : %lu stmt(relate) \xef\xbc\x8c Tree ID : %lu : ", x, _527, _524);

  <bb 478> :
  _529 = (long unsigned int) k;
  _530 = std::vector<relate_type>::operator[] (&relate_type_array, _529);
  _531 = _530->stmt;
  debug2 (_531);

  <bb 479> :
  _532 = (long unsigned int) k;
  _533 = std::vector<relate_type>::operator[] (&relate_type_array, _532);
  _534 = _533->stmt;
  _535 = gimple_location_safe (_534);
  warning_at2 (_535, 0, "use location");

  <bb 480> :
  stderr.1733_536 = stderr;
  fprintf2 (stderr.1733_536, "dot graph subgrapend\n\n");

  <bb 481> :
  k = k + 1;

  <bb 482> :
  _537 = (long unsigned int) k;
  _538 = std::vector<relate_type>::size (&relate_type_array);
  retval.1734 = _537 < _538;
  if (retval.1734 != 0)
    goto <bb 472>; [INV]
  else
    goto <bb 483>; [INV]

  <bb 483> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 484> :
  Looserulesfree.1735_539 = Looserulesfree;
  if (Looserulesfree.1735_539 != 0)
    goto <bb 485>; [INV]
  else
    goto <bb 515>; [INV]

  <bb 485> :
  stderr.1736_540 = stderr;
  fprintf2 (stderr.1736_540, "\n ================== Start Looserules free Check ================== \n");

  <bb 486> :
  stderr.1737_541 = stderr;
  fprintf2 (stderr.1737_541, "\n ================== warring ================== \n");

  <bb 487> :
  stderr.1738_542 = stderr;
  fprintf2 (stderr.1738_542, "\x1b[40;35m   this module possiable false positives \x1b[0m\n");

  <bb 488> :
  stderr.1739_543 = stderr;
  fprintf2 (stderr.1739_543, "\n ================== warring ================== \n");

  <bb 489> :
  _544 = table_temp->target;
  _545 = _544->base.code;
  if (_545 == 153)
    goto <bb 491>; [INV]
  else
    goto <bb 490>; [INV]

  <bb 490> :
  _546 = table_temp->target;
  _547 = _546->base.code;
  if (_547 == 165)
    goto <bb 491>; [INV]
  else
    goto <bb 515>; [INV]

  <bb 491> :
  _548 = table_temp->target;
  if (_548 != 0B)
    goto <bb 492>; [INV]
  else
    goto <bb 515>; [INV]

  <bb 492> :
  function_free_collect.1741_549 = function_free_collect;
  D.257515 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1741_549, &function_tree);

  <bb 493> :
  _550 = D.257515;
  retval.1740 = _550 != 0B;
  if (retval.1740 != 0)
    goto <bb 494>; [INV]
  else
    goto <bb 515>; [INV]

  <bb 494> :
  function_free_collect.1742_551 = function_free_collect;
  D.257516 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1742_551, &function_tree);

  <bb 495> :
  _552 = D.257516;
  function_free_array::function_free_array (&callerFunArray, _552);

  <bb 496> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 497> :
  k = 0;
  goto <bb 513>; [INV]

  <bb 498> :
  _553 = table_temp->target;
  _554 = (long unsigned int) k;
  _555 = std::vector<free_type>::operator[] (&callerRetTypearray, _554);
  _556 = _555->free_tree;
  D.257517 = ptr_derefs_may_alias_p (_556, _553);

  <bb 499> :
  retval.1743 = D.257517;
  if (retval.1743 != 0)
    goto <bb 500>; [INV]
  else
    goto <bb 512>; [INV]

  <bb 500> :
  _557 = (long unsigned int) k;
  _558 = std::vector<free_type>::operator[] (&callerRetTypearray, _557);
  _559 = _558->stmt;
  retval.1744 = is_gimple_call (_559);
  if (retval.1744 != 0)
    goto <bb 501>; [INV]
  else
    goto <bb 504>; [INV]

  <bb 501> :
  _560 = (long unsigned int) k;
  _561 = std::vector<free_type>::operator[] (&callerRetTypearray, _560);
  _562 = _561->stmt;
  D.257518 = gimple_call_fn (_562);

  <bb 502> :
  _563 = D.257518;
  D.257519 = get_name (_563);

  <bb 503> :
  name = D.257519;

  <bb 504> :
  _564 = strcmp (name, "realloc");
  if (_564 == 0)
    goto <bb 505>; [INV]
  else
    goto <bb 507>; [INV]

  <bb 505> :
  stderr.1745_565 = stderr;
  fprintf2 (stderr.1745_565, "\x1b[40;35m <Looserules> find realloc stmt free same pointer \x1b[0m\n");

  <bb 506> :
  stderr.1746_566 = stderr;
  fprintf2 (stderr.1746_566, "*/If realloc() fails, the initial memory block will not be freed() */");
  goto <bb 508>; [INV]

  <bb 507> :
  stderr.1747_567 = stderr;
  fprintf2 (stderr.1747_567, "\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n");

  <bb 508> :
  _568 = (long unsigned int) k;
  _569 = std::vector<free_type>::operator[] (&callerRetTypearray, _568);
  _570 = _569->stmt;
  debug_gimple_stmt2 (_570);

  <bb 509> :
  _571 = (long unsigned int) k;
  _572 = std::vector<free_type>::operator[] (&callerRetTypearray, _571);
  _573 = _572->stmt;
  _574 = gimple_location_safe (_573);
  warning_at2 (_574, 0, "use location");

  <bb 510> :
  free_type::free_type (&free_type);
  _575 = (long unsigned int) k;
  _576 = std::vector<free_type>::operator[] (&callerRetTypearray, _575);
  _577 = _576->stmt;
  free_type.stmt = _577;
  free_type.Looserulesfree = 1;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 511> :
  find_Looserulesfreestmt = find_Looserulesfreestmt + 1;
  free_type = {CLOBBER};

  <bb 512> :
  k = k + 1;

  <bb 513> :
  _578 = (long unsigned int) k;
  _579 = std::vector<free_type>::size (&callerRetTypearray);
  retval.1748 = _578 < _579;
  if (retval.1748 != 0)
    goto <bb 498>; [INV]
  else
    goto <bb 514>; [INV]

  <bb 514> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 515> :
  prebranchexit.1749_580 = prebranchexit;
  if (prebranchexit.1749_580 != 0)
    goto <bb 516>; [INV]
  else
    goto <bb 633>; [INV]

  <bb 516> :
  stderr.1750_581 = stderr;
  fprintf2 (stderr.1750_581, "\n=====================prebranchexit:start================\n");

  <bb 517> :
  _582 = table_temp->target;
  _583 = _582->base.code;
  if (_583 == 153)
    goto <bb 519>; [INV]
  else
    goto <bb 518>; [INV]

  <bb 518> :
  _584 = table_temp->target;
  _585 = _584->base.code;
  if (_585 == 165)
    goto <bb 519>; [INV]
  else
    goto <bb 633>; [INV]

  <bb 519> :
  _586 = table_temp->target;
  if (_586 != 0B)
    goto <bb 520>; [INV]
  else
    goto <bb 633>; [INV]

  <bb 520> :
  treeGimpleArray.1751_587 = treeGimpleArray;
  _588 = &table_temp->target;
  D.257524 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1751_587, _588);

  <bb 521> :
  user_tmp = D.257524;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  _589 = table_temp->node;
  D.257525 = cgraph_node::get_fun (_589);

  <bb 522> :
  _590 = D.257525;
  push_cfun (_590);

  <bb 523> :
  calculate_dominance_info (1);

  <bb 524> :
  _591 = user_tmp->size;
  if (_591 > 0)
    goto <bb 525>; [INV]
  else
    goto <bb 629>; [INV]

  <bb 525> :
  if (user_tmp != 0B)
    goto <bb 526>; [INV]
  else
    goto <bb 527>; [INV]

  <bb 526> :
  iftmp.1752 = user_tmp->stmt;
  goto <bb 528>; [INV]

  <bb 527> :
  iftmp.1752 = 0B;

  <bb 528> :
  u_stmt = iftmp.1752;
  goto <bb 628>; [INV]

  <bb 529> :
  D.257526 = gimple_block (u_stmt);

  <bb 530> :
  _592 = D.257526;
  retval.1753 = _592 != 0B;
  if (retval.1753 != 0)
    goto <bb 531>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 531> :
  function_free_collect.1755_593 = function_free_collect;
  D.257527 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1755_593, &function_tree);

  <bb 532> :
  _594 = D.257527;
  retval.1754 = _594 != 0B;
  if (retval.1754 != 0)
    goto <bb 533>; [INV]
  else
    goto <bb 588>; [INV]

  <bb 533> :
  k = 0;
  goto <bb 587>; [INV]

  <bb 534> :
  _595 = (long unsigned int) k;
  _596 = std::vector<return_type>::operator[] (&global_ret_type_array, _595);
  _597 = _596->locfucntion;
  function_tree.1757_598 = function_tree;
  retval.1756 = _597 == function_tree.1757_598;
  if (retval.1756 != 0)
    goto <bb 535>; [INV]
  else
    goto <bb 586>; [INV]

  <bb 535> :
  function_free_collect.1758_599 = function_free_collect;
  D.257528 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1758_599, &function_tree);

  <bb 536> :
  _600 = D.257528;
  function_free_array::function_free_array (&callerFunArray, _600);

  <bb 537> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 538> :
  k2 = 0;
  goto <bb 584>; [INV]

  <bb 539> :
  D.257529 = gimple_block (u_stmt);

  <bb 540> :
  _601 = D.257529;
  _602 = _601->block.supercontext;
  _603 = _602->block.supercontext;
  _604 = table_temp->node;
  D.257530 = cgraph_node::get_fun (_604);

  <bb 541> :
  _605 = D.257530;
  _606 = _605->decl;
  retval.1759 = _603 == _606;
  if (retval.1759 != 0)
    goto <bb 542>; [INV]
  else
    goto <bb 583>; [INV]

  <bb 542> :
  _607 = gimple_code (u_stmt);
  if (_607 != 39)
    goto <bb 543>; [INV]
  else
    goto <bb 546>; [INV]

  <bb 543> :
  _608 = (long unsigned int) k2;
  _609 = std::vector<free_type>::operator[] (&callerRetTypearray, _608);
  _610 = _609->stmt;
  if (u_stmt != _610)
    goto <bb 544>; [INV]
  else
    goto <bb 546>; [INV]

  <bb 544> :
  _611 = (long unsigned int) k2;
  _612 = std::vector<free_type>::operator[] (&callerRetTypearray, _611);
  _613 = _612->stmt;
  _614 = (long unsigned int) k;
  _615 = std::vector<return_type>::operator[] (&global_ret_type_array, _614);
  _616 = _615->stmt;
  if (_613 != _616)
    goto <bb 545>; [INV]
  else
    goto <bb 546>; [INV]

  <bb 545> :
  iftmp.1761 = 1;
  goto <bb 547>; [INV]

  <bb 546> :
  iftmp.1761 = 0;

  <bb 547> :
  retval.1760 = iftmp.1761;
  if (retval.1760 != 0)
    goto <bb 548>; [INV]
  else
    goto <bb 583>; [INV]

  <bb 548> :
  _617 = gimple_bb (u_stmt);
  D.257531 = bb_in_loop_p (_617);

  <bb 549> :
  _618 = D.257531;
  _619 = (long unsigned int) k;
  _620 = std::vector<return_type>::operator[] (&global_ret_type_array, _619);
  _621 = _620->stmt;
  _622 = gimple_bb (_621);
  D.257532 = bb_in_loop_p (_622);

  <bb 550> :
  _623 = D.257532;
  retval.1762 = _618 == _623;
  if (retval.1762 != 0)
    goto <bb 551>; [INV]
  else
    goto <bb 583>; [INV]

  <bb 551> :
  _624 = gimple_bb (u_stmt);
  _625 = (long unsigned int) k2;
  _626 = std::vector<free_type>::operator[] (&callerRetTypearray, _625);
  _627 = _626->stmt;
  _628 = gimple_bb (_627);
  D.257533 = dominated_by_p (1, _628, _624);

  <bb 552> :
  retval.1763 = D.257533;
  if (retval.1763 != 0)
    goto <bb 553>; [INV]
  else
    goto <bb 583>; [INV]

  <bb 553> :
  _629 = gimple_bb (u_stmt);
  _630 = (long unsigned int) k;
  _631 = std::vector<return_type>::operator[] (&global_ret_type_array, _630);
  _632 = _631->stmt;
  _633 = gimple_bb (_632);
  D.257534 = dominated_by_p (1, _633, _629);

  <bb 554> :
  _634 = D.257534;
  if (_634 != 0)
    goto <bb 558>; [INV]
  else
    goto <bb 555>; [INV]

  <bb 555> :
  fDFS.1766_635 = fDFS;
  _636 = &table_temp->node;
  D.257535 = hash_map<cgraph_node*, Graph>::get (fDFS.1766_635, _636);

  <bb 556> :
  _637 = D.257535;
  _638 = (long unsigned int) k;
  _639 = std::vector<return_type>::operator[] (&global_ret_type_array, _638);
  _640 = _639->stmt;
  _641 = gimple_bb (_640);
  _642 = gimple_bb (u_stmt);
  D.257536 = Graph::is_succ (_637, _642, _641);

  <bb 557> :
  _643 = D.257536;
  if (_643 != 0)
    goto <bb 558>; [INV]
  else
    goto <bb 559>; [INV]

  <bb 558> :
  iftmp.1765 = 1;
  goto <bb 560>; [INV]

  <bb 559> :
  iftmp.1765 = 0;

  <bb 560> :
  retval.1764 = iftmp.1765;
  if (retval.1764 != 0)
    goto <bb 561>; [INV]
  else
    goto <bb 583>; [INV]

  <bb 561> :
  _644 = (long unsigned int) k2;
  _645 = std::vector<free_type>::operator[] (&callerRetTypearray, _644);
  _646 = _645->stmt;
  _647 = gimple_bb (_646);
  _648 = (long unsigned int) k;
  _649 = std::vector<return_type>::operator[] (&global_ret_type_array, _648);
  _650 = _649->stmt;
  _651 = gimple_bb (_650);
  D.257537 = dominated_by_p (1, _651, _647);

  <bb 562> :
  _652 = D.257537;
  retval.1767 = ~_652;
  if (retval.1767 != 0)
    goto <bb 563>; [INV]
  else
    goto <bb 583>; [INV]

  <bb 563> :
  stderr.1768_653 = stderr;
  fprintf2 (stderr.1768_653, "\x1b[40;31m    branch possiable have return or exit  \x1b[0m\n");

  <bb 564> :
  _654 = table_temp->node;
  D.257538 = cgraph_node::get_fun (_654);

  <bb 565> :
  _655 = D.257538;
  _656 = _655->decl;
  D.257539 = get_name (_656);

  <bb 566> :
  name = D.257539;
  if (name != 0B)
    goto <bb 567>; [INV]
  else
    goto <bb 568>; [INV]

  <bb 567> :
  stderr.1769_657 = stderr;
  fprintf2 (stderr.1769_657, "In fucntion name:%s \n", name);

  <bb 568> :
  debug_gimple_stmt2 (u_stmt);

  <bb 569> :
  _658 = gimple_location_safe (u_stmt);
  warning_at2 (_658, 0, "use location");

  <bb 570> :
  _659 = gimple_bb (u_stmt);
  _660 = _659->index;
  stderr.1770_661 = stderr;
  fprintf2 (stderr.1770_661, "gimple stmt in succ := %d \n", _660);

  <bb 571> :
  _662 = (long unsigned int) k;
  _663 = std::vector<return_type>::operator[] (&global_ret_type_array, _662);
  _664 = _663->stmt;
  debug_gimple_stmt2 (_664);

  <bb 572> :
  _665 = (long unsigned int) k;
  _666 = std::vector<return_type>::operator[] (&global_ret_type_array, _665);
  _667 = _666->stmt;
  _668 = gimple_location_safe (_667);
  warning_at2 (_668, 0, "use location");

  <bb 573> :
  _669 = (long unsigned int) k;
  _670 = std::vector<return_type>::operator[] (&global_ret_type_array, _669);
  _671 = _670->name;
  retval.1771 = _671 != 0B;
  if (retval.1771 != 0)
    goto <bb 574>; [INV]
  else
    goto <bb 575>; [INV]

  <bb 574> :
  _672 = (long unsigned int) k;
  _673 = std::vector<return_type>::operator[] (&global_ret_type_array, _672);
  _674 = _673->name;
  _675 = (long unsigned int) k;
  _676 = std::vector<return_type>::operator[] (&global_ret_type_array, _675);
  _677 = _676->stmt;
  _678 = gimple_bb (_677);
  _679 = _678->index;
  stderr.1772_680 = stderr;
  fprintf2 (stderr.1772_680, "branch in succ := %d have %s\n", _679, _674);
  goto <bb 576>; [INV]

  <bb 575> :
  _681 = (long unsigned int) k;
  _682 = std::vector<return_type>::operator[] (&global_ret_type_array, _681);
  _683 = _682->stmt;
  _684 = gimple_bb (_683);
  _685 = _684->index;
  stderr.1773_686 = stderr;
  fprintf2 (stderr.1773_686, "branch in succ := %d have return or exit\n", _685);

  <bb 576> :
  _687 = (long unsigned int) k2;
  _688 = std::vector<free_type>::operator[] (&callerRetTypearray, _687);
  _689 = _688->stmt;
  debug_gimple_stmt2 (_689);

  <bb 577> :
  _690 = (long unsigned int) k2;
  _691 = std::vector<free_type>::operator[] (&callerRetTypearray, _690);
  _692 = _691->stmt;
  _693 = gimple_location_safe (_692);
  warning_at2 (_693, 0, "use location");

  <bb 578> :
  _694 = (long unsigned int) k2;
  _695 = std::vector<free_type>::operator[] (&callerRetTypearray, _694);
  _696 = _695->stmt;
  _697 = gimple_bb (_696);
  _698 = _697->index;
  stderr.1774_699 = stderr;
  fprintf2 (stderr.1774_699, "The path has a release memory in succ := %d \n", _698);

  <bb 579> :
  stderr.1775_700 = stderr;
  fprintf2 (stderr.1775_700, "\n======================================================================\n");

  <bb 580> :
  _701 = k + 1;
  _702 = (long unsigned int) _701;
  _703 = std::vector<return_type>::size (&global_ret_type_array);
  retval.1776 = _702 < _703;
  if (retval.1776 != 0)
    goto <bb 581>; [INV]
  else
    goto <bb 583>; [INV]

  <bb 581> :
  _704 = k + 1;
  _705 = (long unsigned int) _704;
  _706 = std::vector<return_type>::operator[] (&global_ret_type_array, _705);
  _707 = _706->locfucntion;
  function_tree.1778_708 = function_tree;
  retval.1777 = _707 == function_tree.1778_708;
  if (retval.1777 != 0)
    goto <bb 582>; [INV]
  else
    goto <bb 583>; [INV]

  <bb 582> :
  k = k + 1;

  <bb 583> :
  k2 = k2 + 1;

  <bb 584> :
  _709 = (long unsigned int) k2;
  _710 = std::vector<free_type>::size (&callerRetTypearray);
  retval.1779 = _709 < _710;
  if (retval.1779 != 0)
    goto <bb 539>; [INV]
  else
    goto <bb 585>; [INV]

  <bb 585> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 586> :
  k = k + 1;

  <bb 587> :
  _711 = (long unsigned int) k;
  _712 = std::vector<return_type>::size (&global_ret_type_array);
  retval.1780 = _711 < _712;
  if (retval.1780 != 0)
    goto <bb 534>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 588> :
  k = 0;
  goto <bb 623>; [INV]

  <bb 589> :
  _713 = (long unsigned int) k;
  _714 = std::vector<return_type>::operator[] (&global_ret_type_array, _713);
  _715 = _714->locfucntion;
  function_tree.1782_716 = function_tree;
  retval.1781 = _715 == function_tree.1782_716;
  if (retval.1781 != 0)
    goto <bb 590>; [INV]
  else
    goto <bb 622>; [INV]

  <bb 590> :
  _717 = table_temp->node;
  D.257543 = cgraph_node::get_fun (_717);

  <bb 591> :
  _718 = D.257543;
  _719 = _718->cfg;
  _720 = _719->x_entry_block_ptr;
  bb = _720->next_bb;
  goto <bb 620>; [INV]

  <bb 592> :
  _721 = &bb->succs;
  ei = ei_start_1 (_721);
  goto <bb 617>; [INV]

  <bb 593> :
  e.1785_722 = e;
  _723 = e.1785_722->dest;
  _724 = _723->index;
  _725 = gimple_bb (u_stmt);
  _726 = _725->index;
  if (_724 == _726)
    goto <bb 595>; [INV]
  else
    goto <bb 594>; [INV]

  <bb 594> :
  _727 = bb->index;
  _728 = gimple_bb (u_stmt);
  _729 = _728->index;
  if (_727 == _729)
    goto <bb 595>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 595> :
  iftmp.1784 = 1;
  goto <bb 597>; [INV]

  <bb 596> :
  iftmp.1784 = 0;

  <bb 597> :
  retval.1783 = iftmp.1784;
  if (retval.1783 != 0)
    goto <bb 598>; [INV]
  else
    goto <bb 616>; [INV]

  <bb 598> :
  fDFS.1787_730 = fDFS;
  _731 = &table_temp->node;
  D.257544 = hash_map<cgraph_node*, Graph>::get (fDFS.1787_730, _731);

  <bb 599> :
  _732 = D.257544;
  _733 = (long unsigned int) k;
  _734 = std::vector<return_type>::operator[] (&global_ret_type_array, _733);
  _735 = _734->stmt;
  _736 = gimple_bb (_735);
  e.1788_737 = e;
  _738 = e.1788_737->dest;
  D.257545 = Graph::is_succ (_732, _738, _736);

  <bb 600> :
  retval.1786 = D.257545;
  if (retval.1786 != 0)
    goto <bb 601>; [INV]
  else
    goto <bb 616>; [INV]

  <bb 601> :
  stderr.1789_739 = stderr;
  fprintf2 (stderr.1789_739, "\n======================================================================\n");

  <bb 602> :
  stderr.1790_740 = stderr;
  fprintf2 (stderr.1790_740, "\x1b[40;31m    branch possiable have return or exit  \x1b[0m\n");

  <bb 603> :
  debug_gimple_stmt2 (u_stmt);

  <bb 604> :
  _741 = gimple_bb (u_stmt);
  _742 = _741->index;
  stderr.1791_743 = stderr;
  fprintf2 (stderr.1791_743, "bb index := %d\n", _742);

  <bb 605> :
  _744 = (long unsigned int) k;
  _745 = std::vector<return_type>::operator[] (&global_ret_type_array, _744);
  _746 = _745->stmt;
  debug_gimple_stmt2 (_746);

  <bb 606> :
  _747 = (long unsigned int) k;
  _748 = std::vector<return_type>::operator[] (&global_ret_type_array, _747);
  _749 = _748->stmt;
  _750 = gimple_location_safe (_749);
  warning_at2 (_750, 0, "use location");

  <bb 607> :
  _751 = gimple_bb (u_stmt);
  _752 = _751->index;
  stderr.1792_753 = stderr;
  fprintf2 (stderr.1792_753, "gimple stmt in succ := %d \n", _752);

  <bb 608> :
  _754 = table_temp->node;
  D.257546 = cgraph_node::get_fun (_754);

  <bb 609> :
  _755 = D.257546;
  _756 = _755->decl;
  D.257547 = get_name (_756);

  <bb 610> :
  name = D.257547;
  if (name != 0B)
    goto <bb 611>; [INV]
  else
    goto <bb 612>; [INV]

  <bb 611> :
  stderr.1793_757 = stderr;
  fprintf2 (stderr.1793_757, "In fucntion name:%s \n", name);

  <bb 612> :
  _758 = (long unsigned int) k;
  _759 = std::vector<return_type>::operator[] (&global_ret_type_array, _758);
  _760 = _759->name;
  retval.1794 = _760 != 0B;
  if (retval.1794 != 0)
    goto <bb 613>; [INV]
  else
    goto <bb 614>; [INV]

  <bb 613> :
  _761 = (long unsigned int) k;
  _762 = std::vector<return_type>::operator[] (&global_ret_type_array, _761);
  _763 = _762->name;
  _764 = (long unsigned int) k;
  _765 = std::vector<return_type>::operator[] (&global_ret_type_array, _764);
  _766 = _765->stmt;
  _767 = gimple_bb (_766);
  _768 = _767->index;
  stderr.1795_769 = stderr;
  fprintf2 (stderr.1795_769, "branch in succ := %d have %s\n", _768, _763);
  goto <bb 615>; [INV]

  <bb 614> :
  _770 = (long unsigned int) k;
  _771 = std::vector<return_type>::operator[] (&global_ret_type_array, _770);
  _772 = _771->stmt;
  _773 = gimple_bb (_772);
  _774 = _773->index;
  stderr.1796_775 = stderr;
  fprintf2 (stderr.1796_775, "branch in succ := %d have return or exit\n", _774);

  <bb 615> :
  stderr.1797_776 = stderr;
  fprintf2 (stderr.1797_776, "\n======================================================================\n");

  <bb 616> :
  ei_next (&ei);

  <bb 617> :
  D.257548 = ei_cond (ei, &e);

  <bb 618> :
  retval.1798 = D.257548;
  if (retval.1798 != 0)
    goto <bb 593>; [INV]
  else
    goto <bb 619>; [INV]

  <bb 619> :
  e = {CLOBBER};
  ei = {CLOBBER};
  bb = bb->next_bb;

  <bb 620> :
  _777 = table_temp->node;
  D.257550 = cgraph_node::get_fun (_777);

  <bb 621> :
  _778 = D.257550;
  _779 = _778->cfg;
  _780 = _779->x_exit_block_ptr;
  retval.1799 = bb != _780;
  if (retval.1799 != 0)
    goto <bb 592>; [INV]
  else
    goto <bb 622>; [INV]

  <bb 622> :
  k = k + 1;

  <bb 623> :
  _781 = (long unsigned int) k;
  _782 = std::vector<return_type>::size (&global_ret_type_array);
  retval.1800 = _781 < _782;
  if (retval.1800 != 0)
    goto <bb 589>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 624> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 625>; [INV]
  else
    goto <bb 626>; [INV]

  <bb 625> :
  iftmp.1801 = user_tmp->stmt;
  goto <bb 627>; [INV]

  <bb 626> :
  iftmp.1801 = 0B;

  <bb 627> :
  u_stmt = iftmp.1801;

  <bb 628> :
  if (user_tmp != 0B)
    goto <bb 529>; [INV]
  else
    goto <bb 629>; [INV]

  <bb 629> :
  pop_cfun ();

  <bb 630> :
  free_dominance_info (1);

  <bb 631> :
  stderr.1802_783 = stderr;
  fprintf2 (stderr.1802_783, "\n=====================prebranchexit:end================\n");

  <bb 632> :
  start = {CLOBBER};

  <bb 633> :
  useafterfree.1803_784 = useafterfree;
  if (useafterfree.1803_784 != 0)
    goto <bb 634>; [INV]
  else
    goto <bb 718>; [INV]

  <bb 634> :
  treeGimpleArray.1804_785 = treeGimpleArray;
  _786 = &table_temp->target;
  D.257552 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1804_785, _786);

  <bb 635> :
  user_tmp = D.257552;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  stderr.1805_787 = stderr;
  fprintf2 (stderr.1805_787, "\n ================== Start Use after free Check ================== \n");

  <bb 636> :
  _788 = user_tmp->size;
  if (_788 > 0)
    goto <bb 637>; [INV]
  else
    goto <bb 716>; [INV]

  <bb 637> :
  if (user_tmp != 0B)
    goto <bb 638>; [INV]
  else
    goto <bb 639>; [INV]

  <bb 638> :
  iftmp.1806 = user_tmp->stmt;
  goto <bb 640>; [INV]

  <bb 639> :
  iftmp.1806 = 0B;

  <bb 640> :
  u_stmt = iftmp.1806;
  goto <bb 715>; [INV]

  <bb 641> :
  i = 0;
  goto <bb 710>; [INV]

  <bb 642> :
  _789 = (long unsigned int) i;
  D.257553 = std::vector<free_type>::at (&free_array, _789);

  <bb 643> :
  _790 = D.257553;
  _791 = _790->stmt;
  D.257554 = gimple_call_fndecl (_791);

  <bb 644> :
  _792 = D.257554;
  retval.1807 = _792 != 0B;
  if (retval.1807 != 0)
    goto <bb 645>; [INV]
  else
    goto <bb 709>; [INV]

  <bb 645> :
  _793 = (long unsigned int) i;
  D.257555 = std::vector<free_type>::at (&free_array, _793);

  <bb 646> :
  _794 = D.257555;
  _795 = _794->stmt;
  retval.1808 = u_stmt != _795;
  if (retval.1808 != 0)
    goto <bb 647>; [INV]
  else
    goto <bb 709>; [INV]

  <bb 647> :
  retval.1809 = is_gimple_call (u_stmt);
  if (retval.1809 != 0)
    goto <bb 648>; [INV]
  else
    goto <bb 653>; [INV]

  <bb 648> :
  _796 = (long unsigned int) i;
  D.257556 = std::vector<free_type>::at (&free_array, _796);

  <bb 649> :
  _797 = D.257556;
  _798 = _797->stmt;
  D.257557 = gimple_call_fndecl (_798);

  <bb 650> :
  _799 = D.257557;
  D.257558 = gimple_call_fndecl (u_stmt);

  <bb 651> :
  _800 = D.257558;
  retval.1810 = _799 == _800;
  if (retval.1810 != 0)
    goto <bb 652>; [INV]
  else
    goto <bb 653>; [INV]

  <bb 652> :
  // predicted unlikely by continue predictor.
  goto <bb 709>; [INV]

  <bb 653> :
  _801 = (long unsigned int) i;
  D.257559 = std::vector<free_type>::at (&free_array, _801);

  <bb 654> :
  _802 = D.257559;
  _803 = _802->stmt;
  D.257560 = gimple_call_num_args (_803);

  <bb 655> :
  _804 = D.257560;
  retval.1811 = _804 != 0;
  if (retval.1811 != 0)
    goto <bb 656>; [INV]
  else
    goto <bb 684>; [INV]

  <bb 656> :
  _805 = (long unsigned int) i;
  D.257561 = std::vector<free_type>::at (&free_array, _805);

  <bb 657> :
  _806 = D.257561;
  _807 = _806->stmt;
  D.257562 = gimple_call_arg (_807, 0);

  <bb 658> :
  callarg = D.257562;
  _808 = callarg->base.code;
  if (_808 == 153)
    goto <bb 659>; [INV]
  else
    goto <bb 673>; [INV]

  <bb 659> :
  def_stmt = callarg->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 660>; [INV]
  else
    goto <bb 673>; [INV]

  <bb 660> :
  _809 = gimple_code (def_stmt);
  retval.1812 = _809 == 18;
  if (retval.1812 != 0)
    goto <bb 661>; [INV]
  else
    goto <bb 673>; [INV]

  <bb 661> :
  D.257563 = gimple_phi_num_args (def_stmt);

  <bb 662> :
  _810 = D.257563;
  retval.1813 = _810 != 0;
  if (retval.1813 != 0)
    goto <bb 663>; [INV]
  else
    goto <bb 670>; [INV]

  <bb 663> :
  k = 0;
  goto <bb 668>; [INV]

  <bb 664> :
  _811 = (long unsigned int) k;
  D.257564 = gimple_phi_arg_def (def_stmt, _811);

  <bb 665> :
  arg = D.257564;
  _812 = user_tmp->target;
  if (arg == _812)
    goto <bb 666>; [INV]
  else
    goto <bb 667>; [INV]

  <bb 666> :
  // predicted unlikely by continue predictor.

  <bb 667> :
  k = k + 1;

  <bb 668> :
  D.257565 = gimple_phi_num_args (def_stmt);

  <bb 669> :
  _813 = D.257565;
  k.1815_814 = (unsigned int) k;
  retval.1814 = _813 > k.1815_814;
  if (retval.1814 != 0)
    goto <bb 664>; [INV]
  else
    goto <bb 670>; [INV]

  <bb 670> :
  D.257566 = gimple_phi_result (def_stmt);

  <bb 671> :
  _815 = D.257566;
  _816 = user_tmp->target;
  retval.1816 = _815 == _816;
  if (retval.1816 != 0)
    goto <bb 672>; [INV]
  else
    goto <bb 673>; [INV]

  <bb 672> :
  // predicted unlikely by continue predictor.
  goto <bb 709>; [INV]

  <bb 673> :
  retval.1817 = is_gimple_call (u_stmt);
  if (retval.1817 != 0)
    goto <bb 674>; [INV]
  else
    goto <bb 680>; [INV]

  <bb 674> :
  _817 = (long unsigned int) i;
  D.257567 = std::vector<free_type>::at (&free_array, _817);

  <bb 675> :
  _818 = D.257567;
  _819 = _818->stmt;
  D.257568 = gimple_call_fndecl (_819);

  <bb 676> :
  _820 = D.257568;
  D.257569 = gimple_call_fndecl (u_stmt);

  <bb 677> :
  _821 = D.257569;
  retval.1818 = _820 == _821;
  if (retval.1818 != 0)
    goto <bb 678>; [INV]
  else
    goto <bb 680>; [INV]

  <bb 678> :
  _822 = user_tmp->target;
  if (callarg == _822)
    goto <bb 679>; [INV]
  else
    goto <bb 680>; [INV]

  <bb 679> :
  // predicted unlikely by continue predictor.
  goto <bb 709>; [INV]

  <bb 680> :
  _823 = gimple_code (u_stmt);
  retval.1819 = _823 == 18;
  if (retval.1819 != 0)
    goto <bb 681>; [INV]
  else
    goto <bb 684>; [INV]

  <bb 681> :
  D.257570 = gimple_phi_result (u_stmt);

  <bb 682> :
  _824 = D.257570;
  retval.1820 = callarg == _824;
  if (retval.1820 != 0)
    goto <bb 683>; [INV]
  else
    goto <bb 684>; [INV]

  <bb 683> :
  // predicted unlikely by continue predictor.
  goto <bb 709>; [INV]

  <bb 684> :
  function_tree.1822_825 = function_tree;
  _826 = (long unsigned int) i;
  D.257571 = std::vector<free_type>::at (&free_array, _826);

  <bb 685> :
  _827 = D.257571;
  _828 = _827->stmt;
  D.257572 = Location_b2 (_828, u_stmt, function_tree.1822_825);

  <bb 686> :
  retval.1821 = D.257572;
  if (retval.1821 != 0)
    goto <bb 687>; [INV]
  else
    goto <bb 709>; [INV]

  <bb 687> :
  stderr.1823_829 = stderr;
  fprintf2 (stderr.1823_829, "\n============================================================\n");

  <bb 688> :
  _830 = (long unsigned int) i;
  D.257573 = std::vector<free_type>::at (&free_array, _830);

  <bb 689> :
  _831 = D.257573;
  _832 = _831->Looserulesfree;
  retval.1824 = _832 != 0;
  if (retval.1824 != 0)
    goto <bb 690>; [INV]
  else
    goto <bb 691>; [INV]

  <bb 690> :
  stderr.1825_833 = stderr;
  fprintf2 (stderr.1825_833, "\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n");

  <bb 691> :
  _834 = (long unsigned int) i;
  D.257574 = std::vector<free_type>::at (&free_array, _834);

  <bb 692> :
  _835 = D.257574;
  _836 = _835->stmt;
  debug_gimple_stmt2 (_836);

  <bb 693> :
  _837 = (long unsigned int) i;
  D.257575 = std::vector<free_type>::at (&free_array, _837);

  <bb 694> :
  _838 = D.257575;
  _839 = _838->stmt;
  _840 = gimple_location_safe (_839);
  warning_at2 (_840, 0, "free in this location");

  <bb 695> :
  _841 = (long unsigned int) i;
  D.257576 = std::vector<free_type>::at (&free_array, _841);

  <bb 696> :
  _842 = D.257576;
  _843 = _842->stmt;
  _844 = gimple_bb (_843);
  _845 = table_temp->node;
  check_bbinfo (_845, _844);

  <bb 697> :
  stderr.1826_846 = stderr;
  fprintf2 (stderr.1826_846, "\n===== possiable asias =====\n");

  <bb 698> :
  debug_gimple_stmt2 (u_stmt);

  <bb 699> :
  _847 = gimple_location_safe (u_stmt);
  warning_at2 (_847, 0, "use location");

  <bb 700> :
  _848 = gimple_bb (u_stmt);
  _849 = table_temp->node;
  check_bbinfo (_849, _848);

  <bb 701> :
  stderr.1827_850 = stderr;
  fprintf2 (stderr.1827_850, "\n ================== warring ================== \n");

  <bb 702> :
  _851 = (long unsigned int) i;
  D.257577 = std::vector<free_type>::at (&free_array, _851);

  <bb 703> :
  _852 = D.257577;
  _853 = _852->stmt;
  D.257578 = gimple_call_fn (_853);

  <bb 704> :
  _854 = D.257578;
  D.257579 = get_name (_854);

  <bb 705> :
  name = D.257579;
  _855 = strcmp (name, "realloc");
  if (_855 == 0)
    goto <bb 706>; [INV]
  else
    goto <bb 707>; [INV]

  <bb 706> :
  stderr.1828_856 = stderr;
  fprintf2 (stderr.1828_856, "\x1b[40;35m  realloc Use after free error! \x1b[0m\n");
  goto <bb 708>; [INV]

  <bb 707> :
  stderr.1829_857 = stderr;
  fprintf2 (stderr.1829_857, "\x1b[40;35m    Use after free error! \x1b[0m\n");

  <bb 708> :
  stderr.1830_858 = stderr;
  fprintf2 (stderr.1830_858, "\n ================== warring ================== \n");

  <bb 709> :
  i = i + 1;

  <bb 710> :
  _859 = (long unsigned int) i;
  _860 = std::vector<free_type>::size (&free_array);
  retval.1831 = _859 < _860;
  if (retval.1831 != 0)
    goto <bb 642>; [INV]
  else
    goto <bb 711>; [INV]

  <bb 711> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 712>; [INV]
  else
    goto <bb 713>; [INV]

  <bb 712> :
  iftmp.1832 = user_tmp->stmt;
  goto <bb 714>; [INV]

  <bb 713> :
  iftmp.1832 = 0B;

  <bb 714> :
  u_stmt = iftmp.1832;

  <bb 715> :
  if (user_tmp != 0B)
    goto <bb 641>; [INV]
  else
    goto <bb 716>; [INV]

  <bb 716> :
  stderr.1833_861 = stderr;
  fprintf2 (stderr.1833_861, "\ndot graph END\n");

  <bb 717> :
  start = {CLOBBER};

  <bb 718> :
  stderr.1834_862 = stderr;
  fprintf2 (stderr.1834_862, " \n Finish check Pointer Collect  \n");

  <bb 719> :
  function_relate_array::~function_relate_array (&maxbb_array);
  std::vector<relate_type>::~vector (&maxbb_type_array);
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  goto <bb 721>; [INV]

  <bb 720> :
  PTABLE_IS_NULL.1835_863 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1835_863;

  <bb 721> :
  _864 = table_temp->swap_type;
  _865 = (unsigned int) _864;
  FUNCITON_THREAD.1836_866 = FUNCITON_THREAD;
  if (_865 == FUNCITON_THREAD.1836_866)
    goto <bb 722>; [INV]
  else
    goto <bb 733>; [INV]

  <bb 722> :
  if (is_pthread_detched == 0)
    goto <bb 723>; [INV]
  else
    goto <bb 730>; [INV]

  <bb 723> :
  if (find_pthread_join == 0)
    goto <bb 724>; [INV]
  else
    goto <bb 727>; [INV]

  <bb 724> :
  stderr.1837_867 = stderr;
  fprintf2 (stderr.1837_867, "\n======================================================================\n");

  <bb 725> :
  stderr.1838_868 = stderr;
  fprintf2 (stderr.1838_868, "\x1b[40;31m    pthread is JOINABLE but no pthread_join stmt \x1b[0m\n");

  <bb 726> :
  stderr.1839_869 = stderr;
  fprintf2 (stderr.1839_869, "\n======================================================================\n");
  goto <bb 733>; [INV]

  <bb 727> :
  stderr.1840_870 = stderr;
  fprintf2 (stderr.1840_870, "\n======================================================================\n");

  <bb 728> :
  stderr.1841_871 = stderr;
  fprintf2 (stderr.1841_871, "\x1b[40;32m    pthread is JOINABLE and no memory leak   \x1b[0m\n");

  <bb 729> :
  stderr.1842_872 = stderr;
  fprintf2 (stderr.1842_872, "\n======================================================================\n");
  goto <bb 733>; [INV]

  <bb 730> :
  stderr.1843_873 = stderr;
  fprintf2 (stderr.1843_873, "\n======================================================================\n");

  <bb 731> :
  stderr.1844_874 = stderr;
  fprintf2 (stderr.1844_874, "\x1b[40;32m    pthread is DETACHED and no memory leak  \x1b[0m\n");

  <bb 732> :
  stderr.1845_875 = stderr;
  fprintf2 (stderr.1845_875, "\n======================================================================\n");

  <bb 733> :
  ptable_type.1846_876 = (unsigned int) ptable_type;
  IS_MALLOC_FUCNTION.1847_877 = IS_MALLOC_FUCNTION;
  if (ptable_type.1846_876 == IS_MALLOC_FUCNTION.1847_877)
    goto <bb 734>; [INV]
  else
    goto <bb 736>; [INV]

  <bb 734> :
  find_mallocstmt.1848_878 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1849_879 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1848_878 == IS_OTHRER_FUCNTION.1849_879)
    goto <bb 735>; [INV]
  else
    goto <bb 736>; [INV]

  <bb 735> :
  IS_MALLOC_FUCNTION.1850_880 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1850_880;

  <bb 736> :
  Looserulesfree.1851_881 = Looserulesfree;
  if (Looserulesfree.1851_881 != 0)
    goto <bb 737>; [INV]
  else
    goto <bb 745>; [INV]

  <bb 737> :
  stderr.1852_882 = stderr;
  fprintf2 (stderr.1852_882, "\n======================================================================\n");

  <bb 738> :
  stderr.1853_883 = stderr;
  fprintf2 (stderr.1853_883, "\x1b[40;35m  \tLooserules free count:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 739> :
  find_freestmt.1854_884 = find_freestmt;
  stderr.1855_885 = stderr;
  fprintf2 (stderr.1855_885, "\x1b[40;31m  \tfree count:%d \x1b[0m\n", find_freestmt.1854_884);

  <bb 740> :
  if (find_Looserulesfreestmt > 1)
    goto <bb 741>; [INV]
  else
    goto <bb 742>; [INV]

  <bb 741> :
  stderr.1856_886 = stderr;
  fprintf2 (stderr.1856_886, "\x1b[40;31m  \tpossible double free [Looserules]:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 742> :
  find_freestmt.1857_887 = find_freestmt;
  if (find_freestmt.1857_887 > 1)
    goto <bb 743>; [INV]
  else
    goto <bb 744>; [INV]

  <bb 743> :
  find_freestmt.1858_888 = find_freestmt;
  stderr.1859_889 = stderr;
  fprintf2 (stderr.1859_889, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1858_888);

  <bb 744> :
  stderr.1860_890 = stderr;
  fprintf2 (stderr.1860_890, "\n======================================================================\n");

  <bb 745> :
  find_mallocstmt.1861_891 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1862_892 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1861_891 == IS_MALLOC_FUCNTION.1862_892)
    goto <bb 746>; [INV]
  else
    goto <bb 766>; [INV]

  <bb 746> :
  defmalloc_type::defmalloc_type (&defmalloc_type);
  _893 = table_temp->last_stmt;
  defmalloc_type.stmt = _893;
  _894 = table_temp->target;
  defmalloc_type.malloc_tree = _894;
  i = 0;
  goto <bb 749>; [INV]

  <bb 747> :
  _895 = (long unsigned int) i;
  _896 = std::vector<free_type>::operator[] (&free_array, _895);
  std::vector<free_type>::push_back (&defmalloc_type.free_array, _896);

  <bb 748> :
  i = i + 1;

  <bb 749> :
  _897 = (long unsigned int) i;
  _898 = std::vector<free_type>::size (&free_array);
  retval.1863 = _897 < _898;
  if (retval.1863 != 0)
    goto <bb 747>; [INV]
  else
    goto <bb 750>; [INV]

  <bb 750> :
  std::vector<defmalloc_type>::push_back (&defmalloc_array, &defmalloc_type);

  <bb 751> :
  find_freestmt.1864_899 = find_freestmt;
  if (find_freestmt.1864_899 == 0)
    goto <bb 752>; [INV]
  else
    goto <bb 755>; [INV]

  <bb 752> :
  stderr.1865_900 = stderr;
  fprintf2 (stderr.1865_900, "\n======================================================================\n");

  <bb 753> :
  stderr.1866_901 = stderr;
  fprintf2 (stderr.1866_901, "\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n");

  <bb 754> :
  stderr.1867_902 = stderr;
  fprintf2 (stderr.1867_902, "\n======================================================================\n");
  goto <bb 765>; [INV]

  <bb 755> :
  find_freestmt.1868_903 = find_freestmt;
  if (find_freestmt.1868_903 == 1)
    goto <bb 756>; [INV]
  else
    goto <bb 761>; [INV]

  <bb 756> :
  stderr.1869_904 = stderr;
  fprintf2 (stderr.1869_904, "\n======================================================================\n");

  <bb 757> :
  if (find_phistmt == 1)
    goto <bb 758>; [INV]
  else
    goto <bb 759>; [INV]

  <bb 758> :
  stderr.1870_905 = stderr;
  fprintf2 (stderr.1870_905, "\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n");
  goto <bb 760>; [INV]

  <bb 759> :
  stderr.1871_906 = stderr;
  fprintf2 (stderr.1871_906, "\x1b[40;32m   No memory leak, need more check!  \x1b[0m\n");

  <bb 760> :
  stderr.1872_907 = stderr;
  fprintf2 (stderr.1872_907, "\n======================================================================\n\n");
  goto <bb 765>; [INV]

  <bb 761> :
  find_freestmt.1873_908 = find_freestmt;
  if (find_freestmt.1873_908 > 1)
    goto <bb 762>; [INV]
  else
    goto <bb 765>; [INV]

  <bb 762> :
  stderr.1874_909 = stderr;
  fprintf2 (stderr.1874_909, "\n======================================================================\n");

  <bb 763> :
  find_freestmt.1875_910 = find_freestmt;
  stderr.1876_911 = stderr;
  fprintf2 (stderr.1876_911, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1875_910);

  <bb 764> :
  stderr.1877_912 = stderr;
  fprintf2 (stderr.1877_912, "\n======================================================================\n");

  <bb 765> :
  defmalloc_type::~defmalloc_type (&defmalloc_type);
  defmalloc_type = {CLOBBER};
  goto <bb 798>; [INV]

  <bb 766> :
  find_mallocstmt.1878_913 = (unsigned int) find_mallocstmt;
  IS_HEAP_FUCNTION.1879_914 = IS_HEAP_FUCNTION;
  if (find_mallocstmt.1878_913 == IS_HEAP_FUCNTION.1879_914)
    goto <bb 767>; [INV]
  else
    goto <bb 770>; [INV]

  <bb 767> :
  stderr.1880_915 = stderr;
  fprintf2 (stderr.1880_915, "\n======================================================================\n");

  <bb 768> :
  stderr.1881_916 = stderr;
  fprintf2 (stderr.1881_916, "\x1b[40;31m \tthis fucntion return possible is heap-object \x1b[0m\n");

  <bb 769> :
  stderr.1882_917 = stderr;
  fprintf2 (stderr.1882_917, "\n======================================================================\n");
  goto <bb 798>; [INV]

  <bb 770> :
  find_mallocstmt.1883_918 = (unsigned int) find_mallocstmt;
  PTABLE_IS_NULL.1884_919 = PTABLE_IS_NULL;
  if (find_mallocstmt.1883_918 == PTABLE_IS_NULL.1884_919)
    goto <bb 771>; [INV]
  else
    goto <bb 778>; [INV]

  <bb 771> :
  stderr.1885_920 = stderr;
  fprintf2 (stderr.1885_920, "\n======================================================================\n");

  <bb 772> :
  stderr.1886_921 = stderr;
  fprintf2 (stderr.1886_921, "\x1b[40;31m \tCan\'t find this fucntion in Pointer table \x1b[0m\n");

  <bb 773> :
  stderr.1887_922 = stderr;
  fprintf2 (stderr.1887_922, "\x1b[40;31m \tPossiable no other stmt relate with this stmt \x1b[0m\n");

  <bb 774> :
  _923 = table_temp->last_stmt;
  D.257586 = empty_body_p (_923);

  <bb 775> :
  retval.1888 = D.257586;
  if (retval.1888 != 0)
    goto <bb 776>; [INV]
  else
    goto <bb 777>; [INV]

  <bb 776> :
  _924 = table_temp->last_stmt;
  _925 = gimple_location_safe (_924);
  warning_at2 (_925, 0, "use location");

  <bb 777> :
  stderr.1889_926 = stderr;
  fprintf2 (stderr.1889_926, "\n======================================================================\n");
  goto <bb 798>; [INV]

  <bb 778> :
  stderr.1890_927 = stderr;
  fprintf2 (stderr.1890_927, "\n======================================================================\n");

  <bb 779> :
  stderr.1891_928 = stderr;
  fprintf2 (stderr.1891_928, "\x1b[40;31m \tthis stmt need double check \x1b[0m\n");

  <bb 780> :
  find_retheapstmt.1892_929 = find_retheapstmt;
  if (find_retheapstmt.1892_929 > 0)
    goto <bb 781>; [INV]
  else
    goto <bb 798>; [INV]

  <bb 781> :
  find_freestmt.1893_930 = find_freestmt;
  if (find_freestmt.1893_930 > 2)
    goto <bb 782>; [INV]
  else
    goto <bb 786>; [INV]

  <bb 782> :
  stderr.1894_931 = stderr;
  fprintf2 (stderr.1894_931, "\n======================================================================\n");

  <bb 783> :
  stderr.1895_932 = stderr;
  fprintf2 (stderr.1895_932, "\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n");

  <bb 784> :
  find_freestmt.1896_933 = find_freestmt;
  stderr.1897_934 = stderr;
  fprintf2 (stderr.1897_934, "\x1b[40;31m  \tpossible double free :%d \x1b[0m\n", find_freestmt.1896_933);

  <bb 785> :
  stderr.1898_935 = stderr;
  fprintf2 (stderr.1898_935, "\n======================================================================\n");
  goto <bb 798>; [INV]

  <bb 786> :
  find_freestmt.1899_936 = find_freestmt;
  if (find_freestmt.1899_936 == 1)
    goto <bb 787>; [INV]
  else
    goto <bb 793>; [INV]

  <bb 787> :
  stderr.1900_937 = stderr;
  fprintf2 (stderr.1900_937, "\n======================================================================\n");

  <bb 788> :
  stderr.1901_938 = stderr;
  fprintf2 (stderr.1901_938, "\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n");

  <bb 789> :
  if (find_phistmt == 1)
    goto <bb 790>; [INV]
  else
    goto <bb 791>; [INV]

  <bb 790> :
  stderr.1902_939 = stderr;
  fprintf2 (stderr.1902_939, "\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n");
  goto <bb 792>; [INV]

  <bb 791> :
  stderr.1903_940 = stderr;
  fprintf2 (stderr.1903_940, "\x1b[40;32m   Maybe you don\'t have memory leak.... need more checks  \x1b[0m\n");

  <bb 792> :
  stderr.1904_941 = stderr;
  fprintf2 (stderr.1904_941, "\n======================================================================\n\n");
  goto <bb 798>; [INV]

  <bb 793> :
  find_freestmt.1905_942 = find_freestmt;
  if (find_freestmt.1905_942 == 0)
    goto <bb 794>; [INV]
  else
    goto <bb 798>; [INV]

  <bb 794> :
  stderr.1906_943 = stderr;
  fprintf2 (stderr.1906_943, "\n======================================================================\n");

  <bb 795> :
  stderr.1907_944 = stderr;
  fprintf2 (stderr.1907_944, "\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n");

  <bb 796> :
  stderr.1908_945 = stderr;
  fprintf2 (stderr.1908_945, "\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n");

  <bb 797> :
  stderr.1909_946 = stderr;
  fprintf2 (stderr.1909_946, "\n======================================================================\n");

  <bb 798> :
  stderr.1910_947 = stderr;
  fprintf2 (stderr.1910_947, "\n======================================================================\n");

  <bb 799> :
  std::vector<basic_block_def*>::~vector (&earlyend);
  finally_tmp.1912 = 1;

  <bb 800> :
  std::vector<free_type>::~vector (&free_array);
  if (finally_tmp.1912 == 1)
    goto <bb 801>; [INV]
  else
    goto <bb 803>; [INV]

  <bb 801> :
<L662>:

  <bb 802> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  goto <bb 804>; [INV]

  <bb 803> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  goto <bb 805>; [INV]

  <bb 804> :
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};

  <bb 805> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 806>; [INV]
  else
    goto <bb 807>; [INV]

  <bb 806> :
  iftmp.1911 = table_temp->target;
  goto <bb 808>; [INV]

  <bb 807> :
  iftmp.1911 = 0B;

  <bb 808> :
  t = iftmp.1911;

  <bb 809> :
  if (t != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 810>; [INV]

  <bb 810> :
  std::vector<defmalloc_type>::~vector (&defmalloc_array);
  start = {CLOBBER};
  start2 = {CLOBBER};
  defmalloc_array = {CLOBBER};
  return;

  <bb 811> :
<L679>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 4

  <bb 812> :
<L680>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 3

  <bb 813> :
<L681>:
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 2

  <bb 814> :
<L682>:
  operator delete (D.202651, 48);
  resx 14

  <bb 815> :
<L683>:
  relate_type = {CLOBBER};
  resx 19

  <bb 816> :
<L684>:
  free_type = {CLOBBER};
  resx 18

  <bb 817> :
<L685>:
  operator delete (D.202666, 48);
  resx 23

  <bb 818> :
<L686>:
  it_i = {CLOBBER};
  resx 22

  <bb 819> :
<L687>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 30

  <bb 820> :
<L688>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 29

  <bb 821> :
<L689>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 28

  <bb 822> :
<L690>:
  free_type = {CLOBBER};
  resx 37

  <bb 823> :
<L691>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 36

  <bb 824> :
<L692>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 35

  <bb 825> :
<L693>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 34

  <bb 826> :
<L694>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 45

  <bb 827> :
<L695>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 44

  <bb 828> :
<L696>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 43

  <bb 829> :
<L697>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 49

  <bb 830> :
<L698>:
  start = {CLOBBER};
  resx 42

  <bb 831> :
<L699>:
  start = {CLOBBER};
  resx 52

  <bb 832> :
<L700>:
  function_relate_array::~function_relate_array (&maxbb_array);
  resx 17

  <bb 833> :
<L701>:
  std::vector<relate_type>::~vector (&maxbb_type_array);
  resx 16

  <bb 834> :
<L702>:
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  resx 13

  <bb 835> :
<L703>:
  defmalloc_type::~defmalloc_type (&defmalloc_type);
  resx 58

  <bb 836> :
<L704>:
  defmalloc_type = {CLOBBER};
  resx 57

  <bb 837> :
<L705>:
  std::vector<basic_block_def*>::~vector (&earlyend);
  resx 12

  <bb 838> :
<L706>:
  std::vector<free_type>::~vector (&free_array);
  resx 11

  <bb 839> :
<L707>:
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  resx 10

  <bb 840> :
<L708>:
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  resx 9

  <bb 841> :
<L709>:
  std::vector<defmalloc_type>::~vector (&defmalloc_array);
  resx 8

  <bb 842> :
<L710>:
  start = {CLOBBER};
  start2 = {CLOBBER};
  defmalloc_array = {CLOBBER};
  resx 1

}



;; Function std::vector<defmalloc_type>::vector (_ZNSt6vectorI14defmalloc_typeSaIS0_EEC2Ev, funcdef_no=6810, decl_uid=202476, cgraph_uid=3441, symbol_order=4223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<defmalloc_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.202484;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_base (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EEC2Ev, funcdef_no=6808, decl_uid=201934, cgraph_uid=3438, symbol_order=4220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7802, decl_uid=201826, cgraph_uid=4434, symbol_order=5226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<defmalloc_type>::allocator (this);
  _1 = &this->D.201829;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<defmalloc_type>::allocator (_ZNSaI14defmalloc_typeEC2Ev, funcdef_no=8754, decl_uid=201604, cgraph_uid=5386, symbol_order=6182)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<defmalloc_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeEC2Ev, funcdef_no=9600, decl_uid=201533, cgraph_uid=6232, symbol_order=7028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8757, decl_uid=201776, cgraph_uid=5389, symbol_order=6185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6207, decl_uid=170343, cgraph_uid=3183, symbol_order=3939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170351;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6205, decl_uid=169801, cgraph_uid=3180, symbol_order=3936)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2Ev, funcdef_no=7582, decl_uid=169693, cgraph_uid=4214, symbol_order=5006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this);
  _1 = &this->D.169696;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2Ev, funcdef_no=8399, decl_uid=169471, cgraph_uid=5031, symbol_order=5827)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2Ev, funcdef_no=9206, decl_uid=169400, cgraph_uid=5838, symbol_order=6634)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8402, decl_uid=169643, cgraph_uid=5034, symbol_order=5830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7817, decl_uid=191899, cgraph_uid=4449, symbol_order=5241)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8768, decl_uid=191858, cgraph_uid=5400, symbol_order=6196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.257603;
  unsigned int D.257602;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.257602 = hash_table_higher_prime_index (size);
  size_prime_index = D.257602;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.257603 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.257603;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7825, decl_uid=202711, cgraph_uid=4457, symbol_order=5249)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (const struct __normal_iterator * const this)
{
  struct relate_type * D.257604;

  <bb 2> :
  D.257604 = this->_M_current;

  <bb 3> :
<L0>:
  return D.257604;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7824, decl_uid=202713, cgraph_uid=4456, symbol_order=5248)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.257606;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.257606 = this;

  <bb 3> :
<L0>:
  return D.257606;

}



;; Function __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIP11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7823, decl_uid=202811, cgraph_uid=4455, symbol_order=5247)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.257608;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.257608 = _2 != _4;

  <bb 3> :
<L0>:
  return D.257608;

}



;; Function hash_map<tree_node*, function_relate_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6816, decl_uid=202827, cgraph_uid=3447, symbol_order=4229)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7827, decl_uid=191868, cgraph_uid=4459, symbol_order=5251)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257623;
  bool D.257622;
  size_t i;
  bool iftmp.1914;
  bool retval.1913;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.257622 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257622;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.257623 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257623;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1914 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1914 = 0;

  <bb 7> :
  retval.1913 = iftmp.1914;
  if (retval.1913 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_relate_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8776, decl_uid=191642, cgraph_uid=5408, symbol_order=6204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9606, decl_uid=228646, cgraph_uid=6238, symbol_order=7034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_relate_array::~function_relate_array (_2);
  return;

}



;; Function std::vector<relate_type>::operator[] (_ZNSt6vectorI11relate_typeSaIS0_EEixEm, funcdef_no=7820, decl_uid=179511, cgraph_uid=4452, symbol_order=5244)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<relate_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.257624;

  <bb 2> :
  _1 = this->D.179858._M_impl.D.179203._M_start;
  _2 = __n * 48;
  D.257624 = _1 + _2;

  <bb 3> :
<L0>:
  return D.257624;

}



;; Function ei_start_1 (_ZL10ei_start_1PP3vecIP8edge_def5va_gc8vl_embedE, funcdef_no=1666, decl_uid=75277, cgraph_uid=817, symbol_order=969)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_iterator ei_start_1 (struct vec * * ev)
{
  struct edge_iterator i;
  struct edge_iterator D.257626;

  <bb 2> :
  i.index = 0;
  i.container = ev;
  D.257626 = i;
  i = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257626;

}



;; Function hash_map<cgraph_node*, Graph>::get (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7829, decl_uid=202949, cgraph_uid=4461, symbol_order=5253)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct Graph * hash_map<cgraph_node*, Graph>::get (struct hash_map * const this, struct cgraph_node * const & k)
{
  bool D.257637;
  struct hash_entry & D.257636;
  unsigned int D.257635;
  struct hash_entry & e;
  struct Graph * iftmp.1915;
  struct Graph * D.257629;

  <bb 2> :
  _1 = &this->m_table;
  D.257635 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (k);
  _2 = D.257635;
  D.257636 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.257636;
  D.257637 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  _3 = D.257637;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1915 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1915 = &e->m_value;

  <bb 5> :
  D.257629 = iftmp.1915;

  <bb 6> :
<L3>:
  return D.257629;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE4hashERKS2_, funcdef_no=8778, decl_uid=202905, cgraph_uid=5410, symbol_order=6206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (struct cgraph_node * const & h)
{
  hashval_t D.257638;

  <bb 2> :
  D.257638 = pointer_hash<cgraph_node>::hash (h);

  <bb 3> :
<L0>:
  return D.257638;

}



;; Function pointer_hash<cgraph_node>::hash (_ZN12pointer_hashI11cgraph_nodeE4hashERKPS0_, funcdef_no=9607, decl_uid=202862, cgraph_uid=6239, symbol_order=7035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<cgraph_node>::hash (struct cgraph_node * const & candidate)
{
  hashval_t D.257640;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.257640 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.257640;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8779, decl_uid=203092, cgraph_uid=5411, symbol_order=6207)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, struct cgraph_node * const & comparable, hashval_t hash)
{
  bool D.257674;
  bool D.257673;
  bool D.257672;
  bool D.257671;
  bool D.257670;
  bool D.257669;
  struct value_type * D.257668;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.1919;
  bool retval.1918;
  struct value_type & D.257654;
  bool iftmp.1917;
  bool retval.1916;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 64;
  entry = _5 + _7;
  D.257669 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.257669;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.257670 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.257670;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.257671 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  _11 = D.257671;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1917 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1917 = 0;

  <bb 8> :
  retval.1916 = iftmp.1917;
  if (retval.1916 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.257654 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 64;
  entry = _17 + _19;
  D.257672 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.257672;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.257673 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.257673;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.257674 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  _23 = D.257674;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1919 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1919 = 0;

  <bb 18> :
  retval.1918 = iftmp.1919;
  if (retval.1918 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.257654 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.257654;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8949, decl_uid=203188, cgraph_uid=5581, symbol_order=6377)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.257677;
  bool D.257675;

  <bb 2> :
  D.257677 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (v);
  D.257675 = D.257677;

  <bb 3> :
<L0>:
  return D.257675;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8930, decl_uid=203018, cgraph_uid=5562, symbol_order=6358)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.257680;
  bool D.257678;

  <bb 2> :
  D.257680 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.257678 = D.257680;

  <bb 3> :
<L0>:
  return D.257678;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8950, decl_uid=203186, cgraph_uid=5582, symbol_order=6378)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.257683;
  bool D.257681;

  <bb 2> :
  D.257683 = hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (v);
  D.257681 = D.257683;

  <bb 3> :
<L0>:
  return D.257681;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9796, decl_uid=203013, cgraph_uid=6428, symbol_order=7224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.257686;
  bool D.257684;

  <bb 2> :
  D.257686 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.257684 = D.257686;

  <bb 3> :
<L0>:
  return D.257684;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10359, decl_uid=239491, cgraph_uid=6991, symbol_order=7791)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.257687;

  <bb 2> :
  _1 = entry->m_key;
  D.257687 = pointer_hash<cgraph_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.257687;

}



;; Function pointer_hash<cgraph_node>::is_deleted (_ZN12pointer_hashI11cgraph_nodeE10is_deletedEPS0_, funcdef_no=10780, decl_uid=202872, cgraph_uid=7412, symbol_order=8212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_deleted (struct cgraph_node * e)
{
  bool D.257689;

  <bb 2> :
  D.257689 = e == 1B;

  <bb 3> :
<L0>:
  return D.257689;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::equal (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9609, decl_uid=203006, cgraph_uid=6241, symbol_order=7037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::equal (const struct hash_entry & a, struct cgraph_node * const & b)
{
  bool D.257693;
  bool D.257691;

  <bb 2> :
  _1 = &a->m_key;
  D.257693 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_1, b);
  D.257691 = D.257693;

  <bb 3> :
<L0>:
  return D.257691;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10equal_keysERKS2_S7_, funcdef_no=10217, decl_uid=202907, cgraph_uid=6849, symbol_order=7649)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (struct cgraph_node * const & k1, struct cgraph_node * const & k2)
{
  bool D.257694;

  <bb 2> :
  D.257694 = pointer_hash<cgraph_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.257694;

}



;; Function pointer_hash<cgraph_node>::equal (_ZN12pointer_hashI11cgraph_nodeE5equalERKPS0_S4_, funcdef_no=10688, decl_uid=202864, cgraph_uid=7320, symbol_order=8120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::equal (struct cgraph_node * const & existing, struct cgraph_node * const & candidate)
{
  bool D.257696;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.257696 = _1 == _2;

  <bb 3> :
<L0>:
  return D.257696;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8780, decl_uid=215728, cgraph_uid=5412, symbol_order=6208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.257698;

  <bb 2> :
  _1 = entry->m_key;
  D.257698 = pointer_hash<cgraph_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.257698;

}



;; Function pointer_hash<cgraph_node>::is_empty (_ZN12pointer_hashI11cgraph_nodeE8is_emptyEPS0_, funcdef_no=9610, decl_uid=202874, cgraph_uid=6242, symbol_order=7038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_empty (struct cgraph_node * e)
{
  bool D.257700;

  <bb 2> :
  D.257700 = e == 0B;

  <bb 3> :
<L0>:
  return D.257700;

}



;; Function ei_next (_ZL7ei_nextP13edge_iterator, funcdef_no=1670, decl_uid=75328, cgraph_uid=821, symbol_order=973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ei_next (struct edge_iterator * i)
{
  <bb 2> :
  _1 = i->index;
  _2 = _1 + 1;
  i->index = _2;
  return;

}



;; Function ei_cond (_ZL7ei_cond13edge_iteratorPP8edge_def, funcdef_no=1674, decl_uid=75345, cgraph_uid=825, symbol_order=977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
bool ei_cond (struct edge_iterator ei, struct edge_def * * p)
{
  struct edge_def * D.257708;
  bool D.257707;
  bool D.257705;
  bool retval.1920;

  <bb 2> :
  D.257707 = ei_end_p (ei);
  _1 = D.257707;
  retval.1920 = ~_1;
  if (retval.1920 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.257708 = ei_edge (ei);
  _2 = D.257708;
  *p = _2;
  D.257705 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  *p = 0B;
  D.257705 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.257705;

}



;; Function ei_end_p (_ZL8ei_end_p13edge_iterator, funcdef_no=1668, decl_uid=75320, cgraph_uid=819, symbol_order=971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool ei_end_p (struct edge_iterator i)
{
  unsigned int D.257711;
  bool D.257709;

  <bb 2> :
  _1 = i.index;
  _2 = ei_container (i);
  D.257711 = vec_safe_length<edge_def*, va_gc> (_2);
  _3 = D.257711;
  D.257709 = _1 == _3;

  <bb 3> :
<L0>:
  return D.257709;

}



;; Function ei_container (_ZL12ei_container13edge_iterator, funcdef_no=1665, decl_uid=75274, cgraph_uid=816, symbol_order=968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vec * ei_container (struct edge_iterator i)
{
  struct vec * D.257712;

  <bb 2> :
  _1 = i.container;
  D.257712 = *_1;

  <bb 3> :
<L0>:
  return D.257712;

}



;; Function vec_safe_length<edge_def*, va_gc> (_Z15vec_safe_lengthIP8edge_def5va_gcEjPK3vecIT_T0_8vl_embedE, funcdef_no=6988, decl_uid=75252, cgraph_uid=3620, symbol_order=4409)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int vec_safe_length<edge_def*, va_gc> (const struct vec * v)
{
  unsigned int iftmp.1921;
  unsigned int D.257714;

  <bb 2> :
  if (v != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1921 = vec<edge_def*, va_gc>::length (v);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1921 = 0;

  <bb 5> :
  D.257714 = iftmp.1921;

  <bb 6> :
<L3>:
  return D.257714;

}



;; Function vec<edge_def*, va_gc>::length (_ZNK3vecIP8edge_def5va_gc8vl_embedE6lengthEv, funcdef_no=7999, decl_uid=75146, cgraph_uid=4631, symbol_order=5423)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int vec<edge_def*, va_gc>::length (const struct vec * const this)
{
  unsigned int D.257720;

  <bb 2> :
  D.257720 = this->m_vecpfx.m_num;

  <bb 3> :
<L0>:
  return D.257720;

}



;; Function ei_edge (_ZL7ei_edge13edge_iterator, funcdef_no=1672, decl_uid=75335, cgraph_uid=823, symbol_order=975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * ei_edge (struct edge_iterator i)
{
  struct edge_def * D.257722;

  <bb 2> :
  _1 = ei_container (i);
  _2 = i.index;
  _3 = vec<edge_def*, va_gc>::operator[] (_1, _2);
  D.257722 = *_3;

  <bb 3> :
<L0>:
  return D.257722;

}



;; Function vec<edge_def*, va_gc>::operator[] (_ZN3vecIP8edge_def5va_gc8vl_embedEixEj, funcdef_no=6989, decl_uid=75165, cgraph_uid=3621, symbol_order=4410)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * & vec<edge_def*, va_gc>::operator[] (struct vec * const this, unsigned int ix)
{
  struct edge_def * & D.257724;

  <bb 2> :
  D.257724 = &this->m_vecdata[ix];

  <bb 3> :
<L0>:
  return D.257724;

}



;; Function gimple_phi_arg_def (_ZL18gimple_phi_arg_defP6gimplem, funcdef_no=2276, decl_uid=93486, cgraph_uid=1413, symbol_order=1573)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_arg_def (struct gimple * gs, size_t index)
{
  struct phi_arg_d * D.257728;
  union tree_node * D.257726;

  <bb 2> :
  _1 = (unsigned int) index;
  D.257728 = gimple_phi_arg (gs, _1);
  _2 = D.257728;
  D.257726 = _2->def;

  <bb 3> :
<L0>:
  return D.257726;

}



;; Function gimple_phi_arg (_ZL14gimple_phi_argP6gimplej, funcdef_no=2271, decl_uid=93448, cgraph_uid=1408, symbol_order=1568)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct phi_arg_d * gimple_phi_arg (struct gimple * gs, unsigned int index)
{
  struct gphi * D.257731;
  struct gphi * phi_stmt;
  struct phi_arg_d * D.257729;

  <bb 2> :
  D.257731 = as_a<gphi*, gimple> (gs);
  phi_stmt = D.257731;
  D.257729 = gimple_phi_arg (phi_stmt, index);

  <bb 3> :
<L0>:
  return D.257729;

}



;; Function as_a<gphi*, gimple> (_Z4as_aIP4gphi6gimpleET_PT0_, funcdef_no=7088, decl_uid=93430, cgraph_uid=3720, symbol_order=4509)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gphi * as_a<gphi*, gimple> (struct gimple * p)
{
  struct gphi * D.257732;

  <bb 2> :
  D.257732 = reinterpret_is_a_helper<gphi*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.257732;

}



;; Function gimple_phi_arg (_ZL14gimple_phi_argP4gphij, funcdef_no=2269, decl_uid=93440, cgraph_uid=1406, symbol_order=1566)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct phi_arg_d * gimple_phi_arg (struct gphi * gs, unsigned int index)
{
  struct phi_arg_d * D.257734;

  <bb 2> :
  D.257734 = &gs->args[index];

  <bb 3> :
<L0>:
  return D.257734;

}



;; Function gimple_phi_num_args (_ZL19gimple_phi_num_argsPK6gimple, funcdef_no=2263, decl_uid=93413, cgraph_uid=1400, symbol_order=1560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_phi_num_args (const struct gimple * gs)
{
  const struct gphi * D.257738;
  const struct gphi * phi_stmt;
  unsigned int D.257736;

  <bb 2> :
  D.257738 = as_a<const gphi*, const gimple> (gs);
  phi_stmt = D.257738;
  D.257736 = phi_stmt->nargs;

  <bb 3> :
<L0>:
  return D.257736;

}



;; Function std::vector<free_type>::at (_ZNSt6vectorI9free_typeSaIS0_EE2atEm, funcdef_no=7830, decl_uid=173205, cgraph_uid=4462, symbol_order=5254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::at (struct vector * const this, size_type __n)
{
  struct value_type & D.257739;

  <bb 2> :
  std::vector<free_type>::_M_range_check (this, __n);
  D.257739 = std::vector<free_type>::operator[] (this, __n);

  <bb 3> :
<L0>:
  return D.257739;

}



;; Function std::vector<free_type>::_M_range_check (_ZNKSt6vectorI9free_typeSaIS0_EE14_M_range_checkEm, funcdef_no=8781, decl_uid=173202, cgraph_uid=5413, symbol_order=6209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
void std::vector<free_type>::_M_range_check (const struct vector * const this, size_type __n)
{
  bool retval.1922;

  <bb 2> :
  _1 = std::vector<free_type>::size (this);
  retval.1922 = __n >= _1;
  if (retval.1922 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = std::vector<free_type>::size (this);
  std::__throw_out_of_range_fmt ("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, _2);

  <bb 4> :
  return;

}



;; Function defmalloc_type::defmalloc_type (_ZN14defmalloc_typeC2Ev, funcdef_no=6819, decl_uid=203291, cgraph_uid=3450, symbol_order=4232)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::defmalloc_type (struct defmalloc_type * const this)
{
  <bb 2> :
  _1 = &this->free_array;
  std::vector<free_type>::vector (_1);
  return;

}



;; Function std::vector<defmalloc_type>::push_back (_ZNSt6vectorI14defmalloc_typeSaIS0_EE9push_backERKS0_, funcdef_no=7831, decl_uid=202164, cgraph_uid=4464, symbol_order=5256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<defmalloc_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.257747;

  <bb 2> :
  _1 = this->D.202484._M_impl.D.201829._M_finish;
  _2 = this->D.202484._M_impl.D.201829._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.202484._M_impl.D.201829._M_finish;
  _4 = &this->D.202484._M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (_4, _3, __x);
  _5 = this->D.202484._M_impl.D.201829._M_finish;
  _6 = _5 + 40;
  this->D.202484._M_impl.D.201829._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.257747 = std::vector<defmalloc_type>::end (this);
  std::vector<defmalloc_type>::_M_realloc_insert<const defmalloc_type&> (this, D.257747, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (_ZNSt16allocator_traitsISaI14defmalloc_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8782, decl_uid=215734, cgraph_uid=5414, symbol_order=6210)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (struct allocator_type & __a, struct defmalloc_type * __p, const struct defmalloc_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const defmalloc_type&> (__args#0);
  __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, const defmalloc_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const defmalloc_type&> (_ZSt7forwardIRK14defmalloc_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9611, decl_uid=228677, cgraph_uid=6243, symbol_order=7039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct defmalloc_type & std::forward<const defmalloc_type&> (const struct type & __t)
{
  const struct defmalloc_type & D.257748;

  <bb 2> :
  D.257748 = __t;

  <bb 3> :
<L0>:
  return D.257748;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, const defmalloc_type&> (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9612, decl_uid=228679, cgraph_uid=6247, symbol_order=7043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, const defmalloc_type&> (struct new_allocator * const this, struct defmalloc_type * __p, const struct defmalloc_type & __args#0)
{
  void * D.237654;
  void * D.237653;
  const struct defmalloc_type & D.237658;

  <bb 2> :
  D.237658 = std::forward<const defmalloc_type&> (__args#0);
  D.237653 = __p;
  D.237654 = operator new (40, D.237653);
  defmalloc_type::defmalloc_type (D.237654, D.237658);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  operator delete (D.237654, D.237653);
  resx 1

}



;; Function defmalloc_type::defmalloc_type (_ZN14defmalloc_typeC2ERKS_, funcdef_no=9614, decl_uid=203299, cgraph_uid=6245, symbol_order=7041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::defmalloc_type (struct defmalloc_type * const this, const struct defmalloc_type & D.203301)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.203301->stmt;
  this->stmt = _1;
  _2 = D.203301->malloc_tree;
  this->malloc_tree = _2;
  _3 = &this->free_array;
  _4 = &D.203301->free_array;
  std::vector<free_type>::vector (_3, _4);
  return;

}



;; Function std::vector<defmalloc_type>::end (_ZNSt6vectorI14defmalloc_typeSaIS0_EE3endEv, funcdef_no=8783, decl_uid=202097, cgraph_uid=5415, symbol_order=6211)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<defmalloc_type>::end (struct vector * const this)
{
  struct iterator D.228702;
  struct iterator D.257751;

  <bb 2> :
  _1 = &this->D.202484._M_impl.D.201829._M_finish;
  __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (&D.228702, _1);
  D.257751 = D.228702;
  D.228702 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257751;

}



;; Function __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP14defmalloc_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9617, decl_uid=215981, cgraph_uid=6249, symbol_order=7045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (struct __normal_iterator * const this, struct defmalloc_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<defmalloc_type>::_M_realloc_insert<const defmalloc_type&> (_ZNSt6vectorI14defmalloc_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8784, decl_uid=216000, cgraph_uid=5419, symbol_order=6215)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { }
void std::vector<defmalloc_type>::_M_realloc_insert<const defmalloc_type&> (struct vector * const this, struct iterator __position, const struct defmalloc_type & __args#0)
{
  struct defmalloc_type * D.257758;
  const size_type D.257757;
  struct defmalloc_type * __new_finish;
  struct defmalloc_type * __new_start;
  const size_type __elems_before;
  struct defmalloc_type * __old_finish;
  struct defmalloc_type * __old_start;
  const size_type __len;
  struct iterator D.228710;

  <bb 2> :
  D.257757 = std::vector<defmalloc_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.257757;
  __old_start = this->D.202484._M_impl.D.201829._M_start;
  __old_finish = this->D.202484._M_impl.D.201829._M_finish;
  D.228710 = std::vector<defmalloc_type>::begin (this);
  _1 = __gnu_cxx::operator-<defmalloc_type*, std::vector<defmalloc_type> > (&__position, &D.228710);
  __elems_before = (const size_type) _1;
  D.228710 = {CLOBBER};
  _2 = &this->D.202484;
  D.257758 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_allocate (_2, __len);
  __new_start = D.257758;
  __new_finish = __new_start;
  _3 = std::forward<const defmalloc_type&> (__args#0);
  _4 = __elems_before * 40;
  _5 = __new_start + _4;
  _6 = &this->D.202484._M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (_6, _5, _3);

  <bb 3> :
  __new_finish = 0B;
  _7 = &this->D.202484;
  _8 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<defmalloc_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 40;
  _11 = &this->D.202484;
  _12 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<defmalloc_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.202484;
  _23 = this->D.202484._M_impl.D.201829._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 40;
  _26 = (long unsigned int) _25;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.202484._M_impl.D.201829._M_start = __new_start;
  this->D.202484._M_impl.D.201829._M_finish = __new_finish;
  _27 = __len * 40;
  _28 = __new_start + _27;
  this->D.202484._M_impl.D.201829._M_end_of_storage = _28;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 2

  <bb 5> :
<L1>:
  _15 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_15);
  if (__new_finish == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _16 = __elems_before * 40;
  _17 = __new_start + _16;
  _18 = &this->D.202484._M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (_18, _17);
  goto <bb 8>; [INV]

  <bb 7> :
  _19 = &this->D.202484;
  _20 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_19);
  std::_Destroy<defmalloc_type*, defmalloc_type> (__new_start, __new_finish, _20);

  <bb 8> :
  _21 = &this->D.202484;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (_21, __new_start, __len);

  <bb 9> :
  __cxa_rethrow ();

  <bb 10> :
<L5>:
  __cxa_end_catch ();
  resx 3

}



;; Function std::vector<defmalloc_type>::_M_check_len (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9619, decl_uid=202333, cgraph_uid=6251, symbol_order=7047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<defmalloc_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1925;
  size_type D.257765;
  const long unsigned int D.237667;
  bool retval.1923;

  <bb 2> :
  _1 = std::vector<defmalloc_type>::max_size (this);
  _2 = std::vector<defmalloc_type>::size (this);
  _3 = _1 - _2;
  __n.1924_4 = __n;
  retval.1923 = _3 < __n.1924_4;
  if (retval.1923 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<defmalloc_type>::size (this);
  _6 = std::vector<defmalloc_type>::size (this);
  D.237667 = _6;
  _7 = std::max<long unsigned int> (&D.237667, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237667 = {CLOBBER};
  _9 = std::vector<defmalloc_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<defmalloc_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1925 = std::vector<defmalloc_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1925 = __len;

  <bb 8> :
  D.257765 = iftmp.1925;

  <bb 9> :
<L6>:
  return D.257765;

}



;; Function std::vector<defmalloc_type>::size (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE4sizeEv, funcdef_no=10219, decl_uid=202117, cgraph_uid=6851, symbol_order=7651)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<defmalloc_type>::size (const struct vector * const this)
{
  size_type D.257772;

  <bb 2> :
  _1 = this->D.202484._M_impl.D.201829._M_finish;
  _2 = this->D.202484._M_impl.D.201829._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.257772 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.257772;

}



;; Function std::vector<defmalloc_type>::max_size (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE8max_sizeEv, funcdef_no=10218, decl_uid=202119, cgraph_uid=6850, symbol_order=7650)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<defmalloc_type>::max_size (const struct vector * const this)
{
  size_type D.257774;

  <bb 2> :
  _1 = &this->D.202484;
  _2 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_1);
  D.257774 = std::vector<defmalloc_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.257774;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI14defmalloc_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=10690, decl_uid=201719, cgraph_uid=7322, symbol_order=8122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.257776;

  <bb 2> :
  D.257776 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257776;

}



;; Function std::vector<defmalloc_type>::_S_max_size (_ZNSt6vectorI14defmalloc_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10689, decl_uid=202340, cgraph_uid=7321, symbol_order=8121)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<defmalloc_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.257778;

  <bb 2> :
  __diffmax = 230584300921369395;
  _1 = std::allocator_traits<std::allocator<defmalloc_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.257778 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257778;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::max_size (_ZNSt16allocator_traitsISaI14defmalloc_typeEE8max_sizeERKS1_, funcdef_no=10889, decl_uid=201654, cgraph_uid=7521, symbol_order=8323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<defmalloc_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.257781;

  <bb 2> :
  D.257781 = __gnu_cxx::new_allocator<defmalloc_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.257781;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI14defmalloc_typeE8max_sizeEv, funcdef_no=10989, decl_uid=201496, cgraph_uid=7621, symbol_order=8423)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<defmalloc_type>::max_size (const struct new_allocator * const this)
{
  size_type D.257783;

  <bb 2> :
  D.257783 = __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.257783;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI14defmalloc_typeE11_M_max_sizeEv, funcdef_no=10692, decl_uid=201515, cgraph_uid=7323, symbol_order=8123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.257785;

  <bb 2> :
  D.257785 = 230584300921369395;

  <bb 3> :
<L0>:
  return D.257785;

}



;; Function std::vector<defmalloc_type>::begin (_ZNSt6vectorI14defmalloc_typeSaIS0_EE5beginEv, funcdef_no=9620, decl_uid=202093, cgraph_uid=6252, symbol_order=7048)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<defmalloc_type>::begin (struct vector * const this)
{
  struct iterator D.237669;
  struct iterator D.257787;

  <bb 2> :
  _1 = &this->D.202484._M_impl.D.201829._M_start;
  __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (&D.237669, _1);
  D.257787 = D.237669;
  D.237669 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257787;

}



;; Function __gnu_cxx::operator-<defmalloc_type*, std::vector<defmalloc_type> > (_ZN9__gnu_cxxmiIP14defmalloc_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9621, decl_uid=228711, cgraph_uid=6253, symbol_order=7049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<defmalloc_type*, std::vector<defmalloc_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.257790;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.257790 = _5 /[ex] 40;

  <bb 3> :
<L0>:
  return D.257790;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_allocate (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE11_M_allocateEm, funcdef_no=9622, decl_uid=201833, cgraph_uid=6254, symbol_order=7050)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct defmalloc_type * std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct defmalloc_type * D.257798;
  struct defmalloc_type * iftmp.1926;
  struct defmalloc_type * D.257792;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.257798 = std::allocator_traits<std::allocator<defmalloc_type> >::allocate (_1, __n);
  iftmp.1926 = D.257798;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1926 = 0B;

  <bb 5> :
  D.257792 = iftmp.1926;

  <bb 6> :
<L3>:
  return D.257792;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::allocate (_ZNSt16allocator_traitsISaI14defmalloc_typeEE8allocateERS1_m, funcdef_no=10220, decl_uid=201634, cgraph_uid=6852, symbol_order=7652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct defmalloc_type * std::allocator_traits<std::allocator<defmalloc_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct defmalloc_type * D.257801;
  struct defmalloc_type * D.257799;

  <bb 2> :
  D.257801 = __gnu_cxx::new_allocator<defmalloc_type>::allocate (__a, __n, 0B);
  D.257799 = D.257801;

  <bb 3> :
<L0>:
  return D.257799;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::allocate (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE8allocateEmPKv, funcdef_no=10691, decl_uid=201488, cgraph_uid=7324, symbol_order=8124)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct defmalloc_type * __gnu_cxx::new_allocator<defmalloc_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245860)
{
  struct defmalloc_type * D.257812;
  struct defmalloc_type * D.257811;
  align_val_t __al;
  struct defmalloc_type * D.257809;
  bool retval.1927;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1927 = _4 != 0;
  if (retval.1927 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 461168601842738790)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 40;
  D.257812 = operator new (_6);
  D.257809 = D.257812;

  <bb 7> :
<L6>:
  return D.257809;

}



;; Function __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP14defmalloc_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9624, decl_uid=215968, cgraph_uid=6256, symbol_order=7052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * const & __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (const struct __normal_iterator * const this)
{
  struct defmalloc_type * const & D.257813;

  <bb 2> :
  D.257813 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.257813;

}



;; Function std::vector<defmalloc_type>::_S_relocate (_ZNSt6vectorI14defmalloc_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9623, decl_uid=201991, cgraph_uid=6255, symbol_order=7051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::vector<defmalloc_type>::_S_relocate (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.257816;
  struct defmalloc_type * D.257815;

  <bb 2> :
  D.257815 = std::vector<defmalloc_type>::_S_do_relocate (__first, __last, __result, __alloc, D.257816);

  <bb 3> :
<L0>:
  return D.257815;

}



;; Function std::vector<defmalloc_type>::_S_do_relocate (_ZNSt6vectorI14defmalloc_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10221, decl_uid=201979, cgraph_uid=6853, symbol_order=7653)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::vector<defmalloc_type>::_S_do_relocate (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242615)
{
  struct defmalloc_type * D.257818;

  <bb 2> :
  D.257818 = std::__relocate_a<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.257818;

}



;; Function std::__relocate_a<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (_ZSt12__relocate_aIP14defmalloc_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10693, decl_uid=228876, cgraph_uid=7325, symbol_order=8125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::__relocate_a<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct allocator & __alloc)
{
  struct defmalloc_type * D.257820;

  <bb 2> :
  _1 = std::__niter_base<defmalloc_type*> (__result);
  _2 = std::__niter_base<defmalloc_type*> (__last);
  _3 = std::__niter_base<defmalloc_type*> (__first);
  D.257820 = std::__relocate_a_1<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.257820;

}



;; Function std::__niter_base<defmalloc_type*> (_ZSt12__niter_baseIP14defmalloc_typeET_S2_, funcdef_no=10890, decl_uid=228882, cgraph_uid=7522, symbol_order=8324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::__niter_base<defmalloc_type*> (struct defmalloc_type * __it)
{
  struct defmalloc_type * D.257822;

  <bb 2> :
  D.257822 = __it;

  <bb 3> :
<L0>:
  return D.257822;

}



;; Function std::__relocate_a_1<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (_ZSt14__relocate_a_1IP14defmalloc_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10891, decl_uid=229027, cgraph_uid=7523, symbol_order=8325)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct defmalloc_type * std::__relocate_a_1<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct allocator & __alloc)
{
  struct defmalloc_type * __cur;
  struct defmalloc_type * D.257824;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<defmalloc_type> (__first);
  _2 = std::__addressof<defmalloc_type> (__cur);
  std::__relocate_object_a<defmalloc_type, defmalloc_type, std::allocator<defmalloc_type> > (_2, _1, __alloc);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.257824 = __cur;

  <bb 6> :
<L3>:
  return D.257824;

}



;; Function std::__addressof<defmalloc_type> (_ZSt11__addressofI14defmalloc_typeEPT_RS1_, funcdef_no=10681, decl_uid=229083, cgraph_uid=7313, symbol_order=8113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::__addressof<defmalloc_type> (struct defmalloc_type & __r)
{
  struct defmalloc_type * D.257826;

  <bb 2> :
  D.257826 = __r;

  <bb 3> :
<L0>:
  return D.257826;

}



;; Function std::__relocate_object_a<defmalloc_type, defmalloc_type, std::allocator<defmalloc_type> > (_ZSt19__relocate_object_aI14defmalloc_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10990, decl_uid=229056, cgraph_uid=7622, symbol_order=8424)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<defmalloc_type, defmalloc_type, std::allocator<defmalloc_type> > (struct defmalloc_type * restrict __dest, struct defmalloc_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<defmalloc_type&> (__orig);
  std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, defmalloc_type> (__alloc, __dest, _1);
  _2 = std::__addressof<defmalloc_type> (__orig);
  std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (__alloc, _2);
  return;

}



;; Function std::move<defmalloc_type&> (_ZSt4moveIR14defmalloc_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11034, decl_uid=229068, cgraph_uid=7666, symbol_order=8468)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<defmalloc_type&> (struct defmalloc_type & __t)
{
  struct type & D.257828;

  <bb 2> :
  D.257828 = __t;

  <bb 3> :
<L0>:
  return D.257828;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, defmalloc_type> (_ZNSt16allocator_traitsISaI14defmalloc_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11035, decl_uid=229070, cgraph_uid=7667, symbol_order=8469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, defmalloc_type> (struct allocator_type & __a, struct defmalloc_type * __p, struct defmalloc_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<defmalloc_type> (__args#0);
  __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, defmalloc_type> (__a, __p, _1);
  return;

}



;; Function std::forward<defmalloc_type> (_ZSt7forwardI14defmalloc_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11056, decl_uid=247590, cgraph_uid=7688, symbol_order=8490)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct defmalloc_type & std::forward<defmalloc_type> (struct type & __t)
{
  struct defmalloc_type & D.257830;

  <bb 2> :
  D.257830 = __t;

  <bb 3> :
<L0>:
  return D.257830;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, defmalloc_type> (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11057, decl_uid=247592, cgraph_uid=7692, symbol_order=8494)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, defmalloc_type> (struct new_allocator * const this, struct defmalloc_type * __p, struct defmalloc_type & __args#0)
{
  void * D.248009;
  void * D.248008;
  struct defmalloc_type & D.248013;

  <bb 2> :
  D.248013 = std::forward<defmalloc_type> (__args#0);
  D.248008 = __p;
  D.248009 = operator new (40, D.248008);
  defmalloc_type::defmalloc_type (D.248009, D.248013);
  return;

}



;; Function defmalloc_type::defmalloc_type (_ZN14defmalloc_typeC2EOS_, funcdef_no=11059, decl_uid=203308, cgraph_uid=7690, symbol_order=8492)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::defmalloc_type (struct defmalloc_type * const this, struct defmalloc_type & D.203310)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.203310->stmt;
  this->stmt = _1;
  _2 = D.203310->malloc_tree;
  this->malloc_tree = _2;
  _3 = &this->free_array;
  _4 = &D.203310->free_array;
  std::vector<free_type>::vector (_3, _4);
  return;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (_ZNSt16allocator_traitsISaI14defmalloc_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9625, decl_uid=229085, cgraph_uid=6257, symbol_order=7053)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (struct allocator_type & __a, struct defmalloc_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::destroy<defmalloc_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::destroy<defmalloc_type> (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE7destroyIS1_EEvPT_, funcdef_no=10222, decl_uid=237687, cgraph_uid=6854, symbol_order=7654)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::destroy<defmalloc_type> (struct new_allocator * const this, struct defmalloc_type * __p)
{
  <bb 2> :
  defmalloc_type::~defmalloc_type (__p);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8763, decl_uid=201717, cgraph_uid=5395, symbol_order=6191)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.257832;

  <bb 2> :
  D.257832 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257832;

}



;; Function std::_Destroy<defmalloc_type*, defmalloc_type> (_ZSt8_DestroyIP14defmalloc_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8764, decl_uid=215654, cgraph_uid=5396, symbol_order=6192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<defmalloc_type*, defmalloc_type> (struct defmalloc_type * __first, struct defmalloc_type * __last, struct allocator & D.228612)
{
  <bb 2> :
  std::_Destroy<defmalloc_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<defmalloc_type*> (_ZSt8_DestroyIP14defmalloc_typeEvT_S2_, funcdef_no=9603, decl_uid=228614, cgraph_uid=6235, symbol_order=7031)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<defmalloc_type*> (struct defmalloc_type * __first, struct defmalloc_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<defmalloc_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<defmalloc_type*> (_ZNSt12_Destroy_auxILb0EE9__destroyIP14defmalloc_typeEEvT_S4_, funcdef_no=10212, decl_uid=237600, cgraph_uid=6844, symbol_order=7644)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<defmalloc_type*> (struct defmalloc_type * __first, struct defmalloc_type * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<defmalloc_type> (__first);
  std::_Destroy<defmalloc_type> (_1);
  __first = __first + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Destroy<defmalloc_type> (_ZSt8_DestroyI14defmalloc_typeEvPT_, funcdef_no=10682, decl_uid=242585, cgraph_uid=7314, symbol_order=8114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<defmalloc_type> (struct defmalloc_type * __pointer)
{
  <bb 2> :
  defmalloc_type::~defmalloc_type (__pointer);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8762, decl_uid=201836, cgraph_uid=5394, symbol_order=6190)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (struct _Vector_base * const this, struct defmalloc_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::deallocate (_ZNSt16allocator_traitsISaI14defmalloc_typeEE10deallocateERS1_PS0_m, funcdef_no=9602, decl_uid=201641, cgraph_uid=6234, symbol_order=7030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::deallocate (struct allocator_type & __a, struct defmalloc_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE10deallocateEPS1_m, funcdef_no=10211, decl_uid=201492, cgraph_uid=6843, symbol_order=7643)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::deallocate (struct new_allocator * const this, struct defmalloc_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 40;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function defmalloc_type::~defmalloc_type (_ZN14defmalloc_typeD2Ev, funcdef_no=6822, decl_uid=203320, cgraph_uid=3453, symbol_order=4235)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::~defmalloc_type (struct defmalloc_type * const this)
{
  <bb 2> :
  _1 = &this->free_array;
  std::vector<free_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<basic_block_def*>::~vector (_ZNSt6vectorIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7814, decl_uid=170348, cgraph_uid=4446, symbol_order=5238)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170351;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.170351._M_impl.D.169696._M_finish;
  _4 = this->D.170351._M_impl.D.169696._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_4, _3, _2);
  _5 = &this->D.170351;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<basic_block_def**, basic_block_def*> (_ZSt8_DestroyIPP15basic_block_defS1_EvT_S3_RSaIT0_E, funcdef_no=8766, decl_uid=215669, cgraph_uid=5398, symbol_order=6194)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct allocator & D.228620)
{
  <bb 2> :
  std::_Destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy<basic_block_def**> (_ZSt8_DestroyIPP15basic_block_defEvT_S3_, funcdef_no=9604, decl_uid=228622, cgraph_uid=6236, symbol_order=7032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<basic_block_def**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP15basic_block_defEEvT_S5_, funcdef_no=10213, decl_uid=237619, cgraph_uid=6845, symbol_order=7645)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<basic_block_def**> (struct basic_block_def * * D.242591, struct basic_block_def * * D.242592)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7588, decl_uid=169806, cgraph_uid=4220, symbol_order=5012)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.169696._M_end_of_storage;
  _2 = this->_M_impl.D.169696._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.169696._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implD2Ev, funcdef_no=6203, decl_uid=169743, cgraph_uid=3177, symbol_order=3933)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<basic_block_def*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<basic_block_def*>::~allocator (_ZNSaIP15basic_block_defED2Ev, funcdef_no=7585, decl_uid=169476, cgraph_uid=4217, symbol_order=5009)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defED2Ev, funcdef_no=8405, decl_uid=169405, cgraph_uid=5037, symbol_order=5833)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<defmalloc_type>::~vector (_ZNSt6vectorI14defmalloc_typeSaIS0_EED2Ev, funcdef_no=7811, decl_uid=202481, cgraph_uid=4443, symbol_order=5235)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<defmalloc_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.202484;
  _2 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.202484._M_impl.D.201829._M_finish;
  _4 = this->D.202484._M_impl.D.201829._M_start;
  std::_Destroy<defmalloc_type*, defmalloc_type> (_4, _3, _2);
  _5 = &this->D.202484;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::~_Vector_base (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EED2Ev, funcdef_no=7808, decl_uid=201939, cgraph_uid=4440, symbol_order=5232)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.201829._M_end_of_storage;
  _2 = this->_M_impl.D.201829._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.201829._M_start;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6806, decl_uid=201876, cgraph_uid=3435, symbol_order=4217)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<defmalloc_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<defmalloc_type>::~allocator (_ZNSaI14defmalloc_typeED2Ev, funcdef_no=7805, decl_uid=201609, cgraph_uid=4437, symbol_order=5229)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<defmalloc_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeED2Ev, funcdef_no=8760, decl_uid=201538, cgraph_uid=5392, symbol_order=6188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function record_fucntion (_Z15record_fucntionP11cgraph_node, funcdef_no=6824, decl_uid=187084, cgraph_uid=3488, symbol_order=4270)

Removing basic block 50
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
;;
;; Loop 1
;;  header 61, latch 60
;;  depth 1, outer 0
;;  nodes: 61 60 59 57 58 6 11 10 9 8 7 5 4 56 55 54 53 30 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32 29 13 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14 12
;;
;; Loop 3
;;  header 53, latch 52
;;  depth 2, outer 1
;;  nodes: 53 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 4
;;  header 51, latch 50
;;  depth 3, outer 3
;;  nodes: 51 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 5
;;  header 45, latch 44
;;  depth 4, outer 4
;;  nodes: 45 44 42 43 41 46
;;
;; Loop 2
;;  header 29, latch 28
;;  depth 2, outer 1
;;  nodes: 29 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14
;;
;; Loop 6
;;  header 23, latch 22
;;  depth 3, outer 2
;;  nodes: 23 22 20 21
;; 2 succs { 72 3 }
;; 3 succs { 61 }
;; 4 succs { 71 5 }
;; 5 succs { 6 7 }
;; 6 succs { 58 }
;; 7 succs { 71 8 }
;; 8 succs { 71 9 }
;; 9 succs { 10 12 }
;; 10 succs { 71 11 }
;; 11 succs { 58 }
;; 12 succs { 69 13 }
;; 13 succs { 29 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 69 18 }
;; 18 succs { 19 28 }
;; 19 succs { 23 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 20 24 }
;; 24 succs { 25 27 }
;; 25 succs { 63 26 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 29 }
;; 29 succs { 14 30 }
;; 30 succs { 53 }
;; 31 succs { 51 }
;; 32 succs { 68 33 }
;; 33 succs { 34 50 }
;; 34 succs { 68 35 }
;; 35 succs { 36 50 }
;; 36 succs { 67 37 }
;; 37 succs { 66 38 }
;; 38 succs { 66 39 }
;; 39 succs { 40 48 }
;; 40 succs { 45 }
;; 41 succs { 42 43 }
;; 42 succs { 44 }
;; 43 succs { 44 }
;; 44 succs { 65 45 }
;; 45 succs { 65 46 }
;; 46 succs { 41 47 }
;; 47 succs { 48 }
;; 48 succs { 66 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 32 52 }
;; 52 succs { 53 }
;; 53 succs { 31 54 }
;; 54 succs { 69 55 }
;; 55 succs { 69 56 }
;; 56 succs { 69 57 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 72 60 }
;; 60 succs { 61 }
;; 61 succs { 4 62 }
;; 62 succs { 1 }
;; 63 succs { 64 }
;; 64 succs { 69 }
;; 65 succs { 66 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 }
;; 72 succs { }
void record_fucntion (struct cgraph_node * node)
{
  struct cgraph_node * D.257897;
  struct function * D.257891;
  bool D.257886;
  union tree_node * D.257885;
  union tree_node * D.257884;
  tree_code D.257883;
  tree_code D.257882;
  struct cgraph_node * D.257879;
  struct function * D.257878;
  bool D.257877;
  struct cgraph_node * D.257876;
  int init;
  struct edge_iterator ei;
  struct edge_def * e;
  struct symbolicinfo symbolicinfo;
  tree_code code;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_path path_type;
  struct iterator it_i;
  int find;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  struct vector function_path_array;
  struct function_path_array fun_array;
  availability avail;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.1945;
  bool retval.1943;
  bool retval.1937;
  bool retval.1936;
  struct iterator D.203695;
  bool retval.1933;
  bool retval.1932;
  struct cgraph_node * iftmp.1931;
  bool retval.1929;

  <bb 2> :
  symtab.1928_1 = symtab;
  D.257876 = symbol_table::first_defined_function (symtab.1928_1);

  <bb 3> :
  node = D.257876;
  goto <bb 61>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.257877 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.257877;
  retval.1929 = ~_3;
  if (retval.1929 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 7> :
  D.257878 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.257878;
  push_cfun (_4);

  <bb 9> :
  cfun.1930_5 = cfun;
  if (cfun.1930_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 12> :
  function_path_array::function_path_array (&fun_array);
  std::vector<function_path>::vector (&function_path_array);
  std::vector<function_path>::operator= (&fun_array.function_path_array, &function_path_array);

  <bb 13> :
  e = node->callees;
  goto <bb 29>; [INV]

  <bb 14> :
  _6 = e->caller;
  _7 = _6->inlined_to;
  if (_7 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _8 = e->caller;
  iftmp.1931 = _8->inlined_to;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1931 = e->caller;

  <bb 17> :
  caller = iftmp.1931;
  _9 = e->callee;
  D.257879 = cgraph_node::ultimate_alias_target (_9, &avail, caller);

  <bb 18> :
  callee = D.257879;
  if (callee != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 19> :
  find = 0;
  it_i._M_current = 0B;
  it_i = std::vector<function_path>::begin (&fun_array.function_path_array);
  goto <bb 23>; [INV]

  <bb 20> :
  _10 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (&it_i);
  _11 = _10->next;
  _12 = callee->D.97512.decl;
  retval.1932 = _11 == _12;
  if (retval.1932 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  find = 1;

  <bb 22> :
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (&it_i);

  <bb 23> :
  D.203695 = std::vector<function_path>::end (&fun_array.function_path_array);
  retval.1933 = __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (&it_i, &D.203695);
  D.203695 = {CLOBBER};
  if (retval.1933 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  path_type.cgnext = callee;
  _13 = callee->D.97512.decl;
  path_type.next = _13;
  std::vector<function_path>::push_back (&fun_array.function_path_array, &path_type);

  <bb 26> :
  path_type = {CLOBBER};

  <bb 27> :
  it_i = {CLOBBER};

  <bb 28> :
  e = e->next_callee;

  <bb 29> :
  if (e != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  cfun.1934_14 = cfun;
  _15 = cfun.1934_14->cfg;
  _16 = _15->x_entry_block_ptr;
  _17 = _16->next_bb;
  bb = _17;
  goto <bb 53>; [INV]

  <bb 31> :
  bb.1935_18 = bb;
  gsi = gsi_start_bb (bb.1935_18); [return slot optimization]
  goto <bb 51>; [INV]

  <bb 32> :
  gc = gsi_stmt (gsi);
  D.257882 = gimple_cond_code (gc);

  <bb 33> :
  _19 = D.257882;
  retval.1936 = _19 != 0;
  if (retval.1936 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 34> :
  D.257883 = gimple_cond_code (gc);

  <bb 35> :
  code = D.257883;
  _20 = is_gimple_assign (gc);
  retval.1937 = ~_20;
  if (retval.1937 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 36> :
  std::vector<basic_block_def*>::push_back (&symbolicExecution, &bb);

  <bb 37> :
  symbolicinfo::symbolicinfo (&symbolicinfo);
  symbolicinfo.cond_stmt = gc;
  D.257884 = gimple_cond_lhs (gc);

  <bb 38> :
  _21 = D.257884;
  symbolicinfo.cond_lhs = _21;
  D.257885 = gimple_cond_rhs (gc);

  <bb 39> :
  _22 = D.257885;
  symbolicinfo.cond_rhs = _22;
  symbolicinfo.node = node;
  cfun.1938_23 = cfun;
  _24 = cfun.1938_23->cfg;
  _25 = _24->x_exit_block_ptr;
  _26 = _25->prev_bb;
  bb.1939_27 = bb;
  if (_26 != bb.1939_27)
    goto <bb 40>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 40> :
  init = 0;
  bb.1940_28 = bb;
  _29 = &bb.1940_28->succs;
  ei = ei_start_1 (_29);
  goto <bb 45>; [INV]

  <bb 41> :
  if (init == 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  e.1941_30 = e;
  _31 = e.1941_30->dest;
  symbolicinfo.cond_truebranch = _31;
  goto <bb 44>; [INV]

  <bb 43> :
  e.1942_32 = e;
  _33 = e.1942_32->dest;
  symbolicinfo.cond_falsebranch = _33;

  <bb 44> :
  init = init + 1;
  ei_next (&ei);

  <bb 45> :
  D.257886 = ei_cond (ei, &e);

  <bb 46> :
  retval.1943 = D.257886;
  if (retval.1943 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 48> :
  syminfo.1944_34 = syminfo;
  hash_map<basic_block_def*, symbolicinfo>::put (syminfo.1944_34, &bb, &symbolicinfo);

  <bb 49> :
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  symbolicinfo = {CLOBBER};

  <bb 50> :
  gsi_next (&gsi);

  <bb 51> :
  _35 = gsi_end_p (gsi);
  retval.1945 = ~_35;
  if (retval.1945 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  gsi = {CLOBBER};
  bb.1946_36 = bb;
  _37 = bb.1946_36->next_bb;
  bb = _37;

  <bb 53> :
  cfun.1947_38 = cfun;
  _39 = cfun.1947_38->cfg;
  _40 = _39->x_exit_block_ptr;
  bb.1948_41 = bb;
  if (_40 != bb.1948_41)
    goto <bb 31>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  function_path_collect.1949_42 = function_path_collect;
  D.257891 = cgraph_node::get_fun (node);

  <bb 55> :
  _43 = D.257891;
  _44 = &_43->decl;
  hash_map<tree_node*, function_path_array>::put (function_path_collect.1949_42, _44, &fun_array);

  <bb 56> :
  pop_cfun ();

  <bb 57> :
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  goto <bb 59>; [INV]

  <bb 58> :
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};

  <bb 59> :
  symtab.1950_45 = symtab;
  D.257897 = symbol_table::next_defined_function (symtab.1950_45, node);

  <bb 60> :
  node = D.257897;

  <bb 61> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 62> :
  bb = {CLOBBER};
  return;

  <bb 63> :
<L49>:
  path_type = {CLOBBER};
  resx 7

  <bb 64> :
<L50>:
  it_i = {CLOBBER};
  resx 5

  <bb 65> :
<L51>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 13

  <bb 66> :
<L52>:
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  resx 12

  <bb 67> :
<L53>:
  symbolicinfo = {CLOBBER};
  resx 11

  <bb 68> :
<L54>:
  gsi = {CLOBBER};
  resx 10

  <bb 69> :
<L55>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 4

  <bb 70> :
<L56>:
  function_path_array::~function_path_array (&fun_array);
  resx 3

  <bb 71> :
<L57>:
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  resx 2

  <bb 72> :
<L58>:
  bb = {CLOBBER};
  resx 1

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2Ev, funcdef_no=6836, decl_uid=192401, cgraph_uid=3467, symbol_order=4249)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  this->funtion_type_num = 0;
  _1 = &this->function_path_array;
  std::vector<function_path>::vector (_1);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2Ev, funcdef_no=6834, decl_uid=175651, cgraph_uid=3464, symbol_order=4246)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175659;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2Ev, funcdef_no=6832, decl_uid=175109, cgraph_uid=3461, symbol_order=4243)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2Ev, funcdef_no=7834, decl_uid=175001, cgraph_uid=4466, symbol_order=5258)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this);
  _1 = &this->D.175004;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2Ev, funcdef_no=8789, decl_uid=174779, cgraph_uid=5421, symbol_order=6217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2Ev, funcdef_no=9627, decl_uid=174708, cgraph_uid=6259, symbol_order=7055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::operator= (_ZNSt6vectorI13function_pathSaIS0_EEaSERKS2_, funcdef_no=7842, decl_uid=175237, cgraph_uid=4476, symbol_order=5268)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<function_path>::operator= (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.257932;
  struct function_path * __tmp;
  const size_type __xlen;
  struct vector & D.257930;
  struct __normal_iterator D.257927;
  struct __normal_iterator D.257926;
  struct __normal_iterator D.257925;
  struct __normal_iterator D.257924;
  struct __normal_iterator D.257923;
  bool retval.1955;
  struct __normal_iterator D.257918;
  struct __normal_iterator D.257917;
  bool retval.1954;
  bool iftmp.1953;
  bool retval.1952;
  bool retval.1951;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1951 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ();
  if (retval.1951 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.175659;
  _4 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.175659;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1953 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1953 = 0;

  <bb 8> :
  retval.1952 = iftmp.1953;
  if (retval.1952 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<function_path>::clear (this);
  _8 = &this->D.175659;
  _9 = this->D.175659._M_impl.D.175004._M_end_of_storage;
  _10 = this->D.175659._M_impl.D.175004._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.175659._M_impl.D.175004._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_8, _14, _13);
  this->D.175659._M_impl.D.175004._M_start = 0B;
  this->D.175659._M_impl.D.175004._M_finish = 0B;
  this->D.175659._M_impl.D.175004._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.175659;
  _16 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.175659;
  _18 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<function_path> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<function_path>::size (__x);
  _19 = std::vector<function_path>::capacity (this);
  retval.1954 = __xlen > _19;
  if (retval.1954 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.257917 = std::vector<function_path>::end (__x);
  D.257918 = std::vector<function_path>::begin (__x);
  D.257932 = std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (this, __xlen, D.257918, D.257917);
  __tmp = D.257932;
  _20 = &this->D.175659;
  _21 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_20);
  _22 = this->D.175659._M_impl.D.175004._M_finish;
  _23 = this->D.175659._M_impl.D.175004._M_start;
  std::_Destroy<function_path*, function_path> (_23, _22, _21);
  _24 = &this->D.175659;
  _25 = this->D.175659._M_impl.D.175004._M_end_of_storage;
  _26 = this->D.175659._M_impl.D.175004._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.175659._M_impl.D.175004._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_24, _30, _29);
  this->D.175659._M_impl.D.175004._M_start = __tmp;
  _31 = this->D.175659._M_impl.D.175004._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.175659._M_impl.D.175004._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<function_path>::size (this);
  retval.1955 = __xlen <= _34;
  if (retval.1955 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.175659;
  _36 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_35);
  D.257923 = std::vector<function_path>::end (this);
  D.257924 = std::vector<function_path>::begin (this);
  D.257925 = std::vector<function_path>::end (__x);
  D.257926 = std::vector<function_path>::begin (__x);
  D.257927 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.257926, D.257925, D.257924);
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (D.257927, D.257923, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.175659._M_impl.D.175004._M_start;
  _38 = __x->D.175659._M_impl.D.175004._M_start;
  _39 = std::vector<function_path>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.175659._M_impl.D.175004._M_start;
  std::copy<function_path*, function_path*> (_42, _41, _37);
  _43 = &this->D.175659;
  _44 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_43);
  _45 = this->D.175659._M_impl.D.175004._M_finish;
  _46 = __x->D.175659._M_impl.D.175004._M_finish;
  _47 = __x->D.175659._M_impl.D.175004._M_start;
  _48 = std::vector<function_path>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.175659._M_impl.D.175004._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.175659._M_impl.D.175004._M_finish = _53;

  <bb 17> :
  D.257930 = this;

  <bb 18> :
<L19>:
  return D.257930;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7843, decl_uid=174871, cgraph_uid=4474, symbol_order=5266)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ()
{
  bool D.257933;

  <bb 2> :
  D.257933 = 0;

  <bb 3> :
<L0>:
  return D.257933;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E15_S_always_equalEv, funcdef_no=7844, decl_uid=174874, cgraph_uid=4475, symbol_order=5267)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ()
{
  bool D.257935;

  <bb 2> :
  D.257935 = 1;

  <bb 3> :
<L0>:
  return D.257935;

}



;; Function std::operator!= (_ZStneRKSaI13function_pathES2_, funcdef_no=8798, decl_uid=174757, cgraph_uid=5430, symbol_order=6226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.229284, const struct allocator & D.229285)
{
  bool D.257937;

  <bb 2> :
  D.257937 = 0;

  <bb 3> :
<L0>:
  return D.257937;

}



;; Function std::vector<function_path>::clear (_ZNSt6vectorI13function_pathSaIS0_EE5clearEv, funcdef_no=8799, decl_uid=175389, cgraph_uid=5431, symbol_order=6227)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.175659._M_impl.D.175004._M_start;
  std::vector<function_path>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<function_path>::_M_erase_at_end (_ZNSt6vectorI13function_pathSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9630, decl_uid=175517, cgraph_uid=6262, symbol_order=7058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<function_path>::_M_erase_at_end (struct vector * const this, struct function_path * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.175659._M_impl.D.175004._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.175659;
  _5 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_4);
  _6 = this->D.175659._M_impl.D.175004._M_finish;
  std::_Destroy<function_path*, function_path> (__pos, _6, _5);
  this->D.175659._M_impl.D.175004._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<function_path> > (_ZSt15__alloc_on_copyISaI13function_pathEEvRT_RKS2_, funcdef_no=8800, decl_uid=216044, cgraph_uid=5432, symbol_order=6228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<function_path> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::capacity (_ZNKSt6vectorI13function_pathSaIS0_EE8capacityEv, funcdef_no=8801, decl_uid=175305, cgraph_uid=5433, symbol_order=6229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::capacity (const struct vector * const this)
{
  size_type D.257942;

  <bb 2> :
  _1 = this->D.175659._M_impl.D.175004._M_end_of_storage;
  _2 = this->D.175659._M_impl.D.175004._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.257942 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.257942;

}



;; Function std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZNSt6vectorI13function_pathSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8802, decl_uid=216051, cgraph_uid=5434, symbol_order=6230)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct function_path * std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct function_path * D.257946;
  struct function_path * __result;
  struct function_path * D.257944;

  <bb 2> :
  _1 = &this->D.175659;
  D.257946 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_1, __n);
  __result = D.257946;
  _2 = &this->D.175659;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (__first, __last, __result, _3);

  <bb 3> :
  D.257944 = __result;

  <bb 4> :
<L0>:
  return D.257944;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.175659;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8803, decl_uid=216059, cgraph_uid=5435, symbol_order=6231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.257952;
  struct __normal_iterator D.257951;
  struct __normal_iterator D.257950;

  <bb 2> :
  D.257951 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.257952 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.257950 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.257952, D.257951, __result);

  <bb 3> :
<L0>:
  return D.257950;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9633, decl_uid=229323, cgraph_uid=6266, symbol_order=7062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct function_path * D.257956;
  struct __normal_iterator D.257954;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__result);
  _2 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.257956 = std::__copy_move_a1<false, const function_path*, function_path*> (_3, _2, _1);
  _4 = D.257956;
  D.257954 = std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (__result, _4);

  <bb 3> :
<L0>:
  return D.257954;

}



;; Function std::__niter_base<function_path*, std::vector<function_path> > (_ZSt12__niter_baseIP13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10226, decl_uid=237863, cgraph_uid=6858, symbol_order=7658)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  struct function_path * D.257957;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__it);
  D.257957 = *_1;

  <bb 3> :
<L0>:
  return D.257957;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8810, decl_uid=203633, cgraph_uid=5442, symbol_order=6238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * const & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  struct function_path * const & D.257959;

  <bb 2> :
  D.257959 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.257959;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10228, decl_uid=237870, cgraph_uid=6860, symbol_order=7660)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __from, struct function_path * __res)
{
  struct __normal_iterator D.257961;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.257961 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.257961;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10698, decl_uid=203624, cgraph_uid=7330, symbol_order=8130)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct function_path * const D.245902;
  struct __normal_iterator D.245903;
  struct __normal_iterator D.257963;

  <bb 2> :
  _1 = this->_M_current;
  __n.1956_2 = (long unsigned int) __n;
  _3 = __n.1956_2 * 24;
  _4 = _1 + _3;
  D.245902 = _4;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.245903, &D.245902);
  D.257963 = D.245903;
  D.245903 = {CLOBBER};
  D.245902 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.257963;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8808, decl_uid=203646, cgraph_uid=5440, symbol_order=6236)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8804, decl_uid=216065, cgraph_uid=5436, symbol_order=6232)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.229352)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9635, decl_uid=229354, cgraph_uid=6267, symbol_order=7063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10229, decl_uid=237894, cgraph_uid=6861, symbol_order=7661)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator D.242642, struct __normal_iterator D.242643)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<function_path*, function_path*> (_ZSt4copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=8805, decl_uid=216073, cgraph_uid=5437, symbol_order=6233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.257969;
  struct function_path * D.257967;

  <bb 2> :
  _1 = std::__miter_base<function_path*> (__last);
  _2 = std::__miter_base<function_path*> (__first);
  D.257969 = std::__copy_move_a<false, function_path*, function_path*> (_2, _1, __result);
  D.257967 = D.257969;

  <bb 3> :
<L0>:
  return D.257967;

}



;; Function std::__miter_base<function_path*> (_ZSt12__miter_baseIP13function_pathET_S2_, funcdef_no=9636, decl_uid=229370, cgraph_uid=6268, symbol_order=7064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__miter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.257970;

  <bb 2> :
  D.257970 = __it;

  <bb 3> :
<L0>:
  return D.257970;

}



;; Function std::__copy_move_a<false, function_path*, function_path*> (_ZSt13__copy_move_aILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=9637, decl_uid=229372, cgraph_uid=6269, symbol_order=7065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.257974;
  struct function_path * D.257972;

  <bb 2> :
  __result.1957_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.1957_1);
  _3 = std::__niter_base<function_path*> (__last);
  _4 = std::__niter_base<function_path*> (__first);
  D.257974 = std::__copy_move_a1<false, function_path*, function_path*> (_4, _3, _2);
  _5 = D.257974;
  D.257972 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.257972;

}



;; Function std::__copy_move_a1<false, function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10231, decl_uid=237905, cgraph_uid=6863, symbol_order=7663)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.257977;
  struct function_path * D.257975;

  <bb 2> :
  D.257977 = std::__copy_move_a2<false, function_path*, function_path*> (__first, __last, __result);
  D.257975 = D.257977;

  <bb 3> :
<L0>:
  return D.257975;

}



;; Function std::__copy_move_a2<false, function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10699, decl_uid=242651, cgraph_uid=7331, symbol_order=8131)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.257978;

  <bb 2> :
  D.257978 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.257978;

}



;; Function std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_ZSt22__uninitialized_copy_aIP13function_pathS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8806, decl_uid=216077, cgraph_uid=5438, symbol_order=6234)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<function_path*, function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.229379)
{
  struct function_path * D.257982;
  struct function_path * D.257980;

  <bb 2> :
  D.257982 = std::uninitialized_copy<function_path*, function_path*> (__first, __last, __result);
  D.257980 = D.257982;

  <bb 3> :
<L0>:
  return D.257980;

}



;; Function std::uninitialized_copy<function_path*, function_path*> (_ZSt18uninitialized_copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=9638, decl_uid=229381, cgraph_uid=6270, symbol_order=7066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.257985;
  const bool __assignable;
  struct function_path * D.257983;

  <bb 2> :
  __assignable = 1;
  D.257985 = std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (__first, __last, __result);
  D.257983 = D.257985;

  <bb 3> :
<L0>:
  return D.257983;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP13function_pathS3_EET0_T_S5_S4_, funcdef_no=10233, decl_uid=237943, cgraph_uid=6865, symbol_order=7665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.257988;
  struct function_path * D.257986;

  <bb 2> :
  D.257988 = std::copy<function_path*, function_path*> (__first, __last, __result);
  D.257986 = D.257988;

  <bb 3> :
<L0>:
  return D.257986;

}



;; Function cgraph_node::ultimate_alias_target (_ZN11cgraph_node21ultimate_alias_targetEP12availabilityP11symtab_node, funcdef_no=2586, decl_uid=97088, cgraph_uid=1723, symbol_order=1883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct cgraph_node * cgraph_node::ultimate_alias_target (struct cgraph_node * const this, availability * availability, struct symtab_node * ref)
{
  struct cgraph_node * D.257997;
  struct symtab_node * D.257996;
  struct cgraph_node * n;
  struct cgraph_node * D.257994;

  <bb 2> :
  _1 = &this->D.97512;
  D.257996 = symtab_node::ultimate_alias_target (_1, availability, ref);
  _2 = D.257996;
  D.257997 = dyn_cast<cgraph_node*, symtab_node> (_2);
  n = D.257997;
  if (n == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  *availability = 1;

  <bb 5> :
  D.257994 = n;

  <bb 6> :
<L5>:
  return D.257994;

}



;; Function symtab_node::ultimate_alias_target (_ZN11symtab_node21ultimate_alias_targetEP12availabilityPS_, funcdef_no=2585, decl_uid=96460, cgraph_uid=1722, symbol_order=1882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
struct symtab_node * symtab_node::ultimate_alias_target (struct symtab_node * const this, availability * availability, struct symtab_node * ref)
{
  struct symtab_node * D.258006;
  availability D.258005;
  struct symtab_node * D.258003;

  <bb 2> :
  _1 = BIT_FIELD_REF <*this, 8, 16>;
  _2 = _1 & 2;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.258005 = symtab_node::get_availability (this, ref);
  _3 = D.258005;
  *availability = _3;

  <bb 5> :
  D.258003 = this;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.258006 = symtab_node::ultimate_alias_target_1 (this, availability, ref);
  D.258003 = D.258006;

  <bb 7> :
<L5>:
  return D.258003;

}



;; Function symtab_node::get_availability (_ZN11symtab_node16get_availabilityEPS_, funcdef_no=2597, decl_uid=96516, cgraph_uid=1734, symbol_order=1894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
availability symtab_node::get_availability (struct symtab_node * const this, struct symtab_node * ref)
{
  availability D.258015;
  struct varpool_node * D.258014;
  availability D.258013;
  struct cgraph_node * D.258012;
  availability D.258010;
  bool retval.1958;

  <bb 2> :
  retval.1958 = is_a<cgraph_node*, symtab_node> (this);
  if (retval.1958 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258012 = dyn_cast<cgraph_node*, symtab_node> (this);
  _1 = D.258012;
  D.258013 = cgraph_node::get_availability (_1, ref);
  D.258010 = D.258013;
  goto <bb 5>; [INV]

  <bb 4> :
  D.258014 = dyn_cast<varpool_node*, symtab_node> (this);
  _2 = D.258014;
  D.258015 = varpool_node::get_availability (_2, ref);
  D.258010 = D.258015;

  <bb 5> :
<L2>:
  return D.258010;

}



;; Function dyn_cast<varpool_node*, symtab_node> (_Z8dyn_castIP12varpool_node11symtab_nodeET_PT0_, funcdef_no=7118, decl_uid=99587, cgraph_uid=3750, symbol_order=4539)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct varpool_node * dyn_cast<varpool_node*, symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.258019;
  bool retval.1959;

  <bb 2> :
  retval.1959 = is_a<varpool_node*, symtab_node> (p);
  if (retval.1959 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258019 = reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.258019 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.258019;

}



;; Function is_a<varpool_node*, symtab_node> (_Z4is_aIP12varpool_node11symtab_nodeEbPT0_, funcdef_no=7121, decl_uid=99946, cgraph_uid=3753, symbol_order=4542)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<varpool_node*, symtab_node> (struct symtab_node * p)
{
  bool D.258021;

  <bb 2> :
  D.258021 = is_a_helper<varpool_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.258021;

}



;; Function is_a_helper<varpool_node*>::test<symtab_node> (_ZN11is_a_helperIP12varpool_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2533, decl_uid=98472, cgraph_uid=1670, symbol_order=1830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<varpool_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.1960;
  bool D.258023;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1960 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1960 = 0;

  <bb 6> :
  D.258023 = iftmp.1960;

  <bb 7> :
<L4>:
  return D.258023;

}



;; Function reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP12varpool_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8133, decl_uid=207314, cgraph_uid=4765, symbol_order=5557)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct varpool_node * reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.258030;

  <bb 2> :
  D.258030 = p;

  <bb 3> :
<L0>:
  return D.258030;

}



;; Function std::vector<function_path>::begin (_ZNSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=7845, decl_uid=175268, cgraph_uid=4477, symbol_order=5269)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::begin (struct vector * const this)
{
  struct iterator D.216088;
  struct iterator D.258032;

  <bb 2> :
  _1 = &this->D.175659._M_impl.D.175004._M_start;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.216088, _1);
  D.258032 = D.216088;
  D.216088 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258032;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7849, decl_uid=203606, cgraph_uid=4481, symbol_order=5273)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (const struct __normal_iterator * const this)
{
  struct function_path * D.258035;

  <bb 2> :
  D.258035 = this->_M_current;

  <bb 3> :
<L0>:
  return D.258035;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7848, decl_uid=203608, cgraph_uid=4480, symbol_order=5272)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.258037;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.258037 = this;

  <bb 3> :
<L0>:
  return D.258037;

}



;; Function std::vector<function_path>::end (_ZNSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=7846, decl_uid=175272, cgraph_uid=4478, symbol_order=5270)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::end (struct vector * const this)
{
  struct iterator D.216090;
  struct iterator D.258039;

  <bb 2> :
  _1 = &this->D.175659._M_impl.D.175004._M_finish;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.216090, _1);
  D.258039 = D.216090;
  D.216090 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258039;

}



;; Function __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxneIP13function_pathSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7847, decl_uid=203706, cgraph_uid=4479, symbol_order=5271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.258042;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  D.258042 = _2 != _4;

  <bb 3> :
<L0>:
  return D.258042;

}



;; Function std::vector<function_path>::push_back (_ZNSt6vectorI13function_pathSaIS0_EE9push_backERKS0_, funcdef_no=7850, decl_uid=175339, cgraph_uid=4483, symbol_order=5275)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<function_path>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.258047;

  <bb 2> :
  _1 = this->D.175659._M_impl.D.175004._M_finish;
  _2 = this->D.175659._M_impl.D.175004._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.175659._M_impl.D.175004._M_finish;
  _4 = &this->D.175659._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_4, _3, __x);
  _5 = this->D.175659._M_impl.D.175004._M_finish;
  _6 = _5 + 24;
  this->D.175659._M_impl.D.175004._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.258047 = std::vector<function_path>::end (this);
  std::vector<function_path>::_M_realloc_insert<const function_path&> (this, D.258047, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_ZNSt16allocator_traitsISaI13function_pathEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8811, decl_uid=216098, cgraph_uid=5443, symbol_order=6239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (struct allocator_type & __a, struct function_path * __p, const struct function_path & __args#0)
{
  <bb 2> :
  _1 = std::forward<const function_path&> (__args#0);
  __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (__a, __p, _1);
  return;

}



;; Function std::forward<const function_path&> (_ZSt7forwardIRK13function_pathEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9639, decl_uid=229401, cgraph_uid=6271, symbol_order=7067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct function_path & std::forward<const function_path&> (const struct type & __t)
{
  const struct function_path & D.258048;

  <bb 2> :
  D.258048 = __t;

  <bb 3> :
<L0>:
  return D.258048;

}



;; Function __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (_ZN9__gnu_cxx13new_allocatorI13function_pathE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9640, decl_uid=229403, cgraph_uid=6272, symbol_order=7068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (struct new_allocator * const this, struct function_path * __p, const struct function_path & __args#0)
{
  void * D.237955;
  void * D.237954;
  const struct function_path * D.237956;

  <bb 2> :
  D.237956 = std::forward<const function_path&> (__args#0);
  D.237954 = __p;
  D.237955 = operator new (24, D.237954);
  MEM[(struct function_path *)D.237955] = *D.237956;
  return;

}



;; Function std::vector<function_path>::_M_realloc_insert<const function_path&> (_ZNSt6vectorI13function_pathSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8812, decl_uid=216267, cgraph_uid=5447, symbol_order=6243)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::_M_realloc_insert<const function_path&> (struct vector * const this, struct iterator __position, const struct function_path & __args#0)
{
  struct function_path * D.258054;
  const size_type D.258053;
  struct function_path * __new_finish;
  struct function_path * __new_start;
  const size_type __elems_before;
  struct function_path * __old_finish;
  struct function_path * __old_start;
  const size_type __len;
  struct iterator D.229414;

  <bb 2> :
  D.258053 = std::vector<function_path>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.258053;
  __old_start = this->D.175659._M_impl.D.175004._M_start;
  __old_finish = this->D.175659._M_impl.D.175004._M_finish;
  D.229414 = std::vector<function_path>::begin (this);
  _1 = __gnu_cxx::operator-<function_path*, std::vector<function_path> > (&__position, &D.229414);
  __elems_before = (const size_type) _1;
  D.229414 = {CLOBBER};
  _2 = &this->D.175659;
  D.258054 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_2, __len);
  __new_start = D.258054;
  __new_finish = __new_start;
  _3 = std::forward<const function_path&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.175659._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.175659;
  _8 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<function_path>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.175659;
  _12 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<function_path>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.175659;
  _23 = this->D.175659._M_impl.D.175004._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_22, __old_start, _26);
  this->D.175659._M_impl.D.175004._M_start = __new_start;
  this->D.175659._M_impl.D.175004._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.175659._M_impl.D.175004._M_end_of_storage = _28;
  return;

}



;; Function std::vector<function_path>::_M_check_len (_ZNKSt6vectorI13function_pathSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9641, decl_uid=175508, cgraph_uid=6273, symbol_order=7069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<function_path>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1963;
  size_type D.258058;
  const long unsigned int D.237961;
  bool retval.1961;

  <bb 2> :
  _1 = std::vector<function_path>::max_size (this);
  _2 = std::vector<function_path>::size (this);
  _3 = _1 - _2;
  __n.1962_4 = __n;
  retval.1961 = _3 < __n.1962_4;
  if (retval.1961 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<function_path>::size (this);
  _6 = std::vector<function_path>::size (this);
  D.237961 = _6;
  _7 = std::max<long unsigned int> (&D.237961, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237961 = {CLOBBER};
  _9 = std::vector<function_path>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<function_path>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1963 = std::vector<function_path>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1963 = __len;

  <bb 8> :
  D.258058 = iftmp.1963;

  <bb 9> :
<L6>:
  return D.258058;

}



;; Function std::vector<function_path>::max_size (_ZNKSt6vectorI13function_pathSaIS0_EE8max_sizeEv, funcdef_no=10234, decl_uid=175294, cgraph_uid=6866, symbol_order=7666)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::max_size (const struct vector * const this)
{
  size_type D.258065;

  <bb 2> :
  _1 = &this->D.175659;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  D.258065 = std::vector<function_path>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.258065;

}



;; Function std::vector<function_path>::_S_max_size (_ZNSt6vectorI13function_pathSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10700, decl_uid=175515, cgraph_uid=7332, symbol_order=8132)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.258067;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<function_path> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.258067 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258067;

}



;; Function std::allocator_traits<std::allocator<function_path> >::max_size (_ZNSt16allocator_traitsISaI13function_pathEE8max_sizeERKS1_, funcdef_no=10893, decl_uid=174829, cgraph_uid=7525, symbol_order=8327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<function_path> >::max_size (const struct allocator_type & __a)
{
  size_type D.258070;

  <bb 2> :
  D.258070 = __gnu_cxx::new_allocator<function_path>::max_size (__a);

  <bb 3> :
<L0>:
  return D.258070;

}



;; Function __gnu_cxx::new_allocator<function_path>::max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE8max_sizeEv, funcdef_no=10991, decl_uid=174671, cgraph_uid=7623, symbol_order=8425)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::max_size (const struct new_allocator * const this)
{
  size_type D.258072;

  <bb 2> :
  D.258072 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.258072;

}



;; Function __gnu_cxx::operator-<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxmiIP13function_pathSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9642, decl_uid=229415, cgraph_uid=6274, symbol_order=7070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.258074;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.258074 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.258074;

}



;; Function std::vector<function_path>::_S_relocate (_ZNSt6vectorI13function_pathSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9643, decl_uid=175166, cgraph_uid=6275, symbol_order=7071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.258077;
  struct function_path * D.258076;

  <bb 2> :
  D.258076 = std::vector<function_path>::_S_do_relocate (__first, __last, __result, __alloc, D.258077);

  <bb 3> :
<L0>:
  return D.258076;

}



;; Function std::vector<function_path>::_S_do_relocate (_ZNSt6vectorI13function_pathSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10235, decl_uid=175154, cgraph_uid=6867, symbol_order=7667)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_do_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242667)
{
  struct function_path * D.258079;

  <bb 2> :
  D.258079 = std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.258079;

}



;; Function std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (_ZSt12__relocate_aIP13function_pathS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10701, decl_uid=229579, cgraph_uid=7333, symbol_order=8133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & __alloc)
{
  struct function_path * D.258081;

  <bb 2> :
  _1 = std::__niter_base<function_path*> (__result);
  _2 = std::__niter_base<function_path*> (__last);
  _3 = std::__niter_base<function_path*> (__first);
  D.258081 = std::__relocate_a_1<function_path, function_path> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.258081;

}



;; Function std::__relocate_a_1<function_path, function_path> (_ZSt14__relocate_a_1I13function_pathS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10894, decl_uid=229753, cgraph_uid=7526, symbol_order=8328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__relocate_a_1<function_path, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.246890)
{
  ptrdiff_t __count;
  struct function_path * D.258086;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1964_2 = (long unsigned int) __count;
  _3 = __count.1964_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1965_4 = (long unsigned int) __count;
  _5 = __count.1965_4 * 24;
  D.258086 = __result + _5;

  <bb 5> :
<L3>:
  return D.258086;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2Ev, funcdef_no=6852, decl_uid=203758, cgraph_uid=3483, symbol_order=4265)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->switchs;
  std::vector<basic_block_def*>::vector (_1);
  this->prevlogic = 1;
  _2 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_2);
  _3 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_3);
  _4 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_4);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6850, decl_uid=171388, cgraph_uid=3480, symbol_order=4262)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171396;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6848, decl_uid=170846, cgraph_uid=3477, symbol_order=4259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2Ev, funcdef_no=7853, decl_uid=170738, cgraph_uid=4485, symbol_order=5277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this);
  _1 = &this->D.170741;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2Ev, funcdef_no=8817, decl_uid=170516, cgraph_uid=5449, symbol_order=6245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2Ev, funcdef_no=9646, decl_uid=170445, cgraph_uid=6278, symbol_order=7074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8820, decl_uid=170688, cgraph_uid=5452, symbol_order=6248)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK6gimple, funcdef_no=2181, decl_uid=93077, cgraph_uid=1318, symbol_order=1478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gimple * gs)
{
  const struct gcond * D.258090;
  const struct gcond * gc;
  union tree_node * D.258088;

  <bb 2> :
  D.258090 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.258090;
  D.258088 = gimple_cond_rhs (gc);

  <bb 3> :
<L0>:
  return D.258088;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::put (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7864, decl_uid=196670, cgraph_uid=4500, symbol_order=5292)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<basic_block_def*, symbolicinfo>::put (struct hash_map * const this, struct basic_block_def * const & k, const struct symbolicinfo & v)
{
  bool D.258098;
  struct hash_entry * D.258097;
  unsigned int D.258096;
  bool ins;
  struct hash_entry * e;
  bool D.258094;
  void * D.216309;
  void * D.216308;

  <bb 2> :
  _1 = &this->m_table;
  D.258096 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.258096;
  D.258097 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.258097;
  D.258098 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (e);
  ins = D.258098;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216308 = &e->m_value;
  D.216309 = operator new (160, D.216308);
  symbolicinfo::symbolicinfo (D.216309, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  symbolicinfo::operator= (_4, v);

  <bb 5> :
  D.258094 = ~ins;

  <bb 6> :
<L3>:
  return D.258094;

  <bb 7> :
<L4>:
  operator delete (D.216309, D.216308);
  resx 1

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8828, decl_uid=196828, cgraph_uid=5460, symbol_order=6256)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.258149;
  bool D.258148;
  bool D.258147;
  bool D.258146;
  bool D.258145;
  bool D.258144;
  struct value_type * D.258143;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1971;
  bool retval.1970;
  bool retval.1969;
  bool retval.1968;
  bool retval.1967;
  bool retval.1966;
  struct value_type * D.258105;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 168;
  entry = _11 + _13;
  size = this->m_size;
  D.258144 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1966 = D.258144;
  if (retval.1966 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.258145 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1967 = D.258145;
  if (retval.1967 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 168;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.258146 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1968 = D.258146;
  if (retval.1968 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  D.258105 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 168;
  entry = _24 + _26;
  D.258147 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1969 = D.258147;
  if (retval.1969 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.258148 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1970 = D.258148;
  if (retval.1970 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 168;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.258149 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1971 = D.258149;
  if (retval.1971 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 168;
  D.258105 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.258105 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.258105 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 168;
  D.258105 = _37 + _39;

  <bb 27> :
<L37>:
  return D.258105;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9651, decl_uid=196909, cgraph_uid=6301, symbol_order=7097)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.258180;
  unsigned int D.258179;
  bool D.258178;
  bool D.258177;
  struct mem_alloc_description & D.258176;
  struct value_type * D.258175;
  unsigned int D.258174;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.238318;
  void * D.238317;
  struct hash_entry & D.238361;
  bool iftmp.1975;
  bool retval.1974;
  bool iftmp.1973;
  bool retval.1972;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 168;
  olimit = oentries + _1;
  elts = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1973 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1973 = 0;

  <bb 6> :
  retval.1972 = iftmp.1973;
  if (retval.1972 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.258174 = hash_table_higher_prime_index (_5);
  nindex = D.258174;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.258175 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.258175;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.258177 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.258177;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.258178 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.258178;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1975 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1975 = 0;

  <bb 15> :
  retval.1974 = iftmp.1975;
  if (retval.1974 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.258179 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (x);
  _16 = D.258179;
  D.258180 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.258180;
  D.238361 = std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (x);
  D.238317 = q;
  D.238318 = operator new (168, D.238317);
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (D.238318, D.238361);

  <bb 17> :
  p = p + 168;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10239, decl_uid=196804, cgraph_uid=6871, symbol_order=7671)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.258181;

  <bb 2> :
  D.258181 = this->m_size;

  <bb 3> :
<L0>:
  return D.258181;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10240, decl_uid=196806, cgraph_uid=6872, symbol_order=7672)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.258183;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.258183 = _1 - _2;

  <bb 3> :
<L0>:
  return D.258183;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10241, decl_uid=196906, cgraph_uid=6873, symbol_order=7673)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1976;
  bool D.258185;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1976 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1976 = 0;

  <bb 6> :
  D.258185 = iftmp.1976;

  <bb 7> :
<L4>:
  return D.258185;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9596, decl_uid=196896, cgraph_uid=6228, symbol_order=7024)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.258207;
  struct value_type * D.258206;
  struct mem_alloc_description & D.258205;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.258203;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.258206 = xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (n);
  nentries = D.258206;
  goto <bb 6>; [INV]

  <bb 5> :
  D.258207 = ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (n);
  nentries = D.258207;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.258203 = nentries;

  <bb 9> :
<L14>:
  return D.258203;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10208, decl_uid=218201, cgraph_uid=6840, symbol_order=7640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.258210;
  struct hash_entry * D.258208;

  <bb 2> :
  D.258210 = xcalloc (count, 168);
  D.258208 = D.258210;

  <bb 3> :
<L0>:
  return D.258208;

}



;; Function ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10209, decl_uid=237547, cgraph_uid=6841, symbol_order=7641)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (size_t c)
{
  struct hash_entry * D.258217;
  struct hash_entry * D.258216;
  struct hash_entry * D.258214;
  bool retval.1977;

  <bb 2> :
  retval.1977 = need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ();
  if (retval.1977 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 168;
  D.258216 = ggc_internal_cleared_alloc (_1, finalize, 168, c);
  D.258214 = D.258216;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 168;
  D.258217 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.258214 = D.258217;

  <bb 5> :
<L2>:
  return D.258214;

}



;; Function finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z8finalizeIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10676, decl_uid=242574, cgraph_uid=7311, symbol_order=8111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10678, decl_uid=245811, cgraph_uid=7309, symbol_order=8109)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  symbolicinfo::~symbolicinfo (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10675, decl_uid=242573, cgraph_uid=7307, symbol_order=8107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ()
{
  bool D.258218;

  <bb 2> :
  D.258218 = 1;

  <bb 3> :
<L0>:
  return D.258218;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10243, decl_uid=196729, cgraph_uid=6875, symbol_order=7675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.258222;
  hashval_t D.258220;

  <bb 2> :
  _1 = &e->m_key;
  D.258222 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_1);
  D.258220 = D.258222;

  <bb 3> :
<L0>:
  return D.258220;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10242, decl_uid=196899, cgraph_uid=6874, symbol_order=7674)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.258235;
  bool D.258234;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1979;
  struct value_type * D.258226;
  bool retval.1978;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 168;
  slot = _2 + _4;
  D.258234 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1978 = D.258234;
  if (retval.1978 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258226 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 168;
  slot = _8 + _10;
  D.258235 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1979 = D.258235;
  if (retval.1979 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.258226 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.258226;

}



;; Function std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (_ZSt4moveIRN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10244, decl_uid=238315, cgraph_uid=6876, symbol_order=7676)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.258236;

  <bb 2> :
  D.258236 = __t;

  <bb 3> :
<L0>:
  return D.258236;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9668, decl_uid=238340, cgraph_uid=6299, symbol_order=7095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.238342)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.238342->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.238342->m_value;
  symbolicinfo::symbolicinfo (_2, _3);
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2EOS_, funcdef_no=9666, decl_uid=203775, cgraph_uid=6296, symbol_order=7092)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, struct symbolicinfo & D.203777)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.203777->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.203777->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.203777->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.203777->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.203777->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.203777->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.203777->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.203777->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.203777->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.203777->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.203777->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.203777->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);
  return;

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9658, decl_uid=170308, cgraph_uid=6287, symbol_order=7083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this, struct vector & D.170310)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170351;
  _2 = &D.170310->D.170351;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9656, decl_uid=169776, cgraph_uid=6284, symbol_order=7080)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.169778)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.169778->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2EOS4_, funcdef_no=10246, decl_uid=169682, cgraph_uid=6878, symbol_order=7678)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  std::allocator<basic_block_def*>::allocator (this, _1);
  _2 = &this->D.169696;
  _3 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  _4 = &_3->D.169696;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2ERKS1_, funcdef_no=10704, decl_uid=169466, cgraph_uid=7336, symbol_order=8136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2ERKS3_, funcdef_no=10896, decl_uid=169395, cgraph_uid=7528, symbol_order=8330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.169397)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIP15basic_block_defSaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_, funcdef_no=10702, decl_uid=242703, cgraph_uid=7334, symbol_order=8134)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.258238;

  <bb 2> :
  D.258238 = __t;

  <bb 3> :
<L0>:
  return D.258238;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2EOS4_, funcdef_no=10707, decl_uid=169638, cgraph_uid=7339, symbol_order=8139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9664, decl_uid=171353, cgraph_uid=6293, symbol_order=7089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, struct vector & D.171355)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171396;
  _2 = &D.171355->D.171396;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9662, decl_uid=170821, cgraph_uid=6290, symbol_order=7086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.170823)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.170823->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10249, decl_uid=170727, cgraph_uid=6881, symbol_order=7681)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  std::allocator<symbolicinfoPatharray>::allocator (this, _1);
  _2 = &this->D.170741;
  _3 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  _4 = &_3->D.170741;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2ERKS0_, funcdef_no=10711, decl_uid=170511, cgraph_uid=7343, symbol_order=8143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2ERKS2_, funcdef_no=10899, decl_uid=170440, cgraph_uid=7531, symbol_order=8333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.170442)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI21symbolicinfoPatharraySaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10709, decl_uid=242723, cgraph_uid=7341, symbol_order=8141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.258240;

  <bb 2> :
  D.258240 = __t;

  <bb 3> :
<L0>:
  return D.258240;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10714, decl_uid=170683, cgraph_uid=7346, symbol_order=8146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8948, decl_uid=218203, cgraph_uid=5580, symbol_order=6376)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9670, decl_uid=196917, cgraph_uid=6302, symbol_order=7098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10251, decl_uid=196741, cgraph_uid=6883, symbol_order=7683)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10716, decl_uid=242738, cgraph_uid=7348, symbol_order=8148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<basic_block_def>::mark_empty (_1);
  return;

}



;; Function pointer_hash<basic_block_def>::mark_empty (_ZN12pointer_hashI15basic_block_defE10mark_emptyERPS0_, funcdef_no=10901, decl_uid=196595, cgraph_uid=7533, symbol_order=8335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<basic_block_def>::mark_empty (struct basic_block_def * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2ERKS_, funcdef_no=7866, decl_uid=203766, cgraph_uid=4497, symbol_order=5289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 8 3 }
;; 3 succs { 7 4 }
;; 4 succs { 6 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, const struct symbolicinfo & D.203768)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.203768->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.203768->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.203768->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.203768->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.203768->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.203768->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.203768->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.203768->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.203768->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.203768->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);

  <bb 3> :
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.203768->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);

  <bb 4> :
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.203768->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);

  <bb 5> :
  return;

  <bb 6> :
<L0>:
  _18 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_18);
  resx 3

  <bb 7> :
<L1>:
  _19 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_19);
  resx 2

  <bb 8> :
<L2>:
  _20 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_20);
  resx 1

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2ERKS3_, funcdef_no=8831, decl_uid=170314, cgraph_uid=5463, symbol_order=6259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<basic_block_def*>::vector (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.258250;
  struct __normal_iterator D.258247;
  struct __normal_iterator D.258246;
  struct allocator D.230089;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170351;
  _2 = &__x->D.170351;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  D.230089 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<basic_block_def*>::size (__x);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _4, &D.230089);

  <bb 3> :
  std::allocator<basic_block_def*>::~allocator (&D.230089);
  D.230089 = {CLOBBER};
  _5 = &this->D.170351;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = this->D.170351._M_impl.D.169696._M_start;
  D.258246 = std::vector<basic_block_def*>::end (__x);
  D.258247 = std::vector<basic_block_def*>::begin (__x);
  D.258250 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (D.258247, D.258246, _7, _6);

  <bb 4> :
  _8 = D.258250;
  this->D.170351._M_impl.D.169696._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<basic_block_def*>::~allocator (&D.230089);
  resx 2

  <bb 6> :
<L1>:
  D.230089 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.170351;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E17_S_select_on_copyERKS3_, funcdef_no=9671, decl_uid=169558, cgraph_uid=6303, symbol_order=7099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIP15basic_block_defEE37select_on_container_copy_constructionERKS2_, funcdef_no=10252, decl_uid=169523, cgraph_uid=6884, symbol_order=7684)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<basic_block_def*>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EmRKS2_, funcdef_no=9674, decl_uid=169783, cgraph_uid=6306, symbol_order=7102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2ERKS2_, funcdef_no=10254, decl_uid=169688, cgraph_uid=6886, symbol_order=7686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this, __a);
  _1 = &this->D.169696;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_M_create_storageEm, funcdef_no=10256, decl_uid=169707, cgraph_uid=6888, symbol_order=7688)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.258257;

  <bb 2> :
  D.258257 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (this, __n);
  _1 = D.258257;
  this->_M_impl.D.169696._M_start = _1;
  _2 = this->_M_impl.D.169696._M_start;
  this->_M_impl.D.169696._M_finish = _2;
  _3 = this->_M_impl.D.169696._M_start;
  _4 = __n * 8;
  _5 = _3 + _4;
  this->_M_impl.D.169696._M_end_of_storage = _5;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNKSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=9677, decl_uid=169966, cgraph_uid=6309, symbol_order=7105)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::end (const struct vector * const this)
{
  struct const_iterator D.238397;
  struct const_iterator D.258258;

  <bb 2> :
  _1 = &this->D.170351._M_impl.D.169696._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.238397, _1);
  D.258258 = D.238397;
  D.238397 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258258;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS4_, funcdef_no=10258, decl_uid=230058, cgraph_uid=6890, symbol_order=7690)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * const * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::begin (_ZNKSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9676, decl_uid=169962, cgraph_uid=6308, symbol_order=7104)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::begin (const struct vector * const this)
{
  struct const_iterator D.238395;
  struct const_iterator D.258261;

  <bb 2> :
  _1 = &this->D.170351._M_impl.D.169696._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.238395, _1);
  D.258261 = D.238395;
  D.238395 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258261;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E, funcdef_no=9678, decl_uid=230078, cgraph_uid=6310, symbol_order=7106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result, struct allocator & D.238401)
{
  struct basic_block_def * * D.258266;
  struct basic_block_def * * D.258264;

  <bb 2> :
  D.258266 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.258264 = D.258266;

  <bb 3> :
<L0>:
  return D.258264;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10260, decl_uid=238403, cgraph_uid=6893, symbol_order=7693)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258269;
  const bool __assignable;
  struct basic_block_def * * D.258267;

  <bb 2> :
  __assignable = 1;
  D.258269 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.258267 = D.258269;

  <bb 3> :
<L0>:
  return D.258267;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_, funcdef_no=10717, decl_uid=242855, cgraph_uid=7349, symbol_order=8149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258272;
  struct basic_block_def * * D.258270;

  <bb 2> :
  D.258272 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.258270 = D.258272;

  <bb 3> :
<L0>:
  return D.258270;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10902, decl_uid=245971, cgraph_uid=7534, symbol_order=8336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258277;
  struct __normal_iterator D.258275;
  struct __normal_iterator D.258274;
  struct basic_block_def * * D.258273;

  <bb 2> :
  D.258274 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.258275 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.258277 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (D.258275, D.258274, __result);
  D.258273 = D.258277;

  <bb 3> :
<L0>:
  return D.258273;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEET_SA_, funcdef_no=10273, decl_uid=238507, cgraph_uid=6905, symbol_order=7705)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.258278;

  <bb 2> :
  D.258278 = __it;

  <bb 3> :
<L0>:
  return D.258278;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_, funcdef_no=10992, decl_uid=246911, cgraph_uid=7624, symbol_order=8426)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258282;
  struct basic_block_def * * D.258280;

  <bb 2> :
  __result.1980_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1980_1);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _4 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.258282 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_4, _3, _2);
  _5 = D.258282;
  D.258280 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258280;

}



;; Function std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPKP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE, funcdef_no=10719, decl_uid=243024, cgraph_uid=7351, symbol_order=8151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * const * D.258283;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (&__it);
  D.258283 = *_1;

  <bb 3> :
<L0>:
  return D.258283;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=10908, decl_uid=230045, cgraph_uid=7540, symbol_order=8342)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * const & __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * const * const & D.258285;

  <bb 2> :
  D.258285 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258285;

}



;; Function std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10721, decl_uid=243178, cgraph_uid=7353, symbol_order=8153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258289;
  struct basic_block_def * * D.258287;

  <bb 2> :
  D.258289 = std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (__first, __last, __result);
  D.258287 = D.258289;

  <bb 3> :
<L0>:
  return D.258287;

}



;; Function std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10909, decl_uid=246016, cgraph_uid=7541, symbol_order=8343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258290;

  <bb 2> :
  D.258290 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258290;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP15basic_block_defEEPT_PKS5_S8_S6_, funcdef_no=10994, decl_uid=246956, cgraph_uid=7626, symbol_order=8428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  const ptrdiff_t _Num;
  struct basic_block_def * * D.258295;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 8;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1981_2 = (long unsigned int) _Num;
  _3 = _Num.1981_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1982_4 = (long unsigned int) _Num;
  _5 = _Num.1982_4 * 8;
  D.258295 = __result + _5;

  <bb 5> :
<L3>:
  return D.258295;

}



;; Function std::__niter_wrap<basic_block_def**> (_ZSt12__niter_wrapIPP15basic_block_defET_RKS3_S3_, funcdef_no=10726, decl_uid=243221, cgraph_uid=7358, symbol_order=8158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_wrap<basic_block_def**> (struct basic_block_def * * const & D.246038, struct basic_block_def * * __res)
{
  struct basic_block_def * * D.258297;

  <bb 2> :
  D.258297 = __res;

  <bb 3> :
<L0>:
  return D.258297;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2ERKS2_, funcdef_no=8834, decl_uid=171359, cgraph_uid=5466, symbol_order=6262)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.258303;
  struct __normal_iterator D.258300;
  struct __normal_iterator D.258299;
  struct allocator D.230206;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171396;
  _2 = &__x->D.171396;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  D.230206 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<symbolicinfoPatharray>::size (__x);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _4, &D.230206);

  <bb 3> :
  std::allocator<symbolicinfoPatharray>::~allocator (&D.230206);
  D.230206 = {CLOBBER};
  _5 = &this->D.171396;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = this->D.171396._M_impl.D.170741._M_start;
  D.258299 = std::vector<symbolicinfoPatharray>::end (__x);
  D.258300 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.258303 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (D.258300, D.258299, _7, _6);

  <bb 4> :
  _8 = D.258303;
  this->D.171396._M_impl.D.170741._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<symbolicinfoPatharray>::~allocator (&D.230206);
  resx 2

  <bb 6> :
<L1>:
  D.230206 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.171396;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9681, decl_uid=170631, cgraph_uid=6313, symbol_order=7109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.258305;

  <bb 2> :
  D.258305 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.258305;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E17_S_select_on_copyERKS2_, funcdef_no=9680, decl_uid=170603, cgraph_uid=6312, symbol_order=7108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE37select_on_container_copy_constructionERKS1_, funcdef_no=10262, decl_uid=170568, cgraph_uid=6894, symbol_order=7694)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<symbolicinfoPatharray>::size (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE4sizeEv, funcdef_no=9679, decl_uid=171029, cgraph_uid=6311, symbol_order=7107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::size (const struct vector * const this)
{
  size_type D.258311;

  <bb 2> :
  _1 = this->D.171396._M_impl.D.170741._M_finish;
  _2 = this->D.171396._M_impl.D.170741._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.258311 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258311;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EmRKS1_, funcdef_no=9683, decl_uid=170828, cgraph_uid=6315, symbol_order=7111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=10264, decl_uid=170733, cgraph_uid=6896, symbol_order=7696)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this, __a);
  _1 = &this->D.170741;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_M_create_storageEm, funcdef_no=10266, decl_uid=170752, cgraph_uid=6898, symbol_order=7698)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.258314;

  <bb 2> :
  D.258314 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (this, __n);
  _1 = D.258314;
  this->_M_impl.D.170741._M_start = _1;
  _2 = this->_M_impl.D.170741._M_start;
  this->_M_impl.D.170741._M_finish = _2;
  _3 = this->_M_impl.D.170741._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.170741._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE11_M_allocateEm, funcdef_no=10281, decl_uid=170745, cgraph_uid=6913, symbol_order=7713)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.258321;
  struct symbolicinfoPatharray * iftmp.1983;
  struct symbolicinfoPatharray * D.258315;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.258321 = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_1, __n);
  iftmp.1983 = D.258321;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1983 = 0B;

  <bb 5> :
  D.258315 = iftmp.1983;

  <bb 6> :
<L3>:
  return D.258315;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE8allocateERS1_m, funcdef_no=10728, decl_uid=170546, cgraph_uid=7360, symbol_order=8160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct symbolicinfoPatharray * D.258324;
  struct symbolicinfoPatharray * D.258322;

  <bb 2> :
  D.258324 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (__a, __n, 0B);
  D.258322 = D.258324;

  <bb 3> :
<L0>:
  return D.258322;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE8allocateEmPKv, funcdef_no=10912, decl_uid=170400, cgraph_uid=7545, symbol_order=8347)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (struct new_allocator * const this, size_type __n, const void * D.246975)
{
  struct symbolicinfoPatharray * D.258335;
  struct symbolicinfoPatharray * D.258334;
  align_val_t __al;
  struct symbolicinfoPatharray * D.258332;
  bool retval.1984;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1984 = _4 != 0;
  if (retval.1984 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.258335 = operator new (_6);
  D.258332 = D.258335;

  <bb 7> :
<L6>:
  return D.258332;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE11_M_max_sizeEv, funcdef_no=10913, decl_uid=170427, cgraph_uid=7544, symbol_order=8346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.258336;

  <bb 2> :
  D.258336 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.258336;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implD2Ev, funcdef_no=6846, decl_uid=170788, cgraph_uid=3474, symbol_order=4256)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::~allocator (_ZNSaI21symbolicinfoPatharrayED2Ev, funcdef_no=7856, decl_uid=170521, cgraph_uid=4488, symbol_order=5280)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayED2Ev, funcdef_no=8823, decl_uid=170450, cgraph_uid=5455, symbol_order=6251)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8826, decl_uid=170629, cgraph_uid=5458, symbol_order=6254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.258338;

  <bb 2> :
  D.258338 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.258338;

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9686, decl_uid=171011, cgraph_uid=6318, symbol_order=7114)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::end (const struct vector * const this)
{
  struct const_iterator D.238451;
  struct const_iterator D.258340;

  <bb 2> :
  _1 = &this->D.171396._M_impl.D.170741._M_finish;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238451, _1);
  D.258340 = D.238451;
  D.238451 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258340;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=10268, decl_uid=230175, cgraph_uid=6900, symbol_order=7700)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, const struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9685, decl_uid=171007, cgraph_uid=6317, symbol_order=7113)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::begin (const struct vector * const this)
{
  struct const_iterator D.238449;
  struct const_iterator D.258343;

  <bb 2> :
  _1 = &this->D.171396._M_impl.D.170741._M_start;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238449, _1);
  D.258343 = D.238449;
  D.238449 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258343;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9687, decl_uid=230195, cgraph_uid=6319, symbol_order=7115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result, struct allocator & D.238455)
{
  struct symbolicinfoPatharray * D.258348;
  struct symbolicinfoPatharray * D.258346;

  <bb 2> :
  D.258348 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.258346 = D.258348;

  <bb 3> :
<L0>:
  return D.258346;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10270, decl_uid=238457, cgraph_uid=6903, symbol_order=7703)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258351;
  const bool __assignable;
  struct symbolicinfoPatharray * D.258349;

  <bb 2> :
  __assignable = 1;
  D.258351 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.258349 = D.258351;

  <bb 3> :
<L0>:
  return D.258349;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10718, decl_uid=243006, cgraph_uid=7350, symbol_order=8150)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.258353;
  bool retval.1985;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (&__first);
  _2 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_2, _1);
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (&__first);
  __cur = __cur + 16;

  <bb 4> :
  retval.1985 = __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (&__first, &__last);
  if (retval.1985 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.258353 = __cur;

  <bb 6> :
<L3>:
  return D.258353;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10906, decl_uid=230133, cgraph_uid=7538, symbol_order=8340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray & D.258355;

  <bb 2> :
  D.258355 = this->_M_current;

  <bb 3> :
<L0>:
  return D.258355;

}



;; Function std::__addressof<symbolicinfoPatharray> (_ZSt11__addressofI21symbolicinfoPatharrayEPT_RS1_, funcdef_no=10905, decl_uid=245999, cgraph_uid=7537, symbol_order=8339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__addressof<symbolicinfoPatharray> (struct symbolicinfoPatharray & __r)
{
  struct symbolicinfoPatharray * D.258357;

  <bb 2> :
  D.258357 = __r;

  <bb 3> :
<L0>:
  return D.258357;

}



;; Function std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRKS0_EEvPT_DpOT0_, funcdef_no=10907, decl_uid=246001, cgraph_uid=7539, symbol_order=8341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, const struct symbolicinfoPatharray & __args#0)
{
  void * D.246937;
  void * D.246936;
  const struct symbolicinfoPatharray * D.246938;

  <bb 2> :
  D.246938 = std::forward<const symbolicinfoPatharray&> (__args#0);
  D.246936 = __p;
  D.246937 = operator new (16, D.246936);
  MEM[(struct symbolicinfoPatharray *)D.246937] = *D.246938;
  return;

}



;; Function std::forward<const symbolicinfoPatharray&> (_ZSt7forwardIRK21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=10993, decl_uid=246934, cgraph_uid=7625, symbol_order=8427)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct symbolicinfoPatharray & std::forward<const symbolicinfoPatharray&> (const struct type & __t)
{
  const struct symbolicinfoPatharray & D.258359;

  <bb 2> :
  D.258359 = __t;

  <bb 3> :
<L0>:
  return D.258359;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10904, decl_uid=230137, cgraph_uid=7536, symbol_order=8338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.258361;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 16;
  this->_M_current = _2;
  D.258361 = this;

  <bb 3> :
<L0>:
  return D.258361;

}



;; Function __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZN9__gnu_cxxneIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10903, decl_uid=245992, cgraph_uid=7535, symbol_order=8337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.258363;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__rhs);
  _4 = *_3;
  D.258363 = _2 != _4;

  <bb 3> :
<L0>:
  return D.258363;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10914, decl_uid=230162, cgraph_uid=7546, symbol_order=8348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray * const & D.258365;

  <bb 2> :
  D.258365 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258365;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7859, decl_uid=170851, cgraph_uid=4491, symbol_order=5283)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.170741._M_end_of_storage;
  _2 = this->_M_impl.D.170741._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.170741._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8825, decl_uid=170748, cgraph_uid=5457, symbol_order=6253)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (struct _Vector_base * const this, struct symbolicinfoPatharray * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE10deallocateERS1_PS0_m, funcdef_no=9648, decl_uid=170553, cgraph_uid=6280, symbol_order=7076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (struct allocator_type & __a, struct symbolicinfoPatharray * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE10deallocateEPS1_m, funcdef_no=10237, decl_uid=170404, cgraph_uid=6869, symbol_order=7669)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (struct new_allocator * const this, struct symbolicinfoPatharray * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<symbolicinfoPatharray>::~vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7862, decl_uid=171393, cgraph_uid=4494, symbol_order=5286)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171396;
  _2 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_1);
  _3 = this->D.171396._M_impl.D.170741._M_finish;
  _4 = this->D.171396._M_impl.D.170741._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_4, _3, _2);
  _5 = &this->D.171396;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt8_DestroyIP21symbolicinfoPatharrayS0_EvT_S2_RSaIT0_E, funcdef_no=8827, decl_uid=216290, cgraph_uid=5459, symbol_order=6255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct allocator & D.229960)
{
  <bb 2> :
  std::_Destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*> (_ZSt8_DestroyIP21symbolicinfoPatharrayEvT_S2_, funcdef_no=9649, decl_uid=229962, cgraph_uid=6282, symbol_order=7078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP21symbolicinfoPatharrayEEvT_S4_, funcdef_no=10238, decl_uid=238295, cgraph_uid=6870, symbol_order=7670)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * D.242674, struct symbolicinfoPatharray * D.242675)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function symbolicinfo::operator= (_ZN12symbolicinfoaSERKS_, funcdef_no=7868, decl_uid=216313, cgraph_uid=4499, symbol_order=5291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfo & symbolicinfo::operator= (struct symbolicinfo * const this, const struct symbolicinfo & D.216314)
{
  struct symbolicinfo & D.258373;

  <bb 2> :
  _1 = D.216314->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.216314->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.216314->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.216314->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.216314->node;
  this->node = _5;
  _6 = &D.216314->switchs;
  _7 = &this->switchs;
  std::vector<basic_block_def*>::operator= (_7, _6);
  _8 = D.216314->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.216314->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.216314->prevlogic;
  this->prevlogic = _10;
  _11 = &D.216314->symbolicExecutionPathConstraint;
  _12 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::operator= (_12, _11);
  _13 = &D.216314->symbolicExecutionPathConstraintarrayTrue;
  _14 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::operator= (_14, _13);
  _15 = &D.216314->symbolicExecutionPathConstraintarrayFalse;
  _16 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::operator= (_16, _15);
  D.258373 = this;

  <bb 3> :
<L0>:
  return D.258373;

}



;; Function std::vector<basic_block_def*>::operator= (_ZNSt6vectorIP15basic_block_defSaIS1_EEaSERKS3_, funcdef_no=8836, decl_uid=169929, cgraph_uid=5470, symbol_order=6266)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<basic_block_def*>::operator= (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.258408;
  struct basic_block_def * * __tmp;
  const size_type __xlen;
  struct vector & D.258406;
  struct __normal_iterator D.258403;
  struct __normal_iterator D.258402;
  struct __normal_iterator D.258401;
  struct __normal_iterator D.258400;
  struct __normal_iterator D.258399;
  bool retval.1990;
  struct __normal_iterator D.258394;
  struct __normal_iterator D.258393;
  bool retval.1989;
  bool iftmp.1988;
  bool retval.1987;
  bool retval.1986;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1986 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ();
  if (retval.1986 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.170351;
  _4 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.170351;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1988 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1988 = 0;

  <bb 8> :
  retval.1987 = iftmp.1988;
  if (retval.1987 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<basic_block_def*>::clear (this);
  _8 = &this->D.170351;
  _9 = this->D.170351._M_impl.D.169696._M_end_of_storage;
  _10 = this->D.170351._M_impl.D.169696._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 8;
  _13 = (long unsigned int) _12;
  _14 = this->D.170351._M_impl.D.169696._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_8, _14, _13);
  this->D.170351._M_impl.D.169696._M_start = 0B;
  this->D.170351._M_impl.D.169696._M_finish = 0B;
  this->D.170351._M_impl.D.169696._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.170351;
  _16 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.170351;
  _18 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<basic_block_def*> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<basic_block_def*>::size (__x);
  _19 = std::vector<basic_block_def*>::capacity (this);
  retval.1989 = __xlen > _19;
  if (retval.1989 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.258393 = std::vector<basic_block_def*>::end (__x);
  D.258394 = std::vector<basic_block_def*>::begin (__x);
  D.258408 = std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (this, __xlen, D.258394, D.258393);
  __tmp = D.258408;
  _20 = &this->D.170351;
  _21 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_20);
  _22 = this->D.170351._M_impl.D.169696._M_finish;
  _23 = this->D.170351._M_impl.D.169696._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_23, _22, _21);
  _24 = &this->D.170351;
  _25 = this->D.170351._M_impl.D.169696._M_end_of_storage;
  _26 = this->D.170351._M_impl.D.169696._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 8;
  _29 = (long unsigned int) _28;
  _30 = this->D.170351._M_impl.D.169696._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_24, _30, _29);
  this->D.170351._M_impl.D.169696._M_start = __tmp;
  _31 = this->D.170351._M_impl.D.169696._M_start;
  _32 = __xlen * 8;
  _33 = _31 + _32;
  this->D.170351._M_impl.D.169696._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<basic_block_def*>::size (this);
  retval.1990 = __xlen <= _34;
  if (retval.1990 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.170351;
  _36 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_35);
  D.258399 = std::vector<basic_block_def*>::end (this);
  D.258400 = std::vector<basic_block_def*>::begin (this);
  D.258401 = std::vector<basic_block_def*>::end (__x);
  D.258402 = std::vector<basic_block_def*>::begin (__x);
  D.258403 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.258402, D.258401, D.258400);
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (D.258403, D.258399, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.170351._M_impl.D.169696._M_start;
  _38 = __x->D.170351._M_impl.D.169696._M_start;
  _39 = std::vector<basic_block_def*>::size (this);
  _40 = _39 * 8;
  _41 = _38 + _40;
  _42 = __x->D.170351._M_impl.D.169696._M_start;
  std::copy<basic_block_def**, basic_block_def**> (_42, _41, _37);
  _43 = &this->D.170351;
  _44 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_43);
  _45 = this->D.170351._M_impl.D.169696._M_finish;
  _46 = __x->D.170351._M_impl.D.169696._M_finish;
  _47 = __x->D.170351._M_impl.D.169696._M_start;
  _48 = std::vector<basic_block_def*>::size (this);
  _49 = _48 * 8;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.170351._M_impl.D.169696._M_start;
  _52 = __xlen * 8;
  _53 = _51 + _52;
  this->D.170351._M_impl.D.169696._M_finish = _53;

  <bb 17> :
  D.258406 = this;

  <bb 18> :
<L19>:
  return D.258406;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E27_S_propagate_on_copy_assignEv, funcdef_no=8837, decl_uid=169563, cgraph_uid=5468, symbol_order=6264)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ()
{
  bool D.258409;

  <bb 2> :
  D.258409 = 0;

  <bb 3> :
<L0>:
  return D.258409;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E15_S_always_equalEv, funcdef_no=8838, decl_uid=169566, cgraph_uid=5469, symbol_order=6265)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ()
{
  bool D.258411;

  <bb 2> :
  D.258411 = 1;

  <bb 3> :
<L0>:
  return D.258411;

}



;; Function std::operator!= (_ZStneRKSaIP15basic_block_defES3_, funcdef_no=9688, decl_uid=169449, cgraph_uid=6320, symbol_order=7116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.238474, const struct allocator & D.238475)
{
  bool D.258413;

  <bb 2> :
  D.258413 = 0;

  <bb 3> :
<L0>:
  return D.258413;

}



;; Function std::vector<basic_block_def*>::clear (_ZNSt6vectorIP15basic_block_defSaIS1_EE5clearEv, funcdef_no=9689, decl_uid=170081, cgraph_uid=6321, symbol_order=7117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.170351._M_impl.D.169696._M_start;
  std::vector<basic_block_def*>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<basic_block_def*>::_M_erase_at_end (_ZNSt6vectorIP15basic_block_defSaIS1_EE15_M_erase_at_endEPS1_, funcdef_no=10272, decl_uid=170209, cgraph_uid=6904, symbol_order=7704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<basic_block_def*>::_M_erase_at_end (struct vector * const this, struct basic_block_def * * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.170351._M_impl.D.169696._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 8;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.170351;
  _5 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_4);
  _6 = this->D.170351._M_impl.D.169696._M_finish;
  std::_Destroy<basic_block_def**, basic_block_def*> (__pos, _6, _5);
  this->D.170351._M_impl.D.169696._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<basic_block_def*> > (_ZSt15__alloc_on_copyISaIP15basic_block_defEEvRT_RKS3_, funcdef_no=9690, decl_uid=230233, cgraph_uid=6322, symbol_order=7118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<basic_block_def*> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<basic_block_def*>::capacity (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8capacityEv, funcdef_no=9691, decl_uid=169997, cgraph_uid=6323, symbol_order=7119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::capacity (const struct vector * const this)
{
  size_type D.258418;

  <bb 2> :
  _1 = this->D.170351._M_impl.D.169696._M_end_of_storage;
  _2 = this->D.170351._M_impl.D.169696._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.258418 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258418;

}



;; Function std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZNSt6vectorIP15basic_block_defSaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_, funcdef_no=9692, decl_uid=230240, cgraph_uid=6324, symbol_order=7120)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct basic_block_def * * std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct basic_block_def * * D.258422;
  struct basic_block_def * * __result;
  struct basic_block_def * * D.258420;

  <bb 2> :
  _1 = &this->D.170351;
  D.258422 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_1, __n);
  __result = D.258422;
  _2 = &this->D.170351;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (__first, __last, __result, _3);

  <bb 3> :
  D.258420 = __result;

  <bb 4> :
<L0>:
  return D.258420;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.170351;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_, funcdef_no=9693, decl_uid=230248, cgraph_uid=6325, symbol_order=7121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.258428;
  struct __normal_iterator D.258427;
  struct __normal_iterator D.258426;

  <bb 2> :
  D.258427 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.258428 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.258426 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.258428, D.258427, __result);

  <bb 3> :
<L0>:
  return D.258426;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_, funcdef_no=10274, decl_uid=238513, cgraph_uid=6907, symbol_order=7707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct basic_block_def * * D.258432;
  struct __normal_iterator D.258430;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__result);
  _2 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.258432 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_3, _2, _1);
  _4 = D.258432;
  D.258430 = std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (__result, _4);

  <bb 3> :
<L0>:
  return D.258430;

}



;; Function std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10720, decl_uid=243175, cgraph_uid=7352, symbol_order=8152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * * D.258433;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__it);
  D.258433 = *_1;

  <bb 3> :
<L0>:
  return D.258433;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, funcdef_no=10722, decl_uid=243182, cgraph_uid=7354, symbol_order=8154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __from, struct basic_block_def * * __res)
{
  struct __normal_iterator D.258435;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 8;
  D.258435 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.258435;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEplEl, funcdef_no=10910, decl_uid=215320, cgraph_uid=7542, symbol_order=8344)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct basic_block_def * * const D.246962;
  struct __normal_iterator D.246963;
  struct __normal_iterator D.258437;

  <bb 2> :
  _1 = this->_M_current;
  __n.1991_2 = (long unsigned int) __n;
  _3 = __n.1991_2 * 8;
  _4 = _1 + _3;
  D.246962 = _4;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.246963, &D.246962);
  D.258437 = D.246963;
  D.246963 = {CLOBBER};
  D.246962 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.258437;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E, funcdef_no=9694, decl_uid=230254, cgraph_uid=6326, symbol_order=7122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.238542)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEEEvT_S9_, funcdef_no=10276, decl_uid=238544, cgraph_uid=6908, symbol_order=7708)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS5_SaIS5_EEEEEEvT_SB_, funcdef_no=10723, decl_uid=243206, cgraph_uid=7355, symbol_order=8155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator D.246025, struct __normal_iterator D.246026)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<basic_block_def**, basic_block_def**> (_ZSt4copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=9695, decl_uid=230262, cgraph_uid=6327, symbol_order=7123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258443;
  struct basic_block_def * * D.258441;

  <bb 2> :
  _1 = std::__miter_base<basic_block_def**> (__last);
  _2 = std::__miter_base<basic_block_def**> (__first);
  D.258443 = std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_2, _1, __result);
  D.258441 = D.258443;

  <bb 3> :
<L0>:
  return D.258441;

}



;; Function std::__miter_base<basic_block_def**> (_ZSt12__miter_baseIPP15basic_block_defET_S3_, funcdef_no=10277, decl_uid=238560, cgraph_uid=6909, symbol_order=7709)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__miter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.258444;

  <bb 2> :
  D.258444 = __it;

  <bb 3> :
<L0>:
  return D.258444;

}



;; Function std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_ZSt13__copy_move_aILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10278, decl_uid=238562, cgraph_uid=6910, symbol_order=7710)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258448;
  struct basic_block_def * * D.258446;

  <bb 2> :
  __result.1992_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1992_1);
  _3 = std::__niter_base<basic_block_def**> (__last);
  _4 = std::__niter_base<basic_block_def**> (__first);
  D.258448 = std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_4, _3, _2);
  _5 = D.258448;
  D.258446 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258446;

}



;; Function std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10725, decl_uid=243217, cgraph_uid=7357, symbol_order=8157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258451;
  struct basic_block_def * * D.258449;

  <bb 2> :
  D.258451 = std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258449 = D.258451;

  <bb 3> :
<L0>:
  return D.258449;

}



;; Function std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10911, decl_uid=246034, cgraph_uid=7543, symbol_order=8345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258452;

  <bb 2> :
  D.258452 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258452;

}



;; Function std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIPP15basic_block_defS2_S1_ET0_T_S4_S3_RSaIT1_E, funcdef_no=9696, decl_uid=230266, cgraph_uid=6328, symbol_order=7124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.238569)
{
  struct basic_block_def * * D.258456;
  struct basic_block_def * * D.258454;

  <bb 2> :
  D.258456 = std::uninitialized_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258454 = D.258456;

  <bb 3> :
<L0>:
  return D.258454;

}



;; Function std::uninitialized_copy<basic_block_def**, basic_block_def**> (_ZSt18uninitialized_copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=10279, decl_uid=238571, cgraph_uid=6911, symbol_order=7711)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258459;
  const bool __assignable;
  struct basic_block_def * * D.258457;

  <bb 2> :
  __assignable = 1;
  D.258459 = std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258457 = D.258459;

  <bb 3> :
<L0>:
  return D.258457;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP15basic_block_defS4_EET0_T_S6_S5_, funcdef_no=10727, decl_uid=243255, cgraph_uid=7359, symbol_order=8159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258462;
  struct basic_block_def * * D.258460;

  <bb 2> :
  D.258462 = std::copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258460 = D.258462;

  <bb 3> :
<L0>:
  return D.258460;

}



;; Function std::vector<symbolicinfoPatharray>::operator= (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEaSERKS2_, funcdef_no=8839, decl_uid=170974, cgraph_uid=5473, symbol_order=6269)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<symbolicinfoPatharray>::operator= (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.258496;
  struct symbolicinfoPatharray * __tmp;
  const size_type __xlen;
  struct vector & D.258494;
  struct __normal_iterator D.258491;
  struct __normal_iterator D.258490;
  struct __normal_iterator D.258489;
  struct __normal_iterator D.258488;
  struct __normal_iterator D.258487;
  bool retval.1997;
  struct __normal_iterator D.258482;
  struct __normal_iterator D.258481;
  bool retval.1996;
  bool iftmp.1995;
  bool retval.1994;
  bool retval.1993;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1993 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ();
  if (retval.1993 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.171396;
  _4 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.171396;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1995 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1995 = 0;

  <bb 8> :
  retval.1994 = iftmp.1995;
  if (retval.1994 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<symbolicinfoPatharray>::clear (this);
  _8 = &this->D.171396;
  _9 = this->D.171396._M_impl.D.170741._M_end_of_storage;
  _10 = this->D.171396._M_impl.D.170741._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.171396._M_impl.D.170741._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_8, _14, _13);
  this->D.171396._M_impl.D.170741._M_start = 0B;
  this->D.171396._M_impl.D.170741._M_finish = 0B;
  this->D.171396._M_impl.D.170741._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.171396;
  _16 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.171396;
  _18 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<symbolicinfoPatharray>::size (__x);
  _19 = std::vector<symbolicinfoPatharray>::capacity (this);
  retval.1996 = __xlen > _19;
  if (retval.1996 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.258481 = std::vector<symbolicinfoPatharray>::end (__x);
  D.258482 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.258496 = std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (this, __xlen, D.258482, D.258481);
  __tmp = D.258496;
  _20 = &this->D.171396;
  _21 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_20);
  _22 = this->D.171396._M_impl.D.170741._M_finish;
  _23 = this->D.171396._M_impl.D.170741._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_23, _22, _21);
  _24 = &this->D.171396;
  _25 = this->D.171396._M_impl.D.170741._M_end_of_storage;
  _26 = this->D.171396._M_impl.D.170741._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.171396._M_impl.D.170741._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_24, _30, _29);
  this->D.171396._M_impl.D.170741._M_start = __tmp;
  _31 = this->D.171396._M_impl.D.170741._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.171396._M_impl.D.170741._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<symbolicinfoPatharray>::size (this);
  retval.1997 = __xlen <= _34;
  if (retval.1997 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.171396;
  _36 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_35);
  D.258487 = std::vector<symbolicinfoPatharray>::end (this);
  D.258488 = std::vector<symbolicinfoPatharray>::begin (this);
  D.258489 = std::vector<symbolicinfoPatharray>::end (__x);
  D.258490 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.258491 = std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.258490, D.258489, D.258488);
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (D.258491, D.258487, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.171396._M_impl.D.170741._M_start;
  _38 = __x->D.171396._M_impl.D.170741._M_start;
  _39 = std::vector<symbolicinfoPatharray>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.171396._M_impl.D.170741._M_start;
  std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_42, _41, _37);
  _43 = &this->D.171396;
  _44 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_43);
  _45 = this->D.171396._M_impl.D.170741._M_finish;
  _46 = __x->D.171396._M_impl.D.170741._M_finish;
  _47 = __x->D.171396._M_impl.D.170741._M_start;
  _48 = std::vector<symbolicinfoPatharray>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.171396._M_impl.D.170741._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.171396._M_impl.D.170741._M_finish = _53;

  <bb 17> :
  D.258494 = this;

  <bb 18> :
<L19>:
  return D.258494;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E27_S_propagate_on_copy_assignEv, funcdef_no=8840, decl_uid=170608, cgraph_uid=5471, symbol_order=6267)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ()
{
  bool D.258497;

  <bb 2> :
  D.258497 = 0;

  <bb 3> :
<L0>:
  return D.258497;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E15_S_always_equalEv, funcdef_no=8841, decl_uid=170611, cgraph_uid=5472, symbol_order=6268)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ()
{
  bool D.258499;

  <bb 2> :
  D.258499 = 1;

  <bb 3> :
<L0>:
  return D.258499;

}



;; Function std::operator!= (_ZStneRKSaI21symbolicinfoPatharrayES2_, funcdef_no=9697, decl_uid=170494, cgraph_uid=6329, symbol_order=7125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.238575, const struct allocator & D.238576)
{
  bool D.258501;

  <bb 2> :
  D.258501 = 0;

  <bb 3> :
<L0>:
  return D.258501;

}



;; Function std::vector<symbolicinfoPatharray>::clear (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5clearEv, funcdef_no=9698, decl_uid=171126, cgraph_uid=6330, symbol_order=7126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.171396._M_impl.D.170741._M_start;
  std::vector<symbolicinfoPatharray>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::_M_erase_at_end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=10280, decl_uid=171254, cgraph_uid=6912, symbol_order=7712)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<symbolicinfoPatharray>::_M_erase_at_end (struct vector * const this, struct symbolicinfoPatharray * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.171396._M_impl.D.170741._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.171396;
  _5 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_4);
  _6 = this->D.171396._M_impl.D.170741._M_finish;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (__pos, _6, _5);
  this->D.171396._M_impl.D.170741._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_ZSt15__alloc_on_copyISaI21symbolicinfoPatharrayEEvRT_RKS2_, funcdef_no=9699, decl_uid=230299, cgraph_uid=6331, symbol_order=7127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<symbolicinfoPatharray>::capacity (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE8capacityEv, funcdef_no=9700, decl_uid=171042, cgraph_uid=6332, symbol_order=7128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::capacity (const struct vector * const this)
{
  size_type D.258506;

  <bb 2> :
  _1 = this->D.171396._M_impl.D.170741._M_end_of_storage;
  _2 = this->D.171396._M_impl.D.170741._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.258506 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258506;

}



;; Function std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=9701, decl_uid=230306, cgraph_uid=6333, symbol_order=7129)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct symbolicinfoPatharray * std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct symbolicinfoPatharray * D.258510;
  struct symbolicinfoPatharray * __result;
  struct symbolicinfoPatharray * D.258508;

  <bb 2> :
  _1 = &this->D.171396;
  D.258510 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_1, __n);
  __result = D.258510;
  _2 = &this->D.171396;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (__first, __last, __result, _3);

  <bb 3> :
  D.258508 = __result;

  <bb 4> :
<L0>:
  return D.258508;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.171396;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9704, decl_uid=171009, cgraph_uid=6336, symbol_order=7132)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::end (struct vector * const this)
{
  struct iterator D.238662;
  struct iterator D.258514;

  <bb 2> :
  _1 = &this->D.171396._M_impl.D.170741._M_finish;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238662, _1);
  D.258514 = D.238662;
  D.238662 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258514;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=10283, decl_uid=230388, cgraph_uid=6915, symbol_order=7715)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9702, decl_uid=171005, cgraph_uid=6334, symbol_order=7130)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::begin (struct vector * const this)
{
  struct iterator D.238616;
  struct iterator D.258517;

  <bb 2> :
  _1 = &this->D.171396._M_impl.D.170741._M_start;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238616, _1);
  D.258517 = D.238616;
  D.238616 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258517;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=9703, decl_uid=230407, cgraph_uid=6335, symbol_order=7131)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.258522;
  struct __normal_iterator D.258521;
  struct __normal_iterator D.258520;

  <bb 2> :
  D.258521 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__last);
  D.258522 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first);
  D.258520 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.258522, D.258521, __result);

  <bb 3> :
<L0>:
  return D.258520;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=10285, decl_uid=238628, cgraph_uid=6917, symbol_order=7717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.258524;

  <bb 2> :
  D.258524 = __it;

  <bb 3> :
<L0>:
  return D.258524;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=10286, decl_uid=238634, cgraph_uid=6920, symbol_order=7720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct symbolicinfoPatharray * D.258528;
  struct __normal_iterator D.258526;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__result);
  _2 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__last);
  _3 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__first);
  D.258528 = std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_3, _2, _1);
  _4 = D.258528;
  D.258526 = std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__result, _4);

  <bb 3> :
<L0>:
  return D.258526;

}



;; Function std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIP21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10730, decl_uid=243429, cgraph_uid=7362, symbol_order=8162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  struct symbolicinfoPatharray * D.258529;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.258529 = *_1;

  <bb 3> :
<L0>:
  return D.258529;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10915, decl_uid=230375, cgraph_uid=7547, symbol_order=8349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  struct symbolicinfoPatharray * const & D.258531;

  <bb 2> :
  D.258531 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258531;

}



;; Function std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIPK21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10729, decl_uid=243278, cgraph_uid=7361, symbol_order=8161)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  const struct symbolicinfoPatharray * D.258533;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.258533 = *_1;

  <bb 3> :
<L0>:
  return D.258533;

}



;; Function std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10731, decl_uid=243577, cgraph_uid=7363, symbol_order=8163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258537;
  struct symbolicinfoPatharray * D.258535;

  <bb 2> :
  D.258537 = std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258535 = D.258537;

  <bb 3> :
<L0>:
  return D.258535;

}



;; Function std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10916, decl_uid=246056, cgraph_uid=7548, symbol_order=8350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258538;

  <bb 2> :
  D.258538 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258538;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI21symbolicinfoPatharrayEEPT_PKS4_S7_S5_, funcdef_no=10995, decl_uid=246999, cgraph_uid=7627, symbol_order=8429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  const ptrdiff_t _Num;
  struct symbolicinfoPatharray * D.258543;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1998_2 = (long unsigned int) _Num;
  _3 = _Num.1998_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1999_4 = (long unsigned int) _Num;
  _5 = _Num.1999_4 * 16;
  D.258543 = __result + _5;

  <bb 5> :
<L3>:
  return D.258543;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10732, decl_uid=243581, cgraph_uid=7364, symbol_order=8164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __from, struct symbolicinfoPatharray * __res)
{
  struct __normal_iterator D.258545;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.258545 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.258545;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10917, decl_uid=230366, cgraph_uid=7549, symbol_order=8351)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct symbolicinfoPatharray * const D.247005;
  struct __normal_iterator D.247006;
  struct __normal_iterator D.258547;

  <bb 2> :
  _1 = this->_M_current;
  __n.2000_2 = (long unsigned int) __n;
  _3 = __n.2000_2 * 16;
  _4 = _1 + _3;
  D.247005 = _4;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.247006, &D.247005);
  D.258547 = D.247006;
  D.247006 = {CLOBBER};
  D.247005 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.258547;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=9705, decl_uid=230413, cgraph_uid=6337, symbol_order=7133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.238665)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=10289, decl_uid=238667, cgraph_uid=6921, symbol_order=7721)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10733, decl_uid=243605, cgraph_uid=7365, symbol_order=8165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator D.246066, struct __normal_iterator D.246067)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt4copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=9706, decl_uid=230421, cgraph_uid=6338, symbol_order=7134)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258553;
  struct symbolicinfoPatharray * D.258551;

  <bb 2> :
  _1 = std::__miter_base<symbolicinfoPatharray*> (__last);
  _2 = std::__miter_base<symbolicinfoPatharray*> (__first);
  D.258553 = std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_2, _1, __result);
  D.258551 = D.258553;

  <bb 3> :
<L0>:
  return D.258551;

}



;; Function std::__miter_base<symbolicinfoPatharray*> (_ZSt12__miter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10290, decl_uid=238683, cgraph_uid=6922, symbol_order=7722)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__miter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.258554;

  <bb 2> :
  D.258554 = __it;

  <bb 3> :
<L0>:
  return D.258554;

}



;; Function std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt13__copy_move_aILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10291, decl_uid=238685, cgraph_uid=6923, symbol_order=7723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258558;
  struct symbolicinfoPatharray * D.258556;

  <bb 2> :
  __result.2001_1 = __result;
  _2 = std::__niter_base<symbolicinfoPatharray*> (__result.2001_1);
  _3 = std::__niter_base<symbolicinfoPatharray*> (__last);
  _4 = std::__niter_base<symbolicinfoPatharray*> (__first);
  D.258558 = std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_4, _3, _2);
  _5 = D.258558;
  D.258556 = std::__niter_wrap<symbolicinfoPatharray*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258556;

}



;; Function std::__niter_base<symbolicinfoPatharray*> (_ZSt12__niter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10734, decl_uid=243616, cgraph_uid=7366, symbol_order=8166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.258559;

  <bb 2> :
  D.258559 = __it;

  <bb 3> :
<L0>:
  return D.258559;

}



;; Function std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10735, decl_uid=243618, cgraph_uid=7367, symbol_order=8167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258563;
  struct symbolicinfoPatharray * D.258561;

  <bb 2> :
  D.258563 = std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258561 = D.258563;

  <bb 3> :
<L0>:
  return D.258561;

}



;; Function std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10918, decl_uid=246075, cgraph_uid=7550, symbol_order=8352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258564;

  <bb 2> :
  D.258564 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258564;

}



;; Function std::__niter_wrap<symbolicinfoPatharray*> (_ZSt12__niter_wrapIP21symbolicinfoPatharrayET_RKS2_S2_, funcdef_no=10736, decl_uid=243622, cgraph_uid=7368, symbol_order=8168)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_wrap<symbolicinfoPatharray*> (struct symbolicinfoPatharray * const & D.246079, struct symbolicinfoPatharray * __res)
{
  struct symbolicinfoPatharray * D.258566;

  <bb 2> :
  D.258566 = __res;

  <bb 3> :
<L0>:
  return D.258566;

}



;; Function std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIP21symbolicinfoPatharrayS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=9707, decl_uid=230425, cgraph_uid=6339, symbol_order=7135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result, struct allocator & D.238692)
{
  struct symbolicinfoPatharray * D.258570;
  struct symbolicinfoPatharray * D.258568;

  <bb 2> :
  D.258570 = std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258568 = D.258570;

  <bb 3> :
<L0>:
  return D.258568;

}



;; Function std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=10292, decl_uid=238694, cgraph_uid=6924, symbol_order=7724)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258573;
  const bool __assignable;
  struct symbolicinfoPatharray * D.258571;

  <bb 2> :
  __assignable = 1;
  D.258573 = std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258571 = D.258573;

  <bb 3> :
<L0>:
  return D.258571;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP21symbolicinfoPatharrayS3_EET0_T_S5_S4_, funcdef_no=10737, decl_uid=243656, cgraph_uid=7369, symbol_order=8169)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.258574;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_1, __first);
  __first = __first + 16;
  __cur = __cur + 16;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.258574 = __cur;

  <bb 6> :
<L3>:
  return D.258574;

}



;; Function std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRS0_EEvPT_DpOT0_, funcdef_no=10919, decl_uid=246087, cgraph_uid=7551, symbol_order=8353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, struct symbolicinfoPatharray & __args#0)
{
  void * D.247030;
  void * D.247029;
  const struct symbolicinfoPatharray * D.247031;

  <bb 2> :
  D.247031 = std::forward<symbolicinfoPatharray&> (__args#0);
  D.247029 = __p;
  D.247030 = operator new (16, D.247029);
  MEM[(struct symbolicinfoPatharray *)D.247030] = *D.247031;
  return;

}



;; Function std::forward<symbolicinfoPatharray&> (_ZSt7forwardIR21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10996, decl_uid=247027, cgraph_uid=7628, symbol_order=8430)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray & std::forward<symbolicinfoPatharray&> (struct type & __t)
{
  struct symbolicinfoPatharray & D.258576;

  <bb 2> :
  D.258576 = __t;

  <bb 3> :
<L0>:
  return D.258576;

}



;; Function hash_map<tree_node*, function_path_array>::put (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7869, decl_uid=192067, cgraph_uid=4502, symbol_order=5294)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_path_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_path_array & v)
{
  bool D.258585;
  struct hash_entry * D.258584;
  unsigned int D.258583;
  bool ins;
  struct hash_entry * e;
  bool D.258581;
  void * D.216434;
  void * D.216433;

  <bb 2> :
  _1 = &this->m_table;
  D.258583 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.258583;
  D.258584 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.258584;
  D.258585 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (e);
  ins = D.258585;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216433 = &e->m_value;
  D.216434 = operator new (32, D.216433);
  function_path_array::function_path_array (D.216434, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_path_array::operator= (_4, v);

  <bb 5> :
  D.258581 = ~ins;

  <bb 6> :
<L3>:
  return D.258581;

  <bb 7> :
<L4>:
  operator delete (D.216434, D.216433);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8842, decl_uid=192225, cgraph_uid=5474, symbol_order=6270)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.258636;
  bool D.258635;
  bool D.258634;
  bool D.258633;
  bool D.258632;
  bool D.258631;
  struct value_type * D.258630;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2007;
  bool retval.2006;
  bool retval.2005;
  bool retval.2004;
  bool retval.2003;
  bool retval.2002;
  struct value_type * D.258592;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.258631 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2002 = D.258631;
  if (retval.2002 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.258632 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2003 = D.258632;
  if (retval.2003 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.258633 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.2004 = D.258633;
  if (retval.2004 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.258592 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.258634 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2005 = D.258634;
  if (retval.2005 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.258635 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2006 = D.258635;
  if (retval.2006 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.258636 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.2007 = D.258636;
  if (retval.2007 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.258592 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.258592 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.258592 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.258592 = _37 + _39;

  <bb 27> :
<L37>:
  return D.258592;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9708, decl_uid=192306, cgraph_uid=6352, symbol_order=7148)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.258667;
  unsigned int D.258666;
  bool D.258665;
  bool D.258664;
  struct mem_alloc_description & D.258663;
  struct value_type * D.258662;
  unsigned int D.258661;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.238718;
  void * D.238717;
  struct hash_entry & D.238755;
  bool iftmp.2011;
  bool retval.2010;
  bool iftmp.2009;
  bool retval.2008;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2009 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2009 = 0;

  <bb 6> :
  retval.2008 = iftmp.2009;
  if (retval.2008 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.258661 = hash_table_higher_prime_index (_5);
  nindex = D.258661;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.258662 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.258662;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.258664 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.258664;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.258665 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.258665;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2011 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2011 = 0;

  <bb 15> :
  retval.2010 = iftmp.2011;
  if (retval.2010 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.258666 = hash_map<tree_node*, function_path_array>::hash_entry::hash (x);
  _16 = D.258666;
  D.258667 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.258667;
  D.238755 = std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (x);
  D.238717 = q;
  D.238718 = operator new (40, D.238717);
  hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (D.238718, D.238755);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10293, decl_uid=192201, cgraph_uid=6925, symbol_order=7725)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.258668;

  <bb 2> :
  D.258668 = this->m_size;

  <bb 3> :
<L0>:
  return D.258668;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10294, decl_uid=192203, cgraph_uid=6926, symbol_order=7726)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.258670;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.258670 = _1 - _2;

  <bb 3> :
<L0>:
  return D.258670;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10295, decl_uid=192303, cgraph_uid=6927, symbol_order=7727)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2012;
  bool D.258672;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2012 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2012 = 0;

  <bb 6> :
  D.258672 = iftmp.2012;

  <bb 7> :
<L4>:
  return D.258672;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9336, decl_uid=192293, cgraph_uid=5968, symbol_order=6764)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.258694;
  struct value_type * D.258693;
  struct mem_alloc_description & D.258692;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.258690;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.258693 = xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (n);
  nentries = D.258693;
  goto <bb 6>; [INV]

  <bb 5> :
  D.258694 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (n);
  nentries = D.258694;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.258690 = nentries;

  <bb 9> :
<L14>:
  return D.258690;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10039, decl_uid=218369, cgraph_uid=6671, symbol_order=7471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.258697;
  struct hash_entry * D.258695;

  <bb 2> :
  D.258697 = xcalloc (count, 40);
  D.258695 = D.258697;

  <bb 3> :
<L0>:
  return D.258695;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10040, decl_uid=235127, cgraph_uid=6672, symbol_order=7472)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.258704;
  struct hash_entry * D.258703;
  struct hash_entry * D.258701;
  bool retval.2013;

  <bb 2> :
  retval.2013 = need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ();
  if (retval.2013 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.258703 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.258701 = D.258703;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.258704 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.258701 = D.258704;

  <bb 5> :
<L2>:
  return D.258701;

}



;; Function finalize<hash_map<tree_node*, function_path_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10557, decl_uid=241859, cgraph_uid=7192, symbol_order=7992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_path_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10559, decl_uid=245307, cgraph_uid=7190, symbol_order=7990)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_path_array::~function_path_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10556, decl_uid=241858, cgraph_uid=7188, symbol_order=7988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ()
{
  bool D.258705;

  <bb 2> :
  D.258705 = 1;

  <bb 3> :
<L0>:
  return D.258705;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10297, decl_uid=192126, cgraph_uid=6929, symbol_order=7729)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_path_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.258709;
  hashval_t D.258707;

  <bb 2> :
  _1 = &e->m_key;
  D.258709 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_1);
  D.258707 = D.258709;

  <bb 3> :
<L0>:
  return D.258707;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10296, decl_uid=192296, cgraph_uid=6928, symbol_order=7728)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.258722;
  bool D.258721;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2015;
  struct value_type * D.258713;
  bool retval.2014;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.258721 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2014 = D.258721;
  if (retval.2014 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258713 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.258722 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2015 = D.258722;
  if (retval.2015 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.258713 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.258713;

}



;; Function std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10298, decl_uid=238715, cgraph_uid=6930, symbol_order=7730)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.258723;

  <bb 2> :
  D.258723 = __t;

  <bb 3> :
<L0>:
  return D.258723;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9719, decl_uid=238740, cgraph_uid=6350, symbol_order=7146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.238742)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.238742->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.238742->m_value;
  function_path_array::function_path_array (_2, _3);
  return;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2EOS_, funcdef_no=9717, decl_uid=192418, cgraph_uid=6347, symbol_order=7143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, struct function_path_array & D.192420)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192420->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192420->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9715, decl_uid=175616, cgraph_uid=6344, symbol_order=7140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this, struct vector & D.175618)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175659;
  _2 = &D.175618->D.175659;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9713, decl_uid=175084, cgraph_uid=6341, symbol_order=7137)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.175086)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.175086->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10300, decl_uid=174990, cgraph_uid=6932, symbol_order=7732)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  std::allocator<function_path>::allocator (this, _1);
  _2 = &this->D.175004;
  _3 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  _4 = &_3->D.175004;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI13function_pathSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10738, decl_uid=243686, cgraph_uid=7370, symbol_order=8170)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.258725;

  <bb 2> :
  D.258725 = __t;

  <bb 3> :
<L0>:
  return D.258725;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10740, decl_uid=174946, cgraph_uid=7372, symbol_order=8172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8976, decl_uid=218371, cgraph_uid=5608, symbol_order=6404)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9721, decl_uid=192314, cgraph_uid=6353, symbol_order=7149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10302, decl_uid=192138, cgraph_uid=6934, symbol_order=7734)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10742, decl_uid=243701, cgraph_uid=7374, symbol_order=8174)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_path_array::operator= (_ZN19function_path_arrayaSERKS_, funcdef_no=7870, decl_uid=216435, cgraph_uid=4501, symbol_order=5293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path_array & function_path_array::operator= (struct function_path_array * const this, const struct function_path_array & D.216436)
{
  struct function_path_array & D.258728;

  <bb 2> :
  _1 = D.216436->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &D.216436->function_path_array;
  _3 = &this->function_path_array;
  std::vector<function_path>::operator= (_3, _2);
  D.258728 = this;

  <bb 3> :
<L0>:
  return D.258728;

}



;; Function symbolicinfo::~symbolicinfo (_ZN12symbolicinfoD2Ev, funcdef_no=6855, decl_uid=203933, cgraph_uid=3486, symbol_order=4268)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::~symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::~vector (_1);
  _2 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_2);
  _3 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_3);
  _4 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_4);
  *this = {CLOBBER};
  return;

}



;; Function PointerConstraint (_Z17PointerConstraintP3ptbS0_, funcdef_no=6857, decl_uid=203974, cgraph_uid=3489, symbol_order=4271)

Removing basic block 26
Removing basic block 36
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Merging blocks 83 and 86
Removing basic block 88
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124
;;
;; Loop 1
;;  header 76, multiple latches: 74 75
;;  depth 1, outer 0
;;  nodes: 76 74 75 13 15 56 65 64 63 62 60 61 59 57 58 55 54 53 52 36 51 21 50 37 45 49 48 38 35 26 34 33 31 32 28 30 29 27 22 25 24 23 47 46 43 44 40 42 41 39 19 20 18 17 16 14 12 72 71 70 69 68 67 66
;;
;; Loop 3
;;  header 62, latch 61
;;  depth 2, outer 1
;;  nodes: 62 61
;;
;; Loop 2
;;  header 59, latch 58
;;  depth 2, outer 1
;;  nodes: 59 58
;; 2 succs { 124 3 }
;; 3 succs { 124 4 }
;; 4 succs { 124 5 }
;; 5 succs { 124 6 }
;; 6 succs { 124 7 }
;; 7 succs { 124 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 98 }
;; 10 succs { 11 77 }
;; 11 succs { 76 }
;; 12 succs { 13 14 }
;; 13 succs { 75 }
;; 14 succs { 15 16 }
;; 15 succs { 75 }
;; 16 succs { 17 51 }
;; 17 succs { 19 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 22 52 }
;; 22 succs { 23 26 }
;; 23 succs { 123 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 35 }
;; 27 succs { 123 28 }
;; 28 succs { 29 32 }
;; 29 succs { 123 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 36 52 }
;; 36 succs { 37 52 }
;; 37 succs { 38 52 }
;; 38 succs { 39 52 }
;; 39 succs { 123 40 }
;; 40 succs { 41 44 }
;; 41 succs { 123 42 }
;; 42 succs { 43 44 }
;; 43 succs { 45 }
;; 44 succs { 45 }
;; 45 succs { 46 52 }
;; 46 succs { 123 47 }
;; 47 succs { 123 48 }
;; 48 succs { 49 52 }
;; 49 succs { 50 52 }
;; 50 succs { 123 52 }
;; 51 succs { 123 52 }
;; 52 succs { 123 53 }
;; 53 succs { 123 54 }
;; 54 succs { 123 55 }
;; 55 succs { 56 57 }
;; 56 succs { 75 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 58 60 }
;; 60 succs { 62 }
;; 61 succs { 62 }
;; 62 succs { 61 63 }
;; 63 succs { 123 64 }
;; 64 succs { 65 66 }
;; 65 succs { 75 }
;; 66 succs { 123 67 }
;; 67 succs { 123 68 }
;; 68 succs { 123 69 }
;; 69 succs { 123 70 }
;; 70 succs { 123 71 }
;; 71 succs { 123 72 }
;; 72 succs { 73 74 }
;; 73 succs { 77 }
;; 74 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 12 77 }
;; 77 succs { 124 78 }
;; 78 succs { 124 79 }
;; 79 succs { 124 80 }
;; 80 succs { 124 81 }
;; 81 succs { 124 82 }
;; 82 succs { 124 83 }
;; 83 succs { 124 84 }
;; 84 succs { 124 85 }
;; 85 succs { 124 86 }
;; 86 succs { 124 87 }
;; 87 succs { 124 88 }
;; 88 succs { 124 89 }
;; 89 succs { 124 90 }
;; 90 succs { 124 91 }
;; 91 succs { 124 92 }
;; 92 succs { 124 93 }
;; 93 succs { 124 94 }
;; 94 succs { 124 95 }
;; 95 succs { 124 96 }
;; 96 succs { 124 97 }
;; 97 succs { 99 }
;; 98 succs { 124 99 }
;; 99 succs { 124 100 }
;; 100 succs { 124 101 }
;; 101 succs { 124 102 }
;; 102 succs { 124 103 }
;; 103 succs { 124 104 }
;; 104 succs { 124 105 }
;; 105 succs { 124 106 }
;; 106 succs { 124 107 }
;; 107 succs { 124 108 }
;; 108 succs { 124 109 }
;; 109 succs { 124 110 }
;; 110 succs { 124 111 }
;; 111 succs { 124 112 }
;; 112 succs { 124 113 }
;; 113 succs { 124 114 }
;; 114 succs { 124 115 }
;; 115 succs { 124 116 }
;; 116 succs { 124 117 }
;; 117 succs { 124 118 }
;; 118 succs { 124 119 }
;; 119 succs { 124 120 }
;; 120 succs { 124 121 }
;; 121 succs { 124 122 }
;; 122 succs { 1 }
;; 123 succs { 124 }
;; 124 succs { }
void PointerConstraint (struct ptb * ptable, struct ptb * ftable)
{
  struct gimple_array * D.258819;
  const char * D.258818;
  const char * D.258817;
  union tree_node * D.258816;
  union tree_node * D.258815;
  union tree_node * D.258814;
  union tree_node * D.258813;
  union tree_node * D.258812;
  union tree_node * D.258811;
  int pass;
  struct gimple * def_stmt;
  const char * name;
  struct gimple_array start;
  int colectCount;
  int count;
  struct tm * timeinfo;
  time_t rawtime;
  int allcolectCount;
  struct ptb * processtable;
  int Entrypoint;
  double time_used3;
  double time_used2;
  double time_used;
  struct timespec temp;
  struct cgraph_node * node;
  struct gimple_array start;
  struct gimple_array * used_stmt;
  struct timespec aend;
  struct timespec astart;
  bool retval.2036;
  bool retval.2035;
  bool retval.2034;
  bool retval.2033;
  bool iftmp.2032;
  bool retval.2031;
  bool retval.2030;
  bool iftmp.2029;
  bool retval.2028;
  bool retval.2027;
  bool retval.2026;
  bool retval.2025;
  bool iftmp.2024;
  bool retval.2023;

  <bb 2> :
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  clock_gettime (1, &astart);
  Entrypoint = 0;
  clock_gettime (1, &aend);
  temp = diff (astart2, aend);

  <bb 3> :
  _1 = temp.tv_sec;
  _2 = (double) _1;
  _3 = temp.tv_nsec;
  _4 = (double) _3;
  _5 = _4 / 1.0e+9;
  time_used3 = _2 + _5;
  stderr.2016_6 = stderr;
  __builtin_fwrite ("start PointerConstraint\n", 1, 24, stderr.2016_6);

  <bb 4> :
  pointtablecount.2017_7 = pointtablecount;
  stderr.2018_8 = stderr;
  fprintf (stderr.2018_8, "ptable point %d \n", pointtablecount.2017_7);

  <bb 5> :
  stderr.2019_9 = stderr;
  __builtin_fwrite ("===============The second stage : Mapping stmt=================\n", 1, 64, stderr.2019_9);

  <bb 6> :
  FunctionStmtMappingAssign (ptable, used_stmt);

  <bb 7> :
  processtable = ptable;
  stderr.2020_10 = stderr;
  __builtin_fwrite ("===============The second stage : Program slicing=================\n", 1, 67, stderr.2020_10);

  <bb 8> :
  allcolectCount = 0;
  GIMPLE_FREE_COUNT.2021_11 = GIMPLE_FREE_COUNT;
  if (GIMPLE_FREE_COUNT.2021_11 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  freeanysis.2022_12 = freeanysis;
  if (freeanysis.2022_12 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 10> :
  _13 = processtable->size;
  if (_13 > 0)
    goto <bb 11>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 11> :
  count = 0;
  goto <bb 76>; [INV]

  <bb 12> :
  _14 = processtable->target;
  if (_14 == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 75>; [INV]

  <bb 14> :
  _15 = processtable->target;
  _16 = _15->base.code;
  if (_16 == 26)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 75>; [INV]

  <bb 16> :
  colectCount = 0;
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  _17 = processtable->target;
  _18 = _17->base.code;
  if (_18 == 153)
    goto <bb 17>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 17> :
  _19 = processtable->target;
  def_stmt = _19->ssa_name.def_stmt;
  levelsize = 0;
  _20 = gimple_code (def_stmt);
  if (_20 != 20)
    goto <bb 19>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _21 = gimple_code (def_stmt);
  if (_21 != 131)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  iftmp.2024 = 1;
  goto <bb 21>; [INV]

  <bb 20> :
  iftmp.2024 = 0;

  <bb 21> :
  retval.2023 = iftmp.2024;
  if (retval.2023 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 22> :
  pass = 0;
  _22 = gimple_code (def_stmt);
  retval.2025 = _22 == 8;
  if (retval.2025 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  D.258811 = gimple_call_fn (def_stmt);

  <bb 24> :
  _23 = D.258811;
  _24 = _23->base.code;
  retval.2026 = _24 != 165;
  if (retval.2026 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  pass = 1;

  <bb 26> :
  _25 = gimple_code (def_stmt);
  retval.2027 = _25 == 6;
  if (retval.2027 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 27> :
  D.258812 = gimple_assign_rhs1 (def_stmt);

  <bb 28> :
  _26 = D.258812;
  _27 = _26->base.code;
  if (_27 != 165)
    goto <bb 29>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 29> :
  D.258813 = gimple_assign_rhs1 (def_stmt);

  <bb 30> :
  _28 = D.258813;
  _29 = _28->base.code;
  if (_29 != 36)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.2029 = 1;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.2029 = 0;

  <bb 33> :
  retval.2028 = iftmp.2029;
  if (retval.2028 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  pass = 1;

  <bb 35> :
  _30 = processtable->target;
  _31 = _30->base.code;
  if (_31 != 131)
    goto <bb 36>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 36> :
  if (pass == 1)
    goto <bb 37>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 37> :
  if (def_stmt != 0B)
    goto <bb 38>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 38> :
  _32 = gimple_code (def_stmt);
  retval.2030 = _32 == 8;
  if (retval.2030 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 39> :
  D.258814 = gimple_call_fn (def_stmt);

  <bb 40> :
  _33 = D.258814;
  if (_33 != 0B)
    goto <bb 41>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 41> :
  D.258815 = gimple_call_fndecl (def_stmt);

  <bb 42> :
  _34 = D.258815;
  if (_34 != 0B)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  iftmp.2032 = 1;
  goto <bb 45>; [INV]

  <bb 44> :
  iftmp.2032 = 0;

  <bb 45> :
  retval.2031 = iftmp.2032;
  if (retval.2031 != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 46> :
  D.258816 = gimple_call_fn (def_stmt);

  <bb 47> :
  _35 = D.258816;
  D.258817 = get_name (_35);

  <bb 48> :
  name = D.258817;
  if (name != 0B)
    goto <bb 49>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 49> :
  _36 = strcmp (name, "malloc");
  if (_36 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 50> :
  _37 = processtable->target;
  _38 = processtable->target;
  Prenew_search_imm_use (used_stmt, _38, _37);
  goto <bb 52>; [INV]

  <bb 51> :
  _39 = processtable->target;
  _40 = processtable->target;
  _41 = processtable->last_stmt;
  Varnew_search_imm_use (used_stmt, _41, _40, _39);

  <bb 52> :
  _42 = processtable->target;
  now_tree = _42;
  _43 = processtable->target;
  _44 = processtable->target;
  new_search_imm_use (used_stmt, _44, _43);

  <bb 53> :
  _45 = processtable->target;
  _46 = processtable->target;
  _47 = processtable->last_stmt;
  set_gimple_array (used_stmt, _47, _46, _45, 0B);

  <bb 54> :
  _48 = used_stmt->target;
  _49 = _48->base.code;
  _50 = (tree_code) _49;
  D.258818 = get_tree_code_name (_50);

  <bb 55> :
  _51 = D.258818;
  _52 = strcmp (_51, "<invalid tree code>");
  retval.2033 = _52 == 0;
  if (retval.2033 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 75>; [INV]

  <bb 57> :
  goto <bb 59>; [INV]

  <bb 58> :
  colectCount = colectCount + 1;
  std::vector<gimple*>::pop_back (&new_gimple_array);

  <bb 59> :
  _53 = std::vector<gimple*>::size (&new_gimple_array);
  retval.2034 = _53 != 0;
  if (retval.2034 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  goto <bb 62>; [INV]

  <bb 61> :
  std::vector<tree_node*>::pop_back (&new_gimpletree_array);

  <bb 62> :
  _54 = std::vector<tree_node*>::size (&new_gimpletree_array);
  retval.2035 = _54 != 0;
  if (retval.2035 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 63> :
  treeGimpleArray.2037_55 = treeGimpleArray;
  _56 = &processtable->target;
  D.258819 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.2037_55, _56);

  <bb 64> :
  _57 = D.258819;
  retval.2036 = _57 != 0B;
  if (retval.2036 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 75>; [INV]

  <bb 66> :
  treeGimpleArray.2038_58 = treeGimpleArray;
  _59 = &processtable->target;
  hash_map<tree_node*, gimple_array>::put (treeGimpleArray.2038_58, _59, used_stmt);

  <bb 67> :
  Entrypoint = Entrypoint + 1;
  stderr.2039_60 = stderr;
  fprintf2 (stderr.2039_60, "=============== *this point analyzable =================\n");

  <bb 68> :
  _61 = processtable->last_stmt;
  debug2 (_61);

  <bb 69> :
  stderr.2040_62 = stderr;
  fprintf2 (stderr.2040_62, "=============== program slcing stmt count:%d=================\n", colectCount);

  <bb 70> :
  allcolectCount = allcolectCount + colectCount;
  _63 = processtable->last_stmt;
  _64 = gimple_location_safe (_63);
  warning_at2 (_64, 0, "use location");

  <bb 71> :
  stderr.2041_65 = stderr;
  fprintf2 (stderr.2041_65, "========================================================\n");

  <bb 72> :
  _66 = processtable->next;
  if (_66 == 0B)
    goto <bb 73>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 73> :
  start = {CLOBBER};
  goto <bb 77>; [INV]

  <bb 74> :
  processtable = processtable->next;
  start = {CLOBBER};
  goto <bb 76>; [INV]

  <bb 75> :
  start = {CLOBBER};

  <bb 76> :
  if (processtable != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 77> :
  FunctionStmtMappingRet (ptable, ftable, used_stmt);

  <bb 78> :
  stderr.2042_67 = stderr;
  __builtin_fwrite ("===============The second stage : build fucntion type=================\n", 1, 71, stderr.2042_67);

  <bb 79> :
  stderr.2043_68 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2043_68);

  <bb 80> :
  stderr.2044_69 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2044_69);

  <bb 81> :
  stderr.2045_70 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.2045_70);

  <bb 82> :
  stderr.2046_71 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.2046_71);

  <bb 83> :
  stderr.2047_72 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.2047_72);

  <bb 84> :
  stderr.2048_73 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.2048_73);

  <bb 85> :
  stderr.2049_74 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2049_74);

  <bb 86> :
  stderr.2050_75 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2050_75);

  <bb 87> :
  stderr.2051_76 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2051_76);

  <bb 88> :
  stderr.2052_77 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2052_77);

  <bb 89> :
  stderr.2053_78 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2053_78);

  <bb 90> :
  stderr.2054_79 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2054_79);

  <bb 91> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 92> :
  _80 = temp.tv_sec;
  _81 = (double) _80;
  _82 = temp.tv_nsec;
  _83 = (double) _82;
  _84 = _83 / 1.0e+9;
  time_used = _81 + _84;
  stderr.2055_85 = stderr;
  __builtin_fwrite ("\n=============== The third stage : Start detection  =================\n", 1, 70, stderr.2055_85);

  <bb 93> :
  dump_fucntion (node, ptable, used_stmt);

  <bb 94> :
  stderr.2056_86 = stderr;
  __builtin_fwrite ("\n=============== The third stage : detection  End=================\n", 1, 67, stderr.2056_86);

  <bb 95> :
  clock_gettime (1, &aend);
  temp = diff (astart2, aend);

  <bb 96> :
  _87 = temp.tv_sec;
  _88 = (double) _87;
  _89 = temp.tv_nsec;
  _90 = (double) _89;
  _91 = _90 / 1.0e+9;
  time_used2 = _88 + _91;
  printfBasicblock ();

  <bb 97> :
  goto <bb 99>; [INV]

  <bb 98> :
  stderr.2057_92 = stderr;
  __builtin_fwrite ("\x1b[40;41m GIMPLE STMT NO FREE STMT\x1b[0m\n", 1, 38, stderr.2057_92);

  <bb 99> :
  time (&rawtime);
  timeinfo = localtime (&rawtime);
  stderr.2058_93 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2058_93);

  <bb 100> :
  stderr.2059_94 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2059_94);

  <bb 101> :
  stderr.2060_95 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.2060_95);

  <bb 102> :
  stderr.2061_96 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.2061_96);

  <bb 103> :
  stderr.2062_97 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.2062_97);

  <bb 104> :
  stderr.2063_98 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.2063_98);

  <bb 105> :
  stderr.2064_99 = stderr;
  __builtin_fwrite ("                   \n", 1, 20, stderr.2064_99);

  <bb 106> :
  stderr.2065_100 = stderr;
  __builtin_fwrite ("    ~~~~~~~~~~~  \n", 1, 18, stderr.2065_100);

  <bb 107> :
  stderr.2066_101 = stderr;
  __builtin_fwrite (" ~~~~~~\n", 1, 8, stderr.2066_101);

  <bb 108> :
  stderr.2067_102 = stderr;
  __builtin_fwrite ("           ~~~~~~~\n", 1, 19, stderr.2067_102);

  <bb 109> :
  GIMPLE_MALLOC_COUNT.2068_103 = GIMPLE_MALLOC_COUNT;
  stderr.2069_104 = stderr;
  fprintf (stderr.2069_104, "\x1b[40;34m    gimple malloc count : %d \x1b[0m\n", GIMPLE_MALLOC_COUNT.2068_103);

  <bb 110> :
  GIMPLE_FREE_COUNT.2070_105 = GIMPLE_FREE_COUNT;
  stderr.2071_106 = stderr;
  fprintf (stderr.2071_106, "\x1b[40;34m    gimple free   count : %d \x1b[0m\n", GIMPLE_FREE_COUNT.2070_105);

  <bb 111> :
  pointtablecount.2072_107 = pointtablecount;
  stderr.2073_108 = stderr;
  fprintf (stderr.2073_108, "\x1b[40;34m    all ptable point : %d \x1b[0m\n", pointtablecount.2072_107);

  <bb 112> :
  stderr.2074_109 = stderr;
  fprintf (stderr.2074_109, "\x1b[40;34m    analyzable ptable point : %d \x1b[0m\n", Entrypoint);

  <bb 113> :
  stderr.2075_110 = stderr;
  fprintf (stderr.2075_110, "\x1b[40;34m    analyzable ptable all point stmt : %d \x1b[0m\n", allcolectCount);

  <bb 114> :
  totalsize.2076_111 = totalsize;
  _112 = (double) totalsize.2076_111;
  _113 = _112 * 9.99999999999999954748111825886258685613938723690807819366e-7;
  stderr.2077_114 = stderr;
  fprintf (stderr.2077_114, "\x1b[40;34m    used_stmt array stack totalsize of : %f mb\x1b[0m\n", _113);

  <bb 115> :
  stderr.2078_115 = stderr;
  fprintf (stderr.2078_115, "\x1b[40;34m    collect time: : %f s \x1b[0m\n", time_used3);

  <bb 116> :
  stderr.2079_116 = stderr;
  fprintf (stderr.2079_116, "\x1b[40;34m    mapping time: : %f s \x1b[0m\n", time_used);

  <bb 117> :
  stderr.2080_117 = stderr;
  fprintf (stderr.2080_117, "\x1b[40;34m    algorithm time: %f s \x1b[0m\n", time_used2);

  <bb 118> :
  gimplestmt_count.2081_118 = gimplestmt_count;
  stderr.2082_119 = stderr;
  fprintf (stderr.2082_119, "\x1b[40;34m    gimple stmt count : : %d \x1b[0m\n", gimplestmt_count.2081_118);

  <bb 119> :
  _120 = asctime (timeinfo);
  stderr.2083_121 = stderr;
  fprintf (stderr.2083_121, "\x1b[40;34m    this report analysis in %s \x1b[0m\n", _120);

  <bb 120> :
  stderr.2084_122 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2084_122);

  <bb 121> :
  stderr.2085_123 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2085_123);

  <bb 122> :
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  rawtime = {CLOBBER};
  return;

  <bb 123> :
<L79>:
  start = {CLOBBER};
  resx 2

  <bb 124> :
<L80>:
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  rawtime = {CLOBBER};
  resx 1

}



;; Function std::vector<gimple*>::pop_back (_ZNSt6vectorIP6gimpleSaIS1_EE8pop_backEv, funcdef_no=7871, decl_uid=183725, cgraph_uid=4503, symbol_order=5295)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.184035._M_impl.D.183391._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.184035._M_impl.D.183391._M_finish = _2;
  _3 = this->D.184035._M_impl.D.183391._M_finish;
  _4 = &this->D.184035._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_ZNSt16allocator_traitsISaIP6gimpleEE7destroyIS1_EEvRS2_PT_, funcdef_no=8844, decl_uid=216443, cgraph_uid=5476, symbol_order=6272)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (struct allocator_type & __a, struct gimple * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE7destroyIS2_EEvPT_, funcdef_no=9722, decl_uid=230453, cgraph_uid=6354, symbol_order=7150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (struct new_allocator * const this, struct gimple * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::put (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7872, decl_uid=190247, cgraph_uid=4504, symbol_order=5296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, gimple_array>::put (struct hash_map * const this, union tree_node * const & k, const struct gimple_array & v)
{
  bool D.258832;
  struct hash_entry * D.258831;
  unsigned int D.258830;
  bool ins;
  struct hash_entry * e;
  bool D.258828;
  void * D.216583;
  void * D.216582;

  <bb 2> :
  _1 = &this->m_table;
  D.258830 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.258830;
  D.258831 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.258831;
  D.258832 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (e);
  ins = D.258832;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216582 = &e->m_value;
  D.216583 = operator new (48, D.216582);
  MEM[(struct gimple_array *)D.216583] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.258828 = ~ins;

  <bb 6> :
<L3>:
  return D.258828;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8845, decl_uid=190402, cgraph_uid=5477, symbol_order=6273)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.258882;
  bool D.258881;
  bool D.258880;
  bool D.258879;
  bool D.258878;
  bool D.258877;
  struct value_type * D.258876;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2091;
  bool retval.2090;
  bool retval.2089;
  bool retval.2088;
  bool retval.2087;
  bool retval.2086;
  struct value_type * D.258838;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.258877 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2086 = D.258877;
  if (retval.2086 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.258878 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2087 = D.258878;
  if (retval.2087 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.258879 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.2088 = D.258879;
  if (retval.2088 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.258838 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.258880 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2089 = D.258880;
  if (retval.2089 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.258881 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2090 = D.258881;
  if (retval.2090 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.258882 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.2091 = D.258882;
  if (retval.2091 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.258838 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.258838 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.258838 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.258838 = _37 + _39;

  <bb 27> :
<L37>:
  return D.258838;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9723, decl_uid=190483, cgraph_uid=6355, symbol_order=7151)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.258913;
  unsigned int D.258912;
  bool D.258911;
  bool D.258910;
  struct mem_alloc_description & D.258909;
  struct value_type * D.258908;
  unsigned int D.258907;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.238783;
  void * D.238782;
  struct hash_entry * D.238808;
  bool iftmp.2095;
  bool retval.2094;
  bool iftmp.2093;
  bool retval.2092;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2093 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2093 = 0;

  <bb 6> :
  retval.2092 = iftmp.2093;
  if (retval.2092 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.258907 = hash_table_higher_prime_index (_5);
  nindex = D.258907;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.258908 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.258908;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.258910 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.258910;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.258911 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.258911;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2095 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2095 = 0;

  <bb 15> :
  retval.2094 = iftmp.2095;
  if (retval.2094 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.258912 = hash_map<tree_node*, gimple_array>::hash_entry::hash (x);
  _16 = D.258912;
  D.258913 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.258913;
  D.238808 = std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (x);
  D.238782 = q;
  D.238783 = operator new (56, D.238782);
  MEM[(struct value_type *)D.238783] = *D.238808;

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10303, decl_uid=190378, cgraph_uid=6935, symbol_order=7735)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.258914;

  <bb 2> :
  D.258914 = this->m_size;

  <bb 3> :
<L0>:
  return D.258914;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10304, decl_uid=190380, cgraph_uid=6936, symbol_order=7736)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.258916;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.258916 = _1 - _2;

  <bb 3> :
<L0>:
  return D.258916;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10305, decl_uid=190480, cgraph_uid=6937, symbol_order=7737)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2096;
  bool D.258918;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2096 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2096 = 0;

  <bb 6> :
  D.258918 = iftmp.2096;

  <bb 7> :
<L4>:
  return D.258918;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9252, decl_uid=190470, cgraph_uid=5884, symbol_order=6680)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.258940;
  struct value_type * D.258939;
  struct mem_alloc_description & D.258938;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.258936;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.258939 = xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (n);
  nentries = D.258939;
  goto <bb 6>; [INV]

  <bb 5> :
  D.258940 = ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (n);
  nentries = D.258940;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.258936 = nentries;

  <bb 9> :
<L14>:
  return D.258936;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9979, decl_uid=218177, cgraph_uid=6611, symbol_order=7411)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.258943;
  struct hash_entry * D.258941;

  <bb 2> :
  D.258943 = xcalloc (count, 56);
  D.258941 = D.258943;

  <bb 3> :
<L0>:
  return D.258941;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9980, decl_uid=234144, cgraph_uid=6612, symbol_order=7412)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.258950;
  struct hash_entry * D.258949;
  struct hash_entry * D.258947;
  bool retval.2097;

  <bb 2> :
  retval.2097 = need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ();
  if (retval.2097 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.258949 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.258947 = D.258949;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.258950 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.258947 = D.258950;

  <bb 5> :
<L2>:
  return D.258947;

}



;; Function finalize<hash_map<tree_node*, gimple_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10518, decl_uid=241586, cgraph_uid=7150, symbol_order=7950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, gimple_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10517, decl_uid=241585, cgraph_uid=7149, symbol_order=7949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ()
{
  bool D.258951;

  <bb 2> :
  D.258951 = 0;

  <bb 3> :
<L0>:
  return D.258951;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10307, decl_uid=190306, cgraph_uid=6939, symbol_order=7739)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, gimple_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.258955;
  hashval_t D.258953;

  <bb 2> :
  _1 = &e->m_key;
  D.258955 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_1);
  D.258953 = D.258955;

  <bb 3> :
<L0>:
  return D.258953;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10306, decl_uid=190473, cgraph_uid=6938, symbol_order=7738)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.258968;
  bool D.258967;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2099;
  struct value_type * D.258959;
  bool retval.2098;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.258967 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2098 = D.258967;
  if (retval.2098 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258959 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.258968 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2099 = D.258968;
  if (retval.2099 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.258959 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.258959;

}



;; Function std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10308, decl_uid=238780, cgraph_uid=6940, symbol_order=7740)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.258969;

  <bb 2> :
  D.258969 = __t;

  <bb 3> :
<L0>:
  return D.258969;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8944, decl_uid=218179, cgraph_uid=5576, symbol_order=6372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9724, decl_uid=190491, cgraph_uid=6356, symbol_order=7152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10309, decl_uid=190318, cgraph_uid=6941, symbol_order=7741)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10743, decl_uid=243724, cgraph_uid=7375, symbol_order=8175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function detect (_Z6detectP15plugin_argumenti, funcdef_no=6858, decl_uid=204022, cgraph_uid=3565, symbol_order=4347)

Removing basic block 34
Removing basic block 39
Removing basic block 44
Removing basic block 49
Removing basic block 73
Merging blocks 74 and 76
Removing basic block 107
Removing basic block 110
Removing basic block 113
Removing basic block 116
Removing basic block 131
Merging blocks 161 and 163
Removing basic block 166
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 116, latch 115
;;  depth 1, outer 0
;;  nodes: 116 115 114 112 113 80 86 85 84 83 82 81 79 78 77 76 111 110 89 109 108 98 107 100 102 104 105 106 103 101 99 97 90 96 95 94 91 93 92 88 87
;;
;; Loop 4
;;  header 110, latch 109
;;  depth 2, outer 3
;;  nodes: 110 109 108 98 107 100 102 104 105 106 103 101 99 97 90 96 95 94 91 93 92
;;
;; Loop 6
;;  header 108, latch 107
;;  depth 3, outer 4
;;  nodes: 108 107 100 102 104 105 106 103 101 99
;;
;; Loop 5
;;  header 94, latch 93
;;  depth 3, outer 4
;;  nodes: 94 93 92 95
;;
;; Loop 2
;;  header 60, latch 59
;;  depth 1, outer 0
;;  nodes: 60 59 58 57 63 62 61
;;
;; Loop 1
;;  header 48, latch 47
;;  depth 1, outer 0
;;  nodes: 48 47 46 42 45 44 43 38 41 40 39 34 37 36 35 30 33 32 31
;; 2 succs { 178 3 }
;; 3 succs { 157 4 }
;; 4 succs { 178 5 }
;; 5 succs { 158 6 }
;; 6 succs { 178 7 }
;; 7 succs { 159 8 }
;; 8 succs { 178 9 }
;; 9 succs { 160 10 }
;; 10 succs { 178 11 }
;; 11 succs { 161 12 }
;; 12 succs { 178 13 }
;; 13 succs { 162 14 }
;; 14 succs { 178 15 }
;; 15 succs { 163 16 }
;; 16 succs { 178 17 }
;; 17 succs { 164 18 }
;; 18 succs { 178 19 }
;; 19 succs { 165 20 }
;; 20 succs { 178 21 }
;; 21 succs { 166 22 }
;; 22 succs { 178 23 }
;; 23 succs { 167 24 }
;; 24 succs { 178 25 }
;; 25 succs { 168 26 }
;; 26 succs { 178 27 }
;; 27 succs { 169 28 }
;; 28 succs { 178 29 }
;; 29 succs { 48 }
;; 30 succs { 31 34 }
;; 31 succs { 32 33 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 35 38 }
;; 35 succs { 36 37 }
;; 36 succs { 38 }
;; 37 succs { 38 }
;; 38 succs { 39 42 }
;; 39 succs { 40 41 }
;; 40 succs { 42 }
;; 41 succs { 42 }
;; 42 succs { 43 46 }
;; 43 succs { 44 45 }
;; 44 succs { 46 }
;; 45 succs { 46 }
;; 46 succs { 178 47 }
;; 47 succs { 48 }
;; 48 succs { 30 49 }
;; 49 succs { 50 71 }
;; 50 succs { 173 51 }
;; 51 succs { 172 52 }
;; 52 succs { 172 53 }
;; 53 succs { 54 56 }
;; 54 succs { 172 55 }
;; 55 succs { 67 }
;; 56 succs { 60 }
;; 57 succs { 170 58 }
;; 58 succs { 170 59 }
;; 59 succs { 170 60 }
;; 60 succs { 170 61 }
;; 61 succs { 170 62 }
;; 62 succs { 170 63 }
;; 63 succs { 57 64 }
;; 64 succs { 170 65 }
;; 65 succs { 172 66 }
;; 66 succs { 67 }
;; 67 succs { 70 68 }
;; 68 succs { 69 }
;; 69 succs { 71 }
;; 70 succs { 149 }
;; 71 succs { 178 72 }
;; 72 succs { 178 73 }
;; 73 succs { 178 74 }
;; 74 succs { 178 75 }
;; 75 succs { 116 }
;; 76 succs { 177 77 }
;; 77 succs { 177 78 }
;; 78 succs { 177 79 }
;; 79 succs { 80 81 }
;; 80 succs { 113 }
;; 81 succs { 177 82 }
;; 82 succs { 177 83 }
;; 83 succs { 84 87 }
;; 84 succs { 177 85 }
;; 85 succs { 177 86 }
;; 86 succs { 113 }
;; 87 succs { 177 88 }
;; 88 succs { 176 89 }
;; 89 succs { 110 }
;; 90 succs { 91 97 }
;; 91 succs { 94 }
;; 92 succs { 174 93 }
;; 93 succs { 174 94 }
;; 94 succs { 174 95 }
;; 95 succs { 92 96 }
;; 96 succs { 97 }
;; 97 succs { 176 98 }
;; 98 succs { 108 }
;; 99 succs { 100 101 }
;; 100 succs { 175 107 }
;; 101 succs { 102 103 }
;; 102 succs { 175 107 }
;; 103 succs { 104 105 }
;; 104 succs { 175 107 }
;; 105 succs { 106 107 }
;; 106 succs { 175 107 }
;; 107 succs { 108 }
;; 108 succs { 99 109 }
;; 109 succs { 110 }
;; 110 succs { 90 111 }
;; 111 succs { 176 112 }
;; 112 succs { 114 }
;; 113 succs { 114 }
;; 114 succs { 178 115 }
;; 115 succs { 116 }
;; 116 succs { 76 117 }
;; 117 succs { 178 118 }
;; 118 succs { 178 119 }
;; 119 succs { 120 121 }
;; 120 succs { 178 121 }
;; 121 succs { 122 123 }
;; 122 succs { 123 }
;; 123 succs { 124 125 }
;; 124 succs { 125 }
;; 125 succs { 126 127 }
;; 126 succs { 127 }
;; 127 succs { 128 129 }
;; 128 succs { 129 }
;; 129 succs { 130 131 }
;; 130 succs { 131 }
;; 131 succs { 132 133 }
;; 132 succs { 133 }
;; 133 succs { 134 135 }
;; 134 succs { 135 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 138 139 }
;; 138 succs { 139 }
;; 139 succs { 140 141 }
;; 140 succs { 141 }
;; 141 succs { 142 143 }
;; 142 succs { 143 }
;; 143 succs { 144 145 }
;; 144 succs { 145 }
;; 145 succs { 146 147 }
;; 146 succs { 147 }
;; 147 succs { 178 148 }
;; 148 succs { 149 }
;; 149 succs { 151 150 }
;; 150 succs { 152 }
;; 151 succs { 152 }
;; 152 succs { 155 153 }
;; 153 succs { 154 }
;; 154 succs { 156 }
;; 155 succs { 156 }
;; 156 succs { 1 }
;; 157 succs { 178 }
;; 158 succs { 178 }
;; 159 succs { 178 }
;; 160 succs { 178 }
;; 161 succs { 178 }
;; 162 succs { 178 }
;; 163 succs { 178 }
;; 164 succs { 178 }
;; 165 succs { 178 }
;; 166 succs { 178 }
;; 167 succs { 178 }
;; 168 succs { 178 }
;; 169 succs { 178 }
;; 170 succs { 171 }
;; 171 succs { 172 }
;; 172 succs { 173 }
;; 173 succs { 178 }
;; 174 succs { 176 }
;; 175 succs { 176 }
;; 176 succs { 177 }
;; 177 succs { 178 }
;; 178 succs { 179 }
;; 179 succs { 180 }
;; 180 succs { }
void detect (struct plugin_argument * argv, int argc)
{
  int finally_tmp.2161;
  int finally_tmp.2160;
  struct cgraph_node * D.259142;
  bool D.259135;
  struct function * D.259134;
  bool D.259133;
  const char * D.259132;
  struct cgraph_node * D.259131;
  int finally_tmp.2159;
  bool D.259119;
  struct __istream_type & D.259118;
  struct basic_istream & D.259117;
  bool D.259116;
  void * D.259114;
  void * D.259112;
  void * D.259110;
  void * D.259108;
  void * D.259106;
  void * D.259104;
  void * D.259102;
  void * D.259100;
  void * D.259098;
  void * D.259096;
  void * D.259094;
  void * D.259092;
  void * D.259090;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct edge_iterator ei;
  struct edge_def * e;
  struct Graph DFS;
  int score;
  struct string name;
  struct ifstream ifs;
  int i;
  struct timevar_time_def now;
  double time_used;
  struct timespec temp;
  struct timespec end;
  struct timespec start;
  double s;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  struct function * fn;
  struct function * ofun;
  union tree_node * attr;
  union tree_node * ptr;
  struct breakpoint getbp;
  unsigned int i;
  const int N;
  struct var_points_to vpt;
  struct cgraph_node * node;
  struct timeval stime;
  struct timeval utime;
  struct rusage ru;
  struct hash_map * function_relate_collect.2158;
  struct hash_map * function_graph_collect.2157;
  struct hash_map * function_free_collect.2156;
  struct hash_map * function_path_collect.2155;
  struct hash_map * function_pthread_exit_collect.2154;
  struct hash_map * function_pthread_detched_collect.2153;
  struct hash_map * pthread_attr_setdetachstates.2152;
  struct hash_map * function_assign_collect.2151;
  struct hash_map * function_return_collect.2150;
  struct hash_map * fDFS.2149;
  struct hash_map * syminfo.2148;
  struct hash_map * treeGimpleArray.2147;
  struct hash_map * tvpt.2146;
  bool retval.2136;
  bool retval.2134;
  bool retval.2132;
  bool retval.2130;
  bool retval.2128;
  bool retval.2126;
  bool retval.2118;
  struct __istream_type & D.259006;
  bool retval.2112;
  bool retval.2108;
  bool retval.2104;
  bool retval.2103;
  bool retval.2102;
  bool retval.2101;
  void * D.205224;
  void * D.205223;
  void * D.204852;
  void * D.204851;
  void * D.204850;
  void * D.204849;
  void * D.204848;
  void * D.204847;
  void * D.204846;
  void * D.204845;
  void * D.204844;
  void * D.204843;
  void * D.204842;

  <bb 2> :
  var_points_to::var_points_to (&vpt);
  N = 100;
  breakpoint::breakpoint (&getbp);
  ipa = 1;
  D.259090 = operator new (48);

  <bb 3> :
  D.204842 = D.259090;
  hash_map<tree_node*, var_points_to>::hash_map (D.204842, 13, 0, 1, 0);

  <bb 4> :
  tvpt = D.204842;
  D.259092 = operator new (48);

  <bb 5> :
  D.204843 = D.259092;
  hash_map<tree_node*, gimple_array>::hash_map (D.204843, 13, 0, 1, 0);

  <bb 6> :
  treeGimpleArray = D.204843;
  D.259094 = operator new (48);

  <bb 7> :
  D.204844 = D.259094;
  hash_map<basic_block_def*, symbolicinfo>::hash_map (D.204844, 13, 0, 1, 0);

  <bb 8> :
  syminfo = D.204844;
  D.259096 = operator new (48);

  <bb 9> :
  D.204845 = D.259096;
  hash_map<cgraph_node*, Graph>::hash_map (D.204845, 13, 0, 1, 0);

  <bb 10> :
  fDFS = D.204845;
  D.259098 = operator new (48);

  <bb 11> :
  D.204846 = D.259098;
  hash_map<tree_node*, function_return_array>::hash_map (D.204846, 13, 0, 1, 0);

  <bb 12> :
  function_return_collect = D.204846;
  D.259100 = operator new (48);

  <bb 13> :
  D.204847 = D.259100;
  hash_map<tree_node*, function_assign_array>::hash_map (D.204847, 13, 0, 1, 0);

  <bb 14> :
  function_assign_collect = D.204847;
  D.259102 = operator new (48);

  <bb 15> :
  D.204848 = D.259102;
  hash_map<tree_node*, pthread_attr_array>::hash_map (D.204848, 13, 0, 1, 0);

  <bb 16> :
  pthread_attr_setdetachstates = D.204848;
  D.259104 = operator new (48);

  <bb 17> :
  D.204849 = D.259104;
  hash_map<tree_node*, function_pthread_detched_array>::hash_map (D.204849, 13, 0, 1, 0);

  <bb 18> :
  function_pthread_detched_collect = D.204849;
  D.259106 = operator new (48);

  <bb 19> :
  D.204850 = D.259106;
  hash_map<tree_node*, function_pthread_exit_array>::hash_map (D.204850, 13, 0, 1, 0);

  <bb 20> :
  function_pthread_exit_collect = D.204850;
  D.259108 = operator new (48);

  <bb 21> :
  D.204851 = D.259108;
  hash_map<tree_node*, function_path_array>::hash_map (D.204851, 13, 0, 1, 0);

  <bb 22> :
  function_path_collect = D.204851;
  D.259110 = operator new (48);

  <bb 23> :
  D.204852 = D.259110;
  hash_map<tree_node*, function_free_array>::hash_map (D.204852, 13, 0, 1, 0);

  <bb 24> :
  function_free_collect = D.204852;
  D.259112 = operator new (48);

  <bb 25> :
  D.205223 = D.259112;
  hash_map<tree_node*, function_graph_array>::hash_map (D.205223, 13, 0, 1, 0);

  <bb 26> :
  function_graph_collect = D.205223;
  D.259114 = operator new (48);

  <bb 27> :
  D.205224 = D.259114;
  hash_map<tree_node*, function_relate_array>::hash_map (D.205224, 13, 0, 1, 0);

  <bb 28> :
  function_relate_collect = D.205224;
  stderr.2100_1 = stderr;
  __builtin_fwrite ("--------plugin argument-----------\n", 1, 35, stderr.2100_1);

  <bb 29> :
  i = 0;
  goto <bb 48>; [INV]

  <bb 30> :
  _2 = (long unsigned int) i;
  _3 = _2 * 16;
  _4 = argv + _3;
  _5 = _4->key;
  _6 = strcmp (_5, "debugoutput");
  if (_6 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 31> :
  _7 = (long unsigned int) i;
  _8 = _7 * 16;
  _9 = argv + _8;
  _10 = _9->value;
  _11 = strtol (_10, 0B, 10);
  retval.2101 = _11 != 0;
  if (retval.2101 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  debugoutput = 1;
  goto <bb 34>; [INV]

  <bb 33> :
  debugoutput = 0;

  <bb 34> :
  _12 = (long unsigned int) i;
  _13 = _12 * 16;
  _14 = argv + _13;
  _15 = _14->key;
  _16 = strcmp (_15, "debugmod");
  if (_16 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 35> :
  _17 = (long unsigned int) i;
  _18 = _17 * 16;
  _19 = argv + _18;
  _20 = _19->value;
  _21 = strtol (_20, 0B, 10);
  retval.2102 = _21 != 0;
  if (retval.2102 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  debugmod = 1;
  goto <bb 38>; [INV]

  <bb 37> :
  debugmod = 0;

  <bb 38> :
  _22 = (long unsigned int) i;
  _23 = _22 * 16;
  _24 = argv + _23;
  _25 = _24->key;
  _26 = strcmp (_25, "vscode_extensionmod");
  if (_26 == 0)
    goto <bb 39>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 39> :
  _27 = (long unsigned int) i;
  _28 = _27 * 16;
  _29 = argv + _28;
  _30 = _29->value;
  _31 = strtol (_30, 0B, 10);
  retval.2103 = _31 != 0;
  if (retval.2103 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  vscode_extensionmod = 1;
  goto <bb 42>; [INV]

  <bb 41> :
  vscode_extensionmod = 0;

  <bb 42> :
  _32 = (long unsigned int) i;
  _33 = _32 * 16;
  _34 = argv + _33;
  _35 = _34->key;
  _36 = strcmp (_35, "contextsentive");
  if (_36 == 0)
    goto <bb 43>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 43> :
  _37 = (long unsigned int) i;
  _38 = _37 * 16;
  _39 = argv + _38;
  _40 = _39->value;
  _41 = strtol (_40, 0B, 10);
  retval.2104 = _41 != 0;
  if (retval.2104 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  contextsentive = 1;
  goto <bb 46>; [INV]

  <bb 45> :
  contextsentive = 0;

  <bb 46> :
  _42 = (long unsigned int) i;
  _43 = _42 * 16;
  _44 = argv + _43;
  _45 = _44->value;
  _46 = (long unsigned int) i;
  _47 = _46 * 16;
  _48 = argv + _47;
  _49 = _48->key;
  stderr.2105_50 = stderr;
  fprintf (stderr.2105_50, "%s %s\n", _49, _45);

  <bb 47> :
  i = i + 1;

  <bb 48> :
  if (i < argc)
    goto <bb 30>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 49> :
  vscode_extensionmod.2106_51 = vscode_extensionmod;
  if (vscode_extensionmod.2106_51 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 50> :
  std::basic_ifstream<char>::basic_ifstream (&ifs, "/root/.vscode-server/data/User/globalStorage/x213212.helloworld-sample/breakpoint.txt", 8);

  <bb 51> :
  stderr.2107_52 = stderr;
  __builtin_fwrite ("==============breakpoint=========\n", 1, 34, stderr.2107_52);

  <bb 52> :
  D.259116 = std::basic_ifstream<char>::is_open (&ifs);

  <bb 53> :
  _53 = D.259116;
  retval.2108 = ~_53;
  if (retval.2108 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 54> :
  stderr.2109_54 = stderr;
  __builtin_fwrite ("vscode_extensionmod is open ,no set breakpoint.\n", 1, 48, stderr.2109_54);

  <bb 55> :
  // predicted unlikely by early return (on trees) predictor.
  finally_tmp.2159 = 0;
  goto <bb 67>; [INV]

  <bb 56> :
  std::__cxx11::basic_string<char>::basic_string (&name);
  goto <bb 60>; [INV]

  <bb 57> :
  std::__cxx11::basic_string<char>::operator= (&getbp.name, &name);

  <bb 58> :
  score.2110_55 = score;
  getbp.line = score.2110_55;
  _56 = getbp.line;
  _57 = std::__cxx11::basic_string<char>::c_str (&getbp.name);
  stderr.2111_58 = stderr;
  fprintf (stderr.2111_58, "%s %d\n", _57, _56);

  <bb 59> :
  std::vector<breakpoint>::push_back (&vbreakpoint, &getbp);

  <bb 60> :
  D.259117 = std::operator>><char, std::char_traits<char>, std::allocator<char> > (&ifs.D.155258, &name);

  <bb 61> :
  _59 = D.259117;
  D.259118 = std::basic_istream<char>::operator>> (_59, &score);

  <bb 62> :
  D.259006 = D.259118;
  _60 = D.259006->_vptr.basic_istream;
  _61 = _60 + 18446744073709551592;
  _62 = MEM[(long int *)_61];
  _63 = (sizetype) _62;
  _64 = D.259006 + _63;
  D.259119 = std::basic_ios<char>::operator bool (_64);

  <bb 63> :
  retval.2112 = D.259119;
  if (retval.2112 != 0)
    goto <bb 57>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 64> :
  std::basic_ifstream<char>::close (&ifs);

  <bb 65> :
  std::__cxx11::basic_string<char>::~basic_string (&name);
  name = {CLOBBER};
  score = {CLOBBER};
  std::basic_ifstream<char>::close (&ifs);

  <bb 66> :
  finally_tmp.2159 = 1;

  <bb 67> :
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  if (finally_tmp.2159 == 1)
    goto <bb 68>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 68> :
<L34>:

  <bb 69> :
  ifs = {CLOBBER};
  goto <bb 71>; [INV]

  <bb 70> :
  ifs = {CLOBBER};
  finally_tmp.2160 = 0;
  goto <bb 149>; [INV]

  <bb 71> :
  _65 = time (0B);
  _66 = (unsigned int) _65;
  _67 = getpid ();
  _68 = (unsigned int) _67;
  _69 = _66 + _68;
  srand (_69);
  stderr.2113_70 = stderr;
  __builtin_fwrite ("=======ipa_pta=========\n", 1, 24, stderr.2113_70);

  <bb 72> :
  init_table ();

  <bb 73> :
  s = 0.0;
  clock_gettime (1, &start);
  getrusage (0, &ru);
  utime = ru.ru_utime;
  stime = ru.ru_stime;
  clock_gettime (1, &astart2);
  stderr.2114_71 = stderr;
  __builtin_fwrite ("=============== The first stage : Point of interest stmt collect =================\n", 1, 83, stderr.2114_71);

  <bb 74> :
  symtab.2115_72 = symtab;
  D.259131 = symbol_table::first_defined_function (symtab.2115_72);

  <bb 75> :
  _73 = D.259131;
  node = _73;
  goto <bb 116>; [INV]

  <bb 76> :
  node.2116_74 = node;
  _75 = node.2116_74->D.97512.decl;
  D.259132 = get_name (_75);

  <bb 77> :
  _76 = D.259132;
  stderr.2117_77 = stderr;
  fprintf (stderr.2117_77, "=======node_fun:%s=========\n", _76);

  <bb 78> :
  node.2119_78 = node;
  _79 = node.2119_78->D.97512.decl;
  D.259133 = gimple_has_body_p (_79);

  <bb 79> :
  _80 = D.259133;
  retval.2118 = ~_80;
  if (retval.2118 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 80> :
  // predicted unlikely by continue predictor.
  goto <bb 113>; [INV]

  <bb 81> :
  node.2120_81 = node;
  D.259134 = cgraph_node::get_fun (node.2120_81);

  <bb 82> :
  _82 = D.259134;
  push_cfun (_82);

  <bb 83> :
  cfun.2121_83 = cfun;
  if (cfun.2121_83 == 0B)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  pop_cfun ();

  <bb 85> :
  free_dominance_info (1);

  <bb 86> :
  // predicted unlikely by continue predictor.
  goto <bb 113>; [INV]

  <bb 87> :
  calculate_dominance_info (1);

  <bb 88> :
  Graph::Graph (&DFS);
  cfun.2122_84 = cfun;
  _85 = cfun.2122_84->cfg;
  _86 = _85->x_last_basic_block;
  Graph::init_Graph (&DFS, _86);

  <bb 89> :
  cfun.2123_87 = cfun;
  _88 = cfun.2123_87->cfg;
  _89 = _88->x_entry_block_ptr;
  bb = _89->next_bb;
  goto <bb 110>; [INV]

  <bb 90> :
  cfun.2124_90 = cfun;
  _91 = cfun.2124_90->cfg;
  _92 = _91->x_exit_block_ptr;
  _93 = _92->prev_bb;
  if (bb != _93)
    goto <bb 91>; [INV]
  else
    goto <bb 97>; [INV]

  <bb 91> :
  _94 = &bb->succs;
  ei = ei_start_1 (_94);
  goto <bb 94>; [INV]

  <bb 92> :
  e.2125_95 = e;
  _96 = e.2125_95->dest;
  _97 = _96->index;
  _98 = bb->index;
  Graph::addEdge (&DFS, _98, _97);

  <bb 93> :
  ei_next (&ei);

  <bb 94> :
  D.259135 = ei_cond (ei, &e);

  <bb 95> :
  retval.2126 = D.259135;
  if (retval.2126 != 0)
    goto <bb 92>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 96> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 97> :
  fDFS.2127_99 = fDFS;
  hash_map<cgraph_node*, Graph>::put (fDFS.2127_99, &node, &DFS);

  <bb 98> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 108>; [INV]

  <bb 99> :
  gc = gsi_stmt (gsi);
  retval.2128 = is_gimple_call (gc);
  if (retval.2128 != 0)
    goto <bb 100>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 100> :
  node.2129_100 = node;
  collect_function_call (gc, node.2129_100, bb);
  goto <bb 107>; [INV]

  <bb 101> :
  retval.2130 = is_gimple_assign (gc);
  if (retval.2130 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 102> :
  node.2131_101 = node;
  collect_function_call (gc, node.2131_101, bb);
  goto <bb 107>; [INV]

  <bb 103> :
  _102 = gimple_code (gc);
  retval.2132 = _102 == 10;
  if (retval.2132 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 104> :
  node.2133_103 = node;
  collect_function_return (gc, node.2133_103, bb);
  goto <bb 107>; [INV]

  <bb 105> :
  _104 = gimple_code (gc);
  retval.2134 = _104 == 39;
  if (retval.2134 != 0)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  node.2135_105 = node;
  collect_function_continue (gc, node.2135_105, bb);

  <bb 107> :
  gsi_next (&gsi);

  <bb 108> :
  _106 = gsi_end_p (gsi);
  retval.2136 = ~_106;
  if (retval.2136 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 109> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 110> :
  cfun.2137_107 = cfun;
  _108 = cfun.2137_107->cfg;
  _109 = _108->x_exit_block_ptr;
  if (bb != _109)
    goto <bb 90>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 111> :
  pop_cfun ();

  <bb 112> :
  Graph::~Graph (&DFS);
  DFS = {CLOBBER};
  goto <bb 114>; [INV]

  <bb 113> :
  DFS = {CLOBBER};

  <bb 114> :
  symtab.2138_110 = symtab;
  node.2139_111 = node;
  D.259142 = symbol_table::next_defined_function (symtab.2138_110, node.2139_111);

  <bb 115> :
  _112 = D.259142;
  node = _112;

  <bb 116> :
  node.2140_113 = node;
  if (node.2140_113 != 0B)
    goto <bb 76>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 117> :
  stderr.2141_114 = stderr;
  __builtin_fwrite ("=============== The first stage :  record fucntion =================\n", 1, 69, stderr.2141_114);

  <bb 118> :
  node.2142_115 = node;
  record_fucntion (node.2142_115);

  <bb 119> :
  ipa.2143_116 = ipa;
  if (ipa.2143_116 != 0)
    goto <bb 120>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 120> :
  ftable.2144_117 = ftable;
  ptable.2145_118 = ptable;
  PointerConstraint (ptable.2145_118, ftable.2144_117);

  <bb 121> :
  tvpt.2146 = tvpt;
  if (tvpt.2146 != 0B)
    goto <bb 122>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 122> :
  hash_map<tree_node*, var_points_to>::~hash_map (tvpt.2146);
  operator delete (tvpt.2146, 48);

  <bb 123> :
  treeGimpleArray.2147 = treeGimpleArray;
  if (treeGimpleArray.2147 != 0B)
    goto <bb 124>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 124> :
  hash_map<tree_node*, gimple_array>::~hash_map (treeGimpleArray.2147);
  operator delete (treeGimpleArray.2147, 48);

  <bb 125> :
  syminfo.2148 = syminfo;
  if (syminfo.2148 != 0B)
    goto <bb 126>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 126> :
  hash_map<basic_block_def*, symbolicinfo>::~hash_map (syminfo.2148);
  operator delete (syminfo.2148, 48);

  <bb 127> :
  fDFS.2149 = fDFS;
  if (fDFS.2149 != 0B)
    goto <bb 128>; [INV]
  else
    goto <bb 129>; [INV]

  <bb 128> :
  hash_map<cgraph_node*, Graph>::~hash_map (fDFS.2149);
  operator delete (fDFS.2149, 48);

  <bb 129> :
  function_return_collect.2150 = function_return_collect;
  if (function_return_collect.2150 != 0B)
    goto <bb 130>; [INV]
  else
    goto <bb 131>; [INV]

  <bb 130> :
  hash_map<tree_node*, function_return_array>::~hash_map (function_return_collect.2150);
  operator delete (function_return_collect.2150, 48);

  <bb 131> :
  function_assign_collect.2151 = function_assign_collect;
  if (function_assign_collect.2151 != 0B)
    goto <bb 132>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 132> :
  hash_map<tree_node*, function_assign_array>::~hash_map (function_assign_collect.2151);
  operator delete (function_assign_collect.2151, 48);

  <bb 133> :
  pthread_attr_setdetachstates.2152 = pthread_attr_setdetachstates;
  if (pthread_attr_setdetachstates.2152 != 0B)
    goto <bb 134>; [INV]
  else
    goto <bb 135>; [INV]

  <bb 134> :
  hash_map<tree_node*, pthread_attr_array>::~hash_map (pthread_attr_setdetachstates.2152);
  operator delete (pthread_attr_setdetachstates.2152, 48);

  <bb 135> :
  function_pthread_detched_collect.2153 = function_pthread_detched_collect;
  if (function_pthread_detched_collect.2153 != 0B)
    goto <bb 136>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 136> :
  hash_map<tree_node*, function_pthread_detched_array>::~hash_map (function_pthread_detched_collect.2153);
  operator delete (function_pthread_detched_collect.2153, 48);

  <bb 137> :
  function_pthread_exit_collect.2154 = function_pthread_exit_collect;
  if (function_pthread_exit_collect.2154 != 0B)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  hash_map<tree_node*, function_pthread_exit_array>::~hash_map (function_pthread_exit_collect.2154);
  operator delete (function_pthread_exit_collect.2154, 48);

  <bb 139> :
  function_path_collect.2155 = function_path_collect;
  if (function_path_collect.2155 != 0B)
    goto <bb 140>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 140> :
  hash_map<tree_node*, function_path_array>::~hash_map (function_path_collect.2155);
  operator delete (function_path_collect.2155, 48);

  <bb 141> :
  function_free_collect.2156 = function_free_collect;
  if (function_free_collect.2156 != 0B)
    goto <bb 142>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 142> :
  hash_map<tree_node*, function_free_array>::~hash_map (function_free_collect.2156);
  operator delete (function_free_collect.2156, 48);

  <bb 143> :
  function_graph_collect.2157 = function_graph_collect;
  if (function_graph_collect.2157 != 0B)
    goto <bb 144>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 144> :
  hash_map<tree_node*, function_graph_array>::~hash_map (function_graph_collect.2157);
  operator delete (function_graph_collect.2157, 48);

  <bb 145> :
  function_relate_collect.2158 = function_relate_collect;
  if (function_relate_collect.2158 != 0B)
    goto <bb 146>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 146> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_relate_collect.2158);
  operator delete (function_relate_collect.2158, 48);

  <bb 147> :
  clock_gettime (1, &end);
  temp = diff (start, end);

  <bb 148> :
  _119 = temp.tv_sec;
  _120 = (double) _119;
  _121 = temp.tv_nsec;
  _122 = (double) _121;
  _123 = _122 / 1.0e+9;
  time_used = _120 + _123;
  finally_tmp.2160 = 1;

  <bb 149> :
  breakpoint::~breakpoint (&getbp);
  if (finally_tmp.2160 == 1)
    goto <bb 150>; [INV]
  else
    goto <bb 151>; [INV]

  <bb 150> :
<L118>:
  finally_tmp.2161 = 1;
  goto <bb 152>; [INV]

  <bb 151> :
<L119>:
  finally_tmp.2161 = 0;

  <bb 152> :
  var_points_to::~var_points_to (&vpt);
  if (finally_tmp.2161 == 1)
    goto <bb 153>; [INV]
  else
    goto <bb 155>; [INV]

  <bb 153> :
<L122>:

  <bb 154> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  goto <bb 156>; [INV]

  <bb 155> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};

  <bb 156> :
<L127>:
  return;

  <bb 157> :
<L128>:
  operator delete (D.204842, 48);
  resx 4

  <bb 158> :
<L129>:
  operator delete (D.204843, 48);
  resx 6

  <bb 159> :
<L130>:
  operator delete (D.204844, 48);
  resx 8

  <bb 160> :
<L131>:
  operator delete (D.204845, 48);
  resx 10

  <bb 161> :
<L132>:
  operator delete (D.204846, 48);
  resx 12

  <bb 162> :
<L133>:
  operator delete (D.204847, 48);
  resx 14

  <bb 163> :
<L134>:
  operator delete (D.204848, 48);
  resx 16

  <bb 164> :
<L135>:
  operator delete (D.204849, 48);
  resx 18

  <bb 165> :
<L136>:
  operator delete (D.204850, 48);
  resx 20

  <bb 166> :
<L137>:
  operator delete (D.204851, 48);
  resx 22

  <bb 167> :
<L138>:
  operator delete (D.204852, 48);
  resx 24

  <bb 168> :
<L139>:
  operator delete (D.205223, 48);
  resx 26

  <bb 169> :
<L140>:
  operator delete (D.205224, 48);
  resx 28

  <bb 170> :
<L141>:
  std::__cxx11::basic_string<char>::~basic_string (&name);
  resx 33

  <bb 171> :
<L142>:
  name = {CLOBBER};
  score = {CLOBBER};
  resx 32

  <bb 172> :
<L143>:
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  resx 31

  <bb 173> :
<L144>:
  ifs = {CLOBBER};
  resx 30

  <bb 174> :
<L145>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 40

  <bb 175> :
<L146>:
  gsi = {CLOBBER};
  resx 42

  <bb 176> :
<L147>:
  Graph::~Graph (&DFS);
  resx 39

  <bb 177> :
<L148>:
  DFS = {CLOBBER};
  resx 38

  <bb 178> :
<L149>:
  breakpoint::~breakpoint (&getbp);
  resx 3

  <bb 179> :
<L150>:
  var_points_to::~var_points_to (&vpt);
  resx 2

  <bb 180> :
<L151>:
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  resx 1

}



;; Function var_points_to::var_points_to (_ZN13var_points_toC2Ev, funcdef_no=6870, decl_uid=204099, cgraph_uid=3501, symbol_order=4283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_1);
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EEC2Ev, funcdef_no=6868, decl_uid=172462, cgraph_uid=3498, symbol_order=4280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172470;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EEC2Ev, funcdef_no=6866, decl_uid=171920, cgraph_uid=3495, symbol_order=4277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implC2Ev, funcdef_no=7874, decl_uid=171812, cgraph_uid=4506, symbol_order=5298)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (this);
  _1 = &this->D.171815;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEEC2Ev, funcdef_no=8848, decl_uid=171590, cgraph_uid=5480, symbol_order=6276)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEEC2Ev, funcdef_no=9726, decl_uid=171519, cgraph_uid=6358, symbol_order=7154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE17_Vector_impl_dataC2Ev, funcdef_no=8851, decl_uid=171762, cgraph_uid=5483, symbol_order=6279)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2Ev, funcdef_no=6877, decl_uid=204291, cgraph_uid=3508, symbol_order=4290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::basic_string (_1);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7889, decl_uid=204834, cgraph_uid=4521, symbol_order=5313)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8862, decl_uid=204793, cgraph_uid=5494, symbol_order=6290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259159;
  unsigned int D.259158;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259158 = hash_table_higher_prime_index (size);
  size_prime_index = D.259158;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259159 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259159;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9731, decl_uid=204739, cgraph_uid=6363, symbol_order=7159)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259175;
  struct value_type * D.259174;
  struct mem_alloc_description & D.259173;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259171;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259174 = xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (n);
  nentries = D.259174;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259175 = ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (n);
  nentries = D.259175;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259171 = nentries;

  <bb 9> :
<L14>:
  return D.259171;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10312, decl_uid=218153, cgraph_uid=6944, symbol_order=7744)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259178;
  struct hash_entry * D.259176;

  <bb 2> :
  D.259178 = xcalloc (count, 40);
  D.259176 = D.259178;

  <bb 3> :
<L0>:
  return D.259176;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10313, decl_uid=239138, cgraph_uid=6945, symbol_order=7745)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (size_t c)
{
  struct hash_entry * D.259185;
  struct hash_entry * D.259184;
  struct hash_entry * D.259182;
  bool retval.2162;

  <bb 2> :
  retval.2162 = need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ();
  if (retval.2162 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.259184 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.259182 = D.259184;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.259185 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259182 = D.259185;

  <bb 5> :
<L2>:
  return D.259182;

}



;; Function finalize<hash_map<tree_node*, var_points_to>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10747, decl_uid=243745, cgraph_uid=7382, symbol_order=8182)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, var_points_to>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10749, decl_uid=246123, cgraph_uid=7380, symbol_order=8180)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  var_points_to::~var_points_to (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10746, decl_uid=243744, cgraph_uid=7378, symbol_order=8178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ()
{
  bool D.259186;

  <bb 2> :
  D.259186 = 1;

  <bb 3> :
<L0>:
  return D.259186;

}



;; Function hash_map<tree_node*, gimple_array>::hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7892, decl_uid=190565, cgraph_uid=4524, symbol_order=5316)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8865, decl_uid=190524, cgraph_uid=5497, symbol_order=6293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259189;
  unsigned int D.259188;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259188 = hash_table_higher_prime_index (size);
  size_prime_index = D.259188;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259189 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259189;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7895, decl_uid=196991, cgraph_uid=4527, symbol_order=5319)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8868, decl_uid=196950, cgraph_uid=5500, symbol_order=6296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259191;
  unsigned int D.259190;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259190 = hash_table_higher_prime_index (size);
  size_prime_index = D.259190;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259191 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259191;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7898, decl_uid=203266, cgraph_uid=4530, symbol_order=5322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8871, decl_uid=203225, cgraph_uid=5503, symbol_order=6299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259193;
  unsigned int D.259192;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259192 = hash_table_higher_prime_index (size);
  size_prime_index = D.259192;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259193 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259193;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9608, decl_uid=203171, cgraph_uid=6240, symbol_order=7036)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259209;
  struct value_type * D.259208;
  struct mem_alloc_description & D.259207;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259205;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259208 = xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (n);
  nentries = D.259208;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259209 = ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (n);
  nentries = D.259209;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259205 = nentries;

  <bb 9> :
<L14>:
  return D.259205;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10215, decl_uid=218225, cgraph_uid=6847, symbol_order=7647)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259212;
  struct hash_entry * D.259210;

  <bb 2> :
  D.259212 = xcalloc (count, 64);
  D.259210 = D.259212;

  <bb 3> :
<L0>:
  return D.259210;

}



;; Function ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10216, decl_uid=237634, cgraph_uid=6848, symbol_order=7648)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (size_t c)
{
  struct hash_entry * D.259219;
  struct hash_entry * D.259218;
  struct hash_entry * D.259216;
  bool retval.2163;

  <bb 2> :
  retval.2163 = need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ();
  if (retval.2163 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 64;
  D.259218 = ggc_internal_cleared_alloc (_1, finalize, 64, c);
  D.259216 = D.259218;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 64;
  D.259219 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259216 = D.259219;

  <bb 5> :
<L2>:
  return D.259216;

}



;; Function finalize<hash_map<cgraph_node*, Graph>::hash_entry> (_Z8finalizeIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10684, decl_uid=242601, cgraph_uid=7319, symbol_order=8119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<cgraph_node*, Graph>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10686, decl_uid=245841, cgraph_uid=7317, symbol_order=8117)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  Graph::~Graph (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10683, decl_uid=242600, cgraph_uid=7315, symbol_order=8115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ()
{
  bool D.259220;

  <bb 2> :
  D.259220 = 1;

  <bb 3> :
<L0>:
  return D.259220;

}



;; Function hash_map<tree_node*, function_return_array>::hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7901, decl_uid=190036, cgraph_uid=4533, symbol_order=5325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8874, decl_uid=189995, cgraph_uid=5506, symbol_order=6302)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259223;
  unsigned int D.259222;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259222 = hash_table_higher_prime_index (size);
  size_prime_index = D.259222;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259223 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259223;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7904, decl_uid=191187, cgraph_uid=4536, symbol_order=5328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8877, decl_uid=191146, cgraph_uid=5509, symbol_order=6305)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259225;
  unsigned int D.259224;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259224 = hash_table_higher_prime_index (size);
  size_prime_index = D.259224;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259225 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259225;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7907, decl_uid=195117, cgraph_uid=4539, symbol_order=5331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8880, decl_uid=195076, cgraph_uid=5512, symbol_order=6308)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259227;
  unsigned int D.259226;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259226 = hash_table_higher_prime_index (size);
  size_prime_index = D.259226;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259227 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259227;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7910, decl_uid=193742, cgraph_uid=4542, symbol_order=5334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8883, decl_uid=193701, cgraph_uid=5515, symbol_order=6311)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259229;
  unsigned int D.259228;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259228 = hash_table_higher_prime_index (size);
  size_prime_index = D.259228;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259229 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259229;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7913, decl_uid=194218, cgraph_uid=4545, symbol_order=5337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8886, decl_uid=194177, cgraph_uid=5518, symbol_order=6314)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259231;
  unsigned int D.259230;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259230 = hash_table_higher_prime_index (size);
  size_prime_index = D.259230;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259231 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259231;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7916, decl_uid=192388, cgraph_uid=4548, symbol_order=5340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8889, decl_uid=192347, cgraph_uid=5521, symbol_order=6317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259233;
  unsigned int D.259232;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259232 = hash_table_higher_prime_index (size);
  size_prime_index = D.259232;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259233 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259233;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7919, decl_uid=192870, cgraph_uid=4551, symbol_order=5343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8892, decl_uid=192829, cgraph_uid=5524, symbol_order=6320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259235;
  unsigned int D.259234;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259234 = hash_table_higher_prime_index (size);
  size_prime_index = D.259234;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259235 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259235;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7922, decl_uid=205215, cgraph_uid=4554, symbol_order=5346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8895, decl_uid=205174, cgraph_uid=5527, symbol_order=6323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259237;
  unsigned int D.259236;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259236 = hash_table_higher_prime_index (size);
  size_prime_index = D.259236;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259237 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259237;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9732, decl_uid=205120, cgraph_uid=6364, symbol_order=7160)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259253;
  struct value_type * D.259252;
  struct mem_alloc_description & D.259251;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259249;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259252 = xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (n);
  nentries = D.259252;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259253 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (n);
  nentries = D.259253;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259249 = nentries;

  <bb 9> :
<L14>:
  return D.259249;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10315, decl_uid=218417, cgraph_uid=6947, symbol_order=7747)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259256;
  struct hash_entry * D.259254;

  <bb 2> :
  D.259256 = xcalloc (count, 16);
  D.259254 = D.259256;

  <bb 3> :
<L0>:
  return D.259254;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10316, decl_uid=239149, cgraph_uid=6948, symbol_order=7748)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.259263;
  struct hash_entry * D.259262;
  struct hash_entry * D.259260;
  bool retval.2164;

  <bb 2> :
  retval.2164 = need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ();
  if (retval.2164 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.259262 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.259260 = D.259262;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.259263 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259260 = D.259263;

  <bb 5> :
<L2>:
  return D.259260;

}



;; Function finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10753, decl_uid=243754, cgraph_uid=7385, symbol_order=8185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10752, decl_uid=243753, cgraph_uid=7384, symbol_order=8184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ()
{
  bool D.259264;

  <bb 2> :
  D.259264 = 0;

  <bb 3> :
<L0>:
  return D.259264;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev, funcdef_no=7886, decl_uid=126276, cgraph_uid=4518, symbol_order=5310)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this)
{
  char * D.259266;
  struct allocator D.217664;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  std::allocator<char>::allocator (&D.217664);
  D.259266 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _2 = D.259266;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _2, &D.217664);
  std::allocator<char>::~allocator (&D.217664);
  D.217664 = {CLOBBER};
  std::__cxx11::basic_string<char>::_M_set_length (this, 0);
  return;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2Ev, funcdef_no=7296, decl_uid=117129, cgraph_uid=3928, symbol_order=4717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2Ev, funcdef_no=8203, decl_uid=117056, cgraph_uid=4835, symbol_order=5627)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_, funcdef_no=8216, decl_uid=125172, cgraph_uid=4848, symbol_order=5640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (struct _Alloc_hider * const this, char * __dat, struct allocator & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::allocator<char>&> (__a);
  std::allocator<char>::allocator (this, _1);
  this->_M_p = __dat;
  return;

}



;; Function std::move<std::allocator<char>&> (_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=8214, decl_uid=208758, cgraph_uid=4846, symbol_order=5638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<char>&> (struct allocator & __t)
{
  struct type & D.259267;

  <bb 2> :
  D.259267 = __t;

  <bb 3> :
<L0>:
  return D.259267;

}



;; Function std::allocator<char>::~allocator (_ZNSaIcED2Ev, funcdef_no=7299, decl_uid=117134, cgraph_uid=3931, symbol_order=4720)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIcED2Ev, funcdef_no=8206, decl_uid=117061, cgraph_uid=4838, symbol_order=5630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::push_back (_ZNSt6vectorI10breakpointSaIS0_EE9push_backERKS0_, funcdef_no=7934, decl_uid=185967, cgraph_uid=4567, symbol_order=5359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<breakpoint>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.259272;

  <bb 2> :
  _1 = this->D.186287._M_impl.D.185632._M_finish;
  _2 = this->D.186287._M_impl.D.185632._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.186287._M_impl.D.185632._M_finish;
  _4 = &this->D.186287._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_4, _3, __x);
  _5 = this->D.186287._M_impl.D.185632._M_finish;
  _6 = _5 + 40;
  this->D.186287._M_impl.D.185632._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.259272 = std::vector<breakpoint>::end (this);
  std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (this, D.259272, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8910, decl_uid=217774, cgraph_uid=5542, symbol_order=6338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (struct allocator_type & __a, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<const breakpoint&> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (__a, __p, _1);
  return;

}



;; Function std::forward<const breakpoint&> (_ZSt7forwardIRK10breakpointEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9737, decl_uid=231572, cgraph_uid=6369, symbol_order=7165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct breakpoint & std::forward<const breakpoint&> (const struct type & __t)
{
  const struct breakpoint & D.259273;

  <bb 2> :
  D.259273 = __t;

  <bb 3> :
<L0>:
  return D.259273;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9738, decl_uid=231574, cgraph_uid=6373, symbol_order=7169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (struct new_allocator * const this, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  void * D.239181;
  void * D.239180;
  const struct breakpoint & D.239185;

  <bb 2> :
  D.239185 = std::forward<const breakpoint&> (__args#0);
  D.239180 = __p;
  D.239181 = operator new (40, D.239180);
  breakpoint::breakpoint (D.239181, D.239185);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  operator delete (D.239181, D.239180);
  resx 1

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2ERKS_, funcdef_no=9740, decl_uid=204299, cgraph_uid=6371, symbol_order=7167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, const struct breakpoint & D.204301)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.204301->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.204301->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_, funcdef_no=8270, decl_uid=126265, cgraph_uid=4902, symbol_order=5694)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 8 3 }
;; 3 succs { 8 4 }
;; 4 succs { 10 5 }
;; 5 succs { 10 6 }
;; 6 succs { 10 7 }
;; 7 succs { 1 }
;; 8 succs { 9 }
;; 9 succs { }
;; 10 succs { }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, const struct basic_string & __str)
{
  char * D.259281;
  char * D.259280;
  char * D.259277;
  const struct allocator_type & D.259276;
  struct allocator D.220232;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.259276 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.259276;
  D.220232 = __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_2); [return slot optimization]
  D.259277 = std::__cxx11::basic_string<char>::_M_local_data (this);

  <bb 3> :
  _3 = D.259277;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _3, &D.220232);

  <bb 4> :
  std::allocator<char>::~allocator (&D.220232);
  D.220232 = {CLOBBER};
  D.259280 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 5> :
  _4 = D.259280;
  _5 = std::__cxx11::basic_string<char>::length (__str);
  _6 = _4 + _5;
  D.259281 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 6> :
  _7 = D.259281;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, _7, _6);

  <bb 7> :
  return;

  <bb 8> :
<L0>:
  std::allocator<char>::~allocator (&D.220232);
  resx 2

  <bb 9> :
<L1>:
  D.220232 = {CLOBBER};
  resx 1

  <bb 10> :
<L2>:
  _8 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_8);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_, funcdef_no=9134, decl_uid=125092, cgraph_uid=5766, symbol_order=6562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_, funcdef_no=9906, decl_uid=125052, cgraph_uid=6538, symbol_order=7334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<char>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2ERKS_, funcdef_no=9106, decl_uid=117124, cgraph_uid=5738, symbol_order=6534)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_, funcdef_no=9871, decl_uid=117051, cgraph_uid=6503, symbol_order=7299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.117053)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_, funcdef_no=9110, decl_uid=219982, cgraph_uid=5742, symbol_order=6538)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end)
{
  struct __false_type D.259287;

  <bb 2> :
  std::__cxx11::basic_string<char>::_M_construct_aux<char*> (this, __beg, __end, D.259287);
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct_aux<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type, funcdef_no=9875, decl_uid=232924, cgraph_uid=6507, symbol_order=7303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::__cxx11::basic_string<char>::_M_construct_aux<char*> (struct basic_string * const this, char * __beg, char * __end, struct __false_type D.240236)
{
  struct forward_iterator_tag D.259288;
  struct _Tag D.240239;

  <bb 2> :
  _1 = &D.240239;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, __beg, __end, D.259288);

  <bb 3> :
  D.240239 = {CLOBBER};
  return;

  <bb 4> :
<L0>:
  D.240239 = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag, funcdef_no=10422, decl_uid=240240, cgraph_uid=7055, symbol_order=7855)

Removing basic block 18
Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 20 }
;; 8 succs { 20 9 }
;; 9 succs { 10 13 }
;; 10 succs { 20 11 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 16 14 }
;; 14 succs { 20 15 }
;; 15 succs { 1 }
;; 16 succs { 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end, struct forward_iterator_tag D.244736)
{
  char * D.259303;
  char * D.259302;
  long int D.259301;
  size_type __dnew;
  bool iftmp.2166;
  bool retval.2165;

  <bb 2> :
  _1 = __gnu_cxx::__is_null_pointer<char> (__beg);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__beg != __end)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2166 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2166 = 0;

  <bb 6> :
  retval.2165 = iftmp.2166;
  if (retval.2165 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 8> :
  D.259301 = std::distance<char*> (__beg, __end);

  <bb 9> :
  _2 = D.259301;
  _3 = (long unsigned int) _2;
  __dnew = _3;
  __dnew.2167_4 = __dnew;
  if (__dnew.2167_4 > 15)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  D.259302 = std::__cxx11::basic_string<char>::_M_create (this, &__dnew, 0);

  <bb 11> :
  _5 = D.259302;
  std::__cxx11::basic_string<char>::_M_data (this, _5);

  <bb 12> :
  __dnew.2168_6 = __dnew;
  std::__cxx11::basic_string<char>::_M_capacity (this, __dnew.2168_6);

  <bb 13> :
  D.259303 = std::__cxx11::basic_string<char>::_M_data (this);

  <bb 14> :
  _7 = D.259303;
  std::__cxx11::basic_string<char>::_S_copy_chars (_7, __beg, __end);
  __dnew.2169_9 = __dnew;
  std::__cxx11::basic_string<char>::_M_set_length (this, __dnew.2169_9);

  <bb 15> :
  __dnew = {CLOBBER};
  return;

  <bb 16> :
<L9>:
  eh_dispatch 2

  <bb 17> :
<L10>:
  _8 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_8);
  std::__cxx11::basic_string<char>::_M_dispose (this);

  <bb 18> :
  __cxa_rethrow ();

  <bb 19> :
<L11>:
  __cxa_end_catch ();
  resx 3

  <bb 20> :
<L12>:
  __dnew = {CLOBBER};
  resx 1

}



;; Function __gnu_cxx::__is_null_pointer<char> (_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_, funcdef_no=10808, decl_uid=244740, cgraph_uid=7440, symbol_order=8240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__is_null_pointer<char> (char * __ptr)
{
  bool D.259308;

  <bb 2> :
  D.259308 = __ptr == 0B;

  <bb 3> :
<L0>:
  return D.259308;

}



;; Function std::distance<char*> (_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_, funcdef_no=10423, decl_uid=244743, cgraph_uid=7054, symbol_order=7854)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::distance<char*> (char * __first, char * __last)
{
  struct random_access_iterator_tag D.259311;
  difference_type D.259310;

  <bb 2> :
  std::__iterator_category<char*> (&__first);
  __first.2170_1 = __first;
  D.259310 = std::__distance<char*> (__first.2170_1, __last, D.259311);

  <bb 3> :
<L0>:
  return D.259310;

}



;; Function std::__iterator_category<char*> (_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_, funcdef_no=10809, decl_uid=244749, cgraph_uid=7441, symbol_order=8241)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator_category std::__iterator_category<char*> (char * const & D.246392)
{
  struct iterator_category D.259313;

  <bb 2> :

  <bb 3> :
<L0>:
  return D.259313;

}



;; Function std::__distance<char*> (_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag, funcdef_no=10810, decl_uid=244752, cgraph_uid=7442, symbol_order=8242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::__distance<char*> (char * __first, char * __last, struct random_access_iterator_tag D.246400)
{
  difference_type D.259315;

  <bb 2> :
  D.259315 = __last - __first;

  <bb 3> :
<L0>:
  return D.259315;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev, funcdef_no=7303, decl_uid=126589, cgraph_uid=3934, symbol_order=4723)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (struct _Alloc_hider * const this)
{
  <bb 2> :
  std::allocator<char>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<breakpoint>::end (_ZNSt6vectorI10breakpointSaIS0_EE3endEv, funcdef_no=8911, decl_uid=185900, cgraph_uid=5543, symbol_order=6339)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::end (struct vector * const this)
{
  struct iterator D.231597;
  struct iterator D.259317;

  <bb 2> :
  _1 = &this->D.186287._M_impl.D.185632._M_finish;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.231597, _1);
  D.259317 = D.231597;
  D.231597 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259317;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9743, decl_uid=218021, cgraph_uid=6375, symbol_order=7171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (struct __normal_iterator * const this, struct breakpoint * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (_ZNSt6vectorI10breakpointSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8912, decl_uid=218040, cgraph_uid=5547, symbol_order=6343)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { }
void std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (struct vector * const this, struct iterator __position, const struct breakpoint & __args#0)
{
  struct breakpoint * D.259324;
  const size_type D.259323;
  struct breakpoint * __new_finish;
  struct breakpoint * __new_start;
  const size_type __elems_before;
  struct breakpoint * __old_finish;
  struct breakpoint * __old_start;
  const size_type __len;
  struct iterator D.231605;

  <bb 2> :
  D.259323 = std::vector<breakpoint>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.259323;
  __old_start = this->D.186287._M_impl.D.185632._M_start;
  __old_finish = this->D.186287._M_impl.D.185632._M_finish;
  D.231605 = std::vector<breakpoint>::begin (this);
  _1 = __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (&__position, &D.231605);
  __elems_before = (const size_type) _1;
  D.231605 = {CLOBBER};
  _2 = &this->D.186287;
  D.259324 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_2, __len);
  __new_start = D.259324;
  __new_finish = __new_start;
  _3 = std::forward<const breakpoint&> (__args#0);
  _4 = __elems_before * 40;
  _5 = __new_start + _4;
  _6 = &this->D.186287._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_6, _5, _3);

  <bb 3> :
  __new_finish = 0B;
  _7 = &this->D.186287;
  _8 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<breakpoint>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 40;
  _11 = &this->D.186287;
  _12 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<breakpoint>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.186287;
  _23 = this->D.186287._M_impl.D.185632._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 40;
  _26 = (long unsigned int) _25;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_22, __old_start, _26);
  this->D.186287._M_impl.D.185632._M_start = __new_start;
  this->D.186287._M_impl.D.185632._M_finish = __new_finish;
  _27 = __len * 40;
  _28 = __new_start + _27;
  this->D.186287._M_impl.D.185632._M_end_of_storage = _28;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 2

  <bb 5> :
<L1>:
  _15 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_15);
  if (__new_finish == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _16 = __elems_before * 40;
  _17 = __new_start + _16;
  _18 = &this->D.186287._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_18, _17);
  goto <bb 8>; [INV]

  <bb 7> :
  _19 = &this->D.186287;
  _20 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_19);
  std::_Destroy<breakpoint*, breakpoint> (__new_start, __new_finish, _20);

  <bb 8> :
  _21 = &this->D.186287;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_21, __new_start, __len);

  <bb 9> :
  __cxa_rethrow ();

  <bb 10> :
<L5>:
  __cxa_end_catch ();
  resx 3

}



;; Function std::vector<breakpoint>::_M_check_len (_ZNKSt6vectorI10breakpointSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9745, decl_uid=186136, cgraph_uid=6377, symbol_order=7173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<breakpoint>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.2173;
  size_type D.259331;
  const long unsigned int D.239194;
  bool retval.2171;

  <bb 2> :
  _1 = std::vector<breakpoint>::max_size (this);
  _2 = std::vector<breakpoint>::size (this);
  _3 = _1 - _2;
  __n.2172_4 = __n;
  retval.2171 = _3 < __n.2172_4;
  if (retval.2171 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<breakpoint>::size (this);
  _6 = std::vector<breakpoint>::size (this);
  D.239194 = _6;
  _7 = std::max<long unsigned int> (&D.239194, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.239194 = {CLOBBER};
  _9 = std::vector<breakpoint>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<breakpoint>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2173 = std::vector<breakpoint>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2173 = __len;

  <bb 8> :
  D.259331 = iftmp.2173;

  <bb 9> :
<L6>:
  return D.259331;

}



;; Function std::vector<breakpoint>::max_size (_ZNKSt6vectorI10breakpointSaIS0_EE8max_sizeEv, funcdef_no=10320, decl_uid=185922, cgraph_uid=6952, symbol_order=7752)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::max_size (const struct vector * const this)
{
  size_type D.259338;

  <bb 2> :
  _1 = &this->D.186287;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  D.259338 = std::vector<breakpoint>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.259338;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=10756, decl_uid=185522, cgraph_uid=7388, symbol_order=8188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.259340;

  <bb 2> :
  D.259340 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259340;

}



;; Function std::vector<breakpoint>::_S_max_size (_ZNSt6vectorI10breakpointSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10755, decl_uid=186143, cgraph_uid=7387, symbol_order=8187)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.259342;

  <bb 2> :
  __diffmax = 230584300921369395;
  _1 = std::allocator_traits<std::allocator<breakpoint> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.259342 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259342;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::max_size (_ZNSt16allocator_traitsISaI10breakpointEE8max_sizeERKS1_, funcdef_no=10925, decl_uid=185457, cgraph_uid=7557, symbol_order=8359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<breakpoint> >::max_size (const struct allocator_type & __a)
{
  size_type D.259345;

  <bb 2> :
  D.259345 = __gnu_cxx::new_allocator<breakpoint>::max_size (__a);

  <bb 3> :
<L0>:
  return D.259345;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE8max_sizeEv, funcdef_no=11005, decl_uid=185299, cgraph_uid=7637, symbol_order=8439)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::max_size (const struct new_allocator * const this)
{
  size_type D.259347;

  <bb 2> :
  D.259347 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.259347;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE11_M_max_sizeEv, funcdef_no=10758, decl_uid=185318, cgraph_uid=7389, symbol_order=8189)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.259349;

  <bb 2> :
  D.259349 = 230584300921369395;

  <bb 3> :
<L0>:
  return D.259349;

}



;; Function std::vector<breakpoint>::begin (_ZNSt6vectorI10breakpointSaIS0_EE5beginEv, funcdef_no=9746, decl_uid=185896, cgraph_uid=6378, symbol_order=7174)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::begin (struct vector * const this)
{
  struct iterator D.239196;
  struct iterator D.259351;

  <bb 2> :
  _1 = &this->D.186287._M_impl.D.185632._M_start;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.239196, _1);
  D.259351 = D.239196;
  D.239196 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259351;

}



;; Function __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (_ZN9__gnu_cxxmiIP10breakpointSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9747, decl_uid=231606, cgraph_uid=6379, symbol_order=7175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.259354;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.259354 = _5 /[ex] 40;

  <bb 3> :
<L0>:
  return D.259354;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE11_M_allocateEm, funcdef_no=9748, decl_uid=185636, cgraph_uid=6380, symbol_order=7176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct breakpoint * D.259362;
  struct breakpoint * iftmp.2174;
  struct breakpoint * D.259356;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.259362 = std::allocator_traits<std::allocator<breakpoint> >::allocate (_1, __n);
  iftmp.2174 = D.259362;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2174 = 0B;

  <bb 5> :
  D.259356 = iftmp.2174;

  <bb 6> :
<L3>:
  return D.259356;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::allocate (_ZNSt16allocator_traitsISaI10breakpointEE8allocateERS1_m, funcdef_no=10321, decl_uid=185437, cgraph_uid=6953, symbol_order=7753)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * std::allocator_traits<std::allocator<breakpoint> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct breakpoint * D.259365;
  struct breakpoint * D.259363;

  <bb 2> :
  D.259365 = __gnu_cxx::new_allocator<breakpoint>::allocate (__a, __n, 0B);
  D.259363 = D.259365;

  <bb 3> :
<L0>:
  return D.259363;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::allocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE8allocateEmPKv, funcdef_no=10757, decl_uid=185291, cgraph_uid=7390, symbol_order=8190)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * __gnu_cxx::new_allocator<breakpoint>::allocate (struct new_allocator * const this, size_type __n, const void * D.246159)
{
  struct breakpoint * D.259376;
  struct breakpoint * D.259375;
  align_val_t __al;
  struct breakpoint * D.259373;
  bool retval.2175;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2175 = _4 != 0;
  if (retval.2175 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 461168601842738790)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 40;
  D.259376 = operator new (_6);
  D.259373 = D.259376;

  <bb 7> :
<L6>:
  return D.259373;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9750, decl_uid=218008, cgraph_uid=6382, symbol_order=7178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * const & __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (const struct __normal_iterator * const this)
{
  struct breakpoint * const & D.259377;

  <bb 2> :
  D.259377 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.259377;

}



;; Function std::vector<breakpoint>::_S_relocate (_ZNSt6vectorI10breakpointSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9749, decl_uid=185794, cgraph_uid=6381, symbol_order=7177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.259380;
  struct breakpoint * D.259379;

  <bb 2> :
  D.259379 = std::vector<breakpoint>::_S_do_relocate (__first, __last, __result, __alloc, D.259380);

  <bb 3> :
<L0>:
  return D.259379;

}



;; Function std::vector<breakpoint>::_S_do_relocate (_ZNSt6vectorI10breakpointSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10322, decl_uid=185782, cgraph_uid=6954, symbol_order=7754)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_do_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc, struct true_type D.243773)
{
  struct breakpoint * D.259382;

  <bb 2> :
  D.259382 = std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.259382;

}



;; Function std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt12__relocate_aIP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10759, decl_uid=231771, cgraph_uid=7391, symbol_order=8191)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * D.259384;

  <bb 2> :
  _1 = std::__niter_base<breakpoint*> (__result);
  _2 = std::__niter_base<breakpoint*> (__last);
  _3 = std::__niter_base<breakpoint*> (__first);
  D.259384 = std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.259384;

}



;; Function std::__niter_base<breakpoint*> (_ZSt12__niter_baseIP10breakpointET_S2_, funcdef_no=10926, decl_uid=231777, cgraph_uid=7558, symbol_order=8360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__niter_base<breakpoint*> (struct breakpoint * __it)
{
  struct breakpoint * D.259386;

  <bb 2> :
  D.259386 = __it;

  <bb 3> :
<L0>:
  return D.259386;

}



;; Function std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt14__relocate_a_1IP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10927, decl_uid=231922, cgraph_uid=7559, symbol_order=8361)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * __cur;
  struct breakpoint * D.259388;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  _2 = std::__addressof<breakpoint> (__cur);
  std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_2, _1, __alloc);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.259388 = __cur;

  <bb 6> :
<L3>:
  return D.259388;

}



;; Function std::__addressof<breakpoint> (_ZSt11__addressofI10breakpointEPT_RS1_, funcdef_no=10928, decl_uid=231978, cgraph_uid=7560, symbol_order=8362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__addressof<breakpoint> (struct breakpoint & __r)
{
  struct breakpoint * D.259390;

  <bb 2> :
  D.259390 = __r;

  <bb 3> :
<L0>:
  return D.259390;

}



;; Function std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_ZSt19__relocate_object_aI10breakpointS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=11006, decl_uid=231951, cgraph_uid=7638, symbol_order=8440)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (struct breakpoint * restrict __dest, struct breakpoint * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<breakpoint&> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (__alloc, __dest, _1);
  _2 = std::__addressof<breakpoint> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (__alloc, _2);
  return;

}



;; Function std::move<breakpoint&> (_ZSt4moveIR10breakpointEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11042, decl_uid=231963, cgraph_uid=7674, symbol_order=8476)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<breakpoint&> (struct breakpoint & __t)
{
  struct type & D.259392;

  <bb 2> :
  D.259392 = __t;

  <bb 3> :
<L0>:
  return D.259392;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11043, decl_uid=231965, cgraph_uid=7675, symbol_order=8477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (struct allocator_type & __a, struct breakpoint * __p, struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<breakpoint> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (__a, __p, _1);
  return;

}



;; Function std::forward<breakpoint> (_ZSt7forwardI10breakpointEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11066, decl_uid=247944, cgraph_uid=7698, symbol_order=8500)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint & std::forward<breakpoint> (struct type & __t)
{
  struct breakpoint & D.259394;

  <bb 2> :
  D.259394 = __t;

  <bb 3> :
<L0>:
  return D.259394;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11067, decl_uid=247946, cgraph_uid=7702, symbol_order=8504)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (struct new_allocator * const this, struct breakpoint * __p, struct breakpoint & __args#0)
{
  void * D.248036;
  void * D.248035;
  struct breakpoint & D.248040;

  <bb 2> :
  D.248040 = std::forward<breakpoint> (__args#0);
  D.248035 = __p;
  D.248036 = operator new (40, D.248035);
  breakpoint::breakpoint (D.248036, D.248040);
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2EOS_, funcdef_no=11069, decl_uid=204308, cgraph_uid=7700, symbol_order=8502)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, struct breakpoint & D.204310)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.204310->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.204310->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_, funcdef_no=7313, decl_uid=126195, cgraph_uid=3945, symbol_order=4735)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, struct basic_string & __str)
{
  char * D.259404;
  char * D.259403;
  bool D.259402;
  char * D.259401;
  struct allocator_type & D.259400;
  bool retval.2176;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.259400 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.259400;
  _3 = std::move<std::allocator<char>&> (_2);
  D.259401 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _4 = D.259401;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _4, _3);
  D.259402 = std::__cxx11::basic_string<char>::_M_is_local (__str);
  retval.2176 = D.259402;
  if (retval.2176 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = &__str->D.125192._M_local_buf;
  _6 = &this->D.125192._M_local_buf;
  std::char_traits<char>::copy (_6, _5, 16);
  goto <bb 5>; [INV]

  <bb 4> :
  D.259403 = std::__cxx11::basic_string<char>::_M_data (__str);
  _7 = D.259403;
  std::__cxx11::basic_string<char>::_M_data (this, _7);
  _8 = __str->D.125192._M_allocated_capacity;
  std::__cxx11::basic_string<char>::_M_capacity (this, _8);

  <bb 5> :
  _9 = std::__cxx11::basic_string<char>::length (__str);
  std::__cxx11::basic_string<char>::_M_length (this, _9);
  D.259404 = std::__cxx11::basic_string<char>::_M_local_data (__str);
  _10 = D.259404;
  std::__cxx11::basic_string<char>::_M_data (__str, _10);
  std::__cxx11::basic_string<char>::_M_set_length (__str, 0);
  return;

}



;; Function std::char_traits<char>::copy (_ZNSt11char_traitsIcE4copyEPcPKcm, funcdef_no=3400, decl_uid=115117, cgraph_uid=2218, symbol_order=2386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
char_type * std::char_traits<char>::copy (char_type * __s1, const char_type * __s2, size_t __n)
{
  char_type * D.259407;

  <bb 2> :
  if (__n == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.259407 = __s1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.259407 = __builtin_memcpy (__s1, __s2, __n);

  <bb 5> :
<L2>:
  return D.259407;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE7destroyIS0_EEvRS1_PT_, funcdef_no=9752, decl_uid=231980, cgraph_uid=6384, symbol_order=7180)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (struct allocator_type & __a, struct breakpoint * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE7destroyIS1_EEvPT_, funcdef_no=10323, decl_uid=239215, cgraph_uid=6955, symbol_order=7755)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (struct new_allocator * const this, struct breakpoint * __p)
{
  <bb 2> :
  breakpoint::~breakpoint (__p);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9751, decl_uid=185520, cgraph_uid=6383, symbol_order=7179)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.259409;

  <bb 2> :
  D.259409 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259409;

}



;; Function std::_Destroy<breakpoint*, breakpoint> (_ZSt8_DestroyIP10breakpointS0_EvT_S2_RSaIT0_E, funcdef_no=9753, decl_uid=232162, cgraph_uid=6385, symbol_order=7181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*, breakpoint> (struct breakpoint * __first, struct breakpoint * __last, struct allocator & D.239220)
{
  <bb 2> :
  std::_Destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy<breakpoint*> (_ZSt8_DestroyIP10breakpointEvT_S2_, funcdef_no=10324, decl_uid=239222, cgraph_uid=6956, symbol_order=7756)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<breakpoint*> (_ZNSt12_Destroy_auxILb0EE9__destroyIP10breakpointEEvT_S4_, funcdef_no=10760, decl_uid=243802, cgraph_uid=7392, symbol_order=8192)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  std::_Destroy<breakpoint> (_1);
  __first = __first + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Destroy<breakpoint> (_ZSt8_DestroyI10breakpointEvPT_, funcdef_no=10929, decl_uid=246174, cgraph_uid=7561, symbol_order=8363)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint> (struct breakpoint * __pointer)
{
  <bb 2> :
  breakpoint::~breakpoint (__pointer);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8417, decl_uid=185639, cgraph_uid=5049, symbol_order=5845)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (struct _Vector_base * const this, struct breakpoint * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::deallocate (_ZNSt16allocator_traitsISaI10breakpointEE10deallocateERS1_PS0_m, funcdef_no=9212, decl_uid=185444, cgraph_uid=5844, symbol_order=6640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::deallocate (struct allocator_type & __a, struct breakpoint * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::deallocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE10deallocateEPS1_m, funcdef_no=9943, decl_uid=185295, cgraph_uid=6575, symbol_order=7375)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::deallocate (struct new_allocator * const this, struct breakpoint * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 40;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function Graph::Graph (_ZN5GraphC2Ev, funcdef_no=6893, decl_uid=205432, cgraph_uid=3524, symbol_order=4306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this)
{
  <bb 2> :
  this->find = 0;
  _1 = &this->stack;
  std::vector<int>::vector (_1);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2Ev, funcdef_no=6891, decl_uid=167806, cgraph_uid=3521, symbol_order=4303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167814;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2Ev, funcdef_no=6889, decl_uid=167232, cgraph_uid=3518, symbol_order=4300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev, funcdef_no=7938, decl_uid=167124, cgraph_uid=4570, symbol_order=5362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this);
  _1 = &this->D.167127;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2Ev, funcdef_no=8918, decl_uid=166902, cgraph_uid=5550, symbol_order=6346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2Ev, funcdef_no=9755, decl_uid=166831, cgraph_uid=6387, symbol_order=7183)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev, funcdef_no=8921, decl_uid=167074, cgraph_uid=5553, symbol_order=6349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::put (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7949, decl_uid=202945, cgraph_uid=4585, symbol_order=5377)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<cgraph_node*, Graph>::put (struct hash_map * const this, struct cgraph_node * const & k, const struct Graph & v)
{
  bool D.259424;
  struct hash_entry * D.259423;
  unsigned int D.259422;
  bool ins;
  struct hash_entry * e;
  bool D.259420;
  void * D.218083;
  void * D.218082;

  <bb 2> :
  _1 = &this->m_table;
  D.259422 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (k);
  _2 = D.259422;
  D.259423 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.259423;
  D.259424 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (e);
  ins = D.259424;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.218082 = &e->m_value;
  D.218083 = operator new (56, D.218082);
  Graph::Graph (D.218083, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  Graph::operator= (_4, v);

  <bb 5> :
  D.259420 = ~ins;

  <bb 6> :
<L3>:
  return D.259420;

  <bb 7> :
<L4>:
  operator delete (D.218083, D.218082);
  resx 1

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8929, decl_uid=203103, cgraph_uid=5561, symbol_order=6357)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct cgraph_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.259475;
  bool D.259474;
  bool D.259473;
  bool D.259472;
  bool D.259471;
  bool D.259470;
  struct value_type * D.259469;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2182;
  bool retval.2181;
  bool retval.2180;
  bool retval.2179;
  bool retval.2178;
  bool retval.2177;
  struct value_type * D.259431;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 64;
  entry = _11 + _13;
  size = this->m_size;
  D.259470 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2177 = D.259470;
  if (retval.2177 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.259471 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2178 = D.259471;
  if (retval.2178 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 64;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.259472 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2179 = D.259472;
  if (retval.2179 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 64;
  D.259431 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 64;
  entry = _24 + _26;
  D.259473 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2180 = D.259473;
  if (retval.2180 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.259474 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2181 = D.259474;
  if (retval.2181 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 64;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.259475 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2182 = D.259475;
  if (retval.2182 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 64;
  D.259431 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.259431 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.259431 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 64;
  D.259431 = _37 + _39;

  <bb 27> :
<L37>:
  return D.259431;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9759, decl_uid=203184, cgraph_uid=6403, symbol_order=7199)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.259506;
  unsigned int D.259505;
  bool D.259504;
  bool D.259503;
  struct mem_alloc_description & D.259502;
  struct value_type * D.259501;
  unsigned int D.259500;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.239271;
  void * D.239270;
  struct hash_entry & D.239308;
  bool iftmp.2186;
  bool retval.2185;
  bool iftmp.2184;
  bool retval.2183;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 64;
  olimit = oentries + _1;
  elts = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2184 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2184 = 0;

  <bb 6> :
  retval.2183 = iftmp.2184;
  if (retval.2183 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.259500 = hash_table_higher_prime_index (_5);
  nindex = D.259500;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.259501 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.259501;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.259503 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.259503;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.259504 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.259504;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2186 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2186 = 0;

  <bb 15> :
  retval.2185 = iftmp.2186;
  if (retval.2185 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.259505 = hash_map<cgraph_node*, Graph>::hash_entry::hash (x);
  _16 = D.259505;
  D.259506 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.259506;
  D.239308 = std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (x);
  D.239270 = q;
  D.239271 = operator new (64, D.239270);
  hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (D.239271, D.239308);

  <bb 17> :
  p = p + 64;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10327, decl_uid=203079, cgraph_uid=6959, symbol_order=7759)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.259507;

  <bb 2> :
  D.259507 = this->m_size;

  <bb 3> :
<L0>:
  return D.259507;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10328, decl_uid=203081, cgraph_uid=6960, symbol_order=7760)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.259509;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.259509 = _1 - _2;

  <bb 3> :
<L0>:
  return D.259509;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10329, decl_uid=203181, cgraph_uid=6961, symbol_order=7761)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2187;
  bool D.259511;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2187 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2187 = 0;

  <bb 6> :
  D.259511 = iftmp.2187;

  <bb 7> :
<L4>:
  return D.259511;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10331, decl_uid=203004, cgraph_uid=6963, symbol_order=7763)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<cgraph_node*, Graph>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.259520;
  hashval_t D.259518;

  <bb 2> :
  _1 = &e->m_key;
  D.259520 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_1);
  D.259518 = D.259520;

  <bb 3> :
<L0>:
  return D.259518;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10330, decl_uid=203174, cgraph_uid=6962, symbol_order=7762)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.259533;
  bool D.259532;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2189;
  struct value_type * D.259524;
  bool retval.2188;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 64;
  slot = _2 + _4;
  D.259532 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2188 = D.259532;
  if (retval.2188 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.259524 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 64;
  slot = _8 + _10;
  D.259533 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2189 = D.259533;
  if (retval.2189 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.259524 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.259524;

}



;; Function std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (_ZSt4moveIRN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10332, decl_uid=239268, cgraph_uid=6964, symbol_order=7764)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.259534;

  <bb 2> :
  D.259534 = __t;

  <bb 3> :
<L0>:
  return D.259534;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9770, decl_uid=239293, cgraph_uid=6401, symbol_order=7197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.239295)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.239295->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.239295->m_value;
  Graph::Graph (_2, _3);
  return;

}



;; Function Graph::Graph (_ZN5GraphC2EOS_, funcdef_no=9768, decl_uid=205449, cgraph_uid=6398, symbol_order=7194)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, struct Graph & D.205451)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.205451->V;
  this->V = _1;
  _2 = D.205451->end;
  this->end = _2;
  _3 = D.205451->succ;
  this->succ = _3;
  _4 = D.205451->start;
  this->start = _4;
  _5 = D.205451->find;
  this->find = _5;
  _6 = D.205451->adj;
  this->adj = _6;
  _7 = &this->stack;
  _8 = &D.205451->stack;
  std::vector<int>::vector (_7, _8);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2EOS1_, funcdef_no=9766, decl_uid=167771, cgraph_uid=6395, symbol_order=7191)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this, struct vector & D.167773)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167814;
  _2 = &D.167773->D.167814;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EOS1_, funcdef_no=9764, decl_uid=167207, cgraph_uid=6392, symbol_order=7188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.167209)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.167209->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS2_, funcdef_no=10334, decl_uid=167113, cgraph_uid=6966, symbol_order=7766)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  std::allocator<int>::allocator (this, _1);
  _2 = &this->D.167127;
  _3 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  _4 = &_3->D.167127;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2ERKS_, funcdef_no=10763, decl_uid=166897, cgraph_uid=7395, symbol_order=8195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_, funcdef_no=10931, decl_uid=166826, cgraph_uid=7563, symbol_order=8365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.166828)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIiSaIiEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=10761, decl_uid=243837, cgraph_uid=7393, symbol_order=8193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.259536;

  <bb 2> :
  D.259536 = __t;

  <bb 3> :
<L0>:
  return D.259536;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2EOS2_, funcdef_no=10766, decl_uid=167069, cgraph_uid=7398, symbol_order=8198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8952, decl_uid=218227, cgraph_uid=5584, symbol_order=6380)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9772, decl_uid=203192, cgraph_uid=6404, symbol_order=7200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10336, decl_uid=203016, cgraph_uid=6968, symbol_order=7768)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10768, decl_uid=243852, cgraph_uid=7400, symbol_order=8200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<cgraph_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<cgraph_node>::mark_empty (_ZN12pointer_hashI11cgraph_nodeE10mark_emptyERPS0_, funcdef_no=10933, decl_uid=202870, cgraph_uid=7565, symbol_order=8367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<cgraph_node>::mark_empty (struct cgraph_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function Graph::Graph (_ZN5GraphC2ERKS_, funcdef_no=7951, decl_uid=205440, cgraph_uid=4582, symbol_order=5374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, const struct Graph & D.205442)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.205442->V;
  this->V = _1;
  _2 = D.205442->end;
  this->end = _2;
  _3 = D.205442->succ;
  this->succ = _3;
  _4 = D.205442->start;
  this->start = _4;
  _5 = D.205442->find;
  this->find = _5;
  _6 = D.205442->adj;
  this->adj = _6;
  _7 = &this->stack;
  _8 = &D.205442->stack;
  std::vector<int>::vector (_7, _8);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2ERKS1_, funcdef_no=8932, decl_uid=167777, cgraph_uid=5564, symbol_order=6360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<int>::vector (struct vector * const this, const struct vector & __x)
{
  int * D.259543;
  struct __normal_iterator D.259540;
  struct __normal_iterator D.259539;
  struct allocator D.232321;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167814;
  _2 = &__x->D.167814;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  D.232321 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<int>::size (__x);
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _4, &D.232321);

  <bb 3> :
  std::allocator<int>::~allocator (&D.232321);
  D.232321 = {CLOBBER};
  _5 = &this->D.167814;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = this->D.167814._M_impl.D.167127._M_start;
  D.259539 = std::vector<int>::end (__x);
  D.259540 = std::vector<int>::begin (__x);
  D.259543 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (D.259540, D.259539, _7, _6);

  <bb 4> :
  _8 = D.259543;
  this->D.167814._M_impl.D.167127._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<int>::~allocator (&D.232321);
  resx 2

  <bb 6> :
<L1>:
  D.232321 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.167814;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE17_S_select_on_copyERKS1_, funcdef_no=9773, decl_uid=166989, cgraph_uid=6405, symbol_order=7201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_, funcdef_no=10337, decl_uid=166954, cgraph_uid=6969, symbol_order=7769)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<int>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_, funcdef_no=9776, decl_uid=167214, cgraph_uid=6408, symbol_order=7204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<int, std::allocator<int> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_, funcdef_no=10339, decl_uid=167119, cgraph_uid=6971, symbol_order=7771)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this, __a);
  _1 = &this->D.167127;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_create_storage (_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm, funcdef_no=10341, decl_uid=167138, cgraph_uid=6973, symbol_order=7773)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  int * D.259550;

  <bb 2> :
  D.259550 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (this, __n);
  _1 = D.259550;
  this->_M_impl.D.167127._M_start = _1;
  _2 = this->_M_impl.D.167127._M_start;
  this->_M_impl.D.167127._M_finish = _2;
  _3 = this->_M_impl.D.167127._M_start;
  _4 = __n * 4;
  _5 = _3 + _4;
  this->_M_impl.D.167127._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev, funcdef_no=6887, decl_uid=167174, cgraph_uid=3515, symbol_order=4297)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<int>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<int>::~allocator (_ZNSaIiED2Ev, funcdef_no=7941, decl_uid=166907, cgraph_uid=4573, symbol_order=5365)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIiED2Ev, funcdef_no=8924, decl_uid=166836, cgraph_uid=5556, symbol_order=6352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::end (_ZNKSt6vectorIiSaIiEE3endEv, funcdef_no=9779, decl_uid=167401, cgraph_uid=6411, symbol_order=7207)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::end (const struct vector * const this)
{
  struct const_iterator D.239344;
  struct const_iterator D.259551;

  <bb 2> :
  _1 = &this->D.167814._M_impl.D.167127._M_finish;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.239344, _1);
  D.259551 = D.239344;
  D.239344 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259551;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_, funcdef_no=10343, decl_uid=232290, cgraph_uid=6975, symbol_order=7775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, const int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::begin (_ZNKSt6vectorIiSaIiEE5beginEv, funcdef_no=9778, decl_uid=167397, cgraph_uid=6410, symbol_order=7206)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::begin (const struct vector * const this)
{
  struct const_iterator D.239342;
  struct const_iterator D.259554;

  <bb 2> :
  _1 = &this->D.167814._M_impl.D.167127._M_start;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.239342, _1);
  D.259554 = D.239342;
  D.239342 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259554;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E, funcdef_no=9780, decl_uid=232310, cgraph_uid=6412, symbol_order=7208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result, struct allocator & D.239348)
{
  int * D.259559;
  int * D.259557;

  <bb 2> :
  D.259559 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.259557 = D.259559;

  <bb 3> :
<L0>:
  return D.259557;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10345, decl_uid=239350, cgraph_uid=6978, symbol_order=7778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259562;
  const bool __assignable;
  int * D.259560;

  <bb 2> :
  __assignable = 1;
  D.259562 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.259560 = D.259562;

  <bb 3> :
<L0>:
  return D.259560;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_, funcdef_no=10769, decl_uid=243969, cgraph_uid=7401, symbol_order=8201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259565;
  int * D.259563;

  <bb 2> :
  D.259565 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.259563 = D.259565;

  <bb 3> :
<L0>:
  return D.259563;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10934, decl_uid=246207, cgraph_uid=7566, symbol_order=8368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259570;
  struct __normal_iterator D.259568;
  struct __normal_iterator D.259567;
  int * D.259566;

  <bb 2> :
  D.259567 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.259568 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.259570 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (D.259568, D.259567, __result);
  D.259566 = D.259570;

  <bb 3> :
<L0>:
  return D.259566;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_, funcdef_no=10347, decl_uid=239399, cgraph_uid=6979, symbol_order=7779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.259571;

  <bb 2> :
  D.259571 = __it;

  <bb 3> :
<L0>:
  return D.259571;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_, funcdef_no=11007, decl_uid=247089, cgraph_uid=7639, symbol_order=8441)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259575;
  int * D.259573;

  <bb 2> :
  __result.2190_1 = __result;
  _2 = std::__niter_base<int*> (__result.2190_1);
  _3 = std::__niter_base<const int*, std::vector<int> > (__last);
  _4 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.259575 = std::__copy_move_a1<false, const int*, int*> (_4, _3, _2);
  _5 = D.259575;
  D.259573 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.259573;

}



;; Function std::__niter_base<const int*, std::vector<int> > (_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10770, decl_uid=243984, cgraph_uid=7402, symbol_order=8202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * std::__niter_base<const int*, std::vector<int> > (struct __normal_iterator __it)
{
  const int * D.259576;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (&__it);
  D.259576 = *_1;

  <bb 3> :
<L0>:
  return D.259576;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv, funcdef_no=10935, decl_uid=232277, cgraph_uid=7567, symbol_order=8369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * const & __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  const int * const & D.259578;

  <bb 2> :
  D.259578 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.259578;

}



;; Function std::__copy_move_a1<false, const int*, int*> (_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10772, decl_uid=244138, cgraph_uid=7404, symbol_order=8204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.259582;
  int * D.259580;

  <bb 2> :
  D.259582 = std::__copy_move_a2<false, const int*, int*> (__first, __last, __result);
  D.259580 = D.259582;

  <bb 3> :
<L0>:
  return D.259580;

}



;; Function std::__copy_move_a2<false, const int*, int*> (_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10936, decl_uid=246221, cgraph_uid=7568, symbol_order=8370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.259583;

  <bb 2> :
  D.259583 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.259583;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_, funcdef_no=11008, decl_uid=247110, cgraph_uid=7640, symbol_order=8442)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (const int * __first, const int * __last, int * __result)
{
  const ptrdiff_t _Num;
  int * D.259588;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 4;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.2191_2 = (long unsigned int) _Num;
  _3 = _Num.2191_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.2192_4 = (long unsigned int) _Num;
  _5 = _Num.2192_4 * 4;
  D.259588 = __result + _5;

  <bb 5> :
<L3>:
  return D.259588;

}



;; Function std::__niter_wrap<int*> (_ZSt12__niter_wrapIPiET_RKS1_S1_, funcdef_no=10777, decl_uid=244181, cgraph_uid=7409, symbol_order=8209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_wrap<int*> (int * const & D.246243, int * __res)
{
  int * D.259590;

  <bb 2> :
  D.259590 = __res;

  <bb 3> :
<L0>:
  return D.259590;

}



;; Function std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_ZNSt12_Vector_baseIiSaIiEED2Ev, funcdef_no=7944, decl_uid=167237, cgraph_uid=4576, symbol_order=5368)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.167127._M_end_of_storage;
  _2 = this->_M_impl.D.167127._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.167127._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function Graph::operator= (_ZN5GraphaSERKS_, funcdef_no=7953, decl_uid=218087, cgraph_uid=4584, symbol_order=5376)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct Graph & Graph::operator= (struct Graph * const this, const struct Graph & D.218088)
{
  struct Graph & D.259592;

  <bb 2> :
  _1 = D.218088->V;
  this->V = _1;
  _2 = D.218088->end;
  this->end = _2;
  _3 = D.218088->succ;
  this->succ = _3;
  _4 = D.218088->start;
  this->start = _4;
  _5 = D.218088->find;
  this->find = _5;
  _6 = D.218088->adj;
  this->adj = _6;
  _7 = &D.218088->stack;
  _8 = &this->stack;
  std::vector<int>::operator= (_8, _7);
  D.259592 = this;

  <bb 3> :
<L0>:
  return D.259592;

}



;; Function std::vector<int>::operator= (_ZNSt6vectorIiSaIiEEaSERKS1_, funcdef_no=8934, decl_uid=167362, cgraph_uid=5568, symbol_order=6364)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<int>::operator= (struct vector * const this, const struct vector & __x)
{
  int * D.259627;
  int * __tmp;
  const size_type __xlen;
  struct vector & D.259625;
  struct __normal_iterator D.259622;
  struct __normal_iterator D.259621;
  struct __normal_iterator D.259620;
  struct __normal_iterator D.259619;
  struct __normal_iterator D.259618;
  bool retval.2197;
  struct __normal_iterator D.259613;
  struct __normal_iterator D.259612;
  bool retval.2196;
  bool iftmp.2195;
  bool retval.2194;
  bool retval.2193;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.2193 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ();
  if (retval.2193 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.167814;
  _4 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.167814;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2195 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2195 = 0;

  <bb 8> :
  retval.2194 = iftmp.2195;
  if (retval.2194 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<int>::clear (this);
  _8 = &this->D.167814;
  _9 = this->D.167814._M_impl.D.167127._M_end_of_storage;
  _10 = this->D.167814._M_impl.D.167127._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 4;
  _13 = (long unsigned int) _12;
  _14 = this->D.167814._M_impl.D.167127._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_8, _14, _13);
  this->D.167814._M_impl.D.167127._M_start = 0B;
  this->D.167814._M_impl.D.167127._M_finish = 0B;
  this->D.167814._M_impl.D.167127._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.167814;
  _16 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.167814;
  _18 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<int> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<int>::size (__x);
  _19 = std::vector<int>::capacity (this);
  retval.2196 = __xlen > _19;
  if (retval.2196 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.259612 = std::vector<int>::end (__x);
  D.259613 = std::vector<int>::begin (__x);
  D.259627 = std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (this, __xlen, D.259613, D.259612);
  __tmp = D.259627;
  _20 = &this->D.167814;
  _21 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_20);
  _22 = this->D.167814._M_impl.D.167127._M_finish;
  _23 = this->D.167814._M_impl.D.167127._M_start;
  std::_Destroy<int*, int> (_23, _22, _21);
  _24 = &this->D.167814;
  _25 = this->D.167814._M_impl.D.167127._M_end_of_storage;
  _26 = this->D.167814._M_impl.D.167127._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 4;
  _29 = (long unsigned int) _28;
  _30 = this->D.167814._M_impl.D.167127._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_24, _30, _29);
  this->D.167814._M_impl.D.167127._M_start = __tmp;
  _31 = this->D.167814._M_impl.D.167127._M_start;
  _32 = __xlen * 4;
  _33 = _31 + _32;
  this->D.167814._M_impl.D.167127._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<int>::size (this);
  retval.2197 = __xlen <= _34;
  if (retval.2197 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.167814;
  _36 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_35);
  D.259618 = std::vector<int>::end (this);
  D.259619 = std::vector<int>::begin (this);
  D.259620 = std::vector<int>::end (__x);
  D.259621 = std::vector<int>::begin (__x);
  D.259622 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.259621, D.259620, D.259619);
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (D.259622, D.259618, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.167814._M_impl.D.167127._M_start;
  _38 = __x->D.167814._M_impl.D.167127._M_start;
  _39 = std::vector<int>::size (this);
  _40 = _39 * 4;
  _41 = _38 + _40;
  _42 = __x->D.167814._M_impl.D.167127._M_start;
  std::copy<int*, int*> (_42, _41, _37);
  _43 = &this->D.167814;
  _44 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_43);
  _45 = this->D.167814._M_impl.D.167127._M_finish;
  _46 = __x->D.167814._M_impl.D.167127._M_finish;
  _47 = __x->D.167814._M_impl.D.167127._M_start;
  _48 = std::vector<int>::size (this);
  _49 = _48 * 4;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<int*, int*, int> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.167814._M_impl.D.167127._M_start;
  _52 = __xlen * 4;
  _53 = _51 + _52;
  this->D.167814._M_impl.D.167127._M_finish = _53;

  <bb 17> :
  D.259625 = this;

  <bb 18> :
<L19>:
  return D.259625;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv, funcdef_no=8935, decl_uid=166994, cgraph_uid=5566, symbol_order=6362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ()
{
  bool D.259628;

  <bb 2> :
  D.259628 = 0;

  <bb 3> :
<L0>:
  return D.259628;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv, funcdef_no=8936, decl_uid=166997, cgraph_uid=5567, symbol_order=6363)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ()
{
  bool D.259630;

  <bb 2> :
  D.259630 = 1;

  <bb 3> :
<L0>:
  return D.259630;

}



;; Function std::operator!= (_ZStneRKSaIiES1_, funcdef_no=9781, decl_uid=166880, cgraph_uid=6413, symbol_order=7209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.239367, const struct allocator & D.239368)
{
  bool D.259632;

  <bb 2> :
  D.259632 = 0;

  <bb 3> :
<L0>:
  return D.259632;

}



;; Function std::__alloc_on_copy<std::allocator<int> > (_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_, funcdef_no=9782, decl_uid=232347, cgraph_uid=6414, symbol_order=7210)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<int> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::capacity (_ZNKSt6vectorIiSaIiEE8capacityEv, funcdef_no=9783, decl_uid=167432, cgraph_uid=6415, symbol_order=7211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::capacity (const struct vector * const this)
{
  size_type D.259634;

  <bb 2> :
  _1 = this->D.167814._M_impl.D.167127._M_end_of_storage;
  _2 = this->D.167814._M_impl.D.167127._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.259634 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.259634;

}



;; Function std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPimT_S9_, funcdef_no=9784, decl_uid=232354, cgraph_uid=6416, symbol_order=7212)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
int * std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  int * D.259638;
  int * __result;
  int * D.259636;

  <bb 2> :
  _1 = &this->D.167814;
  D.259638 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_1, __n);
  __result = D.259638;
  _2 = &this->D.167814;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (__first, __last, __result, _3);

  <bb 3> :
  D.259636 = __result;

  <bb 4> :
<L0>:
  return D.259636;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.167814;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_, funcdef_no=9785, decl_uid=232362, cgraph_uid=6417, symbol_order=7213)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.259644;
  struct __normal_iterator D.259643;
  struct __normal_iterator D.259642;

  <bb 2> :
  D.259643 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.259644 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.259642 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.259644, D.259643, __result);

  <bb 3> :
<L0>:
  return D.259642;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_, funcdef_no=10348, decl_uid=239405, cgraph_uid=6981, symbol_order=7781)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  int * D.259648;
  struct __normal_iterator D.259646;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__result);
  _2 = std::__niter_base<const int*, std::vector<int> > (__last);
  _3 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.259648 = std::__copy_move_a1<false, const int*, int*> (_3, _2, _1);
  _4 = D.259648;
  D.259646 = std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (__result, _4);

  <bb 3> :
<L0>:
  return D.259646;

}



;; Function std::__niter_base<int*, std::vector<int> > (_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE, funcdef_no=10771, decl_uid=244135, cgraph_uid=7403, symbol_order=8203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*, std::vector<int> > (struct __normal_iterator __it)
{
  int * D.259649;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__it);
  D.259649 = *_1;

  <bb 3> :
<L0>:
  return D.259649;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_, funcdef_no=10773, decl_uid=244142, cgraph_uid=7405, symbol_order=8205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (struct __normal_iterator __from, int * __res)
{
  struct __normal_iterator D.259651;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 4;
  D.259651 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.259651;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl, funcdef_no=10937, decl_uid=211317, cgraph_uid=7569, symbol_order=8371)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.247116;
  struct __normal_iterator D.247117;
  struct __normal_iterator D.259653;

  <bb 2> :
  _1 = this->_M_current;
  __n.2198_2 = (long unsigned int) __n;
  _3 = __n.2198_2 * 4;
  _4 = _1 + _3;
  D.247116 = _4;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.247117, &D.247116);
  D.259653 = D.247117;
  D.247117 = {CLOBBER};
  D.247116 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.259653;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E, funcdef_no=9786, decl_uid=232368, cgraph_uid=6418, symbol_order=7214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.239434)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_, funcdef_no=10350, decl_uid=239436, cgraph_uid=6982, symbol_order=7782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_, funcdef_no=10774, decl_uid=244166, cgraph_uid=7406, symbol_order=8206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator D.246230, struct __normal_iterator D.246231)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<int*, int*> (_ZSt4copyIPiS0_ET0_T_S2_S1_, funcdef_no=9787, decl_uid=232376, cgraph_uid=6419, symbol_order=7215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259659;
  int * D.259657;

  <bb 2> :
  _1 = std::__miter_base<int*> (__last);
  _2 = std::__miter_base<int*> (__first);
  D.259659 = std::__copy_move_a<false, int*, int*> (_2, _1, __result);
  D.259657 = D.259659;

  <bb 3> :
<L0>:
  return D.259657;

}



;; Function std::__miter_base<int*> (_ZSt12__miter_baseIPiET_S1_, funcdef_no=10351, decl_uid=239452, cgraph_uid=6983, symbol_order=7783)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__miter_base<int*> (int * __it)
{
  int * D.259660;

  <bb 2> :
  D.259660 = __it;

  <bb 3> :
<L0>:
  return D.259660;

}



;; Function std::__copy_move_a<false, int*, int*> (_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10352, decl_uid=239454, cgraph_uid=6984, symbol_order=7784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259664;
  int * D.259662;

  <bb 2> :
  __result.2199_1 = __result;
  _2 = std::__niter_base<int*> (__result.2199_1);
  _3 = std::__niter_base<int*> (__last);
  _4 = std::__niter_base<int*> (__first);
  D.259664 = std::__copy_move_a1<false, int*, int*> (_4, _3, _2);
  _5 = D.259664;
  D.259662 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.259662;

}



;; Function std::__copy_move_a1<false, int*, int*> (_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10776, decl_uid=244177, cgraph_uid=7408, symbol_order=8208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259667;
  int * D.259665;

  <bb 2> :
  D.259667 = std::__copy_move_a2<false, int*, int*> (__first, __last, __result);
  D.259665 = D.259667;

  <bb 3> :
<L0>:
  return D.259665;

}



;; Function std::__copy_move_a2<false, int*, int*> (_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10938, decl_uid=246239, cgraph_uid=7570, symbol_order=8372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259668;

  <bb 2> :
  D.259668 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.259668;

}



;; Function std::__uninitialized_copy_a<int*, int*, int> (_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E, funcdef_no=9788, decl_uid=232380, cgraph_uid=6420, symbol_order=7216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<int*, int*, int> (int * __first, int * __last, int * __result, struct allocator & D.239461)
{
  int * D.259672;
  int * D.259670;

  <bb 2> :
  D.259672 = std::uninitialized_copy<int*, int*> (__first, __last, __result);
  D.259670 = D.259672;

  <bb 3> :
<L0>:
  return D.259670;

}



;; Function std::uninitialized_copy<int*, int*> (_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_, funcdef_no=10353, decl_uid=239463, cgraph_uid=6985, symbol_order=7785)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259675;
  const bool __assignable;
  int * D.259673;

  <bb 2> :
  __assignable = 1;
  D.259675 = std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (__first, __last, __result);
  D.259673 = D.259675;

  <bb 3> :
<L0>:
  return D.259673;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_, funcdef_no=10778, decl_uid=244215, cgraph_uid=7410, symbol_order=8210)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259678;
  int * D.259676;

  <bb 2> :
  D.259678 = std::copy<int*, int*> (__first, __last, __result);
  D.259676 = D.259678;

  <bb 3> :
<L0>:
  return D.259676;

}



;; Function hash_map<tree_node*, var_points_to>::~hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6899, decl_uid=205632, cgraph_uid=3530, symbol_order=4312)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7955, decl_uid=204803, cgraph_uid=4587, symbol_order=5379)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259692;
  bool D.259691;
  size_t i;
  bool iftmp.2201;
  bool retval.2200;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259691 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259691;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259692 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259692;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2201 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2201 = 0;

  <bb 7> :
  retval.2200 = iftmp.2201;
  if (retval.2200 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, var_points_to>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8937, decl_uid=204756, cgraph_uid=5569, symbol_order=6365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.259695;
  bool D.259693;

  <bb 2> :
  D.259695 = hash_map<tree_node*, var_points_to>::hash_entry::is_empty (v);
  D.259693 = D.259695;

  <bb 3> :
<L0>:
  return D.259693;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9789, decl_uid=204586, cgraph_uid=6421, symbol_order=7217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.259696;

  <bb 2> :
  D.259696 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.259696;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10354, decl_uid=239469, cgraph_uid=6986, symbol_order=7786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259698;

  <bb 2> :
  _1 = entry->m_key;
  D.259698 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.259698;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8938, decl_uid=204754, cgraph_uid=5570, symbol_order=6366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.259702;
  bool D.259700;

  <bb 2> :
  D.259702 = hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (v);
  D.259700 = D.259702;

  <bb 3> :
<L0>:
  return D.259700;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9790, decl_uid=204581, cgraph_uid=6422, symbol_order=7218)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.259705;
  bool D.259703;

  <bb 2> :
  D.259705 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  D.259703 = D.259705;

  <bb 3> :
<L0>:
  return D.259703;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10355, decl_uid=239473, cgraph_uid=6987, symbol_order=7787)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259706;

  <bb 2> :
  _1 = entry->m_key;
  D.259706 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.259706;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::remove (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8939, decl_uid=204577, cgraph_uid=5571, symbol_order=6367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9791, decl_uid=232396, cgraph_uid=6423, symbol_order=7219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  var_points_to::~var_points_to (_2);
  return;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8940, decl_uid=218155, cgraph_uid=5572, symbol_order=6368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_map<tree_node*, gimple_array>::~hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6902, decl_uid=205648, cgraph_uid=3533, symbol_order=4315)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7958, decl_uid=190534, cgraph_uid=4590, symbol_order=5382)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259722;
  bool D.259721;
  size_t i;
  bool iftmp.2203;
  bool retval.2202;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.259721 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259721;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.259722 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259722;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2203 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2203 = 0;

  <bb 7> :
  retval.2202 = iftmp.2203;
  if (retval.2202 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<tree_node*, gimple_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8943, decl_uid=190311, cgraph_uid=5575, symbol_order=6371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9793, decl_uid=232406, cgraph_uid=6425, symbol_order=7221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::~hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6905, decl_uid=205664, cgraph_uid=3536, symbol_order=4318)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7961, decl_uid=196960, cgraph_uid=4593, symbol_order=5385)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259736;
  bool D.259735;
  size_t i;
  bool iftmp.2205;
  bool retval.2204;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 168;
  _4 = _2 + _3;
  D.259735 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259735;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 168;
  _9 = _7 + _8;
  D.259736 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259736;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2205 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2205 = 0;

  <bb 7> :
  retval.2204 = iftmp.2205;
  if (retval.2204 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 168;
  _14 = _12 + _13;
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8947, decl_uid=196734, cgraph_uid=5579, symbol_order=6375)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9795, decl_uid=232416, cgraph_uid=6427, symbol_order=7223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<basic_block_def*>::remove (_1);
  _2 = &entry->m_value;
  symbolicinfo::~symbolicinfo (_2);
  return;

}



;; Function ggc_remove<basic_block_def*>::remove (_ZN10ggc_removeIP15basic_block_defE6removeERS1_, funcdef_no=10358, decl_uid=196604, cgraph_uid=6990, symbol_order=7790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<basic_block_def*>::remove (struct basic_block_def * & D.244227)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<cgraph_node*, Graph>::~hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6908, decl_uid=205680, cgraph_uid=3539, symbol_order=4321)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7964, decl_uid=203235, cgraph_uid=4596, symbol_order=5388)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259750;
  bool D.259749;
  size_t i;
  bool iftmp.2207;
  bool retval.2206;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 64;
  _4 = _2 + _3;
  D.259749 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259749;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 64;
  _9 = _7 + _8;
  D.259750 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259750;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2207 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2207 = 0;

  <bb 7> :
  retval.2206 = iftmp.2207;
  if (retval.2206 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 64;
  _14 = _12 + _13;
  hash_map<cgraph_node*, Graph>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::remove (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8951, decl_uid=203009, cgraph_uid=5583, symbol_order=6379)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9797, decl_uid=232426, cgraph_uid=6429, symbol_order=7225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<cgraph_node*>::remove (_1);
  _2 = &entry->m_value;
  Graph::~Graph (_2);
  return;

}



;; Function ggc_remove<cgraph_node*>::remove (_ZN10ggc_removeIP11cgraph_nodeE6removeERS1_, funcdef_no=10360, decl_uid=202879, cgraph_uid=6992, symbol_order=7792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<cgraph_node*>::remove (struct cgraph_node * & D.244231)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_return_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6911, decl_uid=205696, cgraph_uid=3542, symbol_order=4324)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7967, decl_uid=190005, cgraph_uid=4599, symbol_order=5391)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259764;
  bool D.259763;
  size_t i;
  bool iftmp.2209;
  bool retval.2208;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259763 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259763;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259764 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259764;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2209 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2209 = 0;

  <bb 7> :
  retval.2208 = iftmp.2209;
  if (retval.2208 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_return_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8955, decl_uid=189779, cgraph_uid=5587, symbol_order=6383)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9799, decl_uid=232436, cgraph_uid=6431, symbol_order=7227)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_return_array::~function_return_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6914, decl_uid=205712, cgraph_uid=3545, symbol_order=4327)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7970, decl_uid=191156, cgraph_uid=4602, symbol_order=5394)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259778;
  bool D.259777;
  size_t i;
  bool iftmp.2211;
  bool retval.2210;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259777 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259777;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259778 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259778;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2211 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2211 = 0;

  <bb 7> :
  retval.2210 = iftmp.2211;
  if (retval.2210 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_assign_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8959, decl_uid=190930, cgraph_uid=5591, symbol_order=6387)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9801, decl_uid=232446, cgraph_uid=6433, symbol_order=7229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_assign_array::~function_assign_array (_2);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::~hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6917, decl_uid=205728, cgraph_uid=3548, symbol_order=4330)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7973, decl_uid=195086, cgraph_uid=4605, symbol_order=5397)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259792;
  bool D.259791;
  size_t i;
  bool iftmp.2213;
  bool retval.2212;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259791 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259791;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259792 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259792;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2213 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2213 = 0;

  <bb 7> :
  retval.2212 = iftmp.2213;
  if (retval.2212 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8963, decl_uid=194863, cgraph_uid=5595, symbol_order=6391)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9803, decl_uid=232456, cgraph_uid=6435, symbol_order=7231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::~hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6920, decl_uid=205744, cgraph_uid=3551, symbol_order=4333)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7976, decl_uid=193711, cgraph_uid=4608, symbol_order=5400)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259806;
  bool D.259805;
  size_t i;
  bool iftmp.2215;
  bool retval.2214;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259805 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259805;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259806 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259806;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2215 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2215 = 0;

  <bb 7> :
  retval.2214 = iftmp.2215;
  if (retval.2214 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8967, decl_uid=193485, cgraph_uid=5599, symbol_order=6395)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9805, decl_uid=232466, cgraph_uid=6437, symbol_order=7233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::~hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6923, decl_uid=205760, cgraph_uid=3554, symbol_order=4336)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7979, decl_uid=194187, cgraph_uid=4611, symbol_order=5403)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259820;
  bool D.259819;
  size_t i;
  bool iftmp.2217;
  bool retval.2216;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259819 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259819;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259820 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259820;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2217 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2217 = 0;

  <bb 7> :
  retval.2216 = iftmp.2217;
  if (retval.2216 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8971, decl_uid=193961, cgraph_uid=5603, symbol_order=6399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9807, decl_uid=232476, cgraph_uid=6439, symbol_order=7235)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6926, decl_uid=205776, cgraph_uid=3557, symbol_order=4339)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7982, decl_uid=192357, cgraph_uid=4614, symbol_order=5406)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259834;
  bool D.259833;
  size_t i;
  bool iftmp.2219;
  bool retval.2218;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259833 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259833;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259834 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259834;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2219 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2219 = 0;

  <bb 7> :
  retval.2218 = iftmp.2219;
  if (retval.2218 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_path_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8975, decl_uid=192131, cgraph_uid=5607, symbol_order=6403)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9809, decl_uid=232486, cgraph_uid=6441, symbol_order=7237)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_path_array::~function_path_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6929, decl_uid=205792, cgraph_uid=3560, symbol_order=4342)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7985, decl_uid=192839, cgraph_uid=4617, symbol_order=5409)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259848;
  bool D.259847;
  size_t i;
  bool iftmp.2221;
  bool retval.2220;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259847 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259847;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259848 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259848;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2221 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2221 = 0;

  <bb 7> :
  retval.2220 = iftmp.2221;
  if (retval.2220 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_free_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8979, decl_uid=192613, cgraph_uid=5611, symbol_order=6407)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9811, decl_uid=232496, cgraph_uid=6443, symbol_order=7239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_free_array::~function_free_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::~hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6932, decl_uid=205808, cgraph_uid=3563, symbol_order=4345)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7988, decl_uid=205184, cgraph_uid=4620, symbol_order=5412)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259862;
  bool D.259861;
  size_t i;
  bool iftmp.2223;
  bool retval.2222;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.259861 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259861;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.259862 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259862;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2223 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2223 = 0;

  <bb 7> :
  retval.2222 = iftmp.2223;
  if (retval.2222 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, function_graph_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8981, decl_uid=205137, cgraph_uid=5613, symbol_order=6409)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.259865;
  bool D.259863;

  <bb 2> :
  D.259865 = hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (v);
  D.259863 = D.259865;

  <bb 3> :
<L0>:
  return D.259863;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9812, decl_uid=204970, cgraph_uid=6444, symbol_order=7240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.259866;

  <bb 2> :
  D.259866 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.259866;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10368, decl_uid=239539, cgraph_uid=7000, symbol_order=7800)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259868;

  <bb 2> :
  _1 = entry->m_key;
  D.259868 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.259868;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8982, decl_uid=205135, cgraph_uid=5614, symbol_order=6410)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.259872;
  bool D.259870;

  <bb 2> :
  D.259872 = hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (v);
  D.259870 = D.259872;

  <bb 3> :
<L0>:
  return D.259870;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9813, decl_uid=204965, cgraph_uid=6445, symbol_order=7241)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.259875;
  bool D.259873;

  <bb 2> :
  D.259875 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  D.259873 = D.259875;

  <bb 3> :
<L0>:
  return D.259873;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10369, decl_uid=239543, cgraph_uid=7001, symbol_order=7801)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259876;

  <bb 2> :
  _1 = entry->m_key;
  D.259876 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.259876;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8983, decl_uid=204961, cgraph_uid=5615, symbol_order=6411)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9814, decl_uid=232506, cgraph_uid=6446, symbol_order=7242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8984, decl_uid=218419, cgraph_uid=5616, symbol_order=6412)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function std::__cxx11::basic_string<char>::~basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, funcdef_no=7308, decl_uid=126289, cgraph_uid=3940, symbol_order=4729)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::~basic_string (struct basic_string * const this)
{
  <bb 2> :
  std::__cxx11::basic_string<char>::_M_dispose (this);
  _1 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_1);
  *this = {CLOBBER};
  return;

}



;; Function Graph::~Graph (_ZN5GraphD2Ev, funcdef_no=6896, decl_uid=205607, cgraph_uid=3527, symbol_order=4309)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::~Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<int>::~vector (_ZNSt6vectorIiSaIiEED2Ev, funcdef_no=7947, decl_uid=167811, cgraph_uid=4579, symbol_order=5371)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167814;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  _3 = this->D.167814._M_impl.D.167127._M_finish;
  _4 = this->D.167814._M_impl.D.167127._M_start;
  std::_Destroy<int*, int> (_4, _3, _2);
  _5 = &this->D.167814;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function breakpoint::~breakpoint (_ZN10breakpointD2Ev, funcdef_no=6880, decl_uid=204453, cgraph_uid=3511, symbol_order=4293)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::~breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::~basic_string (_1);
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function var_points_to::~var_points_to (_ZN13var_points_toD2Ev, funcdef_no=6873, decl_uid=204274, cgraph_uid=3504, symbol_order=4286)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::~var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EED2Ev, funcdef_no=7883, decl_uid=172467, cgraph_uid=4515, symbol_order=5307)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172470;
  _2 = std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_1);
  _3 = this->D.172470._M_impl.D.171815._M_finish;
  _4 = this->D.172470._M_impl.D.171815._M_start;
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_4, _3, _2);
  _5 = &this->D.172470;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv, funcdef_no=8857, decl_uid=171703, cgraph_uid=5489, symbol_order=6285)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.259879;

  <bb 2> :
  D.259879 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259879;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EES5_EvT_S7_RSaIT0_E, funcdef_no=8858, decl_uid=217647, cgraph_uid=5492, symbol_order=6288)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __first, struct vector * __last, struct allocator & D.230491)
{
  <bb 2> :
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EEEvT_S7_, funcdef_no=9729, decl_uid=231388, cgraph_uid=6362, symbol_order=7158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt4pairI5fdecljESaIS5_EEEEvT_S9_, funcdef_no=10311, decl_uid=239131, cgraph_uid=6943, symbol_order=7743)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (__first);
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_1);
  __first = __first + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt11__addressofISt6vectorISt4pairI5fdecljESaIS3_EEEPT_RS6_, funcdef_no=10744, decl_uid=243732, cgraph_uid=7376, symbol_order=8176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector * std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (struct vector & __r)
{
  struct vector * D.259881;

  <bb 2> :
  D.259881 = __r;

  <bb 3> :
<L0>:
  return D.259881;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyISt6vectorISt4pairI5fdecljESaIS3_EEEvPT_, funcdef_no=10745, decl_uid=243734, cgraph_uid=7377, symbol_order=8177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __pointer)
{
  <bb 2> :
  std::vector<std::pair<fdecl, unsigned int> >::~vector (__pointer);
  return;

}



;; Function std::vector<std::pair<fdecl, unsigned int> >::~vector (_ZNSt6vectorISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=10921, decl_uid=217634, cgraph_uid=7553, symbol_order=8355)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::pair<fdecl, unsigned int> >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.217637;
  _2 = std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_1);
  _3 = this->D.217637._M_impl.D.216982._M_finish;
  _4 = this->D.217637._M_impl.D.216982._M_start;
  std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_4, _3, _2);
  _5 = &this->D.217637;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE19_M_get_Tp_allocatorEv, funcdef_no=11003, decl_uid=216870, cgraph_uid=7635, symbol_order=8437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.259883;

  <bb 2> :
  D.259883 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259883;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_ZSt8_DestroyIPSt4pairI5fdecljES2_EvT_S4_RSaIT0_E, funcdef_no=11004, decl_uid=247034, cgraph_uid=7636, symbol_order=8438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (struct pair * __first, struct pair * __last, struct allocator & D.247420)
{
  <bb 2> :
  std::_Destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*> (_ZSt8_DestroyIPSt4pairI5fdecljEEvT_S4_, funcdef_no=11040, decl_uid=247422, cgraph_uid=7673, symbol_order=8475)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*> (struct pair * __first, struct pair * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairI5fdecljEEEvT_S6_, funcdef_no=11065, decl_uid=247926, cgraph_uid=7697, symbol_order=8499)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (struct pair * D.248025, struct pair * D.248026)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=11001, decl_uid=217092, cgraph_uid=7633, symbol_order=8435)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.216982._M_end_of_storage;
  _2 = this->_M_impl.D.216982._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.216982._M_start;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE13_M_deallocateEPS2_m, funcdef_no=11039, decl_uid=216989, cgraph_uid=7671, symbol_order=8473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (struct _Vector_base * const this, struct pair * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_ZNSt16allocator_traitsISaISt4pairI5fdecljEEE10deallocateERS3_PS2_m, funcdef_no=11064, decl_uid=216794, cgraph_uid=7696, symbol_order=8498)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (struct allocator_type & __a, struct pair * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEE10deallocateEPS3_m, funcdef_no=11073, decl_uid=216645, cgraph_uid=7705, symbol_order=8507)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (struct new_allocator * const this, struct pair * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE12_Vector_implD2Ev, funcdef_no=10999, decl_uid=217029, cgraph_uid=7630, symbol_order=8432)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::pair<fdecl, unsigned int> >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::pair<fdecl, unsigned int> >::~allocator (_ZNSaISt4pairI5fdecljEED2Ev, funcdef_no=11037, decl_uid=216762, cgraph_uid=7669, symbol_order=8471)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::pair<fdecl, unsigned int> >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEED2Ev, funcdef_no=11062, decl_uid=216691, cgraph_uid=7694, symbol_order=8496)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EED2Ev, funcdef_no=7880, decl_uid=171925, cgraph_uid=4512, symbol_order=5304)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.171815._M_end_of_storage;
  _2 = this->_M_impl.D.171815._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.171815._M_start;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE13_M_deallocateEPS5_m, funcdef_no=8856, decl_uid=171822, cgraph_uid=5488, symbol_order=6284)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (struct _Vector_base * const this, struct vector * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_ZNSt16allocator_traitsISaISt6vectorISt4pairI5fdecljESaIS3_EEEE10deallocateERS6_PS5_m, funcdef_no=9728, decl_uid=171627, cgraph_uid=6360, symbol_order=7156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (struct allocator_type & __a, struct vector * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEE10deallocateEPS6_m, funcdef_no=10310, decl_uid=171478, cgraph_uid=6942, symbol_order=7742)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (struct new_allocator * const this, struct vector * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implD2Ev, funcdef_no=6864, decl_uid=171862, cgraph_uid=3492, symbol_order=4274)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEED2Ev, funcdef_no=7877, decl_uid=171595, cgraph_uid=4509, symbol_order=5301)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEED2Ev, funcdef_no=8854, decl_uid=171524, cgraph_uid=5486, symbol_order=6282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function insert_always_inline (_Z20insert_always_inlinev, funcdef_no=6934, decl_uid=205880, cgraph_uid=3566, symbol_order=4348)

Merging blocks 5 and 33
Removing basic block 24
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
;;
;; Loop 1
;;  header 33, latch 32
;;  depth 1, outer 0
;;  nodes: 33 32 31 5 4 3 30 29 28 6 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;;
;; Loop 2
;;  header 28, latch 27
;;  depth 2, outer 1
;;  nodes: 28 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;; 2 succs { 33 }
;; 3 succs { 35 4 }
;; 4 succs { 5 6 }
;; 5 succs { 32 }
;; 6 succs { 28 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 35 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 17 }
;; 15 succs { 35 16 }
;; 16 succs { 17 }
;; 17 succs { 35 18 }
;; 18 succs { 19 24 }
;; 19 succs { 35 20 }
;; 20 succs { 35 21 }
;; 21 succs { 35 22 }
;; 22 succs { 35 23 }
;; 23 succs { 35 27 }
;; 24 succs { 35 25 }
;; 25 succs { 35 26 }
;; 26 succs { 35 27 }
;; 27 succs { 28 }
;; 28 succs { 7 29 }
;; 29 succs { 35 30 }
;; 30 succs { 35 31 }
;; 31 succs { 32 }
;; 32 succs { 33 }
;; 33 succs { 3 34 }
;; 34 succs { 1 }
;; 35 succs { }
void insert_always_inline ()
{
  struct cgraph_node * D.259927;
  const char * D.259923;
  union tree_node * D.259922;
  union tree_node * D.259921;
  const char * D.259920;
  union tree_node * D.259919;
  union tree_node * D.259918;
  struct cgraph_node * D.259917;
  bool D.259916;
  struct cgraph_node * D.259915;
  union tree_node * callee_tree;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  availability avail;
  union tree_node * attr;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  bool always_inline;
  const char * name;
  struct cgraph_node * node;
  bool retval.2228;
  union tree_node * iftmp.2227;
  struct cgraph_node * iftmp.2226;
  bool retval.2225;

  <bb 2> :
  symtab.2224_1 = symtab;
  D.259915 = symbol_table::first_defined_function (symtab.2224_1);
  node = D.259915;
  goto <bb 33>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.259916 = gimple_has_body_p (_2);

  <bb 4> :
  _3 = D.259916;
  retval.2225 = ~_3;
  if (retval.2225 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by continue predictor.
  avail = {CLOBBER};
  goto <bb 32>; [INV]

  <bb 6> :
  e = node->callees;
  goto <bb 28>; [INV]

  <bb 7> :
  _4 = e->caller;
  _5 = _4->inlined_to;
  if (_5 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _6 = e->caller;
  iftmp.2226 = _6->inlined_to;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.2226 = e->caller;

  <bb 10> :
  caller = iftmp.2226;
  _7 = e->callee;
  D.259917 = cgraph_node::ultimate_alias_target (_7, &avail, caller);

  <bb 11> :
  callee = D.259917;
  if (callee != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _8 = callee->D.97512.decl;
  iftmp.2227 = _8->function_decl.function_specific_optimization;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2227 = 0B;

  <bb 14> :
  callee_tree = iftmp.2227;
  _9 = callee->D.97512.decl;
  _10 = _9->decl_common.attributes;
  if (_10 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _11 = callee->D.97512.decl;
  _12 = _11->decl_common.attributes;
  D.259918 = get_attribute_name (_12);

  <bb 16> :
  attr = D.259918;

  <bb 17> :
  _13 = callee->D.97512.decl;
  _14 = _13->decl_common.attributes;
  D.259919 = lookup_attribute ("noinline", _14);

  <bb 18> :
  _15 = D.259919;
  retval.2228 = _15 == 0B;
  if (retval.2228 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  _16 = callee->D.97512.decl;
  D.259920 = get_name (_16);

  <bb 20> :
  _17 = D.259920;
  stderr.2229_18 = stderr;
  fprintf (stderr.2229_18, "=======node_fun:%s=========\n", _17);

  <bb 21> :
  _19 = callee->D.97512.decl;
  _20 = _19->decl_common.attributes;
  D.259921 = get_identifier_with_length ("noinline", 8);

  <bb 22> :
  _21 = D.259921;
  _22 = callee->D.97512.decl;
  D.259922 = tree_cons (_21, 0B, _20);

  <bb 23> :
  _23 = D.259922;
  _22->decl_common.attributes = _23;
  _24 = callee->D.97512.decl;
  _24->function_decl.disregard_inline_limits = 1;
  _25 = callee->D.97512.decl;
  _26 = _25->decl_common.attributes;
  debug_tree (_26);
  goto <bb 27>; [INV]

  <bb 24> :
  _27 = callee->D.97512.decl;
  D.259923 = get_name (_27);

  <bb 25> :
  _28 = D.259923;
  stderr.2230_29 = stderr;
  fprintf (stderr.2230_29, "=======node_fun:%s=========\n", _28);

  <bb 26> :
  _30 = callee->D.97512.decl;
  _31 = _30->decl_common.attributes;
  debug_tree (_31);

  <bb 27> :
  e = e->next_callee;

  <bb 28> :
  if (e != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _32 = node->D.97512.decl;
  _33 = _32->function_decl.f;
  push_cfun (_33);

  <bb 30> :
  pop_cfun ();

  <bb 31> :
  avail = {CLOBBER};

  <bb 32> :
  symtab.2231_34 = symtab;
  D.259927 = symbol_table::next_defined_function (symtab.2231_34, node);
  node = D.259927;

  <bb 33> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  return;

  <bb 35> :
<L23>:
  avail = {CLOBBER};
  resx 1

}



;; Function lookup_attribute (_ZL16lookup_attributePKcP9tree_node, funcdef_no=3026, decl_uid=110094, cgraph_uid=2128, symbol_order=2293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * lookup_attribute (const char * attr_name, union tree_node * list)
{
  union tree_node * D.259932;
  size_t attr_len;
  union tree_node * D.259930;

  <bb 2> :
  if (list == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.259930 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  attr_len = strlen (attr_name);
  D.259932 = private_lookup_attribute (attr_name, attr_len, list);
  D.259930 = D.259932;

  <bb 5> :
<L2>:
  return D.259930;

}



;; Function test_always (_ZL11test_alwaysv, funcdef_no=6935, decl_uid=205940, cgraph_uid=3567, symbol_order=4356)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int test_always ()
{
  int D.259933;

  <bb 2> :
  insert_always_inline ();
  D.259933 = 0;

  <bb 3> :
<L0>:
  return D.259933;

}



;; Function make_pass_ipa_always (_Z20make_pass_ipa_alwaysPN3gcc7contextE, funcdef_no=6945, decl_uid=206011, cgraph_uid=3577, symbol_order=4366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_ipa_always (struct context * ctxt)
{
  void * D.259937;
  void * D.206013;
  struct ipa_opt_pass_d * D.259935;

  <bb 2> :
  D.259937 = operator new (160);
  D.206013 = D.259937;
  {anonymous}::pass_ipa_always::pass_ipa_always (D.206013, ctxt);

  <bb 3> :
  D.259935 = D.206013;

  <bb 4> :
<L0>:
  return D.259935;

  <bb 5> :
<L1>:
  operator delete (D.206013, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_always::pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysC2EPN3gcc7contextE, funcdef_no=6941, decl_uid=205971, cgraph_uid=3573, symbol_order=4362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::pass_ipa_always (struct pass_ipa_always * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.205974;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &inline_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.205974.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_always::execute (_ZN12_GLOBAL__N_115pass_ipa_always7executeEP8function, funcdef_no=6943, decl_uid=205951, cgraph_uid=3575, symbol_order=4364)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_always::execute (struct pass_ipa_always * const this, struct function * D.205949)
{
  int D.259941;
  unsigned int D.259939;

  <bb 2> :
  D.259941 = test_always ();
  _1 = D.259941;
  D.259939 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.259939;

}



;; Function {anonymous}::pass_ipa_always::clone (_ZN12_GLOBAL__N_115pass_ipa_always5cloneEv, funcdef_no=6944, decl_uid=205954, cgraph_uid=3576, symbol_order=4365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_always * {anonymous}::pass_ipa_always::clone (struct pass_ipa_always * const this)
{
  struct pass_ipa_always * D.259942;

  <bb 2> :
  D.259942 = this;

  <bb 3> :
<L0>:
  return D.259942;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD0Ev, funcdef_no=11081, decl_uid=205959, cgraph_uid=7713, symbol_order=8517)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_always::~pass_ipa_always (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD2Ev, funcdef_no=11079, decl_uid=205965, cgraph_uid=7711, symbol_order=8515)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.205974.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.205974;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD2Ev, funcdef_no=6938, decl_uid=88908, cgraph_uid=3569, symbol_order=4358)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  _1 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _1;
  _2 = &this->D.88937;
  opt_pass::~opt_pass (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD0Ev, funcdef_no=6940, decl_uid=88902, cgraph_uid=3571, symbol_order=4360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  ipa_opt_pass_d::~ipa_opt_pass_d (this);
  operator delete (this, 160);
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD2Ev, funcdef_no=1884, decl_uid=88726, cgraph_uid=1023, symbol_order=1183)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  _1 = &_ZTV8opt_pass + 16;
  this->_vptr.opt_pass = _1;
  *this = {CLOBBER};
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD0Ev, funcdef_no=1886, decl_uid=88720, cgraph_uid=1025, symbol_order=1185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  opt_pass::~opt_pass (this);
  operator delete (this, 88);
  return;

}



;; Function ipa_opt_pass_d::ipa_opt_pass_d (_ZN14ipa_opt_pass_dC2ERK9pass_dataPN3gcc7contextEPFvvES7_S7_S7_S7_PFvP11cgraph_nodePP6gimpleEjPFjS9_EPFvP12varpool_nodeE, funcdef_no=1894, decl_uid=88924, cgraph_uid=1033, symbol_order=1193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::ipa_opt_pass_d (struct ipa_opt_pass_d * const this, const struct pass_data & data, struct context * ctxt, void (*<T6a3>) (void) generate_summary, void (*<T6a3>) (void) write_summary, void (*<T6a3>) (void) read_summary, void (*<T6a3>) (void) write_optimization_summary, void (*<T6a3>) (void) read_optimization_summary, void (*<T57cc>) (struct cgraph_node *, struct gimple * *) stmt_fixup, unsigned int function_transform_todo_flags_start, unsigned int (*<T57ce>) (struct cgraph_node *) function_transform, void (*<T57d1>) (struct varpool_node *) variable_transform)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.88937;
  opt_pass::opt_pass (_1, data, ctxt);
  _2 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _2;
  this->generate_summary = generate_summary;
  this->write_summary = write_summary;
  this->read_summary = read_summary;
  this->write_optimization_summary = write_optimization_summary;
  this->read_optimization_summary = read_optimization_summary;
  this->stmt_fixup = stmt_fixup;
  this->function_transform_todo_flags_start = function_transform_todo_flags_start;
  this->function_transform = function_transform;
  this->variable_transform = variable_transform;
  return;

}



;; Function execute_detect (_ZL14execute_detectv, funcdef_no=6946, decl_uid=206032, cgraph_uid=3578, symbol_order=4367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int execute_detect ()
{
  int D.259944;

  <bb 2> :
  argc.2232_1 = argc;
  argv.2233_2 = argv;
  detect (argv.2233_2, argc.2232_1);
  D.259944 = 0;

  <bb 3> :
<L0>:
  return D.259944;

}



;; Function make_pass_detect (_Z16make_pass_detectPN3gcc7contextE, funcdef_no=6952, decl_uid=89596, cgraph_uid=3584, symbol_order=4373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_detect (struct context * ctxt)
{
  void * D.259948;
  void * D.206077;
  struct ipa_opt_pass_d * D.259946;

  <bb 2> :
  D.259948 = operator new (160);
  D.206077 = D.259948;
  {anonymous}::pass_ipa_detect::pass_ipa_detect (D.206077, ctxt);

  <bb 3> :
  D.259946 = D.206077;

  <bb 4> :
<L0>:
  return D.259946;

  <bb 5> :
<L1>:
  operator delete (D.206077, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_detect::pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectC2EPN3gcc7contextE, funcdef_no=6948, decl_uid=206062, cgraph_uid=3580, symbol_order=4369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::pass_ipa_detect (struct pass_ipa_detect * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.206065;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &detect_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.206065.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_detect::execute (_ZN12_GLOBAL__N_115pass_ipa_detect7executeEP8function, funcdef_no=6950, decl_uid=206042, cgraph_uid=3582, symbol_order=4371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_detect::execute (struct pass_ipa_detect * const this, struct function * D.206040)
{
  int D.259952;
  unsigned int D.259950;

  <bb 2> :
  D.259952 = execute_detect ();
  _1 = D.259952;
  D.259950 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.259950;

}



;; Function {anonymous}::pass_ipa_detect::clone (_ZN12_GLOBAL__N_115pass_ipa_detect5cloneEv, funcdef_no=6951, decl_uid=206045, cgraph_uid=3583, symbol_order=4372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_detect * {anonymous}::pass_ipa_detect::clone (struct pass_ipa_detect * const this)
{
  struct pass_ipa_detect * D.259953;

  <bb 2> :
  D.259953 = this;

  <bb 3> :
<L0>:
  return D.259953;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD0Ev, funcdef_no=11077, decl_uid=206050, cgraph_uid=7709, symbol_order=8512)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_detect::~pass_ipa_detect (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD2Ev, funcdef_no=11075, decl_uid=206056, cgraph_uid=7707, symbol_order=8510)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.206065.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.206065;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function plugin_init (plugin_init, funcdef_no=6953, decl_uid=83835, cgraph_uid=3585, symbol_order=4374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int plugin_init (struct plugin_name_args * plugin_info, struct plugin_gcc_version * version)
{
  struct ipa_opt_pass_d * D.259962;
  struct ipa_opt_pass_d * D.259961;
  bool D.259960;
  int D.259958;
  bool retval.2234;

  <bb 2> :
  D.259960 = plugin_default_version_check (version, &gcc_version);
  _1 = D.259960;
  retval.2234 = ~_1;
  if (retval.2234 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_puts (&"incompatible gcc/plugin versions"[0]);
  D.259958 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = version->devphase;
  _3 = version->basever;
  _4 = plugin_info->full_name;
  stderr.2235_5 = stderr;
  fprintf (stderr.2235_5, "%s %s %s\n", _4, _3, _2);
  g.2236_6 = g;
  D.259961 = make_pass_ipa_always (g.2236_6);
  _7 = D.259961;
  inline_passinfo.pass = _7;
  inline_passinfo.reference_pass_name = "einline";
  inline_passinfo.ref_pass_instance_number = 0;
  inline_passinfo.pos_op = 1;
  g.2237_8 = g;
  D.259962 = make_pass_detect (g.2237_8);
  _9 = D.259962;
  detect_passinfo.pass = _9;
  detect_passinfo.reference_pass_name = "pta";
  detect_passinfo.ref_pass_instance_number = 0;
  detect_passinfo.pos_op = 0;
  _10 = plugin_info->argv;
  argv = _10;
  _11 = plugin_info->argc;
  argc = _11;
  register_callback ("static_analyzer", 2, 0B, &detect_passinfo);
  D.259958 = 0;

  <bb 5> :
<L2>:
  return D.259958;

}



;; Function __static_initialization_and_destruction_0 (_Z41__static_initialization_and_destruction_0ii, funcdef_no=11094, decl_uid=248093, cgraph_uid=7732, symbol_order=8581)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void __static_initialization_and_destruction_0 (int __initialize_p, int __priority)
{
  <bb 2> :
  if (__initialize_p == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__priority == 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::ios_base::Init::Init (&__ioinit);
  __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
  std::basic_ofstream<char>::basic_ofstream (&cfginfo, "cfginfo.txt", 16);
  __cxxabiv1::__cxa_atexit (__dt_comp , &cfginfo, &__dso_handle);
  ptb::ptb (&start1);
  ptb::ptb (&start2);
  ptb::ptb (&start3);
  ptb::ptb (&start4);
  ptb::ptb (&start5);
  ptb::ptb (&start6);
  ptb::ptb (&start7);
  ptb::ptb (&start8);
  ptb::ptb (&start9);
  std::vector<gimple*>::vector (&new_gimple_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimple_array, &__dso_handle);
  std::vector<tree_node*>::vector (&new_gimpletree_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimpletree_array, &__dso_handle);
  std::vector<basic_block_def*>::vector (&new_path_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_path_array, &__dso_handle);
  std::vector<tree_node*>::vector (&traceStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &traceStack, &__dso_handle);
  std::vector<tree_node*>::vector (&pathStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &pathStack, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecution);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecution, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecutionswitch);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecutionswitch, &__dso_handle);
  std::vector<breakpoint>::vector (&vbreakpoint);
  __cxxabiv1::__cxa_atexit (__dt_comp , &vbreakpoint, &__dso_handle);
  std::vector<return_type>::vector (&global_ret_type_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &global_ret_type_array, &__dso_handle);
  CStack::CStack (&stmtStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack, &__dso_handle);
  CstmtStack::CstmtStack (&stmtStack2);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack2, &__dso_handle);

  <bb 5> :
  return;

}



;; Function CstmtStack::~CstmtStack (_ZN10CstmtStackD2Ev, funcdef_no=11099, decl_uid=248121, cgraph_uid=7730, symbol_order=8579)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::~CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183267;
  std::stack<gimple*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<gimple*>::~stack (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6239, decl_uid=186958, cgraph_uid=3214, symbol_order=3978)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::~deque (_ZNSt5dequeIP6gimpleSaIS1_EED2Ev, funcdef_no=7624, decl_uid=183087, cgraph_uid=4256, symbol_order=5048)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::~deque (struct deque * const this)
{
  struct iterator D.211588;
  struct iterator D.211589;

  <bb 2> :
  _1 = &this->D.183090;
  _2 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.211589 = std::deque<gimple*, std::allocator<gimple*> >::end (this); [return slot optimization]
  D.211588 = std::deque<gimple*, std::allocator<gimple*> >::begin (this); [return slot optimization]
  std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (this, &D.211588, &D.211589, _2);
  D.211588 = {CLOBBER};
  D.211589 = {CLOBBER};
  _3 = &this->D.183090;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8452, decl_uid=182329, cgraph_uid=5084, symbol_order=5880)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.259969;

  <bb 2> :
  D.259969 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259969;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::end (_ZNSt5dequeIP6gimpleSaIS1_EE3endEv, funcdef_no=8451, decl_uid=182673, cgraph_uid=5083, symbol_order=5879)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183090._M_impl.D.182484._M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2ERKS4_, funcdef_no=9234, decl_uid=182298, cgraph_uid=5866, symbol_order=6662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::begin (_ZNSt5dequeIP6gimpleSaIS1_EE5beginEv, funcdef_no=8450, decl_uid=182669, cgraph_uid=5082, symbol_order=5878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183090._M_impl.D.182484._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (_ZNSt5dequeIP6gimpleSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8453, decl_uid=182891, cgraph_uid=5085, symbol_order=5881)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.222284)
{
  struct iterator D.222288;
  struct iterator D.222291;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=8448, decl_uid=182539, cgraph_uid=5080, symbol_order=5876)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.182484._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.182484._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.182484._M_start._M_node;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.182484._M_map_size;
  _6 = this->_M_impl.D.182484._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9231, decl_uid=182354, cgraph_uid=5863, symbol_order=6659)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9964, decl_uid=182337, cgraph_uid=6596, symbol_order=7396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (struct _Deque_base * const this, struct gimple * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::__deque_buf_size (_ZSt16__deque_buf_sizem, funcdef_no=5344, decl_uid=156300, cgraph_uid=2738, symbol_order=2928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
size_t std::__deque_buf_size (size_t __size)
{
  size_t iftmp.2238;
  size_t D.259983;

  <bb 2> :
  if (__size <= 511)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.2238 = 512 / __size;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2238 = 1;

  <bb 5> :
  D.259983 = iftmp.2238;

  <bb 6> :
<L3>:
  return D.259983;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9232, decl_uid=182343, cgraph_uid=5864, symbol_order=6660)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (struct _Deque_base * const this, struct gimple * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<gimple**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9965, decl_uid=182333, cgraph_uid=6597, symbol_order=7397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (this);
  std::allocator<gimple**>::allocator<gimple*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10495, decl_uid=182331, cgraph_uid=7127, symbol_order=7927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.259991;

  <bb 2> :
  D.259991 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259991;

}



;; Function std::allocator<gimple**>::allocator<gimple*> (_ZNSaIPP6gimpleEC2IS0_EERKSaIT_E, funcdef_no=10497, decl_uid=241510, cgraph_uid=7129, symbol_order=7929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::allocator<gimple*> (struct allocator * const this, const struct allocator & D.241512)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleEC2Ev, funcdef_no=10846, decl_uid=181999, cgraph_uid=7478, symbol_order=8280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple**> >::deallocate (_ZNSt16allocator_traitsISaIPP6gimpleEE10deallocateERS3_PS2_m, funcdef_no=9969, decl_uid=233879, cgraph_uid=6601, symbol_order=7401)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple**> >::deallocate (struct allocator_type & __a, struct gimple * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE10deallocateEPS3_m, funcdef_no=10502, decl_uid=181958, cgraph_uid=7134, symbol_order=7934)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::deallocate (struct new_allocator * const this, struct gimple * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<gimple**>::~allocator (_ZNSaIPP6gimpleED2Ev, funcdef_no=9967, decl_uid=182075, cgraph_uid=6599, symbol_order=7399)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleED2Ev, funcdef_no=10500, decl_uid=182004, cgraph_uid=7132, symbol_order=7932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implD2Ev, funcdef_no=8443, decl_uid=182971, cgraph_uid=5074, symbol_order=5870)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<gimple*>::~allocator (_ZNSaIP6gimpleED2Ev, funcdef_no=7567, decl_uid=181802, cgraph_uid=4199, symbol_order=4991)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleED2Ev, funcdef_no=8385, decl_uid=181731, cgraph_uid=5017, symbol_order=5813)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function CStack::~CStack (_ZN6CStackD2Ev, funcdef_no=11096, decl_uid=248105, cgraph_uid=7727, symbol_order=8576)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::~CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181621;
  std::stack<tree_node*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<tree_node*>::~stack (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6232, decl_uid=186752, cgraph_uid=3207, symbol_order=3970)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_ZNSt5dequeIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7615, decl_uid=181425, cgraph_uid=4247, symbol_order=5039)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::~deque (struct deque * const this)
{
  struct iterator D.211564;
  struct iterator D.211565;

  <bb 2> :
  _1 = &this->D.181428;
  _2 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.211565 = std::deque<tree_node*, std::allocator<tree_node*> >::end (this); [return slot optimization]
  D.211564 = std::deque<tree_node*, std::allocator<tree_node*> >::begin (this); [return slot optimization]
  std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (this, &D.211564, &D.211565, _2);
  D.211564 = {CLOBBER};
  D.211565 = {CLOBBER};
  _3 = &this->D.181428;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8439, decl_uid=180634, cgraph_uid=5071, symbol_order=5867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.259996;

  <bb 2> :
  D.259996 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259996;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::end (_ZNSt5dequeIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8438, decl_uid=180982, cgraph_uid=5070, symbol_order=5866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181428._M_impl.D.180789._M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2ERKS4_, funcdef_no=9224, decl_uid=180603, cgraph_uid=5856, symbol_order=6652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::begin (_ZNSt5dequeIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=8437, decl_uid=180978, cgraph_uid=5069, symbol_order=5865)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181428._M_impl.D.180789._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (_ZNSt5dequeIP9tree_nodeSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8440, decl_uid=181228, cgraph_uid=5072, symbol_order=5868)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.222231)
{
  struct iterator D.222235;
  struct iterator D.222238;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=8435, decl_uid=180844, cgraph_uid=5067, symbol_order=5863)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.180789._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.180789._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.180789._M_start._M_node;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.180789._M_map_size;
  _6 = this->_M_impl.D.180789._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9221, decl_uid=180659, cgraph_uid=5853, symbol_order=6649)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9951, decl_uid=180642, cgraph_uid=6583, symbol_order=7383)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (struct _Deque_base * const this, union tree_node * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9222, decl_uid=180648, cgraph_uid=5854, symbol_order=6650)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (struct _Deque_base * const this, union tree_node * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<tree_node**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9952, decl_uid=180638, cgraph_uid=6584, symbol_order=7384)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (this);
  std::allocator<tree_node**>::allocator<tree_node*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10481, decl_uid=180636, cgraph_uid=7113, symbol_order=7913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.260012;

  <bb 2> :
  D.260012 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260012;

}



;; Function std::allocator<tree_node**>::allocator<tree_node*> (_ZNSaIPP9tree_nodeEC2IS0_EERKSaIT_E, funcdef_no=10483, decl_uid=241463, cgraph_uid=7115, symbol_order=7915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::allocator<tree_node*> (struct allocator * const this, const struct allocator & D.241465)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeEC2Ev, funcdef_no=10841, decl_uid=180286, cgraph_uid=7473, symbol_order=8275)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::deallocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE10deallocateERS3_PS2_m, funcdef_no=9956, decl_uid=233754, cgraph_uid=6588, symbol_order=7388)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node**> >::deallocate (struct allocator_type & __a, union tree_node * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE10deallocateEPS3_m, funcdef_no=10488, decl_uid=180245, cgraph_uid=7120, symbol_order=7920)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::deallocate (struct new_allocator * const this, union tree_node * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<tree_node**>::~allocator (_ZNSaIPP9tree_nodeED2Ev, funcdef_no=9954, decl_uid=180362, cgraph_uid=6586, symbol_order=7386)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeED2Ev, funcdef_no=10486, decl_uid=180291, cgraph_uid=7118, symbol_order=7918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implD2Ev, funcdef_no=8430, decl_uid=181309, cgraph_uid=5061, symbol_order=5857)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<tree_node*>::~allocator (_ZNSaIP9tree_nodeED2Ev, funcdef_no=7576, decl_uid=180089, cgraph_uid=4208, symbol_order=5000)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeED2Ev, funcdef_no=8395, decl_uid=180018, cgraph_uid=5027, symbol_order=5823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::~vector (_ZNSt6vectorI10breakpointSaIS0_EED2Ev, funcdef_no=11112, decl_uid=186284, cgraph_uid=7744, symbol_order=8951)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186287;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  _3 = this->D.186287._M_impl.D.185632._M_finish;
  _4 = this->D.186287._M_impl.D.185632._M_start;
  std::_Destroy<breakpoint*, breakpoint> (_4, _3, _2);
  _5 = &this->D.186287;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EED2Ev, funcdef_no=7597, decl_uid=185742, cgraph_uid=4229, symbol_order=5021)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.185632._M_end_of_storage;
  _2 = this->_M_impl.D.185632._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.185632._M_start;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implD2Ev, funcdef_no=6213, decl_uid=185679, cgraph_uid=3187, symbol_order=3948)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<breakpoint>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<breakpoint>::~allocator (_ZNSaI10breakpointED2Ev, funcdef_no=7594, decl_uid=185412, cgraph_uid=4226, symbol_order=5018)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointED2Ev, funcdef_no=8415, decl_uid=185341, cgraph_uid=5047, symbol_order=5843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<tree_node*>::~vector (_ZNSt6vectorIP9tree_nodeSaIS1_EED2Ev, funcdef_no=11109, decl_uid=184946, cgraph_uid=7741, symbol_order=8948)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184949;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.184949._M_impl.D.184305._M_finish;
  _4 = this->D.184949._M_impl.D.184305._M_start;
  std::_Destroy<tree_node**, tree_node*> (_4, _3, _2);
  _5 = &this->D.184949;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<tree_node**, tree_node*> (_ZSt8_DestroyIPP9tree_nodeS1_EvT_S3_RSaIT0_E, funcdef_no=9418, decl_uid=224295, cgraph_uid=6050, symbol_order=6846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**, tree_node*> (union tree_node * * __first, union tree_node * * __last, struct allocator & D.236162)
{
  <bb 2> :
  std::_Destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy<tree_node**> (_ZSt8_DestroyIPP9tree_nodeEvT_S3_, funcdef_no=10096, decl_uid=236164, cgraph_uid=6728, symbol_order=7528)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**> (union tree_node * * __first, union tree_node * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<tree_node**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP9tree_nodeEEvT_S5_, funcdef_no=10612, decl_uid=242128, cgraph_uid=7244, symbol_order=8044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<tree_node**> (union tree_node * * D.245526, union tree_node * * D.245527)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7579, decl_uid=184415, cgraph_uid=4211, symbol_order=5003)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.184305._M_end_of_storage;
  _2 = this->_M_impl.D.184305._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.184305._M_start;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implD2Ev, funcdef_no=6193, decl_uid=184352, cgraph_uid=3167, symbol_order=3922)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::~vector (_ZNSt6vectorIP6gimpleSaIS1_EED2Ev, funcdef_no=11106, decl_uid=184032, cgraph_uid=7738, symbol_order=8945)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184035;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.184035._M_impl.D.183391._M_finish;
  _4 = this->D.184035._M_impl.D.183391._M_start;
  std::_Destroy<gimple**, gimple*> (_4, _3, _2);
  _5 = &this->D.184035;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<gimple**, gimple*> (_ZSt8_DestroyIPP6gimpleS1_EvT_S3_RSaIT0_E, funcdef_no=9594, decl_uid=228570, cgraph_uid=6226, symbol_order=7022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**, gimple*> (struct gimple * * __first, struct gimple * * __last, struct allocator & D.237536)
{
  <bb 2> :
  std::_Destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy<gimple**> (_ZSt8_DestroyIPP6gimpleEvT_S3_, funcdef_no=10207, decl_uid=237538, cgraph_uid=6839, symbol_order=7639)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**> (struct gimple * * __first, struct gimple * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<gimple**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP6gimpleEEvT_S5_, funcdef_no=10674, decl_uid=242566, cgraph_uid=7306, symbol_order=8106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<gimple**> (struct gimple * * D.245799, struct gimple * * D.245800)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=7570, decl_uid=183501, cgraph_uid=4202, symbol_order=4994)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.183391._M_end_of_storage;
  _2 = this->_M_impl.D.183391._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.183391._M_start;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implD2Ev, funcdef_no=6183, decl_uid=183438, cgraph_uid=3157, symbol_order=3911)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::vector (_ZNSt6vectorIP6gimpleSaIS1_EEC2Ev, funcdef_no=6187, decl_uid=184027, cgraph_uid=3163, symbol_order=3917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184035;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=6185, decl_uid=183496, cgraph_uid=3160, symbol_order=3914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implC2Ev, funcdef_no=7564, decl_uid=183388, cgraph_uid=4196, symbol_order=4988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.183391;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<gimple*>::allocator (_ZNSaIP6gimpleEC2Ev, funcdef_no=8379, decl_uid=181797, cgraph_uid=5011, symbol_order=5807)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleEC2Ev, funcdef_no=9198, decl_uid=181726, cgraph_uid=5830, symbol_order=6626)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8382, decl_uid=183338, cgraph_uid=5014, symbol_order=5810)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<tree_node*>::vector (_ZNSt6vectorIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6197, decl_uid=184941, cgraph_uid=3173, symbol_order=3928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184949;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6195, decl_uid=184410, cgraph_uid=3170, symbol_order=3925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implC2Ev, funcdef_no=7573, decl_uid=184302, cgraph_uid=4205, symbol_order=4997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.184305;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<tree_node*>::allocator (_ZNSaIP9tree_nodeEC2Ev, funcdef_no=8389, decl_uid=180084, cgraph_uid=5021, symbol_order=5817)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeEC2Ev, funcdef_no=9202, decl_uid=180013, cgraph_uid=5834, symbol_order=6630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8392, decl_uid=184252, cgraph_uid=5024, symbol_order=5820)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<breakpoint>::vector (_ZNSt6vectorI10breakpointSaIS0_EEC2Ev, funcdef_no=6217, decl_uid=186279, cgraph_uid=3193, symbol_order=3954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186287;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EEC2Ev, funcdef_no=6215, decl_uid=185737, cgraph_uid=3190, symbol_order=3951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implC2Ev, funcdef_no=7591, decl_uid=185629, cgraph_uid=4223, symbol_order=5015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<breakpoint>::allocator (this);
  _1 = &this->D.185632;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<breakpoint>::allocator (_ZNSaI10breakpointEC2Ev, funcdef_no=8409, decl_uid=185407, cgraph_uid=5041, symbol_order=5837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointEC2Ev, funcdef_no=9210, decl_uid=185336, cgraph_uid=5842, symbol_order=6638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI10breakpointSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8412, decl_uid=185579, cgraph_uid=5044, symbol_order=5840)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function CStack::CStack (_ZN6CStackC2Ev, funcdef_no=6234, decl_uid=186759, cgraph_uid=3210, symbol_order=3973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181621;
  std::stack<tree_node*>::stack<> (_1);
  return;

}



;; Function std::stack<tree_node*>::stack<> (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7612, decl_uid=186744, cgraph_uid=4244, symbol_order=5036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::deque (_1);
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::deque (_ZNSt5dequeIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=7610, decl_uid=181420, cgraph_uid=4241, symbol_order=5033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181428;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=8432, decl_uid=180839, cgraph_uid=5064, symbol_order=5860)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implC2Ev, funcdef_no=9218, decl_uid=180786, cgraph_uid=5850, symbol_order=6646)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.180789;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9946, decl_uid=180714, cgraph_uid=6578, symbol_order=7378)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2Ev, funcdef_no=10476, decl_uid=180616, cgraph_uid=7108, symbol_order=7908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_initialize_mapEm, funcdef_no=9220, decl_uid=180652, cgraph_uid=5852, symbol_order=6648)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  union tree_node * * * D.260018;
  union tree_node * * * __nfinish;
  union tree_node * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.233712;
  const long unsigned int D.233713;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.233713 = _3;
  D.233712 = 8;
  _4 = std::max<long unsigned int> (&D.233712, &D.233713);
  _5 = *_4;
  this->_M_impl.D.180789._M_map_size = _5;
  D.233712 = {CLOBBER};
  D.233713 = {CLOBBER};
  _6 = this->_M_impl.D.180789._M_map_size;
  D.260018 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (this, _6);
  _7 = D.260018;
  this->_M_impl.D.180789._M_map = _7;
  _8 = this->_M_impl.D.180789._M_map;
  _9 = this->_M_impl.D.180789._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.180789._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.180789._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.180789._M_start._M_first;
  this->_M_impl.D.180789._M_start._M_cur = _20;
  _21 = this->_M_impl.D.180789._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.180789._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.180789._M_map_size;
  _16 = this->_M_impl.D.180789._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.180789._M_map = 0B;
  this->_M_impl.D.180789._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_allocate_mapEm, funcdef_no=9948, decl_uid=180645, cgraph_uid=6580, symbol_order=7380)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
union tree_node * * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  union tree_node * * * D.260024;
  struct _Map_alloc_type __map_alloc;
  union tree_node * * * D.260022;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  D.260024 = std::allocator_traits<std::allocator<tree_node**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.260022 = D.260024;

  <bb 4> :
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.260022;

  <bb 6> :
<L3>:
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::allocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE8allocateERS3_m, funcdef_no=10478, decl_uid=233747, cgraph_uid=7110, symbol_order=7910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * std::allocator_traits<std::allocator<tree_node**> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * * D.260031;
  union tree_node * * * D.260029;

  <bb 2> :
  D.260031 = __gnu_cxx::new_allocator<tree_node**>::allocate (__a, __n, 0B);
  D.260029 = D.260031;

  <bb 3> :
<L0>:
  return D.260029;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE8allocateEmPKv, funcdef_no=10838, decl_uid=180241, cgraph_uid=7471, symbol_order=8273)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * __gnu_cxx::new_allocator<tree_node**>::allocate (struct new_allocator * const this, size_type __n, const void * D.246535)
{
  union tree_node * * * D.260042;
  union tree_node * * * D.260041;
  align_val_t __al;
  union tree_node * * * D.260039;
  bool retval.2239;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2239 = _4 != 0;
  if (retval.2239 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.260042 = operator new (_6);
  D.260039 = D.260042;

  <bb 7> :
<L6>:
  return D.260039;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP9tree_nodeE11_M_max_sizeEv, funcdef_no=10839, decl_uid=180268, cgraph_uid=7470, symbol_order=8272)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.260043;

  <bb 2> :
  D.260043 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.260043;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9949, decl_uid=180655, cgraph_uid=6581, symbol_order=7381)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * D.260045;
  union tree_node * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.260045 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.260045;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10479, decl_uid=180640, cgraph_uid=7111, symbol_order=7911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (struct _Deque_base * const this)
{
  union tree_node * * D.260051;
  union tree_node * * D.260049;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.260051 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_2, _1);
  D.260049 = D.260051;

  <bb 3> :
<L0>:
  return D.260049;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9950, decl_uid=180521, cgraph_uid=6582, symbol_order=7382)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (struct _Deque_iterator * const this, union tree_node * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10480, decl_uid=180453, cgraph_uid=7112, symbol_order=7912)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ()
{
  size_t D.260052;

  <bb 2> :
  D.260052 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.260052;

}



;; Function CstmtStack::CstmtStack (_ZN10CstmtStackC2Ev, funcdef_no=6241, decl_uid=186965, cgraph_uid=3217, symbol_order=3981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183267;
  std::stack<gimple*>::stack<> (_1);
  return;

}



;; Function std::stack<gimple*>::stack<> (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7621, decl_uid=186950, cgraph_uid=4253, symbol_order=5045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::deque (_1);
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::deque (_ZNSt5dequeIP6gimpleSaIS1_EEC2Ev, funcdef_no=7619, decl_uid=183082, cgraph_uid=4250, symbol_order=5042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183090;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=8445, decl_uid=182534, cgraph_uid=5077, symbol_order=5873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implC2Ev, funcdef_no=9228, decl_uid=182481, cgraph_uid=5860, symbol_order=6656)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.182484;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9959, decl_uid=182409, cgraph_uid=6591, symbol_order=7391)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2Ev, funcdef_no=10490, decl_uid=182311, cgraph_uid=7122, symbol_order=7922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_initialize_mapEm, funcdef_no=9230, decl_uid=182347, cgraph_uid=5862, symbol_order=6658)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  struct gimple * * * D.260055;
  struct gimple * * * __nfinish;
  struct gimple * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.233837;
  const long unsigned int D.233838;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.233838 = _3;
  D.233837 = 8;
  _4 = std::max<long unsigned int> (&D.233837, &D.233838);
  _5 = *_4;
  this->_M_impl.D.182484._M_map_size = _5;
  D.233837 = {CLOBBER};
  D.233838 = {CLOBBER};
  _6 = this->_M_impl.D.182484._M_map_size;
  D.260055 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (this, _6);
  _7 = D.260055;
  this->_M_impl.D.182484._M_map = _7;
  _8 = this->_M_impl.D.182484._M_map;
  _9 = this->_M_impl.D.182484._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.182484._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.182484._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.182484._M_start._M_first;
  this->_M_impl.D.182484._M_start._M_cur = _20;
  _21 = this->_M_impl.D.182484._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.182484._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.182484._M_map_size;
  _16 = this->_M_impl.D.182484._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.182484._M_map = 0B;
  this->_M_impl.D.182484._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_allocate_mapEm, funcdef_no=9961, decl_uid=182340, cgraph_uid=6593, symbol_order=7393)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
struct gimple * * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  struct gimple * * * D.260061;
  struct _Map_alloc_type __map_alloc;
  struct gimple * * * D.260059;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  D.260061 = std::allocator_traits<std::allocator<gimple**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.260059 = D.260061;

  <bb 4> :
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.260059;

  <bb 6> :
<L3>:
  std::allocator<gimple**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<gimple**> >::allocate (_ZNSt16allocator_traitsISaIPP6gimpleEE8allocateERS3_m, funcdef_no=10492, decl_uid=233872, cgraph_uid=7124, symbol_order=7924)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * std::allocator_traits<std::allocator<gimple**> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * * D.260068;
  struct gimple * * * D.260066;

  <bb 2> :
  D.260068 = __gnu_cxx::new_allocator<gimple**>::allocate (__a, __n, 0B);
  D.260066 = D.260068;

  <bb 3> :
<L0>:
  return D.260066;

}



;; Function __gnu_cxx::new_allocator<gimple**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE8allocateEmPKv, funcdef_no=10843, decl_uid=181954, cgraph_uid=7476, symbol_order=8278)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * __gnu_cxx::new_allocator<gimple**>::allocate (struct new_allocator * const this, size_type __n, const void * D.246545)
{
  struct gimple * * * D.260079;
  struct gimple * * * D.260078;
  align_val_t __al;
  struct gimple * * * D.260076;
  bool retval.2240;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2240 = _4 != 0;
  if (retval.2240 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.260079 = operator new (_6);
  D.260076 = D.260079;

  <bb 7> :
<L6>:
  return D.260076;

}



;; Function __gnu_cxx::new_allocator<gimple**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP6gimpleE11_M_max_sizeEv, funcdef_no=10844, decl_uid=181981, cgraph_uid=7475, symbol_order=8277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.260080;

  <bb 2> :
  D.260080 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.260080;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9962, decl_uid=182350, cgraph_uid=6594, symbol_order=7394)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * D.260082;
  struct gimple * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.260082 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.260082;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10493, decl_uid=182335, cgraph_uid=7125, symbol_order=7925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (struct _Deque_base * const this)
{
  struct gimple * * D.260088;
  struct gimple * * D.260086;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.260088 = std::allocator_traits<std::allocator<gimple*> >::allocate (_2, _1);
  D.260086 = D.260088;

  <bb 3> :
<L0>:
  return D.260086;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9963, decl_uid=182230, cgraph_uid=6595, symbol_order=7395)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (struct _Deque_iterator * const this, struct gimple * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10494, decl_uid=182164, cgraph_uid=7126, symbol_order=7926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ()
{
  size_t D.260089;

  <bb 2> :
  D.260089 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.260089;

}



;; Function _GLOBAL__sub_I_gcc_plugin.c (_GLOBAL__sub_I_gcc_plugin.c, funcdef_no=11114, decl_uid=248162, cgraph_uid=7746, symbol_order=8953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void _GLOBAL__sub_I_gcc_plugin.c ()
{
  <bb 2> :
  __static_initialization_and_destruction_0 (1, 65535);
  return;

}


