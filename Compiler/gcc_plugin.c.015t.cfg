
;; Function Graph::init_Graph (_ZN5Graph10init_GraphEi, funcdef_no=6151, decl_uid=167779, cgraph_uid=3140, symbol_order=3814)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
void Graph::init_Graph (struct Graph * const this, int V)
{
  void * D.245917;
  struct list * D.168967;
  size_t iftmp.2;
  long int D.168820;
  struct list * D.168819;
  struct list * D.168818;
  struct list * retval.1;
  sizetype D.245902;
  size_t iftmp.0;
  void * D.168817;

  <bb 2> :
  this->V = V;
  D.245902 = (sizetype) V;
  if (D.245902 <= 384307168202282325)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = D.245902 * 24;
  iftmp.0 = _1 + 8;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0 = 18446744073709551615;

  <bb 5> :
  D.245917 = operator new [] (iftmp.0);
  D.168817 = D.245917;
  MEM[(sizetype *)D.168817] = D.245902;
  D.168818 = D.168817 + 8;
  D.168819 = D.168818;
  _2 = D.245902 + 18446744073709551615;
  D.168820 = (long int) _2;
  goto <bb 7>; [INV]

  <bb 6> :
  std::__cxx11::list<int>::list (D.168819);
  D.168819 = D.168819 + 24;
  D.168820 = D.168820 + -1;

  <bb 7> :
  if (D.168820 >= 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  retval.1 = D.168818;
  _8 = D.168817 + 8;
  this->adj = _8;
  return;

}



;; Function std::__cxx11::list<int>::list (_ZNSt7__cxx114listIiSaIiEEC2Ev, funcdef_no=6160, decl_uid=168806, cgraph_uid=3135, symbol_order=3809)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::list (struct list * const this)
{
  <bb 2> :
  _1 = &this->D.168814;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_ZNSt7__cxx1110_List_baseIiSaIiEEC2Ev, funcdef_no=6158, decl_uid=168280, cgraph_uid=3132, symbol_order=3806)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (struct _List_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2Ev, funcdef_no=7506, decl_uid=168069, cgraph_uid=4138, symbol_order=4923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (struct _List_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::_List_node<int> >::allocator (this);
  _1 = &this->_M_node;
  std::__detail::_List_node_header::_List_node_header (_1);
  return;

}



;; Function std::allocator<std::_List_node<int> >::allocator (_ZNSaISt10_List_nodeIiEEC2Ev, funcdef_no=8304, decl_uid=167976, cgraph_uid=4936, symbol_order=5725)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::_List_node<int> >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev, funcdef_no=9121, decl_uid=167905, cgraph_uid=5753, symbol_order=6542)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__detail::_List_node_header::_List_node_header (_ZNSt8__detail17_List_node_headerC2Ev, funcdef_no=4671, decl_uid=144698, cgraph_uid=2594, symbol_order=2784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_List_node_header (struct _List_node_header * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::__detail::_List_node_header::_M_init (this);
  return;

}



;; Function std::__detail::_List_node_header::_M_init (_ZNSt8__detail17_List_node_header7_M_initEv, funcdef_no=4677, decl_uid=144685, cgraph_uid=2600, symbol_order=2790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_M_init (struct _List_node_header * const this)
{
  <bb 2> :
  _1 = &this->D.144700;
  this->D.144700._M_prev = _1;
  _2 = this->D.144700._M_prev;
  this->D.144700._M_next = _2;
  this->_M_size = 0;
  return;

}



;; Function Graph::addEdge (_ZN5Graph7addEdgeEii, funcdef_no=6165, decl_uid=167784, cgraph_uid=3141, symbol_order=3815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::addEdge (struct Graph * const this, int v, int w)
{
  <bb 2> :
  _1 = this->adj;
  _2 = (long unsigned int) v;
  _3 = _2 * 24;
  _4 = _1 + _3;
  std::__cxx11::list<int>::push_back (_4, &w);
  return;

}



;; Function std::__cxx11::list<int>::push_back (_ZNSt7__cxx114listIiSaIiEE9push_backERKi, funcdef_no=7514, decl_uid=168488, cgraph_uid=4146, symbol_order=4931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::push_back (struct list * const this, const value_type & __x)
{
  struct _List_iterator D.245919;

  <bb 2> :
  D.245919 = std::__cxx11::list<int>::end (this);
  std::__cxx11::list<int>::_M_insert<const int&> (this, D.245919, __x);
  return;

}



;; Function std::__cxx11::list<int>::end (_ZNSt7__cxx114listIiSaIiEE3endEv, funcdef_no=7519, decl_uid=168434, cgraph_uid=4151, symbol_order=4936)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::end (struct list * const this)
{
  struct iterator D.209808;
  struct iterator D.245920;

  <bb 2> :
  _1 = &this->D.168814._M_impl._M_node.D.144700;
  std::_List_iterator<int>::_List_iterator (&D.209808, _1);
  D.245920 = D.209808;
  D.209808 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.245920;

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE, funcdef_no=8312, decl_uid=169031, cgraph_uid=4944, symbol_order=5733)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this, struct _List_node_base * __x)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = __x;
  return;

}



;; Function std::__cxx11::list<int>::_M_insert<const int&> (_ZNSt7__cxx114listIiSaIiEE9_M_insertIJRKiEEEvSt14_List_iteratorIiEDpOT_, funcdef_no=8310, decl_uid=209798, cgraph_uid=4942, symbol_order=5731)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::_M_insert<const int&> (struct list * const this, struct iterator __position, const int & __args#0)
{
  struct _Node * D.245923;
  struct _Node * __tmp;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.245923 = std::__cxx11::list<int>::_M_create_node<const int&> (this, _1);
  __tmp = D.245923;
  _2 = &__tmp->D.209853;
  _3 = __position._M_node;
  std::__detail::_List_node_base::_M_hook (_2, _3);
  _4 = &this->D.168814;
  std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_4, 1);
  return;

}



;; Function std::forward<const int&> (_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=9126, decl_uid=220155, cgraph_uid=5758, symbol_order=6547)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const int & std::forward<const int&> (const type & __t)
{
  const int & D.245924;

  <bb 2> :
  D.245924 = __t;

  <bb 3> :
<L0>:
  return D.245924;

}



;; Function std::__cxx11::list<int>::_M_create_node<const int&> (_ZNSt7__cxx114listIiSaIiEE14_M_create_nodeIJRKiEEEPSt10_List_nodeIiEDpOT_, funcdef_no=9127, decl_uid=220157, cgraph_uid=5759, symbol_order=6548)

Merging blocks 3 and 4
Merging blocks 3 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct _Node * std::__cxx11::list<int>::_M_create_node<const int&> (struct list * const this, const int & __args#0)
{
  struct _List_node * D.245928;
  struct __allocated_ptr __guard;
  struct allocator & __alloc;
  struct _List_node * __p;
  struct _Node * D.245926;

  <bb 2> :
  _1 = &this->D.168814;
  D.245928 = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_1);

  <bb 3> :
  __p = D.245928;
  _2 = &this->D.168814;
  __alloc = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_2);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (&__guard, __alloc, __p);
  _3 = std::forward<const int&> (__args#0);
  _4 = std::_List_node<int>::_M_valptr (__p);
  std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (__alloc, _4, _3);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (&__guard, 0);
  D.245926 = __p;
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (&__guard);
  __guard = {CLOBBER};

  <bb 4> :
<L2>:
  return D.245926;

  <bb 5> :
<L3>:
  __guard = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_get_nodeEv, funcdef_no=9858, decl_uid=168182, cgraph_uid=6490, symbol_order=7283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _List_node * std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (struct _List_base * const this)
{
  struct _List_node * D.245934;
  struct _List_node * D.245932;

  <bb 2> :
  _1 = &this->_M_impl;
  D.245934 = std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_1, 1);
  D.245932 = D.245934;

  <bb 3> :
<L0>:
  return D.245932;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE8allocateERS2_m, funcdef_no=10397, decl_uid=168110, cgraph_uid=7029, symbol_order=7822)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct _List_node * std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (struct allocator_type & __a, size_type __n)
{
  struct _List_node * D.245937;
  struct _List_node * D.245935;

  <bb 2> :
  D.245937 = __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (__a, __n, 0B);
  D.245935 = D.245937;

  <bb 3> :
<L0>:
  return D.245935;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8allocateEmPKv, funcdef_no=10755, decl_uid=167860, cgraph_uid=7388, symbol_order=8183)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct _List_node * __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (struct new_allocator * const this, size_type __n, const void * D.244317)
{
  struct _List_node * D.245948;
  struct _List_node * D.245947;
  align_val_t __al;
  struct _List_node * D.245945;
  bool retval.3;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.3 = _4 != 0;
  if (retval.3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.245948 = operator new (_6);
  D.245945 = D.245948;

  <bb 7> :
<L6>:
  return D.245945;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIiEE11_M_max_sizeEv, funcdef_no=10756, decl_uid=167887, cgraph_uid=7387, symbol_order=8182)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (const struct new_allocator * const this)
{
  size_type D.245949;

  <bb 2> :
  D.245949 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.245949;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv, funcdef_no=9123, decl_uid=168188, cgraph_uid=5755, symbol_order=6544)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Node_alloc_type & std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (struct _List_base * const this)
{
  struct _Node_alloc_type & D.245951;

  <bb 2> :
  D.245951 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.245951;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEC2ERS2_PS1_, funcdef_no=9860, decl_uid=231489, cgraph_uid=6492, symbol_order=7285)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (struct __allocated_ptr * const this, struct allocator & __a, struct _List_node * __ptr)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::__addressof<std::allocator<std::_List_node<int> > > (__a);
  this->_M_alloc = _1;
  this->_M_ptr = __ptr;
  return;

}



;; Function std::__addressof<std::allocator<std::_List_node<int> > > (_ZSt11__addressofISaISt10_List_nodeIiEEEPT_RS3_, funcdef_no=10398, decl_uid=239220, cgraph_uid=7030, symbol_order=7823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator * std::__addressof<std::allocator<std::_List_node<int> > > (struct allocator & __r)
{
  struct allocator * D.245953;

  <bb 2> :
  D.245953 = __r;

  <bb 3> :
<L0>:
  return D.245953;

}



;; Function std::_List_node<int>::_M_valptr (_ZNSt10_List_nodeIiE9_M_valptrEv, funcdef_no=8314, decl_uid=209849, cgraph_uid=4946, symbol_order=5735)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::_List_node<int>::_M_valptr (struct _List_node * const this)
{
  int * D.245955;

  <bb 2> :
  _1 = &this->_M_storage;
  D.245955 = __gnu_cxx::__aligned_membuf<int>::_M_ptr (_1);

  <bb 3> :
<L0>:
  return D.245955;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_ptr (_ZN9__gnu_cxx16__aligned_membufIiE6_M_ptrEv, funcdef_no=9129, decl_uid=209831, cgraph_uid=5761, symbol_order=6550)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * __gnu_cxx::__aligned_membuf<int>::_M_ptr (struct __aligned_membuf * const this)
{
  int * D.245957;

  <bb 2> :
  D.245957 = __gnu_cxx::__aligned_membuf<int>::_M_addr (this);

  <bb 3> :
<L0>:
  return D.245957;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_addr (_ZN9__gnu_cxx16__aligned_membufIiE7_M_addrEv, funcdef_no=9867, decl_uid=209827, cgraph_uid=6499, symbol_order=7292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void * __gnu_cxx::__aligned_membuf<int>::_M_addr (struct __aligned_membuf * const this)
{
  void * D.245959;

  <bb 2> :
  D.245959 = &this->_M_storage;

  <bb 3> :
<L0>:
  return D.245959;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_, funcdef_no=9865, decl_uid=231511, cgraph_uid=6497, symbol_order=7290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=10399, decl_uid=239235, cgraph_uid=7031, symbol_order=7824)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.242787;
  void * D.242786;
  int D.242788;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.242788 = *_1;
  D.242786 = __p;
  D.242787 = operator new (4, D.242786);
  MEM[(int *)D.242787] = D.242788;
  return;

}



;; Function operator new (_ZnwmPv, funcdef_no=15, decl_uid=3700, cgraph_uid=16, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
void * operator new (size_t D.3698, void * __p)
{
  void * D.245961;

  <bb 2> :
  D.245961 = __p;

  <bb 3> :
<L0>:
  return D.245961;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEaSEDn, funcdef_no=9866, decl_uid=231462, cgraph_uid=6498, symbol_order=7291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __allocated_ptr & std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (struct __allocated_ptr * const this, <<< Unknown tree: nullptr_type >>> D.239239)
{
  struct __allocated_ptr & D.245963;

  <bb 2> :
  this->_M_ptr = 0B;
  D.245963 = this;

  <bb 3> :
<L0>:
  return D.245963;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEED2Ev, funcdef_no=9863, decl_uid=231496, cgraph_uid=6495, symbol_order=7288)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (struct __allocated_ptr * const this)
{
  <bb 2> :
  _1 = this->_M_ptr;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_ptr;
  _3 = this->_M_alloc;
  std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_3, _2, 1);

  <bb 4> :
  *this = {CLOBBER};
  return;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE10deallocateERS2_PS1_m, funcdef_no=9857, decl_uid=168117, cgraph_uid=6489, symbol_order=7282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (struct allocator_type & __a, struct _List_node * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE10deallocateEPS2_m, funcdef_no=10396, decl_uid=167864, cgraph_uid=7028, symbol_order=7821)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (struct new_allocator * const this, struct _List_node * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_inc_sizeEm, funcdef_no=9128, decl_uid=168080, cgraph_uid=5760, symbol_order=6549)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (struct _List_base * const this, size_t __n)
{
  <bb 2> :
  _1 = this->_M_impl._M_node._M_size;
  _2 = __n + _1;
  this->_M_impl._M_node._M_size = _2;
  return;

}



;; Function Graph::DFSUtil (_ZN5Graph7DFSUtilEiPb, funcdef_no=6166, decl_uid=167775, cgraph_uid=3142, symbol_order=3816)

Removing basic block 13
Removing basic block 15
Removing basic block 18
Removing basic block 20
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 5 16 15 9 14 10 13 12 11 8 7 6 3 4
;;
;; Loop 2
;;  header 15, latch 14
;;  depth 2, outer 1
;;  nodes: 15 14 10 13 12 11
;; 2 succs { 18 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 17 }
;; 6 succs { 20 7 }
;; 7 succs { 20 8 }
;; 8 succs { 9 16 }
;; 9 succs { 15 }
;; 10 succs { 11 14 }
;; 11 succs { 12 13 }
;; 12 succs { 20 14 }
;; 13 succs { 20 14 }
;; 14 succs { 15 }
;; 15 succs { 10 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 3 19 }
;; 19 succs { 1 }
;; 20 succs { }
void Graph::DFSUtil (struct Graph * const this, int v, bool * visited)
{
  struct iterator i;
  struct iterator D.169074;
  bool retval.12;
  bool retval.11;
  bool retval.8;
  bool retval.7;
  bool * visited.6;
  bool retval.5;
  bool retval.4;

  <bb 2> :
  _1 = (sizetype) v;
  _2 = visited + _1;
  *_2 = 1;
  std::_List_iterator<int>::_List_iterator (&i);
  _3 = this->adj;
  _4 = (long unsigned int) v;
  _5 = _4 * 24;
  _6 = _3 + _5;
  i = std::__cxx11::list<int>::begin (_6);
  goto <bb 18>; [INV]

  <bb 3> :
  _7 = std::_List_iterator<int>::operator* (&i);
  _8 = *_7;
  _9 = this->end;
  retval.4 = _8 == _9;
  if (retval.4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  this->succ = 1;

  <bb 5> :
  visited.6 = visited;
  _10 = std::_List_iterator<int>::operator* (&i);
  _11 = *_10;
  _12 = (sizetype) _11;
  _13 = visited.6 + _12;
  _14 = *_13;
  retval.5 = ~_14;
  if (retval.5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 6> :
  _15 = &this->stack;
  _16 = std::_List_iterator<int>::operator* (&i);
  std::vector<int>::push_back (_15, _16);

  <bb 7> :
  _17 = std::_List_iterator<int>::operator* (&i);
  _18 = *_17;
  Graph::DFSUtil (this, _18, visited);

  <bb 8> :
  _19 = this->succ;
  _20 = (int) _19;
  if (_20 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  goto <bb 15>; [INV]

  <bb 10> :
  _21 = &this->stack;
  _22 = std::vector<int>::operator[] (_21, 0);
  _23 = *_22;
  retval.7 = _23 == 2;
  if (retval.7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  _24 = &this->stack;
  _25 = &this->stack;
  _26 = std::vector<int>::size (_25);
  _27 = _26 + 18446744073709551615;
  _28 = std::vector<int>::operator[] (_24, _27);
  _29 = *_28;
  _30 = this->end;
  retval.8 = _29 != _30;
  if (retval.8 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _31 = &this->stack;
  _32 = &this->stack;
  _33 = std::vector<int>::size (_32);
  _34 = _33 + 18446744073709551615;
  _35 = std::vector<int>::operator[] (_31, _34);
  _36 = *_35;
  stderr.9_37 = stderr;
  fprintf (stderr.9_37, "now stack %d\n", _36);
  goto <bb 14>; [INV]

  <bb 13> :
  _38 = &this->stack;
  _39 = &this->stack;
  _40 = std::vector<int>::size (_39);
  _41 = _40 + 18446744073709551615;
  _42 = std::vector<int>::operator[] (_38, _41);
  _43 = *_42;
  stderr.10_44 = stderr;
  fprintf (stderr.10_44, "find stack %d\n", _43);

  <bb 14> :
  _45 = &this->stack;
  std::vector<int>::pop_back (_45);

  <bb 15> :
  _46 = &this->stack;
  _47 = std::vector<int>::size (_46);
  retval.11 = _47 != 0;
  if (retval.11 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _48 = &this->stack;
  std::vector<int>::pop_back (_48);

  <bb 17> :
  std::_List_iterator<int>::operator++ (&i);

  <bb 18> :
  _49 = this->adj;
  _50 = (long unsigned int) v;
  _51 = _50 * 24;
  _52 = _49 + _51;
  D.169074 = std::__cxx11::list<int>::end (_52);
  retval.12 = std::operator!= (&i, &D.169074);
  D.169074 = {CLOBBER};
  if (retval.12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  i = {CLOBBER};
  return;

  <bb 20> :
<L21>:
  i = {CLOBBER};
  resx 1

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2Ev, funcdef_no=7516, decl_uid=169036, cgraph_uid=4148, symbol_order=4933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = 0B;
  return;

}



;; Function std::__cxx11::list<int>::begin (_ZNSt7__cxx114listIiSaIiEE5beginEv, funcdef_no=7518, decl_uid=168430, cgraph_uid=4150, symbol_order=4935)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::begin (struct list * const this)
{
  struct iterator D.209806;
  struct iterator D.245994;

  <bb 2> :
  _1 = this->D.168814._M_impl._M_node.D.144700._M_next;
  std::_List_iterator<int>::_List_iterator (&D.209806, _1);
  D.245994 = D.209806;
  D.209806 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.245994;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backERKi, funcdef_no=7523, decl_uid=167420, cgraph_uid=4156, symbol_order=4941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, const value_type & __x)
{
  struct __normal_iterator D.246000;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_4, _3, __x);
  _5 = this->D.167768._M_impl.D.167081._M_finish;
  _6 = _5 + 4;
  this->D.167768._M_impl.D.167081._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.246000 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<const int&> (this, D.246000, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_, funcdef_no=8315, decl_uid=209859, cgraph_uid=4947, symbol_order=5736)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=9130, decl_uid=220169, cgraph_uid=5762, symbol_order=6551)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.231526;
  void * D.231525;
  int D.231527;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.231527 = *_1;
  D.231525 = __p;
  D.231526 = operator new (4, D.231525);
  MEM[(int *)D.231526] = D.231527;
  return;

}



;; Function std::vector<int>::end (_ZNSt6vectorIiSaIiEE3endEv, funcdef_no=8316, decl_uid=167353, cgraph_uid=4948, symbol_order=5737)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::end (struct vector * const this)
{
  struct iterator D.220192;
  struct iterator D.246001;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_finish;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.220192, _1);
  D.246001 = D.220192;
  D.220192 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246001;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_, funcdef_no=9132, decl_uid=210106, cgraph_uid=5764, symbol_order=6553)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::_M_realloc_insert<const int&> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=8317, decl_uid=210125, cgraph_uid=4952, symbol_order=5741)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<const int&> (struct vector * const this, struct iterator __position, const int & __args#0)
{
  int * D.246008;
  const size_type D.246007;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.220200;

  <bb 2> :
  D.246007 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.246007;
  __old_start = this->D.167768._M_impl.D.167081._M_start;
  __old_finish = this->D.167768._M_impl.D.167081._M_finish;
  D.220200 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.220200);
  __elems_before = (const size_type) _1;
  D.220200 = {CLOBBER};
  _2 = &this->D.167768;
  D.246008 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.246008;
  __new_finish = __new_start;
  _3 = std::forward<const int&> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167768;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167768;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167768;
  _23 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167768._M_impl.D.167081._M_start = __new_start;
  this->D.167768._M_impl.D.167081._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::_M_check_len (_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc, funcdef_no=9134, decl_uid=167615, cgraph_uid=5766, symbol_order=6555)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<int>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.15;
  size_type D.246012;
  const long unsigned int D.231536;
  bool retval.13;

  <bb 2> :
  _1 = std::vector<int>::max_size (this);
  _2 = std::vector<int>::size (this);
  _3 = _1 - _2;
  __n.14_4 = __n;
  retval.13 = _3 < __n.14_4;
  if (retval.13 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<int>::size (this);
  _6 = std::vector<int>::size (this);
  D.231536 = _6;
  _7 = std::max<long unsigned int> (&D.231536, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.231536 = {CLOBBER};
  _9 = std::vector<int>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<int>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.15 = std::vector<int>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.15 = __len;

  <bb 8> :
  D.246012 = iftmp.15;

  <bb 9> :
<L6>:
  return D.246012;

}



;; Function std::max<long unsigned int> (_ZSt3maxImERKT_S2_S2_, funcdef_no=9869, decl_uid=156763, cgraph_uid=6501, symbol_order=7294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::max<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.246021;

  <bb 2> :
  _1 = *__a;
  _2 = *__b;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.246021 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.246021 = __a;

  <bb 5> :
<L2>:
  return D.246021;

}



;; Function std::vector<int>::max_size (_ZNKSt6vectorIiSaIiEE8max_sizeEv, funcdef_no=9868, decl_uid=167375, cgraph_uid=6500, symbol_order=7293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::max_size (const struct vector * const this)
{
  size_type D.246023;

  <bb 2> :
  _1 = &this->D.167768;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  D.246023 = std::vector<int>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.246023;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=9706, decl_uid=166971, cgraph_uid=6338, symbol_order=7127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.246025;

  <bb 2> :
  D.246025 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246025;

}



;; Function std::vector<int>::_S_max_size (_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_, funcdef_no=10400, decl_uid=167622, cgraph_uid=7032, symbol_order=7825)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.246027;

  <bb 2> :
  __diffmax = 2305843009213693951;
  _1 = std::allocator_traits<std::allocator<int> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.246027 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246027;

}



;; Function std::allocator_traits<std::allocator<int> >::max_size (_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_, funcdef_no=10757, decl_uid=166906, cgraph_uid=7389, symbol_order=8184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<int> >::max_size (const struct allocator_type & __a)
{
  size_type D.246030;

  <bb 2> :
  D.246030 = __gnu_cxx::new_allocator<int>::max_size (__a);

  <bb 3> :
<L0>:
  return D.246030;

}



;; Function __gnu_cxx::new_allocator<int>::max_size (_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv, funcdef_no=10895, decl_uid=166748, cgraph_uid=7527, symbol_order=8322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::max_size (const struct new_allocator * const this)
{
  size_type D.246032;

  <bb 2> :
  D.246032 = __gnu_cxx::new_allocator<int>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.246032;

}



;; Function __gnu_cxx::new_allocator<int>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv, funcdef_no=10402, decl_uid=166767, cgraph_uid=7033, symbol_order=7826)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.246034;

  <bb 2> :
  D.246034 = 2305843009213693951;

  <bb 3> :
<L0>:
  return D.246034;

}



;; Function std::min<long unsigned int> (_ZSt3minImERKT_S2_S2_, funcdef_no=10758, decl_uid=114557, cgraph_uid=7390, symbol_order=8185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::min<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.246038;

  <bb 2> :
  _1 = *__b;
  _2 = *__a;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.246038 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.246038 = __a;

  <bb 5> :
<L2>:
  return D.246038;

}



;; Function std::vector<int>::begin (_ZNSt6vectorIiSaIiEE5beginEv, funcdef_no=9135, decl_uid=167349, cgraph_uid=5767, symbol_order=6556)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::begin (struct vector * const this)
{
  struct iterator D.231538;
  struct iterator D.246040;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_start;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.231538, _1);
  D.246040 = D.231538;
  D.231538 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246040;

}



;; Function __gnu_cxx::operator-<int*, std::vector<int> > (_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_, funcdef_no=9136, decl_uid=220201, cgraph_uid=5768, symbol_order=6557)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<int*, std::vector<int> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.246043;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.246043 = _5 /[ex] 4;

  <bb 3> :
<L0>:
  return D.246043;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_allocate (_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm, funcdef_no=9137, decl_uid=167085, cgraph_uid=5769, symbol_order=6558)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * std::_Vector_base<int, std::allocator<int> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  int * D.246051;
  int * iftmp.16;
  int * D.246045;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.246051 = std::allocator_traits<std::allocator<int> >::allocate (_1, __n);
  iftmp.16 = D.246051;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.16 = 0B;

  <bb 5> :
  D.246045 = iftmp.16;

  <bb 6> :
<L3>:
  return D.246045;

}



;; Function std::allocator_traits<std::allocator<int> >::allocate (_ZNSt16allocator_traitsISaIiEE8allocateERS0_m, funcdef_no=9870, decl_uid=166886, cgraph_uid=6502, symbol_order=7295)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int * std::allocator_traits<std::allocator<int> >::allocate (struct allocator_type & __a, size_type __n)
{
  int * D.246054;
  int * D.246052;

  <bb 2> :
  D.246054 = __gnu_cxx::new_allocator<int>::allocate (__a, __n, 0B);
  D.246052 = D.246054;

  <bb 3> :
<L0>:
  return D.246052;

}



;; Function __gnu_cxx::new_allocator<int>::allocate (_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv, funcdef_no=10401, decl_uid=166740, cgraph_uid=7034, symbol_order=7827)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
int * __gnu_cxx::new_allocator<int>::allocate (struct new_allocator * const this, size_type __n, const void * D.242794)
{
  int * D.246065;
  int * D.246064;
  align_val_t __al;
  int * D.246062;
  bool retval.17;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<int>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.17 = _4 != 0;
  if (retval.17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 4611686018427387903)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 4;
  D.246065 = operator new (_6);
  D.246062 = D.246065;

  <bb 7> :
<L6>:
  return D.246062;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=8874, decl_uid=166969, cgraph_uid=5506, symbol_order=6295)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.246066;

  <bb 2> :
  D.246066 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246066;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv, funcdef_no=9139, decl_uid=210093, cgraph_uid=5771, symbol_order=6560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * const & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  int * const & D.246068;

  <bb 2> :
  D.246068 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246068;

}



;; Function std::vector<int>::_S_relocate (_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_, funcdef_no=9138, decl_uid=167243, cgraph_uid=5770, symbol_order=6559)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.246071;
  int * D.246070;

  <bb 2> :
  D.246070 = std::vector<int>::_S_do_relocate (__first, __last, __result, __alloc, D.246071);

  <bb 3> :
<L0>:
  return D.246070;

}



;; Function std::vector<int>::_S_do_relocate (_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE, funcdef_no=9871, decl_uid=167231, cgraph_uid=6503, symbol_order=7296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_do_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239256)
{
  int * D.246073;

  <bb 2> :
  D.246073 = std::__relocate_a<int*, int*, std::allocator<int> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.246073;

}



;; Function std::__relocate_a<int*, int*, std::allocator<int> > (_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_, funcdef_no=10403, decl_uid=220365, cgraph_uid=7035, symbol_order=7828)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__relocate_a<int*, int*, std::allocator<int> > (int * __first, int * __last, int * __result, struct allocator & __alloc)
{
  int * D.246075;

  <bb 2> :
  _1 = std::__niter_base<int*> (__result);
  _2 = std::__niter_base<int*> (__last);
  _3 = std::__niter_base<int*> (__first);
  D.246075 = std::__relocate_a_1<int, int> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.246075;

}



;; Function std::__niter_base<int*> (_ZSt12__niter_baseIPiET_S1_, funcdef_no=10697, decl_uid=220371, cgraph_uid=7329, symbol_order=8122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*> (int * __it)
{
  int * D.246077;

  <bb 2> :
  D.246077 = __it;

  <bb 3> :
<L0>:
  return D.246077;

}



;; Function std::__relocate_a_1<int, int> (_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E, funcdef_no=10759, decl_uid=220539, cgraph_uid=7391, symbol_order=8186)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__relocate_a_1<int, int> (int * __first, int * __last, int * __result, struct allocator & D.244334)
{
  ptrdiff_t __count;
  int * D.246082;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 4;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.18_2 = (long unsigned int) __count;
  _3 = __count.18_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.19_4 = (long unsigned int) __count;
  _5 = __count.19_4 * 4;
  D.246082 = __result + _5;

  <bb 5> :
<L3>:
  return D.246082;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim, funcdef_no=8873, decl_uid=167088, cgraph_uid=5505, symbol_order=6294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_deallocate (struct _Vector_base * const this, int * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<int> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::deallocate (_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim, funcdef_no=9686, decl_uid=166893, cgraph_uid=6318, symbol_order=7107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::deallocate (struct allocator_type & __a, int * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::deallocate (_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim, funcdef_no=10252, decl_uid=166744, cgraph_uid=6884, symbol_order=7677)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<int>::deallocate (struct new_allocator * const this, int * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 4;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_List_iterator<int>::operator* (_ZNKSt14_List_iteratorIiEdeEv, funcdef_no=7522, decl_uid=169007, cgraph_uid=4154, symbol_order=4939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & std::_List_iterator<int>::operator* (const struct _List_iterator * const this)
{
  int & D.246090;

  <bb 2> :
  _1 = this->_M_node;
  D.246090 = std::_List_node<int>::_M_valptr (_1);

  <bb 3> :
<L0>:
  return D.246090;

}



;; Function std::vector<int>::operator[] (_ZNSt6vectorIiSaIiEEixEm, funcdef_no=7526, decl_uid=167393, cgraph_uid=4158, symbol_order=4943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
value_type & std::vector<int>::operator[] (struct vector * const this, size_type __n)
{
  value_type & D.246092;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_start;
  _2 = __n * 4;
  D.246092 = _1 + _2;

  <bb 3> :
<L0>:
  return D.246092;

}



;; Function std::vector<int>::size (_ZNKSt6vectorIiSaIiEE4sizeEv, funcdef_no=7525, decl_uid=167373, cgraph_uid=4157, symbol_order=4942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::size (const struct vector * const this)
{
  size_type D.246094;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.246094 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246094;

}



;; Function std::vector<int>::pop_back (_ZNSt6vectorIiSaIiEE8pop_backEv, funcdef_no=7527, decl_uid=167432, cgraph_uid=4159, symbol_order=4944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = _1 + 18446744073709551612;
  this->D.167768._M_impl.D.167081._M_finish = _2;
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::destroy<int> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::destroy<int> (_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_, funcdef_no=8321, decl_uid=210133, cgraph_uid=4953, symbol_order=5742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::destroy<int> (struct allocator_type & __a, int * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::destroy<int> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::destroy<int> (_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_, funcdef_no=9140, decl_uid=220551, cgraph_uid=5772, symbol_order=6561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::destroy<int> (struct new_allocator * const this, int * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::_List_iterator<int>::operator++ (_ZNSt14_List_iteratorIiEppEv, funcdef_no=7521, decl_uid=169011, cgraph_uid=4153, symbol_order=4938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Self & std::_List_iterator<int>::operator++ (struct _List_iterator * const this)
{
  struct _Self & D.246096;

  <bb 2> :
  _1 = this->_M_node;
  _2 = _1->_M_next;
  this->_M_node = _2;
  D.246096 = this;

  <bb 3> :
<L0>:
  return D.246096;

}



;; Function std::operator!= (_ZStneRKSt14_List_iteratorIiES2_, funcdef_no=7520, decl_uid=169024, cgraph_uid=4152, symbol_order=4937)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct _Self & __x, const struct _Self & __y)
{
  bool D.246098;

  <bb 2> :
  _1 = __x->_M_node;
  _2 = __y->_M_node;
  D.246098 = _1 != _2;

  <bb 3> :
<L0>:
  return D.246098;

}



;; Function Graph::DFS (_ZN5Graph3DFSEi, funcdef_no=6167, decl_uid=167797, cgraph_uid=3143, symbol_order=3817)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void Graph::DFS (struct Graph * const this, int v)
{
  bool * D.246101;
  int i;
  bool * visited;
  sizetype D.246100;

  <bb 2> :
  _1 = this->V;
  D.246100 = (sizetype) _1;
  D.246101 = operator new [] (D.246100);
  visited = D.246101;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (sizetype) i;
  _3 = visited + _2;
  *_3 = 0;
  i = i + 1;

  <bb 4> :
  _4 = this->V;
  if (i < _4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Graph::DFSUtil (this, v, visited);
  return;

}



;; Function Graph::is_succ (_ZN5Graph7is_succEP15basic_block_defS1_, funcdef_no=6168, decl_uid=167793, cgraph_uid=3144, symbol_order=3818)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
bool Graph::is_succ (struct Graph * const this, struct basic_block_def * bb1, struct basic_block_def * bb2)
{
  bool D.246102;
  value_type D.169110;

  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::clear (_1);
  _2 = bb2->index;
  this->end = _2;
  this->succ = 0;
  _3 = &this->stack;
  D.169110 = 2;
  std::vector<int>::push_back (_3, &D.169110);

  <bb 3> :
  D.169110 = {CLOBBER};
  Graph::DFS (this, 2);
  D.246102 = this->succ;

  <bb 4> :
<L0>:
  return D.246102;

  <bb 5> :
<L1>:
  D.169110 = {CLOBBER};
  resx 1

}



;; Function std::vector<int>::clear (_ZNSt6vectorIiSaIiEE5clearEv, funcdef_no=7528, decl_uid=167475, cgraph_uid=4160, symbol_order=4945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_start;
  std::vector<int>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<int>::_M_erase_at_end (_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi, funcdef_no=8322, decl_uid=167624, cgraph_uid=4954, symbol_order=5743)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<int>::_M_erase_at_end (struct vector * const this, int * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 4;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.167768;
  _5 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_4);
  _6 = this->D.167768._M_impl.D.167081._M_finish;
  std::_Destroy<int*, int> (__pos, _6, _5);
  this->D.167768._M_impl.D.167081._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Destroy<int*, int> (_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E, funcdef_no=8875, decl_uid=216543, cgraph_uid=5507, symbol_order=6296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*, int> (int * __first, int * __last, struct allocator & D.230081)
{
  <bb 2> :
  std::_Destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy<int*> (_ZSt8_DestroyIPiEvT_S1_, funcdef_no=9687, decl_uid=230083, cgraph_uid=6319, symbol_order=7108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*> (int * __first, int * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<int*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_, funcdef_no=10253, decl_uid=237082, cgraph_uid=6885, symbol_order=7678)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<int*> (int * D.241632, int * D.241633)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backEOi, funcdef_no=7529, decl_uid=167423, cgraph_uid=4161, symbol_order=4946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, value_type & __x)
{
  <bb 2> :
  _1 = std::move<int&> (__x);
  std::vector<int>::emplace_back<int> (this, _1);
  return;

}



;; Function std::move<int&> (_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_, funcdef_no=8323, decl_uid=210228, cgraph_uid=4955, symbol_order=5744)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
type & std::move<int&> (int & __t)
{
  type & D.246108;

  <bb 2> :
  D.246108 = __t;

  <bb 3> :
<L0>:
  return D.246108;

}



;; Function std::vector<int>::emplace_back<int> (_ZNSt6vectorIiSaIiEE12emplace_backIJiEEERiDpOT_, funcdef_no=8324, decl_uid=210230, cgraph_uid=4956, symbol_order=5745)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
value_type & std::vector<int>::emplace_back<int> (struct vector * const this, int & __args#0)
{
  value_type & D.246114;
  struct __normal_iterator D.246113;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = std::forward<int> (__args#0);
  _4 = this->D.167768._M_impl.D.167081._M_finish;
  _5 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, int> (_5, _4, _3);
  _6 = this->D.167768._M_impl.D.167081._M_finish;
  _7 = _6 + 4;
  this->D.167768._M_impl.D.167081._M_finish = _7;
  goto <bb 5>; [INV]

  <bb 4> :
  _8 = std::forward<int> (__args#0);
  D.246113 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<int> (this, D.246113, _8);

  <bb 5> :
  D.246114 = std::vector<int>::back (this);

  <bb 6> :
<L3>:
  return D.246114;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, int> (_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_, funcdef_no=9142, decl_uid=220572, cgraph_uid=5774, symbol_order=6563)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, int> (struct allocator_type & __a, int * __p, int & __args#0)
{
  <bb 2> :
  _1 = std::forward<int> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, int> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, int> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_, funcdef_no=9872, decl_uid=231563, cgraph_uid=6504, symbol_order=7297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, int> (struct new_allocator * const this, int * __p, int & __args#0)
{
  void * D.239262;
  void * D.239261;
  int D.239263;

  <bb 2> :
  _1 = std::forward<int> (__args#0);
  D.239263 = *_1;
  D.239261 = __p;
  D.239262 = operator new (4, D.239261);
  MEM[(int *)D.239262] = D.239263;
  return;

}



;; Function std::forward<int> (_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE, funcdef_no=9141, decl_uid=220570, cgraph_uid=5773, symbol_order=6562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int & std::forward<int> (type & __t)
{
  int & D.246116;

  <bb 2> :
  D.246116 = __t;

  <bb 3> :
<L0>:
  return D.246116;

}



;; Function std::vector<int>::_M_realloc_insert<int> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=9143, decl_uid=220585, cgraph_uid=5775, symbol_order=6564)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<int> (struct vector * const this, struct iterator __position, int & __args#0)
{
  int * D.246122;
  const size_type D.246121;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.231574;

  <bb 2> :
  D.246121 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.246121;
  __old_start = this->D.167768._M_impl.D.167081._M_start;
  __old_finish = this->D.167768._M_impl.D.167081._M_finish;
  D.231574 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.231574);
  __elems_before = (const size_type) _1;
  D.231574 = {CLOBBER};
  _2 = &this->D.167768;
  D.246122 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.246122;
  __new_finish = __new_start;
  _3 = std::forward<int> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, int> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167768;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167768;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167768;
  _23 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167768._M_impl.D.167081._M_start = __new_start;
  this->D.167768._M_impl.D.167081._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::back (_ZNSt6vectorIiSaIiEE4backEv, funcdef_no=9144, decl_uid=167412, cgraph_uid=5776, symbol_order=6565)

Merging blocks 3 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
value_type & std::vector<int>::back (struct vector * const this)
{
  struct iterator D.231580;
  struct __normal_iterator D.231581;
  value_type & D.246123;

  <bb 2> :
  D.231580 = std::vector<int>::end (this);
  D.231581 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (&D.231580, 1);
  D.246123 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (&D.231581);

  <bb 3> :
  D.231581 = {CLOBBER};
  D.231580 = {CLOBBER};

  <bb 4> :
<L2>:
  return D.246123;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl, funcdef_no=9873, decl_uid=210090, cgraph_uid=6505, symbol_order=7298)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.239266;
  struct __normal_iterator D.239267;
  struct __normal_iterator D.246127;

  <bb 2> :
  _1 = this->_M_current;
  __n.20_2 = (long unsigned int) __n;
  _3 = __n.20_2 * 4;
  _4 = -_3;
  _5 = _1 + _4;
  D.239266 = _5;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.239267, &D.239266);
  D.246127 = D.239267;
  D.239267 = {CLOBBER};
  D.239266 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.246127;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv, funcdef_no=9874, decl_uid=210064, cgraph_uid=6506, symbol_order=7299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (const struct __normal_iterator * const this)
{
  int & D.246131;

  <bb 2> :
  D.246131 = this->_M_current;

  <bb 3> :
<L0>:
  return D.246131;

}



;; Function Graph::exist_succ (_ZN5Graph10exist_succEP15basic_block_def, funcdef_no=6169, decl_uid=167788, cgraph_uid=3145, symbol_order=3819)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 }
;; 3 succs { 6 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool Graph::exist_succ (struct Graph * const this, struct basic_block_def * bb)
{
  struct iterator i;
  struct iterator D.169118;
  bool retval.21;
  bool D.246133;

  <bb 2> :
  std::_List_iterator<int>::_List_iterator (&i);
  _1 = this->adj;
  _2 = bb->index;
  _3 = (long unsigned int) _2;
  _4 = _3 * 24;
  _5 = _1 + _4;
  i = std::__cxx11::list<int>::begin (_5);
  goto <bb 4>; [INV]

  <bb 3> :
  D.246133 = 1;
  goto <bb 6>; [INV]

  <bb 4> :
  _6 = this->adj;
  _7 = bb->index;
  _8 = (long unsigned int) _7;
  _9 = _8 * 24;
  _10 = _6 + _9;
  D.169118 = std::__cxx11::list<int>::end (_10);
  retval.21 = std::operator!= (&i, &D.169118);
  D.169118 = {CLOBBER};
  if (retval.21 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.246133 = 0;

  <bb 6> :
  i = {CLOBBER};

  <bb 7> :
<L4>:
  return D.246133;

}



;; Function bb_in_loop_p (_Z12bb_in_loop_pP15basic_block_def, funcdef_no=6237, decl_uid=187054, cgraph_uid=3213, symbol_order=3982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_loop_p (struct basic_block_def * bb)
{
  bool D.246137;

  <bb 2> :
  _1 = bb->loop_father;
  _2 = _1->header;
  _3 = _2->index;
  D.246137 = _3 != 0;

  <bb 3> :
<L0>:
  return D.246137;

}



;; Function bb_in_branch_p (_Z14bb_in_branch_pP6gimple, funcdef_no=6238, decl_uid=187057, cgraph_uid=3214, symbol_order=3983)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_branch_p (struct gimple * stmt)
{
  bool D.246141;
  bool D.246139;

  <bb 2> :
  cfun.22_1 = cfun;
  _2 = cfun.22_1->cfg;
  _3 = _2->x_exit_block_ptr;
  _4 = _3->prev_bb;
  _5 = stmt->bb;
  D.246141 = dominated_by_p (1, _5, _4);
  _6 = D.246141;
  D.246139 = ~_6;

  <bb 3> :
<L0>:
  return D.246139;

}



;; Function init_table (_Z10init_tablev, funcdef_no=6239, decl_uid=187059, cgraph_uid=3215, symbol_order=3984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void init_table ()
{
  <bb 2> :
  start1.target = 0B;
  start1.next = 0B;
  POINTER_NOT_EXIST.23_1 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.24_2 = (int) POINTER_NOT_EXIST.23_1;
  start1.state = POINTER_NOT_EXIST.24_2;
  ptable = &start1;
  start2.target = 0B;
  start2.next = 0B;
  POINTER_NOT_EXIST.25_3 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.26_4 = (int) POINTER_NOT_EXIST.25_3;
  start2.state = POINTER_NOT_EXIST.26_4;
  ftable = &start2;
  return;

}



;; Function Location_b (_Z10Location_bP6gimpleS0_P15basic_block_def, funcdef_no=6240, decl_uid=187064, cgraph_uid=3216, symbol_order=3985)

Merging blocks 9 and 11
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 3
;; 2 succs { 8 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
bool Location_b (struct gimple * a, struct gimple * b, struct basic_block_def * bb)
{
  struct gimple_stmt_iterator gsi;
  struct gimple * gc;
  bool retval.27;
  bool D.246144;

  <bb 2> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 8>; [INV]

  <bb 3> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246144 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 5> :
  if (gc == b)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.246144 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  gsi_next (&gsi);

  <bb 8> :
  _1 = gsi_end_p (gsi);
  retval.27 = ~_1;
  if (retval.27 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  gsi = {CLOBBER};
  D.246144 = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  gsi = {CLOBBER};

  <bb 11> :
<L9>:
  return D.246144;

}



;; Function gsi_start_bb (_ZL12gsi_start_bbP15basic_block_def, funcdef_no=2478, decl_uid=94526, cgraph_uid=1615, symbol_order=1775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple_stmt_iterator gsi_start_bb (struct basic_block_def * bb)
{
  struct gimple * * seq;
  struct gimple_stmt_iterator i [value-expr: <retval>];

  <bb 2> :
  seq = bb_seq_addr (bb);
  _1 = *seq;
  _2 = gimple_seq_first (_1);
  <retval>.ptr = _2;
  <retval>.seq = seq;
  <retval>.bb = bb;

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function bb_seq_addr (_ZL11bb_seq_addrP15basic_block_def, funcdef_no=1994, decl_uid=92233, cgraph_uid=1131, symbol_order=1291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * bb_seq_addr (struct basic_block_def * bb)
{
  struct gimple * * iftmp.28;
  struct gimple * * D.246153;

  <bb 2> :
  _1 = bb->flags;
  _2 = _1 & 512;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.28 = &bb->il.gimple.seq;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.28 = 0B;

  <bb 5> :
  D.246153 = iftmp.28;

  <bb 6> :
<L3>:
  return D.246153;

}



;; Function gimple_seq_first (_ZL16gimple_seq_firstP6gimple, funcdef_no=1984, decl_uid=92193, cgraph_uid=1121, symbol_order=1281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gimple_seq_first (struct gimple * s)
{
  struct gimple * D.246159;

  <bb 2> :
  D.246159 = s;

  <bb 3> :
<L0>:
  return D.246159;

}



;; Function gsi_stmt (_ZL8gsi_stmt20gimple_stmt_iterator, funcdef_no=2485, decl_uid=94558, cgraph_uid=1622, symbol_order=1782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gsi_stmt (struct gimple_stmt_iterator i)
{
  struct gimple * D.246161;

  <bb 2> :
  D.246161 = i.ptr;

  <bb 3> :
<L0>:
  return D.246161;

}



;; Function gsi_next (_ZL8gsi_nextP20gimple_stmt_iterator, funcdef_no=2483, decl_uid=94551, cgraph_uid=1620, symbol_order=1780)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gsi_next (struct gimple_stmt_iterator * i)
{
  <bb 2> :
  _1 = i->ptr;
  _2 = _1->next;
  i->ptr = _2;
  return;

}



;; Function gsi_end_p (_ZL9gsi_end_p20gimple_stmt_iterator, funcdef_no=2481, decl_uid=94545, cgraph_uid=1618, symbol_order=1778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool gsi_end_p (struct gimple_stmt_iterator i)
{
  bool D.246163;

  <bb 2> :
  _1 = i.ptr;
  D.246163 = _1 == 0B;

  <bb 3> :
<L0>:
  return D.246163;

}



;; Function Location_b2 (_Z11Location_b2P6gimpleS0_P9tree_node, funcdef_no=6241, decl_uid=187078, cgraph_uid=3217, symbol_order=3986)

Merging blocks 18 and 20
Removing basic block 22
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 6 21 7 20 8 18 17 9 16 13 10 5 3
;;
;; Loop 2
;;  header 20, latch 18
;;  depth 2, outer 1
;;  nodes: 20 18 17 9 16 13 10
;;
;; Loop 3
;;  header 17, latch 16
;;  depth 3, outer 2
;;  nodes: 17 16 13 10
;; 2 succs { 23 }
;; 3 succs { 4 5 }
;; 4 succs { 22 }
;; 5 succs { 6 7 }
;; 6 succs { 22 }
;; 7 succs { 8 21 }
;; 8 succs { 20 }
;; 9 succs { 17 }
;; 10 succs { 11 13 }
;; 11 succs { 26 12 }
;; 12 succs { 19 }
;; 13 succs { 14 16 }
;; 14 succs { 26 15 }
;; 15 succs { 19 }
;; 16 succs { 17 }
;; 17 succs { 10 18 }
;; 18 succs { 20 }
;; 19 succs { 25 }
;; 20 succs { 9 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 3 24 }
;; 24 succs { 25 }
;; 25 succs { 1 }
;; 26 succs { }
bool Location_b2 (struct gimple * a, struct gimple * b, union tree_node * function_tree)
{
  struct cgraph_node * D.246185;
  bool D.246181;
  struct cgraph_node * D.246180;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct basic_block_def * bb;
  struct cgraph_node * node;
  bool retval.34;
  bool D.246174;
  bool retval.30;

  <bb 2> :
  symtab.29_1 = symtab;
  D.246180 = symbol_table::first_defined_function (symtab.29_1);
  node = D.246180;
  goto <bb 23>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.246181 = gimple_has_body_p (_2);
  _3 = D.246181;
  retval.30 = ~_3;
  if (retval.30 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 5> :
  _4 = node->D.97512.decl;
  _5 = _4->function_decl.f;
  push_cfun (_5);
  cfun.31_6 = cfun;
  if (cfun.31_6 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 7> :
  cfun.32_7 = cfun;
  _8 = cfun.32_7->decl;
  if (function_tree == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 8> :
  calculate_dominance_info (1);
  cfun.33_9 = cfun;
  _10 = cfun.33_9->cfg;
  _11 = _10->x_entry_block_ptr;
  bb = _11->next_bb;
  goto <bb 20>; [INV]

  <bb 9> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 17>; [INV]

  <bb 10> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  D.246174 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 13> :
  if (gc == b)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  pop_cfun ();

  <bb 15> :
  D.246174 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  gsi_next (&gsi);

  <bb 17> :
  _12 = gsi_end_p (gsi);
  retval.34 = ~_12;
  if (retval.34 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  gsi = {CLOBBER};
  bb = bb->next_bb;
  goto <bb 20>; [INV]

  <bb 19> :
  gsi = {CLOBBER};
  goto <bb 25>; [INV]

  <bb 20> :
  cfun.35_13 = cfun;
  _14 = cfun.35_13->cfg;
  _15 = _14->x_exit_block_ptr;
  if (bb != _15)
    goto <bb 9>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  symtab.36_16 = symtab;
  D.246185 = symbol_table::next_defined_function (symtab.36_16, node);
  node = D.246185;

  <bb 23> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  D.246174 = 0;

  <bb 25> :
<L23>:
  return D.246174;

  <bb 26> :
<L24>:
  gsi = {CLOBBER};
  resx 1

}



;; Function symbol_table::first_defined_function (_ZN12symbol_table22first_defined_functionEv, funcdef_no=2571, decl_uid=98657, cgraph_uid=1708, symbol_order=1868)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::first_defined_function (struct symbol_table * const this)
{
  struct cgraph_node * D.246192;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.246190;

  <bb 2> :
  node = this->nodes;
  goto <bb 7>; [INV]

  <bb 3> :
  D.246192 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.246192;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.246190 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node = node->next;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.246190 = 0B;

  <bb 9> :
<L7>:
  return D.246190;

}



;; Function dyn_cast<cgraph_node*, symtab_node> (_Z8dyn_castIP11cgraph_node11symtab_nodeET_PT0_, funcdef_no=7074, decl_uid=97635, cgraph_uid=3706, symbol_order=4488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct cgraph_node * dyn_cast<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.246196;
  bool retval.37;

  <bb 2> :
  retval.37 = is_a<cgraph_node*, symtab_node> (p);
  if (retval.37 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.246196 = reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.246196 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.246196;

}



;; Function is_a<cgraph_node*, symtab_node> (_Z4is_aIP11cgraph_node11symtab_nodeEbPT0_, funcdef_no=7083, decl_uid=99519, cgraph_uid=3715, symbol_order=4497)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  bool D.246198;

  <bb 2> :
  D.246198 = is_a_helper<cgraph_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.246198;

}



;; Function is_a_helper<cgraph_node*>::test<symtab_node> (_ZN11is_a_helperIP11cgraph_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2532, decl_uid=98449, cgraph_uid=1669, symbol_order=1829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<cgraph_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.38;
  bool D.246200;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.38 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.38 = 0;

  <bb 6> :
  D.246200 = iftmp.38;

  <bb 7> :
<L4>:
  return D.246200;

}



;; Function reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP11cgraph_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8085, decl_uid=206074, cgraph_uid=4717, symbol_order=5502)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct cgraph_node * reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.246207;

  <bb 2> :
  D.246207 = p;

  <bb 3> :
<L0>:
  return D.246207;

}



;; Function symbol_table::next_defined_function (_ZN12symbol_table21next_defined_functionEP11cgraph_node, funcdef_no=2572, decl_uid=98661, cgraph_uid=1709, symbol_order=1869)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::next_defined_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.246215;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.246213;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 7>; [INV]

  <bb 3> :
  D.246215 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.246215;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn1->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.246213 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node1 = node1->next;

  <bb 7> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.246213 = 0B;

  <bb 9> :
<L7>:
  return D.246213;

}



;; Function SDBMHash (_Z8SDBMHashPc, funcdef_no=6242, decl_uid=186941, cgraph_uid=3218, symbol_order=3987)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int SDBMHash (char * str)
{
  unsigned int hash;
  unsigned int D.246216;

  <bb 2> :
  _1 = rand ();
  _2 = _1 % 10;
  hash = (unsigned int) _2;
  goto <bb 4>; [INV]

  <bb 3> :
  str.39_3 = str;
  str = str.39_3 + 1;
  _4 = *str.39_3;
  _5 = (unsigned int) _4;
  _6 = hash << 6;
  _7 = _5 + _6;
  _8 = hash << 16;
  _9 = _7 + _8;
  hash = _9 - hash;

  <bb 4> :
  _10 = *str;
  if (_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.246216 = hash & 2147483647;

  <bb 6> :
<L3>:
  return D.246216;

}



;; Function dump_points_to_solution2 (_Z24dump_points_to_solution2P8_IO_FILEP11pt_solution, funcdef_no=6243, decl_uid=186946, cgraph_uid=3219, symbol_order=3989)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
int dump_points_to_solution2 (struct FILE * file, struct pt_solution * pt)
{
  int D.246236;

  <bb 2> :
  _1 = BIT_FIELD_REF <*pt, 8, 0>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_fwrite (", points-to anything", 1, 20, file);

  <bb 4> :
  _3 = BIT_FIELD_REF <*pt, 8, 0>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_fwrite (", points-to non-local", 1, 21, file);

  <bb 6> :
  _5 = BIT_FIELD_REF <*pt, 8, 0>;
  _6 = _5 & 4;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  __builtin_fwrite (", points-to escaped", 1, 19, file);

  <bb 8> :
  _7 = BIT_FIELD_REF <*pt, 8, 0>;
  _8 = _7 & 8;
  if (_8 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  __builtin_fwrite (", points-to unit escaped", 1, 24, file);

  <bb 10> :
  _9 = BIT_FIELD_REF <*pt, 8, 0>;
  _10 = _9 & 16;
  if (_10 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  __builtin_fwrite (", points-to NULL", 1, 16, file);

  <bb 12> :
  _11 = pt->vars;
  if (_11 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  __builtin_fwrite (", points-to vars: ", 1, 18, file);

  <bb 14> :
  D.246236 = 1;

  <bb 15> :
<L18>:
  return D.246236;

}



;; Function printfBasicblock (_Z16printfBasicblockv, funcdef_no=6244, decl_uid=187029, cgraph_uid=3223, symbol_order=3993)

Removing basic block 16
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 30, latch 29
;;  depth 1, outer 0
;;  nodes: 30 29 28 7 12 27 26 17 25 24 22 23 21 20 19 18 16 14 15 13 10 9 8 6 5 11
;;
;; Loop 2
;;  header 26, latch 25
;;  depth 2, outer 1
;;  nodes: 26 25 24 22 23 21 20 19 18
;;
;; Loop 3
;;  header 24, latch 23
;;  depth 3, outer 2
;;  nodes: 24 23
;; 2 succs { 33 3 }
;; 3 succs { 33 4 }
;; 4 succs { 30 }
;; 5 succs { 33 6 }
;; 6 succs { 7 8 }
;; 7 succs { 28 }
;; 8 succs { 33 9 }
;; 9 succs { 33 10 }
;; 10 succs { 11 13 }
;; 11 succs { 33 12 }
;; 12 succs { 28 }
;; 13 succs { 33 14 }
;; 14 succs { 15 16 }
;; 15 succs { 33 16 }
;; 16 succs { 33 17 }
;; 17 succs { 26 }
;; 18 succs { 33 19 }
;; 19 succs { 33 20 }
;; 20 succs { 33 21 }
;; 21 succs { 33 22 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 23 25 }
;; 25 succs { 26 }
;; 26 succs { 18 27 }
;; 27 succs { 33 28 }
;; 28 succs { 33 29 }
;; 29 succs { 30 }
;; 30 succs { 5 31 }
;; 31 succs { 33 32 }
;; 32 succs { 1 }
;; 33 succs { }
void printfBasicblock ()
{
  struct cgraph_node * D.246252;
  bool D.246251;
  const char * D.246250;
  struct function * D.246249;
  bool D.246248;
  struct cgraph_node * D.246247;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.50;
  bool retval.42;

  <bb 2> :
  stderr.40_1 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.40_1);

  <bb 3> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.41_2 = symtab;
  D.246247 = symbol_table::first_function (symtab.41_2);

  <bb 4> :
  node = D.246247;
  goto <bb 30>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.246248 = gimple_has_body_p (_3);

  <bb 6> :
  _4 = D.246248;
  retval.42 = ~_4;
  if (retval.42 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 8> :
  D.246249 = cgraph_node::get_fun (node);

  <bb 9> :
  _5 = D.246249;
  push_cfun (_5);

  <bb 10> :
  cfun.43_6 = cfun;
  if (cfun.43_6 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 13> :
  cfun.44_7 = cfun;
  _8 = cfun.44_7->decl;
  D.246250 = get_name (_8);

  <bb 14> :
  name = D.246250;
  if (name != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  stderr.45_9 = stderr;
  fprintf (stderr.45_9, "=======Mapping node_fun:%s=========\n", name);

  <bb 16> :
  calculate_dominance_info (1);

  <bb 17> :
  cfun.46_10 = cfun;
  _11 = cfun.46_10->cfg;
  _12 = _11->x_entry_block_ptr;
  bb = _12->next_bb;
  goto <bb 26>; [INV]

  <bb 18> :
  D.246251 = bb_in_loop_p (bb);

  <bb 19> :
  _13 = D.246251;
  _14 = (int) _13;
  stderr.47_15 = stderr;
  fprintf (stderr.47_15, "=======is loop:%d=========\n", _14);

  <bb 20> :
  _16 = bb->index;
  stderr.48_17 = stderr;
  fprintf (stderr.48_17, "\n bb index %d \n", _16);

  <bb 21> :
  debug_bb (bb);

  <bb 22> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 24>; [INV]

  <bb 23> :
  gc = gsi_stmt (gsi);
  gimplestmt_count.49_18 = gimplestmt_count;
  _19 = gimplestmt_count.49_18 + 1;
  gimplestmt_count = _19;
  gsi_next (&gsi);

  <bb 24> :
  _20 = gsi_end_p (gsi);
  retval.50 = ~_20;
  if (retval.50 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 26> :
  cfun.51_21 = cfun;
  _22 = cfun.51_21->cfg;
  _23 = _22->x_exit_block_ptr;
  if (bb != _23)
    goto <bb 18>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  pop_cfun ();

  <bb 28> :
  symtab.52_24 = symtab;
  D.246252 = symbol_table::next_function (symtab.52_24, node);

  <bb 29> :
  node = D.246252;

  <bb 30> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  stderr.53_25 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.53_25);

  <bb 32> :
  start = {CLOBBER};
  return;

  <bb 33> :
<L17>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_array::gimple_array (_ZN12gimple_arrayC2Ev, funcdef_no=6246, decl_uid=187119, cgraph_uid=3221, symbol_order=3991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gimple_array::gimple_array (struct gimple_array * const this)
{
  <bb 2> :
  this->size = 0;
  return;

}



;; Function symbol_table::first_function (_ZN12symbol_table14first_functionEv, funcdef_no=2573, decl_uid=98664, cgraph_uid=1710, symbol_order=1870)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::first_function (struct symbol_table * const this)
{
  struct cgraph_node * D.246258;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.246256;

  <bb 2> :
  node = this->nodes;
  goto <bb 6>; [INV]

  <bb 3> :
  D.246258 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.246258;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246256 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node = node->next;

  <bb 6> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.246256 = 0B;

  <bb 8> :
<L5>:
  return D.246256;

}



;; Function symbol_table::next_function (_ZN12symbol_table13next_functionEP11cgraph_node, funcdef_no=2574, decl_uid=98668, cgraph_uid=1711, symbol_order=1871)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::next_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.246263;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.246261;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 6>; [INV]

  <bb 3> :
  D.246263 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.246263;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246261 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node1 = node1->next;

  <bb 6> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.246261 = 0B;

  <bb 8> :
<L5>:
  return D.246261;

}



;; Function print_function_path (_Z19print_function_pathPSt6vectorI11return_typeSaIS0_EE, funcdef_no=6248, decl_uid=187175, cgraph_uid=3224, symbol_order=3994)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void print_function_path (struct vector * path)
{
  int i;
  bool retval.56;

  <bb 2> :
  stderr.54_1 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.54_1);
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (long unsigned int) i;
  _3 = std::vector<return_type>::operator[] (path, _2);
  _4 = _3->stmt;
  debug (_4);
  stderr.55_5 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.55_5);
  i = i + 1;

  <bb 4> :
  _6 = (long unsigned int) i;
  _7 = std::vector<return_type>::size (path);
  retval.56 = _6 < _7;
  if (retval.56 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  stderr.57_8 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.57_8);
  return;

}



;; Function std::vector<return_type>::operator[] (_ZNSt6vectorI11return_typeSaIS0_EEixEm, funcdef_no=7597, decl_uid=173161, cgraph_uid=4229, symbol_order=5014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<return_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.246265;

  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_start;
  _2 = __n * 24;
  D.246265 = _1 + _2;

  <bb 3> :
<L0>:
  return D.246265;

}



;; Function std::vector<return_type>::size (_ZNKSt6vectorI11return_typeSaIS0_EE4sizeEv, funcdef_no=7596, decl_uid=173141, cgraph_uid=4228, symbol_order=5013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::size (const struct vector * const this)
{
  size_type D.246267;

  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_finish;
  _2 = this->D.173508._M_impl.D.172853._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.246267 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246267;

}



;; Function print_function_return2 (_Z22print_function_return2P9tree_node, funcdef_no=6249, decl_uid=187048, cgraph_uid=3231, symbol_order=4001)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return2 (union tree_node * function_tree)
{
  struct function_return_array * D.246275;
  struct function_return_array * D.246274;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.65;
  bool retval.58;

  <bb 2> :
  function_return_collect.59_1 = function_return_collect;
  D.246274 = hash_map<tree_node*, function_return_array>::get (function_return_collect.59_1, &function_tree);

  <bb 3> :
  _2 = D.246274;
  retval.58 = _2 == 0B;
  if (retval.58 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.60_3 = function_return_collect;
  D.246275 = hash_map<tree_node*, function_return_array>::get (function_return_collect.60_3, &function_tree);

  <bb 6> :
  _4 = D.246275;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.61_6 = function_tree;
  stderr.62_7 = stderr;
  fprintf (stderr.62_7, "=======print_function_return %d   %d========\n", function_tree.61_6, _5);

  <bb 9> :
  stderr.63_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.63_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.64_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.64_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.65 = _13 < _14;
  if (retval.65 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.66_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.66_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_return_array>::get (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7598, decl_uid=189537, cgraph_uid=4230, symbol_order=5015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_return_array * hash_map<tree_node*, function_return_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.246289;
  struct hash_entry & D.246288;
  unsigned int D.246287;
  struct hash_entry & e;
  struct function_return_array * iftmp.67;
  struct function_return_array * D.246281;

  <bb 2> :
  _1 = &this->m_table;
  D.246287 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.246287;
  D.246288 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.246288;
  D.246289 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  _3 = D.246289;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.67 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.67 = &e->m_value;

  <bb 5> :
  D.246281 = iftmp.67;

  <bb 6> :
<L3>:
  return D.246281;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE4hashERKS2_, funcdef_no=8420, decl_uid=189493, cgraph_uid=5052, symbol_order=5841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (union tree_node * const & h)
{
  hashval_t D.246290;

  <bb 2> :
  D.246290 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.246290;

}



;; Function pointer_hash<tree_node>::hash (_ZN12pointer_hashI9tree_nodeE4hashERKPS0_, funcdef_no=9189, decl_uid=85298, cgraph_uid=5821, symbol_order=6610)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<tree_node>::hash (union tree_node * const & candidate)
{
  hashval_t D.246292;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.246292 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.246292;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8421, decl_uid=189680, cgraph_uid=5053, symbol_order=5842)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.246326;
  bool D.246325;
  bool D.246324;
  bool D.246323;
  bool D.246322;
  bool D.246321;
  struct value_type * D.246320;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.71;
  bool retval.70;
  struct value_type & D.246306;
  bool iftmp.69;
  bool retval.68;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.246321 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.246321;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.246322 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.246322;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.246323 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _11 = D.246323;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.69 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.69 = 0;

  <bb 8> :
  retval.68 = iftmp.69;
  if (retval.68 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.246306 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.246324 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.246324;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.246325 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.246325;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.246326 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _23 = D.246326;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.71 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.71 = 0;

  <bb 18> :
  retval.70 = iftmp.71;
  if (retval.70 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.246306 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.246306;

}



;; Function hash_table_mod1 (_Z15hash_table_mod1jj, funcdef_no=982, decl_uid=32188, cgraph_uid=280, symbol_order=291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod1 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.246327;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv;
  _4 = p->prime;
  D.246327 = mul_mod (hash, _4, _3, _2);

  <bb 3> :
<L0>:
  return D.246327;

}



;; Function mul_mod (_Z7mul_modjjji, funcdef_no=981, decl_uid=32178, cgraph_uid=279, symbol_order=290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t mul_mod (hashval_t x, hashval_t y, hashval_t inv, int shift)
{
  hashval_t r;
  hashval_t q;
  hashval_t t4;
  hashval_t t3;
  hashval_t t2;
  hashval_t t1;
  hashval_t D.246329;

  <bb 2> :
  _1 = (long unsigned int) x;
  _2 = (long unsigned int) inv;
  _3 = _1 * _2;
  _4 = _3 >> 32;
  t1 = (hashval_t) _4;
  t2 = x - t1;
  t3 = t2 >> 1;
  t4 = t1 + t3;
  q = t4 >> shift;
  _5 = q * y;
  r = x - _5;
  D.246329 = r;

  <bb 3> :
<L0>:
  return D.246329;

}



;; Function hash_table_mod2 (_Z15hash_table_mod2jj, funcdef_no=983, decl_uid=32193, cgraph_uid=281, symbol_order=292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod2 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.246331;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv_m2;
  _4 = p->prime;
  _5 = _4 + 4294967294;
  _6 = mul_mod (hash, _5, _3, _2);
  D.246331 = _6 + 1;

  <bb 3> :
<L0>:
  return D.246331;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8901, decl_uid=189776, cgraph_uid=5533, symbol_order=6322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.246335;
  bool D.246333;

  <bb 2> :
  D.246335 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (v);
  D.246333 = D.246335;

  <bb 3> :
<L0>:
  return D.246333;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8604, decl_uid=189606, cgraph_uid=5236, symbol_order=6025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.246338;
  bool D.246336;

  <bb 2> :
  D.246338 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.246336 = D.246338;

  <bb 3> :
<L0>:
  return D.246336;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8902, decl_uid=189774, cgraph_uid=5534, symbol_order=6323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.246341;
  bool D.246339;

  <bb 2> :
  D.246341 = hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (v);
  D.246339 = D.246341;

  <bb 3> :
<L0>:
  return D.246339;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9730, decl_uid=189601, cgraph_uid=6362, symbol_order=7151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.246344;
  bool D.246342;

  <bb 2> :
  D.246344 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.246342 = D.246344;

  <bb 3> :
<L0>:
  return D.246342;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10290, decl_uid=237338, cgraph_uid=6922, symbol_order=7715)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246345;

  <bb 2> :
  _1 = entry->m_key;
  D.246345 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.246345;

}



;; Function pointer_hash<tree_node>::is_deleted (_ZN12pointer_hashI9tree_nodeE10is_deletedEPS0_, funcdef_no=10510, decl_uid=85308, cgraph_uid=7142, symbol_order=7935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_deleted (union tree_node * e)
{
  bool D.246347;

  <bb 2> :
  D.246347 = e == 1B;

  <bb 3> :
<L0>:
  return D.246347;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9191, decl_uid=189594, cgraph_uid=5823, symbol_order=6612)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.246351;
  bool D.246349;

  <bb 2> :
  _1 = &a->m_key;
  D.246351 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_1, b);
  D.246349 = D.246351;

  <bb 3> :
<L0>:
  return D.246349;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10equal_keysERKS2_S7_, funcdef_no=9908, decl_uid=189495, cgraph_uid=6540, symbol_order=7333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.246352;

  <bb 2> :
  D.246352 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.246352;

}



;; Function pointer_hash<tree_node>::equal (_ZN12pointer_hashI9tree_nodeE5equalERKPS0_S4_, funcdef_no=10437, decl_uid=85300, cgraph_uid=7069, symbol_order=7862)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::equal (union tree_node * const & existing, union tree_node * const & candidate)
{
  bool D.246354;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.246354 = _1 == _2;

  <bb 3> :
<L0>:
  return D.246354;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8422, decl_uid=210380, cgraph_uid=5054, symbol_order=5843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246356;

  <bb 2> :
  _1 = entry->m_key;
  D.246356 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.246356;

}



;; Function pointer_hash<tree_node>::is_empty (_ZN12pointer_hashI9tree_nodeE8is_emptyEPS0_, funcdef_no=9192, decl_uid=85310, cgraph_uid=5824, symbol_order=6613)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_empty (union tree_node * e)
{
  bool D.246358;

  <bb 2> :
  D.246358 = e == 0B;

  <bb 3> :
<L0>:
  return D.246358;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2ERKS_, funcdef_no=6251, decl_uid=189875, cgraph_uid=3226, symbol_order=3996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, const struct function_return_array & D.189877)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.189877->return_type_num;
  this->return_type_num = _1;
  _2 = D.189877->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.189877->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2ERKS2_, funcdef_no=7600, decl_uid=173471, cgraph_uid=4232, symbol_order=5017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<return_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.246364;
  struct __normal_iterator D.246361;
  struct __normal_iterator D.246360;
  struct allocator D.210495;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173508;
  _2 = &__x->D.173508;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  D.210495 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<return_type>::size (__x);
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _4, &D.210495);

  <bb 3> :
  std::allocator<return_type>::~allocator (&D.210495);
  D.210495 = {CLOBBER};
  _5 = &this->D.173508;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.173508._M_impl.D.172853._M_start;
  D.246360 = std::vector<return_type>::end (__x);
  D.246361 = std::vector<return_type>::begin (__x);
  D.246364 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (D.246361, D.246360, _7, _6);

  <bb 4> :
  _8 = D.246364;
  this->D.173508._M_impl.D.172853._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<return_type>::~allocator (&D.210495);
  resx 2

  <bb 6> :
<L1>:
  D.210495 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.173508;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8424, decl_uid=172743, cgraph_uid=5056, symbol_order=5845)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.246366;

  <bb 2> :
  D.246366 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246366;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8423, decl_uid=172715, cgraph_uid=5055, symbol_order=5844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11return_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9193, decl_uid=172680, cgraph_uid=5825, symbol_order=6614)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<return_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2ERKS0_, funcdef_no=9910, decl_uid=172623, cgraph_uid=6542, symbol_order=7335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2ERKS2_, funcdef_no=10439, decl_uid=172552, cgraph_uid=7071, symbol_order=7864)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.172554)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EmRKS1_, funcdef_no=8426, decl_uid=172940, cgraph_uid=5058, symbol_order=5847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9195, decl_uid=172845, cgraph_uid=5827, symbol_order=6616)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this, __a);
  _1 = &this->D.172853;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8388, decl_uid=172800, cgraph_uid=5020, symbol_order=5809)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9197, decl_uid=172864, cgraph_uid=5829, symbol_order=6618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.246373;

  <bb 2> :
  D.246373 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (this, __n);
  _1 = D.246373;
  this->_M_impl.D.172853._M_start = _1;
  _2 = this->_M_impl.D.172853._M_start;
  this->_M_impl.D.172853._M_finish = _2;
  _3 = this->_M_impl.D.172853._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.172853._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE11_M_allocateEm, funcdef_no=9347, decl_uid=172857, cgraph_uid=5979, symbol_order=6768)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.246380;
  struct return_type * iftmp.72;
  struct return_type * D.246374;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.246380 = std::allocator_traits<std::allocator<return_type> >::allocate (_1, __n);
  iftmp.72 = D.246380;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.72 = 0B;

  <bb 5> :
  D.246374 = iftmp.72;

  <bb 6> :
<L3>:
  return D.246374;

}



;; Function std::allocator_traits<std::allocator<return_type> >::allocate (_ZNSt16allocator_traitsISaI11return_typeEE8allocateERS1_m, funcdef_no=10018, decl_uid=172658, cgraph_uid=6650, symbol_order=7443)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type * std::allocator_traits<std::allocator<return_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct return_type * D.246383;
  struct return_type * D.246381;

  <bb 2> :
  D.246383 = __gnu_cxx::new_allocator<return_type>::allocate (__a, __n, 0B);
  D.246381 = D.246383;

  <bb 3> :
<L0>:
  return D.246381;

}



;; Function __gnu_cxx::new_allocator<return_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE8allocateEmPKv, funcdef_no=10529, decl_uid=172512, cgraph_uid=7162, symbol_order=7955)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct return_type * __gnu_cxx::new_allocator<return_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243287)
{
  struct return_type * D.246394;
  struct return_type * D.246393;
  align_val_t __al;
  struct return_type * D.246391;
  bool retval.73;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.73 = _4 != 0;
  if (retval.73 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.246394 = operator new (_6);
  D.246391 = D.246394;

  <bb 7> :
<L6>:
  return D.246391;

}



;; Function __gnu_cxx::new_allocator<return_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE11_M_max_sizeEv, funcdef_no=10530, decl_uid=172539, cgraph_uid=7161, symbol_order=7954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.246395;

  <bb 2> :
  D.246395 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.246395;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6217, decl_uid=172900, cgraph_uid=3191, symbol_order=3950)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<return_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<return_type>::~allocator (_ZNSaI11return_typeED2Ev, funcdef_no=7573, decl_uid=172633, cgraph_uid=4205, symbol_order=4990)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeED2Ev, funcdef_no=8391, decl_uid=172562, cgraph_uid=5023, symbol_order=5812)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8430, decl_uid=172741, cgraph_uid=5062, symbol_order=5851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.246397;

  <bb 2> :
  D.246397 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246397;

}



;; Function std::vector<return_type>::end (_ZNKSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8429, decl_uid=173123, cgraph_uid=5061, symbol_order=5850)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::end (const struct vector * const this)
{
  struct const_iterator D.220861;
  struct const_iterator D.246399;

  <bb 2> :
  _1 = &this->D.173508._M_impl.D.172853._M_finish;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.220861, _1);
  D.246399 = D.220861;
  D.220861 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246399;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9199, decl_uid=210464, cgraph_uid=5831, symbol_order=6620)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, const struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNKSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8428, decl_uid=173119, cgraph_uid=5060, symbol_order=5849)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::begin (const struct vector * const this)
{
  struct const_iterator D.220859;
  struct const_iterator D.246402;

  <bb 2> :
  _1 = &this->D.173508._M_impl.D.172853._M_start;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.220859, _1);
  D.246402 = D.220859;
  D.220859 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246402;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8431, decl_uid=210484, cgraph_uid=5063, symbol_order=5852)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result, struct allocator & D.220866)
{
  struct return_type * D.246407;
  struct return_type * D.246405;

  <bb 2> :
  D.246407 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.246405 = D.246407;

  <bb 3> :
<L0>:
  return D.246405;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9201, decl_uid=220868, cgraph_uid=5834, symbol_order=6623)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * D.246410;
  const bool __assignable;
  struct return_type * D.246408;

  <bb 2> :
  __assignable = 1;
  D.246410 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.246408 = D.246410;

  <bb 3> :
<L0>:
  return D.246408;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9912, decl_uid=232026, cgraph_uid=6544, symbol_order=7337)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.246412;
  bool retval.74;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (&__first);
  _2 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, const return_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.74 = __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (&__first, &__last);
  if (retval.74 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.246412 = __cur;

  <bb 6> :
<L3>:
  return D.246412;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10444, decl_uid=210422, cgraph_uid=7076, symbol_order=7869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct return_type & D.246414;

  <bb 2> :
  D.246414 = this->_M_current;

  <bb 3> :
<L0>:
  return D.246414;

}



;; Function std::__addressof<return_type> (_ZSt11__addressofI11return_typeEPT_RS1_, funcdef_no=10443, decl_uid=223230, cgraph_uid=7075, symbol_order=7868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__addressof<return_type> (struct return_type & __r)
{
  struct return_type * D.246416;

  <bb 2> :
  D.246416 = __r;

  <bb 3> :
<L0>:
  return D.246416;

}



;; Function std::_Construct<return_type, const return_type&> (_ZSt10_ConstructI11return_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10445, decl_uid=239423, cgraph_uid=7077, symbol_order=7870)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, const return_type&> (struct return_type * __p, const struct return_type & __args#0)
{
  void * D.242892;
  void * D.242891;
  const struct return_type * D.242893;

  <bb 2> :
  D.242893 = std::forward<const return_type&> (__args#0);
  D.242891 = __p;
  D.242892 = operator new (24, D.242891);
  MEM[(struct return_type *)D.242892] = *D.242893;
  return;

}



;; Function std::forward<const return_type&> (_ZSt7forwardIRK11return_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9372, decl_uid=222844, cgraph_uid=6004, symbol_order=6793)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct return_type & std::forward<const return_type&> (const struct type & __t)
{
  const struct return_type & D.246418;

  <bb 2> :
  D.246418 = __t;

  <bb 3> :
<L0>:
  return D.246418;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10442, decl_uid=210426, cgraph_uid=7074, symbol_order=7867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.246420;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.246420 = this;

  <bb 3> :
<L0>:
  return D.246420;

}



;; Function __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (_ZN9__gnu_cxxneIPK11return_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10441, decl_uid=239416, cgraph_uid=7073, symbol_order=7866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.246422;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  D.246422 = _2 != _4;

  <bb 3> :
<L0>:
  return D.246422;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10531, decl_uid=210451, cgraph_uid=7163, symbol_order=7956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * const & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  const struct return_type * const & D.246424;

  <bb 2> :
  D.246424 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246424;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EED2Ev, funcdef_no=7576, decl_uid=172963, cgraph_uid=4208, symbol_order=4993)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.172853._M_end_of_storage;
  _2 = this->_M_impl.D.172853._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.172853._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8393, decl_uid=172860, cgraph_uid=5025, symbol_order=5814)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (struct _Vector_base * const this, struct return_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<return_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::deallocate (_ZNSt16allocator_traitsISaI11return_typeEE10deallocateERS1_PS0_m, funcdef_no=9168, decl_uid=172665, cgraph_uid=5800, symbol_order=6589)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::deallocate (struct allocator_type & __a, struct return_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE10deallocateEPS1_m, funcdef_no=9879, decl_uid=172516, cgraph_uid=6511, symbol_order=7304)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::deallocate (struct new_allocator * const this, struct return_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<return_type>::~vector (_ZNSt6vectorI11return_typeSaIS0_EED2Ev, funcdef_no=7603, decl_uid=173505, cgraph_uid=4235, symbol_order=5020)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173508;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.173508._M_impl.D.172853._M_finish;
  _4 = this->D.173508._M_impl.D.172853._M_start;
  std::_Destroy<return_type*, return_type> (_4, _3, _2);
  _5 = &this->D.173508;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<return_type*, return_type> (_ZSt8_DestroyIP11return_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8432, decl_uid=210501, cgraph_uid=5064, symbol_order=5853)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct allocator & D.220887)
{
  <bb 2> :
  std::_Destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<return_type*> (_ZSt8_DestroyIP11return_typeEvT_S2_, funcdef_no=9203, decl_uid=220889, cgraph_uid=5835, symbol_order=6624)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*> (struct return_type * __first, struct return_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<return_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11return_typeEEvT_S4_, funcdef_no=9913, decl_uid=232057, cgraph_uid=6545, symbol_order=7338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<return_type*> (struct return_type * D.239430, struct return_type * D.239431)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_return_array::~function_return_array (_ZN21function_return_arrayD2Ev, funcdef_no=6254, decl_uid=189897, cgraph_uid=3229, symbol_order=3999)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::~function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  _1 = &this->return_type_array;
  std::vector<return_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function print_function_return (_Z21print_function_returnP9tree_node, funcdef_no=6256, decl_uid=187046, cgraph_uid=3232, symbol_order=4002)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return (union tree_node * function_tree)
{
  struct function_return_array * D.246438;
  struct function_return_array * D.246437;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.82;
  bool retval.75;

  <bb 2> :
  function_return_collect.76_1 = function_return_collect;
  D.246437 = hash_map<tree_node*, function_return_array>::get (function_return_collect.76_1, &function_tree);

  <bb 3> :
  _2 = D.246437;
  retval.75 = _2 == 0B;
  if (retval.75 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.77_3 = function_return_collect;
  D.246438 = hash_map<tree_node*, function_return_array>::get (function_return_collect.77_3, &function_tree);

  <bb 6> :
  _4 = D.246438;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.78_6 = function_tree;
  stderr.79_7 = stderr;
  fprintf (stderr.79_7, "=======print_function_return %d   %d========\n", function_tree.78_6, _5);

  <bb 9> :
  stderr.80_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.80_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.81_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.81_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.82 = _13 < _14;
  if (retval.82 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.83_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.83_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect2 (_Z21printfunctionCollect2P3ptbP12gimple_array, funcdef_no=6257, decl_uid=189982, cgraph_uid=3233, symbol_order=4003)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 11 7 10 9 8 6 5 4
;; 2 succs { 15 3 }
;; 3 succs { 13 }
;; 4 succs { 15 5 }
;; 5 succs { 15 6 }
;; 6 succs { 7 8 }
;; 7 succs { 11 }
;; 8 succs { 15 9 }
;; 9 succs { 15 10 }
;; 10 succs { 15 11 }
;; 11 succs { 15 12 }
;; 12 succs { 13 }
;; 13 succs { 4 14 }
;; 14 succs { 1 }
;; 15 succs { }
void printfunctionCollect2 (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.246449;
  struct function * D.246448;
  struct function * D.246447;
  struct cgraph_node * D.246446;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.84_1 = symtab;
  D.246446 = symbol_table::first_defined_function (symtab.84_1);

  <bb 3> :
  node = D.246446;
  goto <bb 13>; [INV]

  <bb 4> :
  D.246447 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.246447;
  push_cfun (_2);

  <bb 6> :
  cfun.85_3 = cfun;
  if (cfun.85_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  D.246448 = cgraph_node::get_fun (node);

  <bb 9> :
  _4 = D.246448;
  _5 = _4->decl;
  print_function_return2 (_5);

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  symtab.86_6 = symtab;
  D.246449 = symbol_table::next_defined_function (symtab.86_6, node);

  <bb 12> :
  node = D.246449;

  <bb 13> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  start = {CLOBBER};
  return;

  <bb 15> :
<L6>:
  start = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect (_Z20printfunctionCollectP3ptbP12gimple_array, funcdef_no=6258, decl_uid=189997, cgraph_uid=3234, symbol_order=4004)

Removing basic block 13
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 16 8 15 14 13 10 12 11 9 6 5 4 7
;; 2 succs { 20 3 }
;; 3 succs { 18 }
;; 4 succs { 20 5 }
;; 5 succs { 20 6 }
;; 6 succs { 7 9 }
;; 7 succs { 20 8 }
;; 8 succs { 16 }
;; 9 succs { 20 10 }
;; 10 succs { 11 13 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 20 14 }
;; 14 succs { 20 15 }
;; 15 succs { 20 16 }
;; 16 succs { 20 17 }
;; 17 succs { 18 }
;; 18 succs { 4 19 }
;; 19 succs { 1 }
;; 20 succs { }
void printfunctionCollect (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.246461;
  struct function * D.246460;
  const char * D.246459;
  const char * D.246458;
  struct function * D.246457;
  struct cgraph_node * D.246456;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.87_1 = symtab;
  D.246456 = symbol_table::first_defined_function (symtab.87_1);

  <bb 3> :
  node = D.246456;
  goto <bb 18>; [INV]

  <bb 4> :
  D.246457 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.246457;
  push_cfun (_2);

  <bb 6> :
  cfun.88_3 = cfun;
  if (cfun.88_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  pop_cfun ();

  <bb 8> :
  // predicted unlikely by continue predictor.
  goto <bb 16>; [INV]

  <bb 9> :
  cfun.89_4 = cfun;
  _5 = cfun.89_4->decl;
  D.246458 = get_name (_5);

  <bb 10> :
  name = D.246458;
  if (name != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  cfun.90_6 = cfun;
  _7 = cfun.90_6->decl;
  D.246459 = get_name (_7);

  <bb 12> :
  _8 = D.246459;
  stderr.91_9 = stderr;
  fprintf (stderr.91_9, "=======Mapping node_fun:%s=========\n", _8);

  <bb 13> :
  D.246460 = cgraph_node::get_fun (node);

  <bb 14> :
  _10 = D.246460;
  _11 = _10->decl;
  print_function_return (_11);

  <bb 15> :
  pop_cfun ();

  <bb 16> :
  symtab.92_12 = symtab;
  D.246461 = symbol_table::next_defined_function (symtab.92_12, node);

  <bb 17> :
  node = D.246461;

  <bb 18> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  start = {CLOBBER};
  return;

  <bb 20> :
<L9>:
  start = {CLOBBER};
  resx 1

}



;; Function printfPointerConstraint (_Z23printfPointerConstraintP3ptbP12gimple_array, funcdef_no=6259, decl_uid=187044, cgraph_uid=3235, symbol_order=4005)

Removing basic block 22
Removing basic block 29
Removing basic block 30
Removing basic block 33
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;;
;; Loop 1
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33 31 32 30 7 29 27 28 15 14 13 12 11 10 9 8 19 26 24 25 23 21 22 20 17 18 16 6
;;
;; Loop 2
;;  header 27, latch 26
;;  depth 2, outer 1
;;  nodes: 27 26 24 25 23 21 22 20
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 34 }
;; 6 succs { 36 7 }
;; 7 succs { 8 30 }
;; 8 succs { 36 9 }
;; 9 succs { 36 10 }
;; 10 succs { 36 11 }
;; 11 succs { 36 12 }
;; 12 succs { 36 13 }
;; 13 succs { 14 28 }
;; 14 succs { 36 15 }
;; 15 succs { 16 29 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 27 }
;; 20 succs { 21 22 }
;; 21 succs { 36 23 }
;; 22 succs { 36 23 }
;; 23 succs { 24 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 20 29 }
;; 28 succs { 36 29 }
;; 29 succs { 36 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 }
;; 34 succs { 6 35 }
;; 35 succs { 1 }
;; 36 succs { }
void printfPointerConstraint (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.246491;
  location_t loc;
  location_t loc;
  location_t loc;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.103;
  struct gimple * iftmp.100;
  struct gimple * iftmp.99;
  union tree_node * iftmp.93;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.93 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.93 = 0B;

  <bb 5> :
  t = iftmp.93;
  goto <bb 34>; [INV]

  <bb 6> :
  stderr.94_1 = stderr;
  __builtin_fwrite ("------------------- stmt -----------------------\n", 1, 49, stderr.94_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 8> :
  _3 = table_temp->last_stmt;
  loc = gimple_location_safe (_3);
  stderr.95_4 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.95_4);

  <bb 9> :
  warning_at (loc, 0, "loc");

  <bb 10> :
  _5 = table_temp->target;
  debug_tree (_5);

  <bb 11> :
  stderr.96_6 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.96_6);

  <bb 12> :
  treeGimpleArray.97_7 = treeGimpleArray;
  _8 = &table_temp->target;
  D.246491 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.97_7, _8);

  <bb 13> :
  user_tmp = D.246491;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 14> :
  _9 = user_tmp->size;
  stderr.98_10 = stderr;
  fprintf (stderr.98_10, " \n Pointer to set  is size %d :[ \n", _9);

  <bb 15> :
  _11 = user_tmp->size;
  if (_11 > 0)
    goto <bb 16>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 16> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.99 = user_tmp->stmt;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.99 = 0B;

  <bb 19> :
  u_stmt = iftmp.99;
  goto <bb 27>; [INV]

  <bb 20> :
  _12 = user_tmp->ret_stmt;
  if (_12 != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _13 = user_tmp->ret_stmt;
  loc = gimple_location_safe (_13);
  warning_at (loc, 0, "loc");
  goto <bb 23>; [INV]

  <bb 22> :
  loc = gimple_location_safe (u_stmt);
  warning_at (loc, 0, "loc");

  <bb 23> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  iftmp.100 = user_tmp->stmt;
  goto <bb 26>; [INV]

  <bb 25> :
  iftmp.100 = 0B;

  <bb 26> :
  u_stmt = iftmp.100;

  <bb 27> :
  if (user_tmp != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  stderr.101_14 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.101_14);

  <bb 29> :
  stderr.102_15 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.102_15);

  <bb 30> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.103 = table_temp->target;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.103 = 0B;

  <bb 33> :
  t = iftmp.103;

  <bb 34> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 35> :
  start = {CLOBBER};
  return;

  <bb 36> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, gimple_array>::get (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7605, decl_uid=190069, cgraph_uid=4237, symbol_order=5022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple_array * hash_map<tree_node*, gimple_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.246501;
  struct hash_entry & D.246500;
  unsigned int D.246499;
  struct hash_entry & e;
  struct gimple_array * iftmp.104;
  struct gimple_array * D.246493;

  <bb 2> :
  _1 = &this->m_table;
  D.246499 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.246499;
  D.246500 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.246500;
  D.246501 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  _3 = D.246501;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.104 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.104 = &e->m_value;

  <bb 5> :
  D.246493 = iftmp.104;

  <bb 6> :
<L3>:
  return D.246493;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE4hashERKS2_, funcdef_no=8433, decl_uid=190025, cgraph_uid=5065, symbol_order=5854)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (union tree_node * const & h)
{
  hashval_t D.246502;

  <bb 2> :
  D.246502 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.246502;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8434, decl_uid=190209, cgraph_uid=5066, symbol_order=5855)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.246536;
  bool D.246535;
  bool D.246534;
  bool D.246533;
  bool D.246532;
  bool D.246531;
  struct value_type * D.246530;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.108;
  bool retval.107;
  struct value_type & D.246516;
  bool iftmp.106;
  bool retval.105;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 56;
  entry = _5 + _7;
  D.246531 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.246531;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.246532 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.246532;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.246533 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _11 = D.246533;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.106 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.106 = 0;

  <bb 8> :
  retval.105 = iftmp.106;
  if (retval.105 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.246516 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  entry = _17 + _19;
  D.246534 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.246534;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.246535 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.246535;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.246536 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _23 = D.246536;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.108 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.108 = 0;

  <bb 18> :
  retval.107 = iftmp.108;
  if (retval.107 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.246516 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.246516;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8889, decl_uid=190305, cgraph_uid=5521, symbol_order=6310)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.246539;
  bool D.246537;

  <bb 2> :
  D.246539 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (v);
  D.246537 = D.246539;

  <bb 3> :
<L0>:
  return D.246537;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8793, decl_uid=190138, cgraph_uid=5425, symbol_order=6214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.246542;
  bool D.246540;

  <bb 2> :
  D.246542 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.246540 = D.246542;

  <bb 3> :
<L0>:
  return D.246540;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8890, decl_uid=190303, cgraph_uid=5522, symbol_order=6311)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.246545;
  bool D.246543;

  <bb 2> :
  D.246545 = hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (v);
  D.246543 = D.246545;

  <bb 3> :
<L0>:
  return D.246543;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9724, decl_uid=190133, cgraph_uid=6356, symbol_order=7145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.246548;
  bool D.246546;

  <bb 2> :
  D.246548 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.246546 = D.246548;

  <bb 3> :
<L0>:
  return D.246546;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10285, decl_uid=237320, cgraph_uid=6917, symbol_order=7710)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246549;

  <bb 2> :
  _1 = entry->m_key;
  D.246549 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.246549;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9205, decl_uid=190126, cgraph_uid=5837, symbol_order=6626)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.246553;
  bool D.246551;

  <bb 2> :
  _1 = &a->m_key;
  D.246553 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_1, b);
  D.246551 = D.246553;

  <bb 3> :
<L0>:
  return D.246551;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10equal_keysERKS2_S7_, funcdef_no=9916, decl_uid=190027, cgraph_uid=6548, symbol_order=7341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.246554;

  <bb 2> :
  D.246554 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.246554;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8435, decl_uid=210517, cgraph_uid=5067, symbol_order=5856)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246556;

  <bb 2> :
  _1 = entry->m_key;
  D.246556 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.246556;

}



;; Function gimple_location_safe (_ZL20gimple_location_safePK6gimple, funcdef_no=2004, decl_uid=92286, cgraph_uid=1141, symbol_order=1301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
location_t gimple_location_safe (const struct gimple * g)
{
  location_t iftmp.109;
  location_t D.246558;

  <bb 2> :
  if (g != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.109 = gimple_location (g);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.109 = 0;

  <bb 5> :
  D.246558 = iftmp.109;

  <bb 6> :
<L3>:
  return D.246558;

}



;; Function gimple_location (_ZL15gimple_locationPK6gimple, funcdef_no=2003, decl_uid=92283, cgraph_uid=1140, symbol_order=1300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
location_t gimple_location (const struct gimple * g)
{
  location_t D.246564;

  <bb 2> :
  D.246564 = g->location;

  <bb 3> :
<L0>:
  return D.246564;

}



;; Function printfPointerConstraint2 (_Z24printfPointerConstraint2P3ptbP12gimple_array, funcdef_no=6260, decl_uid=190403, cgraph_uid=3236, symbol_order=4006)

Removing basic block 19
Removing basic block 26
Removing basic block 28
Removing basic block 31
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 29 30 28 7 27 25 12 24 16 23 21 22 20 18 19 17 14 15 13 11 10 9 8 26 6
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 21 22 20 18 19 17
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 32 }
;; 6 succs { 34 7 }
;; 7 succs { 8 28 }
;; 8 succs { 34 9 }
;; 9 succs { 34 10 }
;; 10 succs { 11 26 }
;; 11 succs { 34 12 }
;; 12 succs { 13 25 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 24 }
;; 17 succs { 18 19 }
;; 18 succs { 34 20 }
;; 19 succs { 34 20 }
;; 20 succs { 21 22 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 17 25 }
;; 25 succs { 34 28 }
;; 26 succs { 34 27 }
;; 27 succs { 34 28 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 6 33 }
;; 33 succs { 1 }
;; 34 succs { }
void printfPointerConstraint2 (struct ptb * ftable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.246594;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.119;
  struct gimple * iftmp.115;
  struct gimple * iftmp.114;
  union tree_node * iftmp.110;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.110 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.110 = 0B;

  <bb 5> :
  t = iftmp.110;
  goto <bb 32>; [INV]

  <bb 6> :
  stderr.111_1 = stderr;
  __builtin_fwrite ("\n ------------------------------------------\n", 1, 45, stderr.111_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 8> :
  _3 = table_temp->target;
  debug_tree (_3);

  <bb 9> :
  treeGimpleArray.112_4 = treeGimpleArray;
  _5 = &table_temp->target;
  D.246594 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.112_4, _5);

  <bb 10> :
  user_tmp = D.246594;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 11> :
  _6 = user_tmp->size;
  stderr.113_7 = stderr;
  fprintf (stderr.113_7, " \n Pointer to set  is size %d :[ \n", _6);

  <bb 12> :
  _8 = user_tmp->size;
  if (_8 > 0)
    goto <bb 13>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 13> :
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.114 = user_tmp->stmt;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.114 = 0B;

  <bb 16> :
  u_stmt = iftmp.114;
  goto <bb 24>; [INV]

  <bb 17> :
  _9 = user_tmp->ret_stmt;
  if (_9 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _10 = user_tmp->ret_stmt;
  debug (_10);
  goto <bb 20>; [INV]

  <bb 19> :
  debug (u_stmt);

  <bb 20> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.115 = user_tmp->stmt;
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.115 = 0B;

  <bb 23> :
  u_stmt = iftmp.115;

  <bb 24> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  stderr.116_11 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.116_11);
  goto <bb 28>; [INV]

  <bb 26> :
  stderr.117_12 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.117_12);

  <bb 27> :
  stderr.118_13 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.118_13);

  <bb 28> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  iftmp.119 = table_temp->target;
  goto <bb 31>; [INV]

  <bb 30> :
  iftmp.119 = 0B;

  <bb 31> :
  t = iftmp.119;

  <bb 32> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  start = {CLOBBER};
  return;

  <bb 34> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function set_ptb (_Z7set_ptbP15basic_block_defP3ptbP9tree_nodejiP6gimpleP11cgraph_node, funcdef_no=6261, decl_uid=190425, cgraph_uid=3237, symbol_order=4007)

Removing basic block 4
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 15 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 6 10 }
;; 10 succs { 11 15 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
void set_ptb (struct basic_block_def * b, struct ptb * table, union tree_node * t, location_t l, int s, struct gimple * stmt, struct cgraph_node * node)
{
  struct function * D.246617;
  bool D.246616;
  void * D.246615;
  struct function * D.246614;
  bool D.246613;
  bool same;
  bool retval.123;
  void * D.190438;
  bool retval.121;

  <bb 2> :
  _1 = table->target;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  pointtablecount.120_2 = pointtablecount;
  _3 = pointtablecount.120_2 + 1;
  pointtablecount = _3;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.246613 = bb_in_branch_p (stmt);
  _4 = D.246613;
  table->inbranch = _4;
  D.246614 = cgraph_node::get_fun (node);
  _5 = D.246614;
  table->fun = _5;
  _6 = gimple_code (stmt);
  retval.121 = _6 == 18;

  <bb 4> :
  table->removed = 0;
  _7 = table->size;
  _8 = _7 + 1;
  table->size = _8;
  goto <bb 15>; [INV]

  <bb 5> :
  same = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  _9 = table->target;
  if (t == _9)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  same = 1;

  <bb 8> :
  table = table->next;

  <bb 9> :
  _10 = table->next;
  if (_10 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _11 = ~same;
  if (_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  pointtablecount.122_12 = pointtablecount;
  _13 = pointtablecount.122_12 + 1;
  pointtablecount = _13;
  D.246615 = operator new (120);
  D.190438 = D.246615;
  MEM[(struct ptb *)D.190438] = {};
  ptb::ptb (D.190438);
  table->next = D.190438;
  table = table->next;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.246616 = bb_in_branch_p (stmt);
  _14 = D.246616;
  table->inbranch = _14;
  D.246617 = cgraph_node::get_fun (node);
  _15 = D.246617;
  table->fun = _15;
  _16 = gimple_code (stmt);
  retval.123 = _16 == 18;
  if (retval.123 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  table->is_phi_stmt = 1;
  goto <bb 14>; [INV]

  <bb 13> :
  table->is_phi_stmt = 0;

  <bb 14> :
  table->removed = 0;
  _17 = table->size;
  _18 = _17 + 1;
  table->size = _18;

  <bb 15> :
  return;

}



;; Function ptb::ptb (_ZN3ptbC2Ev, funcdef_no=6171, decl_uid=169195, cgraph_uid=3147, symbol_order=3866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ptb::ptb (struct ptb * const this)
{
  <bb 2> :
  this->pthread_type = 0;
  this->size = 0;
  return;

}



;; Function gimple_code (_ZL11gimple_codePK6gimple, funcdef_no=1996, decl_uid=92240, cgraph_uid=1133, symbol_order=1293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
gimple_code gimple_code (const struct gimple * g)
{
  gimple_code D.246618;

  <bb 2> :
  _1 = g->code;
  D.246618 = (gimple_code) _1;

  <bb 3> :
<L0>:
  return D.246618;

}



;; Function set_gimple_array (_Z16set_gimple_arrayP12gimple_arrayP6gimpleP9tree_nodeS4_S2_, funcdef_no=6262, decl_uid=190448, cgraph_uid=3238, symbol_order=4008)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
void set_gimple_array (struct gimple_array * table, struct gimple * used_stmt, union tree_node * fucntion, union tree_node * target, struct gimple * ret_stmt)
{
  void * D.246629;
  int size_tmp;
  bool same;
  void * D.190452;

  <bb 2> :
  _1 = table->stmt;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->aptr = fucntion;
  table->target = target;
  table->size = 1;
  table->next = 0B;
  goto <bb 11>; [INV]

  <bb 4> :
  same = 0;
  size_tmp = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  _2 = table->stmt;
  if (used_stmt == _2)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  same = 1;

  <bb 7> :
  size_tmp = size_tmp + 1;
  table = table->next;

  <bb 8> :
  _3 = table->next;
  if (_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _4 = ~same;
  if (_4 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.246629 = operator new (48);
  D.190452 = D.246629;
  MEM[(struct gimple_array *)D.190452].stmt = 0B;
  MEM[(struct gimple_array *)D.190452].ret_stmt = 0B;
  MEM[(struct gimple_array *)D.190452].aptr = 0B;
  MEM[(struct gimple_array *)D.190452].target = 0B;
  MEM[(struct gimple_array *)D.190452].next = 0B;
  MEM[(struct gimple_array *)D.190452].size = 0;
  gimple_array::gimple_array (D.190452);
  table->next = D.190452;
  table = table->next;
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->target = target;
  table->size = size_tmp;
  table->aptr = fucntion;
  table->next = 0B;

  <bb 11> :
  return;

}



;; Function ret_function_varstmt (_Z20ret_function_varstmtP9tree_node, funcdef_no=6263, decl_uid=187014, cgraph_uid=3265, symbol_order=4035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 13 3 }
;; 3 succs { 4 9 }
;; 4 succs { 12 5 }
;; 5 succs { 12 6 }
;; 6 succs { 12 7 }
;; 7 succs { 11 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { }
struct function_assign_array ret_function_varstmt (union tree_node * function_tree)
{
  struct function_assign_array * D.246637;
  struct function_assign_array * D.246636;
  struct vector assign_type_array;
  struct function_assign_array assign_array [value-expr: *<retval>];
  bool retval.124;

  <bb 2> :
  function_assign_array::function_assign_array (<retval>);
  function_assign_collect.125_1 = function_assign_collect;
  D.246636 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.125_1, &function_tree);

  <bb 3> :
  _2 = D.246636;
  retval.124 = _2 != 0B;
  if (retval.124 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  function_assign_collect.126_3 = function_assign_collect;
  D.246637 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.126_3, &function_tree);

  <bb 5> :
  _4 = D.246637;
  function_assign_array::operator= (<retval>, _4);

  <bb 6> :
  _5 = &<retval>->assign_type_array;
  std::vector<assign_type>::vector (&assign_type_array, _5);

  <bb 7> :
  <retval>->pass = 1;
  function_assign_collect.127_6 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.127_6, &function_tree, <retval>);

  <bb 8> :
  std::vector<assign_type>::~vector (&assign_type_array);
  assign_type_array = {CLOBBER};

  <bb 9> :

  <bb 10> :
<L3>:
  return <retval>;

  <bb 11> :
<L4>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 12> :
<L5>:
  assign_type_array = {CLOBBER};
  resx 2

  <bb 13> :
<L6>:
  function_assign_array::~function_assign_array (<retval>);
  resx 1

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2Ev, funcdef_no=6275, decl_uid=190465, cgraph_uid=3250, symbol_order=4020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  this->pass = 0;
  _1 = &this->assign_type_array;
  std::vector<assign_type>::vector (_1);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2Ev, funcdef_no=6273, decl_uid=175597, cgraph_uid=3247, symbol_order=4017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2Ev, funcdef_no=6271, decl_uid=175055, cgraph_uid=3244, symbol_order=4014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7607, decl_uid=174947, cgraph_uid=4239, symbol_order=5024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this);
  _1 = &this->D.174950;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2Ev, funcdef_no=8437, decl_uid=174725, cgraph_uid=5069, symbol_order=5858)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2Ev, funcdef_no=9207, decl_uid=174654, cgraph_uid=5839, symbol_order=6628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8440, decl_uid=174897, cgraph_uid=5072, symbol_order=5861)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::get (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7618, decl_uid=190698, cgraph_uid=4250, symbol_order=5035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_assign_array * hash_map<tree_node*, function_assign_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.246649;
  struct hash_entry & D.246648;
  unsigned int D.246647;
  struct hash_entry & e;
  struct function_assign_array * iftmp.128;
  struct function_assign_array * D.246641;

  <bb 2> :
  _1 = &this->m_table;
  D.246647 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.246647;
  D.246648 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.246648;
  D.246649 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  _3 = D.246649;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.128 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.128 = &e->m_value;

  <bb 5> :
  D.246641 = iftmp.128;

  <bb 6> :
<L3>:
  return D.246641;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE4hashERKS2_, funcdef_no=8448, decl_uid=190654, cgraph_uid=5080, symbol_order=5869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (union tree_node * const & h)
{
  hashval_t D.246650;

  <bb 2> :
  D.246650 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.246650;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8449, decl_uid=190841, cgraph_uid=5081, symbol_order=5870)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.246684;
  bool D.246683;
  bool D.246682;
  bool D.246681;
  bool D.246680;
  bool D.246679;
  struct value_type * D.246678;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.132;
  bool retval.131;
  struct value_type & D.246664;
  bool iftmp.130;
  bool retval.129;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.246679 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.246679;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.246680 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.246680;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.246681 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _11 = D.246681;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.130 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.130 = 0;

  <bb 8> :
  retval.129 = iftmp.130;
  if (retval.129 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.246664 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.246682 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.246682;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.246683 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.246683;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.246684 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _23 = D.246684;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.132 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.132 = 0;

  <bb 18> :
  retval.131 = iftmp.132;
  if (retval.131 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.246664 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.246664;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8905, decl_uid=190937, cgraph_uid=5537, symbol_order=6326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.246687;
  bool D.246685;

  <bb 2> :
  D.246687 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (v);
  D.246685 = D.246687;

  <bb 3> :
<L0>:
  return D.246685;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8471, decl_uid=190767, cgraph_uid=5103, symbol_order=5892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.246690;
  bool D.246688;

  <bb 2> :
  D.246690 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.246688 = D.246690;

  <bb 3> :
<L0>:
  return D.246688;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8906, decl_uid=190935, cgraph_uid=5538, symbol_order=6327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.246693;
  bool D.246691;

  <bb 2> :
  D.246693 = hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (v);
  D.246691 = D.246693;

  <bb 3> :
<L0>:
  return D.246691;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9732, decl_uid=190762, cgraph_uid=6364, symbol_order=7153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.246696;
  bool D.246694;

  <bb 2> :
  D.246696 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.246694 = D.246696;

  <bb 3> :
<L0>:
  return D.246694;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10291, decl_uid=237344, cgraph_uid=6923, symbol_order=7716)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246697;

  <bb 2> :
  _1 = entry->m_key;
  D.246697 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.246697;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9212, decl_uid=190755, cgraph_uid=5844, symbol_order=6633)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.246701;
  bool D.246699;

  <bb 2> :
  _1 = &a->m_key;
  D.246701 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_1, b);
  D.246699 = D.246701;

  <bb 3> :
<L0>:
  return D.246699;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10equal_keysERKS2_S7_, funcdef_no=9921, decl_uid=190656, cgraph_uid=6553, symbol_order=7346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.246702;

  <bb 2> :
  D.246702 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.246702;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8450, decl_uid=210554, cgraph_uid=5082, symbol_order=5871)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246704;

  <bb 2> :
  _1 = entry->m_key;
  D.246704 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.246704;

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSERKS_, funcdef_no=6280, decl_uid=191023, cgraph_uid=3255, symbol_order=4025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, const struct function_assign_array & D.191024)
{
  struct function_assign_array & D.246706;

  <bb 2> :
  _1 = D.191024->pass;
  this->pass = _1;
  _2 = &D.191024->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.246706 = this;

  <bb 3> :
<L0>:
  return D.246706;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSERKS2_, funcdef_no=7619, decl_uid=175183, cgraph_uid=4252, symbol_order=5037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.246741;
  struct assign_type * __tmp;
  const size_type __xlen;
  struct vector & D.246739;
  struct __normal_iterator D.246736;
  struct __normal_iterator D.246735;
  struct __normal_iterator D.246734;
  struct __normal_iterator D.246733;
  struct __normal_iterator D.246732;
  bool retval.137;
  struct __normal_iterator D.246727;
  struct __normal_iterator D.246726;
  bool retval.136;
  bool iftmp.135;
  bool retval.134;
  bool retval.133;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.133 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ();
  if (retval.133 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.175605;
  _4 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.175605;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.135 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.135 = 0;

  <bb 8> :
  retval.134 = iftmp.135;
  if (retval.134 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<assign_type>::clear (this);
  _8 = &this->D.175605;
  _9 = this->D.175605._M_impl.D.174950._M_end_of_storage;
  _10 = this->D.175605._M_impl.D.174950._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.175605._M_impl.D.174950._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_8, _14, _13);
  this->D.175605._M_impl.D.174950._M_start = 0B;
  this->D.175605._M_impl.D.174950._M_finish = 0B;
  this->D.175605._M_impl.D.174950._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.175605;
  _16 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.175605;
  _18 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<assign_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<assign_type>::size (__x);
  _19 = std::vector<assign_type>::capacity (this);
  retval.136 = __xlen > _19;
  if (retval.136 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.246726 = std::vector<assign_type>::end (__x);
  D.246727 = std::vector<assign_type>::begin (__x);
  D.246741 = std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (this, __xlen, D.246727, D.246726);
  __tmp = D.246741;
  _20 = &this->D.175605;
  _21 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.175605._M_impl.D.174950._M_finish;
  _23 = this->D.175605._M_impl.D.174950._M_start;
  std::_Destroy<assign_type*, assign_type> (_23, _22, _21);
  _24 = &this->D.175605;
  _25 = this->D.175605._M_impl.D.174950._M_end_of_storage;
  _26 = this->D.175605._M_impl.D.174950._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.175605._M_impl.D.174950._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_24, _30, _29);
  this->D.175605._M_impl.D.174950._M_start = __tmp;
  _31 = this->D.175605._M_impl.D.174950._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.175605._M_impl.D.174950._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<assign_type>::size (this);
  retval.137 = __xlen <= _34;
  if (retval.137 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.175605;
  _36 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_35);
  D.246732 = std::vector<assign_type>::end (this);
  D.246733 = std::vector<assign_type>::begin (this);
  D.246734 = std::vector<assign_type>::end (__x);
  D.246735 = std::vector<assign_type>::begin (__x);
  D.246736 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.246735, D.246734, D.246733);
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (D.246736, D.246732, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.175605._M_impl.D.174950._M_start;
  _38 = __x->D.175605._M_impl.D.174950._M_start;
  _39 = std::vector<assign_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.175605._M_impl.D.174950._M_start;
  std::copy<assign_type*, assign_type*> (_42, _41, _37);
  _43 = &this->D.175605;
  _44 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.175605._M_impl.D.174950._M_finish;
  _46 = __x->D.175605._M_impl.D.174950._M_finish;
  _47 = __x->D.175605._M_impl.D.174950._M_start;
  _48 = std::vector<assign_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.175605._M_impl.D.174950._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.175605._M_impl.D.174950._M_finish = _53;

  <bb 17> :
  D.246739 = this;

  <bb 18> :
<L19>:
  return D.246739;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7620, decl_uid=174817, cgraph_uid=4251, symbol_order=5036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ()
{
  bool D.246742;

  <bb 2> :
  D.246742 = 0;

  <bb 3> :
<L0>:
  return D.246742;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E15_S_always_equalEv, funcdef_no=6415, decl_uid=174820, cgraph_uid=3389, symbol_order=4165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ()
{
  bool D.246744;

  <bb 2> :
  D.246744 = 1;

  <bb 3> :
<L0>:
  return D.246744;

}



;; Function std::operator!= (_ZStneRKSaI11assign_typeES2_, funcdef_no=8452, decl_uid=174703, cgraph_uid=5084, symbol_order=5873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.220946, const struct allocator & D.220947)
{
  bool D.246746;

  <bb 2> :
  D.246746 = 0;

  <bb 3> :
<L0>:
  return D.246746;

}



;; Function std::vector<assign_type>::clear (_ZNSt6vectorI11assign_typeSaIS0_EE5clearEv, funcdef_no=8453, decl_uid=175335, cgraph_uid=5085, symbol_order=5874)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_start;
  std::vector<assign_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<assign_type>::_M_erase_at_end (_ZNSt6vectorI11assign_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9213, decl_uid=175463, cgraph_uid=5845, symbol_order=6634)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<assign_type>::_M_erase_at_end (struct vector * const this, struct assign_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.175605;
  _5 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.175605._M_impl.D.174950._M_finish;
  std::_Destroy<assign_type*, assign_type> (__pos, _6, _5);
  this->D.175605._M_impl.D.174950._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8451, decl_uid=174840, cgraph_uid=5083, symbol_order=5872)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.246751;

  <bb 2> :
  D.246751 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246751;

}



;; Function std::__alloc_on_copy<std::allocator<assign_type> > (_ZSt15__alloc_on_copyISaI11assign_typeEEvRT_RKS2_, funcdef_no=8454, decl_uid=210577, cgraph_uid=5086, symbol_order=5875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<assign_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::capacity (_ZNKSt6vectorI11assign_typeSaIS0_EE8capacityEv, funcdef_no=8455, decl_uid=175251, cgraph_uid=5087, symbol_order=5876)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::capacity (const struct vector * const this)
{
  size_type D.246753;

  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_end_of_storage;
  _2 = this->D.175605._M_impl.D.174950._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.246753 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246753;

}



;; Function std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZNSt6vectorI11assign_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8458, decl_uid=210681, cgraph_uid=5090, symbol_order=5879)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct assign_type * std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct assign_type * D.246757;
  struct assign_type * __result;
  struct assign_type * D.246755;

  <bb 2> :
  _1 = &this->D.175605;
  D.246757 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_1, __n);
  __result = D.246757;
  _2 = &this->D.175605;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (__first, __last, __result, _3);

  <bb 3> :
  D.246755 = __result;

  <bb 4> :
<L0>:
  return D.246755;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE11_M_allocateEm, funcdef_no=9217, decl_uid=174954, cgraph_uid=5849, symbol_order=6638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct assign_type * std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.246767;
  struct assign_type * iftmp.138;
  struct assign_type * D.246761;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.246767 = std::allocator_traits<std::allocator<assign_type> >::allocate (_1, __n);
  iftmp.138 = D.246767;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.138 = 0B;

  <bb 5> :
  D.246761 = iftmp.138;

  <bb 6> :
<L3>:
  return D.246761;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::allocate (_ZNSt16allocator_traitsISaI11assign_typeEE8allocateERS1_m, funcdef_no=9922, decl_uid=174755, cgraph_uid=6554, symbol_order=7347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct assign_type * std::allocator_traits<std::allocator<assign_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct assign_type * D.246770;
  struct assign_type * D.246768;

  <bb 2> :
  D.246770 = __gnu_cxx::new_allocator<assign_type>::allocate (__a, __n, 0B);
  D.246768 = D.246770;

  <bb 3> :
<L0>:
  return D.246768;

}



;; Function __gnu_cxx::new_allocator<assign_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE8allocateEmPKv, funcdef_no=10453, decl_uid=174609, cgraph_uid=7086, symbol_order=7879)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct assign_type * __gnu_cxx::new_allocator<assign_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.242926)
{
  struct assign_type * D.246781;
  struct assign_type * D.246780;
  align_val_t __al;
  struct assign_type * D.246778;
  bool retval.139;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.139 = _4 != 0;
  if (retval.139 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.246781 = operator new (_6);
  D.246778 = D.246781;

  <bb 7> :
<L6>:
  return D.246778;

}



;; Function __gnu_cxx::new_allocator<assign_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE11_M_max_sizeEv, funcdef_no=10454, decl_uid=174636, cgraph_uid=7085, symbol_order=7878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.246782;

  <bb 2> :
  D.246782 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.246782;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8469, decl_uid=210815, cgraph_uid=5101, symbol_order=5890)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result, struct allocator & D.221113)
{
  struct assign_type * D.246786;
  struct assign_type * D.246784;

  <bb 2> :
  D.246786 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.246784 = D.246786;

  <bb 3> :
<L0>:
  return D.246784;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9234, decl_uid=221115, cgraph_uid=5866, symbol_order=6655)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246789;
  const bool __assignable;
  struct assign_type * D.246787;

  <bb 2> :
  __assignable = 1;
  D.246789 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.246787 = D.246789;

  <bb 3> :
<L0>:
  return D.246787;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9932, decl_uid=232498, cgraph_uid=6564, symbol_order=7357)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246792;
  struct assign_type * D.246790;

  <bb 2> :
  D.246792 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.246790 = D.246792;

  <bb 3> :
<L0>:
  return D.246790;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10459, decl_uid=239503, cgraph_uid=7091, symbol_order=7884)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246797;
  struct __normal_iterator D.246795;
  struct __normal_iterator D.246794;
  struct assign_type * D.246793;

  <bb 2> :
  D.246794 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.246795 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.246797 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (D.246795, D.246794, __result);
  D.246793 = D.246797;

  <bb 3> :
<L0>:
  return D.246793;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9221, decl_uid=221032, cgraph_uid=5853, symbol_order=6642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.246798;

  <bb 2> :
  D.246798 = __it;

  <bb 3> :
<L0>:
  return D.246798;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10771, decl_uid=242984, cgraph_uid=7403, symbol_order=8198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246802;
  struct assign_type * D.246800;

  <bb 2> :
  __result.140_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.140_1);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _4 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.246802 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.246802;
  D.246800 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.246800;

}



;; Function std::__niter_base<assign_type*> (_ZSt12__niter_baseIP11assign_typeET_S2_, funcdef_no=9928, decl_uid=223659, cgraph_uid=6560, symbol_order=7353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.246803;

  <bb 2> :
  D.246803 = __it;

  <bb 3> :
<L0>:
  return D.246803;

}



;; Function std::__niter_base<const assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIPK11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=9923, decl_uid=232146, cgraph_uid=6555, symbol_order=7348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * std::__niter_base<const assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  const struct assign_type * D.246805;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (&__it);
  D.246805 = *_1;

  <bb 3> :
<L0>:
  return D.246805;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10455, decl_uid=210648, cgraph_uid=7087, symbol_order=7880)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * const & __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  const struct assign_type * const & D.246807;

  <bb 2> :
  D.246807 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246807;

}



;; Function std::__copy_move_a1<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=9925, decl_uid=232300, cgraph_uid=6557, symbol_order=7350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246811;
  struct assign_type * D.246809;

  <bb 2> :
  D.246811 = std::__copy_move_a2<false, const assign_type*, assign_type*> (__first, __last, __result);
  D.246809 = D.246811;

  <bb 3> :
<L0>:
  return D.246809;

}



;; Function std::__copy_move_a2<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=10456, decl_uid=239470, cgraph_uid=7088, symbol_order=7881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246812;

  <bb 2> :
  D.246812 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.246812;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11assign_typeEEPT_PKS4_S7_S5_, funcdef_no=10770, decl_uid=242958, cgraph_uid=7402, symbol_order=8197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  const ptrdiff_t _Num;
  struct assign_type * D.246817;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.141_2 = (long unsigned int) _Num;
  _3 = _Num.141_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.142_4 = (long unsigned int) _Num;
  _5 = _Num.142_4 * 24;
  D.246817 = __result + _5;

  <bb 5> :
<L3>:
  return D.246817;

}



;; Function std::__niter_wrap<assign_type*> (_ZSt12__niter_wrapIP11assign_typeET_RKS2_S2_, funcdef_no=9930, decl_uid=232343, cgraph_uid=6562, symbol_order=7355)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_wrap<assign_type*> (struct assign_type * const & D.239492, struct assign_type * __res)
{
  struct assign_type * D.246819;

  <bb 2> :
  D.246819 = __res;

  <bb 3> :
<L0>:
  return D.246819;

}



;; Function std::_Destroy<assign_type*, assign_type> (_ZSt8_DestroyIP11assign_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8447, decl_uid=210538, cgraph_uid=5079, symbol_order=5868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct allocator & D.220926)
{
  <bb 2> :
  std::_Destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<assign_type*> (_ZSt8_DestroyIP11assign_typeEvT_S2_, funcdef_no=9210, decl_uid=220928, cgraph_uid=5842, symbol_order=6631)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*> (struct assign_type * __first, struct assign_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<assign_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11assign_typeEEvT_S4_, funcdef_no=9918, decl_uid=232106, cgraph_uid=6550, symbol_order=7343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<assign_type*> (struct assign_type * D.239446, struct assign_type * D.239447)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8445, decl_uid=174957, cgraph_uid=5077, symbol_order=5866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (struct _Vector_base * const this, struct assign_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<assign_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::deallocate (_ZNSt16allocator_traitsISaI11assign_typeEE10deallocateERS1_PS0_m, funcdef_no=9209, decl_uid=174762, cgraph_uid=5841, symbol_order=6630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::deallocate (struct allocator_type & __a, struct assign_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE10deallocateEPS1_m, funcdef_no=9917, decl_uid=174613, cgraph_uid=6549, symbol_order=7342)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::deallocate (struct new_allocator * const this, struct assign_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<assign_type>::end (_ZNSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8461, decl_uid=175218, cgraph_uid=5093, symbol_order=5882)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::end (struct vector * const this)
{
  struct iterator D.221066;
  struct iterator D.246827;

  <bb 2> :
  _1 = &this->D.175605._M_impl.D.174950._M_finish;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.221066, _1);
  D.246827 = D.221066;
  D.221066 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246827;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9219, decl_uid=210763, cgraph_uid=5851, symbol_order=6640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8459, decl_uid=175214, cgraph_uid=5091, symbol_order=5880)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::begin (struct vector * const this)
{
  struct iterator D.221020;
  struct iterator D.246830;

  <bb 2> :
  _1 = &this->D.175605._M_impl.D.174950._M_start;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.221020, _1);
  D.246830 = D.221020;
  D.221020 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246830;

}



;; Function std::vector<assign_type>::end (_ZNKSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8457, decl_uid=175220, cgraph_uid=5089, symbol_order=5878)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::end (const struct vector * const this)
{
  struct const_iterator D.220982;
  struct const_iterator D.246833;

  <bb 2> :
  _1 = &this->D.175605._M_impl.D.174950._M_finish;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.220982, _1);
  D.246833 = D.220982;
  D.220982 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246833;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9215, decl_uid=210661, cgraph_uid=5847, symbol_order=6636)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, const struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNKSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8456, decl_uid=175216, cgraph_uid=5088, symbol_order=5877)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::begin (const struct vector * const this)
{
  struct const_iterator D.220980;
  struct const_iterator D.246836;

  <bb 2> :
  _1 = &this->D.175605._M_impl.D.174950._M_start;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.220980, _1);
  D.246836 = D.220980;
  D.220980 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246836;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8460, decl_uid=210782, cgraph_uid=5092, symbol_order=5881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.246841;
  struct __normal_iterator D.246840;
  struct __normal_iterator D.246839;

  <bb 2> :
  D.246840 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.246841 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.246839 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.246841, D.246840, __result);

  <bb 3> :
<L0>:
  return D.246839;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9222, decl_uid=221038, cgraph_uid=5855, symbol_order=6644)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct assign_type * D.246845;
  struct __normal_iterator D.246843;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__result);
  _2 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.246845 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_3, _2, _1);
  _4 = D.246845;
  D.246843 = std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.246843;

}



;; Function std::__niter_base<assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIP11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=9924, decl_uid=232297, cgraph_uid=6556, symbol_order=7349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  struct assign_type * D.246846;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__it);
  D.246846 = *_1;

  <bb 3> :
<L0>:
  return D.246846;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9402, decl_uid=210750, cgraph_uid=6034, symbol_order=6823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * const & __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  struct assign_type * const & D.246848;

  <bb 2> :
  D.246848 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246848;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=9926, decl_uid=232304, cgraph_uid=6558, symbol_order=7351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __from, struct assign_type * __res)
{
  struct __normal_iterator D.246850;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.246850 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.246850;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10457, decl_uid=210741, cgraph_uid=7089, symbol_order=7882)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct assign_type * const D.242964;
  struct __normal_iterator D.242965;
  struct __normal_iterator D.246852;

  <bb 2> :
  _1 = this->_M_current;
  __n.143_2 = (long unsigned int) __n;
  _3 = __n.143_2 * 24;
  _4 = _1 + _3;
  D.242964 = _4;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.242965, &D.242964);
  D.246852 = D.242965;
  D.242965 = {CLOBBER};
  D.242964 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.246852;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8462, decl_uid=210788, cgraph_uid=5094, symbol_order=5883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.221069)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9224, decl_uid=221071, cgraph_uid=5856, symbol_order=6645)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=9927, decl_uid=232328, cgraph_uid=6559, symbol_order=7352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator D.239479, struct __normal_iterator D.239480)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<assign_type*, assign_type*> (_ZSt4copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=8463, decl_uid=210796, cgraph_uid=5095, symbol_order=5884)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246858;
  struct assign_type * D.246856;

  <bb 2> :
  _1 = std::__miter_base<assign_type*> (__last);
  _2 = std::__miter_base<assign_type*> (__first);
  D.246858 = std::__copy_move_a<false, assign_type*, assign_type*> (_2, _1, __result);
  D.246856 = D.246858;

  <bb 3> :
<L0>:
  return D.246856;

}



;; Function std::__miter_base<assign_type*> (_ZSt12__miter_baseIP11assign_typeET_S2_, funcdef_no=9225, decl_uid=221087, cgraph_uid=5857, symbol_order=6646)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__miter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.246859;

  <bb 2> :
  D.246859 = __it;

  <bb 3> :
<L0>:
  return D.246859;

}



;; Function std::__copy_move_a<false, assign_type*, assign_type*> (_ZSt13__copy_move_aILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=9226, decl_uid=221089, cgraph_uid=5858, symbol_order=6647)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246863;
  struct assign_type * D.246861;

  <bb 2> :
  __result.144_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.144_1);
  _3 = std::__niter_base<assign_type*> (__last);
  _4 = std::__niter_base<assign_type*> (__first);
  D.246863 = std::__copy_move_a1<false, assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.246863;
  D.246861 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.246861;

}



;; Function std::__copy_move_a1<false, assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=9929, decl_uid=232339, cgraph_uid=6561, symbol_order=7354)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246866;
  struct assign_type * D.246864;

  <bb 2> :
  D.246866 = std::__copy_move_a2<false, assign_type*, assign_type*> (__first, __last, __result);
  D.246864 = D.246866;

  <bb 3> :
<L0>:
  return D.246864;

}



;; Function std::__copy_move_a2<false, assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=10458, decl_uid=239488, cgraph_uid=7090, symbol_order=7883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246867;

  <bb 2> :
  D.246867 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.246867;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8446, decl_uid=174838, cgraph_uid=5078, symbol_order=5867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.246869;

  <bb 2> :
  D.246869 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246869;

}



;; Function std::vector<assign_type>::size (_ZNKSt6vectorI11assign_typeSaIS0_EE4sizeEv, funcdef_no=7628, decl_uid=175238, cgraph_uid=4260, symbol_order=5045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::size (const struct vector * const this)
{
  size_type D.246871;

  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_finish;
  _2 = this->D.175605._M_impl.D.174950._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.246871 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246871;

}



;; Function std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIP11assign_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8464, decl_uid=210800, cgraph_uid=5096, symbol_order=5885)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.221096)
{
  struct assign_type * D.246875;
  struct assign_type * D.246873;

  <bb 2> :
  D.246875 = std::uninitialized_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.246873 = D.246875;

  <bb 3> :
<L0>:
  return D.246873;

}



;; Function std::uninitialized_copy<assign_type*, assign_type*> (_ZSt18uninitialized_copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=9227, decl_uid=221098, cgraph_uid=5860, symbol_order=6649)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246878;
  const bool __assignable;
  struct assign_type * D.246876;

  <bb 2> :
  __assignable = 1;
  D.246878 = std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.246876 = D.246878;

  <bb 3> :
<L0>:
  return D.246876;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP11assign_typeS3_EET0_T_S5_S4_, funcdef_no=9931, decl_uid=232442, cgraph_uid=6563, symbol_order=7356)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246881;
  struct assign_type * D.246879;

  <bb 2> :
  D.246881 = std::copy<assign_type*, assign_type*> (__first, __last, __result);
  D.246879 = D.246881;

  <bb 3> :
<L0>:
  return D.246879;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS2_, funcdef_no=7622, decl_uid=175568, cgraph_uid=4254, symbol_order=5039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<assign_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.246886;
  struct __normal_iterator D.246883;
  struct __normal_iterator D.246882;
  struct allocator D.210826;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175605;
  _2 = &__x->D.175605;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  D.210826 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<assign_type>::size (__x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _4, &D.210826);

  <bb 3> :
  std::allocator<assign_type>::~allocator (&D.210826);
  D.210826 = {CLOBBER};
  _5 = &this->D.175605;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.175605._M_impl.D.174950._M_start;
  D.246882 = std::vector<assign_type>::end (__x);
  D.246883 = std::vector<assign_type>::begin (__x);
  D.246886 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (D.246883, D.246882, _7, _6);

  <bb 4> :
  _8 = D.246886;
  this->D.175605._M_impl.D.174950._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<assign_type>::~allocator (&D.210826);
  resx 2

  <bb 6> :
<L1>:
  D.210826 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8465, decl_uid=174812, cgraph_uid=5097, symbol_order=5886)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11assign_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9229, decl_uid=174777, cgraph_uid=5861, symbol_order=6650)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<assign_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2ERKS0_, funcdef_no=8474, decl_uid=174720, cgraph_uid=5106, symbol_order=5895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2ERKS2_, funcdef_no=9241, decl_uid=174649, cgraph_uid=5873, symbol_order=6662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.174651)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EmRKS1_, funcdef_no=8467, decl_uid=175037, cgraph_uid=5099, symbol_order=5888)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9231, decl_uid=174942, cgraph_uid=5863, symbol_order=6652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this, __a);
  _1 = &this->D.174950;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9233, decl_uid=174961, cgraph_uid=5865, symbol_order=6654)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.246893;

  <bb 2> :
  D.246893 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (this, __n);
  _1 = D.246893;
  this->_M_impl.D.174950._M_start = _1;
  _2 = this->_M_impl.D.174950._M_start;
  this->_M_impl.D.174950._M_finish = _2;
  _3 = this->_M_impl.D.174950._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.174950._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6269, decl_uid=174997, cgraph_uid=3241, symbol_order=4011)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<assign_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<assign_type>::~allocator (_ZNSaI11assign_typeED2Ev, funcdef_no=7610, decl_uid=174730, cgraph_uid=4242, symbol_order=5027)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeED2Ev, funcdef_no=8443, decl_uid=174659, cgraph_uid=5075, symbol_order=5864)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EED2Ev, funcdef_no=7613, decl_uid=175060, cgraph_uid=4245, symbol_order=5030)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.174950._M_end_of_storage;
  _2 = this->_M_impl.D.174950._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.174950._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::put (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7624, decl_uid=190694, cgraph_uid=4256, symbol_order=5041)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_assign_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_assign_array & v)
{
  bool D.246901;
  struct hash_entry * D.246900;
  unsigned int D.246899;
  bool ins;
  struct hash_entry * e;
  bool D.246897;
  void * D.210836;
  void * D.210835;

  <bb 2> :
  _1 = &this->m_table;
  D.246899 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.246899;
  D.246900 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.246900;
  D.246901 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (e);
  ins = D.246901;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.210835 = &e->m_value;
  D.210836 = operator new (32, D.210835);
  function_assign_array::function_assign_array (D.210836, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_assign_array::operator= (_4, v);

  <bb 5> :
  D.246897 = ~ins;

  <bb 6> :
<L3>:
  return D.246897;

  <bb 7> :
<L4>:
  operator delete (D.210836, D.210835);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8470, decl_uid=190852, cgraph_uid=5102, symbol_order=5891)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.246952;
  bool D.246951;
  bool D.246950;
  bool D.246949;
  bool D.246948;
  bool D.246947;
  struct value_type * D.246946;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.150;
  bool retval.149;
  bool retval.148;
  bool retval.147;
  bool retval.146;
  bool retval.145;
  struct value_type * D.246908;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.246947 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.145 = D.246947;
  if (retval.145 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.246948 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.146 = D.246948;
  if (retval.146 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.246949 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.147 = D.246949;
  if (retval.147 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.246908 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.246950 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.148 = D.246950;
  if (retval.148 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.246951 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.149 = D.246951;
  if (retval.149 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.246952 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.150 = D.246952;
  if (retval.150 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.246908 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.246908 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.246908 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.246908 = _37 + _39;

  <bb 27> :
<L37>:
  return D.246908;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9235, decl_uid=190933, cgraph_uid=5870, symbol_order=6659)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.246983;
  unsigned int D.246982;
  bool D.246981;
  bool D.246980;
  struct mem_alloc_description & D.246979;
  struct value_type * D.246978;
  unsigned int D.246977;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.232524;
  void * D.232523;
  struct hash_entry & D.232552;
  bool iftmp.154;
  bool retval.153;
  bool iftmp.152;
  bool retval.151;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.152 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.152 = 0;

  <bb 6> :
  retval.151 = iftmp.152;
  if (retval.151 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.246977 = hash_table_higher_prime_index (_5);
  nindex = D.246977;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.246978 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.246978;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.246980 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.246980;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.246981 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.246981;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.154 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.154 = 0;

  <bb 15> :
  retval.153 = iftmp.154;
  if (retval.153 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.246982 = hash_map<tree_node*, function_assign_array>::hash_entry::hash (x);
  _16 = D.246982;
  D.246983 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.246983;
  D.232552 = std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (x);
  D.232523 = q;
  D.232524 = operator new (40, D.232523);
  hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (D.232524, D.232552);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=9933, decl_uid=190828, cgraph_uid=6565, symbol_order=7358)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.246984;

  <bb 2> :
  D.246984 = this->m_size;

  <bb 3> :
<L0>:
  return D.246984;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=9934, decl_uid=190830, cgraph_uid=6566, symbol_order=7359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.246986;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.246986 = _1 - _2;

  <bb 3> :
<L0>:
  return D.246986;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=9935, decl_uid=190930, cgraph_uid=6567, symbol_order=7360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.155;
  bool D.246988;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.155 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.155 = 0;

  <bb 6> :
  D.246988 = iftmp.155;

  <bb 7> :
<L4>:
  return D.246988;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9211, decl_uid=190920, cgraph_uid=5843, symbol_order=6632)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.247010;
  struct value_type * D.247009;
  struct mem_alloc_description & D.247008;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.247006;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.247009 = xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (n);
  nentries = D.247009;
  goto <bb 6>; [INV]

  <bb 5> :
  D.247010 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (n);
  nentries = D.247010;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.247006 = nentries;

  <bb 9> :
<L14>:
  return D.247006;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9919, decl_uid=216752, cgraph_uid=6551, symbol_order=7344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.247013;
  struct hash_entry * D.247011;

  <bb 2> :
  D.247013 = xcalloc (count, 40);
  D.247011 = D.247013;

  <bb 3> :
<L0>:
  return D.247011;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9920, decl_uid=232113, cgraph_uid=6552, symbol_order=7345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.247020;
  struct hash_entry * D.247019;
  struct hash_entry * D.247017;
  bool retval.156;

  <bb 2> :
  retval.156 = need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ();
  if (retval.156 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.247019 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.247017 = D.247019;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.247020 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.247017 = D.247020;

  <bb 5> :
<L2>:
  return D.247017;

}



;; Function finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10449, decl_uid=239454, cgraph_uid=7084, symbol_order=7877)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10451, decl_uid=242915, cgraph_uid=7082, symbol_order=7875)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_assign_array::~function_assign_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10448, decl_uid=239453, cgraph_uid=7080, symbol_order=7873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ()
{
  bool D.247021;

  <bb 2> :
  D.247021 = 1;

  <bb 3> :
<L0>:
  return D.247021;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=9937, decl_uid=190753, cgraph_uid=6569, symbol_order=7362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_assign_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.247025;
  hashval_t D.247023;

  <bb 2> :
  _1 = &e->m_key;
  D.247025 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_1);
  D.247023 = D.247025;

  <bb 3> :
<L0>:
  return D.247023;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=9936, decl_uid=190923, cgraph_uid=6568, symbol_order=7361)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.247038;
  bool D.247037;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.158;
  struct value_type * D.247029;
  bool retval.157;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.247037 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.157 = D.247037;
  if (retval.157 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.247029 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.247038 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.158 = D.247038;
  if (retval.158 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.247029 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.247029;

}



;; Function std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=9938, decl_uid=232521, cgraph_uid=6570, symbol_order=7363)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.247039;

  <bb 2> :
  D.247039 = __t;

  <bb 3> :
<L0>:
  return D.247039;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9237, decl_uid=232546, cgraph_uid=5868, symbol_order=6657)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.232548)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.232548->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.232548->m_value;
  function_assign_array::function_assign_array (_2, _3);
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2EOS_, funcdef_no=6288, decl_uid=190482, cgraph_uid=3263, symbol_order=4033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, struct function_assign_array & D.190484)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190484->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190484->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6286, decl_uid=175562, cgraph_uid=3260, symbol_order=4030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, struct vector & D.175564)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175605;
  _2 = &D.175564->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6284, decl_uid=175030, cgraph_uid=3257, symbol_order=4027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.175032)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.175032->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=7626, decl_uid=174936, cgraph_uid=4258, symbol_order=5043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  std::allocator<assign_type>::allocator (this, _1);
  _2 = &this->D.174950;
  _3 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.174950;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11assign_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=8472, decl_uid=210844, cgraph_uid=5104, symbol_order=5893)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.247041;

  <bb 2> :
  D.247041 = __t;

  <bb 3> :
<L0>:
  return D.247041;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=8477, decl_uid=174892, cgraph_uid=5109, symbol_order=5898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8908, decl_uid=216754, cgraph_uid=5540, symbol_order=6329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9239, decl_uid=190941, cgraph_uid=5871, symbol_order=6660)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=9939, decl_uid=190765, cgraph_uid=6571, symbol_order=7364)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10460, decl_uid=239530, cgraph_uid=7092, symbol_order=7885)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<tree_node>::mark_empty (_ZN12pointer_hashI9tree_nodeE10mark_emptyERPS0_, funcdef_no=10772, decl_uid=85306, cgraph_uid=7404, symbol_order=8199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<tree_node>::mark_empty (union tree_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2ERKS_, funcdef_no=6292, decl_uid=190473, cgraph_uid=3267, symbol_order=4037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, const struct function_assign_array & D.190475)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190475->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190475->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function operator delete (_ZdlPvS_, funcdef_no=17, decl_uid=3708, cgraph_uid=18, symbol_order=17)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void operator delete (void * D.3706, void * D.3707)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::~vector (_ZNSt6vectorI11assign_typeSaIS0_EED2Ev, funcdef_no=7616, decl_uid=175602, cgraph_uid=4248, symbol_order=5033)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175605;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.175605._M_impl.D.174950._M_finish;
  _4 = this->D.175605._M_impl.D.174950._M_start;
  std::_Destroy<assign_type*, assign_type> (_4, _3, _2);
  _5 = &this->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function function_assign_array::~function_assign_array (_ZN21function_assign_arrayD2Ev, funcdef_no=6278, decl_uid=190640, cgraph_uid=3253, symbol_order=4023)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::~function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  _1 = &this->assign_type_array;
  std::vector<assign_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function get_function_varstmt (_Z20get_function_varstmtP9tree_nodeS0_, funcdef_no=6290, decl_uid=191098, cgraph_uid=3269, symbol_order=4039)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_varstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_assign_array * D.247050;
  struct function_assign_array * D.247049;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  bool retval.166;
  bool retval.159;

  <bb 2> :
  function_assign_collect.160_1 = function_assign_collect;
  D.247049 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.160_1, &function_tree);

  <bb 3> :
  _2 = D.247049;
  retval.159 = _2 == 0B;
  if (retval.159 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_assign_collect.161_3 = function_assign_collect;
  D.247050 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.161_3, &function_tree);

  <bb 6> :
  _4 = D.247050;
  function_assign_array::function_assign_array (&assign_array, _4);

  <bb 7> :
  std::vector<assign_type>::vector (&assign_type_array, &assign_array.assign_type_array);

  <bb 8> :
  _5 = std::vector<assign_type>::size (&assign_type_array);
  function_tree.162_6 = function_tree;
  stderr.163_7 = stderr;
  fprintf (stderr.163_7, "=======print_function_var %d   %d========\n", function_tree.162_6, _5);

  <bb 9> :
  stderr.164_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.164_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<assign_type>::operator[] (&assign_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.165_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.165_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<assign_type>::size (&assign_type_array);
  retval.166 = _13 < _14;
  if (retval.166 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.167_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.167_15);

  <bb 16> :
  stderr.168_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.168_16);

  <bb 17> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 21> :
<L10>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 1

}



;; Function std::vector<assign_type>::operator[] (_ZNSt6vectorI11assign_typeSaIS0_EEixEm, funcdef_no=7629, decl_uid=175258, cgraph_uid=4261, symbol_order=5046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<assign_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.247056;

  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_start;
  _2 = __n * 24;
  D.247056 = _1 + _2;

  <bb 3> :
<L0>:
  return D.247056;

}



;; Function get_function_specialstmt (_Z24get_function_specialstmtP9tree_nodeS0_, funcdef_no=6294, decl_uid=191114, cgraph_uid=3270, symbol_order=4040)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_specialstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_return_array * D.247064;
  struct function_return_array * D.247063;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.176;
  bool retval.169;

  <bb 2> :
  function_return_collect.170_1 = function_return_collect;
  D.247063 = hash_map<tree_node*, function_return_array>::get (function_return_collect.170_1, &function_tree);

  <bb 3> :
  _2 = D.247063;
  retval.169 = _2 == 0B;
  if (retval.169 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_return_collect.171_3 = function_return_collect;
  D.247064 = hash_map<tree_node*, function_return_array>::get (function_return_collect.171_3, &function_tree);

  <bb 6> :
  _4 = D.247064;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.172_6 = function_tree;
  stderr.173_7 = stderr;
  fprintf (stderr.173_7, "=======print_function_return %d   %d========\n", function_tree.172_6, _5);

  <bb 9> :
  stderr.174_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.174_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.175_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.175_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.176 = _13 < _14;
  if (retval.176 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.177_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.177_15);

  <bb 16> :
  stderr.178_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.178_16);

  <bb 17> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 21> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function trace_fucntion_relate_stmt (_Z26trace_fucntion_relate_stmtP11cgraph_nodeP9tree_nodeS2_, funcdef_no=6295, decl_uid=187052, cgraph_uid=3291, symbol_order=4067)

Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 113
Removing basic block 114
Removing basic block 115
Removing basic block 116
Removing basic block 118
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 125
Removing basic block 126
Removing basic block 127
Removing basic block 136
Removing basic block 137
Removing basic block 149
Removing basic block 150
Removing basic block 160
Removing basic block 165
Removing basic block 168
Removing basic block 190
Removing basic block 200
Removing basic block 201
Removing basic block 202
Removing basic block 203
Removing basic block 204
Removing basic block 230
Removing basic block 231
Removing basic block 232
Removing basic block 259
Removing basic block 260
Removing basic block 261
Removing basic block 262
Removing basic block 263
Removing basic block 264
Removing basic block 299
Removing basic block 304
Removing basic block 307
Removing basic block 328
Removing basic block 334
Removing basic block 335
Removing basic block 336
Removing basic block 337
Removing basic block 338
Removing basic block 339
Removing basic block 340
Removing basic block 349
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 308, latch 307
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 294, latch 293
;;  depth 2, outer 1
;;  nodes
;;
;; Loop 3
;;  header 292, latch 291
;;  depth 3, outer 2
;;  nodes
;; 2 succs { 3 4 }
;; 3 succs { 310 }
;; 4 succs { 308 }
;; 5 succs { 6 7 }
;; 6 succs { 307 }
;; 7 succs { 8 306 }
;; 8 succs { 315 9 }
;; 9 succs { 315 10 }
;; 10 succs { 315 11 }
;; 11 succs { 315 12 }
;; 12 succs { 315 13 }
;; 13 succs { 294 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 292 }
;; 18 succs { 19 24 }
;; 19 succs { 311 20 }
;; 20 succs { 311 21 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 311 24 }
;; 24 succs { 25 226 }
;; 25 succs { 26 175 }
;; 26 succs { 27 175 }
;; 27 succs { 29 28 }
;; 28 succs { 29 175 }
;; 29 succs { 311 30 }
;; 30 succs { 31 175 }
;; 31 succs { 311 32 }
;; 32 succs { 35 33 }
;; 33 succs { 311 34 }
;; 34 succs { 35 36 }
;; 35 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 38 175 }
;; 38 succs { 311 39 }
;; 39 succs { 40 175 }
;; 40 succs { 311 41 }
;; 41 succs { 311 42 }
;; 42 succs { 43 175 }
;; 43 succs { 311 44 }
;; 44 succs { 45 130 }
;; 45 succs { 311 46 }
;; 46 succs { 311 47 }
;; 47 succs { 48 59 }
;; 48 succs { 311 49 }
;; 49 succs { 50 59 }
;; 50 succs { 311 51 }
;; 51 succs { 311 52 }
;; 52 succs { 53 59 }
;; 53 succs { 311 54 }
;; 54 succs { 311 55 }
;; 55 succs { 311 56 }
;; 56 succs { 311 57 }
;; 57 succs { 311 58 }
;; 58 succs { 311 59 }
;; 59 succs { 311 60 }
;; 60 succs { 61 64 }
;; 61 succs { 311 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 67 }
;; 66 succs { 291 }
;; 67 succs { 311 68 }
;; 68 succs { 69 72 }
;; 69 succs { 311 70 }
;; 70 succs { 71 72 }
;; 71 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 74 111 }
;; 74 succs { 311 75 }
;; 75 succs { 76 130 }
;; 76 succs { 77 130 }
;; 77 succs { 78 130 }
;; 78 succs { 79 130 }
;; 79 succs { 81 80 }
;; 80 succs { 81 82 }
;; 81 succs { 291 }
;; 82 succs { 83 85 }
;; 83 succs { 84 85 }
;; 84 succs { 86 }
;; 85 succs { 86 }
;; 86 succs { 87 130 }
;; 87 succs { 311 88 }
;; 88 succs { 311 89 }
;; 89 succs { 90 130 }
;; 90 succs { 311 91 }
;; 91 succs { 311 92 }
;; 92 succs { 93 130 }
;; 93 succs { 94 109 }
;; 94 succs { 95 109 }
;; 95 succs { 311 96 }
;; 96 succs { 97 108 }
;; 97 succs { 311 98 }
;; 98 succs { 99 107 }
;; 99 succs { 100 108 }
;; 100 succs { 311 101 }
;; 101 succs { 102 108 }
;; 102 succs { 311 103 }
;; 103 succs { 104 108 }
;; 104 succs { 311 105 }
;; 105 succs { 106 108 }
;; 106 succs { 291 }
;; 107 succs { 291 }
;; 108 succs { 110 }
;; 109 succs { 291 }
;; 110 succs { 130 }
;; 111 succs { 311 112 }
;; 112 succs { 113 119 }
;; 113 succs { 311 114 }
;; 114 succs { 311 115 }
;; 115 succs { 116 130 }
;; 116 succs { 311 117 }
;; 117 succs { 118 130 }
;; 118 succs { 291 }
;; 119 succs { 311 120 }
;; 120 succs { 121 130 }
;; 121 succs { 311 122 }
;; 122 succs { 311 123 }
;; 123 succs { 125 124 }
;; 124 succs { 125 126 }
;; 125 succs { 291 }
;; 126 succs { 311 127 }
;; 127 succs { 311 128 }
;; 128 succs { 129 130 }
;; 129 succs { 291 }
;; 130 succs { 311 131 }
;; 131 succs { 311 132 }
;; 132 succs { 311 133 }
;; 133 succs { 311 134 }
;; 134 succs { 311 135 }
;; 135 succs { 136 166 }
;; 136 succs { 137 145 }
;; 137 succs { 138 139 }
;; 138 succs { 311 144 }
;; 139 succs { 140 143 }
;; 140 succs { 311 141 }
;; 141 succs { 311 142 }
;; 142 succs { 311 143 }
;; 143 succs { 311 144 }
;; 144 succs { 311 155 }
;; 145 succs { 146 148 }
;; 146 succs { 311 147 }
;; 147 succs { 155 }
;; 148 succs { 149 154 }
;; 149 succs { 311 150 }
;; 150 succs { 311 151 }
;; 151 succs { 311 152 }
;; 152 succs { 311 153 }
;; 153 succs { 154 }
;; 154 succs { 311 155 }
;; 155 succs { 311 156 }
;; 156 succs { 311 157 }
;; 157 succs { 311 158 }
;; 158 succs { 311 159 }
;; 159 succs { 311 160 }
;; 160 succs { 311 161 }
;; 161 succs { 311 162 }
;; 162 succs { 311 163 }
;; 163 succs { 311 164 }
;; 164 succs { 311 165 }
;; 165 succs { 311 171 }
;; 166 succs { 311 167 }
;; 167 succs { 311 168 }
;; 168 succs { 311 169 }
;; 169 succs { 311 170 }
;; 170 succs { 311 171 }
;; 171 succs { 311 172 }
;; 172 succs { 311 173 }
;; 173 succs { 311 174 }
;; 174 succs { 311 175 }
;; 175 succs { 311 176 }
;; 176 succs { 178 177 }
;; 177 succs { 178 179 }
;; 178 succs { 180 }
;; 179 succs { 180 }
;; 180 succs { 181 291 }
;; 181 succs { 311 182 }
;; 182 succs { 311 183 }
;; 183 succs { 184 186 }
;; 184 succs { 311 185 }
;; 185 succs { 186 }
;; 186 succs { 187 200 }
;; 187 succs { 188 200 }
;; 188 succs { 189 200 }
;; 189 succs { 190 200 }
;; 190 succs { 311 191 }
;; 191 succs { 311 192 }
;; 192 succs { 311 193 }
;; 193 succs { 311 194 }
;; 194 succs { 311 195 }
;; 195 succs { 311 196 }
;; 196 succs { 311 197 }
;; 197 succs { 311 198 }
;; 198 succs { 311 199 }
;; 199 succs { 311 200 }
;; 200 succs { 201 291 }
;; 201 succs { 202 291 }
;; 202 succs { 311 203 }
;; 203 succs { 204 291 }
;; 204 succs { 311 205 }
;; 205 succs { 206 291 }
;; 206 succs { 207 214 }
;; 207 succs { 311 208 }
;; 208 succs { 311 209 }
;; 209 succs { 210 214 }
;; 210 succs { 311 211 }
;; 211 succs { 311 212 }
;; 212 succs { 213 214 }
;; 213 succs { 215 }
;; 214 succs { 215 }
;; 215 succs { 216 291 }
;; 216 succs { 311 217 }
;; 217 succs { 311 218 }
;; 218 succs { 311 219 }
;; 219 succs { 311 220 }
;; 220 succs { 311 221 }
;; 221 succs { 311 222 }
;; 222 succs { 311 223 }
;; 223 succs { 311 224 }
;; 224 succs { 311 225 }
;; 225 succs { 311 291 }
;; 226 succs { 227 291 }
;; 227 succs { 228 291 }
;; 228 succs { 229 291 }
;; 229 succs { 230 291 }
;; 230 succs { 311 231 }
;; 231 succs { 232 291 }
;; 232 succs { 311 233 }
;; 233 succs { 311 234 }
;; 234 succs { 311 235 }
;; 235 succs { 236 291 }
;; 236 succs { 311 237 }
;; 237 succs { 243 238 }
;; 238 succs { 311 239 }
;; 239 succs { 243 240 }
;; 240 succs { 311 241 }
;; 241 succs { 311 242 }
;; 242 succs { 243 244 }
;; 243 succs { 245 }
;; 244 succs { 245 }
;; 245 succs { 246 291 }
;; 246 succs { 247 291 }
;; 247 succs { 250 248 }
;; 248 succs { 250 249 }
;; 249 succs { 250 251 }
;; 250 succs { 291 }
;; 251 succs { 311 252 }
;; 252 succs { 253 291 }
;; 253 succs { 311 254 }
;; 254 succs { 311 255 }
;; 255 succs { 256 291 }
;; 256 succs { 257 286 }
;; 257 succs { 258 266 }
;; 258 succs { 259 260 }
;; 259 succs { 311 265 }
;; 260 succs { 261 264 }
;; 261 succs { 311 262 }
;; 262 succs { 311 263 }
;; 263 succs { 311 264 }
;; 264 succs { 311 265 }
;; 265 succs { 311 276 }
;; 266 succs { 267 269 }
;; 267 succs { 311 268 }
;; 268 succs { 276 }
;; 269 succs { 270 275 }
;; 270 succs { 311 271 }
;; 271 succs { 311 272 }
;; 272 succs { 311 273 }
;; 273 succs { 311 274 }
;; 274 succs { 275 }
;; 275 succs { 311 276 }
;; 276 succs { 311 277 }
;; 277 succs { 311 278 }
;; 278 succs { 311 279 }
;; 279 succs { 311 280 }
;; 280 succs { 311 281 }
;; 281 succs { 311 282 }
;; 282 succs { 311 283 }
;; 283 succs { 311 284 }
;; 284 succs { 311 285 }
;; 285 succs { 311 290 }
;; 286 succs { 311 287 }
;; 287 succs { 311 288 }
;; 288 succs { 311 289 }
;; 289 succs { 311 290 }
;; 290 succs { 291 }
;; 291 succs { 292 }
;; 292 succs { 18 293 }
;; 293 succs { 294 }
;; 294 succs { 14 295 }
;; 295 succs { 296 305 }
;; 296 succs { 312 297 }
;; 297 succs { 298 299 }
;; 298 succs { 312 302 }
;; 299 succs { 312 300 }
;; 300 succs { 312 301 }
;; 301 succs { 312 302 }
;; 302 succs { 312 303 }
;; 303 succs { 312 304 }
;; 304 succs { 305 }
;; 305 succs { 306 }
;; 306 succs { 307 }
;; 307 succs { 308 }
;; 308 succs { 5 309 }
;; 309 succs { 310 }
;; 310 succs { 1 }
;; 311 succs { 315 }
;; 312 succs { 313 }
;; 313 succs { 314 }
;; 314 succs { 315 }
;; 315 succs { }
void trace_fucntion_relate_stmt (struct cgraph_node * node, union tree_node * function_tree, union tree_node * mallocStmt_tree)
{
  struct cgraph_node * D.247450;
  struct function_relate_array * D.247445;
  struct function_relate_array * D.247444;
  union tree_node * D.247442;
  union tree_node * D.247441;
  const char * D.247440;
  bool D.247439;
  union tree_node * D.247438;
  union tree_node * D.247437;
  const char * D.247436;
  union tree_node * D.247435;
  union tree_node * D.247434;
  union tree_node * D.247433;
  union tree_node * D.247432;
  const char * D.247431;
  union tree_node * D.247430;
  unsigned int D.247429;
  union tree_node * D.247428;
  const char * D.247427;
  bool D.247426;
  union tree_node * D.247425;
  bool D.247424;
  union tree_node * D.247423;
  union tree_node * D.247422;
  union tree_node * D.247421;
  union tree_node * D.247420;
  const char * D.247419;
  union tree_node * D.247418;
  union tree_node * D.247417;
  union tree_node * D.247416;
  union tree_node * D.247415;
  union tree_node * D.247414;
  union tree_node * D.247413;
  const char * D.247412;
  const char * D.247411;
  union tree_node * D.247410;
  const char * D.247409;
  bool D.247408;
  union tree_node * D.247407;
  union tree_node * D.247406;
  union tree_node * D.247405;
  union tree_node * D.247404;
  union tree_node * D.247403;
  bool D.247402;
  union tree_node * D.247401;
  union tree_node * D.247400;
  bool D.247399;
  union tree_node * D.247398;
  union tree_node * D.247397;
  union tree_node * D.247396;
  union tree_node * D.247395;
  const char * D.247394;
  union tree_node * D.247393;
  const char * D.247392;
  union tree_node * D.247391;
  union tree_node * D.247390;
  union tree_node * D.247389;
  union tree_node * D.247388;
  union tree_node * D.247387;
  union tree_node * D.247386;
  union tree_node * D.247385;
  bool D.247384;
  union tree_node * D.247383;
  union tree_node * D.247382;
  bool D.247381;
  union tree_node * D.247380;
  union tree_node * D.247379;
  bool D.247378;
  union tree_node * D.247377;
  union tree_node * D.247376;
  union tree_node * D.247375;
  union tree_node * D.247374;
  union tree_node * D.247373;
  const char * D.247372;
  union tree_node * D.247371;
  const char * D.247370;
  const char * D.247369;
  struct function * D.247368;
  struct cgraph_node * D.247367;
  struct relate_type relate_type;
  long unsigned int x;
  struct pt_solution * pt2;
  const char * name;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct gimple * def_stmt;
  union tree_node * second;
  struct pt_solution * pt4;
  struct pt_solution * pt3;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * first;
  long unsigned int x;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  const char * name;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  int seccount;
  int fucntion_level;
  union tree_node * t;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.330;
  bool retval.327;
  bool retval.298;
  bool iftmp.297;
  bool retval.296;
  bool retval.295;
  bool retval.294;
  bool retval.290;
  bool iftmp.281;
  bool retval.280;
  bool retval.279;
  bool retval.269;
  bool iftmp.267;
  bool retval.266;
  bool retval.230;
  bool retval.229;
  bool retval.228;
  bool retval.226;
  bool retval.225;
  bool retval.223;
  bool retval.222;
  bool retval.221;
  bool retval.220;
  bool retval.219;
  bool retval.218;
  bool retval.217;
  bool iftmp.216;
  bool retval.215;
  bool iftmp.212;
  bool retval.211;
  bool iftmp.210;
  bool retval.209;
  bool retval.203;
  bool retval.202;
  bool retval.200;
  bool retval.199;
  bool retval.197;
  bool iftmp.196;
  bool retval.195;
  bool retval.194;
  bool retval.189;
  bool retval.188;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 310>; [INV]

  <bb 4> :
  symtab.179_1 = symtab;
  D.247367 = symbol_table::first_defined_function (symtab.179_1);
  node = D.247367;
  goto <bb 308>; [INV]

  <bb 5> :
  fucntion_level = 0;
  D.247368 = cgraph_node::get_fun (node);
  _2 = D.247368;
  push_cfun (_2);
  cfun.180_3 = cfun;
  if (cfun.180_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 307>; [INV]

  <bb 7> :
  cfun.181_4 = cfun;
  _5 = cfun.181_4->decl;
  if (function_tree == _5)
    goto <bb 8>; [INV]
  else
    goto <bb 306>; [INV]

  <bb 8> :
  now_relatelaststmt = 0B;
  calculate_dominance_info (1);

  <bb 9> :
  D.247369 = get_name (function_tree);

  <bb 10> :
  _6 = D.247369;
  stderr.182_7 = stderr;
  fprintf (stderr.182_7, "\x1b[40;36m ======= node_fun:%s========= \x1b[0m\n", _6);

  <bb 11> :
  mallocStmt_tree.183_8 = mallocStmt_tree;
  D.247370 = get_name (mallocStmt_tree.183_8);

  <bb 12> :
  _9 = D.247370;
  stderr.184_10 = stderr;
  fprintf (stderr.184_10, "\x1b[40;36m ======= find relate stmt with %s ========= \x1b[0m\n", _9);

  <bb 13> :
  seccount = 0;
  cfun.185_11 = cfun;
  _12 = cfun.185_11->cfg;
  _13 = _12->x_entry_block_ptr;
  bb = _13->next_bb;
  goto <bb 294>; [INV]

  <bb 14> :
  tracerelatestmt.186_14 = tracerelatestmt;
  _15 = ~tracerelatestmt.186_14;
  if (_15 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  freemod.187_16 = freemod;
  _17 = ~freemod.187_16;
  if (_17 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  fistconunt = 0;

  <bb 17> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 292>; [INV]

  <bb 18> :
  gc = gsi_stmt (gsi);
  retval.188 = is_gimple_call (gc);
  if (retval.188 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  D.247371 = gimple_call_fn (gc);

  <bb 20> :
  _18 = D.247371;
  D.247372 = get_name (_18);

  <bb 21> :
  name = D.247372;
  if (name != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  _19 = strcmp (name, "pthread_exit");
  if (_19 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  debug_gimple_stmt (gc);

  <bb 24> :
  retval.189 = is_gimple_assign (gc);
  if (retval.189 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 25> :
  mallocStmt_tree.190_20 = mallocStmt_tree;
  pi1 = mallocStmt_tree.190_20->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 26> :
  relatemod.191_21 = relatemod;
  if (relatemod.191_21 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 27> :
  mallocStmt_tree.192_22 = mallocStmt_tree;
  _23 = mallocStmt_tree.192_22->base.code;
  if (_23 == 153)
    goto <bb 29>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  mallocStmt_tree.193_24 = mallocStmt_tree;
  _25 = mallocStmt_tree.193_24->base.code;
  if (_25 == 36)
    goto <bb 29>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 29> :
  D.247373 = gimple_assign_lhs (gc);

  <bb 30> :
  _26 = D.247373;
  retval.194 = _26 != 0B;
  if (retval.194 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 31> :
  D.247374 = gimple_assign_lhs (gc);

  <bb 32> :
  _27 = D.247374;
  _28 = _27->base.code;
  if (_28 == 153)
    goto <bb 35>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  D.247375 = gimple_assign_lhs (gc);

  <bb 34> :
  _29 = D.247375;
  _30 = _29->base.code;
  if (_30 == 165)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  iftmp.196 = 1;
  goto <bb 37>; [INV]

  <bb 36> :
  iftmp.196 = 0;

  <bb 37> :
  retval.195 = iftmp.196;
  if (retval.195 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 38> :
  D.247376 = gimple_assign_lhs (gc);

  <bb 39> :
  _31 = D.247376;
  pi2 = _31->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 40> :
  D.247377 = gimple_assign_lhs (gc);

  <bb 41> :
  _32 = D.247377;
  mallocStmt_tree.198_33 = mallocStmt_tree;
  D.247378 = ptr_derefs_may_alias_p (mallocStmt_tree.198_33, _32);

  <bb 42> :
  retval.197 = D.247378;
  if (retval.197 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 43> :
  D.247379 = gimple_assign_rhs1 (gc);

  <bb 44> :
  _34 = D.247379;
  retval.199 = _34 != 0B;
  if (retval.199 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 45> :
  D.247380 = gimple_assign_lhs (gc);

  <bb 46> :
  _35 = D.247380;
  mallocStmt_tree.201_36 = mallocStmt_tree;
  D.247381 = ptr_derefs_may_alias_p (mallocStmt_tree.201_36, _35);

  <bb 47> :
  retval.200 = D.247381;
  if (retval.200 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 48> :
  D.247382 = gimple_assign_lhs (gc);

  <bb 49> :
  _37 = D.247382;
  _38 = _37->base.code;
  retval.202 = _38 == 131;
  if (retval.202 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 50> :
  D.247383 = gimple_assign_rhs1 (gc);

  <bb 51> :
  _39 = D.247383;
  mallocStmt_tree.204_40 = mallocStmt_tree;
  D.247384 = ptr_derefs_may_alias_p (mallocStmt_tree.204_40, _39);

  <bb 52> :
  retval.203 = D.247384;
  if (retval.203 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 53> :
  D.247385 = gimple_assign_rhs1 (gc);

  <bb 54> :
  _41 = D.247385;
  debug_tree (_41);

  <bb 55> :
  stderr.205_42 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.205_42);

  <bb 56> :
  stderr.206_43 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address (rhs)\x1b[0m\n", 1, 66, stderr.206_43);

  <bb 57> :
  stderr.207_44 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.207_44);

  <bb 58> :
  stderr.208_45 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.208_45);

  <bb 59> :
  D.247386 = gimple_assign_lhs (gc);

  <bb 60> :
  _46 = D.247386;
  _47 = _46->base.code;
  if (_47 == 153)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  D.247387 = gimple_assign_rhs1 (gc);

  <bb 62> :
  _48 = D.247387;
  _49 = _48->base.code;
  if (_49 == 26)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.210 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.210 = 0;

  <bb 65> :
  retval.209 = iftmp.210;
  if (retval.209 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 67> :
  D.247388 = gimple_assign_lhs (gc);

  <bb 68> :
  _50 = D.247388;
  _51 = _50->base.code;
  if (_51 == 165)
    goto <bb 69>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 69> :
  D.247389 = gimple_assign_rhs1 (gc);

  <bb 70> :
  _52 = D.247389;
  _53 = _52->base.code;
  if (_53 == 26)
    goto <bb 71>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 71> :
  iftmp.212 = 1;
  goto <bb 73>; [INV]

  <bb 72> :
  iftmp.212 = 0;

  <bb 73> :
  retval.211 = iftmp.212;
  if (retval.211 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 74> :
  D.247390 = gimple_assign_lhs (gc);

  <bb 75> :
  _54 = D.247390;
  first = _54->exp.operands[0];
  def_stmt = first->ssa_name.def_stmt;
  mallocStmt_tree.213_55 = mallocStmt_tree;
  def_stmt2 = mallocStmt_tree.213_55->ssa_name.def_stmt;
  _56 = first->base.code;
  if (_56 != 36)
    goto <bb 76>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 76> :
  mallocStmt_tree.214_57 = mallocStmt_tree;
  _58 = mallocStmt_tree.214_57->base.code;
  if (_58 != 36)
    goto <bb 77>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 77> :
  if (def_stmt != 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 78> :
  if (def_stmt2 != 0B)
    goto <bb 79>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 79> :
  pi4 = first->ssa_name.info.ptr_info;
  pt1 = &pi4->pt;
  pt2 = &pi1->pt;
  if (pt1 == 0B)
    goto <bb 81>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 80> :
  _59 = BIT_FIELD_REF <*pt1, 8, 0>;
  _60 = _59 & 1;
  if (_60 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 82> :
  _61 = is_gimple_assign (def_stmt);
  if (_61 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 83> :
  _62 = is_gimple_assign (def_stmt2);
  if (_62 != 0)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  iftmp.216 = 1;
  goto <bb 86>; [INV]

  <bb 85> :
  iftmp.216 = 0;

  <bb 86> :
  retval.215 = iftmp.216;
  if (retval.215 != 0)
    goto <bb 87>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 87> :
  D.247391 = gimple_assign_rhs1 (def_stmt);

  <bb 88> :
  _63 = D.247391;
  _64 = _63->base.code;
  _65 = (tree_code) _64;
  D.247392 = get_tree_code_name (_65);

  <bb 89> :
  _66 = D.247392;
  _67 = strcmp (_66, "<invalid tree code>");
  retval.217 = _67 == 0;
  if (retval.217 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 90> :
  D.247393 = gimple_assign_rhs1 (def_stmt2);

  <bb 91> :
  _68 = D.247393;
  _69 = _68->base.code;
  _70 = (tree_code) _69;
  D.247394 = get_tree_code_name (_70);

  <bb 92> :
  _71 = D.247394;
  _72 = strcmp (_71, "<invalid tree code>");
  retval.218 = _72 == 0;
  if (retval.218 != 0)
    goto <bb 93>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 93> :
  _73 = BIT_FIELD_REF <*pt1, 8, 0>;
  _74 = _73 & 2;
  if (_74 == 0)
    goto <bb 94>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 94> :
  _75 = BIT_FIELD_REF <*pt2, 8, 0>;
  _76 = _75 & 2;
  if (_76 == 0)
    goto <bb 95>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 95> :
  D.247395 = gimple_assign_rhs1 (def_stmt2);

  <bb 96> :
  _77 = D.247395;
  retval.219 = _77 != 0B;
  if (retval.219 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 97> :
  D.247396 = gimple_assign_rhs1 (def_stmt2);

  <bb 98> :
  _78 = D.247396;
  _79 = is_global_var (_78);
  retval.220 = ~_79;
  if (retval.220 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 99> :
  if (pt1 != 0B)
    goto <bb 100>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 100> :
  D.247397 = gimple_assign_rhs1 (def_stmt);

  <bb 101> :
  _80 = D.247397;
  retval.221 = _80 != 0B;
  if (retval.221 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 102> :
  D.247398 = gimple_assign_rhs1 (def_stmt);

  <bb 103> :
  _81 = D.247398;
  retval.222 = is_global_var (_81);
  if (retval.222 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 104> :
  mallocStmt_tree.224_82 = mallocStmt_tree;
  D.247399 = ptr_derefs_may_alias_p (mallocStmt_tree.224_82, first);

  <bb 105> :
  _83 = D.247399;
  retval.223 = ~_83;
  if (retval.223 != 0)
    goto <bb 106>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 106> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 107> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 108> :
  goto <bb 110>; [INV]

  <bb 109> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 110> :
  goto <bb 130>; [INV]

  <bb 111> :
  D.247400 = gimple_assign_rhs1 (gc);

  <bb 112> :
  _84 = D.247400;
  _85 = _84->base.code;
  retval.225 = _85 == 36;
  if (retval.225 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 113> :
  D.247401 = gimple_assign_lhs (gc);

  <bb 114> :
  _86 = D.247401;
  mallocStmt_tree.227_87 = mallocStmt_tree;
  D.247402 = ptr_derefs_may_alias_p (mallocStmt_tree.227_87, _86);

  <bb 115> :
  retval.226 = D.247402;
  if (retval.226 != 0)
    goto <bb 116>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 116> :
  D.247403 = gimple_assign_rhs1 (gc);

  <bb 117> :
  _88 = D.247403;
  retval.228 = is_global_var (_88);
  if (retval.228 != 0)
    goto <bb 118>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 118> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 119> :
  D.247404 = gimple_assign_rhs1 (gc);

  <bb 120> :
  _89 = D.247404;
  _90 = _89->base.code;
  retval.229 = _90 == 153;
  if (retval.229 != 0)
    goto <bb 121>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 121> :
  D.247405 = gimple_assign_lhs (gc);

  <bb 122> :
  _91 = D.247405;
  pi3 = _91->ssa_name.info.ptr_info;
  D.247406 = gimple_assign_rhs1 (gc);

  <bb 123> :
  _92 = D.247406;
  pi4 = _92->ssa_name.info.ptr_info;
  pt3 = &pi3->pt;
  pt4 = &pi4->pt;
  if (pt3 == 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 124> :
  if (pt4 == 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 126> :
  D.247407 = gimple_assign_rhs1 (gc);

  <bb 127> :
  _93 = D.247407;
  mallocStmt_tree.231_94 = mallocStmt_tree;
  D.247408 = ptr_derefs_may_alias_p (mallocStmt_tree.231_94, _93);

  <bb 128> :
  _95 = D.247408;
  retval.230 = ~_95;
  if (retval.230 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 130> :
  mallocStmt_tree.232_96 = mallocStmt_tree;
  D.247409 = get_name (mallocStmt_tree.232_96);

  <bb 131> :
  _97 = D.247409;
  stderr.233_98 = stderr;
  fprintf (stderr.233_98, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _97);

  <bb 132> :
  D.247410 = gimple_assign_lhs (gc);

  <bb 133> :
  _99 = D.247410;
  D.247411 = get_name (_99);

  <bb 134> :
  _100 = D.247411;
  stderr.234_101 = stderr;
  fprintf (stderr.234_101, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _100);

  <bb 135> :
  _102 = rand ();
  x = (long unsigned int) _102;
  debugmod.235_103 = debugmod;
  if (debugmod.235_103 != 0)
    goto <bb 136>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 136> :
  freemod.236_104 = freemod;
  if (freemod.236_104 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 137> :
  if (seccount == 0)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  stderr.237_105 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.237_105);
  goto <bb 144>; [INV]

  <bb 139> :
  now_laststmt.238_106 = now_laststmt;
  if (now_laststmt.238_106 != 0B)
    goto <bb 140>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 140> :
  now_laststmtid.239_107 = now_laststmtid;
  stderr.240_108 = stderr;
  fprintf (stderr.240_108, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.239_107);

  <bb 141> :
  now_laststmt.241_109 = now_laststmt;
  debug (now_laststmt.241_109);

  <bb 142> :
  now_laststmt.242_110 = now_laststmt;
  _111 = gimple_location_safe (now_laststmt.242_110);
  warning_at (_111, 0, "use location");

  <bb 143> :
  stderr.243_112 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.243_112);

  <bb 144> :
  stderr.244_113 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.244_113);
  goto <bb 155>; [INV]

  <bb 145> :
  fistconunt.245_114 = fistconunt;
  if (fistconunt.245_114 == 0)
    goto <bb 146>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 146> :
  stderr.246_115 = stderr;
  __builtin_fwrite ("dot graph start relate form", 1, 27, stderr.246_115);

  <bb 147> :
  fistconunt.247_116 = fistconunt;
  _117 = fistconunt.247_116 + 1;
  fistconunt = _117;
  goto <bb 155>; [INV]

  <bb 148> :
  now_laststmt.248_118 = now_laststmt;
  if (now_laststmt.248_118 != 0B)
    goto <bb 149>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 149> :
  now_laststmtid.249_119 = now_laststmtid;
  stderr.250_120 = stderr;
  fprintf (stderr.250_120, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.249_119);

  <bb 150> :
  now_laststmt.251_121 = now_laststmt;
  debug (now_laststmt.251_121);

  <bb 151> :
  now_laststmt.252_122 = now_laststmt;
  _123 = gimple_location_safe (now_laststmt.252_122);
  warning_at (_123, 0, "use location");

  <bb 152> :
  stderr.253_124 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.253_124);

  <bb 153> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 154> :
  stderr.254_125 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.254_125);

  <bb 155> :
  now_fucntion.255_126 = now_fucntion;
  stderr.256_127 = stderr;
  fprintf (stderr.256_127, "ID : %lu\n", now_fucntion.255_126);

  <bb 156> :
  _128 = gimple_bb (gc);
  _129 = _128->index;
  D.247412 = get_name (function_tree);

  <bb 157> :
  _130 = D.247412;
  stderr.257_131 = stderr;
  fprintf (stderr.257_131, "from %s basic block %d", _130, _129);

  <bb 158> :
  stderr.258_132 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.258_132);

  <bb 159> :
  fistconunt.259_133 = fistconunt;
  _134 = fistconunt.259_133 + 1;
  fistconunt = _134;
  _135 = gimple_location_safe (gc);
  warning_at (_135, 0, "use location");

  <bb 160> :
  debug (gc);

  <bb 161> :
  stderr.260_136 = stderr;
  fprintf (stderr.260_136, "dot graph relate stmt start ID : %lu stmt(LHS) :", x);

  <bb 162> :
  _137 = gimple_location_safe (gc);
  warning_at (_137, 0, "use location");

  <bb 163> :
  D.247413 = gimple_assign_lhs (gc);

  <bb 164> :
  _138 = D.247413;
  debug (_138);

  <bb 165> :
  stderr.261_139 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.261_139);
  goto <bb 171>; [INV]

  <bb 166> :
  _140 = gimple_location_safe (gc);
  warning_at (_140, 0, "use location");

  <bb 167> :
  debug (gc);

  <bb 168> :
  _141 = gimple_location_safe (gc);
  warning_at (_141, 0, "use location");

  <bb 169> :
  D.247414 = gimple_assign_lhs (gc);

  <bb 170> :
  _142 = D.247414;
  debug (_142);

  <bb 171> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;
  stderr.262_143 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.262_143);

  <bb 172> :
  stderr.263_144 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible reference other address \x1b[0m\n", 1, 60, stderr.263_144);

  <bb 173> :
  stderr.264_145 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.264_145);

  <bb 174> :
  stderr.265_146 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.265_146);

  <bb 175> :
  D.247415 = gimple_assign_lhs (gc);

  <bb 176> :
  _147 = D.247415;
  _148 = _147->base.code;
  if (_148 == 49)
    goto <bb 178>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 177> :
  mallocStmt_tree.268_149 = mallocStmt_tree;
  _150 = mallocStmt_tree.268_149->base.code;
  if (_150 == 153)
    goto <bb 178>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 178> :
  iftmp.267 = 1;
  goto <bb 180>; [INV]

  <bb 179> :
  iftmp.267 = 0;

  <bb 180> :
  retval.266 = iftmp.267;
  if (retval.266 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 181> :
  second = 0B;
  D.247416 = gimple_assign_lhs (gc);

  <bb 182> :
  _151 = D.247416;
  second = _151->exp.operands[0];
  D.247417 = gimple_assign_lhs (gc);

  <bb 183> :
  _152 = D.247417;
  _153 = _152->base.code;
  retval.269 = _153 == 49;
  if (retval.269 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 186>; [INV]

  <bb 184> :
  D.247418 = gimple_assign_lhs (gc);

  <bb 185> :
  _154 = D.247418;
  second = _154->exp.operands[0];

  <bb 186> :
  if (second != 0B)
    goto <bb 187>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 187> :
  mallocStmt_tree.270_155 = mallocStmt_tree;
  _156 = mallocStmt_tree.270_155->base.code;
  if (_156 == 36)
    goto <bb 188>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 188> :
  _157 = second->base.code;
  if (_157 == 36)
    goto <bb 189>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 189> :
  mallocStmt_tree.271_158 = mallocStmt_tree;
  if (second == mallocStmt_tree.271_158)
    goto <bb 190>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 190> :
  D.247419 = get_name (function_tree);

  <bb 191> :
  _159 = D.247419;
  stderr.272_160 = stderr;
  fprintf (stderr.272_160, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _159);

  <bb 192> :
  D.247420 = gimple_assign_lhs (gc);

  <bb 193> :
  _161 = D.247420;
  stderr.273_162 = stderr;
  fprintf (stderr.273_162, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _161);

  <bb 194> :
  debug_gimple_stmt (gc);

  <bb 195> :
  _163 = gimple_location_safe (gc);
  warning_at (_163, 0, "use location");

  <bb 196> :
  stderr.274_164 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.274_164);

  <bb 197> :
  stderr.275_165 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.275_165);

  <bb 198> :
  stderr.276_166 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.276_166);

  <bb 199> :
  stderr.277_167 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.277_167);

  <bb 200> :
  if (second == 0B)
    goto <bb 201>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 201> :
  mallocStmt_tree.278_168 = mallocStmt_tree;
  _169 = mallocStmt_tree.278_168->base.code;
  if (_169 == 153)
    goto <bb 202>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 202> :
  D.247421 = gimple_assign_rhs1 (gc);

  <bb 203> :
  _170 = D.247421;
  _171 = _170->base.code;
  retval.279 = _171 == 153;
  if (retval.279 != 0)
    goto <bb 204>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 204> :
  D.247422 = gimple_assign_rhs1 (gc);

  <bb 205> :
  _172 = D.247422;
  def_stmt = _172->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 206>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 206> :
  _173 = gimple_code (def_stmt);
  if (_173 != 18)
    goto <bb 207>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 207> :
  D.247423 = gimple_assign_lhs (gc);

  <bb 208> :
  _174 = D.247423;
  mallocStmt_tree.282_175 = mallocStmt_tree;
  D.247424 = ptr_derefs_may_alias_p (mallocStmt_tree.282_175, _174);

  <bb 209> :
  _176 = D.247424;
  if (_176 != 0)
    goto <bb 210>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 210> :
  D.247425 = gimple_assign_rhs1 (gc);

  <bb 211> :
  _177 = D.247425;
  mallocStmt_tree.283_178 = mallocStmt_tree;
  D.247426 = ptr_derefs_may_alias_p (mallocStmt_tree.283_178, _177);

  <bb 212> :
  _179 = D.247426;
  if (_179 != 0)
    goto <bb 213>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 213> :
  iftmp.281 = 1;
  goto <bb 215>; [INV]

  <bb 214> :
  iftmp.281 = 0;

  <bb 215> :
  retval.280 = iftmp.281;
  if (retval.280 != 0)
    goto <bb 216>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 216> :
  D.247427 = get_name (function_tree);

  <bb 217> :
  _180 = D.247427;
  stderr.284_181 = stderr;
  fprintf (stderr.284_181, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _180);

  <bb 218> :
  D.247428 = gimple_assign_lhs (gc);

  <bb 219> :
  _182 = D.247428;
  stderr.285_183 = stderr;
  fprintf (stderr.285_183, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _182);

  <bb 220> :
  debug_gimple_stmt (gc);

  <bb 221> :
  _184 = gimple_location_safe (gc);
  warning_at (_184, 0, "use location");

  <bb 222> :
  stderr.286_185 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.286_185);

  <bb 223> :
  stderr.287_186 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.287_186);

  <bb 224> :
  stderr.288_187 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.288_187);

  <bb 225> :
  stderr.289_188 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.289_188);
  goto <bb 291>; [INV]

  <bb 226> :
  _189 = is_gimple_call (gc);
  _190 = (long int) _189;
  retval.290 = _190 != 0;
  if (retval.290 != 0)
    goto <bb 227>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 227> :
  mallocStmt_tree.291_191 = mallocStmt_tree;
  pi1 = mallocStmt_tree.291_191->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 228>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 228> :
  relatemod.292_192 = relatemod;
  if (relatemod.292_192 != 0)
    goto <bb 229>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 229> :
  debugmod.293_193 = debugmod;
  if (debugmod.293_193 != 0)
    goto <bb 230>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 230> :
  D.247429 = gimple_call_num_args (gc);

  <bb 231> :
  _194 = D.247429;
  retval.294 = _194 != 0;
  if (retval.294 != 0)
    goto <bb 232>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 232> :
  D.247430 = gimple_call_fn (gc);

  <bb 233> :
  _195 = D.247430;
  D.247431 = get_name (_195);

  <bb 234> :
  name = D.247431;
  D.247432 = gimple_call_lhs (gc);

  <bb 235> :
  _196 = D.247432;
  retval.295 = _196 != 0B;
  if (retval.295 != 0)
    goto <bb 236>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 236> :
  D.247433 = gimple_call_lhs (gc);

  <bb 237> :
  _197 = D.247433;
  _198 = _197->base.code;
  if (_198 == 153)
    goto <bb 243>; [INV]
  else
    goto <bb 238>; [INV]

  <bb 238> :
  D.247434 = gimple_call_arg (gc, 0);

  <bb 239> :
  _199 = D.247434;
  _200 = _199->base.code;
  if (_200 == 153)
    goto <bb 243>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 240> :
  D.247435 = gimple_call_arg (gc, 0);

  <bb 241> :
  _201 = D.247435;
  _202 = _201->base.code;
  _203 = (tree_code) _202;
  D.247436 = get_tree_code_name (_203);

  <bb 242> :
  _204 = D.247436;
  _205 = strcmp (_204, "addr_expr");
  if (_205 == 0)
    goto <bb 243>; [INV]
  else
    goto <bb 244>; [INV]

  <bb 243> :
  iftmp.297 = 1;
  goto <bb 245>; [INV]

  <bb 244> :
  iftmp.297 = 0;

  <bb 245> :
  retval.296 = iftmp.297;
  if (retval.296 != 0)
    goto <bb 246>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 246> :
  if (name != 0B)
    goto <bb 247>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 247> :
  _206 = strcmp (name, "pthread_mutex_lock");
  if (_206 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 248> :
  _207 = strcmp (name, "pthread_mutex_unlock");
  if (_207 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 249> :
  _208 = strcmp (name, "pthread_exit");
  if (_208 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 250> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 251> :
  D.247437 = gimple_call_arg (gc, 0);

  <bb 252> :
  _209 = D.247437;
  pi2 = _209->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 253>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 253> :
  D.247438 = gimple_call_arg (gc, 0);

  <bb 254> :
  _210 = D.247438;
  mallocStmt_tree.299_211 = mallocStmt_tree;
  D.247439 = ptr_derefs_may_alias_p (mallocStmt_tree.299_211, _210);

  <bb 255> :
  retval.298 = D.247439;
  if (retval.298 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 256> :
  _212 = rand ();
  x = (long unsigned int) _212;
  debugmod.300_213 = debugmod;
  if (debugmod.300_213 != 0)
    goto <bb 257>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 257> :
  freemod.301_214 = freemod;
  if (freemod.301_214 != 0)
    goto <bb 258>; [INV]
  else
    goto <bb 266>; [INV]

  <bb 258> :
  if (seccount == 0)
    goto <bb 259>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 259> :
  stderr.302_215 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.302_215);
  goto <bb 265>; [INV]

  <bb 260> :
  now_laststmt.303_216 = now_laststmt;
  if (now_laststmt.303_216 != 0B)
    goto <bb 261>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 261> :
  now_laststmtid.304_217 = now_laststmtid;
  stderr.305_218 = stderr;
  fprintf (stderr.305_218, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.304_217);

  <bb 262> :
  now_laststmt.306_219 = now_laststmt;
  debug (now_laststmt.306_219);

  <bb 263> :
  now_laststmt.307_220 = now_laststmt;
  _221 = gimple_location_safe (now_laststmt.307_220);
  warning_at (_221, 0, "use location");

  <bb 264> :
  stderr.308_222 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.308_222);

  <bb 265> :
  stderr.309_223 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.309_223);
  goto <bb 276>; [INV]

  <bb 266> :
  fistconunt.310_224 = fistconunt;
  if (fistconunt.310_224 == 0)
    goto <bb 267>; [INV]
  else
    goto <bb 269>; [INV]

  <bb 267> :
  stderr.311_225 = stderr;
  __builtin_fwrite ("dot graph start relate form", 1, 27, stderr.311_225);

  <bb 268> :
  fistconunt.312_226 = fistconunt;
  _227 = fistconunt.312_226 + 1;
  fistconunt = _227;
  goto <bb 276>; [INV]

  <bb 269> :
  now_laststmt.313_228 = now_laststmt;
  if (now_laststmt.313_228 != 0B)
    goto <bb 270>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 270> :
  now_laststmtid.314_229 = now_laststmtid;
  stderr.315_230 = stderr;
  fprintf (stderr.315_230, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.314_229);

  <bb 271> :
  now_laststmt.316_231 = now_laststmt;
  debug (now_laststmt.316_231);

  <bb 272> :
  now_laststmt.317_232 = now_laststmt;
  _233 = gimple_location_safe (now_laststmt.317_232);
  warning_at (_233, 0, "use location");

  <bb 273> :
  stderr.318_234 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.318_234);

  <bb 274> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 275> :
  stderr.319_235 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.319_235);

  <bb 276> :
  fistconunt.320_236 = fistconunt;
  _237 = fistconunt.320_236 + 1;
  fistconunt = _237;
  now_fucntion.321_238 = now_fucntion;
  stderr.322_239 = stderr;
  fprintf (stderr.322_239, "ID : %lu\n", now_fucntion.321_238);

  <bb 277> :
  _240 = gimple_bb (gc);
  _241 = _240->index;
  D.247440 = get_name (function_tree);

  <bb 278> :
  _242 = D.247440;
  stderr.323_243 = stderr;
  fprintf (stderr.323_243, "from %s basic block %d", _242, _241);

  <bb 279> :
  stderr.324_244 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.324_244);

  <bb 280> :
  stderr.325_245 = stderr;
  fprintf (stderr.325_245, "dot graph relate stmt start ID : %lu stmt(call) :", x);

  <bb 281> :
  debug (gc);

  <bb 282> :
  _246 = gimple_location_safe (gc);
  warning_at (_246, 0, "use location");

  <bb 283> :
  D.247441 = gimple_call_arg (gc, 0);

  <bb 284> :
  _247 = D.247441;
  debug (_247);

  <bb 285> :
  stderr.326_248 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.326_248);
  goto <bb 290>; [INV]

  <bb 286> :
  debug (gc);

  <bb 287> :
  _249 = gimple_location_safe (gc);
  warning_at (_249, 0, "use location");

  <bb 288> :
  D.247442 = gimple_call_arg (gc, 0);

  <bb 289> :
  _250 = D.247442;
  debug (_250);

  <bb 290> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;

  <bb 291> :
  gsi_next (&gsi);

  <bb 292> :
  _251 = gsi_end_p (gsi);
  retval.327 = ~_251;
  if (retval.327 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 293> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 294> :
  cfun.328_252 = cfun;
  _253 = cfun.328_252->cfg;
  _254 = _253->x_exit_block_ptr;
  if (bb != _254)
    goto <bb 14>; [INV]
  else
    goto <bb 295>; [INV]

  <bb 295> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  now_relatelaststmt.329_255 = now_relatelaststmt;
  if (now_relatelaststmt.329_255 != 0B)
    goto <bb 296>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 296> :
  function_relate_collect.331_256 = function_relate_collect;
  D.247444 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.331_256, &mallocStmt_tree);

  <bb 297> :
  _257 = D.247444;
  retval.330 = _257 == 0B;
  if (retval.330 != 0)
    goto <bb 298>; [INV]
  else
    goto <bb 299>; [INV]

  <bb 298> :
  std::vector<relate_type>::operator= (&fun_array.relate_type_array, &relate_type_array);
  goto <bb 302>; [INV]

  <bb 299> :
  function_relate_collect.332_258 = function_relate_collect;
  D.247445 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.332_258, &mallocStmt_tree);

  <bb 300> :
  _259 = D.247445;
  function_relate_array::operator= (&fun_array, _259);

  <bb 301> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 302> :
  relate_type::relate_type (&relate_type);
  now_relatelaststmt.333_260 = now_relatelaststmt;
  relate_type.stmt = now_relatelaststmt.333_260;
  mallocStmt_tree.334_261 = mallocStmt_tree;
  relate_type.relate_tree = mallocStmt_tree.334_261;
  relate_type.relate_funtree = function_tree;
  now_fucntion.335_262 = now_fucntion;
  _263 = (unsigned int) now_fucntion.335_262;
  relate_type.now_fucntion = _263;
  now_laststmtid.336_264 = now_laststmtid;
  _265 = (unsigned int) now_laststmtid.336_264;
  relate_type.now_stmt = _265;
  std::vector<relate_type>::push_back (&fun_array.relate_type_array, &relate_type);

  <bb 303> :
  function_relate_collect.337_266 = function_relate_collect;
  hash_map<tree_node*, function_relate_array>::put (function_relate_collect.337_266, &mallocStmt_tree, &fun_array);

  <bb 304> :
  relate_type = {CLOBBER};

  <bb 305> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 306> :
  pop_cfun ();

  <bb 307> :
  symtab.338_267 = symtab;
  D.247450 = symbol_table::next_defined_function (symtab.338_267, node);
  node = D.247450;

  <bb 308> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 309> :
  stderr.339_268 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.339_268);

  <bb 310> :
<L265>:
  return;

  <bb 311> :
<L266>:
  gsi = {CLOBBER};
  resx 2

  <bb 312> :
<L267>:
  relate_type = {CLOBBER};
  resx 6

  <bb 313> :
<L268>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 5

  <bb 314> :
<L269>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 4

  <bb 315> :
<L270>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 1

}



;; Function is_gimple_assign (_ZL16is_gimple_assignPK6gimple, funcdef_no=2062, decl_uid=92605, cgraph_uid=1199, symbol_order=1359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_assign (const struct gimple * gs)
{
  bool D.247451;

  <bb 2> :
  _1 = gimple_code (gs);
  D.247451 = _1 == 6;

  <bb 3> :
<L0>:
  return D.247451;

}



;; Function is_global_var (_ZL13is_global_varPK9tree_node, funcdef_no=1820, decl_uid=85582, cgraph_uid=968, symbol_order=1128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_global_var (const union tree_node * t)
{
  bool iftmp.340;
  bool D.247453;

  <bb 2> :
  _1 = BIT_FIELD_REF <t->base, 8, 24>;
  _2 = _1 & 4;
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = BIT_FIELD_REF <t->decl_common, 8, 472>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.340 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.340 = 0;

  <bb 6> :
  D.247453 = iftmp.340;

  <bb 7> :
<L4>:
  return D.247453;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK6gimple, funcdef_no=2071, decl_uid=92645, cgraph_uid=1208, symbol_order=1368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gimple * gs)
{
  const struct gassign * D.247462;
  const struct gassign * ass;
  union tree_node * D.247460;

  <bb 2> :
  D.247462 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.247462;
  D.247460 = gimple_assign_rhs1 (ass);

  <bb 3> :
<L0>:
  return D.247460;

}



;; Function GIMPLE_CHECK2<const gassign*> (_Z13GIMPLE_CHECK2IPK7gassignET_PK6gimple, funcdef_no=7043, decl_uid=92617, cgraph_uid=3675, symbol_order=4457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * GIMPLE_CHECK2<const gassign*> (const struct gimple * gs)
{
  const struct gassign * D.247465;
  const struct gassign * D.247463;

  <bb 2> :
  D.247465 = as_a<const gassign*, const gimple> (gs);
  D.247463 = D.247465;

  <bb 3> :
<L0>:
  return D.247463;

}



;; Function as_a<const gassign*, const gimple> (_Z4as_aIPK7gassignK6gimpleET_PT0_, funcdef_no=8033, decl_uid=205849, cgraph_uid=4665, symbol_order=5450)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * as_a<const gassign*, const gimple> (const struct gimple * p)
{
  const struct gassign * D.247468;
  const struct gassign * D.247466;

  <bb 2> :
  D.247468 = is_a_helper<const gassign*>::cast<gimple> (p);
  D.247466 = D.247468;

  <bb 3> :
<L0>:
  return D.247466;

}



;; Function is_a_helper<const gassign*>::cast<gimple> (_ZN11is_a_helperIPK7gassignE4castI6gimpleEES2_PKT_, funcdef_no=8040, decl_uid=205887, cgraph_uid=4672, symbol_order=5457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * is_a_helper<const gassign*>::cast<gimple> (const struct gimple * p)
{
  const struct gassign * D.247469;

  <bb 2> :
  D.247469 = reinterpret_is_a_helper<gassign*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.247469;

}



;; Function reinterpret_is_a_helper<gassign*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7gassignE4castI6gimpleEES1_PT_, funcdef_no=8994, decl_uid=218009, cgraph_uid=5626, symbol_order=6415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gassign * reinterpret_is_a_helper<gassign*>::cast<gimple> (struct gimple * p)
{
  struct gassign * D.247471;

  <bb 2> :
  D.247471 = p;

  <bb 3> :
<L0>:
  return D.247471;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK7gassign, funcdef_no=2070, decl_uid=92642, cgraph_uid=1207, symbol_order=1367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gassign * gs)
{
  union tree_node * D.247473;

  <bb 2> :
  D.247473 = gs->D.90479.op[1];

  <bb 3> :
<L0>:
  return D.247473;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK6gimple, funcdef_no=2065, decl_uid=92614, cgraph_uid=1202, symbol_order=1362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gimple * gs)
{
  const struct gassign * D.247477;
  const struct gassign * ass;
  union tree_node * D.247475;

  <bb 2> :
  D.247477 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.247477;
  D.247475 = gimple_assign_lhs (ass);

  <bb 3> :
<L0>:
  return D.247475;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK7gassign, funcdef_no=2064, decl_uid=92611, cgraph_uid=1201, symbol_order=1361)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gassign * gs)
{
  union tree_node * D.247478;

  <bb 2> :
  D.247478 = gs->D.90479.op[0];

  <bb 3> :
<L0>:
  return D.247478;

}



;; Function is_gimple_call (_ZL14is_gimple_callPK6gimple, funcdef_no=2100, decl_uid=92760, cgraph_uid=1237, symbol_order=1397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_call (const struct gimple * gs)
{
  bool D.247480;

  <bb 2> :
  _1 = gimple_code (gs);
  D.247480 = _1 == 8;

  <bb 3> :
<L0>:
  return D.247480;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK6gimple, funcdef_no=2139, decl_uid=92913, cgraph_uid=1276, symbol_order=1436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gimple * gs)
{
  const struct gcall * D.247484;
  const struct gcall * gc;
  unsigned int D.247482;

  <bb 2> :
  D.247484 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247484;
  D.247482 = gimple_call_num_args (gc);

  <bb 3> :
<L0>:
  return D.247482;

}



;; Function GIMPLE_CHECK2<const gcall*> (_Z13GIMPLE_CHECK2IPK5gcallET_PK6gimple, funcdef_no=7045, decl_uid=92769, cgraph_uid=3677, symbol_order=4459)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * GIMPLE_CHECK2<const gcall*> (const struct gimple * gs)
{
  const struct gcall * D.247487;
  const struct gcall * D.247485;

  <bb 2> :
  D.247487 = as_a<const gcall*, const gimple> (gs);
  D.247485 = D.247487;

  <bb 3> :
<L0>:
  return D.247485;

}



;; Function as_a<const gcall*, const gimple> (_Z4as_aIPK5gcallK6gimpleET_PT0_, funcdef_no=7072, decl_uid=94348, cgraph_uid=3704, symbol_order=4486)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * as_a<const gcall*, const gimple> (const struct gimple * p)
{
  const struct gcall * D.247490;
  const struct gcall * D.247488;

  <bb 2> :
  D.247490 = is_a_helper<const gcall*>::cast<gimple> (p);
  D.247488 = D.247490;

  <bb 3> :
<L0>:
  return D.247488;

}



;; Function is_a_helper<const gcall*>::cast<gimple> (_ZN11is_a_helperIPK5gcallE4castI6gimpleEES2_PKT_, funcdef_no=8037, decl_uid=205873, cgraph_uid=4669, symbol_order=5454)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * is_a_helper<const gcall*>::cast<gimple> (const struct gimple * p)
{
  const struct gcall * D.247491;

  <bb 2> :
  D.247491 = reinterpret_is_a_helper<gcall*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.247491;

}



;; Function reinterpret_is_a_helper<gcall*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcallE4castI6gimpleEES1_PT_, funcdef_no=8996, decl_uid=218017, cgraph_uid=5628, symbol_order=6417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcall * reinterpret_is_a_helper<gcall*>::cast<gimple> (struct gimple * p)
{
  struct gcall * D.247493;

  <bb 2> :
  D.247493 = p;

  <bb 3> :
<L0>:
  return D.247493;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK5gcall, funcdef_no=2138, decl_uid=92910, cgraph_uid=1275, symbol_order=1435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gcall * gs)
{
  unsigned int D.247495;

  <bb 2> :
  _1 = gimple_num_ops (gs);
  D.247495 = _1 + 4294967293;

  <bb 3> :
<L0>:
  return D.247495;

}



;; Function gimple_num_ops (_ZL14gimple_num_opsPK6gimple, funcdef_no=2056, decl_uid=92581, cgraph_uid=1193, symbol_order=1353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_num_ops (const struct gimple * gs)
{
  unsigned int D.247497;

  <bb 2> :
  D.247497 = gs->num_ops;

  <bb 3> :
<L0>:
  return D.247497;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK6gimple, funcdef_no=2124, decl_uid=92857, cgraph_uid=1261, symbol_order=1421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gimple * gs)
{
  const struct gcall * D.247501;
  const struct gcall * gc;
  union tree_node * D.247499;

  <bb 2> :
  D.247501 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247501;
  D.247499 = gimple_call_fn (gc);

  <bb 3> :
<L0>:
  return D.247499;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK5gcall, funcdef_no=2123, decl_uid=92854, cgraph_uid=1260, symbol_order=1420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gcall * gs)
{
  union tree_node * D.247502;

  <bb 2> :
  D.247502 = gs->op[1];

  <bb 3> :
<L0>:
  return D.247502;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK6gimple, funcdef_no=2102, decl_uid=92766, cgraph_uid=1239, symbol_order=1399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gimple * gs)
{
  const struct gcall * D.247506;
  const struct gcall * gc;
  union tree_node * D.247504;

  <bb 2> :
  D.247506 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247506;
  D.247504 = gimple_call_lhs (gc);

  <bb 3> :
<L0>:
  return D.247504;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK5gcall, funcdef_no=2101, decl_uid=92763, cgraph_uid=1238, symbol_order=1398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gcall * gs)
{
  union tree_node * D.247507;

  <bb 2> :
  D.247507 = gs->op[0];

  <bb 3> :
<L0>:
  return D.247507;

}



;; Function gimple_bb (_ZL9gimple_bbPK6gimple, funcdef_no=2000, decl_uid=92273, cgraph_uid=1137, symbol_order=1297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * gimple_bb (const struct gimple * g)
{
  struct basic_block_def * D.247509;

  <bb 2> :
  D.247509 = g->bb;

  <bb 3> :
<L0>:
  return D.247509;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK6gimplej, funcdef_no=2141, decl_uid=92922, cgraph_uid=1278, symbol_order=1438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gimple * gs, unsigned int index)
{
  const struct gcall * D.247513;
  const struct gcall * gc;
  union tree_node * D.247511;

  <bb 2> :
  D.247513 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247513;
  D.247511 = gimple_call_arg (gc, index);

  <bb 3> :
<L0>:
  return D.247511;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK5gcallj, funcdef_no=2140, decl_uid=92918, cgraph_uid=1277, symbol_order=1437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gcall * gs, unsigned int index)
{
  union tree_node * D.247514;

  <bb 2> :
  _1 = index + 3;
  D.247514 = gs->op[_1];

  <bb 3> :
<L0>:
  return D.247514;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2Ev, funcdef_no=6304, decl_uid=179788, cgraph_uid=3279, symbol_order=4055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179796;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2Ev, funcdef_no=6302, decl_uid=179246, cgraph_uid=3276, symbol_order=4052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7631, decl_uid=179138, cgraph_uid=4263, symbol_order=5048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this);
  _1 = &this->D.179141;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2Ev, funcdef_no=8480, decl_uid=178916, cgraph_uid=5112, symbol_order=5901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2Ev, funcdef_no=9244, decl_uid=178845, cgraph_uid=5876, symbol_order=6665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8483, decl_uid=179088, cgraph_uid=5115, symbol_order=5904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2Ev, funcdef_no=6307, decl_uid=191333, cgraph_uid=3282, symbol_order=4058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::vector (_1);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::get (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7642, decl_uid=191420, cgraph_uid=4274, symbol_order=5059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_relate_array * hash_map<tree_node*, function_relate_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.247524;
  struct hash_entry & D.247523;
  unsigned int D.247522;
  struct hash_entry & e;
  struct function_relate_array * iftmp.341;
  struct function_relate_array * D.247516;

  <bb 2> :
  _1 = &this->m_table;
  D.247522 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.247522;
  D.247523 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.247523;
  D.247524 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  _3 = D.247524;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.341 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.341 = &e->m_value;

  <bb 5> :
  D.247516 = iftmp.341;

  <bb 6> :
<L3>:
  return D.247516;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE4hashERKS2_, funcdef_no=8491, decl_uid=191376, cgraph_uid=5123, symbol_order=5912)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (union tree_node * const & h)
{
  hashval_t D.247525;

  <bb 2> :
  D.247525 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.247525;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8492, decl_uid=191563, cgraph_uid=5124, symbol_order=5913)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.247559;
  bool D.247558;
  bool D.247557;
  bool D.247556;
  bool D.247555;
  bool D.247554;
  struct value_type * D.247553;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.345;
  bool retval.344;
  struct value_type & D.247539;
  bool iftmp.343;
  bool retval.342;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.247554 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.247554;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.247555 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.247555;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.247556 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _11 = D.247556;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.343 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.343 = 0;

  <bb 8> :
  retval.342 = iftmp.343;
  if (retval.342 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.247539 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.247557 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.247557;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.247558 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.247558;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.247559 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _23 = D.247559;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.345 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.345 = 0;

  <bb 18> :
  retval.344 = iftmp.345;
  if (retval.344 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.247539 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.247539;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8730, decl_uid=191659, cgraph_uid=5362, symbol_order=6151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.247562;
  bool D.247560;

  <bb 2> :
  D.247562 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (v);
  D.247560 = D.247562;

  <bb 3> :
<L0>:
  return D.247560;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8512, decl_uid=191489, cgraph_uid=5144, symbol_order=5933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.247565;
  bool D.247563;

  <bb 2> :
  D.247565 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.247563 = D.247565;

  <bb 3> :
<L0>:
  return D.247563;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8731, decl_uid=191657, cgraph_uid=5363, symbol_order=6152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.247568;
  bool D.247566;

  <bb 2> :
  D.247568 = hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (v);
  D.247566 = D.247568;

  <bb 3> :
<L0>:
  return D.247566;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9552, decl_uid=191484, cgraph_uid=6184, symbol_order=6973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.247571;
  bool D.247569;

  <bb 2> :
  D.247571 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.247569 = D.247571;

  <bb 3> :
<L0>:
  return D.247569;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10147, decl_uid=235500, cgraph_uid=6779, symbol_order=7572)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.247572;

  <bb 2> :
  _1 = entry->m_key;
  D.247572 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.247572;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9249, decl_uid=191477, cgraph_uid=5881, symbol_order=6670)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.247576;
  bool D.247574;

  <bb 2> :
  _1 = &a->m_key;
  D.247576 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_1, b);
  D.247574 = D.247576;

  <bb 3> :
<L0>:
  return D.247574;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10equal_keysERKS2_S7_, funcdef_no=9944, decl_uid=191378, cgraph_uid=6576, symbol_order=7369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.247577;

  <bb 2> :
  D.247577 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.247577;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8493, decl_uid=210895, cgraph_uid=5125, symbol_order=5914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.247579;

  <bb 2> :
  _1 = entry->m_key;
  D.247579 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.247579;

}



;; Function function_relate_array::operator= (_ZN21function_relate_arrayaSERKS_, funcdef_no=6312, decl_uid=191799, cgraph_uid=3287, symbol_order=4063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_relate_array & function_relate_array::operator= (struct function_relate_array * const this, const struct function_relate_array & D.191800)
{
  struct function_relate_array & D.247581;

  <bb 2> :
  _1 = &D.191800->relate_type_array;
  _2 = &this->relate_type_array;
  std::vector<relate_type>::operator= (_2, _1);
  D.247581 = this;

  <bb 3> :
<L0>:
  return D.247581;

}



;; Function std::vector<relate_type>::operator= (_ZNSt6vectorI11relate_typeSaIS0_EEaSERKS2_, funcdef_no=7643, decl_uid=179374, cgraph_uid=4277, symbol_order=5062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<relate_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.247616;
  struct relate_type * __tmp;
  const size_type __xlen;
  struct vector & D.247614;
  struct __normal_iterator D.247611;
  struct __normal_iterator D.247610;
  struct __normal_iterator D.247609;
  struct __normal_iterator D.247608;
  struct __normal_iterator D.247607;
  bool retval.350;
  struct __normal_iterator D.247602;
  struct __normal_iterator D.247601;
  bool retval.349;
  bool iftmp.348;
  bool retval.347;
  bool retval.346;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.346 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ();
  if (retval.346 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.179796;
  _4 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.179796;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.348 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.348 = 0;

  <bb 8> :
  retval.347 = iftmp.348;
  if (retval.347 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<relate_type>::clear (this);
  _8 = &this->D.179796;
  _9 = this->D.179796._M_impl.D.179141._M_end_of_storage;
  _10 = this->D.179796._M_impl.D.179141._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 48;
  _13 = (long unsigned int) _12;
  _14 = this->D.179796._M_impl.D.179141._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_8, _14, _13);
  this->D.179796._M_impl.D.179141._M_start = 0B;
  this->D.179796._M_impl.D.179141._M_finish = 0B;
  this->D.179796._M_impl.D.179141._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.179796;
  _16 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.179796;
  _18 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<relate_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<relate_type>::size (__x);
  _19 = std::vector<relate_type>::capacity (this);
  retval.349 = __xlen > _19;
  if (retval.349 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.247601 = std::vector<relate_type>::end (__x);
  D.247602 = std::vector<relate_type>::begin (__x);
  D.247616 = std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (this, __xlen, D.247602, D.247601);
  __tmp = D.247616;
  _20 = &this->D.179796;
  _21 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.179796._M_impl.D.179141._M_finish;
  _23 = this->D.179796._M_impl.D.179141._M_start;
  std::_Destroy<relate_type*, relate_type> (_23, _22, _21);
  _24 = &this->D.179796;
  _25 = this->D.179796._M_impl.D.179141._M_end_of_storage;
  _26 = this->D.179796._M_impl.D.179141._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 48;
  _29 = (long unsigned int) _28;
  _30 = this->D.179796._M_impl.D.179141._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_24, _30, _29);
  this->D.179796._M_impl.D.179141._M_start = __tmp;
  _31 = this->D.179796._M_impl.D.179141._M_start;
  _32 = __xlen * 48;
  _33 = _31 + _32;
  this->D.179796._M_impl.D.179141._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<relate_type>::size (this);
  retval.350 = __xlen <= _34;
  if (retval.350 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.179796;
  _36 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_35);
  D.247607 = std::vector<relate_type>::end (this);
  D.247608 = std::vector<relate_type>::begin (this);
  D.247609 = std::vector<relate_type>::end (__x);
  D.247610 = std::vector<relate_type>::begin (__x);
  D.247611 = std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.247610, D.247609, D.247608);
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (D.247611, D.247607, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.179796._M_impl.D.179141._M_start;
  _38 = __x->D.179796._M_impl.D.179141._M_start;
  _39 = std::vector<relate_type>::size (this);
  _40 = _39 * 48;
  _41 = _38 + _40;
  _42 = __x->D.179796._M_impl.D.179141._M_start;
  std::copy<relate_type*, relate_type*> (_42, _41, _37);
  _43 = &this->D.179796;
  _44 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.179796._M_impl.D.179141._M_finish;
  _46 = __x->D.179796._M_impl.D.179141._M_finish;
  _47 = __x->D.179796._M_impl.D.179141._M_start;
  _48 = std::vector<relate_type>::size (this);
  _49 = _48 * 48;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.179796._M_impl.D.179141._M_start;
  _52 = __xlen * 48;
  _53 = _51 + _52;
  this->D.179796._M_impl.D.179141._M_finish = _53;

  <bb 17> :
  D.247614 = this;

  <bb 18> :
<L19>:
  return D.247614;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7644, decl_uid=179008, cgraph_uid=4275, symbol_order=5060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ()
{
  bool D.247617;

  <bb 2> :
  D.247617 = 0;

  <bb 3> :
<L0>:
  return D.247617;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E15_S_always_equalEv, funcdef_no=7645, decl_uid=179011, cgraph_uid=4276, symbol_order=5061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ()
{
  bool D.247619;

  <bb 2> :
  D.247619 = 1;

  <bb 3> :
<L0>:
  return D.247619;

}



;; Function std::operator!= (_ZStneRKSaI11relate_typeES2_, funcdef_no=8495, decl_uid=178894, cgraph_uid=5127, symbol_order=5916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.221207, const struct allocator & D.221208)
{
  bool D.247621;

  <bb 2> :
  D.247621 = 0;

  <bb 3> :
<L0>:
  return D.247621;

}



;; Function std::vector<relate_type>::clear (_ZNSt6vectorI11relate_typeSaIS0_EE5clearEv, funcdef_no=8496, decl_uid=179526, cgraph_uid=5128, symbol_order=5917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_start;
  std::vector<relate_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<relate_type>::_M_erase_at_end (_ZNSt6vectorI11relate_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9250, decl_uid=179654, cgraph_uid=5882, symbol_order=6671)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<relate_type>::_M_erase_at_end (struct vector * const this, struct relate_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 48;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.179796;
  _5 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.179796._M_impl.D.179141._M_finish;
  std::_Destroy<relate_type*, relate_type> (__pos, _6, _5);
  this->D.179796._M_impl.D.179141._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8494, decl_uid=179031, cgraph_uid=5126, symbol_order=5915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.247626;

  <bb 2> :
  D.247626 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.247626;

}



;; Function std::__alloc_on_copy<std::allocator<relate_type> > (_ZSt15__alloc_on_copyISaI11relate_typeEEvRT_RKS2_, funcdef_no=8497, decl_uid=210920, cgraph_uid=5129, symbol_order=5918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<relate_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<relate_type>::capacity (_ZNKSt6vectorI11relate_typeSaIS0_EE8capacityEv, funcdef_no=8498, decl_uid=179442, cgraph_uid=5130, symbol_order=5919)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::capacity (const struct vector * const this)
{
  size_type D.247628;

  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_end_of_storage;
  _2 = this->D.179796._M_impl.D.179141._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.247628 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.247628;

}



;; Function std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZNSt6vectorI11relate_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8501, decl_uid=211020, cgraph_uid=5133, symbol_order=5922)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct relate_type * std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct relate_type * D.247632;
  struct relate_type * __result;
  struct relate_type * D.247630;

  <bb 2> :
  _1 = &this->D.179796;
  D.247632 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_1, __n);
  __result = D.247632;
  _2 = &this->D.179796;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (__first, __last, __result, _3);

  <bb 3> :
  D.247630 = __result;

  <bb 4> :
<L0>:
  return D.247630;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.179796;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE11_M_allocateEm, funcdef_no=9254, decl_uid=179145, cgraph_uid=5886, symbol_order=6675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.247642;
  struct relate_type * iftmp.351;
  struct relate_type * D.247636;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.247642 = std::allocator_traits<std::allocator<relate_type> >::allocate (_1, __n);
  iftmp.351 = D.247642;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.351 = 0B;

  <bb 5> :
  D.247636 = iftmp.351;

  <bb 6> :
<L3>:
  return D.247636;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::allocate (_ZNSt16allocator_traitsISaI11relate_typeEE8allocateERS1_m, funcdef_no=9945, decl_uid=178946, cgraph_uid=6577, symbol_order=7370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type * std::allocator_traits<std::allocator<relate_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct relate_type * D.247645;
  struct relate_type * D.247643;

  <bb 2> :
  D.247645 = __gnu_cxx::new_allocator<relate_type>::allocate (__a, __n, 0B);
  D.247643 = D.247645;

  <bb 3> :
<L0>:
  return D.247643;

}



;; Function __gnu_cxx::new_allocator<relate_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE8allocateEmPKv, funcdef_no=10466, decl_uid=178800, cgraph_uid=7099, symbol_order=7892)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct relate_type * __gnu_cxx::new_allocator<relate_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243010)
{
  struct relate_type * D.247656;
  struct relate_type * D.247655;
  align_val_t __al;
  struct relate_type * D.247653;
  bool retval.352;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.352 = _4 != 0;
  if (retval.352 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 384307168202282325)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 48;
  D.247656 = operator new (_6);
  D.247653 = D.247656;

  <bb 7> :
<L6>:
  return D.247653;

}



;; Function __gnu_cxx::new_allocator<relate_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE11_M_max_sizeEv, funcdef_no=10467, decl_uid=178827, cgraph_uid=7098, symbol_order=7891)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.247657;

  <bb 2> :
  D.247657 = 192153584101141162;

  <bb 3> :
<L0>:
  return D.247657;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9255, decl_uid=221249, cgraph_uid=5887, symbol_order=6676)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result, struct allocator & D.232624)
{
  struct relate_type * D.247661;
  struct relate_type * D.247659;

  <bb 2> :
  D.247661 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.247659 = D.247661;

  <bb 3> :
<L0>:
  return D.247659;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9946, decl_uid=232626, cgraph_uid=6578, symbol_order=7371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * D.247664;
  const bool __assignable;
  struct relate_type * D.247662;

  <bb 2> :
  __assignable = 1;
  D.247664 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.247662 = D.247664;

  <bb 3> :
<L0>:
  return D.247662;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10468, decl_uid=239594, cgraph_uid=7100, symbol_order=7893)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.247666;
  bool retval.353;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (&__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, const relate_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (&__first);
  __cur = __cur + 48;

  <bb 4> :
  retval.353 = __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (&__first, &__last);
  if (retval.353 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.247666 = __cur;

  <bb 6> :
<L3>:
  return D.247666;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10775, decl_uid=210958, cgraph_uid=7407, symbol_order=8202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct relate_type & D.247668;

  <bb 2> :
  D.247668 = this->_M_current;

  <bb 3> :
<L0>:
  return D.247668;

}



;; Function std::__addressof<relate_type> (_ZSt11__addressofI11relate_typeEPT_RS1_, funcdef_no=10473, decl_uid=221747, cgraph_uid=7105, symbol_order=7898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__addressof<relate_type> (struct relate_type & __r)
{
  struct relate_type * D.247670;

  <bb 2> :
  D.247670 = __r;

  <bb 3> :
<L0>:
  return D.247670;

}



;; Function std::_Construct<relate_type, const relate_type&> (_ZSt10_ConstructI11relate_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10776, decl_uid=243038, cgraph_uid=7408, symbol_order=8203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, const relate_type&> (struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.244398;
  void * D.244397;
  const struct relate_type * D.244399;

  <bb 2> :
  D.244399 = std::forward<const relate_type&> (__args#0);
  D.244397 = __p;
  D.244398 = operator new (48, D.244397);
  MEM[(struct relate_type *)D.244398] = *D.244399;
  return;

}



;; Function std::forward<const relate_type&> (_ZSt7forwardIRK11relate_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9264, decl_uid=221362, cgraph_uid=5896, symbol_order=6685)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct relate_type & std::forward<const relate_type&> (const struct type & __t)
{
  const struct relate_type & D.247672;

  <bb 2> :
  D.247672 = __t;

  <bb 3> :
<L0>:
  return D.247672;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10774, decl_uid=210962, cgraph_uid=7406, symbol_order=8201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.247674;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.247674 = this;

  <bb 3> :
<L0>:
  return D.247674;

}



;; Function __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIPK11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10773, decl_uid=243031, cgraph_uid=7405, symbol_order=8200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.247676;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.247676 = _2 != _4;

  <bb 3> :
<L0>:
  return D.247676;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10469, decl_uid=210987, cgraph_uid=7101, symbol_order=7894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * const & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  const struct relate_type * const & D.247678;

  <bb 2> :
  D.247678 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.247678;

}



;; Function std::_Destroy<relate_type*, relate_type> (_ZSt8_DestroyIP11relate_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8490, decl_uid=210879, cgraph_uid=5122, symbol_order=5911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct allocator & D.221187)
{
  <bb 2> :
  std::_Destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<relate_type*> (_ZSt8_DestroyIP11relate_typeEvT_S2_, funcdef_no=9247, decl_uid=221189, cgraph_uid=5879, symbol_order=6668)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*> (struct relate_type * __first, struct relate_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<relate_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11relate_typeEEvT_S4_, funcdef_no=9941, decl_uid=232594, cgraph_uid=6573, symbol_order=7366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<relate_type*> (struct relate_type * D.239535, struct relate_type * D.239536)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8488, decl_uid=179148, cgraph_uid=5120, symbol_order=5909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (struct _Vector_base * const this, struct relate_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<relate_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::deallocate (_ZNSt16allocator_traitsISaI11relate_typeEE10deallocateERS1_PS0_m, funcdef_no=9246, decl_uid=178953, cgraph_uid=5878, symbol_order=6667)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::deallocate (struct allocator_type & __a, struct relate_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE10deallocateEPS1_m, funcdef_no=9940, decl_uid=178804, cgraph_uid=6572, symbol_order=7365)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::deallocate (struct new_allocator * const this, struct relate_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 48;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<relate_type>::end (_ZNSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=7781, decl_uid=179409, cgraph_uid=4413, symbol_order=5198)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::end (struct vector * const this)
{
  struct iterator D.214448;
  struct iterator D.247686;

  <bb 2> :
  _1 = &this->D.179796._M_impl.D.179141._M_finish;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.214448, _1);
  D.247686 = D.214448;
  D.214448 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247686;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8727, decl_uid=201523, cgraph_uid=5359, symbol_order=6148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=7780, decl_uid=179405, cgraph_uid=4412, symbol_order=5197)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::begin (struct vector * const this)
{
  struct iterator D.214446;
  struct iterator D.247689;

  <bb 2> :
  _1 = &this->D.179796._M_impl.D.179141._M_start;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.214446, _1);
  D.247689 = D.214446;
  D.214446 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247689;

}



;; Function std::vector<relate_type>::end (_ZNKSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=8500, decl_uid=179411, cgraph_uid=5132, symbol_order=5921)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::end (const struct vector * const this)
{
  struct const_iterator D.221243;
  struct const_iterator D.247692;

  <bb 2> :
  _1 = &this->D.179796._M_impl.D.179141._M_finish;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.221243, _1);
  D.247692 = D.221243;
  D.221243 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247692;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9252, decl_uid=211000, cgraph_uid=5884, symbol_order=6673)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, const struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNKSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=8499, decl_uid=179407, cgraph_uid=5131, symbol_order=5920)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::begin (const struct vector * const this)
{
  struct const_iterator D.221241;
  struct const_iterator D.247695;

  <bb 2> :
  _1 = &this->D.179796._M_impl.D.179141._M_start;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.221241, _1);
  D.247695 = D.221241;
  D.221241 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247695;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8502, decl_uid=211028, cgraph_uid=5134, symbol_order=5923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.247700;
  struct __normal_iterator D.247699;
  struct __normal_iterator D.247698;

  <bb 2> :
  D.247699 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__last);
  D.247700 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__first);
  D.247698 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.247700, D.247699, __result);

  <bb 3> :
<L0>:
  return D.247698;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9256, decl_uid=221283, cgraph_uid=5888, symbol_order=6677)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.247702;

  <bb 2> :
  D.247702 = __it;

  <bb 3> :
<L0>:
  return D.247702;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9257, decl_uid=221289, cgraph_uid=5890, symbol_order=6679)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct relate_type * D.247706;
  struct __normal_iterator D.247704;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__result);
  _2 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__last);
  _3 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__first);
  D.247706 = std::__copy_move_a1<false, const relate_type*, relate_type*> (_3, _2, _1);
  _4 = D.247706;
  D.247704 = std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.247704;

}



;; Function std::__niter_base<relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIP11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=9948, decl_uid=232792, cgraph_uid=6580, symbol_order=7373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  struct relate_type * D.247707;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__it);
  D.247707 = *_1;

  <bb 3> :
<L0>:
  return D.247707;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8729, decl_uid=201510, cgraph_uid=5361, symbol_order=6150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * const & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  struct relate_type * const & D.247709;

  <bb 2> :
  D.247709 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.247709;

}



;; Function std::__niter_base<const relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIPK11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=9947, decl_uid=232641, cgraph_uid=6579, symbol_order=7372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * std::__niter_base<const relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  const struct relate_type * D.247711;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (&__it);
  D.247711 = *_1;

  <bb 3> :
<L0>:
  return D.247711;

}



;; Function std::__copy_move_a1<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=9949, decl_uid=232795, cgraph_uid=6581, symbol_order=7374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247715;
  struct relate_type * D.247713;

  <bb 2> :
  D.247715 = std::__copy_move_a2<false, const relate_type*, relate_type*> (__first, __last, __result);
  D.247713 = D.247715;

  <bb 3> :
<L0>:
  return D.247713;

}



;; Function std::__copy_move_a2<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=10470, decl_uid=239608, cgraph_uid=7102, symbol_order=7895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247716;

  <bb 2> :
  D.247716 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.247716;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11relate_typeEEPT_PKS4_S7_S5_, funcdef_no=10777, decl_uid=243062, cgraph_uid=7409, symbol_order=8204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct relate_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  const ptrdiff_t _Num;
  struct relate_type * D.247721;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 48;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.354_2 = (long unsigned int) _Num;
  _3 = _Num.354_2 * 48;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.355_4 = (long unsigned int) _Num;
  _5 = _Num.355_4 * 48;
  D.247721 = __result + _5;

  <bb 5> :
<L3>:
  return D.247721;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=9950, decl_uid=232799, cgraph_uid=6582, symbol_order=7375)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __from, struct relate_type * __res)
{
  struct __normal_iterator D.247723;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 48;
  D.247723 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.247723;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10471, decl_uid=201501, cgraph_uid=7103, symbol_order=7896)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct relate_type * const D.243068;
  struct __normal_iterator D.243069;
  struct __normal_iterator D.247725;

  <bb 2> :
  _1 = this->_M_current;
  __n.356_2 = (long unsigned int) __n;
  _3 = __n.356_2 * 48;
  _4 = _1 + _3;
  D.243068 = _4;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.243069, &D.243068);
  D.247725 = D.243069;
  D.243069 = {CLOBBER};
  D.243068 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.247725;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8503, decl_uid=211034, cgraph_uid=5135, symbol_order=5924)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.221318)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9259, decl_uid=221320, cgraph_uid=5891, symbol_order=6680)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=9951, decl_uid=232823, cgraph_uid=6583, symbol_order=7376)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator D.239617, struct __normal_iterator D.239618)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<relate_type*, relate_type*> (_ZSt4copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=8504, decl_uid=211042, cgraph_uid=5136, symbol_order=5925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247731;
  struct relate_type * D.247729;

  <bb 2> :
  _1 = std::__miter_base<relate_type*> (__last);
  _2 = std::__miter_base<relate_type*> (__first);
  D.247731 = std::__copy_move_a<false, relate_type*, relate_type*> (_2, _1, __result);
  D.247729 = D.247731;

  <bb 3> :
<L0>:
  return D.247729;

}



;; Function std::__miter_base<relate_type*> (_ZSt12__miter_baseIP11relate_typeET_S2_, funcdef_no=9260, decl_uid=221336, cgraph_uid=5892, symbol_order=6681)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__miter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.247732;

  <bb 2> :
  D.247732 = __it;

  <bb 3> :
<L0>:
  return D.247732;

}



;; Function std::__copy_move_a<false, relate_type*, relate_type*> (_ZSt13__copy_move_aILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=9261, decl_uid=221338, cgraph_uid=5893, symbol_order=6682)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247736;
  struct relate_type * D.247734;

  <bb 2> :
  __result.357_1 = __result;
  _2 = std::__niter_base<relate_type*> (__result.357_1);
  _3 = std::__niter_base<relate_type*> (__last);
  _4 = std::__niter_base<relate_type*> (__first);
  D.247736 = std::__copy_move_a1<false, relate_type*, relate_type*> (_4, _3, _2);
  _5 = D.247736;
  D.247734 = std::__niter_wrap<relate_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.247734;

}



;; Function std::__niter_base<relate_type*> (_ZSt12__niter_baseIP11relate_typeET_S2_, funcdef_no=9952, decl_uid=221546, cgraph_uid=6584, symbol_order=7377)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.247737;

  <bb 2> :
  D.247737 = __it;

  <bb 3> :
<L0>:
  return D.247737;

}



;; Function std::__copy_move_a1<false, relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=9953, decl_uid=232834, cgraph_uid=6585, symbol_order=7378)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247741;
  struct relate_type * D.247739;

  <bb 2> :
  D.247741 = std::__copy_move_a2<false, relate_type*, relate_type*> (__first, __last, __result);
  D.247739 = D.247741;

  <bb 3> :
<L0>:
  return D.247739;

}



;; Function std::__copy_move_a2<false, relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=10472, decl_uid=239626, cgraph_uid=7104, symbol_order=7897)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247742;

  <bb 2> :
  D.247742 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.247742;

}



;; Function std::__niter_wrap<relate_type*> (_ZSt12__niter_wrapIP11relate_typeET_RKS2_S2_, funcdef_no=9954, decl_uid=232838, cgraph_uid=6586, symbol_order=7379)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_wrap<relate_type*> (struct relate_type * const & D.239630, struct relate_type * __res)
{
  struct relate_type * D.247744;

  <bb 2> :
  D.247744 = __res;

  <bb 3> :
<L0>:
  return D.247744;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8489, decl_uid=179029, cgraph_uid=5121, symbol_order=5910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.247746;

  <bb 2> :
  D.247746 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.247746;

}



;; Function std::vector<relate_type>::size (_ZNKSt6vectorI11relate_typeSaIS0_EE4sizeEv, funcdef_no=7778, decl_uid=179429, cgraph_uid=4410, symbol_order=5195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::size (const struct vector * const this)
{
  size_type D.247748;

  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_finish;
  _2 = this->D.179796._M_impl.D.179141._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.247748 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.247748;

}



;; Function std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIP11relate_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8505, decl_uid=211046, cgraph_uid=5137, symbol_order=5926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & D.221345)
{
  struct relate_type * D.247752;
  struct relate_type * D.247750;

  <bb 2> :
  D.247752 = std::uninitialized_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.247750 = D.247752;

  <bb 3> :
<L0>:
  return D.247750;

}



;; Function std::uninitialized_copy<relate_type*, relate_type*> (_ZSt18uninitialized_copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=9262, decl_uid=221347, cgraph_uid=5895, symbol_order=6684)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247755;
  const bool __assignable;
  struct relate_type * D.247753;

  <bb 2> :
  __assignable = 1;
  D.247755 = std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.247753 = D.247755;

  <bb 3> :
<L0>:
  return D.247753;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11relate_typeS3_EET0_T_S5_S4_, funcdef_no=9955, decl_uid=232937, cgraph_uid=6587, symbol_order=7380)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.247756;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, relate_type&> (_1, __first);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.247756 = __cur;

  <bb 6> :
<L3>:
  return D.247756;

}



;; Function std::_Construct<relate_type, relate_type&> (_ZSt10_ConstructI11relate_typeJRS0_EEvPT_DpOT0_, funcdef_no=10474, decl_uid=239638, cgraph_uid=7106, symbol_order=7899)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, relate_type&> (struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.243092;
  void * D.243091;
  const struct relate_type * D.243093;

  <bb 2> :
  D.243093 = std::forward<relate_type&> (__args#0);
  D.243091 = __p;
  D.243092 = operator new (48, D.243091);
  MEM[(struct relate_type *)D.243092] = *D.243093;
  return;

}



;; Function std::forward<relate_type&> (_ZSt7forwardIR11relate_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10778, decl_uid=243089, cgraph_uid=7410, symbol_order=8205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type&> (struct type & __t)
{
  struct relate_type & D.247758;

  <bb 2> :
  D.247758 = __t;

  <bb 3> :
<L0>:
  return D.247758;

}



;; Function relate_type::relate_type (_ZN11relate_typeC2Ev, funcdef_no=6314, decl_uid=191811, cgraph_uid=3289, symbol_order=4065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void relate_type::relate_type (struct relate_type * const this)
{
  <bb 2> :
  this->now_fucntion = 0;
  this->now_stmt = 0;
  this->now_basicblock = 0;
  return;

}



;; Function std::vector<relate_type>::push_back (_ZNSt6vectorI11relate_typeSaIS0_EE9push_backERKS0_, funcdef_no=7646, decl_uid=179476, cgraph_uid=4279, symbol_order=5064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<relate_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.247763;

  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_finish;
  _2 = this->D.179796._M_impl.D.179141._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.179796._M_impl.D.179141._M_finish;
  _4 = &this->D.179796._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_4, _3, __x);
  _5 = this->D.179796._M_impl.D.179141._M_finish;
  _6 = _5 + 48;
  this->D.179796._M_impl.D.179141._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.247763 = std::vector<relate_type>::end (this);
  std::vector<relate_type>::_M_realloc_insert<const relate_type&> (this, D.247763, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8506, decl_uid=211058, cgraph_uid=5138, symbol_order=5927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (struct allocator_type & __a, struct relate_type * __p, const struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const relate_type&> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9265, decl_uid=221364, cgraph_uid=5897, symbol_order=6686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (struct new_allocator * const this, struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.232949;
  void * D.232948;
  const struct relate_type * D.232950;

  <bb 2> :
  D.232950 = std::forward<const relate_type&> (__args#0);
  D.232948 = __p;
  D.232949 = operator new (48, D.232948);
  MEM[(struct relate_type *)D.232949] = *D.232950;
  return;

}



;; Function std::vector<relate_type>::_M_realloc_insert<const relate_type&> (_ZNSt6vectorI11relate_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8507, decl_uid=211227, cgraph_uid=5142, symbol_order=5931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::_M_realloc_insert<const relate_type&> (struct vector * const this, struct iterator __position, const struct relate_type & __args#0)
{
  struct relate_type * D.247768;
  const size_type D.247767;
  struct relate_type * __new_finish;
  struct relate_type * __new_start;
  const size_type __elems_before;
  struct relate_type * __old_finish;
  struct relate_type * __old_start;
  const size_type __len;
  struct iterator D.221375;

  <bb 2> :
  D.247767 = std::vector<relate_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.247767;
  __old_start = this->D.179796._M_impl.D.179141._M_start;
  __old_finish = this->D.179796._M_impl.D.179141._M_finish;
  D.221375 = std::vector<relate_type>::begin (this);
  _1 = __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (&__position, &D.221375);
  __elems_before = (const size_type) _1;
  D.221375 = {CLOBBER};
  _2 = &this->D.179796;
  D.247768 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_2, __len);
  __new_start = D.247768;
  __new_finish = __new_start;
  _3 = std::forward<const relate_type&> (__args#0);
  _4 = __elems_before * 48;
  _5 = __new_start + _4;
  _6 = &this->D.179796._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.179796;
  _8 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<relate_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 48;
  _11 = &this->D.179796;
  _12 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<relate_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.179796;
  _23 = this->D.179796._M_impl.D.179141._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 48;
  _26 = (long unsigned int) _25;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.179796._M_impl.D.179141._M_start = __new_start;
  this->D.179796._M_impl.D.179141._M_finish = __new_finish;
  _27 = __len * 48;
  _28 = __new_start + _27;
  this->D.179796._M_impl.D.179141._M_end_of_storage = _28;
  return;

}



;; Function std::vector<relate_type>::_M_check_len (_ZNKSt6vectorI11relate_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9266, decl_uid=179645, cgraph_uid=5898, symbol_order=6687)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<relate_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.360;
  size_type D.247772;
  const long unsigned int D.232955;
  bool retval.358;

  <bb 2> :
  _1 = std::vector<relate_type>::max_size (this);
  _2 = std::vector<relate_type>::size (this);
  _3 = _1 - _2;
  __n.359_4 = __n;
  retval.358 = _3 < __n.359_4;
  if (retval.358 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<relate_type>::size (this);
  _6 = std::vector<relate_type>::size (this);
  D.232955 = _6;
  _7 = std::max<long unsigned int> (&D.232955, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.232955 = {CLOBBER};
  _9 = std::vector<relate_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<relate_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.360 = std::vector<relate_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.360 = __len;

  <bb 8> :
  D.247772 = iftmp.360;

  <bb 9> :
<L6>:
  return D.247772;

}



;; Function std::vector<relate_type>::max_size (_ZNKSt6vectorI11relate_typeSaIS0_EE8max_sizeEv, funcdef_no=9956, decl_uid=179431, cgraph_uid=6588, symbol_order=7381)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::max_size (const struct vector * const this)
{
  size_type D.247779;

  <bb 2> :
  _1 = &this->D.179796;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  D.247779 = std::vector<relate_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.247779;

}



;; Function std::vector<relate_type>::_S_max_size (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10475, decl_uid=179652, cgraph_uid=7107, symbol_order=7900)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.247781;

  <bb 2> :
  __diffmax = 192153584101141162;
  _1 = std::allocator_traits<std::allocator<relate_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.247781 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247781;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::max_size (_ZNSt16allocator_traitsISaI11relate_typeEE8max_sizeERKS1_, funcdef_no=10779, decl_uid=178966, cgraph_uid=7411, symbol_order=8206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<relate_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.247784;

  <bb 2> :
  D.247784 = __gnu_cxx::new_allocator<relate_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.247784;

}



;; Function __gnu_cxx::new_allocator<relate_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE8max_sizeEv, funcdef_no=10896, decl_uid=178808, cgraph_uid=7528, symbol_order=8323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::max_size (const struct new_allocator * const this)
{
  size_type D.247786;

  <bb 2> :
  D.247786 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.247786;

}



;; Function __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxmiIP11relate_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9267, decl_uid=221376, cgraph_uid=5899, symbol_order=6688)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.247788;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.247788 = _5 /[ex] 48;

  <bb 3> :
<L0>:
  return D.247788;

}



;; Function std::vector<relate_type>::_S_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9268, decl_uid=179303, cgraph_uid=5900, symbol_order=6689)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.247791;
  struct relate_type * D.247790;

  <bb 2> :
  D.247790 = std::vector<relate_type>::_S_do_relocate (__first, __last, __result, __alloc, D.247791);

  <bb 3> :
<L0>:
  return D.247790;

}



;; Function std::vector<relate_type>::_S_do_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=9957, decl_uid=179291, cgraph_uid=6589, symbol_order=7382)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_do_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239650)
{
  struct relate_type * D.247793;

  <bb 2> :
  D.247793 = std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.247793;

}



;; Function std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt12__relocate_aIP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10476, decl_uid=221540, cgraph_uid=7108, symbol_order=7901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * D.247795;

  <bb 2> :
  _1 = std::__niter_base<relate_type*> (__result);
  _2 = std::__niter_base<relate_type*> (__last);
  _3 = std::__niter_base<relate_type*> (__first);
  D.247795 = std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.247795;

}



;; Function std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt14__relocate_a_1IP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10780, decl_uid=221691, cgraph_uid=7412, symbol_order=8207)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * __cur;
  struct relate_type * D.247797;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_2, _1, __alloc);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.247797 = __cur;

  <bb 6> :
<L3>:
  return D.247797;

}



;; Function std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_ZSt19__relocate_object_aI11relate_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10897, decl_uid=221720, cgraph_uid=7529, symbol_order=8324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (struct relate_type * restrict __dest, struct relate_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<relate_type&> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (__alloc, __dest, _1);
  _2 = std::__addressof<relate_type> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (__alloc, _2);
  return;

}



;; Function std::move<relate_type&> (_ZSt4moveIR11relate_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10945, decl_uid=221732, cgraph_uid=7577, symbol_order=8372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<relate_type&> (struct relate_type & __t)
{
  struct type & D.247799;

  <bb 2> :
  D.247799 = __t;

  <bb 3> :
<L0>:
  return D.247799;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10946, decl_uid=221734, cgraph_uid=7578, symbol_order=8373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (struct allocator_type & __a, struct relate_type * __p, struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<relate_type> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (__a, __p, _1);
  return;

}



;; Function std::forward<relate_type> (_ZSt7forwardI11relate_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10965, decl_uid=245308, cgraph_uid=7597, symbol_order=8392)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type> (struct type & __t)
{
  struct relate_type & D.247801;

  <bb 2> :
  D.247801 = __t;

  <bb 3> :
<L0>:
  return D.247801;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10966, decl_uid=245310, cgraph_uid=7598, symbol_order=8393)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (struct new_allocator * const this, struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.245739;
  void * D.245738;
  struct relate_type * D.245740;

  <bb 2> :
  D.245740 = std::forward<relate_type> (__args#0);
  D.245738 = __p;
  D.245739 = operator new (48, D.245738);
  MEM[(struct relate_type *)D.245739] = *D.245740;
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9269, decl_uid=221749, cgraph_uid=5901, symbol_order=6690)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (struct allocator_type & __a, struct relate_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE7destroyIS1_EEvPT_, funcdef_no=9958, decl_uid=232969, cgraph_uid=6590, symbol_order=7383)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (struct new_allocator * const this, struct relate_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::put (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7648, decl_uid=191416, cgraph_uid=4283, symbol_order=5068)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_relate_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_relate_array & v)
{
  bool D.247810;
  struct hash_entry * D.247809;
  unsigned int D.247808;
  bool ins;
  struct hash_entry * e;
  bool D.247806;
  void * D.211237;
  void * D.211236;

  <bb 2> :
  _1 = &this->m_table;
  D.247808 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.247808;
  D.247809 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.247809;
  D.247810 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (e);
  ins = D.247810;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.211236 = &e->m_value;
  D.211237 = operator new (24, D.211236);
  function_relate_array::function_relate_array (D.211237, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_relate_array::operator= (_4, v);

  <bb 5> :
  D.247806 = ~ins;

  <bb 6> :
<L3>:
  return D.247806;

  <bb 7> :
<L4>:
  operator delete (D.211237, D.211236);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8511, decl_uid=191574, cgraph_uid=5143, symbol_order=5932)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.247861;
  bool D.247860;
  bool D.247859;
  bool D.247858;
  bool D.247857;
  bool D.247856;
  struct value_type * D.247855;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.366;
  bool retval.365;
  bool retval.364;
  bool retval.363;
  bool retval.362;
  bool retval.361;
  struct value_type * D.247817;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.247856 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.361 = D.247856;
  if (retval.361 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.247857 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.362 = D.247857;
  if (retval.362 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.247858 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.363 = D.247858;
  if (retval.363 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.247817 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.247859 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.364 = D.247859;
  if (retval.364 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.247860 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.365 = D.247860;
  if (retval.365 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.247861 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.366 = D.247861;
  if (retval.366 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.247817 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.247817 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.247817 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.247817 = _37 + _39;

  <bb 27> :
<L37>:
  return D.247817;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9270, decl_uid=191655, cgraph_uid=5914, symbol_order=6703)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.247892;
  unsigned int D.247891;
  bool D.247890;
  bool D.247889;
  struct mem_alloc_description & D.247888;
  struct value_type * D.247887;
  unsigned int D.247886;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.232992;
  void * D.232991;
  struct hash_entry & D.233029;
  bool iftmp.370;
  bool retval.369;
  bool iftmp.368;
  bool retval.367;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.368 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.368 = 0;

  <bb 6> :
  retval.367 = iftmp.368;
  if (retval.367 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.247886 = hash_table_higher_prime_index (_5);
  nindex = D.247886;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.247887 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.247887;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.247889 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.247889;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.247890 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.247890;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.370 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.370 = 0;

  <bb 15> :
  retval.369 = iftmp.370;
  if (retval.369 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.247891 = hash_map<tree_node*, function_relate_array>::hash_entry::hash (x);
  _16 = D.247891;
  D.247892 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.247892;
  D.233029 = std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (x);
  D.232991 = q;
  D.232992 = operator new (32, D.232991);
  hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (D.232992, D.233029);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=9959, decl_uid=191550, cgraph_uid=6591, symbol_order=7384)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.247893;

  <bb 2> :
  D.247893 = this->m_size;

  <bb 3> :
<L0>:
  return D.247893;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=9960, decl_uid=191552, cgraph_uid=6592, symbol_order=7385)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.247895;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.247895 = _1 - _2;

  <bb 3> :
<L0>:
  return D.247895;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=9961, decl_uid=191652, cgraph_uid=6593, symbol_order=7386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.371;
  bool D.247897;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.371 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.371 = 0;

  <bb 6> :
  D.247897 = iftmp.371;

  <bb 7> :
<L4>:
  return D.247897;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9248, decl_uid=191642, cgraph_uid=5880, symbol_order=6669)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.247919;
  struct value_type * D.247918;
  struct mem_alloc_description & D.247917;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.247915;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.247918 = xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (n);
  nentries = D.247918;
  goto <bb 6>; [INV]

  <bb 5> :
  D.247919 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (n);
  nentries = D.247919;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.247915 = nentries;

  <bb 9> :
<L14>:
  return D.247915;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9942, decl_uid=214459, cgraph_uid=6574, symbol_order=7367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.247922;
  struct hash_entry * D.247920;

  <bb 2> :
  D.247922 = xcalloc (count, 32);
  D.247920 = D.247922;

  <bb 3> :
<L0>:
  return D.247920;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9943, decl_uid=232601, cgraph_uid=6575, symbol_order=7368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.247929;
  struct hash_entry * D.247928;
  struct hash_entry * D.247926;
  bool retval.372;

  <bb 2> :
  retval.372 = need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ();
  if (retval.372 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.247928 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.247926 = D.247928;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.247929 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.247926 = D.247929;

  <bb 5> :
<L2>:
  return D.247926;

}



;; Function finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10462, decl_uid=239543, cgraph_uid=7097, symbol_order=7890)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10464, decl_uid=242999, cgraph_uid=7095, symbol_order=7888)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_relate_array::~function_relate_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10461, decl_uid=239542, cgraph_uid=7093, symbol_order=7886)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ()
{
  bool D.247930;

  <bb 2> :
  D.247930 = 1;

  <bb 3> :
<L0>:
  return D.247930;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=9963, decl_uid=191475, cgraph_uid=6595, symbol_order=7388)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_relate_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.247934;
  hashval_t D.247932;

  <bb 2> :
  _1 = &e->m_key;
  D.247934 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_1);
  D.247932 = D.247934;

  <bb 3> :
<L0>:
  return D.247932;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=9962, decl_uid=191645, cgraph_uid=6594, symbol_order=7387)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.247947;
  bool D.247946;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.374;
  struct value_type * D.247938;
  bool retval.373;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.247946 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.373 = D.247946;
  if (retval.373 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.247938 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.247947 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.374 = D.247947;
  if (retval.374 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.247938 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.247938;

}



;; Function std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=9964, decl_uid=232989, cgraph_uid=6596, symbol_order=7389)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.247948;

  <bb 2> :
  D.247948 = __t;

  <bb 3> :
<L0>:
  return D.247948;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9281, decl_uid=233014, cgraph_uid=5912, symbol_order=6701)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.233016)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.233016->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.233016->m_value;
  function_relate_array::function_relate_array (_2, _3);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2EOS_, funcdef_no=9279, decl_uid=191350, cgraph_uid=5909, symbol_order=6698)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, struct function_relate_array & D.191352)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191352->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9277, decl_uid=179753, cgraph_uid=5906, symbol_order=6695)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this, struct vector & D.179755)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179796;
  _2 = &D.179755->D.179796;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9275, decl_uid=179221, cgraph_uid=5903, symbol_order=6692)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.179223)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.179223->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=9966, decl_uid=179127, cgraph_uid=6598, symbol_order=7391)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  std::allocator<relate_type>::allocator (this, _1);
  _2 = &this->D.179141;
  _3 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.179141;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2ERKS0_, funcdef_no=10479, decl_uid=178911, cgraph_uid=7111, symbol_order=7904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2ERKS2_, funcdef_no=10782, decl_uid=178840, cgraph_uid=7414, symbol_order=8209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.178842)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11relate_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10477, decl_uid=239680, cgraph_uid=7109, symbol_order=7902)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.247950;

  <bb 2> :
  D.247950 = __t;

  <bb 3> :
<L0>:
  return D.247950;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10482, decl_uid=179083, cgraph_uid=7114, symbol_order=7907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8733, decl_uid=214461, cgraph_uid=5365, symbol_order=6154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9283, decl_uid=191663, cgraph_uid=5915, symbol_order=6704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=9968, decl_uid=191487, cgraph_uid=6600, symbol_order=7393)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10484, decl_uid=239695, cgraph_uid=7116, symbol_order=7909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2ERKS_, funcdef_no=7650, decl_uid=191341, cgraph_uid=4281, symbol_order=5066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, const struct function_relate_array & D.191343)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191343->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2ERKS2_, funcdef_no=8514, decl_uid=179759, cgraph_uid=5146, symbol_order=5935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<relate_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.247957;
  struct __normal_iterator D.247954;
  struct __normal_iterator D.247953;
  struct allocator D.221952;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179796;
  _2 = &__x->D.179796;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  D.221952 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<relate_type>::size (__x);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _4, &D.221952);

  <bb 3> :
  std::allocator<relate_type>::~allocator (&D.221952);
  D.221952 = {CLOBBER};
  _5 = &this->D.179796;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.179796._M_impl.D.179141._M_start;
  D.247953 = std::vector<relate_type>::end (__x);
  D.247954 = std::vector<relate_type>::begin (__x);
  D.247957 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (D.247954, D.247953, _7, _6);

  <bb 4> :
  _8 = D.247957;
  this->D.179796._M_impl.D.179141._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<relate_type>::~allocator (&D.221952);
  resx 2

  <bb 6> :
<L1>:
  D.221952 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.179796;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=9284, decl_uid=179003, cgraph_uid=5916, symbol_order=6705)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11relate_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9969, decl_uid=178968, cgraph_uid=6601, symbol_order=7394)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<relate_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EmRKS1_, funcdef_no=9286, decl_uid=179228, cgraph_uid=5918, symbol_order=6707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9971, decl_uid=179133, cgraph_uid=6603, symbol_order=7396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this, __a);
  _1 = &this->D.179141;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9973, decl_uid=179152, cgraph_uid=6605, symbol_order=7398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.247964;

  <bb 2> :
  D.247964 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (this, __n);
  _1 = D.247964;
  this->_M_impl.D.179141._M_start = _1;
  _2 = this->_M_impl.D.179141._M_start;
  this->_M_impl.D.179141._M_finish = _2;
  _3 = this->_M_impl.D.179141._M_start;
  _4 = __n * 48;
  _5 = _3 + _4;
  this->_M_impl.D.179141._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6300, decl_uid=179188, cgraph_uid=3273, symbol_order=4049)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<relate_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<relate_type>::~allocator (_ZNSaI11relate_typeED2Ev, funcdef_no=7634, decl_uid=178921, cgraph_uid=4266, symbol_order=5051)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeED2Ev, funcdef_no=8486, decl_uid=178850, cgraph_uid=5118, symbol_order=5907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EED2Ev, funcdef_no=7637, decl_uid=179251, cgraph_uid=4269, symbol_order=5054)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.179141._M_end_of_storage;
  _2 = this->_M_impl.D.179141._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.179141._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function function_relate_array::~function_relate_array (_ZN21function_relate_arrayD2Ev, funcdef_no=6310, decl_uid=191362, cgraph_uid=3285, symbol_order=4061)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::~function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<relate_type>::~vector (_ZNSt6vectorI11relate_typeSaIS0_EED2Ev, funcdef_no=7640, decl_uid=179793, cgraph_uid=4272, symbol_order=5057)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179796;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.179796._M_impl.D.179141._M_finish;
  _4 = this->D.179796._M_impl.D.179141._M_start;
  std::_Destroy<relate_type*, relate_type> (_4, _3, _2);
  _5 = &this->D.179796;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function trace_function_path (_Z19trace_function_pathP9tree_nodeiS0_Pi, funcdef_no=6316, decl_uid=186999, cgraph_uid=3323, symbol_order=4099)

Merging blocks 4 and 232
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 40
Removing basic block 44
Removing basic block 74
Removing basic block 91
Removing basic block 92
Removing basic block 98
Removing basic block 123
Removing basic block 151
Removing basic block 161
Removing basic block 162
Removing basic block 179
Removing basic block 181
Removing basic block 203
Removing basic block 216
Removing basic block 217
Removing basic block 221
Removing basic block 230
Merging blocks 231 and 233
;; 9 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 6
;;  header 209, latch 208
;;  depth 1, outer 0
;;  nodes: 209 208 202 207 206 205 204 203 178 201 180 179 200 189 199 190 198 191 197 196 195 194 193 192 186 188 187 185 184 183 182 181 175 177 171 176 172 170 169 174 173
;;
;; Loop 8
;;  header 200, latch 199
;;  depth 2, outer 6
;;  nodes: 200 199 190 198 191 197 196 195 194 193 192
;;
;; Loop 7
;;  header 177, latch 176
;;  depth 2, outer 6
;;  nodes: 177 176 172
;;
;; Loop 5
;;  header 141, latch 140
;;  depth 1, outer 0
;;  nodes: 141 140 130 139 138 137 136 135 134 133 132 131 129 128 127
;;
;; Loop 4
;;  header 114, latch 113
;;  depth 1, outer 0
;;  nodes: 114 113 103 112 111 110 109 108 107 106 105 104 102 101 100
;;
;; Loop 3
;;  header 85, latch 84
;;  depth 1, outer 0
;;  nodes: 85 84 56 61 60 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 67 68 64 63 62 66 65 59 58 57 55 54
;;
;; Loop 2
;;  header 52, latch 51
;;  depth 1, outer 0
;;  nodes: 52 51 50 49
;;
;; Loop 1
;;  header 37, latch 36
;;  depth 1, outer 0
;;  nodes: 37 36 21 35 27 29 31 28 30 25 26 22 23 24 34 33 32
;; 2 succs { 239 3 }
;; 3 succs { 4 5 }
;; 4 succs { 211 }
;; 5 succs { 239 6 }
;; 6 succs { 239 7 }
;; 7 succs { 238 8 }
;; 8 succs { 237 9 }
;; 9 succs { 237 10 }
;; 10 succs { 11 39 }
;; 11 succs { 237 12 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 39 }
;; 17 succs { 214 18 }
;; 18 succs { 214 19 }
;; 19 succs { 213 20 }
;; 20 succs { 37 }
;; 21 succs { 22 36 }
;; 22 succs { 23 26 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 36 }
;; 28 succs { 29 36 }
;; 29 succs { 30 36 }
;; 30 succs { 212 31 }
;; 31 succs { 32 36 }
;; 32 succs { 212 33 }
;; 33 succs { 212 34 }
;; 34 succs { 212 35 }
;; 35 succs { 212 36 }
;; 36 succs { 37 }
;; 37 succs { 21 38 }
;; 38 succs { 39 }
;; 39 succs { 40 89 }
;; 40 succs { 41 89 }
;; 41 succs { 237 42 }
;; 42 succs { 43 89 }
;; 43 succs { 223 44 }
;; 44 succs { 223 45 }
;; 45 succs { 222 46 }
;; 46 succs { 221 47 }
;; 47 succs { 215 48 }
;; 48 succs { 52 }
;; 49 succs { 217 50 }
;; 50 succs { 216 51 }
;; 51 succs { 52 }
;; 52 succs { 49 53 }
;; 53 succs { 85 }
;; 54 succs { 221 55 }
;; 55 succs { 221 56 }
;; 56 succs { 57 84 }
;; 57 succs { 221 58 }
;; 58 succs { 221 59 }
;; 59 succs { 221 60 }
;; 60 succs { 61 84 }
;; 61 succs { 62 84 }
;; 62 succs { 221 63 }
;; 63 succs { 218 64 }
;; 64 succs { 65 68 }
;; 65 succs { 220 66 }
;; 66 succs { 219 67 }
;; 67 succs { 221 69 }
;; 68 succs { 221 69 }
;; 69 succs { 221 70 }
;; 70 succs { 221 71 }
;; 71 succs { 221 72 }
;; 72 succs { 221 73 }
;; 73 succs { 221 74 }
;; 74 succs { 221 75 }
;; 75 succs { 221 76 }
;; 76 succs { 221 77 }
;; 77 succs { 221 78 }
;; 78 succs { 221 79 }
;; 79 succs { 221 80 }
;; 80 succs { 221 81 }
;; 81 succs { 221 82 }
;; 82 succs { 221 83 }
;; 83 succs { 221 84 }
;; 84 succs { 85 }
;; 85 succs { 54 86 }
;; 86 succs { 87 88 }
;; 87 succs { 88 }
;; 88 succs { 89 }
;; 89 succs { 237 90 }
;; 90 succs { 91 94 }
;; 91 succs { 92 94 }
;; 92 succs { 93 94 }
;; 93 succs { 95 }
;; 94 succs { 95 }
;; 95 succs { 96 116 }
;; 96 succs { 226 97 }
;; 97 succs { 226 98 }
;; 98 succs { 225 99 }
;; 99 succs { 114 }
;; 100 succs { 224 101 }
;; 101 succs { 224 102 }
;; 102 succs { 224 103 }
;; 103 succs { 104 113 }
;; 104 succs { 224 105 }
;; 105 succs { 224 106 }
;; 106 succs { 224 107 }
;; 107 succs { 224 108 }
;; 108 succs { 224 109 }
;; 109 succs { 224 110 }
;; 110 succs { 224 111 }
;; 111 succs { 224 112 }
;; 112 succs { 224 113 }
;; 113 succs { 114 }
;; 114 succs { 100 115 }
;; 115 succs { 116 }
;; 116 succs { 237 117 }
;; 117 succs { 118 121 }
;; 118 succs { 119 121 }
;; 119 succs { 120 121 }
;; 120 succs { 122 }
;; 121 succs { 122 }
;; 122 succs { 123 143 }
;; 123 succs { 229 124 }
;; 124 succs { 229 125 }
;; 125 succs { 228 126 }
;; 126 succs { 141 }
;; 127 succs { 227 128 }
;; 128 succs { 227 129 }
;; 129 succs { 227 130 }
;; 130 succs { 131 140 }
;; 131 succs { 227 132 }
;; 132 succs { 227 133 }
;; 133 succs { 227 134 }
;; 134 succs { 227 135 }
;; 135 succs { 227 136 }
;; 136 succs { 227 137 }
;; 137 succs { 227 138 }
;; 138 succs { 227 139 }
;; 139 succs { 227 140 }
;; 140 succs { 141 }
;; 141 succs { 127 142 }
;; 142 succs { 143 }
;; 143 succs { 144 149 }
;; 144 succs { 145 149 }
;; 145 succs { 146 149 }
;; 146 succs { 147 149 }
;; 147 succs { 237 148 }
;; 148 succs { 237 149 }
;; 149 succs { 150 152 }
;; 150 succs { 151 152 }
;; 151 succs { 152 }
;; 152 succs { 153 166 }
;; 153 succs { 237 154 }
;; 154 succs { 155 166 }
;; 155 succs { 231 156 }
;; 156 succs { 231 157 }
;; 157 succs { 230 158 }
;; 158 succs { 159 161 }
;; 159 succs { 160 161 }
;; 160 succs { 162 }
;; 161 succs { 162 }
;; 162 succs { 163 165 }
;; 163 succs { 230 164 }
;; 164 succs { 230 165 }
;; 165 succs { 166 }
;; 166 succs { 237 167 }
;; 167 succs { 168 210 }
;; 168 succs { 209 }
;; 169 succs { 235 170 }
;; 170 succs { 235 171 }
;; 171 succs { 177 }
;; 172 succs { 173 176 }
;; 173 succs { 235 174 }
;; 174 succs { 235 175 }
;; 175 succs { 178 }
;; 176 succs { 177 }
;; 177 succs { 172 178 }
;; 178 succs { 179 202 }
;; 179 succs { 235 180 }
;; 180 succs { 181 202 }
;; 181 succs { 234 182 }
;; 182 succs { 234 183 }
;; 183 succs { 234 184 }
;; 184 succs { 232 185 }
;; 185 succs { 186 187 }
;; 186 succs { 232 189 }
;; 187 succs { 232 188 }
;; 188 succs { 232 189 }
;; 189 succs { 200 }
;; 190 succs { 191 199 }
;; 191 succs { 192 199 }
;; 192 succs { 232 193 }
;; 193 succs { 232 194 }
;; 194 succs { 232 195 }
;; 195 succs { 232 196 }
;; 196 succs { 232 197 }
;; 197 succs { 198 199 }
;; 198 succs { 199 }
;; 199 succs { 200 }
;; 200 succs { 190 201 }
;; 201 succs { 202 }
;; 202 succs { 203 208 }
;; 203 succs { 235 204 }
;; 204 succs { 235 205 }
;; 205 succs { 235 206 }
;; 206 succs { 235 207 }
;; 207 succs { 208 }
;; 208 succs { 209 }
;; 209 succs { 169 210 }
;; 210 succs { 1 }
;; 211 succs { 1 }
;; 212 succs { 213 }
;; 213 succs { 214 }
;; 214 succs { 237 }
;; 215 succs { 221 }
;; 216 succs { 217 }
;; 217 succs { 221 }
;; 218 succs { 221 }
;; 219 succs { 220 }
;; 220 succs { 221 }
;; 221 succs { 222 }
;; 222 succs { 223 }
;; 223 succs { 237 }
;; 224 succs { 225 }
;; 225 succs { 226 }
;; 226 succs { 237 }
;; 227 succs { 228 }
;; 228 succs { 229 }
;; 229 succs { 237 }
;; 230 succs { 231 }
;; 231 succs { 237 }
;; 232 succs { 233 }
;; 233 succs { 234 }
;; 234 succs { 235 }
;; 235 succs { 236 }
;; 236 succs { 237 }
;; 237 succs { 238 }
;; 238 succs { 239 }
;; 239 succs { }
int trace_function_path (union tree_node * function_tree, int fucntion_level, union tree_node * mallocStmt_tree, int * freecount)
{
  const char * D.248188;
  const char * D.248184;
  const char * D.248183;
  const char * D.248182;
  struct function_return_array * D.248181;
  struct function_return_array * D.248180;
  struct function_return_array * D.248179;
  struct function_return_array * D.248178;
  const char * D.248177;
  const char * D.248176;
  struct function_return_array * D.248175;
  const char * D.248172;
  struct function_return_array * D.248171;
  struct function_return_array * D.248170;
  struct function_return_array * D.248169;
  const char * D.248165;
  struct function_pthread_exit_array * D.248164;
  struct function_pthread_exit_array * D.248163;
  const char * D.248159;
  struct function_pthread_detched_array * D.248158;
  struct function_pthread_detched_array * D.248157;
  const char * D.248153;
  union tree_node * D.248150;
  int * D.248148;
  union tree_node * D.248147;
  bool D.248146;
  union tree_node * D.248143;
  void * D.248141;
  struct function_free_array * D.248140;
  struct function_free_array * D.248139;
  bool D.248135;
  struct function_return_array * D.248134;
  struct function_return_array * D.248133;
  const char * D.248132;
  struct function_path_array * D.248131;
  struct function_path_array * D.248130;
  int k;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  int o;
  int find;
  int i;
  struct function_return_array callerFunArray;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct cgraph_node * node;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_exit_array callerFunArray;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_detched_array callerFunArray;
  long unsigned int x;
  int k;
  int k;
  struct hash_map * function_basicblock_collect;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  struct pt_solution * pt;
  struct ptr_info_def * pi;
  int k;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct function_return_array calleeFunArray;
  struct vector callerRetTypearray;
  struct function_return_array * callerFunArray;
  const char * name;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.493;
  bool retval.491;
  bool retval.483;
  bool retval.480;
  bool retval.477;
  bool retval.476;
  bool retval.475;
  bool retval.473;
  bool iftmp.467;
  bool retval.466;
  bool retval.463;
  bool retval.462;
  bool retval.455;
  bool iftmp.440;
  bool retval.439;
  bool retval.438;
  bool iftmp.423;
  bool retval.422;
  struct hash_map * function_basicblock_collect.421;
  bool retval.420;
  union tree_node * const D.193196;
  const int D.193197;
  union tree_node * const D.193195;
  bool retval.405;
  bool retval.401;
  bool retval.400;
  union tree_node * const D.193192;
  const int D.193193;
  void * D.193190;
  bool retval.397;
  bool retval.394;
  bool retval.391;
  bool retval.390;
  bool iftmp.389;
  bool retval.388;
  bool retval.387;
  bool iftmp.382;
  bool retval.381;
  int D.247968;
  bool retval.375;

  <bb 2> :
  function_path_collect.376_1 = function_path_collect;
  D.248130 = hash_map<tree_node*, function_path_array>::get (function_path_collect.376_1, &function_tree);

  <bb 3> :
  _2 = D.248130;
  retval.375 = _2 == 0B;
  if (retval.375 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.247968 = 0;
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  goto <bb 211>; [INV]

  <bb 5> :
  _3 = rand ();
  _4 = (long unsigned int) _3;
  now_fucntion = _4;
  function_path_collect.377_5 = function_path_collect;
  D.248131 = hash_map<tree_node*, function_path_array>::get (function_path_collect.377_5, &function_tree);

  <bb 6> :
  _6 = D.248131;
  function_path_array::function_path_array (&fun_array, _6);

  <bb 7> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 8> :
  fistconunt = 0;
  _7 = std::vector<function_path>::size (&function_path_array);
  function_tree.378_8 = function_tree;
  D.248132 = get_name (function_tree.378_8);

  <bb 9> :
  _9 = D.248132;
  stderr.379_10 = stderr;
  fprintf (stderr.379_10, "\x1b[40;44m =======trace_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _9, _7, fucntion_level);

  <bb 10> :
  retmod.380_11 = retmod;
  if (retmod.380_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 11> :
  function_return_collect.383_12 = function_return_collect;
  D.248133 = hash_map<tree_node*, function_return_array>::get (function_return_collect.383_12, &function_tree);

  <bb 12> :
  _13 = D.248133;
  if (_13 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  fucntion_level.384_14 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.385_15 = RET_HEAP_OBJECT;
  if (fucntion_level.384_14 == RET_HEAP_OBJECT.385_15)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.382 = 1;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.382 = 0;

  <bb 16> :
  retval.381 = iftmp.382;
  if (retval.381 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 17> :
  function_return_collect.386_16 = function_return_collect;
  D.248134 = hash_map<tree_node*, function_return_array>::get (function_return_collect.386_16, &function_tree);

  <bb 18> :
  _17 = D.248134;
  function_return_array::function_return_array (&callerFunArray, _17);

  <bb 19> :
  std::vector<return_type>::vector (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 20> :
  k = 0;
  goto <bb 37>; [INV]

  <bb 21> :
  _18 = (long unsigned int) k;
  _19 = std::vector<return_type>::operator[] (&callerRetTypearray, _18);
  _20 = _19->return_tree;
  retval.387 = _20 != 0B;
  if (retval.387 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 22> :
  _21 = mallocStmt_tree->base.code;
  if (_21 != 26)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  _22 = mallocStmt_tree->base.code;
  if (_22 != 33)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 24> :
  _23 = (long unsigned int) k;
  _24 = std::vector<return_type>::operator[] (&callerRetTypearray, _23);
  _25 = _24->return_tree;
  _26 = _25->base.code;
  if (_26 != 33)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  iftmp.389 = 1;
  goto <bb 27>; [INV]

  <bb 26> :
  iftmp.389 = 0;

  <bb 27> :
  retval.388 = iftmp.389;
  if (retval.388 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 28> :
  _27 = (long unsigned int) k;
  _28 = std::vector<return_type>::operator[] (&callerRetTypearray, _27);
  _29 = _28->return_tree;
  _30 = _29->base.code;
  retval.390 = _30 != 26;
  if (retval.390 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 29> :
  pi = mallocStmt_tree->ssa_name.info.ptr_info;
  pt = &pi->pt;
  if (pi != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 30> :
  _31 = (long unsigned int) k;
  _32 = std::vector<return_type>::operator[] (&callerRetTypearray, _31);
  _33 = _32->return_tree;
  D.248135 = ptr_derefs_may_alias_p (_33, mallocStmt_tree);

  <bb 31> :
  retval.391 = D.248135;
  if (retval.391 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 32> :
  stderr.392_34 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find return stmt  \x1b[0m\n", 1, 33, stderr.392_34);

  <bb 33> :
  stderr.393_35 = stderr;
  __builtin_fwrite ("\x1b[40;31m  this fucntion return heap-object  \x1b[0m\n", 1, 49, stderr.393_35);

  <bb 34> :
  _36 = (long unsigned int) k;
  _37 = std::vector<return_type>::operator[] (&callerRetTypearray, _36);
  _38 = _37->stmt;
  debug_gimple_stmt (_38);

  <bb 35> :
  _39 = (long unsigned int) k;
  _40 = std::vector<return_type>::operator[] (&callerRetTypearray, _39);
  _41 = _40->stmt;
  _42 = gimple_location_safe (_41);
  warning_at (_42, 0, "use location");

  <bb 36> :
  k = k + 1;

  <bb 37> :
  _43 = (long unsigned int) k;
  _44 = std::vector<return_type>::size (&callerRetTypearray);
  retval.394 = _43 < _44;
  if (retval.394 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 38> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 39> :
  if (mallocStmt_tree != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 40> :
  fucntion_level.395_45 = (unsigned int) fucntion_level;
  DISABLE_TREACE.396_46 = DISABLE_TREACE;
  if (fucntion_level.395_45 != DISABLE_TREACE.396_46)
    goto <bb 41>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 41> :
  function_free_collect.398_47 = function_free_collect;
  D.248139 = hash_map<tree_node*, function_free_array>::get (function_free_collect.398_47, &function_tree);

  <bb 42> :
  _48 = D.248139;
  retval.397 = _48 != 0B;
  if (retval.397 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 43> :
  function_free_collect.399_49 = function_free_collect;
  D.248140 = hash_map<tree_node*, function_free_array>::get (function_free_collect.399_49, &function_tree);

  <bb 44> :
  _50 = D.248140;
  function_free_array::function_free_array (&callerFunArray, _50);

  <bb 45> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 46> :
  D.248141 = operator new (48);

  <bb 47> :
  D.193190 = D.248141;
  hash_map<tree_node*, int>::hash_map (D.193190, 13, 0, 1, 0);

  <bb 48> :
  function_basicblock_collect = D.193190;
  k = 0;
  goto <bb 52>; [INV]

  <bb 49> :
  D.193193 = 0;
  _51 = (long unsigned int) k;
  _52 = std::vector<free_type>::operator[] (&callerRetTypearray, _51);
  _53 = _52->stmt;
  D.248143 = gimple_block (_53);

  <bb 50> :
  _54 = D.248143;
  D.193192 = _54;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193192, &D.193193);

  <bb 51> :
  D.193192 = {CLOBBER};
  D.193193 = {CLOBBER};
  k = k + 1;

  <bb 52> :
  _55 = (long unsigned int) k;
  _56 = std::vector<free_type>::size (&callerRetTypearray);
  retval.400 = _55 < _56;
  if (retval.400 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 53> :
  k = 0;
  goto <bb 85>; [INV]

  <bb 54> :
  _57 = (long unsigned int) k;
  _58 = std::vector<free_type>::operator[] (&callerRetTypearray, _57);
  _59 = _58->stmt;
  debug_gimple_stmt (_59);

  <bb 55> :
  _60 = (long unsigned int) k;
  _61 = std::vector<free_type>::operator[] (&callerRetTypearray, _60);
  _62 = _61->free_tree;
  D.248146 = ptr_derefs_may_alias_p (_62, mallocStmt_tree);

  <bb 56> :
  retval.401 = D.248146;
  if (retval.401 != 0)
    goto <bb 57>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 57> :
  stderr.402_63 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find free stmt free same pointer \x1b[0m\n", 1, 48, stderr.402_63);

  <bb 58> :
  _64 = (long unsigned int) k;
  _65 = std::vector<free_type>::operator[] (&callerRetTypearray, _64);
  _66 = _65->stmt;
  debug_gimple_stmt (_66);

  <bb 59> :
  _67 = (long unsigned int) k;
  _68 = std::vector<free_type>::operator[] (&callerRetTypearray, _67);
  _69 = _68->stmt;
  _70 = gimple_location_safe (_69);
  warning_at (_70, 0, "use location");

  <bb 60> :
  _71 = *freecount;
  _72 = _71 + 1;
  *freecount = _72;
  freemod.403_73 = freemod;
  if (freemod.403_73 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 61> :
  debugmod.404_74 = debugmod;
  if (debugmod.404_74 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 62> :
  _75 = (long unsigned int) k;
  _76 = std::vector<free_type>::operator[] (&callerRetTypearray, _75);
  _77 = _76->stmt;
  D.248147 = gimple_block (_77);

  <bb 63> :
  _78 = D.248147;
  D.193195 = _78;
  D.248148 = hash_map<tree_node*, int>::get (function_basicblock_collect, &D.193195);

  <bb 64> :
  _79 = D.248148;
  _80 = *_79;
  retval.405 = _80 == 0;
  D.193195 = {CLOBBER};
  if (retval.405 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 65> :
  D.193197 = 1;
  _81 = (long unsigned int) k;
  _82 = std::vector<free_type>::operator[] (&callerRetTypearray, _81);
  _83 = _82->stmt;
  D.248150 = gimple_block (_83);

  <bb 66> :
  _84 = D.248150;
  D.193196 = _84;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193196, &D.193197);

  <bb 67> :
  D.193196 = {CLOBBER};
  D.193197 = {CLOBBER};
  stderr.406_85 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.406_85);
  goto <bb 69>; [INV]

  <bb 68> :
  stderr.407_86 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.407_86);

  <bb 69> :
  now_fucntion.408_87 = now_fucntion;
  stderr.409_88 = stderr;
  fprintf (stderr.409_88, "ID : %lu\n", now_fucntion.408_87);

  <bb 70> :
  _89 = (long unsigned int) k;
  _90 = std::vector<free_type>::operator[] (&callerRetTypearray, _89);
  _91 = _90->stmt;
  _92 = gimple_bb (_91);
  _93 = _92->index;
  function_tree.410_94 = function_tree;
  D.248153 = get_name (function_tree.410_94);

  <bb 71> :
  _95 = D.248153;
  stderr.411_96 = stderr;
  fprintf (stderr.411_96, "from %s basic block %d", _95, _93);

  <bb 72> :
  stderr.412_97 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.412_97);

  <bb 73> :
  _98 = (long unsigned int) k;
  _99 = std::vector<free_type>::operator[] (&callerRetTypearray, _98);
  _100 = _99->stmt;
  now_laststmt = _100;
  _101 = rand ();
  x = (long unsigned int) _101;
  now_laststmtid = x;
  stderr.413_102 = stderr;
  fprintf (stderr.413_102, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 74> :
  _103 = (long unsigned int) k;
  _104 = std::vector<free_type>::operator[] (&callerRetTypearray, _103);
  _105 = _104->stmt;
  debug (_105);

  <bb 75> :
  _106 = (long unsigned int) k;
  _107 = std::vector<free_type>::operator[] (&callerRetTypearray, _106);
  _108 = _107->stmt;
  _109 = gimple_location_safe (_108);
  warning_at (_109, 0, "use location");

  <bb 76> :
  stderr.414_110 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.414_110);

  <bb 77> :
  stderr.415_111 = stderr;
  __builtin_fwrite ("dot graph target color desc", 1, 27, stderr.415_111);

  <bb 78> :
  stderr.416_112 = stderr;
  __builtin_fwrite ("green", 1, 5, stderr.416_112);

  <bb 79> :
  stderr.417_113 = stderr;
  __builtin_fwrite ("dot graph target color desend\n\n", 1, 31, stderr.417_113);

  <bb 80> :
  stderr.418_114 = stderr;
  fprintf (stderr.418_114, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 81> :
  _115 = (long unsigned int) k;
  _116 = std::vector<free_type>::operator[] (&callerRetTypearray, _115);
  _117 = _116->stmt;
  debug (_117);

  <bb 82> :
  _118 = (long unsigned int) k;
  _119 = std::vector<free_type>::operator[] (&callerRetTypearray, _118);
  _120 = _119->stmt;
  _121 = gimple_location_safe (_120);
  warning_at (_121, 0, "use location");

  <bb 83> :
  stderr.419_122 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.419_122);

  <bb 84> :
  k = k + 1;

  <bb 85> :
  _123 = (long unsigned int) k;
  _124 = std::vector<free_type>::size (&callerRetTypearray);
  retval.420 = _123 < _124;
  if (retval.420 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  function_basicblock_collect.421 = function_basicblock_collect;
  if (function_basicblock_collect.421 != 0B)
    goto <bb 87>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 87> :
  hash_map<tree_node*, int>::~hash_map (function_basicblock_collect.421);
  operator delete (function_basicblock_collect.421, 48);

  <bb 88> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 89> :
  function_pthread_detched_collect.424_125 = function_pthread_detched_collect;
  D.248157 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.424_125, &function_tree);

  <bb 90> :
  _126 = D.248157;
  if (_126 != 0B)
    goto <bb 91>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 91> :
  if (fucntion_level == -1)
    goto <bb 92>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 92> :
  fucntion_level.425_127 = (unsigned int) fucntion_level;
  DISABLE_TREACE.426_128 = DISABLE_TREACE;
  if (fucntion_level.425_127 != DISABLE_TREACE.426_128)
    goto <bb 93>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 93> :
  iftmp.423 = 1;
  goto <bb 95>; [INV]

  <bb 94> :
  iftmp.423 = 0;

  <bb 95> :
  retval.422 = iftmp.423;
  if (retval.422 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 96> :
  function_pthread_detched_collect.427_129 = function_pthread_detched_collect;
  D.248158 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.427_129, &function_tree);

  <bb 97> :
  _130 = D.248158;
  function_pthread_detched_array::function_pthread_detched_array (&callerFunArray, _130);

  <bb 98> :
  std::vector<pthread_detched_type>::vector (&callerRetTypearray, &callerFunArray.pthread_detched_array);

  <bb 99> :
  k = 0;
  goto <bb 114>; [INV]

  <bb 100> :
  stderr.428_131 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find pthread_detched stmt  \x1b[0m\n", 1, 42, stderr.428_131);

  <bb 101> :
  _132 = (long unsigned int) k;
  _133 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _132);
  _134 = _133->stmt;
  debug_gimple_stmt (_134);

  <bb 102> :
  _135 = (long unsigned int) k;
  _136 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _135);
  _137 = _136->stmt;
  _138 = gimple_location_safe (_137);
  warning_at (_138, 0, "use location");

  <bb 103> :
  _139 = *freecount;
  _140 = _139 + 1;
  *freecount = _140;
  pthread_detachedmod.429_141 = pthread_detachedmod;
  if (pthread_detachedmod.429_141 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 104> :
  stderr.430_142 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.430_142);

  <bb 105> :
  now_fucntion.431_143 = now_fucntion;
  stderr.432_144 = stderr;
  fprintf (stderr.432_144, "ID : %lu\n", now_fucntion.431_143);

  <bb 106> :
  _145 = (long unsigned int) k;
  _146 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _145);
  _147 = _146->stmt;
  _148 = gimple_bb (_147);
  _149 = _148->index;
  function_tree.433_150 = function_tree;
  D.248159 = get_name (function_tree.433_150);

  <bb 107> :
  _151 = D.248159;
  stderr.434_152 = stderr;
  fprintf (stderr.434_152, "from %s basic block %d", _151, _149);

  <bb 108> :
  stderr.435_153 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.435_153);

  <bb 109> :
  _154 = (long unsigned int) k;
  _155 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _154);
  _156 = _155->stmt;
  now_laststmt = _156;
  _157 = rand ();
  x = (long unsigned int) _157;
  now_laststmtid = x;
  stderr.436_158 = stderr;
  fprintf (stderr.436_158, "dot graph relate stmt start ID : %lu stmt(pthread_detched)) :", x);

  <bb 110> :
  _159 = (long unsigned int) k;
  _160 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _159);
  _161 = _160->stmt;
  debug (_161);

  <bb 111> :
  _162 = (long unsigned int) k;
  _163 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _162);
  _164 = _163->stmt;
  _165 = gimple_location_safe (_164);
  warning_at (_165, 0, "use location");

  <bb 112> :
  stderr.437_166 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.437_166);

  <bb 113> :
  k = k + 1;

  <bb 114> :
  _167 = (long unsigned int) k;
  _168 = std::vector<pthread_detched_type>::size (&callerRetTypearray);
  retval.438 = _167 < _168;
  if (retval.438 != 0)
    goto <bb 100>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 115> :
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 116> :
  function_pthread_exit_collect.441_169 = function_pthread_exit_collect;
  D.248163 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.441_169, &function_tree);

  <bb 117> :
  _170 = D.248163;
  if (_170 != 0B)
    goto <bb 118>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 118> :
  if (fucntion_level == -1)
    goto <bb 119>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 119> :
  fucntion_level.442_171 = (unsigned int) fucntion_level;
  DISABLE_TREACE.443_172 = DISABLE_TREACE;
  if (fucntion_level.442_171 != DISABLE_TREACE.443_172)
    goto <bb 120>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 120> :
  iftmp.440 = 1;
  goto <bb 122>; [INV]

  <bb 121> :
  iftmp.440 = 0;

  <bb 122> :
  retval.439 = iftmp.440;
  if (retval.439 != 0)
    goto <bb 123>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 123> :
  function_pthread_exit_collect.444_173 = function_pthread_exit_collect;
  D.248164 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.444_173, &function_tree);

  <bb 124> :
  _174 = D.248164;
  function_pthread_exit_array::function_pthread_exit_array (&callerFunArray, _174);

  <bb 125> :
  std::vector<pthread_exit_type>::vector (&callerRetTypearray, &callerFunArray.pthread_exit_array);

  <bb 126> :
  k = 0;
  goto <bb 141>; [INV]

  <bb 127> :
  stderr.445_175 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find pthread_exit stmt  \x1b[0m\n", 1, 39, stderr.445_175);

  <bb 128> :
  _176 = (long unsigned int) k;
  _177 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _176);
  _178 = _177->stmt;
  debug_gimple_stmt (_178);

  <bb 129> :
  _179 = (long unsigned int) k;
  _180 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _179);
  _181 = _180->stmt;
  _182 = gimple_location_safe (_181);
  warning_at (_182, 0, "use location");

  <bb 130> :
  pthread_exitmod.446_183 = pthread_exitmod;
  if (pthread_exitmod.446_183 != 0)
    goto <bb 131>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 131> :
  stderr.447_184 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.447_184);

  <bb 132> :
  now_fucntion.448_185 = now_fucntion;
  stderr.449_186 = stderr;
  fprintf (stderr.449_186, "ID : %lu\n", now_fucntion.448_185);

  <bb 133> :
  _187 = (long unsigned int) k;
  _188 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _187);
  _189 = _188->stmt;
  _190 = gimple_bb (_189);
  _191 = _190->index;
  function_tree.450_192 = function_tree;
  D.248165 = get_name (function_tree.450_192);

  <bb 134> :
  _193 = D.248165;
  stderr.451_194 = stderr;
  fprintf (stderr.451_194, "from %s basic block %d", _193, _191);

  <bb 135> :
  stderr.452_195 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.452_195);

  <bb 136> :
  _196 = (long unsigned int) k;
  _197 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _196);
  _198 = _197->stmt;
  now_laststmt = _198;
  _199 = rand ();
  x = (long unsigned int) _199;
  now_laststmtid = x;
  stderr.453_200 = stderr;
  fprintf (stderr.453_200, "dot graph relate stmt start ID : %lu stmt(pthread_exit) :", x);

  <bb 137> :
  _201 = (long unsigned int) k;
  _202 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _201);
  _203 = _202->stmt;
  debug (_203);

  <bb 138> :
  _204 = (long unsigned int) k;
  _205 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _204);
  _206 = _205->stmt;
  _207 = gimple_location_safe (_206);
  warning_at (_207, 0, "use location");

  <bb 139> :
  stderr.454_208 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.454_208);

  <bb 140> :
  k = k + 1;

  <bb 141> :
  _209 = (long unsigned int) k;
  _210 = std::vector<pthread_exit_type>::size (&callerRetTypearray);
  retval.455 = _209 < _210;
  if (retval.455 != 0)
    goto <bb 127>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 142> :
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 143> :
  tracerelatestmt.456_211 = tracerelatestmt;
  _212 = (int) tracerelatestmt.456_211;
  if (_212 == 1)
    goto <bb 144>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 144> :
  if (fucntion_level != -1)
    goto <bb 145>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 145> :
  fucntion_level.457_213 = (unsigned int) fucntion_level;
  DISABLE_TREACE.458_214 = DISABLE_TREACE;
  if (fucntion_level.457_213 != DISABLE_TREACE.458_214)
    goto <bb 146>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 146> :
  if (mallocStmt_tree != 0B)
    goto <bb 147>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 147> :
  pi1 = mallocStmt_tree->ssa_name.info.ptr_info;
  debug_tree (mallocStmt_tree);

  <bb 148> :
  function_tree.459_215 = function_tree;
  trace_fucntion_relate_stmt (node, function_tree.459_215, mallocStmt_tree);

  <bb 149> :
  if (fucntion_level != -1)
    goto <bb 150>; [INV]
  else
    goto <bb 152>; [INV]

  <bb 150> :
  fucntion_level.460_216 = (unsigned int) fucntion_level;
  DISABLE_TREACE.461_217 = DISABLE_TREACE;
  if (fucntion_level.460_216 != DISABLE_TREACE.461_217)
    goto <bb 151>; [INV]
  else
    goto <bb 152>; [INV]

  <bb 151> :
  fucntion_level = fucntion_level + 1;

  <bb 152> :
  _218 = std::vector<function_path>::size (&function_path_array);
  retval.462 = _218 == 0;
  if (retval.462 != 0)
    goto <bb 153>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 153> :
  function_return_collect.464_219 = function_return_collect;
  D.248169 = hash_map<tree_node*, function_return_array>::get (function_return_collect.464_219, &function_tree);

  <bb 154> :
  _220 = D.248169;
  retval.463 = _220 != 0B;
  if (retval.463 != 0)
    goto <bb 155>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 155> :
  function_return_collect.465_221 = function_return_collect;
  D.248170 = hash_map<tree_node*, function_return_array>::get (function_return_collect.465_221, &function_tree);

  <bb 156> :
  _222 = D.248170;
  function_return_array::function_return_array (&callerFunArray, _222);

  <bb 157> :
  function_return_collect.468_223 = function_return_collect;
  D.248171 = hash_map<tree_node*, function_return_array>::get (function_return_collect.468_223, &function_tree);

  <bb 158> :
  _224 = D.248171;
  if (_224 != 0B)
    goto <bb 159>; [INV]
  else
    goto <bb 161>; [INV]

  <bb 159> :
  _225 = callerFunArray.return_type_num;
  if (_225 == 2)
    goto <bb 160>; [INV]
  else
    goto <bb 161>; [INV]

  <bb 160> :
  iftmp.467 = 1;
  goto <bb 162>; [INV]

  <bb 161> :
  iftmp.467 = 0;

  <bb 162> :
  retval.466 = iftmp.467;
  if (retval.466 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 163> :
  function_tree.469_226 = function_tree;
  D.248172 = get_name (function_tree.469_226);

  <bb 164> :
  _227 = D.248172;
  stderr.470_228 = stderr;
  fprintf (stderr.470_228, "%s this fucntion return value is heap-object \n", _227);

  <bb 165> :
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};

  <bb 166> :
  function_return_collect.471_229 = function_return_collect;
  D.248175 = hash_map<tree_node*, function_return_array>::get (function_return_collect.471_229, &function_tree);

  <bb 167> :
  callerFunArray = D.248175;
  std::vector<return_type>::vector (&callerRetTypearray);
  function_return_array::function_return_array (&calleeFunArray);
  if (callerFunArray != 0B)
    goto <bb 168>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 168> :
  i = 0;
  goto <bb 209>; [INV]

  <bb 169> :
  find = 0;
  _230 = (long unsigned int) i;
  _231 = std::vector<function_path>::operator[] (&function_path_array, _230);
  _232 = _231->next;
  D.248176 = get_name (_232);

  <bb 170> :
  _233 = D.248176;
  stderr.472_234 = stderr;
  fprintf (stderr.472_234, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _233);

  <bb 171> :
  o = 0;
  goto <bb 177>; [INV]

  <bb 172> :
  _235 = (long unsigned int) o;
  _236 = std::vector<tree_node*>::operator[] (&traceStack, _235);
  _237 = *_236;
  _238 = (long unsigned int) i;
  _239 = std::vector<function_path>::operator[] (&function_path_array, _238);
  _240 = _239->next;
  retval.473 = _237 == _240;
  if (retval.473 != 0)
    goto <bb 173>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 173> :
  find = 1;
  _241 = (long unsigned int) o;
  _242 = std::vector<tree_node*>::operator[] (&traceStack, _241);
  _243 = *_242;
  D.248177 = get_name (_243);

  <bb 174> :
  _244 = D.248177;
  stderr.474_245 = stderr;
  fprintf (stderr.474_245, "\x1b[40;41m =======recursive_fun2:%s========= \x1b[0m\n", _244);

  <bb 175> :
  goto <bb 178>; [INV]

  <bb 176> :
  o = o + 1;

  <bb 177> :
  _246 = (long unsigned int) o;
  _247 = std::vector<tree_node*>::size (&traceStack);
  retval.475 = _246 < _247;
  if (retval.475 != 0)
    goto <bb 172>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 178> :
  _248 = (long unsigned int) i;
  _249 = std::vector<function_path>::operator[] (&function_path_array, _248);
  _250 = _249->next;
  retval.476 = _250 != 0B;
  if (retval.476 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 179> :
  function_return_collect.478_251 = function_return_collect;
  _252 = (long unsigned int) i;
  _253 = std::vector<function_path>::operator[] (&function_path_array, _252);
  _254 = &_253->next;
  D.248178 = hash_map<tree_node*, function_return_array>::get (function_return_collect.478_251, _254);

  <bb 180> :
  _255 = D.248178;
  retval.477 = _255 != 0B;
  if (retval.477 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 181> :
  _256 = &callerFunArray->return_type_array;
  std::vector<return_type>::operator= (&callerRetTypearray, _256);

  <bb 182> :
  function_return_collect.479_257 = function_return_collect;
  _258 = (long unsigned int) i;
  _259 = std::vector<function_path>::operator[] (&function_path_array, _258);
  _260 = &_259->next;
  D.248179 = hash_map<tree_node*, function_return_array>::get (function_return_collect.479_257, _260);

  <bb 183> :
  _261 = D.248179;
  function_return_array::operator= (&calleeFunArray, _261);

  <bb 184> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _262 = (long unsigned int) i;
  _263 = std::vector<function_path>::operator[] (&function_path_array, _262);
  _264 = _263->next;
  getFucntionDecl = _264;
  function_return_collect.481_265 = function_return_collect;
  D.248180 = hash_map<tree_node*, function_return_array>::get (function_return_collect.481_265, &getFucntionDecl);

  <bb 185> :
  _266 = D.248180;
  retval.480 = _266 == 0B;
  if (retval.480 != 0)
    goto <bb 186>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 186> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 189>; [INV]

  <bb 187> :
  function_return_collect.482_267 = function_return_collect;
  D.248181 = hash_map<tree_node*, function_return_array>::get (function_return_collect.482_267, &getFucntionDecl);

  <bb 188> :
  _268 = D.248181;
  function_return_array::operator= (&find_fun_array, _268);

  <bb 189> :
  k = 0;
  goto <bb 200>; [INV]

  <bb 190> :
  _269 = calleeFunArray.return_type_num;
  if (_269 == 2)
    goto <bb 191>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 191> :
  _270 = (long unsigned int) k;
  _271 = std::vector<return_type>::operator[] (&callerRetTypearray, _270);
  _272 = _271->return_tree;
  _273 = (long unsigned int) i;
  _274 = std::vector<function_path>::operator[] (&function_path_array, _273);
  _275 = _274->next;
  retval.483 = _272 == _275;
  if (retval.483 != 0)
    goto <bb 192>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 192> :
  _276 = (long unsigned int) i;
  _277 = std::vector<function_path>::operator[] (&function_path_array, _276);
  _278 = _277->next;
  D.248182 = get_name (_278);

  <bb 193> :
  _279 = D.248182;
  stderr.484_280 = stderr;
  fprintf (stderr.484_280, "%s this fucntion return value is heap-object \n", _279);

  <bb 194> :
  _281 = (long unsigned int) k;
  _282 = std::vector<return_type>::operator[] (&callerRetTypearray, _281);
  _283 = _282->return_tree;
  D.248183 = get_name (_283);

  <bb 195> :
  _284 = D.248183;
  function_tree.485_285 = function_tree;
  D.248184 = get_name (function_tree.485_285);

  <bb 196> :
  _286 = D.248184;
  stderr.486_287 = stderr;
  fprintf (stderr.486_287, "%s this fucntion return value is heap-object %s\n", _286, _284);

  <bb 197> :
  fucntion_level.487_288 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.488_289 = RET_HEAP_OBJECT;
  if (fucntion_level.487_288 == RET_HEAP_OBJECT.488_289)
    goto <bb 198>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 198> :
  EFFECTIVE.489_290 = EFFECTIVE;
  EFFECTIVE.490_291 = (int) EFFECTIVE.489_290;
  *freecount = EFFECTIVE.490_291;

  <bb 199> :
  k = k + 1;

  <bb 200> :
  _292 = (long unsigned int) k;
  _293 = std::vector<return_type>::size (&callerRetTypearray);
  retval.491 = _292 < _293;
  if (retval.491 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 201>; [INV]

  <bb 201> :
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};

  <bb 202> :
  if (find == 0)
    goto <bb 203>; [INV]
  else
    goto <bb 208>; [INV]

  <bb 203> :
  _294 = (long unsigned int) i;
  _295 = std::vector<function_path>::operator[] (&function_path_array, _294);
  _296 = _295->next;
  D.248188 = get_name (_296);

  <bb 204> :
  _297 = D.248188;
  stderr.492_298 = stderr;
  fprintf (stderr.492_298, "\x1b[40;46m =======add node_fun stack:%s========= \x1b[0m\n", _297);

  <bb 205> :
  _299 = (long unsigned int) i;
  _300 = std::vector<function_path>::operator[] (&function_path_array, _299);
  _301 = &_300->next;
  std::vector<tree_node*>::push_back (&traceStack, _301);

  <bb 206> :
  _302 = (long unsigned int) i;
  _303 = std::vector<function_path>::operator[] (&function_path_array, _302);
  _304 = _303->next;
  trace_function_path (_304, fucntion_level, mallocStmt_tree, freecount);

  <bb 207> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 208> :
  i = i + 1;

  <bb 209> :
  _305 = (long unsigned int) i;
  _306 = std::vector<function_path>::size (&function_path_array);
  retval.493 = _305 < _306;
  if (retval.493 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 210> :
  function_return_array::~function_return_array (&calleeFunArray);
  std::vector<return_type>::~vector (&callerRetTypearray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  return;

  <bb 211> :
<L156>:
  return D.247968;

  <bb 212> :
<L157>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 6

  <bb 213> :
<L158>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 5

  <bb 214> :
<L159>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 4

  <bb 215> :
<L160>:
  operator delete (D.193190, 48);
  resx 13

  <bb 216> :
<L161>:
  D.193192 = {CLOBBER};
  resx 16

  <bb 217> :
<L162>:
  D.193193 = {CLOBBER};
  resx 15

  <bb 218> :
<L163>:
  D.193195 = {CLOBBER};
  resx 19

  <bb 219> :
<L164>:
  D.193196 = {CLOBBER};
  resx 22

  <bb 220> :
<L165>:
  D.193197 = {CLOBBER};
  resx 21

  <bb 221> :
<L166>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 12

  <bb 222> :
<L167>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 11

  <bb 223> :
<L168>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 10

  <bb 224> :
<L169>:
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  resx 31

  <bb 225> :
<L170>:
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  resx 30

  <bb 226> :
<L171>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 29

  <bb 227> :
<L172>:
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  resx 37

  <bb 228> :
<L173>:
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  resx 36

  <bb 229> :
<L174>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 35

  <bb 230> :
<L175>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 42

  <bb 231> :
<L176>:
  callerFunArray = {CLOBBER};
  resx 41

  <bb 232> :
<L177>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 49

  <bb 233> :
<L178>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 48

  <bb 234> :
<L179>:
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  resx 47

  <bb 235> :
<L180>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 46

  <bb 236> :
<L181>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 45

  <bb 237> :
<L182>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 238> :
<L183>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 239> :
<L184>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_path_array>::get (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7652, decl_uid=191909, cgraph_uid=4284, symbol_order=5069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path_array * hash_map<tree_node*, function_path_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248204;
  struct hash_entry & D.248203;
  unsigned int D.248202;
  struct hash_entry & e;
  struct function_path_array * iftmp.494;
  struct function_path_array * D.248196;

  <bb 2> :
  _1 = &this->m_table;
  D.248202 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.248202;
  D.248203 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248203;
  D.248204 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  _3 = D.248204;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.494 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.494 = &e->m_value;

  <bb 5> :
  D.248196 = iftmp.494;

  <bb 6> :
<L3>:
  return D.248196;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE4hashERKS2_, funcdef_no=8516, decl_uid=191865, cgraph_uid=5148, symbol_order=5937)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (union tree_node * const & h)
{
  hashval_t D.248205;

  <bb 2> :
  D.248205 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248205;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8517, decl_uid=192052, cgraph_uid=5149, symbol_order=5938)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248239;
  bool D.248238;
  bool D.248237;
  bool D.248236;
  bool D.248235;
  bool D.248234;
  struct value_type * D.248233;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.498;
  bool retval.497;
  struct value_type & D.248219;
  bool iftmp.496;
  bool retval.495;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.248234 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248234;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248235 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248235;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248236 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _11 = D.248236;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.496 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.496 = 0;

  <bb 8> :
  retval.495 = iftmp.496;
  if (retval.495 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248219 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.248237 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248237;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248238 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248238;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248239 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _23 = D.248239;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.498 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.498 = 0;

  <bb 18> :
  retval.497 = iftmp.498;
  if (retval.497 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248219 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248219;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8921, decl_uid=192148, cgraph_uid=5553, symbol_order=6342)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248242;
  bool D.248240;

  <bb 2> :
  D.248242 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (v);
  D.248240 = D.248242;

  <bb 3> :
<L0>:
  return D.248240;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8790, decl_uid=191978, cgraph_uid=5422, symbol_order=6211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248245;
  bool D.248243;

  <bb 2> :
  D.248245 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.248243 = D.248245;

  <bb 3> :
<L0>:
  return D.248243;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8922, decl_uid=192146, cgraph_uid=5554, symbol_order=6343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248248;
  bool D.248246;

  <bb 2> :
  D.248248 = hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (v);
  D.248246 = D.248248;

  <bb 3> :
<L0>:
  return D.248246;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9740, decl_uid=191973, cgraph_uid=6372, symbol_order=7161)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248251;
  bool D.248249;

  <bb 2> :
  D.248251 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.248249 = D.248251;

  <bb 3> :
<L0>:
  return D.248249;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10295, decl_uid=237368, cgraph_uid=6927, symbol_order=7720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248252;

  <bb 2> :
  _1 = entry->m_key;
  D.248252 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248252;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9289, decl_uid=191966, cgraph_uid=5921, symbol_order=6710)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248256;
  bool D.248254;

  <bb 2> :
  _1 = &a->m_key;
  D.248256 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_1, b);
  D.248254 = D.248256;

  <bb 3> :
<L0>:
  return D.248254;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10equal_keysERKS2_S7_, funcdef_no=9976, decl_uid=191867, cgraph_uid=6608, symbol_order=7401)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248257;

  <bb 2> :
  D.248257 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248257;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8518, decl_uid=211244, cgraph_uid=5150, symbol_order=5939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248259;

  <bb 2> :
  _1 = entry->m_key;
  D.248259 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248259;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2ERKS_, funcdef_no=6318, decl_uid=192247, cgraph_uid=3293, symbol_order=4069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, const struct function_path_array & D.192249)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192249->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192249->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2ERKS2_, funcdef_no=7654, decl_uid=174520, cgraph_uid=4286, symbol_order=5071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<function_path>::vector (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.248265;
  struct __normal_iterator D.248262;
  struct __normal_iterator D.248261;
  struct allocator D.211355;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174557;
  _2 = &__x->D.174557;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  D.211355 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<function_path>::size (__x);
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _4, &D.211355);

  <bb 3> :
  std::allocator<function_path>::~allocator (&D.211355);
  D.211355 = {CLOBBER};
  _5 = &this->D.174557;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = this->D.174557._M_impl.D.173902._M_start;
  D.248261 = std::vector<function_path>::end (__x);
  D.248262 = std::vector<function_path>::begin (__x);
  D.248265 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (D.248262, D.248261, _7, _6);

  <bb 4> :
  _8 = D.248265;
  this->D.174557._M_impl.D.173902._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<function_path>::~allocator (&D.211355);
  resx 2

  <bb 6> :
<L1>:
  D.211355 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.174557;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8520, decl_uid=173792, cgraph_uid=5152, symbol_order=5941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248267;

  <bb 2> :
  D.248267 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248267;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E17_S_select_on_copyERKS2_, funcdef_no=8519, decl_uid=173764, cgraph_uid=5151, symbol_order=5940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI13function_pathEE37select_on_container_copy_constructionERKS1_, funcdef_no=9290, decl_uid=173729, cgraph_uid=5922, symbol_order=6711)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<function_path>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2ERKS0_, funcdef_no=9978, decl_uid=173672, cgraph_uid=6610, symbol_order=7403)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2ERKS2_, funcdef_no=10491, decl_uid=173601, cgraph_uid=7123, symbol_order=7916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.173603)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EmRKS1_, funcdef_no=8522, decl_uid=173989, cgraph_uid=5154, symbol_order=5943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9292, decl_uid=173894, cgraph_uid=5924, symbol_order=6713)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this, __a);
  _1 = &this->D.173902;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8739, decl_uid=173849, cgraph_uid=5371, symbol_order=6160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_M_create_storageEm, funcdef_no=9294, decl_uid=173913, cgraph_uid=5926, symbol_order=6715)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.248274;

  <bb 2> :
  D.248274 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (this, __n);
  _1 = D.248274;
  this->_M_impl.D.173902._M_start = _1;
  _2 = this->_M_impl.D.173902._M_start;
  this->_M_impl.D.173902._M_finish = _2;
  _3 = this->_M_impl.D.173902._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.173902._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE11_M_allocateEm, funcdef_no=9559, decl_uid=173906, cgraph_uid=6191, symbol_order=6980)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path * std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.248281;
  struct function_path * iftmp.499;
  struct function_path * D.248275;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248281 = std::allocator_traits<std::allocator<function_path> >::allocate (_1, __n);
  iftmp.499 = D.248281;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.499 = 0B;

  <bb 5> :
  D.248275 = iftmp.499;

  <bb 6> :
<L3>:
  return D.248275;

}



;; Function std::allocator_traits<std::allocator<function_path> >::allocate (_ZNSt16allocator_traitsISaI13function_pathEE8allocateERS1_m, funcdef_no=10149, decl_uid=173707, cgraph_uid=6781, symbol_order=7574)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct function_path * std::allocator_traits<std::allocator<function_path> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct function_path * D.248284;
  struct function_path * D.248282;

  <bb 2> :
  D.248284 = __gnu_cxx::new_allocator<function_path>::allocate (__a, __n, 0B);
  D.248282 = D.248284;

  <bb 3> :
<L0>:
  return D.248282;

}



;; Function __gnu_cxx::new_allocator<function_path>::allocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE8allocateEmPKv, funcdef_no=10610, decl_uid=173561, cgraph_uid=7243, symbol_order=8036)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct function_path * __gnu_cxx::new_allocator<function_path>::allocate (struct new_allocator * const this, size_type __n, const void * D.243654)
{
  struct function_path * D.248295;
  struct function_path * D.248294;
  align_val_t __al;
  struct function_path * D.248292;
  bool retval.500;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.500 = _4 != 0;
  if (retval.500 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248295 = operator new (_6);
  D.248292 = D.248295;

  <bb 7> :
<L6>:
  return D.248292;

}



;; Function __gnu_cxx::new_allocator<function_path>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE11_M_max_sizeEv, funcdef_no=10611, decl_uid=173588, cgraph_uid=7242, symbol_order=8035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248296;

  <bb 2> :
  D.248296 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248296;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implD2Ev, funcdef_no=6798, decl_uid=173949, cgraph_uid=3426, symbol_order=4203)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<function_path>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<function_path>::~allocator (_ZNSaI13function_pathED2Ev, funcdef_no=7793, decl_uid=173682, cgraph_uid=4425, symbol_order=5210)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathED2Ev, funcdef_no=8742, decl_uid=173611, cgraph_uid=5374, symbol_order=6163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8526, decl_uid=173790, cgraph_uid=5158, symbol_order=5947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248298;

  <bb 2> :
  D.248298 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248298;

}



;; Function std::vector<function_path>::end (_ZNKSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=8525, decl_uid=174172, cgraph_uid=5157, symbol_order=5946)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::end (const struct vector * const this)
{
  struct const_iterator D.222000;
  struct const_iterator D.248300;

  <bb 2> :
  _1 = &this->D.174557._M_impl.D.173902._M_finish;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.222000, _1);
  D.248300 = D.222000;
  D.222000 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248300;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9296, decl_uid=211324, cgraph_uid=5928, symbol_order=6717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, const struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<function_path>::begin (_ZNKSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=8524, decl_uid=174168, cgraph_uid=5156, symbol_order=5945)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::begin (const struct vector * const this)
{
  struct const_iterator D.221998;
  struct const_iterator D.248303;

  <bb 2> :
  _1 = &this->D.174557._M_impl.D.173902._M_start;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.221998, _1);
  D.248303 = D.221998;
  D.221998 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248303;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8527, decl_uid=211344, cgraph_uid=5159, symbol_order=5948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result, struct allocator & D.222005)
{
  struct function_path * D.248308;
  struct function_path * D.248306;

  <bb 2> :
  D.248308 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.248306 = D.248308;

  <bb 3> :
<L0>:
  return D.248306;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9298, decl_uid=222007, cgraph_uid=5931, symbol_order=6720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248311;
  const bool __assignable;
  struct function_path * D.248309;

  <bb 2> :
  __assignable = 1;
  D.248311 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.248309 = D.248311;

  <bb 3> :
<L0>:
  return D.248309;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9980, decl_uid=233178, cgraph_uid=6612, symbol_order=7405)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248314;
  struct function_path * D.248312;

  <bb 2> :
  D.248314 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.248312 = D.248314;

  <bb 3> :
<L0>:
  return D.248312;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10493, decl_uid=239733, cgraph_uid=7125, symbol_order=7918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248319;
  struct __normal_iterator D.248317;
  struct __normal_iterator D.248316;
  struct function_path * D.248315;

  <bb 2> :
  D.248316 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.248317 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.248319 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (D.248317, D.248316, __result);
  D.248315 = D.248319;

  <bb 3> :
<L0>:
  return D.248315;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9560, decl_uid=227206, cgraph_uid=6192, symbol_order=6981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.248320;

  <bb 2> :
  D.248320 = __it;

  <bb 3> :
<L0>:
  return D.248320;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10784, decl_uid=243158, cgraph_uid=7416, symbol_order=8211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248324;
  struct function_path * D.248322;

  <bb 2> :
  __result.501_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.501_1);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _4 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.248324 = std::__copy_move_a1<false, const function_path*, function_path*> (_4, _3, _2);
  _5 = D.248324;
  D.248322 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.248322;

}



;; Function std::__niter_base<function_path*> (_ZSt12__niter_baseIP13function_pathET_S2_, funcdef_no=10155, decl_uid=227474, cgraph_uid=6787, symbol_order=7580)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.248325;

  <bb 2> :
  D.248325 = __it;

  <bb 3> :
<L0>:
  return D.248325;

}



;; Function std::__niter_base<const function_path*, std::vector<function_path> > (_ZSt12__niter_baseIPK13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10150, decl_uid=235526, cgraph_uid=6782, symbol_order=7575)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * std::__niter_base<const function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  const struct function_path * D.248327;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (&__it);
  D.248327 = *_1;

  <bb 3> :
<L0>:
  return D.248327;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10612, decl_uid=211311, cgraph_uid=7244, symbol_order=8037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * const & __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  const struct function_path * const & D.248329;

  <bb 2> :
  D.248329 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248329;

}



;; Function std::__copy_move_a1<false, const function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10152, decl_uid=235680, cgraph_uid=6784, symbol_order=7577)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.248333;
  struct function_path * D.248331;

  <bb 2> :
  D.248333 = std::__copy_move_a2<false, const function_path*, function_path*> (__first, __last, __result);
  D.248331 = D.248333;

  <bb 3> :
<L0>:
  return D.248331;

}



;; Function std::__copy_move_a2<false, const function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10613, decl_uid=240450, cgraph_uid=7245, symbol_order=8038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.248334;

  <bb 2> :
  D.248334 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.248334;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI13function_pathEEPT_PKS4_S7_S5_, funcdef_no=10811, decl_uid=243677, cgraph_uid=7443, symbol_order=8238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  const ptrdiff_t _Num;
  struct function_path * D.248339;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.502_2 = (long unsigned int) _Num;
  _3 = _Num.502_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.503_4 = (long unsigned int) _Num;
  _5 = _Num.503_4 * 24;
  D.248339 = __result + _5;

  <bb 5> :
<L3>:
  return D.248339;

}



;; Function std::__niter_wrap<function_path*> (_ZSt12__niter_wrapIP13function_pathET_RKS2_S2_, funcdef_no=10157, decl_uid=235723, cgraph_uid=6789, symbol_order=7582)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_wrap<function_path*> (struct function_path * const & D.240472, struct function_path * __res)
{
  struct function_path * D.248341;

  <bb 2> :
  D.248341 = __res;

  <bb 3> :
<L0>:
  return D.248341;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EED2Ev, funcdef_no=7796, decl_uid=174012, cgraph_uid=4428, symbol_order=5213)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.173902._M_end_of_storage;
  _2 = this->_M_impl.D.173902._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.173902._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8744, decl_uid=173909, cgraph_uid=5376, symbol_order=6165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (struct _Vector_base * const this, struct function_path * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<function_path> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::deallocate (_ZNSt16allocator_traitsISaI13function_pathEE10deallocateERS1_PS0_m, funcdef_no=9557, decl_uid=173714, cgraph_uid=6189, symbol_order=6978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::deallocate (struct allocator_type & __a, struct function_path * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::deallocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE10deallocateEPS1_m, funcdef_no=10148, decl_uid=173565, cgraph_uid=6780, symbol_order=7573)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::deallocate (struct new_allocator * const this, struct function_path * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, function_free_array>::get (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7660, decl_uid=192391, cgraph_uid=4292, symbol_order=5077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_free_array * hash_map<tree_node*, function_free_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248357;
  struct hash_entry & D.248356;
  unsigned int D.248355;
  struct hash_entry & e;
  struct function_free_array * iftmp.504;
  struct function_free_array * D.248349;

  <bb 2> :
  _1 = &this->m_table;
  D.248355 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.248355;
  D.248356 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248356;
  D.248357 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  _3 = D.248357;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.504 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.504 = &e->m_value;

  <bb 5> :
  D.248349 = iftmp.504;

  <bb 6> :
<L3>:
  return D.248349;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE4hashERKS2_, funcdef_no=8529, decl_uid=192347, cgraph_uid=5161, symbol_order=5950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (union tree_node * const & h)
{
  hashval_t D.248358;

  <bb 2> :
  D.248358 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248358;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8530, decl_uid=192534, cgraph_uid=5162, symbol_order=5951)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248392;
  bool D.248391;
  bool D.248390;
  bool D.248389;
  bool D.248388;
  bool D.248387;
  struct value_type * D.248386;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.508;
  bool retval.507;
  struct value_type & D.248372;
  bool iftmp.506;
  bool retval.505;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.248387 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248387;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248388 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248388;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248389 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _11 = D.248389;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.506 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.506 = 0;

  <bb 8> :
  retval.505 = iftmp.506;
  if (retval.505 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248372 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.248390 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248390;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248391 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248391;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248392 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _23 = D.248392;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.508 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.508 = 0;

  <bb 18> :
  retval.507 = iftmp.508;
  if (retval.507 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248372 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248372;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8925, decl_uid=192630, cgraph_uid=5557, symbol_order=6346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248395;
  bool D.248393;

  <bb 2> :
  D.248395 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (v);
  D.248393 = D.248395;

  <bb 3> :
<L0>:
  return D.248393;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8644, decl_uid=192460, cgraph_uid=5276, symbol_order=6065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248398;
  bool D.248396;

  <bb 2> :
  D.248398 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.248396 = D.248398;

  <bb 3> :
<L0>:
  return D.248396;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8926, decl_uid=192628, cgraph_uid=5558, symbol_order=6347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248401;
  bool D.248399;

  <bb 2> :
  D.248401 = hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (v);
  D.248399 = D.248401;

  <bb 3> :
<L0>:
  return D.248399;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9742, decl_uid=192455, cgraph_uid=6374, symbol_order=7163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248404;
  bool D.248402;

  <bb 2> :
  D.248404 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.248402 = D.248404;

  <bb 3> :
<L0>:
  return D.248402;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10296, decl_uid=237374, cgraph_uid=6928, symbol_order=7721)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248405;

  <bb 2> :
  _1 = entry->m_key;
  D.248405 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248405;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9302, decl_uid=192448, cgraph_uid=5934, symbol_order=6723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248409;
  bool D.248407;

  <bb 2> :
  _1 = &a->m_key;
  D.248409 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_1, b);
  D.248407 = D.248409;

  <bb 3> :
<L0>:
  return D.248407;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10equal_keysERKS2_S7_, funcdef_no=9984, decl_uid=192349, cgraph_uid=6616, symbol_order=7409)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248410;

  <bb 2> :
  D.248410 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248410;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8531, decl_uid=211378, cgraph_uid=5163, symbol_order=5952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248412;

  <bb 2> :
  _1 = entry->m_key;
  D.248412 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248412;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2ERKS_, funcdef_no=6324, decl_uid=192729, cgraph_uid=3299, symbol_order=4075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, const struct function_free_array & D.192731)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192731->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2ERKS2_, funcdef_no=7662, decl_uid=176621, cgraph_uid=4294, symbol_order=5079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<free_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.248418;
  struct __normal_iterator D.248415;
  struct __normal_iterator D.248414;
  struct allocator D.211493;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176658;
  _2 = &__x->D.176658;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  D.211493 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<free_type>::size (__x);
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _4, &D.211493);

  <bb 3> :
  std::allocator<free_type>::~allocator (&D.211493);
  D.211493 = {CLOBBER};
  _5 = &this->D.176658;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.176658._M_impl.D.176003._M_start;
  D.248414 = std::vector<free_type>::end (__x);
  D.248415 = std::vector<free_type>::begin (__x);
  D.248418 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (D.248415, D.248414, _7, _6);

  <bb 4> :
  _8 = D.248418;
  this->D.176658._M_impl.D.176003._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<free_type>::~allocator (&D.211493);
  resx 2

  <bb 6> :
<L1>:
  D.211493 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.176658;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8533, decl_uid=175893, cgraph_uid=5165, symbol_order=5954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248420;

  <bb 2> :
  D.248420 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248420;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8532, decl_uid=175865, cgraph_uid=5164, symbol_order=5953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI9free_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9303, decl_uid=175830, cgraph_uid=5935, symbol_order=6724)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<free_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2ERKS0_, funcdef_no=9986, decl_uid=175773, cgraph_uid=6618, symbol_order=7411)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2ERKS2_, funcdef_no=10500, decl_uid=175702, cgraph_uid=7132, symbol_order=7925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.175704)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EmRKS1_, funcdef_no=8535, decl_uid=176090, cgraph_uid=5167, symbol_order=5956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9305, decl_uid=175995, cgraph_uid=5937, symbol_order=6726)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this, __a);
  _1 = &this->D.176003;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8621, decl_uid=175950, cgraph_uid=5253, symbol_order=6042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9307, decl_uid=176014, cgraph_uid=5939, symbol_order=6728)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.248427;

  <bb 2> :
  D.248427 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (this, __n);
  _1 = D.248427;
  this->_M_impl.D.176003._M_start = _1;
  _2 = this->_M_impl.D.176003._M_start;
  this->_M_impl.D.176003._M_finish = _2;
  _3 = this->_M_impl.D.176003._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.176003._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE11_M_allocateEm, funcdef_no=9409, decl_uid=176007, cgraph_uid=6041, symbol_order=6830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.248434;
  struct free_type * iftmp.509;
  struct free_type * D.248428;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248434 = std::allocator_traits<std::allocator<free_type> >::allocate (_1, __n);
  iftmp.509 = D.248434;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.509 = 0B;

  <bb 5> :
  D.248428 = iftmp.509;

  <bb 6> :
<L3>:
  return D.248428;

}



;; Function std::allocator_traits<std::allocator<free_type> >::allocate (_ZNSt16allocator_traitsISaI9free_typeEE8allocateERS1_m, funcdef_no=10059, decl_uid=175808, cgraph_uid=6691, symbol_order=7484)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type * std::allocator_traits<std::allocator<free_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct free_type * D.248437;
  struct free_type * D.248435;

  <bb 2> :
  D.248437 = __gnu_cxx::new_allocator<free_type>::allocate (__a, __n, 0B);
  D.248435 = D.248437;

  <bb 3> :
<L0>:
  return D.248435;

}



;; Function __gnu_cxx::new_allocator<free_type>::allocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE8allocateEmPKv, funcdef_no=10554, decl_uid=175662, cgraph_uid=7187, symbol_order=7980)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct free_type * __gnu_cxx::new_allocator<free_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243402)
{
  struct free_type * D.248448;
  struct free_type * D.248447;
  align_val_t __al;
  struct free_type * D.248445;
  bool retval.510;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.510 = _4 != 0;
  if (retval.510 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248448 = operator new (_6);
  D.248445 = D.248448;

  <bb 7> :
<L6>:
  return D.248445;

}



;; Function __gnu_cxx::new_allocator<free_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE11_M_max_sizeEv, funcdef_no=10555, decl_uid=175689, cgraph_uid=7186, symbol_order=7979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248449;

  <bb 2> :
  D.248449 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248449;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6363, decl_uid=176050, cgraph_uid=3336, symbol_order=4112)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<free_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<free_type>::~allocator (_ZNSaI9free_typeED2Ev, funcdef_no=7719, decl_uid=175783, cgraph_uid=4351, symbol_order=5136)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeED2Ev, funcdef_no=8624, decl_uid=175712, cgraph_uid=5256, symbol_order=6045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8539, decl_uid=175891, cgraph_uid=5171, symbol_order=5960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248451;

  <bb 2> :
  D.248451 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248451;

}



;; Function std::vector<free_type>::end (_ZNKSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8538, decl_uid=176273, cgraph_uid=5170, symbol_order=5959)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::end (const struct vector * const this)
{
  struct const_iterator D.222075;
  struct const_iterator D.248453;

  <bb 2> :
  _1 = &this->D.176658._M_impl.D.176003._M_finish;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.222075, _1);
  D.248453 = D.222075;
  D.222075 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248453;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9309, decl_uid=211462, cgraph_uid=5941, symbol_order=6730)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, const struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNKSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8537, decl_uid=176269, cgraph_uid=5169, symbol_order=5958)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222073;
  struct const_iterator D.248456;

  <bb 2> :
  _1 = &this->D.176658._M_impl.D.176003._M_start;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.222073, _1);
  D.248456 = D.222073;
  D.222073 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248456;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8540, decl_uid=211482, cgraph_uid=5172, symbol_order=5961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result, struct allocator & D.222080)
{
  struct free_type * D.248461;
  struct free_type * D.248459;

  <bb 2> :
  D.248461 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.248459 = D.248461;

  <bb 3> :
<L0>:
  return D.248459;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9311, decl_uid=222082, cgraph_uid=5944, symbol_order=6733)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * D.248464;
  const bool __assignable;
  struct free_type * D.248462;

  <bb 2> :
  __assignable = 1;
  D.248464 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.248462 = D.248464;

  <bb 3> :
<L0>:
  return D.248462;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9988, decl_uid=233347, cgraph_uid=6620, symbol_order=7413)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.248466;
  bool retval.511;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (&__first);
  _2 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, const free_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.511 = __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (&__first, &__last);
  if (retval.511 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248466 = __cur;

  <bb 6> :
<L3>:
  return D.248466;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10505, decl_uid=211420, cgraph_uid=7137, symbol_order=7930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct free_type & D.248468;

  <bb 2> :
  D.248468 = this->_M_current;

  <bb 3> :
<L0>:
  return D.248468;

}



;; Function std::__addressof<free_type> (_ZSt11__addressofI9free_typeEPT_RS1_, funcdef_no=10504, decl_uid=224551, cgraph_uid=7136, symbol_order=7929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__addressof<free_type> (struct free_type & __r)
{
  struct free_type * D.248470;

  <bb 2> :
  D.248470 = __r;

  <bb 3> :
<L0>:
  return D.248470;

}



;; Function std::_Construct<free_type, const free_type&> (_ZSt10_ConstructI9free_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10506, decl_uid=239787, cgraph_uid=7138, symbol_order=7931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, const free_type&> (struct free_type * __p, const struct free_type & __args#0)
{
  void * D.243198;
  void * D.243197;
  const struct free_type * D.243199;

  <bb 2> :
  D.243199 = std::forward<const free_type&> (__args#0);
  D.243197 = __p;
  D.243198 = operator new (24, D.243197);
  MEM[(struct free_type *)D.243198] = *D.243199;
  return;

}



;; Function std::forward<const free_type&> (_ZSt7forwardIRK9free_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9420, decl_uid=224165, cgraph_uid=6052, symbol_order=6841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct free_type & std::forward<const free_type&> (const struct type & __t)
{
  const struct free_type & D.248472;

  <bb 2> :
  D.248472 = __t;

  <bb 3> :
<L0>:
  return D.248472;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10503, decl_uid=211424, cgraph_uid=7135, symbol_order=7928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.248474;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.248474 = this;

  <bb 3> :
<L0>:
  return D.248474;

}



;; Function __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (_ZN9__gnu_cxxneIPK9free_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10502, decl_uid=239780, cgraph_uid=7134, symbol_order=7927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.248476;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  D.248476 = _2 != _4;

  <bb 3> :
<L0>:
  return D.248476;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10556, decl_uid=211449, cgraph_uid=7188, symbol_order=7981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * const & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  const struct free_type * const & D.248478;

  <bb 2> :
  D.248478 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248478;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EED2Ev, funcdef_no=7722, decl_uid=176113, cgraph_uid=4354, symbol_order=5139)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.176003._M_end_of_storage;
  _2 = this->_M_impl.D.176003._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.176003._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8626, decl_uid=176010, cgraph_uid=5258, symbol_order=6047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (struct _Vector_base * const this, struct free_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<free_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::deallocate (_ZNSt16allocator_traitsISaI9free_typeEE10deallocateERS1_PS0_m, funcdef_no=9407, decl_uid=175815, cgraph_uid=6039, symbol_order=6828)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::deallocate (struct allocator_type & __a, struct free_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE10deallocateEPS1_m, funcdef_no=10058, decl_uid=175666, cgraph_uid=6690, symbol_order=7483)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::deallocate (struct new_allocator * const this, struct free_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, int>::hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEEC2Embbb, funcdef_no=7668, decl_uid=193182, cgraph_uid=4300, symbol_order=5085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8543, decl_uid=193141, cgraph_uid=5175, symbol_order=5964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.248487;
  unsigned int D.248486;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.248486 = hash_table_higher_prime_index (size);
  size_prime_index = D.248486;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.248487 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.248487;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9314, decl_uid=193087, cgraph_uid=5946, symbol_order=6735)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.248503;
  struct value_type * D.248502;
  struct mem_alloc_description & D.248501;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.248499;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248502 = xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (n);
  nentries = D.248502;
  goto <bb 6>; [INV]

  <bb 5> :
  D.248503 = ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (n);
  nentries = D.248503;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.248499 = nentries;

  <bb 9> :
<L14>:
  return D.248499;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE10data_allocEm, funcdef_no=9990, decl_uid=211539, cgraph_uid=6622, symbol_order=7415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.248506;
  struct hash_entry * D.248504;

  <bb 2> :
  D.248506 = xcalloc (count, 16);
  D.248504 = D.248506;

  <bb 3> :
<L0>:
  return D.248504;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEPT_m, funcdef_no=9991, decl_uid=233385, cgraph_uid=6623, symbol_order=7416)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (size_t c)
{
  struct hash_entry * D.248513;
  struct hash_entry * D.248512;
  struct hash_entry * D.248510;
  bool retval.512;

  <bb 2> :
  retval.512 = need_finalization_p<hash_map<tree_node*, int>::hash_entry> ();
  if (retval.512 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.248512 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.248510 = D.248512;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.248513 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.248510 = D.248513;

  <bb 5> :
<L2>:
  return D.248510;

}



;; Function finalize<hash_map<tree_node*, int>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEvPv, funcdef_no=10508, decl_uid=239802, cgraph_uid=7140, symbol_order=7933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, int>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, int>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEbv, funcdef_no=10507, decl_uid=239801, cgraph_uid=7139, symbol_order=7932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, int>::hash_entry> ()
{
  bool D.248514;

  <bb 2> :
  D.248514 = 0;

  <bb 3> :
<L0>:
  return D.248514;

}



;; Function hash_map<tree_node*, int>::get (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3getERKS1_, funcdef_no=7673, decl_uid=192868, cgraph_uid=4305, symbol_order=5090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * hash_map<tree_node*, int>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248524;
  struct hash_entry & D.248523;
  unsigned int D.248522;
  struct hash_entry & e;
  int * iftmp.513;
  int * D.248516;

  <bb 2> :
  _1 = &this->m_table;
  D.248522 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.248522;
  D.248523 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248523;
  D.248524 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  _3 = D.248524;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.513 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.513 = &e->m_value;

  <bb 5> :
  D.248516 = iftmp.513;

  <bb 6> :
<L3>:
  return D.248516;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE4hashERKS2_, funcdef_no=8545, decl_uid=192824, cgraph_uid=5177, symbol_order=5966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (union tree_node * const & h)
{
  hashval_t D.248525;

  <bb 2> :
  D.248525 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248525;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8548, decl_uid=193008, cgraph_uid=5180, symbol_order=5969)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248559;
  bool D.248558;
  bool D.248557;
  bool D.248556;
  bool D.248555;
  bool D.248554;
  struct value_type * D.248553;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.517;
  bool retval.516;
  struct value_type & D.248539;
  bool iftmp.515;
  bool retval.514;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 16;
  entry = _5 + _7;
  D.248554 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248554;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248555 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248555;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248556 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _11 = D.248556;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.515 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.515 = 0;

  <bb 8> :
  retval.514 = iftmp.515;
  if (retval.514 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248539 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  entry = _17 + _19;
  D.248557 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248557;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248558 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248558;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248559 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _23 = D.248559;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.517 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.517 = 0;

  <bb 18> :
  retval.516 = iftmp.517;
  if (retval.516 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248539 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248539;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8is_emptyERS8_, funcdef_no=8550, decl_uid=193104, cgraph_uid=5182, symbol_order=5971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248562;
  bool D.248560;

  <bb 2> :
  D.248562 = hash_map<tree_node*, int>::hash_entry::is_empty (v);
  D.248560 = D.248562;

  <bb 3> :
<L0>:
  return D.248560;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry8is_emptyERKS7_, funcdef_no=8547, decl_uid=192937, cgraph_uid=5179, symbol_order=5968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248565;
  bool D.248563;

  <bb 2> :
  D.248565 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  D.248563 = D.248565;

  <bb 3> :
<L0>:
  return D.248563;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10is_deletedERS8_, funcdef_no=8551, decl_uid=193102, cgraph_uid=5183, symbol_order=5972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248568;
  bool D.248566;

  <bb 2> :
  D.248568 = hash_map<tree_node*, int>::hash_entry::is_deleted (v);
  D.248566 = D.248568;

  <bb 3> :
<L0>:
  return D.248566;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10is_deletedERKS7_, funcdef_no=9318, decl_uid=192932, cgraph_uid=5950, symbol_order=6739)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248571;
  bool D.248569;

  <bb 2> :
  D.248571 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (e);
  D.248569 = D.248571;

  <bb 3> :
<L0>:
  return D.248569;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10is_deletedIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=10000, decl_uid=233448, cgraph_uid=6632, symbol_order=7425)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248572;

  <bb 2> :
  _1 = entry->m_key;
  D.248572 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248572;

}



;; Function hash_map<tree_node*, int>::hash_entry::equal (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry5equalERKS7_RKS1_, funcdef_no=9316, decl_uid=192925, cgraph_uid=5948, symbol_order=6737)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248576;
  bool D.248574;

  <bb 2> :
  _1 = &a->m_key;
  D.248576 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_1, b);
  D.248574 = D.248576;

  <bb 3> :
<L0>:
  return D.248574;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10equal_keysERKS2_S6_, funcdef_no=9998, decl_uid=192826, cgraph_uid=6630, symbol_order=7423)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248577;

  <bb 2> :
  D.248577 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248577;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE8is_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=8549, decl_uid=211532, cgraph_uid=5181, symbol_order=5970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248579;

  <bb 2> :
  _1 = entry->m_key;
  D.248579 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248579;

}



;; Function gimple_block (_ZL12gimple_blockPK6gimple, funcdef_no=2001, decl_uid=92276, cgraph_uid=1138, symbol_order=1298)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * gimple_block (const struct gimple * g)
{
  union tree_node * D.248587;
  union tree_node * iftmp.518;
  union tree_node * D.248581;

  <bb 2> :
  _1 = g->location;
  _2 = IS_ADHOC_LOC (_1);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = g->location;
  line_table.519_4 = line_table;
  D.248587 = get_data_from_adhoc_loc (line_table.519_4, _3);
  iftmp.518 = D.248587;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.518 = 0B;

  <bb 5> :
  D.248581 = iftmp.518;

  <bb 6> :
<L3>:
  return D.248581;

}



;; Function IS_ADHOC_LOC (_Z12IS_ADHOC_LOCj, funcdef_no=1146, decl_uid=35072, cgraph_uid=320, symbol_order=337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool IS_ADHOC_LOC (location_t loc)
{
  bool D.248588;

  <bb 2> :
  loc.520_1 = (signed int) loc;
  D.248588 = loc.520_1 < 0;

  <bb 3> :
<L0>:
  return D.248588;

}



;; Function hash_map<tree_node*, int>::put (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3putERKS1_RKi, funcdef_no=7672, decl_uid=192864, cgraph_uid=4304, symbol_order=5089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, int>::put (struct hash_map * const this, union tree_node * const & k, const int & v)
{
  bool D.248597;
  struct hash_entry * D.248596;
  unsigned int D.248595;
  bool ins;
  struct hash_entry * e;
  bool D.248593;
  void * D.211528;
  void * D.211527;

  <bb 2> :
  _1 = &this->m_table;
  D.248595 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.248595;
  D.248596 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.248596;
  D.248597 = hash_map<tree_node*, int>::hash_entry::is_empty (e);
  ins = D.248597;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.211527 = &e->m_value;
  D.211528 = operator new (4, D.211527);
  _4 = *v;
  MEM[(int *)D.211528] = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = *v;
  e->m_value = _5;

  <bb 5> :
  D.248593 = ~ins;

  <bb 6> :
<L3>:
  return D.248593;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8546, decl_uid=193019, cgraph_uid=5178, symbol_order=5967)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.248647;
  bool D.248646;
  bool D.248645;
  bool D.248644;
  bool D.248643;
  bool D.248642;
  struct value_type * D.248641;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.526;
  bool retval.525;
  bool retval.524;
  bool retval.523;
  bool retval.522;
  bool retval.521;
  struct value_type * D.248603;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 16;
  entry = _11 + _13;
  size = this->m_size;
  D.248642 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.521 = D.248642;
  if (retval.521 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.248643 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.522 = D.248643;
  if (retval.522 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 16;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.248644 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.523 = D.248644;
  if (retval.523 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  D.248603 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 16;
  entry = _24 + _26;
  D.248645 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.524 = D.248645;
  if (retval.524 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.248646 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.525 = D.248646;
  if (retval.525 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 16;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.248647 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.526 = D.248647;
  if (retval.526 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 16;
  D.248603 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.248603 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.248603 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 16;
  D.248603 = _37 + _39;

  <bb 27> :
<L37>:
  return D.248603;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9315, decl_uid=193100, cgraph_uid=5947, symbol_order=6736)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.248678;
  unsigned int D.248677;
  bool D.248676;
  bool D.248675;
  struct mem_alloc_description & D.248674;
  struct value_type * D.248673;
  unsigned int D.248672;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.233436;
  void * D.233435;
  struct hash_entry * D.233437;
  bool iftmp.530;
  bool retval.529;
  bool iftmp.528;
  bool retval.527;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 16;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.528 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.528 = 0;

  <bb 6> :
  retval.527 = iftmp.528;
  if (retval.527 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.248672 = hash_table_higher_prime_index (_5);
  nindex = D.248672;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.248673 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.248673;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.248675 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.248675;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.248676 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.248676;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.530 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.530 = 0;

  <bb 15> :
  retval.529 = iftmp.530;
  if (retval.529 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.248677 = hash_map<tree_node*, int>::hash_entry::hash (x);
  _16 = D.248677;
  D.248678 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.248678;
  D.233437 = std::move<hash_map<tree_node*, int>::hash_entry&> (x);
  D.233435 = q;
  D.233436 = operator new (16, D.233435);
  MEM[(struct value_type *)D.233436] = *D.233437;

  <bb 17> :
  p = p + 16;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=9992, decl_uid=192995, cgraph_uid=6624, symbol_order=7417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.248679;

  <bb 2> :
  D.248679 = this->m_size;

  <bb 3> :
<L0>:
  return D.248679;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=9993, decl_uid=192997, cgraph_uid=6625, symbol_order=7418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.248681;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.248681 = _1 - _2;

  <bb 3> :
<L0>:
  return D.248681;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=9994, decl_uid=193097, cgraph_uid=6626, symbol_order=7419)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.531;
  bool D.248683;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.531 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.531 = 0;

  <bb 6> :
  D.248683 = iftmp.531;

  <bb 7> :
<L4>:
  return D.248683;

}



;; Function hash_map<tree_node*, int>::hash_entry::hash (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry4hashERKS7_, funcdef_no=9996, decl_uid=192923, cgraph_uid=6628, symbol_order=7421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, int>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.248692;
  hashval_t D.248690;

  <bb 2> :
  _1 = &e->m_key;
  D.248692 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_1);
  D.248690 = D.248692;

  <bb 3> :
<L0>:
  return D.248690;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=9995, decl_uid=193090, cgraph_uid=6627, symbol_order=7420)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.248705;
  bool D.248704;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.533;
  struct value_type * D.248696;
  bool retval.532;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 16;
  slot = _2 + _4;
  D.248704 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.532 = D.248704;
  if (retval.532 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248696 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 16;
  slot = _8 + _10;
  D.248705 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.533 = D.248705;
  if (retval.533 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.248696 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.248696;

}



;; Function std::move<hash_map<tree_node*, int>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEONSt16remove_referenceIT_E4typeEOSB_, funcdef_no=9997, decl_uid=233409, cgraph_uid=6629, symbol_order=7422)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, int>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.248706;

  <bb 2> :
  D.248706 = __t;

  <bb 3> :
<L0>:
  return D.248706;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE9data_freeEPS8_, funcdef_no=8553, decl_uid=211541, cgraph_uid=5185, symbol_order=5974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10mark_emptyERS8_, funcdef_no=9317, decl_uid=193108, cgraph_uid=5949, symbol_order=6738)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, int>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10mark_emptyERS7_, funcdef_no=9999, decl_uid=192935, cgraph_uid=6631, symbol_order=7424)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10mark_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=10509, decl_uid=239828, cgraph_uid=7141, symbol_order=7934)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<free_type>::operator[] (_ZNSt6vectorI9free_typeSaIS0_EEixEm, funcdef_no=7671, decl_uid=176311, cgraph_uid=4303, symbol_order=5088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.248709;

  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_start;
  _2 = __n * 24;
  D.248709 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248709;

}



;; Function std::vector<free_type>::size (_ZNKSt6vectorI9free_typeSaIS0_EE4sizeEv, funcdef_no=7670, decl_uid=176291, cgraph_uid=4302, symbol_order=5087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::size (const struct vector * const this)
{
  size_type D.248711;

  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_finish;
  _2 = this->D.176658._M_impl.D.176003._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.248711 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248711;

}



;; Function hash_map<tree_node*, int>::~hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEED2Ev, funcdef_no=6330, decl_uid=193205, cgraph_uid=3305, symbol_order=4081)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7675, decl_uid=193151, cgraph_uid=4307, symbol_order=5092)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.248726;
  bool D.248725;
  size_t i;
  bool iftmp.535;
  bool retval.534;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.248725 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.248725;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.248726 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.248726;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.535 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.535 = 0;

  <bb 7> :
  retval.534 = iftmp.535;
  if (retval.534 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, int>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::remove (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry6removeERS7_, funcdef_no=8552, decl_uid=192928, cgraph_uid=5184, symbol_order=5973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE6removeIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=9319, decl_uid=222151, cgraph_uid=5951, symbol_order=6740)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function ggc_remove<tree_node*>::remove (_ZN10ggc_removeIP9tree_nodeE6removeERS1_, funcdef_no=10001, decl_uid=85315, cgraph_uid=6633, symbol_order=7426)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<tree_node*>::remove (union tree_node * & D.239832)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::get (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7677, decl_uid=193263, cgraph_uid=4309, symbol_order=5094)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_detched_array * hash_map<tree_node*, function_pthread_detched_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248735;
  struct hash_entry & D.248734;
  unsigned int D.248733;
  struct hash_entry & e;
  struct function_pthread_detched_array * iftmp.536;
  struct function_pthread_detched_array * D.248727;

  <bb 2> :
  _1 = &this->m_table;
  D.248733 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.248733;
  D.248734 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248734;
  D.248735 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  _3 = D.248735;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.536 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.536 = &e->m_value;

  <bb 5> :
  D.248727 = iftmp.536;

  <bb 6> :
<L3>:
  return D.248727;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE4hashERKS2_, funcdef_no=8554, decl_uid=193219, cgraph_uid=5186, symbol_order=5975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (union tree_node * const & h)
{
  hashval_t D.248736;

  <bb 2> :
  D.248736 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248736;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8555, decl_uid=193406, cgraph_uid=5187, symbol_order=5976)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248770;
  bool D.248769;
  bool D.248768;
  bool D.248767;
  bool D.248766;
  bool D.248765;
  struct value_type * D.248764;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.540;
  bool retval.539;
  struct value_type & D.248750;
  bool iftmp.538;
  bool retval.537;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.248765 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248765;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248766 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248766;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248767 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _11 = D.248767;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.538 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.538 = 0;

  <bb 8> :
  retval.537 = iftmp.538;
  if (retval.537 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248750 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.248768 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248768;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248769 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248769;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248770 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _23 = D.248770;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.540 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.540 = 0;

  <bb 18> :
  retval.539 = iftmp.540;
  if (retval.539 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248750 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248750;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8913, decl_uid=193502, cgraph_uid=5545, symbol_order=6334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248773;
  bool D.248771;

  <bb 2> :
  D.248773 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (v);
  D.248771 = D.248773;

  <bb 3> :
<L0>:
  return D.248771;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8672, decl_uid=193332, cgraph_uid=5304, symbol_order=6093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248776;
  bool D.248774;

  <bb 2> :
  D.248776 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.248774 = D.248776;

  <bb 3> :
<L0>:
  return D.248774;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8914, decl_uid=193500, cgraph_uid=5546, symbol_order=6335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248779;
  bool D.248777;

  <bb 2> :
  D.248779 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (v);
  D.248777 = D.248779;

  <bb 3> :
<L0>:
  return D.248777;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9736, decl_uid=193327, cgraph_uid=6368, symbol_order=7157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248782;
  bool D.248780;

  <bb 2> :
  D.248782 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.248780 = D.248782;

  <bb 3> :
<L0>:
  return D.248780;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10293, decl_uid=237356, cgraph_uid=6925, symbol_order=7718)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248783;

  <bb 2> :
  _1 = entry->m_key;
  D.248783 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248783;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9321, decl_uid=193320, cgraph_uid=5953, symbol_order=6742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248787;
  bool D.248785;

  <bb 2> :
  _1 = &a->m_key;
  D.248787 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_1, b);
  D.248785 = D.248787;

  <bb 3> :
<L0>:
  return D.248785;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10equal_keysERKS2_S7_, funcdef_no=10004, decl_uid=193221, cgraph_uid=6636, symbol_order=7429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248788;

  <bb 2> :
  D.248788 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248788;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8556, decl_uid=211561, cgraph_uid=5188, symbol_order=5977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248790;

  <bb 2> :
  _1 = entry->m_key;
  D.248790 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248790;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2ERKS_, funcdef_no=6333, decl_uid=193601, cgraph_uid=3308, symbol_order=4084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.193603)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193603->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2ERKS2_, funcdef_no=7679, decl_uid=177666, cgraph_uid=4311, symbol_order=5096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_detched_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.248796;
  struct __normal_iterator D.248793;
  struct __normal_iterator D.248792;
  struct allocator D.211676;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177703;
  _2 = &__x->D.177703;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  D.211676 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_detched_type>::size (__x);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _4, &D.211676);

  <bb 3> :
  std::allocator<pthread_detched_type>::~allocator (&D.211676);
  D.211676 = {CLOBBER};
  _5 = &this->D.177703;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.177703._M_impl.D.177048._M_start;
  D.248792 = std::vector<pthread_detched_type>::end (__x);
  D.248793 = std::vector<pthread_detched_type>::begin (__x);
  D.248796 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (D.248793, D.248792, _7, _6);

  <bb 4> :
  _8 = D.248796;
  this->D.177703._M_impl.D.177048._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_detched_type>::~allocator (&D.211676);
  resx 2

  <bb 6> :
<L1>:
  D.211676 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.177703;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8558, decl_uid=176938, cgraph_uid=5190, symbol_order=5979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248798;

  <bb 2> :
  D.248798 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248798;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8557, decl_uid=176910, cgraph_uid=5189, symbol_order=5978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9322, decl_uid=176875, cgraph_uid=5954, symbol_order=6743)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2ERKS0_, funcdef_no=10006, decl_uid=176818, cgraph_uid=6638, symbol_order=7431)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2ERKS2_, funcdef_no=10517, decl_uid=176747, cgraph_uid=7149, symbol_order=7942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.176749)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EmRKS1_, funcdef_no=8560, decl_uid=177135, cgraph_uid=5192, symbol_order=5981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9324, decl_uid=177040, cgraph_uid=5956, symbol_order=6745)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this, __a);
  _1 = &this->D.177048;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8649, decl_uid=176995, cgraph_uid=5281, symbol_order=6070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9326, decl_uid=177059, cgraph_uid=5958, symbol_order=6747)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.248805;

  <bb 2> :
  D.248805 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (this, __n);
  _1 = D.248805;
  this->_M_impl.D.177048._M_start = _1;
  _2 = this->_M_impl.D.177048._M_start;
  this->_M_impl.D.177048._M_finish = _2;
  _3 = this->_M_impl.D.177048._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.177048._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE11_M_allocateEm, funcdef_no=9446, decl_uid=177052, cgraph_uid=6078, symbol_order=6867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_detched_type * std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.248812;
  struct pthread_detched_type * iftmp.541;
  struct pthread_detched_type * D.248806;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248812 = std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_1, __n);
  iftmp.541 = D.248812;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.541 = 0B;

  <bb 5> :
  D.248806 = iftmp.541;

  <bb 6> :
<L3>:
  return D.248806;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8allocateERS1_m, funcdef_no=10083, decl_uid=176853, cgraph_uid=6715, symbol_order=7508)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_detched_type * D.248815;
  struct pthread_detched_type * D.248813;

  <bb 2> :
  D.248815 = __gnu_cxx::new_allocator<pthread_detched_type>::allocate (__a, __n, 0B);
  D.248813 = D.248815;

  <bb 3> :
<L0>:
  return D.248813;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::allocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE8allocateEmPKv, funcdef_no=10568, decl_uid=176707, cgraph_uid=7201, symbol_order=7994)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * __gnu_cxx::new_allocator<pthread_detched_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243474)
{
  struct pthread_detched_type * D.248826;
  struct pthread_detched_type * D.248825;
  align_val_t __al;
  struct pthread_detched_type * D.248823;
  bool retval.542;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.542 = _4 != 0;
  if (retval.542 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.248826 = operator new (_6);
  D.248823 = D.248826;

  <bb 7> :
<L6>:
  return D.248823;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE11_M_max_sizeEv, funcdef_no=10569, decl_uid=176734, cgraph_uid=7200, symbol_order=7993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248827;

  <bb 2> :
  D.248827 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.248827;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6381, decl_uid=177095, cgraph_uid=3353, symbol_order=4129)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_detched_type>::~allocator (_ZNSaI20pthread_detched_typeED2Ev, funcdef_no=7734, decl_uid=176828, cgraph_uid=4366, symbol_order=5151)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeED2Ev, funcdef_no=8652, decl_uid=176757, cgraph_uid=5284, symbol_order=6073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8564, decl_uid=176936, cgraph_uid=5196, symbol_order=5985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248829;

  <bb 2> :
  D.248829 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248829;

}



;; Function std::vector<pthread_detched_type>::end (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8563, decl_uid=177318, cgraph_uid=5195, symbol_order=5984)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::end (const struct vector * const this)
{
  struct const_iterator D.222199;
  struct const_iterator D.248831;

  <bb 2> :
  _1 = &this->D.177703._M_impl.D.177048._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.222199, _1);
  D.248831 = D.222199;
  D.222199 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248831;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9328, decl_uid=211645, cgraph_uid=5960, symbol_order=6749)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8562, decl_uid=177314, cgraph_uid=5194, symbol_order=5983)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222197;
  struct const_iterator D.248834;

  <bb 2> :
  _1 = &this->D.177703._M_impl.D.177048._M_start;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.222197, _1);
  D.248834 = D.222197;
  D.222197 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248834;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8565, decl_uid=211665, cgraph_uid=5197, symbol_order=5986)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result, struct allocator & D.222204)
{
  struct pthread_detched_type * D.248839;
  struct pthread_detched_type * D.248837;

  <bb 2> :
  D.248839 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.248837 = D.248839;

  <bb 3> :
<L0>:
  return D.248837;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9330, decl_uid=222206, cgraph_uid=5963, symbol_order=6752)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248842;
  const bool __assignable;
  struct pthread_detched_type * D.248840;

  <bb 2> :
  __assignable = 1;
  D.248842 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.248840 = D.248842;

  <bb 3> :
<L0>:
  return D.248840;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10008, decl_uid=233587, cgraph_uid=6640, symbol_order=7433)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248845;
  struct pthread_detched_type * D.248843;

  <bb 2> :
  D.248845 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.248843 = D.248845;

  <bb 3> :
<L0>:
  return D.248843;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10519, decl_uid=239861, cgraph_uid=7151, symbol_order=7944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248850;
  struct __normal_iterator D.248848;
  struct __normal_iterator D.248847;
  struct pthread_detched_type * D.248846;

  <bb 2> :
  D.248847 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.248848 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.248850 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (D.248848, D.248847, __result);
  D.248846 = D.248850;

  <bb 3> :
<L0>:
  return D.248846;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9450, decl_uid=224820, cgraph_uid=6082, symbol_order=6871)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.248851;

  <bb 2> :
  D.248851 = __it;

  <bb 3> :
<L0>:
  return D.248851;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10785, decl_uid=243247, cgraph_uid=7417, symbol_order=8212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248855;
  struct pthread_detched_type * D.248853;

  <bb 2> :
  __result.543_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.543_1);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _4 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.248855 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.248855;
  D.248853 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.248853;

}



;; Function std::__niter_base<pthread_detched_type*> (_ZSt12__niter_baseIP20pthread_detched_typeET_S2_, funcdef_no=10089, decl_uid=225086, cgraph_uid=6721, symbol_order=7514)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.248856;

  <bb 2> :
  D.248856 = __it;

  <bb 3> :
<L0>:
  return D.248856;

}



;; Function std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIPK20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10084, decl_uid=234663, cgraph_uid=6716, symbol_order=7509)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  const struct pthread_detched_type * D.248858;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.248858 = *_1;

  <bb 3> :
<L0>:
  return D.248858;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10570, decl_uid=211632, cgraph_uid=7202, symbol_order=7995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_detched_type * const & D.248860;

  <bb 2> :
  D.248860 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248860;

}



;; Function std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10086, decl_uid=234817, cgraph_uid=6718, symbol_order=7511)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248864;
  struct pthread_detched_type * D.248862;

  <bb 2> :
  D.248864 = std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.248862 = D.248864;

  <bb 3> :
<L0>:
  return D.248862;

}



;; Function std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10571, decl_uid=240194, cgraph_uid=7203, symbol_order=7996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248865;

  <bb 2> :
  D.248865 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.248865;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI20pthread_detched_typeEEPT_PKS4_S7_S5_, funcdef_no=10800, decl_uid=243497, cgraph_uid=7432, symbol_order=8227)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_detched_type * D.248870;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.544_2 = (long unsigned int) _Num;
  _3 = _Num.544_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.545_4 = (long unsigned int) _Num;
  _5 = _Num.545_4 * 16;
  D.248870 = __result + _5;

  <bb 5> :
<L3>:
  return D.248870;

}



;; Function std::__niter_wrap<pthread_detched_type*> (_ZSt12__niter_wrapIP20pthread_detched_typeET_RKS2_S2_, funcdef_no=10091, decl_uid=234860, cgraph_uid=6723, symbol_order=7516)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_wrap<pthread_detched_type*> (struct pthread_detched_type * const & D.240216, struct pthread_detched_type * __res)
{
  struct pthread_detched_type * D.248872;

  <bb 2> :
  D.248872 = __res;

  <bb 3> :
<L0>:
  return D.248872;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7737, decl_uid=177158, cgraph_uid=4369, symbol_order=5154)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.177048._M_end_of_storage;
  _2 = this->_M_impl.D.177048._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.177048._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8654, decl_uid=177055, cgraph_uid=5286, symbol_order=6075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_detched_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE10deallocateERS1_PS0_m, funcdef_no=9444, decl_uid=176860, cgraph_uid=6076, symbol_order=6865)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (struct allocator_type & __a, struct pthread_detched_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE10deallocateEPS1_m, funcdef_no=10082, decl_uid=176711, cgraph_uid=6714, symbol_order=7507)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (struct new_allocator * const this, struct pthread_detched_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_detched_type>::operator[] (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEixEm, funcdef_no=7685, decl_uid=177356, cgraph_uid=4317, symbol_order=5102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_detched_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.248880;

  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_start;
  _2 = __n * 16;
  D.248880 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248880;

}



;; Function std::vector<pthread_detched_type>::size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE4sizeEv, funcdef_no=7684, decl_uid=177336, cgraph_uid=4316, symbol_order=5101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::size (const struct vector * const this)
{
  size_type D.248882;

  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_finish;
  _2 = this->D.177703._M_impl.D.177048._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.248882 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248882;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::get (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7686, decl_uid=193739, cgraph_uid=4318, symbol_order=5103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_exit_array * hash_map<tree_node*, function_pthread_exit_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248892;
  struct hash_entry & D.248891;
  unsigned int D.248890;
  struct hash_entry & e;
  struct function_pthread_exit_array * iftmp.546;
  struct function_pthread_exit_array * D.248884;

  <bb 2> :
  _1 = &this->m_table;
  D.248890 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.248890;
  D.248891 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248891;
  D.248892 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  _3 = D.248892;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.546 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.546 = &e->m_value;

  <bb 5> :
  D.248884 = iftmp.546;

  <bb 6> :
<L3>:
  return D.248884;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE4hashERKS2_, funcdef_no=8567, decl_uid=193695, cgraph_uid=5199, symbol_order=5988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (union tree_node * const & h)
{
  hashval_t D.248893;

  <bb 2> :
  D.248893 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248893;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8568, decl_uid=193882, cgraph_uid=5200, symbol_order=5989)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248927;
  bool D.248926;
  bool D.248925;
  bool D.248924;
  bool D.248923;
  bool D.248922;
  struct value_type * D.248921;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.550;
  bool retval.549;
  struct value_type & D.248907;
  bool iftmp.548;
  bool retval.547;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.248922 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248922;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248923 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248923;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248924 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _11 = D.248924;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.548 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.548 = 0;

  <bb 8> :
  retval.547 = iftmp.548;
  if (retval.547 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248907 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.248925 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248925;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248926 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248926;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248927 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _23 = D.248927;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.550 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.550 = 0;

  <bb 18> :
  retval.549 = iftmp.550;
  if (retval.549 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248907 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248907;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8917, decl_uid=193978, cgraph_uid=5549, symbol_order=6338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248930;
  bool D.248928;

  <bb 2> :
  D.248930 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (v);
  D.248928 = D.248930;

  <bb 3> :
<L0>:
  return D.248928;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8700, decl_uid=193808, cgraph_uid=5332, symbol_order=6121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248933;
  bool D.248931;

  <bb 2> :
  D.248933 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.248931 = D.248933;

  <bb 3> :
<L0>:
  return D.248931;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8918, decl_uid=193976, cgraph_uid=5550, symbol_order=6339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248936;
  bool D.248934;

  <bb 2> :
  D.248936 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (v);
  D.248934 = D.248936;

  <bb 3> :
<L0>:
  return D.248934;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9738, decl_uid=193803, cgraph_uid=6370, symbol_order=7159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248939;
  bool D.248937;

  <bb 2> :
  D.248939 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.248937 = D.248939;

  <bb 3> :
<L0>:
  return D.248937;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10294, decl_uid=237362, cgraph_uid=6926, symbol_order=7719)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248940;

  <bb 2> :
  _1 = entry->m_key;
  D.248940 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248940;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9334, decl_uid=193796, cgraph_uid=5966, symbol_order=6755)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248944;
  bool D.248942;

  <bb 2> :
  _1 = &a->m_key;
  D.248944 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_1, b);
  D.248942 = D.248944;

  <bb 3> :
<L0>:
  return D.248942;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10equal_keysERKS2_S7_, funcdef_no=10012, decl_uid=193697, cgraph_uid=6644, symbol_order=7437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248945;

  <bb 2> :
  D.248945 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248945;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8569, decl_uid=211701, cgraph_uid=5201, symbol_order=5990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248947;

  <bb 2> :
  _1 = entry->m_key;
  D.248947 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248947;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2ERKS_, funcdef_no=6339, decl_uid=194077, cgraph_uid=3314, symbol_order=4090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.194079)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194079->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2ERKS2_, funcdef_no=7688, decl_uid=178711, cgraph_uid=4320, symbol_order=5105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_exit_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.248953;
  struct __normal_iterator D.248950;
  struct __normal_iterator D.248949;
  struct allocator D.211816;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178748;
  _2 = &__x->D.178748;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  D.211816 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_exit_type>::size (__x);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _4, &D.211816);

  <bb 3> :
  std::allocator<pthread_exit_type>::~allocator (&D.211816);
  D.211816 = {CLOBBER};
  _5 = &this->D.178748;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.178748._M_impl.D.178093._M_start;
  D.248949 = std::vector<pthread_exit_type>::end (__x);
  D.248950 = std::vector<pthread_exit_type>::begin (__x);
  D.248953 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (D.248950, D.248949, _7, _6);

  <bb 4> :
  _8 = D.248953;
  this->D.178748._M_impl.D.178093._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_exit_type>::~allocator (&D.211816);
  resx 2

  <bb 6> :
<L1>:
  D.211816 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.178748;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8571, decl_uid=177983, cgraph_uid=5203, symbol_order=5992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248955;

  <bb 2> :
  D.248955 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248955;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8570, decl_uid=177955, cgraph_uid=5202, symbol_order=5991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9335, decl_uid=177920, cgraph_uid=5967, symbol_order=6756)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2ERKS0_, funcdef_no=10014, decl_uid=177863, cgraph_uid=6646, symbol_order=7439)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2ERKS2_, funcdef_no=10526, decl_uid=177792, cgraph_uid=7158, symbol_order=7951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.177794)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EmRKS1_, funcdef_no=8573, decl_uid=178180, cgraph_uid=5205, symbol_order=5994)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9337, decl_uid=178085, cgraph_uid=5969, symbol_order=6758)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this, __a);
  _1 = &this->D.178093;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8677, decl_uid=178040, cgraph_uid=5309, symbol_order=6098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9339, decl_uid=178104, cgraph_uid=5971, symbol_order=6760)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.248962;

  <bb 2> :
  D.248962 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (this, __n);
  _1 = D.248962;
  this->_M_impl.D.178093._M_start = _1;
  _2 = this->_M_impl.D.178093._M_start;
  this->_M_impl.D.178093._M_finish = _2;
  _3 = this->_M_impl.D.178093._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.178093._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE11_M_allocateEm, funcdef_no=9483, decl_uid=178097, cgraph_uid=6115, symbol_order=6904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_exit_type * std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.248969;
  struct pthread_exit_type * iftmp.551;
  struct pthread_exit_type * D.248963;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248969 = std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_1, __n);
  iftmp.551 = D.248969;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.551 = 0B;

  <bb 5> :
  D.248963 = iftmp.551;

  <bb 6> :
<L3>:
  return D.248963;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8allocateERS1_m, funcdef_no=10107, decl_uid=177898, cgraph_uid=6739, symbol_order=7532)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_exit_type * D.248972;
  struct pthread_exit_type * D.248970;

  <bb 2> :
  D.248972 = __gnu_cxx::new_allocator<pthread_exit_type>::allocate (__a, __n, 0B);
  D.248970 = D.248972;

  <bb 3> :
<L0>:
  return D.248970;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::allocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE8allocateEmPKv, funcdef_no=10581, decl_uid=177752, cgraph_uid=7214, symbol_order=8007)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * __gnu_cxx::new_allocator<pthread_exit_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243535)
{
  struct pthread_exit_type * D.248983;
  struct pthread_exit_type * D.248982;
  align_val_t __al;
  struct pthread_exit_type * D.248980;
  bool retval.552;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.552 = _4 != 0;
  if (retval.552 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.248983 = operator new (_6);
  D.248980 = D.248983;

  <bb 7> :
<L6>:
  return D.248980;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE11_M_max_sizeEv, funcdef_no=10582, decl_uid=177779, cgraph_uid=7213, symbol_order=8006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248984;

  <bb 2> :
  D.248984 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.248984;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6395, decl_uid=178140, cgraph_uid=3367, symbol_order=4143)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_exit_type>::~allocator (_ZNSaI17pthread_exit_typeED2Ev, funcdef_no=7749, decl_uid=177873, cgraph_uid=4381, symbol_order=5166)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeED2Ev, funcdef_no=8680, decl_uid=177802, cgraph_uid=5312, symbol_order=6101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8577, decl_uid=177981, cgraph_uid=5209, symbol_order=5998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248986;

  <bb 2> :
  D.248986 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248986;

}



;; Function std::vector<pthread_exit_type>::end (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8576, decl_uid=178363, cgraph_uid=5208, symbol_order=5997)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::end (const struct vector * const this)
{
  struct const_iterator D.222274;
  struct const_iterator D.248988;

  <bb 2> :
  _1 = &this->D.178748._M_impl.D.178093._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.222274, _1);
  D.248988 = D.222274;
  D.222274 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248988;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9341, decl_uid=211785, cgraph_uid=5973, symbol_order=6762)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8575, decl_uid=178359, cgraph_uid=5207, symbol_order=5996)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222272;
  struct const_iterator D.248991;

  <bb 2> :
  _1 = &this->D.178748._M_impl.D.178093._M_start;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.222272, _1);
  D.248991 = D.222272;
  D.222272 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248991;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8578, decl_uid=211805, cgraph_uid=5210, symbol_order=5999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result, struct allocator & D.222279)
{
  struct pthread_exit_type * D.248996;
  struct pthread_exit_type * D.248994;

  <bb 2> :
  D.248996 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.248994 = D.248996;

  <bb 3> :
<L0>:
  return D.248994;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9343, decl_uid=222281, cgraph_uid=5976, symbol_order=6765)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248999;
  const bool __assignable;
  struct pthread_exit_type * D.248997;

  <bb 2> :
  __assignable = 1;
  D.248999 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.248997 = D.248999;

  <bb 3> :
<L0>:
  return D.248997;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10016, decl_uid=233756, cgraph_uid=6648, symbol_order=7441)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.249002;
  struct pthread_exit_type * D.249000;

  <bb 2> :
  D.249002 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.249000 = D.249002;

  <bb 3> :
<L0>:
  return D.249000;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10528, decl_uid=239897, cgraph_uid=7160, symbol_order=7953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.249007;
  struct __normal_iterator D.249005;
  struct __normal_iterator D.249004;
  struct pthread_exit_type * D.249003;

  <bb 2> :
  D.249004 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.249005 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.249007 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (D.249005, D.249004, __result);
  D.249003 = D.249007;

  <bb 3> :
<L0>:
  return D.249003;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9487, decl_uid=225526, cgraph_uid=6119, symbol_order=6908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.249008;

  <bb 2> :
  D.249008 = __it;

  <bb 3> :
<L0>:
  return D.249008;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10786, decl_uid=243282, cgraph_uid=7418, symbol_order=8213)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.249012;
  struct pthread_exit_type * D.249010;

  <bb 2> :
  __result.553_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.553_1);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _4 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.249012 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.249012;
  D.249010 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.249010;

}



;; Function std::__niter_base<pthread_exit_type*> (_ZSt12__niter_baseIP17pthread_exit_typeET_S2_, funcdef_no=10113, decl_uid=225792, cgraph_uid=6745, symbol_order=7538)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.249013;

  <bb 2> :
  D.249013 = __it;

  <bb 3> :
<L0>:
  return D.249013;

}



;; Function std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIPK17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10108, decl_uid=235019, cgraph_uid=6740, symbol_order=7533)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  const struct pthread_exit_type * D.249015;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.249015 = *_1;

  <bb 3> :
<L0>:
  return D.249015;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10583, decl_uid=211772, cgraph_uid=7215, symbol_order=8008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_exit_type * const & D.249017;

  <bb 2> :
  D.249017 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249017;

}



;; Function std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10110, decl_uid=235173, cgraph_uid=6742, symbol_order=7535)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.249021;
  struct pthread_exit_type * D.249019;

  <bb 2> :
  D.249021 = std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.249019 = D.249021;

  <bb 3> :
<L0>:
  return D.249019;

}



;; Function std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10584, decl_uid=240289, cgraph_uid=7216, symbol_order=8009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.249022;

  <bb 2> :
  D.249022 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249022;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI17pthread_exit_typeEEPT_PKS4_S7_S5_, funcdef_no=10803, decl_uid=243558, cgraph_uid=7435, symbol_order=8230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_exit_type * D.249027;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.554_2 = (long unsigned int) _Num;
  _3 = _Num.554_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.555_4 = (long unsigned int) _Num;
  _5 = _Num.555_4 * 16;
  D.249027 = __result + _5;

  <bb 5> :
<L3>:
  return D.249027;

}



;; Function std::__niter_wrap<pthread_exit_type*> (_ZSt12__niter_wrapIP17pthread_exit_typeET_RKS2_S2_, funcdef_no=10115, decl_uid=235216, cgraph_uid=6747, symbol_order=7540)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_wrap<pthread_exit_type*> (struct pthread_exit_type * const & D.240311, struct pthread_exit_type * __res)
{
  struct pthread_exit_type * D.249029;

  <bb 2> :
  D.249029 = __res;

  <bb 3> :
<L0>:
  return D.249029;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7752, decl_uid=178203, cgraph_uid=4384, symbol_order=5169)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.178093._M_end_of_storage;
  _2 = this->_M_impl.D.178093._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.178093._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8682, decl_uid=178100, cgraph_uid=5314, symbol_order=6103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_exit_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE10deallocateERS1_PS0_m, funcdef_no=9481, decl_uid=177905, cgraph_uid=6113, symbol_order=6902)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (struct allocator_type & __a, struct pthread_exit_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE10deallocateEPS1_m, funcdef_no=10106, decl_uid=177756, cgraph_uid=6738, symbol_order=7531)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (struct new_allocator * const this, struct pthread_exit_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_exit_type>::operator[] (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEixEm, funcdef_no=7694, decl_uid=178401, cgraph_uid=4326, symbol_order=5111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_exit_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249037;

  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_start;
  _2 = __n * 16;
  D.249037 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249037;

}



;; Function std::vector<pthread_exit_type>::size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE4sizeEv, funcdef_no=7693, decl_uid=178381, cgraph_uid=4325, symbol_order=5110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::size (const struct vector * const this)
{
  size_type D.249039;

  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_finish;
  _2 = this->D.178748._M_impl.D.178093._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.249039 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249039;

}



;; Function std::vector<tree_node*>::operator[] (_ZNSt6vectorIP9tree_nodeSaIS1_EEixEm, funcdef_no=7697, decl_uid=184540, cgraph_uid=4329, symbol_order=5114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * & std::vector<tree_node*>::operator[] (struct vector * const this, size_type __n)
{
  union tree_node * & D.249041;

  <bb 2> :
  _1 = this->D.184887._M_impl.D.184243._M_start;
  _2 = __n * 8;
  D.249041 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249041;

}



;; Function std::vector<tree_node*>::size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE4sizeEv, funcdef_no=7696, decl_uid=184520, cgraph_uid=4328, symbol_order=5113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::size (const struct vector * const this)
{
  size_type D.249043;

  <bb 2> :
  _1 = this->D.184887._M_impl.D.184243._M_finish;
  _2 = this->D.184887._M_impl.D.184243._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.249043 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249043;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2Ev, funcdef_no=6345, decl_uid=189867, cgraph_uid=3320, symbol_order=4096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  this->return_type_num = 0;
  this->pthread_type_num = -1;
  _1 = &this->return_type_array;
  std::vector<return_type>::vector (_1);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2Ev, funcdef_no=6221, decl_uid=173500, cgraph_uid=3197, symbol_order=3956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173508;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2Ev, funcdef_no=6219, decl_uid=172958, cgraph_uid=3194, symbol_order=3953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7570, decl_uid=172850, cgraph_uid=4202, symbol_order=4987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this);
  _1 = &this->D.172853;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2Ev, funcdef_no=8385, decl_uid=172628, cgraph_uid=5017, symbol_order=5806)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2Ev, funcdef_no=9166, decl_uid=172557, cgraph_uid=5798, symbol_order=6587)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::operator= (_ZNSt6vectorI11return_typeSaIS0_EEaSERKS2_, funcdef_no=7698, decl_uid=173086, cgraph_uid=4332, symbol_order=5117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<return_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.249078;
  struct return_type * __tmp;
  const size_type __xlen;
  struct vector & D.249076;
  struct __normal_iterator D.249073;
  struct __normal_iterator D.249072;
  struct __normal_iterator D.249071;
  struct __normal_iterator D.249070;
  struct __normal_iterator D.249069;
  bool retval.560;
  struct __normal_iterator D.249064;
  struct __normal_iterator D.249063;
  bool retval.559;
  bool iftmp.558;
  bool retval.557;
  bool retval.556;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.556 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ();
  if (retval.556 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.173508;
  _4 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.173508;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.558 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.558 = 0;

  <bb 8> :
  retval.557 = iftmp.558;
  if (retval.557 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<return_type>::clear (this);
  _8 = &this->D.173508;
  _9 = this->D.173508._M_impl.D.172853._M_end_of_storage;
  _10 = this->D.173508._M_impl.D.172853._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.173508._M_impl.D.172853._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_8, _14, _13);
  this->D.173508._M_impl.D.172853._M_start = 0B;
  this->D.173508._M_impl.D.172853._M_finish = 0B;
  this->D.173508._M_impl.D.172853._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.173508;
  _16 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.173508;
  _18 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<return_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<return_type>::size (__x);
  _19 = std::vector<return_type>::capacity (this);
  retval.559 = __xlen > _19;
  if (retval.559 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.249063 = std::vector<return_type>::end (__x);
  D.249064 = std::vector<return_type>::begin (__x);
  D.249078 = std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (this, __xlen, D.249064, D.249063);
  __tmp = D.249078;
  _20 = &this->D.173508;
  _21 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.173508._M_impl.D.172853._M_finish;
  _23 = this->D.173508._M_impl.D.172853._M_start;
  std::_Destroy<return_type*, return_type> (_23, _22, _21);
  _24 = &this->D.173508;
  _25 = this->D.173508._M_impl.D.172853._M_end_of_storage;
  _26 = this->D.173508._M_impl.D.172853._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.173508._M_impl.D.172853._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_24, _30, _29);
  this->D.173508._M_impl.D.172853._M_start = __tmp;
  _31 = this->D.173508._M_impl.D.172853._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.173508._M_impl.D.172853._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<return_type>::size (this);
  retval.560 = __xlen <= _34;
  if (retval.560 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.173508;
  _36 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_35);
  D.249069 = std::vector<return_type>::end (this);
  D.249070 = std::vector<return_type>::begin (this);
  D.249071 = std::vector<return_type>::end (__x);
  D.249072 = std::vector<return_type>::begin (__x);
  D.249073 = std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.249072, D.249071, D.249070);
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (D.249073, D.249069, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.173508._M_impl.D.172853._M_start;
  _38 = __x->D.173508._M_impl.D.172853._M_start;
  _39 = std::vector<return_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.173508._M_impl.D.172853._M_start;
  std::copy<return_type*, return_type*> (_42, _41, _37);
  _43 = &this->D.173508;
  _44 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.173508._M_impl.D.172853._M_finish;
  _46 = __x->D.173508._M_impl.D.172853._M_finish;
  _47 = __x->D.173508._M_impl.D.172853._M_start;
  _48 = std::vector<return_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.173508._M_impl.D.172853._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.173508._M_impl.D.172853._M_finish = _53;

  <bb 17> :
  D.249076 = this;

  <bb 18> :
<L19>:
  return D.249076;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7699, decl_uid=172720, cgraph_uid=4330, symbol_order=5115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ()
{
  bool D.249079;

  <bb 2> :
  D.249079 = 0;

  <bb 3> :
<L0>:
  return D.249079;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E15_S_always_equalEv, funcdef_no=7700, decl_uid=172723, cgraph_uid=4331, symbol_order=5116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ()
{
  bool D.249081;

  <bb 2> :
  D.249081 = 1;

  <bb 3> :
<L0>:
  return D.249081;

}



;; Function std::operator!= (_ZStneRKSaI11return_typeES2_, funcdef_no=8580, decl_uid=172606, cgraph_uid=5212, symbol_order=6001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.222305, const struct allocator & D.222306)
{
  bool D.249083;

  <bb 2> :
  D.249083 = 0;

  <bb 3> :
<L0>:
  return D.249083;

}



;; Function std::vector<return_type>::clear (_ZNSt6vectorI11return_typeSaIS0_EE5clearEv, funcdef_no=8581, decl_uid=173238, cgraph_uid=5213, symbol_order=6002)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_start;
  std::vector<return_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<return_type>::_M_erase_at_end (_ZNSt6vectorI11return_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9346, decl_uid=173366, cgraph_uid=5978, symbol_order=6767)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<return_type>::_M_erase_at_end (struct vector * const this, struct return_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.173508;
  _5 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.173508._M_impl.D.172853._M_finish;
  std::_Destroy<return_type*, return_type> (__pos, _6, _5);
  this->D.173508._M_impl.D.172853._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<return_type> > (_ZSt15__alloc_on_copyISaI11return_typeEEvRT_RKS2_, funcdef_no=8582, decl_uid=211866, cgraph_uid=5214, symbol_order=6003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<return_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::capacity (_ZNKSt6vectorI11return_typeSaIS0_EE8capacityEv, funcdef_no=8583, decl_uid=173154, cgraph_uid=5215, symbol_order=6004)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::capacity (const struct vector * const this)
{
  size_type D.249088;

  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_end_of_storage;
  _2 = this->D.173508._M_impl.D.172853._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249088 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249088;

}



;; Function std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZNSt6vectorI11return_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8584, decl_uid=211873, cgraph_uid=5216, symbol_order=6005)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct return_type * std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct return_type * D.249092;
  struct return_type * __result;
  struct return_type * D.249090;

  <bb 2> :
  _1 = &this->D.173508;
  D.249092 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_1, __n);
  __result = D.249092;
  _2 = &this->D.173508;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (__first, __last, __result, _3);

  <bb 3> :
  D.249090 = __result;

  <bb 4> :
<L0>:
  return D.249090;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.173508;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<return_type>::end (_ZNSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8587, decl_uid=173121, cgraph_uid=5219, symbol_order=6008)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::end (struct vector * const this)
{
  struct iterator D.222392;
  struct iterator D.249096;

  <bb 2> :
  _1 = &this->D.173508._M_impl.D.172853._M_finish;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.222392, _1);
  D.249096 = D.222392;
  D.222392 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249096;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9349, decl_uid=211955, cgraph_uid=5981, symbol_order=6770)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8585, decl_uid=173117, cgraph_uid=5217, symbol_order=6006)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::begin (struct vector * const this)
{
  struct iterator D.222346;
  struct iterator D.249099;

  <bb 2> :
  _1 = &this->D.173508._M_impl.D.172853._M_start;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.222346, _1);
  D.249099 = D.222346;
  D.222346 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249099;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8586, decl_uid=211974, cgraph_uid=5218, symbol_order=6007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.249104;
  struct __normal_iterator D.249103;
  struct __normal_iterator D.249102;

  <bb 2> :
  D.249103 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__last);
  D.249104 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__first);
  D.249102 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.249104, D.249103, __result);

  <bb 3> :
<L0>:
  return D.249102;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9351, decl_uid=222358, cgraph_uid=5983, symbol_order=6772)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.249106;

  <bb 2> :
  D.249106 = __it;

  <bb 3> :
<L0>:
  return D.249106;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9352, decl_uid=222364, cgraph_uid=5985, symbol_order=6774)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct return_type * D.249110;
  struct __normal_iterator D.249108;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__result);
  _2 = std::__niter_base<const return_type*, std::vector<return_type> > (__last);
  _3 = std::__niter_base<const return_type*, std::vector<return_type> > (__first);
  D.249110 = std::__copy_move_a1<false, const return_type*, return_type*> (_3, _2, _1);
  _4 = D.249110;
  D.249108 = std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.249108;

}



;; Function std::__niter_base<return_type*, std::vector<return_type> > (_ZSt12__niter_baseIP11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10020, decl_uid=233960, cgraph_uid=6652, symbol_order=7445)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  struct return_type * D.249111;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__it);
  D.249111 = *_1;

  <bb 3> :
<L0>:
  return D.249111;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9377, decl_uid=211942, cgraph_uid=6009, symbol_order=6798)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * const & __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  struct return_type * const & D.249113;

  <bb 2> :
  D.249113 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249113;

}



;; Function std::__niter_base<const return_type*, std::vector<return_type> > (_ZSt12__niter_baseIPK11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10019, decl_uid=233809, cgraph_uid=6651, symbol_order=7444)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * std::__niter_base<const return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  const struct return_type * D.249115;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (&__it);
  D.249115 = *_1;

  <bb 3> :
<L0>:
  return D.249115;

}



;; Function std::__copy_move_a1<false, const return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10021, decl_uid=233963, cgraph_uid=6653, symbol_order=7446)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249119;
  struct return_type * D.249117;

  <bb 2> :
  D.249119 = std::__copy_move_a2<false, const return_type*, return_type*> (__first, __last, __result);
  D.249117 = D.249119;

  <bb 3> :
<L0>:
  return D.249117;

}



;; Function std::__copy_move_a2<false, const return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10532, decl_uid=239917, cgraph_uid=7164, symbol_order=7957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249120;

  <bb 2> :
  D.249120 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249120;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11return_typeEEPT_PKS4_S7_S5_, funcdef_no=10787, decl_uid=243310, cgraph_uid=7419, symbol_order=8214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct return_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  const ptrdiff_t _Num;
  struct return_type * D.249125;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.561_2 = (long unsigned int) _Num;
  _3 = _Num.561_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.562_4 = (long unsigned int) _Num;
  _5 = _Num.562_4 * 24;
  D.249125 = __result + _5;

  <bb 5> :
<L3>:
  return D.249125;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10022, decl_uid=233967, cgraph_uid=6654, symbol_order=7447)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __from, struct return_type * __res)
{
  struct __normal_iterator D.249127;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.249127 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.249127;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10533, decl_uid=211933, cgraph_uid=7165, symbol_order=7958)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct return_type * const D.243316;
  struct __normal_iterator D.243317;
  struct __normal_iterator D.249129;

  <bb 2> :
  _1 = this->_M_current;
  __n.563_2 = (long unsigned int) __n;
  _3 = __n.563_2 * 24;
  _4 = _1 + _3;
  D.243316 = _4;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.243317, &D.243316);
  D.249129 = D.243317;
  D.243317 = {CLOBBER};
  D.243316 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.249129;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8588, decl_uid=211980, cgraph_uid=5220, symbol_order=6009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.222395)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9354, decl_uid=222397, cgraph_uid=5986, symbol_order=6775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10023, decl_uid=233991, cgraph_uid=6655, symbol_order=7448)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator D.239926, struct __normal_iterator D.239927)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<return_type*, return_type*> (_ZSt4copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=8589, decl_uid=211988, cgraph_uid=5221, symbol_order=6010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249135;
  struct return_type * D.249133;

  <bb 2> :
  _1 = std::__miter_base<return_type*> (__last);
  _2 = std::__miter_base<return_type*> (__first);
  D.249135 = std::__copy_move_a<false, return_type*, return_type*> (_2, _1, __result);
  D.249133 = D.249135;

  <bb 3> :
<L0>:
  return D.249133;

}



;; Function std::__miter_base<return_type*> (_ZSt12__miter_baseIP11return_typeET_S2_, funcdef_no=9355, decl_uid=222413, cgraph_uid=5987, symbol_order=6776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__miter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.249136;

  <bb 2> :
  D.249136 = __it;

  <bb 3> :
<L0>:
  return D.249136;

}



;; Function std::__copy_move_a<false, return_type*, return_type*> (_ZSt13__copy_move_aILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=9356, decl_uid=222415, cgraph_uid=5988, symbol_order=6777)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249140;
  struct return_type * D.249138;

  <bb 2> :
  __result.564_1 = __result;
  _2 = std::__niter_base<return_type*> (__result.564_1);
  _3 = std::__niter_base<return_type*> (__last);
  _4 = std::__niter_base<return_type*> (__first);
  D.249140 = std::__copy_move_a1<false, return_type*, return_type*> (_4, _3, _2);
  _5 = D.249140;
  D.249138 = std::__niter_wrap<return_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.249138;

}



;; Function std::__niter_base<return_type*> (_ZSt12__niter_baseIP11return_typeET_S2_, funcdef_no=10024, decl_uid=223029, cgraph_uid=6656, symbol_order=7449)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.249141;

  <bb 2> :
  D.249141 = __it;

  <bb 3> :
<L0>:
  return D.249141;

}



;; Function std::__copy_move_a1<false, return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10025, decl_uid=234002, cgraph_uid=6657, symbol_order=7450)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249145;
  struct return_type * D.249143;

  <bb 2> :
  D.249145 = std::__copy_move_a2<false, return_type*, return_type*> (__first, __last, __result);
  D.249143 = D.249145;

  <bb 3> :
<L0>:
  return D.249143;

}



;; Function std::__copy_move_a2<false, return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10534, decl_uid=239935, cgraph_uid=7166, symbol_order=7959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249146;

  <bb 2> :
  D.249146 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249146;

}



;; Function std::__niter_wrap<return_type*> (_ZSt12__niter_wrapIP11return_typeET_RKS2_S2_, funcdef_no=10026, decl_uid=234006, cgraph_uid=6658, symbol_order=7451)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_wrap<return_type*> (struct return_type * const & D.239939, struct return_type * __res)
{
  struct return_type * D.249148;

  <bb 2> :
  D.249148 = __res;

  <bb 3> :
<L0>:
  return D.249148;

}



;; Function std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_ZSt22__uninitialized_copy_aIP11return_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8590, decl_uid=211992, cgraph_uid=5222, symbol_order=6011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<return_type*, return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & D.222422)
{
  struct return_type * D.249152;
  struct return_type * D.249150;

  <bb 2> :
  D.249152 = std::uninitialized_copy<return_type*, return_type*> (__first, __last, __result);
  D.249150 = D.249152;

  <bb 3> :
<L0>:
  return D.249150;

}



;; Function std::uninitialized_copy<return_type*, return_type*> (_ZSt18uninitialized_copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=9357, decl_uid=222424, cgraph_uid=5989, symbol_order=6778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249155;
  const bool __assignable;
  struct return_type * D.249153;

  <bb 2> :
  __assignable = 1;
  D.249155 = std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (__first, __last, __result);
  D.249153 = D.249155;

  <bb 3> :
<L0>:
  return D.249153;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11return_typeS3_EET0_T_S5_S4_, funcdef_no=10027, decl_uid=234040, cgraph_uid=6659, symbol_order=7452)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.249156;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, return_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.249156 = __cur;

  <bb 6> :
<L3>:
  return D.249156;

}



;; Function std::_Construct<return_type, return_type&> (_ZSt10_ConstructI11return_typeJRS0_EEvPT_DpOT0_, funcdef_no=10535, decl_uid=239947, cgraph_uid=7167, symbol_order=7960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, return_type&> (struct return_type * __p, struct return_type & __args#0)
{
  void * D.243336;
  void * D.243335;
  const struct return_type * D.243337;

  <bb 2> :
  D.243337 = std::forward<return_type&> (__args#0);
  D.243335 = __p;
  D.243336 = operator new (24, D.243335);
  MEM[(struct return_type *)D.243336] = *D.243337;
  return;

}



;; Function std::forward<return_type&> (_ZSt7forwardIR11return_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10788, decl_uid=243333, cgraph_uid=7420, symbol_order=8215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type&> (struct type & __t)
{
  struct return_type & D.249158;

  <bb 2> :
  D.249158 = __t;

  <bb 3> :
<L0>:
  return D.249158;

}



;; Function function_return_array::operator= (_ZN21function_return_arrayaSERKS_, funcdef_no=6347, decl_uid=194182, cgraph_uid=3322, symbol_order=4098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_return_array & function_return_array::operator= (struct function_return_array * const this, const struct function_return_array & D.194183)
{
  struct function_return_array & D.249160;

  <bb 2> :
  _1 = D.194183->return_type_num;
  this->return_type_num = _1;
  _2 = D.194183->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &D.194183->return_type_array;
  _4 = &this->return_type_array;
  std::vector<return_type>::operator= (_4, _3);
  D.249160 = this;

  <bb 3> :
<L0>:
  return D.249160;

}



;; Function std::vector<tree_node*>::push_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE9push_backERKS1_, funcdef_no=7701, decl_uid=184567, cgraph_uid=4334, symbol_order=5119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<tree_node*>::push_back (struct vector * const this, union tree_node * const & __x)
{
  struct __normal_iterator D.249165;

  <bb 2> :
  _1 = this->D.184887._M_impl.D.184243._M_finish;
  _2 = this->D.184887._M_impl.D.184243._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.184887._M_impl.D.184243._M_finish;
  _4 = &this->D.184887._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_4, _3, __x);
  _5 = this->D.184887._M_impl.D.184243._M_finish;
  _6 = _5 + 8;
  this->D.184887._M_impl.D.184243._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.249165 = std::vector<tree_node*>::end (this);
  std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (this, D.249165, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_ZNSt16allocator_traitsISaIP9tree_nodeEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8591, decl_uid=212004, cgraph_uid=5223, symbol_order=6012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (struct allocator_type & __a, union tree_node * * __p, union tree_node * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<tree_node* const&> (_ZSt7forwardIRKP9tree_nodeEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9358, decl_uid=222439, cgraph_uid=5990, symbol_order=6779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * const & std::forward<tree_node* const&> (union tree_node * const & __t)
{
  union tree_node * const & D.249166;

  <bb 2> :
  D.249166 = __t;

  <bb 3> :
<L0>:
  return D.249166;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9359, decl_uid=222441, cgraph_uid=5991, symbol_order=6780)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (struct new_allocator * const this, union tree_node * * __p, union tree_node * const & __args#0)
{
  void * D.234052;
  void * D.234051;
  union tree_node * D.234053;

  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  D.234053 = *_1;
  D.234051 = __p;
  D.234052 = operator new (8, D.234051);
  MEM[(union tree_node * *)D.234052] = D.234053;
  return;

}



;; Function std::vector<tree_node*>::end (_ZNSt6vectorIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8592, decl_uid=184500, cgraph_uid=5224, symbol_order=6013)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::end (struct vector * const this)
{
  struct iterator D.222464;
  struct iterator D.249168;

  <bb 2> :
  _1 = &this->D.184887._M_impl.D.184243._M_finish;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.222464, _1);
  D.249168 = D.222464;
  D.222464 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249168;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9361, decl_uid=212241, cgraph_uid=5993, symbol_order=6782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (struct __normal_iterator * const this, union tree_node * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (_ZNSt6vectorIP9tree_nodeSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8593, decl_uid=212260, cgraph_uid=5228, symbol_order=6017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (struct vector * const this, struct iterator __position, union tree_node * const & __args#0)
{
  union tree_node * * D.249175;
  const size_type D.249174;
  union tree_node * * __new_finish;
  union tree_node * * __new_start;
  const size_type __elems_before;
  union tree_node * * __old_finish;
  union tree_node * * __old_start;
  const size_type __len;
  struct iterator D.222472;

  <bb 2> :
  D.249174 = std::vector<tree_node*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.249174;
  __old_start = this->D.184887._M_impl.D.184243._M_start;
  __old_finish = this->D.184887._M_impl.D.184243._M_finish;
  D.222472 = std::vector<tree_node*>::begin (this);
  _1 = __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (&__position, &D.222472);
  __elems_before = (const size_type) _1;
  D.222472 = {CLOBBER};
  _2 = &this->D.184887;
  D.249175 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_2, __len);
  __new_start = D.249175;
  __new_finish = __new_start;
  _3 = std::forward<tree_node* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.184887._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.184887;
  _8 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<tree_node*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.184887;
  _12 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<tree_node*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.184887;
  _23 = this->D.184887._M_impl.D.184243._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_22, __old_start, _26);
  this->D.184887._M_impl.D.184243._M_start = __new_start;
  this->D.184887._M_impl.D.184243._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.184887._M_impl.D.184243._M_end_of_storage = _28;
  return;

}



;; Function std::vector<tree_node*>::_M_check_len (_ZNKSt6vectorIP9tree_nodeSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9363, decl_uid=184736, cgraph_uid=5995, symbol_order=6784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<tree_node*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.567;
  size_type D.249179;
  const long unsigned int D.234062;
  bool retval.565;

  <bb 2> :
  _1 = std::vector<tree_node*>::max_size (this);
  _2 = std::vector<tree_node*>::size (this);
  _3 = _1 - _2;
  __n.566_4 = __n;
  retval.565 = _3 < __n.566_4;
  if (retval.565 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<tree_node*>::size (this);
  _6 = std::vector<tree_node*>::size (this);
  D.234062 = _6;
  _7 = std::max<long unsigned int> (&D.234062, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234062 = {CLOBBER};
  _9 = std::vector<tree_node*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<tree_node*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.567 = std::vector<tree_node*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.567 = __len;

  <bb 8> :
  D.249179 = iftmp.567;

  <bb 9> :
<L6>:
  return D.249179;

}



;; Function std::vector<tree_node*>::max_size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE8max_sizeEv, funcdef_no=10028, decl_uid=184522, cgraph_uid=6660, symbol_order=7453)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::max_size (const struct vector * const this)
{
  size_type D.249186;

  <bb 2> :
  _1 = &this->D.184887;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.249186 = std::vector<tree_node*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.249186;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10537, decl_uid=184133, cgraph_uid=7169, symbol_order=7962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.249188;

  <bb 2> :
  D.249188 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249188;

}



;; Function std::vector<tree_node*>::_S_max_size (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10536, decl_uid=184743, cgraph_uid=7168, symbol_order=7961)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.249190;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<tree_node*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.249190 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249190;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::max_size (_ZNSt16allocator_traitsISaIP9tree_nodeEE8max_sizeERKS2_, funcdef_no=10789, decl_uid=180072, cgraph_uid=7421, symbol_order=8216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<tree_node*> >::max_size (const struct allocator_type & __a)
{
  size_type D.249193;

  <bb 2> :
  D.249193 = __gnu_cxx::new_allocator<tree_node*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.249193;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE8max_sizeEv, funcdef_no=10898, decl_uid=179914, cgraph_uid=7530, symbol_order=8325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::max_size (const struct new_allocator * const this)
{
  size_type D.249195;

  <bb 2> :
  D.249195 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.249195;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE11_M_max_sizeEv, funcdef_no=10539, decl_uid=179933, cgraph_uid=7170, symbol_order=7963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.249197;

  <bb 2> :
  D.249197 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.249197;

}



;; Function std::vector<tree_node*>::begin (_ZNSt6vectorIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=9364, decl_uid=184496, cgraph_uid=5996, symbol_order=6785)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::begin (struct vector * const this)
{
  struct iterator D.234064;
  struct iterator D.249199;

  <bb 2> :
  _1 = &this->D.184887._M_impl.D.184243._M_start;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.234064, _1);
  D.249199 = D.234064;
  D.234064 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249199;

}



;; Function __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (_ZN9__gnu_cxxmiIPP9tree_nodeSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9365, decl_uid=222473, cgraph_uid=5997, symbol_order=6786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.249202;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.249202 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.249202;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE11_M_allocateEm, funcdef_no=9366, decl_uid=184247, cgraph_uid=5998, symbol_order=6787)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * * std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  union tree_node * * D.249210;
  union tree_node * * iftmp.568;
  union tree_node * * D.249204;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.249210 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_1, __n);
  iftmp.568 = D.249210;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.568 = 0B;

  <bb 5> :
  D.249204 = iftmp.568;

  <bb 6> :
<L3>:
  return D.249204;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::allocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE8allocateERS2_m, funcdef_no=10029, decl_uid=180052, cgraph_uid=6661, symbol_order=7454)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * std::allocator_traits<std::allocator<tree_node*> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * D.249213;
  union tree_node * * D.249211;

  <bb 2> :
  D.249213 = __gnu_cxx::new_allocator<tree_node*>::allocate (__a, __n, 0B);
  D.249211 = D.249213;

  <bb 3> :
<L0>:
  return D.249211;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::allocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE8allocateEmPKv, funcdef_no=10538, decl_uid=179906, cgraph_uid=7171, symbol_order=7964)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * __gnu_cxx::new_allocator<tree_node*>::allocate (struct new_allocator * const this, size_type __n, const void * D.243344)
{
  union tree_node * * D.249224;
  union tree_node * * D.249223;
  align_val_t __al;
  union tree_node * * D.249221;
  bool retval.569;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.569 = _4 != 0;
  if (retval.569 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.249224 = operator new (_6);
  D.249221 = D.249224;

  <bb 7> :
<L6>:
  return D.249221;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9369, decl_uid=184131, cgraph_uid=6001, symbol_order=6790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.249225;

  <bb 2> :
  D.249225 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249225;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9368, decl_uid=212228, cgraph_uid=6000, symbol_order=6789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * const & __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (const struct __normal_iterator * const this)
{
  union tree_node * * const & D.249227;

  <bb 2> :
  D.249227 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249227;

}



;; Function std::vector<tree_node*>::_S_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9367, decl_uid=184395, cgraph_uid=5999, symbol_order=6788)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.249230;
  union tree_node * * D.249229;

  <bb 2> :
  D.249229 = std::vector<tree_node*>::_S_do_relocate (__first, __last, __result, __alloc, D.249230);

  <bb 3> :
<L0>:
  return D.249229;

}



;; Function std::vector<tree_node*>::_S_do_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10030, decl_uid=184383, cgraph_uid=6662, symbol_order=7455)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_do_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239962)
{
  union tree_node * * D.249232;

  <bb 2> :
  D.249232 = std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.249232;

}



;; Function std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (_ZSt12__relocate_aIPP9tree_nodeS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10540, decl_uid=222637, cgraph_uid=7172, symbol_order=7965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & __alloc)
{
  union tree_node * * D.249234;

  <bb 2> :
  _1 = std::__niter_base<tree_node**> (__result);
  _2 = std::__niter_base<tree_node**> (__last);
  _3 = std::__niter_base<tree_node**> (__first);
  D.249234 = std::__relocate_a_1<tree_node*, tree_node*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.249234;

}



;; Function std::__niter_base<tree_node**> (_ZSt12__niter_baseIPP9tree_nodeET_S3_, funcdef_no=10790, decl_uid=222643, cgraph_uid=7422, symbol_order=8217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__niter_base<tree_node**> (union tree_node * * __it)
{
  union tree_node * * D.249236;

  <bb 2> :
  D.249236 = __it;

  <bb 3> :
<L0>:
  return D.249236;

}



;; Function std::__relocate_a_1<tree_node*, tree_node*> (_ZSt14__relocate_a_1IP9tree_nodeS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10791, decl_uid=222811, cgraph_uid=7423, symbol_order=8218)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * * std::__relocate_a_1<tree_node*, tree_node*> (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & D.244499)
{
  ptrdiff_t __count;
  union tree_node * * D.249241;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.570_2 = (long unsigned int) __count;
  _3 = __count.570_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.571_4 = (long unsigned int) __count;
  _5 = __count.571_4 * 8;
  D.249241 = __result + _5;

  <bb 5> :
<L3>:
  return D.249241;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8363, decl_uid=184250, cgraph_uid=4995, symbol_order=5784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (struct _Vector_base * const this, union tree_node * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::deallocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE10deallocateERS2_PS1_m, funcdef_no=9156, decl_uid=180059, cgraph_uid=5788, symbol_order=6577)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::deallocate (struct allocator_type & __a, union tree_node * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE10deallocateEPS2_m, funcdef_no=9876, decl_uid=179910, cgraph_uid=6508, symbol_order=7301)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::deallocate (struct new_allocator * const this, union tree_node * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<function_path>::operator[] (_ZNSt6vectorI13function_pathSaIS0_EEixEm, funcdef_no=7695, decl_uid=174210, cgraph_uid=4327, symbol_order=5112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<function_path>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249249;

  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_start;
  _2 = __n * 24;
  D.249249 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249249;

}



;; Function std::vector<tree_node*>::pop_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE8pop_backEv, funcdef_no=7703, decl_uid=184577, cgraph_uid=4335, symbol_order=5120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.184887._M_impl.D.184243._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.184887._M_impl.D.184243._M_finish = _2;
  _3 = this->D.184887._M_impl.D.184243._M_finish;
  _4 = &this->D.184887._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_ZNSt16allocator_traitsISaIP9tree_nodeEE7destroyIS1_EEvRS2_PT_, funcdef_no=8597, decl_uid=212265, cgraph_uid=5229, symbol_order=6018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (struct allocator_type & __a, union tree_node * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE7destroyIS2_EEvPT_, funcdef_no=9371, decl_uid=222830, cgraph_uid=6003, symbol_order=6792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (struct new_allocator * const this, union tree_node * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::size (_ZNKSt6vectorI13function_pathSaIS0_EE4sizeEv, funcdef_no=7659, decl_uid=174190, cgraph_uid=4291, symbol_order=5076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::size (const struct vector * const this)
{
  size_type D.249251;

  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_finish;
  _2 = this->D.174557._M_impl.D.173902._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249251 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249251;

}



;; Function std::vector<free_type>::~vector (_ZNSt6vectorI9free_typeSaIS0_EED2Ev, funcdef_no=7665, decl_uid=176655, cgraph_uid=4297, symbol_order=5082)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176658;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.176658._M_impl.D.176003._M_finish;
  _4 = this->D.176658._M_impl.D.176003._M_start;
  std::_Destroy<free_type*, free_type> (_4, _3, _2);
  _5 = &this->D.176658;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<free_type*, free_type> (_ZSt8_DestroyIP9free_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8541, decl_uid=211499, cgraph_uid=5173, symbol_order=5962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct allocator & D.222101)
{
  <bb 2> :
  std::_Destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<free_type*> (_ZSt8_DestroyIP9free_typeEvT_S2_, funcdef_no=9313, decl_uid=222103, cgraph_uid=5945, symbol_order=6734)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*> (struct free_type * __first, struct free_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<free_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP9free_typeEEvT_S4_, funcdef_no=9989, decl_uid=233378, cgraph_uid=6621, symbol_order=7414)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<free_type*> (struct free_type * D.239794, struct free_type * D.239795)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_free_array::~function_free_array (_ZN19function_free_arrayD2Ev, funcdef_no=6327, decl_uid=192751, cgraph_uid=3302, symbol_order=4078)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::~function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_detched_type>::~vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7682, decl_uid=177700, cgraph_uid=4314, symbol_order=5099)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177703;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.177703._M_impl.D.177048._M_finish;
  _4 = this->D.177703._M_impl.D.177048._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_4, _3, _2);
  _5 = &this->D.177703;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_detched_type*, pthread_detched_type> (_ZSt8_DestroyIP20pthread_detched_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8566, decl_uid=211682, cgraph_uid=5198, symbol_order=5987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct allocator & D.222225)
{
  <bb 2> :
  std::_Destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_detched_type*> (_ZSt8_DestroyIP20pthread_detched_typeEvT_S2_, funcdef_no=9332, decl_uid=222227, cgraph_uid=5964, symbol_order=6753)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP20pthread_detched_typeEEvT_S4_, funcdef_no=10009, decl_uid=233618, cgraph_uid=6641, symbol_order=7434)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (struct pthread_detched_type * D.239867, struct pthread_detched_type * D.239868)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_detched_array::~function_pthread_detched_array (_ZN30function_pthread_detched_arrayD2Ev, funcdef_no=6336, decl_uid=193623, cgraph_uid=3311, symbol_order=4087)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::~function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_exit_type>::~vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7691, decl_uid=178745, cgraph_uid=4323, symbol_order=5108)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178748;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.178748._M_impl.D.178093._M_finish;
  _4 = this->D.178748._M_impl.D.178093._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_4, _3, _2);
  _5 = &this->D.178748;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_exit_type*, pthread_exit_type> (_ZSt8_DestroyIP17pthread_exit_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8579, decl_uid=211822, cgraph_uid=5211, symbol_order=6000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct allocator & D.222300)
{
  <bb 2> :
  std::_Destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_exit_type*> (_ZSt8_DestroyIP17pthread_exit_typeEvT_S2_, funcdef_no=9345, decl_uid=222302, cgraph_uid=5977, symbol_order=6766)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP17pthread_exit_typeEEvT_S4_, funcdef_no=10017, decl_uid=233787, cgraph_uid=6649, symbol_order=7442)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (struct pthread_exit_type * D.239903, struct pthread_exit_type * D.239904)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_exit_array::~function_pthread_exit_array (_ZN27function_pthread_exit_arrayD2Ev, funcdef_no=6342, decl_uid=194099, cgraph_uid=3317, symbol_order=4093)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::~function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::~vector (_ZNSt6vectorI13function_pathSaIS0_EED2Ev, funcdef_no=7657, decl_uid=174554, cgraph_uid=4289, symbol_order=5074)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174557;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  _3 = this->D.174557._M_impl.D.173902._M_finish;
  _4 = this->D.174557._M_impl.D.173902._M_start;
  std::_Destroy<function_path*, function_path> (_4, _3, _2);
  _5 = &this->D.174557;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<function_path*, function_path> (_ZSt8_DestroyIP13function_pathS0_EvT_S2_RSaIT0_E, funcdef_no=8528, decl_uid=211361, cgraph_uid=5160, symbol_order=5949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct allocator & D.222026)
{
  <bb 2> :
  std::_Destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy<function_path*> (_ZSt8_DestroyIP13function_pathEvT_S2_, funcdef_no=9300, decl_uid=222028, cgraph_uid=5932, symbol_order=6721)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*> (struct function_path * __first, struct function_path * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<function_path*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP13function_pathEEvT_S4_, funcdef_no=9981, decl_uid=233209, cgraph_uid=6613, symbol_order=7406)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<function_path*> (struct function_path * D.239739, struct function_path * D.239740)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_path_array::~function_path_array (_ZN19function_path_arrayD2Ev, funcdef_no=6321, decl_uid=192269, cgraph_uid=3296, symbol_order=4072)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::~function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  _1 = &this->function_path_array;
  std::vector<function_path>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function tracefree_fucntion (_Z18tracefree_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6348, decl_uid=187008, cgraph_uid=3324, symbol_order=4100)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
void tracefree_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.249258;
  const char * D.249257;
  struct function * D.249256;
  struct cgraph_node * D.249255;
  availability avail;
  int fucntion_level;
  struct cgraph_edge * e;

  <bb 2> :
  symtab.572_1 = symtab;
  D.249255 = symbol_table::first_defined_function (symtab.572_1);
  node = D.249255;
  goto <bb 7>; [INV]

  <bb 3> :
  fucntion_level = 0;
  D.249256 = cgraph_node::get_fun (node);
  _2 = D.249256;
  push_cfun (_2);
  cfun.573_3 = cfun;
  _4 = cfun.573_3->decl;
  D.249257 = get_name (_4);
  _5 = D.249257;
  stderr.574_6 = stderr;
  fprintf (stderr.574_6, "=======node_fun:%s=========\n", _5);
  cfun.575_7 = cfun;
  if (cfun.575_7 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  stderr.576_8 = stderr;
  __builtin_fwrite ("fucntion collect path \n", 1, 23, stderr.576_8);
  cfun.577_9 = cfun;
  _10 = &cfun.577_9->decl;
  std::vector<tree_node*>::push_back (&pathStack, _10);
  cfun.578_11 = cfun;
  _12 = cfun.578_11->decl;
  walk_function_path (_12, fucntion_level, ptable, user_tmp);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 6> :
  symtab.579_13 = symtab;
  D.249258 = symbol_table::next_defined_function (symtab.579_13, node);
  node = D.249258;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  stderr.580_14 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.580_14);
  return;

}



;; Function walk_function_path (_Z18walk_function_pathP9tree_nodeiP3ptbP12gimple_array, funcdef_no=6349, decl_uid=187004, cgraph_uid=3328, symbol_order=4104)

Merging blocks 4 and 70
Removing basic block 18
Removing basic block 19
Removing basic block 40
Removing basic block 55
Removing basic block 67
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
;;
;; Loop 1
;;  header 60, latch 59
;;  depth 1, outer 0
;;  nodes: 60 59 28 58 57 56 55 31 54 53 41 52 42 51 48 47 43 46 44 45 50 49 40 37 39 38 36 35 34 33 32 30 29 25 27 21 26 22 20 19 24 23
;;
;; Loop 3
;;  header 53, latch 52
;;  depth 2, outer 1
;;  nodes: 53 52 42 51 48 47 43 46 44 45 50 49
;;
;; Loop 4
;;  header 47, latch 46
;;  depth 3, outer 3
;;  nodes: 47 46 44 45
;;
;; Loop 2
;;  header 27, latch 26
;;  depth 2, outer 1
;;  nodes: 27 26 22
;; 2 succs { 76 3 }
;; 3 succs { 4 5 }
;; 4 succs { 65 }
;; 5 succs { 76 6 }
;; 6 succs { 76 7 }
;; 7 succs { 75 8 }
;; 8 succs { 72 9 }
;; 9 succs { 72 10 }
;; 10 succs { 72 11 }
;; 11 succs { 12 18 }
;; 12 succs { 72 13 }
;; 13 succs { 72 14 }
;; 14 succs { 72 15 }
;; 15 succs { 72 16 }
;; 16 succs { 17 18 }
;; 17 succs { 72 18 }
;; 18 succs { 60 }
;; 19 succs { 72 20 }
;; 20 succs { 72 21 }
;; 21 succs { 27 }
;; 22 succs { 23 26 }
;; 23 succs { 72 24 }
;; 24 succs { 72 25 }
;; 25 succs { 28 }
;; 26 succs { 27 }
;; 27 succs { 22 28 }
;; 28 succs { 29 59 }
;; 29 succs { 72 30 }
;; 30 succs { 72 31 }
;; 31 succs { 32 55 }
;; 32 succs { 71 33 }
;; 33 succs { 71 34 }
;; 34 succs { 70 35 }
;; 35 succs { 68 36 }
;; 36 succs { 37 38 }
;; 37 succs { 68 40 }
;; 38 succs { 68 39 }
;; 39 succs { 68 40 }
;; 40 succs { 68 41 }
;; 41 succs { 53 }
;; 42 succs { 43 52 }
;; 43 succs { 47 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 }
;; 47 succs { 44 48 }
;; 48 succs { 49 52 }
;; 49 succs { 66 50 }
;; 50 succs { 66 51 }
;; 51 succs { 52 }
;; 52 succs { 53 }
;; 53 succs { 42 54 }
;; 54 succs { 55 }
;; 55 succs { 72 56 }
;; 56 succs { 72 57 }
;; 57 succs { 72 58 }
;; 58 succs { 59 }
;; 59 succs { 60 }
;; 60 succs { 19 61 }
;; 61 succs { 62 63 }
;; 62 succs { 72 64 }
;; 63 succs { 72 64 }
;; 64 succs { 65 }
;; 65 succs { 1 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 }
;; 72 succs { 73 }
;; 73 succs { 74 }
;; 74 succs { 75 }
;; 75 succs { 76 }
;; 76 succs { }
void walk_function_path (union tree_node * function_tree, int fucntion_level, struct ptb * ptable, struct gimple_array * user_tmp)
{
  const char * D.249319;
  struct function_return_array * D.249312;
  struct function_return_array * D.249311;
  struct function_return_array * D.249310;
  struct function_return_array * D.249309;
  const char * D.249308;
  const char * D.249307;
  struct function_return_array * D.249306;
  struct function_return_array * D.249305;
  const char * D.249304;
  struct function_path_array * D.249303;
  struct function_path_array * D.249302;
  struct return_type ret_type;
  int k2;
  int find_diff;
  int k;
  struct vector funcalleeRetTypearray;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  struct function_return_array calleeFunArray;
  int o;
  int i;
  int find_thread;
  int find;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.613;
  bool retval.611;
  bool retval.606;
  bool retval.605;
  bool retval.603;
  bool retval.600;
  bool retval.596;
  bool retval.595;
  bool retval.593;
  bool retval.586;
  bool retval.581;

  <bb 2> :
  function_path_collect.582_1 = function_path_collect;
  D.249302 = hash_map<tree_node*, function_path_array>::get (function_path_collect.582_1, &function_tree);

  <bb 3> :
  _2 = D.249302;
  retval.581 = _2 == 0B;
  if (retval.581 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  goto <bb 65>; [INV]

  <bb 5> :
  function_path_collect.583_3 = function_path_collect;
  D.249303 = hash_map<tree_node*, function_path_array>::get (function_path_collect.583_3, &function_tree);

  <bb 6> :
  _4 = D.249303;
  function_path_array::function_path_array (&fun_array, _4);

  <bb 7> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 8> :
  function_return_array::function_return_array (&callerFunArray);
  std::vector<return_type>::vector (&callerRetTypearray);
  _5 = std::vector<function_path>::size (&function_path_array);
  function_tree.584_6 = function_tree;
  D.249304 = get_name (function_tree.584_6);

  <bb 9> :
  _7 = D.249304;
  stderr.585_8 = stderr;
  fprintf (stderr.585_8, "\x1b[40;44m =======print_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _7, _5, fucntion_level);

  <bb 10> :
  function_return_collect.587_9 = function_return_collect;
  D.249305 = hash_map<tree_node*, function_return_array>::get (function_return_collect.587_9, &function_tree);

  <bb 11> :
  _10 = D.249305;
  retval.586 = _10 != 0B;
  if (retval.586 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 12> :
  function_return_collect.588_11 = function_return_collect;
  D.249306 = hash_map<tree_node*, function_return_array>::get (function_return_collect.588_11, &function_tree);

  <bb 13> :
  _12 = D.249306;
  function_return_array::operator= (&callerFunArray, _12);

  <bb 14> :
  std::vector<return_type>::operator= (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 15> :
  _13 = callerFunArray.return_type_num;
  stderr.589_14 = stderr;
  fprintf (stderr.589_14, "\x1b[40;44m =======print_function_type %d  ========  \x1b[0m\n", _13);

  <bb 16> :
  _15 = callerFunArray.pthread_type_num;
  _16 = (unsigned int) _15;
  FUNCITON_THREAD.590_17 = FUNCITON_THREAD;
  if (_16 == FUNCITON_THREAD.590_17)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  stderr.591_18 = stderr;
  __builtin_fwrite ("\x1b[40;44m =======print_pthread_type_is thread_fucntion  ========  \x1b[0m\n", 1, 70, stderr.591_18);

  <bb 18> :
  fucntion_level = fucntion_level + 1;
  find = 0;
  find_thread = 0;
  i = 0;
  goto <bb 60>; [INV]

  <bb 19> :
  find = 0;
  _19 = (long unsigned int) i;
  _20 = std::vector<function_path>::operator[] (&function_path_array, _19);
  _21 = _20->next;
  D.249307 = get_name (_21);

  <bb 20> :
  _22 = D.249307;
  stderr.592_23 = stderr;
  fprintf (stderr.592_23, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _22);

  <bb 21> :
  o = 0;
  goto <bb 27>; [INV]

  <bb 22> :
  _24 = (long unsigned int) o;
  _25 = std::vector<tree_node*>::operator[] (&pathStack, _24);
  _26 = *_25;
  _27 = (long unsigned int) i;
  _28 = std::vector<function_path>::operator[] (&function_path_array, _27);
  _29 = _28->next;
  retval.593 = _26 == _29;
  if (retval.593 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  find = 1;
  _30 = (long unsigned int) o;
  _31 = std::vector<tree_node*>::operator[] (&pathStack, _30);
  _32 = *_31;
  D.249308 = get_name (_32);

  <bb 24> :
  _33 = D.249308;
  stderr.594_34 = stderr;
  fprintf (stderr.594_34, "\x1b[40;41m =======recursive_fun:%s========= \x1b[0m\n", _33);

  <bb 25> :
  goto <bb 28>; [INV]

  <bb 26> :
  o = o + 1;

  <bb 27> :
  _35 = (long unsigned int) o;
  _36 = std::vector<tree_node*>::size (&pathStack);
  retval.595 = _35 < _36;
  if (retval.595 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  if (find == 0)
    goto <bb 29>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 29> :
  _37 = (long unsigned int) i;
  _38 = std::vector<function_path>::operator[] (&function_path_array, _37);
  _39 = &_38->next;
  std::vector<tree_node*>::push_back (&pathStack, _39);

  <bb 30> :
  function_return_collect.597_40 = function_return_collect;
  _41 = (long unsigned int) i;
  _42 = std::vector<function_path>::operator[] (&function_path_array, _41);
  _43 = &_42->next;
  D.249309 = hash_map<tree_node*, function_return_array>::get (function_return_collect.597_40, _43);

  <bb 31> :
  _44 = D.249309;
  retval.596 = _44 != 0B;
  if (retval.596 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 32> :
  function_return_collect.598_45 = function_return_collect;
  _46 = (long unsigned int) i;
  _47 = std::vector<function_path>::operator[] (&function_path_array, _46);
  _48 = &_47->next;
  D.249310 = hash_map<tree_node*, function_return_array>::get (function_return_collect.598_45, _48);

  <bb 33> :
  _49 = D.249310;
  function_return_array::function_return_array (&calleeFunArray, _49);

  <bb 34> :
  _50 = calleeFunArray.return_type_num;
  stderr.599_51 = stderr;
  fprintf (stderr.599_51, "\x1b[40;44m =======print_function_type %d  ========  \x1b[0m\n", _50);

  <bb 35> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _52 = (long unsigned int) i;
  _53 = std::vector<function_path>::operator[] (&function_path_array, _52);
  _54 = _53->next;
  getFucntionDecl = _54;
  function_return_collect.601_55 = function_return_collect;
  D.249311 = hash_map<tree_node*, function_return_array>::get (function_return_collect.601_55, &getFucntionDecl);

  <bb 36> :
  _56 = D.249311;
  retval.600 = _56 == 0B;
  if (retval.600 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 40>; [INV]

  <bb 38> :
  function_return_collect.602_57 = function_return_collect;
  D.249312 = hash_map<tree_node*, function_return_array>::get (function_return_collect.602_57, &getFucntionDecl);

  <bb 39> :
  _58 = D.249312;
  function_return_array::operator= (&find_fun_array, _58);

  <bb 40> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 41> :
  k = 0;
  goto <bb 53>; [INV]

  <bb 42> :
  _59 = (long unsigned int) k;
  _60 = std::vector<return_type>::operator[] (&callerRetTypearray, _59);
  _61 = _60->return_type_stmt_num;
  _62 = (unsigned int) _61;
  FUNCITON_THREAD.604_63 = FUNCITON_THREAD;
  retval.603 = _62 == FUNCITON_THREAD.604_63;
  if (retval.603 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 43> :
  find_diff = 0;
  k2 = 0;
  goto <bb 47>; [INV]

  <bb 44> :
  _64 = (long unsigned int) k;
  _65 = std::vector<return_type>::operator[] (&callerRetTypearray, _64);
  _66 = _65->return_tree;
  _67 = (long unsigned int) k2;
  _68 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _67);
  _69 = _68->return_tree;
  retval.605 = _66 == _69;
  if (retval.605 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  find_diff = 1;

  <bb 46> :
  k2 = k2 + 1;

  <bb 47> :
  _70 = (long unsigned int) k2;
  _71 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.606 = _70 < _71;
  if (retval.606 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  if (find_diff == 0)
    goto <bb 49>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 49> :
  return_type::return_type (&ret_type);
  _72 = (long unsigned int) k;
  _73 = std::vector<return_type>::operator[] (&callerRetTypearray, _72);
  _74 = _73->stmt;
  ret_type.stmt = _74;
  _75 = (long unsigned int) k;
  _76 = std::vector<return_type>::operator[] (&callerRetTypearray, _75);
  _77 = _76->return_tree;
  ret_type.return_tree = _77;
  FUNCITON_THREAD.607_78 = FUNCITON_THREAD;
  FUNCITON_THREAD.608_79 = (int) FUNCITON_THREAD.607_78;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.608_79;
  std::vector<return_type>::push_back (&find_fun_array.return_type_array, &ret_type);

  <bb 50> :
  function_return_collect.609_80 = function_return_collect;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.609_80, &getFucntionDecl, &find_fun_array);

  <bb 51> :
  FUNCITON_THREAD.610_81 = FUNCITON_THREAD;
  find_thread = (int) FUNCITON_THREAD.610_81;
  ret_type = {CLOBBER};

  <bb 52> :
  k = k + 1;

  <bb 53> :
  _82 = (long unsigned int) k;
  _83 = std::vector<return_type>::size (&callerRetTypearray);
  retval.611 = _82 < _83;
  if (retval.611 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  function_return_array::~function_return_array (&calleeFunArray);
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 55> :
  _84 = (long unsigned int) i;
  _85 = std::vector<function_path>::operator[] (&function_path_array, _84);
  _86 = _85->next;
  walk_function_path (_86, fucntion_level, ptable, user_tmp);

  <bb 56> :
  _87 = std::vector<tree_node*>::back (&pathStack);
  _88 = *_87;
  D.249319 = get_name (_88);

  <bb 57> :
  _89 = D.249319;
  stderr.612_90 = stderr;
  fprintf (stderr.612_90, "\x1b[40;33m =======POP node_fun stack:%s========= \x1b[0m\n", _89);

  <bb 58> :
  std::vector<tree_node*>::pop_back (&pathStack);

  <bb 59> :
  i = i + 1;

  <bb 60> :
  _91 = (long unsigned int) i;
  _92 = std::vector<function_path>::size (&function_path_array);
  retval.613 = _91 < _92;
  if (retval.613 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 61> :
  find_thread.614_93 = (unsigned int) find_thread;
  FUNCITON_THREAD.615_94 = FUNCITON_THREAD;
  if (find_thread.614_93 == FUNCITON_THREAD.615_94)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  FUNCITON_THREAD.616_95 = FUNCITON_THREAD;
  FUNCITON_THREAD.617_96 = (int) FUNCITON_THREAD.616_95;
  function_tree.618_97 = function_tree;
  checkPointerConstraint (function_tree.618_97, ptable, user_tmp, 0B, FUNCITON_THREAD.617_96);
  goto <bb 64>; [INV]

  <bb 63> :
  function_tree.619_98 = function_tree;
  checkPointerConstraint (function_tree.619_98, ptable, user_tmp, 0B, 0);

  <bb 64> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 65> :
<L45>:
  return;

  <bb 66> :
<L46>:
  ret_type = {CLOBBER};
  resx 11

  <bb 67> :
<L47>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 10

  <bb 68> :
<L48>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 9

  <bb 69> :
<L49>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 8

  <bb 70> :
<L50>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 7

  <bb 71> :
<L51>:
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 6

  <bb 72> :
<L52>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 5

  <bb 73> :
<L53>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 4

  <bb 74> :
<L54>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 75> :
<L55>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 76> :
<L56>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 1

}



;; Function return_type::return_type (_ZN11return_typeC2Ev, funcdef_no=6351, decl_uid=194268, cgraph_uid=3326, symbol_order=4102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void return_type::return_type (struct return_type * const this)
{
  <bb 2> :
  this->return_type_stmt_num = 0;
  return;

}



;; Function std::vector<return_type>::push_back (_ZNSt6vectorI11return_typeSaIS0_EE9push_backERKS0_, funcdef_no=7704, decl_uid=173188, cgraph_uid=4337, symbol_order=5122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<return_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.249330;

  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_finish;
  _2 = this->D.173508._M_impl.D.172853._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.173508._M_impl.D.172853._M_finish;
  _4 = &this->D.173508._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_4, _3, __x);
  _5 = this->D.173508._M_impl.D.172853._M_finish;
  _6 = _5 + 24;
  this->D.173508._M_impl.D.172853._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.249330 = std::vector<return_type>::end (this);
  std::vector<return_type>::_M_realloc_insert<const return_type&> (this, D.249330, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8598, decl_uid=212401, cgraph_uid=5230, symbol_order=6019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (struct allocator_type & __a, struct return_type * __p, const struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const return_type&> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9373, decl_uid=222846, cgraph_uid=6005, symbol_order=6794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (struct new_allocator * const this, struct return_type * __p, const struct return_type & __args#0)
{
  void * D.234097;
  void * D.234096;
  const struct return_type * D.234098;

  <bb 2> :
  D.234098 = std::forward<const return_type&> (__args#0);
  D.234096 = __p;
  D.234097 = operator new (24, D.234096);
  MEM[(struct return_type *)D.234097] = *D.234098;
  return;

}



;; Function std::vector<return_type>::_M_realloc_insert<const return_type&> (_ZNSt6vectorI11return_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8599, decl_uid=212570, cgraph_uid=5234, symbol_order=6023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::_M_realloc_insert<const return_type&> (struct vector * const this, struct iterator __position, const struct return_type & __args#0)
{
  struct return_type * D.249335;
  const size_type D.249334;
  struct return_type * __new_finish;
  struct return_type * __new_start;
  const size_type __elems_before;
  struct return_type * __old_finish;
  struct return_type * __old_start;
  const size_type __len;
  struct iterator D.222857;

  <bb 2> :
  D.249334 = std::vector<return_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.249334;
  __old_start = this->D.173508._M_impl.D.172853._M_start;
  __old_finish = this->D.173508._M_impl.D.172853._M_finish;
  D.222857 = std::vector<return_type>::begin (this);
  _1 = __gnu_cxx::operator-<return_type*, std::vector<return_type> > (&__position, &D.222857);
  __elems_before = (const size_type) _1;
  D.222857 = {CLOBBER};
  _2 = &this->D.173508;
  D.249335 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_2, __len);
  __new_start = D.249335;
  __new_finish = __new_start;
  _3 = std::forward<const return_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.173508._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.173508;
  _8 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<return_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.173508;
  _12 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<return_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.173508;
  _23 = this->D.173508._M_impl.D.172853._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.173508._M_impl.D.172853._M_start = __new_start;
  this->D.173508._M_impl.D.172853._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.173508._M_impl.D.172853._M_end_of_storage = _28;
  return;

}



;; Function std::vector<return_type>::_M_check_len (_ZNKSt6vectorI11return_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9374, decl_uid=173357, cgraph_uid=6006, symbol_order=6795)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<return_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.622;
  size_type D.249339;
  const long unsigned int D.234103;
  bool retval.620;

  <bb 2> :
  _1 = std::vector<return_type>::max_size (this);
  _2 = std::vector<return_type>::size (this);
  _3 = _1 - _2;
  __n.621_4 = __n;
  retval.620 = _3 < __n.621_4;
  if (retval.620 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<return_type>::size (this);
  _6 = std::vector<return_type>::size (this);
  D.234103 = _6;
  _7 = std::max<long unsigned int> (&D.234103, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234103 = {CLOBBER};
  _9 = std::vector<return_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<return_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.622 = std::vector<return_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.622 = __len;

  <bb 8> :
  D.249339 = iftmp.622;

  <bb 9> :
<L6>:
  return D.249339;

}



;; Function std::vector<return_type>::max_size (_ZNKSt6vectorI11return_typeSaIS0_EE8max_sizeEv, funcdef_no=10032, decl_uid=173143, cgraph_uid=6664, symbol_order=7457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::max_size (const struct vector * const this)
{
  size_type D.249346;

  <bb 2> :
  _1 = &this->D.173508;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  D.249346 = std::vector<return_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.249346;

}



;; Function std::vector<return_type>::_S_max_size (_ZNSt6vectorI11return_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10542, decl_uid=173364, cgraph_uid=7174, symbol_order=7967)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.249348;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<return_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.249348 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249348;

}



;; Function std::allocator_traits<std::allocator<return_type> >::max_size (_ZNSt16allocator_traitsISaI11return_typeEE8max_sizeERKS1_, funcdef_no=10792, decl_uid=172678, cgraph_uid=7424, symbol_order=8219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<return_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.249351;

  <bb 2> :
  D.249351 = __gnu_cxx::new_allocator<return_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.249351;

}



;; Function __gnu_cxx::new_allocator<return_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE8max_sizeEv, funcdef_no=10899, decl_uid=172520, cgraph_uid=7531, symbol_order=8326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::max_size (const struct new_allocator * const this)
{
  size_type D.249353;

  <bb 2> :
  D.249353 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.249353;

}



;; Function __gnu_cxx::operator-<return_type*, std::vector<return_type> > (_ZN9__gnu_cxxmiIP11return_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9375, decl_uid=222858, cgraph_uid=6007, symbol_order=6796)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.249355;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.249355 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.249355;

}



;; Function std::vector<return_type>::_S_relocate (_ZNSt6vectorI11return_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9376, decl_uid=173015, cgraph_uid=6008, symbol_order=6797)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.249358;
  struct return_type * D.249357;

  <bb 2> :
  D.249357 = std::vector<return_type>::_S_do_relocate (__first, __last, __result, __alloc, D.249358);

  <bb 3> :
<L0>:
  return D.249357;

}



;; Function std::vector<return_type>::_S_do_relocate (_ZNSt6vectorI11return_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10033, decl_uid=173003, cgraph_uid=6665, symbol_order=7458)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_do_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239988)
{
  struct return_type * D.249360;

  <bb 2> :
  D.249360 = std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.249360;

}



;; Function std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (_ZSt12__relocate_aIP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10543, decl_uid=223023, cgraph_uid=7175, symbol_order=7968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * D.249362;

  <bb 2> :
  _1 = std::__niter_base<return_type*> (__result);
  _2 = std::__niter_base<return_type*> (__last);
  _3 = std::__niter_base<return_type*> (__first);
  D.249362 = std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.249362;

}



;; Function std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_ZSt14__relocate_a_1IP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10793, decl_uid=223174, cgraph_uid=7425, symbol_order=8220)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * __cur;
  struct return_type * D.249364;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__first);
  _2 = std::__addressof<return_type> (__cur);
  std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.249364 = __cur;

  <bb 6> :
<L3>:
  return D.249364;

}



;; Function std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_ZSt19__relocate_object_aI11return_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10900, decl_uid=223203, cgraph_uid=7532, symbol_order=8327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (struct return_type * restrict __dest, struct return_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<return_type&> (__orig);
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (__alloc, __dest, _1);
  _2 = std::__addressof<return_type> (__orig);
  std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (__alloc, _2);
  return;

}



;; Function std::move<return_type&> (_ZSt4moveIR11return_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10947, decl_uid=223215, cgraph_uid=7579, symbol_order=8374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<return_type&> (struct return_type & __t)
{
  struct type & D.249366;

  <bb 2> :
  D.249366 = __t;

  <bb 3> :
<L0>:
  return D.249366;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10948, decl_uid=223217, cgraph_uid=7580, symbol_order=8375)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (struct allocator_type & __a, struct return_type * __p, struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<return_type> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (__a, __p, _1);
  return;

}



;; Function std::forward<return_type> (_ZSt7forwardI11return_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10967, decl_uid=245329, cgraph_uid=7599, symbol_order=8394)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type> (struct type & __t)
{
  struct return_type & D.249368;

  <bb 2> :
  D.249368 = __t;

  <bb 3> :
<L0>:
  return D.249368;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10968, decl_uid=245331, cgraph_uid=7600, symbol_order=8395)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (struct new_allocator * const this, struct return_type * __p, struct return_type & __args#0)
{
  void * D.245749;
  void * D.245748;
  struct return_type * D.245750;

  <bb 2> :
  D.245750 = std::forward<return_type> (__args#0);
  D.245748 = __p;
  D.245749 = operator new (24, D.245748);
  MEM[(struct return_type *)D.245749] = *D.245750;
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (_ZNSt16allocator_traitsISaI11return_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9378, decl_uid=223232, cgraph_uid=6010, symbol_order=6799)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (struct allocator_type & __a, struct return_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::destroy<return_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::destroy<return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE7destroyIS1_EEvPT_, funcdef_no=10034, decl_uid=234118, cgraph_uid=6666, symbol_order=7459)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::destroy<return_type> (struct new_allocator * const this, struct return_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::put (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7706, decl_uid=189533, cgraph_uid=4338, symbol_order=5123)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_return_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_return_array & v)
{
  bool D.249377;
  struct hash_entry * D.249376;
  unsigned int D.249375;
  bool ins;
  struct hash_entry * e;
  bool D.249373;
  void * D.212580;
  void * D.212579;

  <bb 2> :
  _1 = &this->m_table;
  D.249375 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.249375;
  D.249376 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.249376;
  D.249377 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (e);
  ins = D.249377;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212579 = &e->m_value;
  D.212580 = operator new (32, D.212579);
  function_return_array::function_return_array (D.212580, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_return_array::operator= (_4, v);

  <bb 5> :
  D.249373 = ~ins;

  <bb 6> :
<L3>:
  return D.249373;

  <bb 7> :
<L4>:
  operator delete (D.212580, D.212579);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8603, decl_uid=189691, cgraph_uid=5235, symbol_order=6024)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.249428;
  bool D.249427;
  bool D.249426;
  bool D.249425;
  bool D.249424;
  bool D.249423;
  struct value_type * D.249422;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.628;
  bool retval.627;
  bool retval.626;
  bool retval.625;
  bool retval.624;
  bool retval.623;
  struct value_type * D.249384;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.249423 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.623 = D.249423;
  if (retval.623 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.249424 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.624 = D.249424;
  if (retval.624 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.249425 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.625 = D.249425;
  if (retval.625 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.249384 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.249426 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.626 = D.249426;
  if (retval.626 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.249427 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.627 = D.249427;
  if (retval.627 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.249428 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.628 = D.249428;
  if (retval.628 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.249384 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.249384 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.249384 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.249384 = _37 + _39;

  <bb 27> :
<L37>:
  return D.249384;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9379, decl_uid=189772, cgraph_uid=6023, symbol_order=6812)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.249459;
  unsigned int D.249458;
  bool D.249457;
  bool D.249456;
  struct mem_alloc_description & D.249455;
  struct value_type * D.249454;
  unsigned int D.249453;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234141;
  void * D.234140;
  struct hash_entry & D.234178;
  bool iftmp.632;
  bool retval.631;
  bool iftmp.630;
  bool retval.629;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.630 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.630 = 0;

  <bb 6> :
  retval.629 = iftmp.630;
  if (retval.629 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.249453 = hash_table_higher_prime_index (_5);
  nindex = D.249453;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.249454 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.249454;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.249456 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.249456;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.249457 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.249457;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.632 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.632 = 0;

  <bb 15> :
  retval.631 = iftmp.632;
  if (retval.631 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.249458 = hash_map<tree_node*, function_return_array>::hash_entry::hash (x);
  _16 = D.249458;
  D.249459 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.249459;
  D.234178 = std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (x);
  D.234140 = q;
  D.234141 = operator new (40, D.234140);
  hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (D.234141, D.234178);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10035, decl_uid=189667, cgraph_uid=6667, symbol_order=7460)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.249460;

  <bb 2> :
  D.249460 = this->m_size;

  <bb 3> :
<L0>:
  return D.249460;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10036, decl_uid=189669, cgraph_uid=6668, symbol_order=7461)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.249462;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.249462 = _1 - _2;

  <bb 3> :
<L0>:
  return D.249462;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10037, decl_uid=189769, cgraph_uid=6669, symbol_order=7462)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.633;
  bool D.249464;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.633 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.633 = 0;

  <bb 6> :
  D.249464 = iftmp.633;

  <bb 7> :
<L4>:
  return D.249464;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9190, decl_uid=189759, cgraph_uid=5822, symbol_order=6611)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.249486;
  struct value_type * D.249485;
  struct mem_alloc_description & D.249484;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.249482;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.249485 = xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (n);
  nentries = D.249485;
  goto <bb 6>; [INV]

  <bb 5> :
  D.249486 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (n);
  nentries = D.249486;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.249482 = nentries;

  <bb 9> :
<L14>:
  return D.249482;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9906, decl_uid=216728, cgraph_uid=6538, symbol_order=7331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.249489;
  struct hash_entry * D.249487;

  <bb 2> :
  D.249489 = xcalloc (count, 40);
  D.249487 = D.249489;

  <bb 3> :
<L0>:
  return D.249487;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9907, decl_uid=231882, cgraph_uid=6539, symbol_order=7332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.249496;
  struct hash_entry * D.249495;
  struct hash_entry * D.249493;
  bool retval.634;

  <bb 2> :
  retval.634 = need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ();
  if (retval.634 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.249495 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.249493 = D.249495;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.249496 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.249493 = D.249496;

  <bb 5> :
<L2>:
  return D.249493;

}



;; Function finalize<hash_map<tree_node*, function_return_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10433, decl_uid=239383, cgraph_uid=7068, symbol_order=7861)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_return_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10435, decl_uid=242862, cgraph_uid=7066, symbol_order=7859)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_return_array::~function_return_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10432, decl_uid=239382, cgraph_uid=7064, symbol_order=7857)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ()
{
  bool D.249497;

  <bb 2> :
  D.249497 = 1;

  <bb 3> :
<L0>:
  return D.249497;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10039, decl_uid=189592, cgraph_uid=6671, symbol_order=7464)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_return_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.249501;
  hashval_t D.249499;

  <bb 2> :
  _1 = &e->m_key;
  D.249501 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_1);
  D.249499 = D.249501;

  <bb 3> :
<L0>:
  return D.249499;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10038, decl_uid=189762, cgraph_uid=6670, symbol_order=7463)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.249514;
  bool D.249513;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.636;
  struct value_type * D.249505;
  bool retval.635;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.249513 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.635 = D.249513;
  if (retval.635 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.249505 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.249514 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.636 = D.249514;
  if (retval.636 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.249505 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.249505;

}



;; Function std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10040, decl_uid=234138, cgraph_uid=6672, symbol_order=7465)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.249515;

  <bb 2> :
  D.249515 = __t;

  <bb 3> :
<L0>:
  return D.249515;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9390, decl_uid=234163, cgraph_uid=6021, symbol_order=6810)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234165)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234165->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234165->m_value;
  function_return_array::function_return_array (_2, _3);
  return;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2EOS_, funcdef_no=9388, decl_uid=189884, cgraph_uid=6018, symbol_order=6807)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, struct function_return_array & D.189886)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.189886->return_type_num;
  this->return_type_num = _1;
  _2 = D.189886->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.189886->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9386, decl_uid=173465, cgraph_uid=6015, symbol_order=6804)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this, struct vector & D.173467)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173508;
  _2 = &D.173467->D.173508;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9384, decl_uid=172933, cgraph_uid=6012, symbol_order=6801)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.172935)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.172935->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10042, decl_uid=172839, cgraph_uid=6674, symbol_order=7467)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  std::allocator<return_type>::allocator (this, _1);
  _2 = &this->D.172853;
  _3 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.172853;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11return_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10544, decl_uid=240018, cgraph_uid=7176, symbol_order=7969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.249517;

  <bb 2> :
  D.249517 = __t;

  <bb 3> :
<L0>:
  return D.249517;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10546, decl_uid=172795, cgraph_uid=7178, symbol_order=7971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8904, decl_uid=216730, cgraph_uid=5536, symbol_order=6325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9392, decl_uid=189780, cgraph_uid=6024, symbol_order=6813)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10044, decl_uid=189604, cgraph_uid=6676, symbol_order=7469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10548, decl_uid=240033, cgraph_uid=7180, symbol_order=7973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<tree_node*>::back (_ZNSt6vectorIP9tree_nodeSaIS1_EE4backEv, funcdef_no=7707, decl_uid=184559, cgraph_uid=4339, symbol_order=5124)

Merging blocks 3 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
union tree_node * & std::vector<tree_node*>::back (struct vector * const this)
{
  struct iterator D.212582;
  struct __normal_iterator D.212584;
  union tree_node * & D.249520;

  <bb 2> :
  D.212582 = std::vector<tree_node*>::end (this);
  D.212584 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator- (&D.212582, 1);
  D.249520 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator* (&D.212584);

  <bb 3> :
  D.212584 = {CLOBBER};
  D.212582 = {CLOBBER};

  <bb 4> :
<L2>:
  return D.249520;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator- (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEmiEl, funcdef_no=8605, decl_uid=212225, cgraph_uid=5237, symbol_order=6026)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator- (const struct __normal_iterator * const this, difference_type __n)
{
  union tree_node * * const D.223431;
  struct __normal_iterator D.223432;
  struct __normal_iterator D.249524;

  <bb 2> :
  _1 = this->_M_current;
  __n.637_2 = (long unsigned int) __n;
  _3 = __n.637_2 * 8;
  _4 = -_3;
  _5 = _1 + _4;
  D.223431 = _5;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.223432, &D.223431);
  D.249524 = D.223432;
  D.223432 = {CLOBBER};
  D.223431 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.249524;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEdeEv, funcdef_no=8606, decl_uid=212199, cgraph_uid=5238, symbol_order=6027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * & __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator* (const struct __normal_iterator * const this)
{
  union tree_node * & D.249528;

  <bb 2> :
  D.249528 = this->_M_current;

  <bb 3> :
<L0>:
  return D.249528;

}



;; Function dump_fucntion (_Z13dump_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6353, decl_uid=187033, cgraph_uid=3329, symbol_order=4105)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 6 8 9 7 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 11 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 5 12 }
;; 12 succs { 1 }
void dump_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.249545;
  const char * D.249544;
  const char * D.249543;
  struct function * D.249542;
  struct function * D.249541;
  bool D.249540;
  struct cgraph_node * D.249539;
  int fucntion_level;
  struct cgraph_edge * e;
  bool retval.641;
  bool retval.640;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stderr.638_1 = stderr;
  __builtin_fwrite ("=======node_fun: =========\n", 1, 27, stderr.638_1);

  <bb 4> :
  symtab.639_2 = symtab;
  D.249539 = symbol_table::first_defined_function (symtab.639_2);
  node = D.249539;
  goto <bb 11>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.249540 = gimple_has_body_p (_3);
  _4 = D.249540;
  retval.640 = ~_4;
  if (retval.640 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  fucntion_level = 0;
  D.249541 = cgraph_node::get_fun (node);
  _5 = D.249541;
  push_cfun (_5);
  D.249542 = cgraph_node::get_fun (node);
  _6 = D.249542;
  _7 = _6->decl;
  retval.641 = _7 == 0B;
  if (retval.641 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  cfun.642_8 = cfun;
  _9 = cfun.642_8->decl;
  D.249543 = get_name (_9);
  _10 = D.249543;
  stderr.643_11 = stderr;
  fprintf (stderr.643_11, "\x1b[40;44m =======node_fun:%s========= \x1b[0m\n", _10);
  stderr.644_12 = stderr;
  __builtin_fwrite ("\x1b[40;44m fucntion collect path  \x1b[0m\n", 1, 37, stderr.644_12);
  cfun.645_13 = cfun;
  _14 = &cfun.645_13->decl;
  std::vector<tree_node*>::push_back (&pathStack, _14);
  cfun.646_15 = cfun;
  _16 = cfun.646_15->decl;
  walk_function_path (_16, fucntion_level, ptable, user_tmp);
  _17 = std::vector<tree_node*>::back (&pathStack);
  _18 = *_17;
  D.249544 = get_name (_18);
  _19 = D.249544;
  stderr.647_20 = stderr;
  fprintf (stderr.647_20, "\x1b[40;33m =======POP node_fun stack:%s========= \x1b[0m\n", _19);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 10> :
  symtab.648_21 = symtab;
  D.249545 = symbol_table::next_defined_function (symtab.648_21, node);
  node = D.249545;

  <bb 11> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  stderr.649_22 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.649_22);
  return;

}



;; Function collect_function_call (_Z21collect_function_callP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6354, decl_uid=186989, cgraph_uid=3333, symbol_order=4109)

Removing basic block 5
Removing basic block 13
Removing basic block 14
Removing basic block 15
Removing basic block 21
Removing basic block 22
Removing basic block 27
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 59
Removing basic block 79
Removing basic block 82
Removing basic block 100
Removing basic block 102
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
;;
;; Loop 2
;;  header 45, latch 44
;;  depth 1, outer 0
;;  nodes: 45 44 42 43 39 40 41 38
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 13 16 14 15
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 88 }
;; 5 succs { 6 21 }
;; 6 succs { 7 12 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 11 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 18 }
;; 13 succs { 14 17 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 13 19 }
;; 19 succs { 20 21 }
;; 20 succs { 88 }
;; 21 succs { 22 88 }
;; 22 succs { 23 88 }
;; 23 succs { 24 46 }
;; 24 succs { 25 34 }
;; 25 succs { 26 34 }
;; 26 succs { 27 34 }
;; 27 succs { 28 34 }
;; 28 succs { 29 34 }
;; 29 succs { 30 34 }
;; 30 succs { 31 34 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 46 }
;; 36 succs { 37 46 }
;; 37 succs { 45 }
;; 38 succs { 39 40 }
;; 39 succs { 42 }
;; 40 succs { 41 42 }
;; 41 succs { 42 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 }
;; 45 succs { 38 46 }
;; 46 succs { 48 47 }
;; 47 succs { 48 51 }
;; 48 succs { 50 49 }
;; 49 succs { 50 }
;; 50 succs { 87 }
;; 51 succs { 58 52 }
;; 52 succs { 58 53 }
;; 53 succs { 58 54 }
;; 54 succs { 58 55 }
;; 55 succs { 58 56 }
;; 56 succs { 58 57 }
;; 57 succs { 58 59 }
;; 58 succs { 60 }
;; 59 succs { 60 }
;; 60 succs { 61 62 }
;; 61 succs { 87 }
;; 62 succs { 63 64 }
;; 63 succs { 87 }
;; 64 succs { 65 80 }
;; 65 succs { 89 66 }
;; 66 succs { 89 67 }
;; 67 succs { 68 }
;; 68 succs { 89 69 }
;; 69 succs { 72 70 }
;; 70 succs { 89 71 }
;; 71 succs { 72 }
;; 72 succs { 89 73 }
;; 73 succs { 89 74 }
;; 74 succs { 75 78 }
;; 75 succs { 89 76 }
;; 76 succs { 89 77 }
;; 77 succs { 78 }
;; 78 succs { 89 79 }
;; 79 succs { 87 }
;; 80 succs { 81 83 }
;; 81 succs { 82 83 }
;; 82 succs { 84 }
;; 83 succs { 84 }
;; 84 succs { 85 87 }
;; 85 succs { 86 87 }
;; 86 succs { 87 }
;; 87 succs { 88 }
;; 88 succs { 1 }
;; 89 succs { }
void collect_function_call (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  union tree_node * D.249714;
  union tree_node * D.249713;
  union tree_node * D.249712;
  union tree_node * D.249711;
  long int D.249709;
  union tree_node * D.249708;
  union tree_node * D.249707;
  union tree_node * D.249706;
  struct pthread_attr_array * D.249705;
  struct pthread_attr_array * D.249704;
  union tree_node * D.249703;
  union tree_node * D.249702;
  union tree_node * D.249701;
  union tree_node * D.249700;
  const char * D.249699;
  union tree_node * D.249698;
  union tree_node * D.249697;
  union tree_node * D.249696;
  unsigned int D.249695;
  union tree_node * D.249694;
  union tree_node * D.249693;
  union tree_node * D.249692;
  union tree_node * D.249691;
  unsigned int D.249690;
  const char * D.249689;
  union tree_node * D.249688;
  const char * D.249687;
  union tree_node * D.249686;
  union tree_node * D.249685;
  const char * D.249684;
  union tree_node * D.249683;
  const char * D.249682;
  union tree_node * D.249681;
  union tree_node * D.249680;
  struct pthread_attr_array pthread_attr_array;
  union tree_node * getvardecl;
  union tree_node * second;
  int i;
  const char * name2;
  size_t found;
  int i;
  int find;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.692;
  bool iftmp.691;
  bool retval.690;
  bool retval.688;
  bool retval.685;
  bool retval.684;
  bool iftmp.678;
  bool retval.677;
  bool retval.675;
  bool retval.672;
  bool retval.668;
  bool retval.665;
  bool retval.664;
  bool iftmp.663;
  bool retval.662;
  bool retval.661;
  bool retval.660;
  bool retval.659;
  struct expanded_location D.194550;
  bool retval.657;
  struct expanded_location D.194340;
  struct expanded_location D.194338;
  bool retval.656;
  bool retval.654;
  bool retval.651;
  bool retval.650;

  <bb 2> :
  loc = gimple_location_safe (gc);
  retval.650 = is_gimple_call (gc);
  if (retval.650 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  D.249680 = gimple_call_fn (gc);
  _1 = D.249680;
  retval.651 = _1 == 0B;
  if (retval.651 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 88>; [INV]

  <bb 5> :
  vscode_extensionmod.652_2 = vscode_extensionmod;
  if (vscode_extensionmod.652_2 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 6> :
  find = 0;
  vscode_extensionIgonefreemod.653_3 = vscode_extensionIgonefreemod;
  if (vscode_extensionIgonefreemod.653_3 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  retval.654 = is_gimple_call (gc);
  if (retval.654 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  D.249681 = gimple_call_fn (gc);
  _4 = D.249681;
  D.249682 = get_name (_4);
  name = D.249682;
  if (name != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _5 = strcmp (name, "free");
  if (_5 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _6 = strcmp (name, "xfree");
  if (_6 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  find = 1;
  stderr.655_7 = stderr;
  __builtin_fwrite ("set breakpoint free stmt igone\n", 1, 31, stderr.655_7);
  _8 = gimple_location_safe (gc);
  warning_at (_8, 0, "use location");

  <bb 12> :
  i = 0;
  goto <bb 18>; [INV]

  <bb 13> :
  D.194338 = expand_location (loc); [return slot optimization]
  _9 = D.194338.file;
  retval.656 = _9 != 0B;
  D.194338 = {CLOBBER};
  if (retval.656 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  _10 = (long unsigned int) i;
  _11 = std::vector<breakpoint>::operator[] (&vbreakpoint, _10);
  _12 = &_11->name;
  D.194340 = expand_location (loc); [return slot optimization]
  _13 = D.194340.file;
  found = std::__cxx11::basic_string<char>::find (_12, _13, 0);
  D.194340 = {CLOBBER};
  if (found != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = (long unsigned int) i;
  _15 = std::vector<breakpoint>::operator[] (&vbreakpoint, _14);
  _16 = _15->line;
  D.194550 = expand_location (loc); [return slot optimization]
  _17 = D.194550.line;
  retval.657 = _16 == _17;
  D.194550 = {CLOBBER};
  if (retval.657 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  debug_gimple_stmt (gc);
  _18 = (long unsigned int) i;
  _19 = std::vector<breakpoint>::operator[] (&vbreakpoint, _18);
  _20 = _19->line;
  _21 = (long unsigned int) i;
  _22 = std::vector<breakpoint>::operator[] (&vbreakpoint, _21);
  _23 = &_22->name;
  _24 = std::__cxx11::basic_string<char>::c_str (_23);
  stderr.658_25 = stderr;
  fprintf (stderr.658_25, "set breakpoint %s %d\n", _24, _20);
  find = 1;

  <bb 17> :
  i = i + 1;

  <bb 18> :
  _26 = (long unsigned int) i;
  _27 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.659 = _26 < _27;
  if (retval.659 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  if (find == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 88>; [INV]

  <bb 21> :
  retval.660 = is_gimple_call (gc);
  if (retval.660 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 22> :
  D.249683 = gimple_call_fn (gc);
  _28 = D.249683;
  D.249684 = get_name (_28);
  name = D.249684;
  if (name != 0B)
    goto <bb 23>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 23> :
  D.249685 = gimple_call_fndecl (gc);
  _29 = D.249685;
  retval.661 = _29 != 0B;
  if (retval.661 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 24> :
  D.249686 = gimple_call_fndecl (gc);
  _30 = D.249686;
  D.249687 = get_name (_30);
  name2 = D.249687;
  _31 = strcmp (name2, "realloc");
  if (_31 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 25> :
  _32 = strcmp (name2, "malloc");
  if (_32 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 26> :
  D.249688 = gimple_call_fn (gc);
  _33 = D.249688;
  D.249689 = get_name (_33);
  _34 = D.249689;
  _35 = strcmp (_34, "calloc");
  if (_35 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 27> :
  _36 = strcmp (name2, "xcalloc");
  if (_36 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 28> :
  _37 = strcmp (name2, "xmalloc");
  if (_37 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 29> :
  _38 = strcmp (name2, "strdup");
  if (_38 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 30> :
  _39 = strcmp (name2, "xstrdup");
  if (_39 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 31> :
  _40 = strcmp (name2, "free");
  if (_40 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _41 = strcmp (name2, "printf");
  if (_41 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  iftmp.663 = 1;
  goto <bb 35>; [INV]

  <bb 34> :
  iftmp.663 = 0;

  <bb 35> :
  retval.662 = iftmp.663;
  if (retval.662 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 36> :
  D.249690 = gimple_call_num_args (gc);
  _42 = D.249690;
  retval.664 = _42 != 0;
  if (retval.664 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 37> :
  i = 0;
  goto <bb 45>; [INV]

  <bb 38> :
  second = 0B;
  i.666_43 = (unsigned int) i;
  D.249691 = gimple_call_arg (gc, i.666_43);
  _44 = D.249691;
  _45 = _44->base.code;
  retval.665 = _45 == 131;
  if (retval.665 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  i.667_46 = (unsigned int) i;
  D.249692 = gimple_call_arg (gc, i.667_46);
  _47 = D.249692;
  second = _47->exp.operands[0];
  goto <bb 42>; [INV]

  <bb 40> :
  i.669_48 = (unsigned int) i;
  D.249693 = gimple_call_arg (gc, i.669_48);
  _49 = D.249693;
  _50 = _49->base.code;
  retval.668 = _50 == 153;
  if (retval.668 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 41> :
  i.670_51 = (unsigned int) i;
  D.249694 = gimple_call_arg (gc, i.670_51);
  second = D.249694;

  <bb 42> :
  if (second != 0B)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  ptable.671_52 = ptable;
  set_ptb (bb, ptable.671_52, second, loc, 0, gc, node);

  <bb 44> :
  i = i + 1;

  <bb 45> :
  D.249695 = gimple_call_num_args (gc);
  _53 = D.249695;
  i.673_54 = (unsigned int) i;
  retval.672 = _53 > i.673_54;
  if (retval.672 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 46> :
  _55 = strcmp (name, "free");
  if (_55 == 0)
    goto <bb 48>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  _56 = strcmp (name, "xfree");
  if (_56 == 0)
    goto <bb 48>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 48> :
  GIMPLE_FREE_COUNT.674_57 = GIMPLE_FREE_COUNT;
  _58 = GIMPLE_FREE_COUNT.674_57 + 1;
  GIMPLE_FREE_COUNT = _58;
  D.249696 = gimple_call_arg (gc, 0);
  _59 = D.249696;
  _60 = _59->base.code;
  retval.675 = _60 == 131;
  if (retval.675 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 49> :
  D.249697 = gimple_call_arg (gc, 0);
  _61 = D.249697;
  ftable.676_62 = ftable;
  set_ptb (bb, ftable.676_62, _61, loc, 0, gc, node);

  <bb 50> :
  goto <bb 87>; [INV]

  <bb 51> :
  _63 = strcmp (name, "realloc");
  if (_63 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  _64 = strcmp (name, "malloc");
  if (_64 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 53> :
  D.249698 = gimple_call_fn (gc);
  _65 = D.249698;
  D.249699 = get_name (_65);
  _66 = D.249699;
  _67 = strcmp (_66, "calloc");
  if (_67 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  _68 = strcmp (name, "xcalloc");
  if (_68 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 55> :
  _69 = strcmp (name, "xmalloc");
  if (_69 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  _70 = strcmp (name, "strdup");
  if (_70 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  _71 = strcmp (name, "xstrdup");
  if (_71 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 58> :
  iftmp.678 = 1;
  goto <bb 60>; [INV]

  <bb 59> :
  iftmp.678 = 0;

  <bb 60> :
  retval.677 = iftmp.678;
  if (retval.677 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 61> :
  GIMPLE_MALLOC_COUNT.679_72 = GIMPLE_MALLOC_COUNT;
  _73 = GIMPLE_MALLOC_COUNT.679_72 + 1;
  GIMPLE_MALLOC_COUNT = _73;
  D.249700 = gimple_call_lhs (gc);
  _74 = D.249700;
  ptable.680_75 = ptable;
  set_ptb (bb, ptable.680_75, _74, loc, 0, gc, node);
  goto <bb 87>; [INV]

  <bb 62> :
  _76 = strcmp (name, "pthread_create");
  if (_76 == 0)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  IS_PTHREAD_FUCNTION.681_77 = IS_PTHREAD_FUCNTION;
  IS_PTHREAD_FUCNTION.682_78 = (int) IS_PTHREAD_FUCNTION.681_77;
  D.249701 = gimple_call_arg (gc, 0);
  _79 = D.249701;
  ptable.683_80 = ptable;
  set_ptb (bb, ptable.683_80, _79, loc, IS_PTHREAD_FUCNTION.682_78, gc, node);
  goto <bb 87>; [INV]

  <bb 64> :
  _81 = strcmp (name, "pthread_attr_setdetachstate");
  if (_81 == 0)
    goto <bb 65>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 65> :
  D.249702 = gimple_call_arg (gc, 0);

  <bb 66> :
  _82 = D.249702;
  _83 = _82->exp.operands[0];
  getvardecl = _83;
  D.249703 = gimple_call_arg (gc, 1);

  <bb 67> :
  _84 = D.249703;
  _85 = _84->base.code;
  retval.684 = _85 == 26;

  <bb 68> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  pthread_attr_setdetachstates.686_86 = pthread_attr_setdetachstates;
  D.249704 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.686_86, &getvardecl);

  <bb 69> :
  _87 = D.249704;
  retval.685 = _87 == 0B;
  if (retval.685 != 0)
    goto <bb 72>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 70> :
  pthread_attr_setdetachstates.687_88 = pthread_attr_setdetachstates;
  D.249705 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.687_88, &getvardecl);

  <bb 71> :
  _89 = D.249705;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_89];

  <bb 72> :
  pthread_attr_array.stmt = gc;
  D.249706 = gimple_call_arg (gc, 0);

  <bb 73> :
  _90 = D.249706;
  pthread_attr_array.attr_tree = _90;
  D.249707 = gimple_call_arg (gc, 1);

  <bb 74> :
  _91 = D.249707;
  _92 = _91->base.code;
  retval.688 = _92 == 26;
  if (retval.688 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 75> :
  D.249708 = gimple_call_arg (gc, 1);

  <bb 76> :
  _93 = D.249708;
  D.249709 = int_cst_value (_93);

  <bb 77> :
  _94 = D.249709;
  _95 = (int) _94;
  pthread_attr_array.attr_type_num = _95;

  <bb 78> :
  pthread_attr_setdetachstates.689_96 = pthread_attr_setdetachstates;
  hash_map<tree_node*, pthread_attr_array>::put (pthread_attr_setdetachstates.689_96, &getvardecl, &pthread_attr_array);

  <bb 79> :
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  goto <bb 87>; [INV]

  <bb 80> :
  D.249711 = gimple_call_lhs (gc);
  _97 = D.249711;
  if (_97 != 0B)
    goto <bb 81>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 81> :
  D.249712 = gimple_call_fn (gc);
  _98 = D.249712;
  if (_98 != 0B)
    goto <bb 82>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 82> :
  iftmp.691 = 1;
  goto <bb 84>; [INV]

  <bb 83> :
  iftmp.691 = 0;

  <bb 84> :
  retval.690 = iftmp.691;
  if (retval.690 != 0)
    goto <bb 85>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 85> :
  D.249713 = gimple_call_lhs (gc);
  _99 = D.249713;
  _100 = _99->base.code;
  retval.692 = _100 == 153;
  if (retval.692 != 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  D.249714 = gimple_call_lhs (gc);
  _101 = D.249714;
  ptable.693_102 = ptable;
  set_ptb (bb, ptable.693_102, _101, loc, 0, gc, node);

  <bb 87> :

  <bb 88> :
<L116>:
  return;

  <bb 89> :
<L117>:
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  resx 4

}



;; Function std::vector<breakpoint>::operator[] (_ZNSt6vectorI10breakpointSaIS0_EEixEm, funcdef_no=7709, decl_uid=185878, cgraph_uid=4341, symbol_order=5126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<breakpoint>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249715;

  <bb 2> :
  _1 = this->D.186225._M_impl.D.185570._M_start;
  _2 = __n * 40;
  D.249715 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249715;

}



;; Function std::vector<breakpoint>::size (_ZNKSt6vectorI10breakpointSaIS0_EE4sizeEv, funcdef_no=7708, decl_uid=185858, cgraph_uid=4340, symbol_order=5125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::size (const struct vector * const this)
{
  size_type D.249717;

  <bb 2> :
  _1 = this->D.186225._M_impl.D.185570._M_finish;
  _2 = this->D.186225._M_impl.D.185570._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.249717 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249717;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK6gimple, funcdef_no=2132, decl_uid=92888, cgraph_uid=1269, symbol_order=1429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gimple * gs)
{
  union tree_node * D.249722;
  const struct gcall * D.249721;
  const struct gcall * gc;
  union tree_node * D.249719;

  <bb 2> :
  D.249721 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249721;
  D.249722 = gimple_call_fndecl (gc);
  D.249719 = D.249722;

  <bb 3> :
<L0>:
  return D.249719;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK5gcall, funcdef_no=2131, decl_uid=92885, cgraph_uid=1268, symbol_order=1428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gcall * gs)
{
  union tree_node * D.249725;
  union tree_node * D.249723;

  <bb 2> :
  _1 = gimple_call_fn (gs);
  D.249725 = gimple_call_addr_fndecl (_1);
  D.249723 = D.249725;

  <bb 3> :
<L0>:
  return D.249723;

}



;; Function gimple_call_addr_fndecl (_ZL23gimple_call_addr_fndeclPK9tree_node, funcdef_no=1909, decl_uid=89977, cgraph_uid=1048, symbol_order=1208)

Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 13 }
;; 3 succs { 4 13 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
union tree_node * gimple_call_addr_fndecl (const union tree_node * fn)
{
  bool D.249745;
  union tree_node * fndecl;
  union tree_node * D.249742;
  bool iftmp.695;
  bool retval.694;

  <bb 2> :
  if (fn != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  _1 = fn->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 4> :
  fndecl = fn->exp.operands[0];
  _2 = fndecl->base.code;
  if (_2 == 165)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _3 = fndecl->exp.operands[0];
  _4 = _3->base.code;
  if (_4 == 131)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _5 = fndecl->exp.operands[1];
  D.249745 = integer_zerop (_5);
  _6 = D.249745;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.695 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.695 = 0;

  <bb 9> :
  retval.694 = iftmp.695;
  if (retval.694 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _7 = fndecl->exp.operands[0];
  fndecl = _7->exp.operands[0];

  <bb 11> :
  _8 = fndecl->base.code;
  if (_8 == 33)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.249742 = fndecl;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 13> :
  D.249742 = 0B;

  <bb 14> :
<L15>:
  return D.249742;

}



;; Function pthread_attr_array::pthread_attr_array (_ZN18pthread_attr_arrayC2Ev, funcdef_no=6356, decl_uid=194560, cgraph_uid=3331, symbol_order=4107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pthread_attr_array::pthread_attr_array (struct pthread_attr_array * const this)
{
  <bb 2> :
  this->attr_type_num = 0;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::get (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7711, decl_uid=194640, cgraph_uid=4343, symbol_order=5128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_attr_array * hash_map<tree_node*, pthread_attr_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.249754;
  struct hash_entry & D.249753;
  unsigned int D.249752;
  struct hash_entry & e;
  struct pthread_attr_array * iftmp.696;
  struct pthread_attr_array * D.249746;

  <bb 2> :
  _1 = &this->m_table;
  D.249752 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.249752;
  D.249753 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.249753;
  D.249754 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  _3 = D.249754;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.696 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.696 = &e->m_value;

  <bb 5> :
  D.249746 = iftmp.696;

  <bb 6> :
<L3>:
  return D.249746;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE4hashERKS2_, funcdef_no=8607, decl_uid=194596, cgraph_uid=5239, symbol_order=6028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (union tree_node * const & h)
{
  hashval_t D.249755;

  <bb 2> :
  D.249755 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.249755;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8608, decl_uid=194780, cgraph_uid=5240, symbol_order=6029)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.249789;
  bool D.249788;
  bool D.249787;
  bool D.249786;
  bool D.249785;
  bool D.249784;
  struct value_type * D.249783;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.700;
  bool retval.699;
  struct value_type & D.249769;
  bool iftmp.698;
  bool retval.697;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.249784 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.249784;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.249785 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.249785;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.249786 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _11 = D.249786;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.698 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.698 = 0;

  <bb 8> :
  retval.697 = iftmp.698;
  if (retval.697 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.249769 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.249787 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.249787;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.249788 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.249788;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.249789 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _23 = D.249789;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.700 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.700 = 0;

  <bb 18> :
  retval.699 = iftmp.700;
  if (retval.699 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.249769 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.249769;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8909, decl_uid=194876, cgraph_uid=5541, symbol_order=6330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.249792;
  bool D.249790;

  <bb 2> :
  D.249792 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (v);
  D.249790 = D.249792;

  <bb 3> :
<L0>:
  return D.249790;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8611, decl_uid=194709, cgraph_uid=5243, symbol_order=6032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.249795;
  bool D.249793;

  <bb 2> :
  D.249795 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.249793 = D.249795;

  <bb 3> :
<L0>:
  return D.249793;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8910, decl_uid=194874, cgraph_uid=5542, symbol_order=6331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.249798;
  bool D.249796;

  <bb 2> :
  D.249798 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (v);
  D.249796 = D.249798;

  <bb 3> :
<L0>:
  return D.249796;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9734, decl_uid=194704, cgraph_uid=6366, symbol_order=7155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.249801;
  bool D.249799;

  <bb 2> :
  D.249801 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.249799 = D.249801;

  <bb 3> :
<L0>:
  return D.249799;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10292, decl_uid=237350, cgraph_uid=6924, symbol_order=7717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249802;

  <bb 2> :
  _1 = entry->m_key;
  D.249802 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.249802;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9394, decl_uid=194697, cgraph_uid=6026, symbol_order=6815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.249806;
  bool D.249804;

  <bb 2> :
  _1 = &a->m_key;
  D.249806 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_1, b);
  D.249804 = D.249806;

  <bb 3> :
<L0>:
  return D.249804;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10equal_keysERKS2_S7_, funcdef_no=10047, decl_uid=194598, cgraph_uid=6679, symbol_order=7472)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.249807;

  <bb 2> :
  D.249807 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.249807;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8609, decl_uid=212594, cgraph_uid=5241, symbol_order=6030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249809;

  <bb 2> :
  _1 = entry->m_key;
  D.249809 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.249809;

}



;; Function hash_map<tree_node*, pthread_attr_array>::put (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7712, decl_uid=194636, cgraph_uid=4344, symbol_order=5129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::put (struct hash_map * const this, union tree_node * const & k, const struct pthread_attr_array & v)
{
  bool D.249818;
  struct hash_entry * D.249817;
  unsigned int D.249816;
  bool ins;
  struct hash_entry * e;
  bool D.249814;
  void * D.212602;
  void * D.212601;

  <bb 2> :
  _1 = &this->m_table;
  D.249816 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.249816;
  D.249817 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.249817;
  D.249818 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (e);
  ins = D.249818;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212601 = &e->m_value;
  D.212602 = operator new (24, D.212601);
  MEM[(struct pthread_attr_array *)D.212602] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.249814 = ~ins;

  <bb 6> :
<L3>:
  return D.249814;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8610, decl_uid=194791, cgraph_uid=5242, symbol_order=6031)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.249868;
  bool D.249867;
  bool D.249866;
  bool D.249865;
  bool D.249864;
  bool D.249863;
  struct value_type * D.249862;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.706;
  bool retval.705;
  bool retval.704;
  bool retval.703;
  bool retval.702;
  bool retval.701;
  struct value_type * D.249824;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.249863 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.701 = D.249863;
  if (retval.701 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.249864 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.702 = D.249864;
  if (retval.702 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.249865 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.703 = D.249865;
  if (retval.703 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.249824 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.249866 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.704 = D.249866;
  if (retval.704 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.249867 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.705 = D.249867;
  if (retval.705 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.249868 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.706 = D.249868;
  if (retval.706 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.249824 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.249824 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.249824 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.249824 = _37 + _39;

  <bb 27> :
<L37>:
  return D.249824;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9395, decl_uid=194872, cgraph_uid=6027, symbol_order=6816)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.249899;
  unsigned int D.249898;
  bool D.249897;
  bool D.249896;
  struct mem_alloc_description & D.249895;
  struct value_type * D.249894;
  unsigned int D.249893;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234218;
  void * D.234217;
  struct hash_entry * D.234243;
  bool iftmp.710;
  bool retval.709;
  bool iftmp.708;
  bool retval.707;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.708 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.708 = 0;

  <bb 6> :
  retval.707 = iftmp.708;
  if (retval.707 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.249893 = hash_table_higher_prime_index (_5);
  nindex = D.249893;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.249894 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.249894;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.249896 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.249896;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.249897 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.249897;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.710 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.710 = 0;

  <bb 15> :
  retval.709 = iftmp.710;
  if (retval.709 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.249898 = hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (x);
  _16 = D.249898;
  D.249899 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.249899;
  D.234243 = std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (x);
  D.234217 = q;
  D.234218 = operator new (32, D.234217);
  MEM[(struct value_type *)D.234218] = *D.234243;

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10048, decl_uid=194767, cgraph_uid=6680, symbol_order=7473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.249900;

  <bb 2> :
  D.249900 = this->m_size;

  <bb 3> :
<L0>:
  return D.249900;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10049, decl_uid=194769, cgraph_uid=6681, symbol_order=7474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.249902;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.249902 = _1 - _2;

  <bb 3> :
<L0>:
  return D.249902;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10050, decl_uid=194869, cgraph_uid=6682, symbol_order=7475)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.711;
  bool D.249904;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.711 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.711 = 0;

  <bb 6> :
  D.249904 = iftmp.711;

  <bb 7> :
<L4>:
  return D.249904;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9393, decl_uid=194859, cgraph_uid=6025, symbol_order=6814)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.249926;
  struct value_type * D.249925;
  struct mem_alloc_description & D.249924;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.249922;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.249925 = xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (n);
  nentries = D.249925;
  goto <bb 6>; [INV]

  <bb 5> :
  D.249926 = ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (n);
  nentries = D.249926;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.249922 = nentries;

  <bb 9> :
<L14>:
  return D.249922;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10045, decl_uid=216776, cgraph_uid=6677, symbol_order=7470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.249929;
  struct hash_entry * D.249927;

  <bb 2> :
  D.249929 = xcalloc (count, 32);
  D.249927 = D.249929;

  <bb 3> :
<L0>:
  return D.249927;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10046, decl_uid=234188, cgraph_uid=6678, symbol_order=7471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.249936;
  struct hash_entry * D.249935;
  struct hash_entry * D.249933;
  bool retval.712;

  <bb 2> :
  retval.712 = need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ();
  if (retval.712 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.249935 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.249933 = D.249935;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.249936 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.249933 = D.249936;

  <bb 5> :
<L2>:
  return D.249933;

}



;; Function finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10550, decl_uid=240040, cgraph_uid=7182, symbol_order=7975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10549, decl_uid=240039, cgraph_uid=7181, symbol_order=7974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ()
{
  bool D.249937;

  <bb 2> :
  D.249937 = 0;

  <bb 3> :
<L0>:
  return D.249937;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10052, decl_uid=194695, cgraph_uid=6684, symbol_order=7477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.249941;
  hashval_t D.249939;

  <bb 2> :
  _1 = &e->m_key;
  D.249941 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_1);
  D.249939 = D.249941;

  <bb 3> :
<L0>:
  return D.249939;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10051, decl_uid=194862, cgraph_uid=6683, symbol_order=7476)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.249954;
  bool D.249953;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.714;
  struct value_type * D.249945;
  bool retval.713;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.249953 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.713 = D.249953;
  if (retval.713 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.249945 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.249954 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.714 = D.249954;
  if (retval.714 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.249945 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.249945;

}



;; Function std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10053, decl_uid=234215, cgraph_uid=6685, symbol_order=7478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.249955;

  <bb 2> :
  D.249955 = __t;

  <bb 3> :
<L0>:
  return D.249955;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8912, decl_uid=216778, cgraph_uid=5544, symbol_order=6333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9396, decl_uid=194880, cgraph_uid=6028, symbol_order=6817)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10054, decl_uid=194707, cgraph_uid=6686, symbol_order=7479)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10551, decl_uid=240066, cgraph_uid=7183, symbol_order=7976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function collect_FunctionMapping_Assign (_Z30collect_FunctionMapping_AssignP6gimpleP11cgraph_nodeP15basic_block_defP3ptb, funcdef_no=6358, decl_uid=186994, cgraph_uid=3379, symbol_order=4155)

Removing basic block 15
Removing basic block 29
Removing basic block 49
Removing basic block 60
Removing basic block 61
Removing basic block 80
Removing basic block 93
Removing basic block 107
Removing basic block 122
Removing basic block 135
Removing basic block 161
Removing basic block 181
Removing basic block 192
Removing basic block 194
Removing basic block 206
Removing basic block 211
Removing basic block 222
Removing basic block 223
Removing basic block 224
Removing basic block 232
Removing basic block 236
Removing basic block 237
Removing basic block 238
Merging blocks 242 and 255
Removing basic block 247
Merging blocks 254 and 256
Removing basic block 260
Removing basic block 261
Merging blocks 270 and 572
Removing basic block 279
Removing basic block 289
Removing basic block 294
Removing basic block 304
Removing basic block 310
Removing basic block 320
Removing basic block 327
Removing basic block 347
Removing basic block 358
Removing basic block 359
Removing basic block 360
Removing basic block 362
Removing basic block 369
Removing basic block 378
Removing basic block 383
Removing basic block 396
Removing basic block 402
Removing basic block 408
Removing basic block 429
Removing basic block 440
Removing basic block 441
Removing basic block 442
Removing basic block 443
Removing basic block 448
Removing basic block 468
Removing basic block 479
Removing basic block 480
Removing basic block 481
Removing basic block 482
Removing basic block 483
Removing basic block 484
Removing basic block 485
Removing basic block 491
Removing basic block 499
Removing basic block 501
Removing basic block 514
Removing basic block 525
Removing basic block 526
Removing basic block 527
Removing basic block 528
Removing basic block 533
Removing basic block 541
Removing basic block 547
Removing basic block 555
Removing basic block 562
Merging blocks 571 and 573
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 4
;;  header 214, latch 213
;;  depth 1, outer 0
;;  nodes: 214 213 210 212 211 209 215
;;
;; Loop 3
;;  header 193, latch 192
;;  depth 1, outer 0
;;  nodes: 193 192 186 191 188 187 190 189 185
;;
;; Loop 2
;;  header 160, latch 159
;;  depth 1, outer 0
;;  nodes: 160 159 141 158 157 156 155 154 150 153 152 151 149 148 145 147 146 143 142 144 139 140 138 137 136 135 161
;;
;; Loop 1
;;  header 357, latch 356
;;  depth 1, outer 0
;;  nodes: 357 356 354 355 353 349 352 350 351
;; 2 succs { 3 234 }
;; 3 succs { 4 5 }
;; 4 succs { 499 }
;; 5 succs { 6 499 }
;; 6 succs { 7 499 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 60 }
;; 10 succs { 11 23 }
;; 11 succs { 503 12 }
;; 12 succs { 500 13 }
;; 13 succs { 14 15 }
;; 14 succs { 500 18 }
;; 15 succs { 500 16 }
;; 16 succs { 500 17 }
;; 17 succs { 500 18 }
;; 18 succs { 500 19 }
;; 19 succs { 500 20 }
;; 20 succs { 500 21 }
;; 21 succs { 500 22 }
;; 22 succs { 59 }
;; 23 succs { 24 59 }
;; 24 succs { 513 25 }
;; 25 succs { 511 26 }
;; 26 succs { 27 28 }
;; 27 succs { 511 31 }
;; 28 succs { 511 29 }
;; 29 succs { 511 30 }
;; 30 succs { 511 31 }
;; 31 succs { 511 32 }
;; 32 succs { 511 33 }
;; 33 succs { 511 34 }
;; 34 succs { 511 35 }
;; 35 succs { 36 58 }
;; 36 succs { 508 37 }
;; 37 succs { 38 57 }
;; 38 succs { 39 57 }
;; 39 succs { 508 40 }
;; 40 succs { 41 57 }
;; 41 succs { 507 42 }
;; 42 succs { 507 43 }
;; 43 succs { 507 44 }
;; 44 succs { 504 45 }
;; 45 succs { 46 47 }
;; 46 succs { 507 51 }
;; 47 succs { 507 48 }
;; 48 succs { 505 49 }
;; 49 succs { 505 50 }
;; 50 succs { 507 51 }
;; 51 succs { 507 52 }
;; 52 succs { 507 53 }
;; 53 succs { 507 54 }
;; 54 succs { 507 55 }
;; 55 succs { 506 56 }
;; 56 succs { 57 }
;; 57 succs { 58 }
;; 58 succs { 59 }
;; 59 succs { 233 }
;; 60 succs { 61 69 }
;; 61 succs { 516 62 }
;; 62 succs { 63 68 }
;; 63 succs { 514 64 }
;; 64 succs { 514 65 }
;; 65 succs { 514 66 }
;; 66 succs { 514 67 }
;; 67 succs { 68 }
;; 68 succs { 233 }
;; 69 succs { 71 70 }
;; 70 succs { 71 82 }
;; 71 succs { 518 72 }
;; 72 succs { 518 73 }
;; 73 succs { 74 75 }
;; 74 succs { 518 77 }
;; 75 succs { 518 76 }
;; 76 succs { 518 77 }
;; 77 succs { 518 78 }
;; 78 succs { 518 79 }
;; 79 succs { 518 80 }
;; 80 succs { 518 81 }
;; 81 succs { 233 }
;; 82 succs { 83 109 }
;; 83 succs { 524 84 }
;; 84 succs { 522 85 }
;; 85 succs { 86 87 }
;; 86 succs { 522 90 }
;; 87 succs { 522 88 }
;; 88 succs { 522 89 }
;; 89 succs { 522 90 }
;; 90 succs { 522 91 }
;; 91 succs { 522 92 }
;; 92 succs { 522 93 }
;; 93 succs { 522 94 }
;; 94 succs { 522 95 }
;; 95 succs { 96 108 }
;; 96 succs { 521 97 }
;; 97 succs { 521 98 }
;; 98 succs { 99 100 }
;; 99 succs { 521 103 }
;; 100 succs { 521 101 }
;; 101 succs { 521 102 }
;; 102 succs { 521 103 }
;; 103 succs { 521 104 }
;; 104 succs { 521 105 }
;; 105 succs { 521 106 }
;; 106 succs { 521 107 }
;; 107 succs { 108 }
;; 108 succs { 233 }
;; 109 succs { 110 121 }
;; 110 succs { 527 111 }
;; 111 succs { 525 112 }
;; 112 succs { 113 114 }
;; 113 succs { 525 117 }
;; 114 succs { 525 115 }
;; 115 succs { 525 116 }
;; 116 succs { 525 117 }
;; 117 succs { 525 118 }
;; 118 succs { 525 119 }
;; 119 succs { 525 120 }
;; 120 succs { 233 }
;; 121 succs { 122 133 }
;; 122 succs { 530 123 }
;; 123 succs { 528 124 }
;; 124 succs { 125 126 }
;; 125 succs { 528 129 }
;; 126 succs { 528 127 }
;; 127 succs { 528 128 }
;; 128 succs { 528 129 }
;; 129 succs { 528 130 }
;; 130 succs { 528 131 }
;; 131 succs { 528 132 }
;; 132 succs { 233 }
;; 133 succs { 543 134 }
;; 134 succs { 160 }
;; 135 succs { 534 136 }
;; 136 succs { 139 137 }
;; 137 succs { 534 138 }
;; 138 succs { 139 140 }
;; 139 succs { 141 }
;; 140 succs { 141 }
;; 141 succs { 142 159 }
;; 142 succs { 533 143 }
;; 143 succs { 144 146 }
;; 144 succs { 533 145 }
;; 145 succs { 148 }
;; 146 succs { 533 147 }
;; 147 succs { 148 }
;; 148 succs { 531 149 }
;; 149 succs { 150 151 }
;; 150 succs { 531 154 }
;; 151 succs { 531 152 }
;; 152 succs { 531 153 }
;; 153 succs { 531 154 }
;; 154 succs { 531 155 }
;; 155 succs { 531 156 }
;; 156 succs { 531 157 }
;; 157 succs { 531 158 }
;; 158 succs { 159 }
;; 159 succs { 160 }
;; 160 succs { 543 161 }
;; 161 succs { 135 162 }
;; 162 succs { 543 163 }
;; 163 succs { 164 181 }
;; 164 succs { 543 165 }
;; 165 succs { 166 181 }
;; 166 succs { 537 167 }
;; 167 succs { 535 168 }
;; 168 succs { 169 170 }
;; 169 succs { 537 174 }
;; 170 succs { 537 171 }
;; 171 succs { 536 172 }
;; 172 succs { 536 173 }
;; 173 succs { 537 174 }
;; 174 succs { 537 175 }
;; 175 succs { 537 176 }
;; 176 succs { 537 177 }
;; 177 succs { 537 178 }
;; 178 succs { 179 180 }
;; 179 succs { 537 180 }
;; 180 succs { 181 }
;; 181 succs { 543 182 }
;; 182 succs { 183 216 }
;; 183 succs { 184 196 }
;; 184 succs { 193 }
;; 185 succs { 543 186 }
;; 186 succs { 187 192 }
;; 187 succs { 543 188 }
;; 188 succs { 189 192 }
;; 189 succs { 543 190 }
;; 190 succs { 543 191 }
;; 191 succs { 192 }
;; 192 succs { 193 }
;; 193 succs { 185 194 }
;; 194 succs { 195 196 }
;; 195 succs { 232 }
;; 196 succs { 543 197 }
;; 197 succs { 543 198 }
;; 198 succs { 199 216 }
;; 199 succs { 200 206 }
;; 200 succs { 543 201 }
;; 201 succs { 202 206 }
;; 202 succs { 543 203 }
;; 203 succs { 204 206 }
;; 204 succs { 543 205 }
;; 205 succs { 543 206 }
;; 206 succs { 543 207 }
;; 207 succs { 208 216 }
;; 208 succs { 214 }
;; 209 succs { 543 210 }
;; 210 succs { 211 213 }
;; 211 succs { 543 212 }
;; 212 succs { 543 213 }
;; 213 succs { 214 }
;; 214 succs { 543 215 }
;; 215 succs { 209 216 }
;; 216 succs { 217 231 }
;; 217 succs { 542 218 }
;; 218 succs { 219 220 }
;; 219 succs { 232 }
;; 220 succs { 542 221 }
;; 221 succs { 540 222 }
;; 222 succs { 223 224 }
;; 223 succs { 540 227 }
;; 224 succs { 540 225 }
;; 225 succs { 540 226 }
;; 226 succs { 540 227 }
;; 227 succs { 540 228 }
;; 228 succs { 540 229 }
;; 229 succs { 540 230 }
;; 230 succs { 231 }
;; 231 succs { 233 }
;; 232 succs { 499 }
;; 233 succs { 499 }
;; 234 succs { 235 499 }
;; 235 succs { 607 236 }
;; 236 succs { 239 237 }
;; 237 succs { 607 238 }
;; 238 succs { 239 240 }
;; 239 succs { 241 }
;; 240 succs { 241 }
;; 241 succs { 242 243 }
;; 242 succs { 499 }
;; 243 succs { 607 244 }
;; 244 succs { 607 245 }
;; 245 succs { 246 273 }
;; 246 succs { 247 260 }
;; 247 succs { 248 498 }
;; 248 succs { 544 249 }
;; 249 succs { 250 251 }
;; 250 succs { 544 254 }
;; 251 succs { 544 252 }
;; 252 succs { 544 253 }
;; 253 succs { 544 254 }
;; 254 succs { 544 255 }
;; 255 succs { 544 256 }
;; 256 succs { 544 257 }
;; 257 succs { 544 258 }
;; 258 succs { 544 259 }
;; 259 succs { 498 }
;; 260 succs { 261 498 }
;; 261 succs { 547 262 }
;; 262 succs { 263 264 }
;; 263 succs { 547 267 }
;; 264 succs { 547 265 }
;; 265 succs { 547 266 }
;; 266 succs { 547 267 }
;; 267 succs { 547 268 }
;; 268 succs { 547 269 }
;; 269 succs { 547 270 }
;; 270 succs { 547 271 }
;; 271 succs { 547 272 }
;; 272 succs { 498 }
;; 273 succs { 274 287 }
;; 274 succs { 275 498 }
;; 275 succs { 550 276 }
;; 276 succs { 277 278 }
;; 277 succs { 550 281 }
;; 278 succs { 550 279 }
;; 279 succs { 550 280 }
;; 280 succs { 550 281 }
;; 281 succs { 550 282 }
;; 282 succs { 550 283 }
;; 283 succs { 550 284 }
;; 284 succs { 550 285 }
;; 285 succs { 550 286 }
;; 286 succs { 498 }
;; 287 succs { 288 323 }
;; 288 succs { 607 289 }
;; 289 succs { 290 301 }
;; 290 succs { 553 291 }
;; 291 succs { 292 293 }
;; 292 succs { 553 296 }
;; 293 succs { 553 294 }
;; 294 succs { 553 295 }
;; 295 succs { 553 296 }
;; 296 succs { 553 297 }
;; 297 succs { 553 298 }
;; 298 succs { 553 299 }
;; 299 succs { 553 300 }
;; 300 succs { 301 }
;; 301 succs { 302 498 }
;; 302 succs { 562 303 }
;; 303 succs { 304 322 }
;; 304 succs { 305 322 }
;; 305 succs { 306 322 }
;; 306 succs { 560 307 }
;; 307 succs { 308 322 }
;; 308 succs { 559 309 }
;; 309 succs { 556 310 }
;; 310 succs { 311 312 }
;; 311 succs { 559 316 }
;; 312 succs { 559 313 }
;; 313 succs { 557 314 }
;; 314 succs { 557 315 }
;; 315 succs { 559 316 }
;; 316 succs { 559 317 }
;; 317 succs { 559 318 }
;; 318 succs { 559 319 }
;; 319 succs { 559 320 }
;; 320 succs { 558 321 }
;; 321 succs { 322 }
;; 322 succs { 498 }
;; 323 succs { 324 439 }
;; 324 succs { 325 337 }
;; 325 succs { 326 498 }
;; 326 succs { 563 327 }
;; 327 succs { 328 329 }
;; 328 succs { 563 332 }
;; 329 succs { 563 330 }
;; 330 succs { 563 331 }
;; 331 succs { 563 332 }
;; 332 succs { 563 333 }
;; 333 succs { 563 334 }
;; 334 succs { 563 335 }
;; 335 succs { 563 336 }
;; 336 succs { 498 }
;; 337 succs { 338 359 }
;; 338 succs { 566 339 }
;; 339 succs { 340 341 }
;; 340 succs { 566 344 }
;; 341 succs { 566 342 }
;; 342 succs { 566 343 }
;; 343 succs { 566 344 }
;; 344 succs { 345 358 }
;; 345 succs { 346 347 }
;; 346 succs { 348 }
;; 347 succs { 348 }
;; 348 succs { 357 }
;; 349 succs { 350 353 }
;; 350 succs { 351 353 }
;; 351 succs { 566 352 }
;; 352 succs { 353 }
;; 353 succs { 354 355 }
;; 354 succs { 356 }
;; 355 succs { 356 }
;; 356 succs { 357 }
;; 357 succs { 349 358 }
;; 358 succs { 498 }
;; 359 succs { 360 371 }
;; 360 succs { 569 361 }
;; 361 succs { 362 363 }
;; 362 succs { 569 366 }
;; 363 succs { 569 364 }
;; 364 succs { 569 365 }
;; 365 succs { 569 366 }
;; 366 succs { 569 367 }
;; 367 succs { 569 368 }
;; 368 succs { 569 369 }
;; 369 succs { 569 370 }
;; 370 succs { 498 }
;; 371 succs { 372 498 }
;; 372 succs { 373 426 }
;; 373 succs { 374 393 }
;; 374 succs { 375 426 }
;; 375 succs { 376 426 }
;; 376 succs { 377 426 }
;; 377 succs { 590 378 }
;; 378 succs { 379 426 }
;; 379 succs { 575 380 }
;; 380 succs { 572 381 }
;; 381 succs { 382 383 }
;; 382 succs { 575 387 }
;; 383 succs { 575 384 }
;; 384 succs { 573 385 }
;; 385 succs { 573 386 }
;; 386 succs { 575 387 }
;; 387 succs { 575 388 }
;; 388 succs { 575 389 }
;; 389 succs { 575 390 }
;; 390 succs { 575 391 }
;; 391 succs { 574 392 }
;; 392 succs { 426 }
;; 393 succs { 394 404 }
;; 394 succs { 578 395 }
;; 395 succs { 396 397 }
;; 396 succs { 578 400 }
;; 397 succs { 578 398 }
;; 398 succs { 578 399 }
;; 399 succs { 578 400 }
;; 400 succs { 578 401 }
;; 401 succs { 578 402 }
;; 402 succs { 578 403 }
;; 403 succs { 426 }
;; 404 succs { 405 426 }
;; 405 succs { 406 426 }
;; 406 succs { 407 426 }
;; 407 succs { 408 426 }
;; 408 succs { 409 426 }
;; 409 succs { 410 426 }
;; 410 succs { 590 411 }
;; 411 succs { 412 426 }
;; 412 succs { 584 413 }
;; 413 succs { 581 414 }
;; 414 succs { 415 416 }
;; 415 succs { 584 420 }
;; 416 succs { 584 417 }
;; 417 succs { 582 418 }
;; 418 succs { 582 419 }
;; 419 succs { 584 420 }
;; 420 succs { 584 421 }
;; 421 succs { 584 422 }
;; 422 succs { 584 423 }
;; 423 succs { 584 424 }
;; 424 succs { 583 425 }
;; 425 succs { 426 }
;; 426 succs { 427 438 }
;; 427 succs { 428 438 }
;; 428 succs { 587 429 }
;; 429 succs { 430 431 }
;; 430 succs { 587 434 }
;; 431 succs { 587 432 }
;; 432 succs { 587 433 }
;; 433 succs { 587 434 }
;; 434 succs { 587 435 }
;; 435 succs { 587 436 }
;; 436 succs { 587 437 }
;; 437 succs { 438 }
;; 438 succs { 498 }
;; 439 succs { 440 485 }
;; 440 succs { 441 472 }
;; 441 succs { 442 461 }
;; 442 succs { 443 472 }
;; 443 succs { 444 472 }
;; 444 succs { 445 472 }
;; 445 succs { 603 446 }
;; 446 succs { 447 472 }
;; 447 succs { 594 448 }
;; 448 succs { 591 449 }
;; 449 succs { 450 451 }
;; 450 succs { 594 455 }
;; 451 succs { 594 452 }
;; 452 succs { 592 453 }
;; 453 succs { 592 454 }
;; 454 succs { 594 455 }
;; 455 succs { 594 456 }
;; 456 succs { 594 457 }
;; 457 succs { 594 458 }
;; 458 succs { 594 459 }
;; 459 succs { 593 460 }
;; 460 succs { 472 }
;; 461 succs { 462 472 }
;; 462 succs { 597 463 }
;; 463 succs { 464 465 }
;; 464 succs { 597 468 }
;; 465 succs { 597 466 }
;; 466 succs { 597 467 }
;; 467 succs { 597 468 }
;; 468 succs { 597 469 }
;; 469 succs { 597 470 }
;; 470 succs { 597 471 }
;; 471 succs { 472 }
;; 472 succs { 473 484 }
;; 473 succs { 474 484 }
;; 474 succs { 600 475 }
;; 475 succs { 476 477 }
;; 476 succs { 600 480 }
;; 477 succs { 600 478 }
;; 478 succs { 600 479 }
;; 479 succs { 600 480 }
;; 480 succs { 600 481 }
;; 481 succs { 600 482 }
;; 482 succs { 600 483 }
;; 483 succs { 484 }
;; 484 succs { 498 }
;; 485 succs { 486 498 }
;; 486 succs { 606 487 }
;; 487 succs { 604 488 }
;; 488 succs { 489 490 }
;; 489 succs { 604 493 }
;; 490 succs { 604 491 }
;; 491 succs { 604 492 }
;; 492 succs { 604 493 }
;; 493 succs { 604 494 }
;; 494 succs { 604 495 }
;; 495 succs { 604 496 }
;; 496 succs { 604 497 }
;; 497 succs { 498 }
;; 498 succs { 499 }
;; 499 succs { 1 }
;; 500 succs { 501 }
;; 501 succs { 502 }
;; 502 succs { 503 }
;; 503 succs { }
;; 504 succs { 507 }
;; 505 succs { 507 }
;; 506 succs { 507 }
;; 507 succs { 508 }
;; 508 succs { 509 }
;; 509 succs { 510 }
;; 510 succs { 511 }
;; 511 succs { 512 }
;; 512 succs { 513 }
;; 513 succs { }
;; 514 succs { 515 }
;; 515 succs { 516 }
;; 516 succs { 517 }
;; 517 succs { }
;; 518 succs { 519 }
;; 519 succs { 520 }
;; 520 succs { }
;; 521 succs { 522 }
;; 522 succs { 523 }
;; 523 succs { 524 }
;; 524 succs { }
;; 525 succs { 526 }
;; 526 succs { 527 }
;; 527 succs { }
;; 528 succs { 529 }
;; 529 succs { 530 }
;; 530 succs { }
;; 531 succs { 532 }
;; 532 succs { 533 }
;; 533 succs { 534 }
;; 534 succs { 543 }
;; 535 succs { 537 }
;; 536 succs { 537 }
;; 537 succs { 538 }
;; 538 succs { 539 }
;; 539 succs { 543 }
;; 540 succs { 541 }
;; 541 succs { 542 }
;; 542 succs { 543 }
;; 543 succs { }
;; 544 succs { 545 }
;; 545 succs { 546 }
;; 546 succs { 607 }
;; 547 succs { 548 }
;; 548 succs { 549 }
;; 549 succs { 607 }
;; 550 succs { 551 }
;; 551 succs { 552 }
;; 552 succs { 607 }
;; 553 succs { 554 }
;; 554 succs { 555 }
;; 555 succs { 607 }
;; 556 succs { 559 }
;; 557 succs { 559 }
;; 558 succs { 559 }
;; 559 succs { 560 }
;; 560 succs { 561 }
;; 561 succs { 562 }
;; 562 succs { 607 }
;; 563 succs { 564 }
;; 564 succs { 565 }
;; 565 succs { 607 }
;; 566 succs { 567 }
;; 567 succs { 568 }
;; 568 succs { 607 }
;; 569 succs { 570 }
;; 570 succs { 571 }
;; 571 succs { 607 }
;; 572 succs { 575 }
;; 573 succs { 575 }
;; 574 succs { 575 }
;; 575 succs { 576 }
;; 576 succs { 577 }
;; 577 succs { 590 }
;; 578 succs { 579 }
;; 579 succs { 580 }
;; 580 succs { 590 }
;; 581 succs { 584 }
;; 582 succs { 584 }
;; 583 succs { 584 }
;; 584 succs { 585 }
;; 585 succs { 586 }
;; 586 succs { 590 }
;; 587 succs { 588 }
;; 588 succs { 589 }
;; 589 succs { 590 }
;; 590 succs { 607 }
;; 591 succs { 594 }
;; 592 succs { 594 }
;; 593 succs { 594 }
;; 594 succs { 595 }
;; 595 succs { 596 }
;; 596 succs { 603 }
;; 597 succs { 598 }
;; 598 succs { 599 }
;; 599 succs { 603 }
;; 600 succs { 601 }
;; 601 succs { 602 }
;; 602 succs { 603 }
;; 603 succs { 607 }
;; 604 succs { 605 }
;; 605 succs { 606 }
;; 606 succs { 607 }
;; 607 succs { }
void collect_FunctionMapping_Assign (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb, struct ptb * ptable)
{
  struct function * D.250653;
  union tree_node * D.250652;
  struct function_assign_array * D.250651;
  struct function_assign_array * D.250650;
  struct function * D.250645;
  struct function_assign_array * D.250644;
  struct function_assign_array * D.250643;
  struct function * D.250639;
  struct function_assign_array * D.250638;
  struct function_assign_array * D.250637;
  union tree_node * D.250632;
  struct function * D.250631;
  union tree_node * D.250630;
  struct function_assign_array * D.250628;
  union tree_node * D.250627;
  struct function_assign_array * D.250625;
  union tree_node * D.250624;
  union tree_node * D.250623;
  struct function * D.250618;
  struct function_assign_array * D.250617;
  struct function_assign_array * D.250616;
  union tree_node * D.250611;
  struct function * D.250610;
  union tree_node * D.250609;
  struct function_assign_array * D.250607;
  union tree_node * D.250606;
  struct function_assign_array * D.250604;
  union tree_node * D.250603;
  union tree_node * D.250602;
  struct function * D.250598;
  struct function_assign_array * D.250597;
  struct function_assign_array * D.250596;
  union tree_node * D.250591;
  struct function * D.250590;
  union tree_node * D.250589;
  struct function_assign_array * D.250587;
  union tree_node * D.250586;
  struct function_assign_array * D.250584;
  union tree_node * D.250583;
  union tree_node * D.250582;
  struct function * D.250578;
  union tree_node * D.250577;
  struct function_assign_array * D.250576;
  struct function_assign_array * D.250575;
  struct function * D.250571;
  struct function_assign_array * D.250570;
  struct function_assign_array * D.250569;
  struct function * D.250565;
  union tree_node * D.250564;
  struct function_assign_array * D.250563;
  struct function_assign_array * D.250562;
  union tree_node * D.250556;
  struct function * D.250555;
  union tree_node * D.250554;
  struct function_assign_array * D.250552;
  union tree_node * D.250551;
  struct function_assign_array * D.250549;
  union tree_node * D.250548;
  union tree_node * D.250547;
  union tree_node * D.250546;
  struct function * D.250542;
  union tree_node * D.250541;
  struct function_assign_array * D.250540;
  struct function_assign_array * D.250539;
  union tree_node * D.250538;
  struct function * D.250534;
  union tree_node * D.250533;
  union tree_node * D.250532;
  struct function_assign_array * D.250531;
  struct function_assign_array * D.250530;
  struct function * D.250526;
  union tree_node * D.250525;
  union tree_node * D.250524;
  struct function_assign_array * D.250523;
  struct function_assign_array * D.250522;
  struct function * D.250518;
  union tree_node * D.250517;
  union tree_node * D.250516;
  struct function_assign_array * D.250515;
  struct function_assign_array * D.250514;
  union tree_node * D.250513;
  union tree_node * D.250512;
  union tree_node * D.250511;
  union tree_node * D.250510;
  struct function * D.250501;
  struct function_return_array * D.250500;
  struct function_return_array * D.250499;
  struct function * D.250498;
  struct function_return_array * D.250497;
  unsigned int D.250496;
  union tree_node * D.250495;
  union tree_node * D.250494;
  unsigned int D.250493;
  union tree_node * D.250492;
  union tree_node * D.250491;
  union tree_node * D.250490;
  const char * D.250489;
  union tree_node * D.250488;
  union tree_node * D.250487;
  union tree_node * D.250483;
  struct function * D.250482;
  union tree_node * D.250481;
  struct function_assign_array * D.250479;
  union tree_node * D.250478;
  struct function_assign_array * D.250476;
  union tree_node * D.250475;
  union tree_node * D.250474;
  unsigned int D.250473;
  unsigned int D.250472;
  struct function * D.250467;
  union tree_node * D.250466;
  struct function_assign_array * D.250465;
  struct function_assign_array * D.250464;
  union tree_node * D.250463;
  union tree_node * D.250462;
  union tree_node * D.250461;
  union tree_node * D.250460;
  union tree_node * D.250459;
  union tree_node * D.250455;
  struct function_pthread_exit_array * D.250454;
  struct function_pthread_exit_array * D.250453;
  struct function * D.250452;
  union tree_node * D.250448;
  struct function_pthread_detched_array * D.250447;
  struct function_pthread_detched_array * D.250446;
  struct function * D.250445;
  struct function * D.250440;
  union tree_node * D.250439;
  struct function_assign_array * D.250438;
  struct function_assign_array * D.250437;
  union tree_node * D.250436;
  union tree_node * D.250435;
  struct function * D.250434;
  union tree_node * D.250433;
  struct function_assign_array * D.250432;
  struct function_assign_array * D.250431;
  union tree_node * D.250430;
  struct function * D.250426;
  union tree_node * D.250425;
  struct function_return_array * D.250424;
  struct function_return_array * D.250423;
  struct function * D.250422;
  struct function * D.250417;
  union tree_node * D.250416;
  union tree_node * D.250407;
  struct function * D.250406;
  union tree_node * D.250405;
  struct function_assign_array * D.250403;
  union tree_node * D.250402;
  struct function_assign_array * D.250400;
  union tree_node * D.250399;
  union tree_node * D.250398;
  union tree_node * D.250397;
  union tree_node * D.250396;
  union tree_node * D.250395;
  union tree_node * D.250394;
  struct function_free_array * D.250393;
  struct function_free_array * D.250392;
  struct function * D.250391;
  union tree_node * D.250390;
  struct function * D.250385;
  union tree_node * D.250384;
  struct function_assign_array * D.250383;
  struct function_assign_array * D.250382;
  union tree_node * D.250381;
  union tree_node * D.250380;
  union tree_node * D.250379;
  const char * D.250378;
  union tree_node * D.250377;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * four;
  union tree_node * three;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * second;
  union tree_node * t2;
  struct ptb * table1;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * getFunctionAssignLHS;
  union tree_node * getFunctionAssignRHS;
  struct return_type ret_type;
  struct function_return_array fun_array;
  struct vector ret_type_array;
  union tree_node * getFucntionDecl;
  int i;
  size_t found;
  int i;
  int find;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getVARDECLtree;
  int i;
  union tree_node * getreturnFucntionDecl;
  union tree_node * checklhstree;
  union tree_node * getVARDECLtree;
  struct pthread_exit_type pthread_exit_type;
  struct vector pthread_exit_array;
  struct function_pthread_exit_array fun_array;
  union tree_node * getFucntionDecl;
  struct pthread_detched_type pthread_detched_type;
  struct vector pthread_detched_array;
  struct function_pthread_detched_array fun_array;
  union tree_node * getFucntionDecl;
  struct assign_type assign_type;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignRHS;
  struct return_type ret_type;
  union tree_node * getFucntionDecl;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_arg_tree;
  struct function_return_array fun_array;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct free_type free_type;
  struct function_free_array fun_array;
  struct vector free_type_array;
  union tree_node * getFucntionDecl;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * get_function_return_tree;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.920;
  bool retval.913;
  bool retval.906;
  union tree_node * const D.195729;
  union tree_node * const D.195727;
  union tree_node * const D.195726;
  bool retval.901;
  bool retval.900;
  bool retval.899;
  bool retval.888;
  union tree_node * const D.195716;
  union tree_node * const D.195714;
  union tree_node * const D.195713;
  bool retval.882;
  bool retval.881;
  bool retval.880;
  bool retval.872;
  union tree_node * const D.195704;
  union tree_node * const D.195702;
  union tree_node * const D.195701;
  bool retval.867;
  bool retval.866;
  bool retval.865;
  bool retval.855;
  union tree_node * iftmp.852;
  union tree_node * iftmp.847;
  bool retval.844;
  bool retval.839;
  union tree_node * const D.195679;
  union tree_node * const D.195677;
  union tree_node * const D.195676;
  bool retval.832;
  bool retval.831;
  bool retval.830;
  bool retval.825;
  bool retval.820;
  bool retval.814;
  bool retval.809;
  bool iftmp.805;
  bool retval.804;
  bool retval.803;
  bool retval.798;
  bool retval.796;
  bool retval.793;
  bool retval.790;
  bool retval.789;
  bool retval.788;
  bool retval.787;
  bool retval.786;
  bool retval.785;
  struct expanded_location D.195645;
  bool retval.783;
  struct expanded_location D.195642;
  bool retval.781;
  union tree_node * const D.195635;
  union tree_node * const D.195634;
  bool retval.776;
  bool retval.775;
  bool retval.774;
  bool retval.772;
  bool retval.767;
  bool retval.763;
  bool iftmp.760;
  bool retval.759;
  bool retval.755;
  bool retval.751;
  bool retval.747;
  bool retval.745;
  bool retval.741;
  bool retval.734;
  union tree_node * const D.195226;
  union tree_node * const D.195224;
  union tree_node * const D.195223;
  bool retval.729;
  bool retval.728;
  bool retval.727;
  bool retval.726;
  bool retval.722;
  bool retval.721;
  bool retval.717;
  bool retval.716;
  bool retval.715;

  <bb 2> :
  loc = gimple_location_safe (gc);
  _1 = gimple_code (gc);
  retval.715 = _1 == 8;
  if (retval.715 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 234>; [INV]

  <bb 3> :
  D.250377 = gimple_call_fn (gc);
  _2 = D.250377;
  D.250378 = get_name (_2);
  name = D.250378;
  D.250379 = gimple_call_fn (gc);
  get_function_return_tree = D.250379;
  _3 = get_function_return_tree->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 499>; [INV]

  <bb 5> :
  if (name != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 6> :
  _4 = strcmp (name, "printf");
  if (_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 7> :
  _5 = strcmp (name, "free");
  if (_5 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _6 = strcmp (name, "xfree");
  if (_6 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _7 = strcmp (name, "realloc");
  if (_7 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 10> :
  D.250380 = gimple_call_arg (gc, 0);
  _8 = D.250380;
  _9 = _8->base.code;
  retval.716 = _9 == 131;
  if (retval.716 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 11> :
  D.250381 = gimple_call_arg (gc, 0);

  <bb 12> :
  _10 = D.250381;
  _11 = _10->exp.operands[0];
  second = _11;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.718_12 = function_assign_collect;
  D.250382 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.718_12, &second);

  <bb 13> :
  _13 = D.250382;
  retval.717 = _13 == 0B;
  if (retval.717 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 18>; [INV]

  <bb 15> :
  function_assign_collect.719_14 = function_assign_collect;
  D.250383 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.719_14, &second);

  <bb 16> :
  _15 = D.250383;
  function_assign_array::operator= (&assign_array, _15);

  <bb 17> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 18> :
  assign_type.stmt = gc;
  D.250384 = gimple_call_arg (gc, 0);

  <bb 19> :
  _16 = D.250384;
  assign_type.assign_tree = _16;
  D.250385 = cgraph_node::get_fun (node);

  <bb 20> :
  _17 = D.250385;
  _18 = _17->decl;
  assign_type.form_tree = _18;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 21> :
  function_assign_collect.720_19 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.720_19, &second, &assign_array);

  <bb 22> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  goto <bb 59>; [INV]

  <bb 23> :
  D.250390 = gimple_call_arg (gc, 0);
  _20 = D.250390;
  _21 = _20->base.code;
  retval.721 = _21 == 153;
  if (retval.721 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 24> :
  D.250391 = cgraph_node::get_fun (node);

  <bb 25> :
  _22 = D.250391;
  _23 = _22->decl;
  getFucntionDecl = _23;
  std::vector<free_type>::vector (&free_type_array);
  function_free_array::function_free_array (&fun_array);
  function_free_collect.723_24 = function_free_collect;
  D.250392 = hash_map<tree_node*, function_free_array>::get (function_free_collect.723_24, &getFucntionDecl);

  <bb 26> :
  _25 = D.250392;
  retval.722 = _25 == 0B;
  if (retval.722 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  std::vector<free_type>::operator= (&fun_array.free_type_array, &free_type_array);
  goto <bb 31>; [INV]

  <bb 28> :
  function_free_collect.724_26 = function_free_collect;
  D.250393 = hash_map<tree_node*, function_free_array>::get (function_free_collect.724_26, &getFucntionDecl);

  <bb 29> :
  _27 = D.250393;
  function_free_array::operator= (&fun_array, _27);

  <bb 30> :
  std::vector<free_type>::operator= (&free_type_array, &fun_array.free_type_array);

  <bb 31> :
  free_type::free_type (&free_type);
  free_type.stmt = gc;
  D.250394 = gimple_call_arg (gc, 0);

  <bb 32> :
  _28 = D.250394;
  free_type.free_tree = _28;
  std::vector<free_type>::push_back (&fun_array.free_type_array, &free_type);

  <bb 33> :
  function_free_collect.725_29 = function_free_collect;
  hash_map<tree_node*, function_free_array>::put (function_free_collect.725_29, &getFucntionDecl, &fun_array);

  <bb 34> :
  D.250395 = gimple_call_arg (gc, 0);

  <bb 35> :
  _30 = D.250395;
  _31 = _30->base.code;
  retval.726 = _31 == 153;
  if (retval.726 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 36> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  D.250396 = gimple_call_arg (gc, 0);

  <bb 37> :
  _32 = D.250396;
  def_stmt = _32->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 38>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 38> :
  retval.727 = is_gimple_assign (def_stmt);
  if (retval.727 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 39> :
  D.250397 = gimple_assign_rhs1 (def_stmt);

  <bb 40> :
  _33 = D.250397;
  _34 = _33->base.code;
  retval.728 = _34 == 36;
  if (retval.728 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 41> :
  D.250398 = gimple_assign_rhs1 (def_stmt);

  <bb 42> :
  _35 = D.250398;
  debug_tree (_35);

  <bb 43> :
  function_assign_collect.730_36 = function_assign_collect;
  D.250399 = gimple_assign_rhs1 (def_stmt);

  <bb 44> :
  _37 = D.250399;
  D.195223 = _37;
  D.250400 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.730_36, &D.195223);

  <bb 45> :
  _38 = D.250400;
  retval.729 = _38 == 0B;
  D.195223 = {CLOBBER};
  if (retval.729 != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 46> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 51>; [INV]

  <bb 47> :
  function_assign_collect.731_39 = function_assign_collect;
  D.250402 = gimple_assign_rhs1 (def_stmt);

  <bb 48> :
  _40 = D.250402;
  D.195224 = _40;
  D.250403 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.731_39, &D.195224);

  <bb 49> :
  _41 = D.250403;
  function_assign_array::operator= (&assign_array, _41);

  <bb 50> :
  D.195224 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 51> :
  assign_type.stmt = gc;
  D.250405 = gimple_call_arg (gc, 0);

  <bb 52> :
  _42 = D.250405;
  assign_type.assign_tree = _42;
  D.250406 = cgraph_node::get_fun (node);

  <bb 53> :
  _43 = D.250406;
  _44 = _43->decl;
  assign_type.form_tree = _44;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 54> :
  function_assign_collect.732_45 = function_assign_collect;
  D.250407 = gimple_assign_rhs1 (def_stmt);

  <bb 55> :
  _46 = D.250407;
  D.195226 = _46;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.732_45, &D.195226, &assign_array);

  <bb 56> :
  D.195226 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 57> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 58> :
  function_free_array::~function_free_array (&fun_array);
  std::vector<free_type>::~vector (&free_type_array);
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};

  <bb 59> :
  goto <bb 233>; [INV]

  <bb 60> :
  _47 = strcmp (name, "exit");
  if (_47 == 0)
    goto <bb 61>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 61> :
  function_return_array::function_return_array (&fun_array);
  D.250416 = gimple_call_arg (gc, 0);

  <bb 62> :
  get_function_arg_tree = D.250416;
  std::vector<return_type>::vector (&ret_type_array);
  if (get_function_return_tree != 0B)
    goto <bb 63>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 63> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 64> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 65> :
  function_return_collect.733_48 = function_return_collect;
  D.250417 = cgraph_node::get_fun (node);

  <bb 66> :
  _49 = D.250417;
  _50 = &_49->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.733_48, _50, &fun_array);

  <bb 67> :
  ret_type = {CLOBBER};

  <bb 68> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 69> :
  _51 = strcmp (name, "pthread_mutex_lock");
  if (_51 == 0)
    goto <bb 71>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 70> :
  _52 = strcmp (name, "pthread_mutex_unlock");
  if (_52 == 0)
    goto <bb 71>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 71> :
  function_return_array::function_return_array (&fun_array);
  std::vector<return_type>::vector (&ret_type_array);
  D.250422 = cgraph_node::get_fun (node);

  <bb 72> :
  _53 = D.250422;
  _54 = _53->decl;
  getFucntionDecl = _54;
  function_return_collect.735_55 = function_return_collect;
  D.250423 = hash_map<tree_node*, function_return_array>::get (function_return_collect.735_55, &getFucntionDecl);

  <bb 73> :
  _56 = D.250423;
  retval.734 = _56 == 0B;
  if (retval.734 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 77>; [INV]

  <bb 75> :
  function_return_collect.736_57 = function_return_collect;
  D.250424 = hash_map<tree_node*, function_return_array>::get (function_return_collect.736_57, &getFucntionDecl);

  <bb 76> :
  _58 = D.250424;
  function_return_array::operator= (&fun_array, _58);

  <bb 77> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  D.250425 = gimple_call_arg (gc, 0);

  <bb 78> :
  _59 = D.250425;
  ret_type.return_tree = _59;
  FUNCITON_THREAD.737_60 = FUNCITON_THREAD;
  FUNCITON_THREAD.738_61 = (int) FUNCITON_THREAD.737_60;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.738_61;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 79> :
  function_return_collect.739_62 = function_return_collect;
  D.250426 = cgraph_node::get_fun (node);

  <bb 80> :
  _63 = D.250426;
  _64 = &_63->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.739_62, _64, &fun_array);

  <bb 81> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 82> :
  _65 = strcmp (name, "pthread_create");
  if (_65 == 0)
    goto <bb 83>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 83> :
  D.250430 = gimple_call_arg (gc, 0);

  <bb 84> :
  _66 = D.250430;
  getFunctionAssignRHS = _66;
  getFunctionAssignRHS.740_67 = getFunctionAssignRHS;
  _68 = getFunctionAssignRHS.740_67->exp.operands[0];
  getFunctionAssignRHS = _68;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.742_69 = function_assign_collect;
  D.250431 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.742_69, &getFunctionAssignRHS);

  <bb 85> :
  _70 = D.250431;
  retval.741 = _70 == 0B;
  if (retval.741 != 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 90>; [INV]

  <bb 87> :
  function_assign_collect.743_71 = function_assign_collect;
  D.250432 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.743_71, &getFunctionAssignRHS);

  <bb 88> :
  _72 = D.250432;
  function_assign_array::operator= (&assign_array, _72);

  <bb 89> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 90> :
  assign_type.stmt = gc;
  D.250433 = gimple_call_arg (gc, 0);

  <bb 91> :
  _73 = D.250433;
  assign_type.assign_tree = _73;
  D.250434 = cgraph_node::get_fun (node);

  <bb 92> :
  _74 = D.250434;
  _75 = _74->decl;
  assign_type.form_tree = _75;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 93> :
  function_assign_collect.744_76 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.744_76, &getFunctionAssignRHS, &assign_array);

  <bb 94> :
  D.250435 = gimple_call_arg (gc, 3);

  <bb 95> :
  _77 = D.250435;
  retval.745 = _77 != 0B;
  if (retval.745 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 96> :
  D.250436 = gimple_call_arg (gc, 3);

  <bb 97> :
  _78 = D.250436;
  getFunctionAssignRHS = _78;
  getFunctionAssignRHS.746_79 = getFunctionAssignRHS;
  _80 = getFunctionAssignRHS.746_79->exp.operands[0];
  getFunctionAssignRHS = _80;
  function_assign_collect.748_81 = function_assign_collect;
  D.250437 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.748_81, &getFunctionAssignRHS);

  <bb 98> :
  _82 = D.250437;
  retval.747 = _82 == 0B;
  if (retval.747 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 103>; [INV]

  <bb 100> :
  function_assign_collect.749_83 = function_assign_collect;
  D.250438 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.749_83, &getFunctionAssignRHS);

  <bb 101> :
  _84 = D.250438;
  function_assign_array::operator= (&assign_array, _84);

  <bb 102> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 103> :
  assign_type.stmt = gc;
  D.250439 = gimple_call_arg (gc, 3);

  <bb 104> :
  _85 = D.250439;
  assign_type.assign_tree = _85;
  D.250440 = cgraph_node::get_fun (node);

  <bb 105> :
  _86 = D.250440;
  _87 = _86->decl;
  assign_type.form_tree = _87;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 106> :
  function_assign_collect.750_88 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.750_88, &getFunctionAssignRHS, &assign_array);

  <bb 107> :
  assign_type = {CLOBBER};

  <bb 108> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignRHS = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 109> :
  _89 = strcmp (name, "pthread_detach");
  if (_89 == 0)
    goto <bb 110>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 110> :
  D.250445 = cgraph_node::get_fun (node);

  <bb 111> :
  _90 = D.250445;
  _91 = _90->decl;
  getFucntionDecl = _91;
  function_pthread_detched_array::function_pthread_detched_array (&fun_array);
  std::vector<pthread_detched_type>::vector (&pthread_detched_array);
  function_pthread_detched_collect.752_92 = function_pthread_detched_collect;
  D.250446 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.752_92, &getFucntionDecl);

  <bb 112> :
  _93 = D.250446;
  retval.751 = _93 == 0B;
  if (retval.751 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 113> :
  std::vector<pthread_detched_type>::operator= (&fun_array.pthread_detched_array, &pthread_detched_array);
  goto <bb 117>; [INV]

  <bb 114> :
  function_pthread_detched_collect.753_94 = function_pthread_detched_collect;
  D.250447 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.753_94, &getFucntionDecl);

  <bb 115> :
  _95 = D.250447;
  function_pthread_detched_array::operator= (&fun_array, _95);

  <bb 116> :
  std::vector<pthread_detched_type>::operator= (&pthread_detched_array, &fun_array.pthread_detched_array);

  <bb 117> :
  pthread_detched_type.stmt = gc;
  D.250448 = gimple_call_arg (gc, 0);

  <bb 118> :
  _96 = D.250448;
  pthread_detched_type.pthread_detched_tree = _96;
  std::vector<pthread_detched_type>::push_back (&fun_array.pthread_detched_array, &pthread_detched_type);

  <bb 119> :
  function_pthread_detched_collect.754_97 = function_pthread_detched_collect;
  hash_map<tree_node*, function_pthread_detched_array>::put (function_pthread_detched_collect.754_97, &getFucntionDecl, &fun_array);

  <bb 120> :
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 121> :
  _98 = strcmp (name, "pthread_exit");
  if (_98 == 0)
    goto <bb 122>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 122> :
  D.250452 = cgraph_node::get_fun (node);

  <bb 123> :
  _99 = D.250452;
  _100 = _99->decl;
  getFucntionDecl = _100;
  function_pthread_exit_array::function_pthread_exit_array (&fun_array);
  std::vector<pthread_exit_type>::vector (&pthread_exit_array);
  function_pthread_exit_collect.756_101 = function_pthread_exit_collect;
  D.250453 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.756_101, &getFucntionDecl);

  <bb 124> :
  _102 = D.250453;
  retval.755 = _102 == 0B;
  if (retval.755 != 0)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  std::vector<pthread_exit_type>::operator= (&fun_array.pthread_exit_array, &pthread_exit_array);
  goto <bb 129>; [INV]

  <bb 126> :
  function_pthread_exit_collect.757_103 = function_pthread_exit_collect;
  D.250454 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.757_103, &getFucntionDecl);

  <bb 127> :
  _104 = D.250454;
  function_pthread_exit_array::operator= (&fun_array, _104);

  <bb 128> :
  std::vector<pthread_exit_type>::operator= (&pthread_exit_array, &fun_array.pthread_exit_array);

  <bb 129> :
  pthread_exit_type.stmt = gc;
  D.250455 = gimple_call_arg (gc, 0);

  <bb 130> :
  _105 = D.250455;
  pthread_exit_type.pthread_exit_tree = _105;
  std::vector<pthread_exit_type>::push_back (&fun_array.pthread_exit_array, &pthread_exit_type);

  <bb 131> :
  function_pthread_exit_collect.758_106 = function_pthread_exit_collect;
  hash_map<tree_node*, function_pthread_exit_array>::put (function_pthread_exit_collect.758_106, &getFucntionDecl, &fun_array);

  <bb 132> :
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 133> :
  debug_gimple_stmt (gc);

  <bb 134> :
  i = 0;
  goto <bb 160>; [INV]

  <bb 135> :
  i.761_107 = (unsigned int) i;
  D.250459 = gimple_call_arg (gc, i.761_107);

  <bb 136> :
  _108 = D.250459;
  _109 = _108->base.code;
  if (_109 == 131)
    goto <bb 139>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 137> :
  i.762_110 = (unsigned int) i;
  D.250460 = gimple_call_arg (gc, i.762_110);

  <bb 138> :
  _111 = D.250460;
  _112 = _111->base.code;
  if (_112 == 36)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
  iftmp.760 = 1;
  goto <bb 141>; [INV]

  <bb 140> :
  iftmp.760 = 0;

  <bb 141> :
  retval.759 = iftmp.760;
  if (retval.759 != 0)
    goto <bb 142>; [INV]
  else
    goto <bb 159>; [INV]

  <bb 142> :
  i.764_113 = (unsigned int) i;
  D.250461 = gimple_call_arg (gc, i.764_113);

  <bb 143> :
  _114 = D.250461;
  _115 = _114->base.code;
  retval.763 = _115 == 131;
  if (retval.763 != 0)
    goto <bb 144>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 144> :
  i.765_116 = (unsigned int) i;
  D.250462 = gimple_call_arg (gc, i.765_116);

  <bb 145> :
  _117 = D.250462;
  _118 = _117->exp.operands[0];
  getVARDECLtree = _118;
  goto <bb 148>; [INV]

  <bb 146> :
  i.766_119 = (unsigned int) i;
  D.250463 = gimple_call_arg (gc, i.766_119);

  <bb 147> :
  _120 = D.250463;
  getVARDECLtree = _120;

  <bb 148> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.768_121 = function_assign_collect;
  D.250464 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.768_121, &getVARDECLtree);

  <bb 149> :
  _122 = D.250464;
  retval.767 = _122 == 0B;
  if (retval.767 != 0)
    goto <bb 150>; [INV]
  else
    goto <bb 151>; [INV]

  <bb 150> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 154>; [INV]

  <bb 151> :
  function_assign_collect.769_123 = function_assign_collect;
  D.250465 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.769_123, &getVARDECLtree);

  <bb 152> :
  _124 = D.250465;
  function_assign_array::operator= (&assign_array, _124);

  <bb 153> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 154> :
  assign_type.stmt = gc;
  i.770_125 = (unsigned int) i;
  D.250466 = gimple_call_arg (gc, i.770_125);

  <bb 155> :
  _126 = D.250466;
  assign_type.assign_tree = _126;
  D.250467 = cgraph_node::get_fun (node);

  <bb 156> :
  _127 = D.250467;
  _128 = _127->decl;
  assign_type.form_tree = _128;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 157> :
  function_assign_collect.771_129 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.771_129, &getVARDECLtree, &assign_array);

  <bb 158> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 159> :
  getVARDECLtree = {CLOBBER};
  i = i + 1;

  <bb 160> :
  D.250472 = gimple_call_num_args (gc);

  <bb 161> :
  _130 = D.250472;
  i.773_131 = (unsigned int) i;
  retval.772 = _130 > i.773_131;
  if (retval.772 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 162> :
  D.250473 = gimple_call_num_args (gc);

  <bb 163> :
  _132 = D.250473;
  retval.774 = _132 != 0;
  if (retval.774 != 0)
    goto <bb 164>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 164> :
  D.250474 = gimple_call_arg (gc, 0);

  <bb 165> :
  _133 = D.250474;
  _134 = _133->base.code;
  retval.775 = _134 == 131;
  if (retval.775 != 0)
    goto <bb 166>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 166> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.777_135 = function_assign_collect;
  D.250475 = gimple_call_fn (gc);

  <bb 167> :
  _136 = D.250475;
  D.195634 = _136;
  D.250476 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.777_135, &D.195634);

  <bb 168> :
  _137 = D.250476;
  retval.776 = _137 == 0B;
  D.195634 = {CLOBBER};
  if (retval.776 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 174>; [INV]

  <bb 170> :
  function_assign_collect.778_138 = function_assign_collect;
  D.250478 = gimple_call_fn (gc);

  <bb 171> :
  _139 = D.250478;
  D.195635 = _139;
  D.250479 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.778_138, &D.195635);

  <bb 172> :
  _140 = D.250479;
  function_assign_array::operator= (&assign_array, _140);

  <bb 173> :
  D.195635 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 174> :
  assign_type.stmt = gc;
  D.250481 = gimple_call_arg (gc, 0);

  <bb 175> :
  _141 = D.250481;
  assign_type.assign_tree = _141;
  D.250482 = cgraph_node::get_fun (node);

  <bb 176> :
  _142 = D.250482;
  _143 = _142->decl;
  assign_type.form_tree = _143;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 177> :
  D.250483 = gimple_call_arg (gc, 0);

  <bb 178> :
  _144 = D.250483;
  _145 = _144->exp.operands[0];
  second = _145;
  second.779_146 = second;
  _147 = second.779_146->base.code;
  if (_147 == 36)
    goto <bb 179>; [INV]
  else
    goto <bb 180>; [INV]

  <bb 179> :
  function_assign_collect.780_148 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.780_148, &second, &assign_array);

  <bb 180> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};

  <bb 181> :
  D.250487 = gimple_call_lhs (gc);

  <bb 182> :
  checklhstree = D.250487;
  _149 = gimple_code (gc);
  retval.781 = _149 == 8;
  if (retval.781 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 183> :
  vscode_extensionmod.782_150 = vscode_extensionmod;
  if (vscode_extensionmod.782_150 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 184> :
  find = 0;
  i = 0;
  goto <bb 193>; [INV]

  <bb 185> :
  _151 = (long unsigned int) i;
  _152 = std::vector<breakpoint>::operator[] (&vbreakpoint, _151);
  _153 = &_152->name;
  D.195642 = expand_location (loc); [return slot optimization]

  <bb 186> :
  _154 = D.195642.file;
  found = std::__cxx11::basic_string<char>::find (_153, _154, 0);
  D.195642 = {CLOBBER};
  if (found != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 187> :
  _155 = (long unsigned int) i;
  _156 = std::vector<breakpoint>::operator[] (&vbreakpoint, _155);
  _157 = _156->line;
  D.195645 = expand_location (loc); [return slot optimization]

  <bb 188> :
  _158 = D.195645.line;
  retval.783 = _157 == _158;
  D.195645 = {CLOBBER};
  if (retval.783 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 189> :
  debug_gimple_stmt (gc);

  <bb 190> :
  _159 = (long unsigned int) i;
  _160 = std::vector<breakpoint>::operator[] (&vbreakpoint, _159);
  _161 = _160->line;
  _162 = (long unsigned int) i;
  _163 = std::vector<breakpoint>::operator[] (&vbreakpoint, _162);
  _164 = &_163->name;
  _165 = std::__cxx11::basic_string<char>::c_str (_164);
  stderr.784_166 = stderr;
  fprintf (stderr.784_166, "set breakpoint %s %d\n", _165, _161);

  <bb 191> :
  find = 1;

  <bb 192> :
  i = i + 1;

  <bb 193> :
  _167 = (long unsigned int) i;
  _168 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.785 = _167 < _168;
  if (retval.785 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 194> :
  if (find == 0)
    goto <bb 195>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 195> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 232>; [INV]

  <bb 196> :
  D.250488 = gimple_call_fn (gc);

  <bb 197> :
  _169 = D.250488;
  D.250489 = get_name (_169);

  <bb 198> :
  name = D.250489;
  if (name != 0B)
    goto <bb 199>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 199> :
  _170 = gimple_code (gc);
  retval.786 = _170 == 8;
  if (retval.786 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 200> :
  D.250490 = gimple_call_lhs (gc);

  <bb 201> :
  _171 = D.250490;
  retval.787 = _171 != 0B;
  if (retval.787 != 0)
    goto <bb 202>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 202> :
  D.250491 = gimple_call_lhs (gc);

  <bb 203> :
  _172 = D.250491;
  _173 = _172->base.code;
  retval.788 = _173 == 153;
  if (retval.788 != 0)
    goto <bb 204>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 204> :
  D.250492 = gimple_call_lhs (gc);

  <bb 205> :
  _174 = D.250492;
  set_ptb (bb, ptable, _174, loc, 0, gc, node);

  <bb 206> :
  D.250493 = gimple_call_num_args (gc);

  <bb 207> :
  _175 = D.250493;
  retval.789 = _175 != 0;
  if (retval.789 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 208> :
  i = 0;
  goto <bb 214>; [INV]

  <bb 209> :
  i.791_176 = (unsigned int) i;
  D.250494 = gimple_call_arg (gc, i.791_176);

  <bb 210> :
  _177 = D.250494;
  _178 = _177->base.code;
  retval.790 = _178 == 153;
  if (retval.790 != 0)
    goto <bb 211>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 211> :
  i.792_179 = (unsigned int) i;
  D.250495 = gimple_call_arg (gc, i.792_179);

  <bb 212> :
  _180 = D.250495;
  set_ptb (bb, ptable, _180, loc, 0, gc, node);

  <bb 213> :
  i = i + 1;

  <bb 214> :
  D.250496 = gimple_call_num_args (gc);

  <bb 215> :
  _181 = D.250496;
  i.794_182 = (unsigned int) i;
  retval.793 = _181 > i.794_182;
  if (retval.793 != 0)
    goto <bb 209>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 216> :
  _183 = get_function_return_tree->exp.operands[0];
  getreturnFucntionDecl = _183;
  getreturnFucntionDecl.795_184 = getreturnFucntionDecl;
  if (getreturnFucntionDecl.795_184 != 0B)
    goto <bb 217>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 217> :
  function_return_collect.797_185 = function_return_collect;
  D.250497 = hash_map<tree_node*, function_return_array>::get (function_return_collect.797_185, &getreturnFucntionDecl);

  <bb 218> :
  _186 = D.250497;
  retval.796 = _186 == 0B;
  if (retval.796 != 0)
    goto <bb 219>; [INV]
  else
    goto <bb 220>; [INV]

  <bb 219> :
  // predicted unlikely by early return (on trees) predictor.
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 232>; [INV]

  <bb 220> :
  D.250498 = cgraph_node::get_fun (node);

  <bb 221> :
  _187 = D.250498;
  _188 = _187->decl;
  getFucntionDecl = _188;
  std::vector<return_type>::vector (&ret_type_array);
  function_return_array::function_return_array (&fun_array);
  function_return_collect.799_189 = function_return_collect;
  D.250499 = hash_map<tree_node*, function_return_array>::get (function_return_collect.799_189, &getFucntionDecl);

  <bb 222> :
  _190 = D.250499;
  retval.798 = _190 == 0B;
  if (retval.798 != 0)
    goto <bb 223>; [INV]
  else
    goto <bb 224>; [INV]

  <bb 223> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 227>; [INV]

  <bb 224> :
  function_return_collect.800_191 = function_return_collect;
  D.250500 = hash_map<tree_node*, function_return_array>::get (function_return_collect.800_191, &getFucntionDecl);

  <bb 225> :
  _192 = D.250500;
  function_return_array::operator= (&fun_array, _192);

  <bb 226> :
  std::vector<return_type>::operator= (&ret_type_array, &fun_array.return_type_array);

  <bb 227> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  getreturnFucntionDecl.801_193 = getreturnFucntionDecl;
  ret_type.return_tree = getreturnFucntionDecl.801_193;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 228> :
  function_return_collect.802_194 = function_return_collect;
  D.250501 = cgraph_node::get_fun (node);

  <bb 229> :
  _195 = D.250501;
  _196 = &_195->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.802_194, _196, &fun_array);

  <bb 230> :
  function_return_array::~function_return_array (&fun_array);
  std::vector<return_type>::~vector (&ret_type_array);
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};

  <bb 231> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 232> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 499>; [INV]

  <bb 233> :
  goto <bb 499>; [INV]

  <bb 234> :
  _197 = gimple_code (gc);
  retval.803 = _197 == 6;
  if (retval.803 != 0)
    goto <bb 235>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 235> :
  D.250510 = gimple_assign_lhs (gc);

  <bb 236> :
  _198 = D.250510;
  if (_198 == 0B)
    goto <bb 239>; [INV]
  else
    goto <bb 237>; [INV]

  <bb 237> :
  D.250511 = gimple_assign_rhs1 (gc);

  <bb 238> :
  _199 = D.250511;
  if (_199 == 0B)
    goto <bb 239>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 239> :
  iftmp.805 = 1;
  goto <bb 241>; [INV]

  <bb 240> :
  iftmp.805 = 0;

  <bb 241> :
  retval.804 = iftmp.805;
  if (retval.804 != 0)
    goto <bb 242>; [INV]
  else
    goto <bb 243>; [INV]

  <bb 242> :
  // predicted unlikely by early return (on trees) predictor.
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  goto <bb 499>; [INV]

  <bb 243> :
  D.250512 = gimple_assign_rhs1 (gc);

  <bb 244> :
  _200 = D.250512;
  getFunctionAssignRHS = _200;
  D.250513 = gimple_assign_lhs (gc);

  <bb 245> :
  _201 = D.250513;
  getFunctionAssignLHS = _201;
  getFunctionAssignLHS.806_202 = getFunctionAssignLHS;
  _203 = getFunctionAssignLHS.806_202->base.code;
  if (_203 == 36)
    goto <bb 246>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 246> :
  getFunctionAssignRHS.807_204 = getFunctionAssignRHS;
  _205 = getFunctionAssignRHS.807_204->base.code;
  if (_205 == 131)
    goto <bb 247>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 247> :
  getFunctionAssignRHS.808_206 = getFunctionAssignRHS;
  second = getFunctionAssignRHS.808_206->exp.operands[0];
  _207 = second->base.code;
  if (_207 == 36)
    goto <bb 248>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 248> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.810_208 = function_assign_collect;
  D.250514 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.810_208, &getFunctionAssignLHS);

  <bb 249> :
  _209 = D.250514;
  retval.809 = _209 == 0B;
  if (retval.809 != 0)
    goto <bb 250>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 250> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 254>; [INV]

  <bb 251> :
  function_assign_collect.811_210 = function_assign_collect;
  D.250515 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.811_210, &getFunctionAssignLHS);

  <bb 252> :
  _211 = D.250515;
  function_assign_array::operator= (&assign_array, _211);

  <bb 253> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 254> :
  D.250516 = gimple_call_lhs (gc);

  <bb 255> :
  function_return_lhstree = D.250516;
  assign_type.stmt = gc;
  D.250517 = gimple_assign_lhs (gc);

  <bb 256> :
  _212 = D.250517;
  assign_type.assign_tree = _212;
  D.250518 = cgraph_node::get_fun (node);

  <bb 257> :
  _213 = D.250518;
  _214 = _213->decl;
  assign_type.form_tree = _214;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 258> :
  function_assign_collect.812_215 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.812_215, &getFunctionAssignLHS, &assign_array);

  <bb 259> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 260> :
  getFunctionAssignRHS.813_216 = getFunctionAssignRHS;
  _217 = getFunctionAssignRHS.813_216->base.code;
  if (_217 == 153)
    goto <bb 261>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 261> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.815_218 = function_assign_collect;
  D.250522 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.815_218, &getFunctionAssignLHS);

  <bb 262> :
  _219 = D.250522;
  retval.814 = _219 == 0B;
  if (retval.814 != 0)
    goto <bb 263>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 263> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 267>; [INV]

  <bb 264> :
  function_assign_collect.816_220 = function_assign_collect;
  D.250523 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.816_220, &getFunctionAssignLHS);

  <bb 265> :
  _221 = D.250523;
  function_assign_array::operator= (&assign_array, _221);

  <bb 266> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 267> :
  D.250524 = gimple_assign_rhs1 (gc);

  <bb 268> :
  function_return_lhstree = D.250524;
  assign_type.stmt = gc;
  D.250525 = gimple_assign_rhs1 (gc);

  <bb 269> :
  _222 = D.250525;
  assign_type.assign_tree = _222;
  D.250526 = cgraph_node::get_fun (node);

  <bb 270> :
  _223 = D.250526;
  _224 = _223->decl;
  assign_type.form_tree = _224;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 271> :
  function_assign_collect.817_225 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.817_225, &getFunctionAssignLHS, &assign_array);

  <bb 272> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 273> :
  getFunctionAssignRHS.818_226 = getFunctionAssignRHS;
  _227 = getFunctionAssignRHS.818_226->base.code;
  if (_227 == 36)
    goto <bb 274>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 274> :
  getFunctionAssignLHS.819_228 = getFunctionAssignLHS;
  _229 = getFunctionAssignLHS.819_228->base.code;
  if (_229 == 153)
    goto <bb 275>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 275> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.821_230 = function_assign_collect;
  D.250530 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.821_230, &getFunctionAssignRHS);

  <bb 276> :
  _231 = D.250530;
  retval.820 = _231 == 0B;
  if (retval.820 != 0)
    goto <bb 277>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 277> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 281>; [INV]

  <bb 278> :
  function_assign_collect.822_232 = function_assign_collect;
  D.250531 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.822_232, &getFunctionAssignRHS);

  <bb 279> :
  _233 = D.250531;
  function_assign_array::operator= (&assign_array, _233);

  <bb 280> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 281> :
  D.250532 = gimple_assign_lhs (gc);

  <bb 282> :
  function_return_lhstree = D.250532;
  assign_type.stmt = gc;
  D.250533 = gimple_assign_lhs (gc);

  <bb 283> :
  _234 = D.250533;
  assign_type.assign_tree = _234;
  D.250534 = cgraph_node::get_fun (node);

  <bb 284> :
  _235 = D.250534;
  _236 = _235->decl;
  assign_type.form_tree = _236;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 285> :
  function_assign_collect.823_237 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.823_237, &getFunctionAssignRHS, &assign_array);

  <bb 286> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 287> :
  getFunctionAssignLHS.824_238 = getFunctionAssignLHS;
  _239 = getFunctionAssignLHS.824_238->base.code;
  if (_239 == 165)
    goto <bb 288>; [INV]
  else
    goto <bb 323>; [INV]

  <bb 288> :
  D.250538 = gimple_assign_lhs (gc);

  <bb 289> :
  _240 = D.250538;
  first = _240->exp.operands[0];
  _241 = first->base.code;
  if (_241 == 131)
    goto <bb 290>; [INV]
  else
    goto <bb 301>; [INV]

  <bb 290> :
  _242 = first->exp.operands[0];
  second = _242;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.826_243 = function_assign_collect;
  D.250539 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.826_243, &second);

  <bb 291> :
  _244 = D.250539;
  retval.825 = _244 == 0B;
  if (retval.825 != 0)
    goto <bb 292>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 292> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 296>; [INV]

  <bb 293> :
  function_assign_collect.827_245 = function_assign_collect;
  D.250540 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.827_245, &second);

  <bb 294> :
  _246 = D.250540;
  function_assign_array::operator= (&assign_array, _246);

  <bb 295> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 296> :
  assign_type.stmt = gc;
  D.250541 = gimple_assign_lhs (gc);

  <bb 297> :
  _247 = D.250541;
  assign_type.assign_tree = _247;
  D.250542 = cgraph_node::get_fun (node);

  <bb 298> :
  _248 = D.250542;
  _249 = _248->decl;
  assign_type.form_tree = _249;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 299> :
  function_assign_collect.828_250 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.828_250, &second, &assign_array);

  <bb 300> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 301> :
  getFunctionAssignRHS.829_251 = getFunctionAssignRHS;
  _252 = getFunctionAssignRHS.829_251->base.code;
  if (_252 == 26)
    goto <bb 302>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 302> :
  second = 0B;
  D.250546 = gimple_assign_lhs (gc);

  <bb 303> :
  _253 = D.250546;
  second = _253->exp.operands[0];
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  _254 = second->base.code;
  if (_254 == 153)
    goto <bb 304>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 304> :
  def_stmt = second->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 305>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 305> :
  retval.830 = is_gimple_assign (def_stmt);
  if (retval.830 != 0)
    goto <bb 306>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 306> :
  D.250547 = gimple_assign_rhs1 (def_stmt);

  <bb 307> :
  _255 = D.250547;
  _256 = _255->base.code;
  retval.831 = _256 == 36;
  if (retval.831 != 0)
    goto <bb 308>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 308> :
  function_assign_collect.833_257 = function_assign_collect;
  D.250548 = gimple_assign_rhs1 (def_stmt);

  <bb 309> :
  _258 = D.250548;
  D.195676 = _258;
  D.250549 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.833_257, &D.195676);

  <bb 310> :
  _259 = D.250549;
  retval.832 = _259 == 0B;
  D.195676 = {CLOBBER};
  if (retval.832 != 0)
    goto <bb 311>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 311> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 316>; [INV]

  <bb 312> :
  function_assign_collect.834_260 = function_assign_collect;
  D.250551 = gimple_assign_rhs1 (def_stmt);

  <bb 313> :
  _261 = D.250551;
  D.195677 = _261;
  D.250552 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.834_260, &D.195677);

  <bb 314> :
  _262 = D.250552;
  function_assign_array::operator= (&assign_array, _262);

  <bb 315> :
  D.195677 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 316> :
  assign_type.stmt = gc;
  D.250554 = gimple_assign_lhs (gc);

  <bb 317> :
  _263 = D.250554;
  assign_type.assign_tree = _263;
  D.250555 = cgraph_node::get_fun (node);

  <bb 318> :
  _264 = D.250555;
  _265 = _264->decl;
  assign_type.form_tree = _265;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 319> :
  function_assign_collect.835_266 = function_assign_collect;
  D.250556 = gimple_assign_rhs1 (def_stmt);

  <bb 320> :
  _267 = D.250556;
  D.195679 = _267;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.835_266, &D.195679, &assign_array);

  <bb 321> :
  D.195679 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 322> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 323> :
  getFunctionAssignLHS.836_268 = getFunctionAssignLHS;
  _269 = getFunctionAssignLHS.836_268->base.code;
  if (_269 == 153)
    goto <bb 324>; [INV]
  else
    goto <bb 439>; [INV]

  <bb 324> :
  getFunctionAssignRHS.837_270 = getFunctionAssignRHS;
  _271 = getFunctionAssignRHS.837_270->base.code;
  if (_271 == 165)
    goto <bb 325>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 325> :
  getFunctionAssignRHS.838_272 = getFunctionAssignRHS;
  first = getFunctionAssignRHS.838_272->exp.operands[0];
  _273 = first->base.code;
  if (_273 == 131)
    goto <bb 326>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 326> :
  _274 = first->exp.operands[0];
  second = _274;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.840_275 = function_assign_collect;
  D.250562 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.840_275, &second);

  <bb 327> :
  _276 = D.250562;
  retval.839 = _276 == 0B;
  if (retval.839 != 0)
    goto <bb 328>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 328> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 332>; [INV]

  <bb 329> :
  function_assign_collect.841_277 = function_assign_collect;
  D.250563 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.841_277, &second);

  <bb 330> :
  _278 = D.250563;
  function_assign_array::operator= (&assign_array, _278);

  <bb 331> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 332> :
  assign_type.stmt = gc;
  D.250564 = gimple_assign_lhs (gc);

  <bb 333> :
  _279 = D.250564;
  assign_type.assign_tree = _279;
  D.250565 = cgraph_node::get_fun (node);

  <bb 334> :
  _280 = D.250565;
  _281 = _280->decl;
  assign_type.form_tree = _281;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 335> :
  function_assign_collect.842_282 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.842_282, &second, &assign_array);

  <bb 336> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 337> :
  getFunctionAssignRHS.843_283 = getFunctionAssignRHS;
  _284 = getFunctionAssignRHS.843_283->base.code;
  if (_284 == 36)
    goto <bb 338>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 338> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.845_285 = function_assign_collect;
  D.250569 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.845_285, &getFunctionAssignRHS);

  <bb 339> :
  _286 = D.250569;
  retval.844 = _286 == 0B;
  if (retval.844 != 0)
    goto <bb 340>; [INV]
  else
    goto <bb 341>; [INV]

  <bb 340> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 344>; [INV]

  <bb 341> :
  function_assign_collect.846_287 = function_assign_collect;
  D.250570 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.846_287, &getFunctionAssignRHS);

  <bb 342> :
  _288 = D.250570;
  function_assign_array::operator= (&assign_array, _288);

  <bb 343> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 344> :
  table1 = ptable;
  t2 = 0B;
  _289 = ptable->size;
  if (_289 >= 0)
    goto <bb 345>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 345> :
  if (table1 != 0B)
    goto <bb 346>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 346> :
  iftmp.847 = table1->target;
  goto <bb 348>; [INV]

  <bb 347> :
  iftmp.847 = 0B;

  <bb 348> :
  t2 = iftmp.847;
  goto <bb 357>; [INV]

  <bb 349> :
  _290 = table1->target;
  _291 = _290->base.code;
  if (_291 == 131)
    goto <bb 350>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 350> :
  _292 = table1->target;
  second = _292->exp.operands[0];
  getFunctionAssignRHS.848_293 = getFunctionAssignRHS;
  if (second == getFunctionAssignRHS.848_293)
    goto <bb 351>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 351> :
  _294 = table1->target;
  table1->swap_target = _294;
  _295 = table1->last_stmt;
  table1->swap_stmt = _295;
  getFunctionAssignLHS.849_296 = getFunctionAssignLHS;
  table1->target = getFunctionAssignLHS.849_296;
  table1->last_stmt = gc;
  FUNCITON_THREAD.850_297 = FUNCITON_THREAD;
  FUNCITON_THREAD.851_298 = (int) FUNCITON_THREAD.850_297;
  table1->swap_type = FUNCITON_THREAD.851_298;
  _299 = table1->last_stmt;
  assign_type.stmt = _299;
  _300 = table1->target;
  assign_type.assign_tree = _300;
  D.250571 = cgraph_node::get_fun (node);

  <bb 352> :
  _301 = D.250571;
  _302 = _301->decl;
  assign_type.form_tree = _302;

  <bb 353> :
  table1 = table1->next;
  if (table1 != 0B)
    goto <bb 354>; [INV]
  else
    goto <bb 355>; [INV]

  <bb 354> :
  iftmp.852 = table1->target;
  goto <bb 356>; [INV]

  <bb 355> :
  iftmp.852 = 0B;

  <bb 356> :
  t2 = iftmp.852;

  <bb 357> :
  if (t2 != 0B)
    goto <bb 349>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 358> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 359> :
  getFunctionAssignRHS.853_303 = getFunctionAssignRHS;
  _304 = getFunctionAssignRHS.853_303->base.code;
  if (_304 == 49)
    goto <bb 360>; [INV]
  else
    goto <bb 371>; [INV]

  <bb 360> :
  getFunctionAssignRHS.854_305 = getFunctionAssignRHS;
  _306 = getFunctionAssignRHS.854_305->exp.operands[0];
  second = _306;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.856_307 = function_assign_collect;
  D.250575 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.856_307, &second);

  <bb 361> :
  _308 = D.250575;
  retval.855 = _308 == 0B;
  if (retval.855 != 0)
    goto <bb 362>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 362> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 366>; [INV]

  <bb 363> :
  function_assign_collect.857_309 = function_assign_collect;
  D.250576 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.857_309, &second);

  <bb 364> :
  _310 = D.250576;
  function_assign_array::operator= (&assign_array, _310);

  <bb 365> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 366> :
  assign_type.stmt = gc;
  D.250577 = gimple_assign_lhs (gc);

  <bb 367> :
  _311 = D.250577;
  assign_type.assign_tree = _311;
  D.250578 = cgraph_node::get_fun (node);

  <bb 368> :
  _312 = D.250578;
  _313 = _312->decl;
  assign_type.form_tree = _313;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 369> :
  function_assign_collect.858_314 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.858_314, &second, &assign_array);

  <bb 370> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 371> :
  getFunctionAssignRHS.859_315 = getFunctionAssignRHS;
  _316 = getFunctionAssignRHS.859_315->base.code;
  if (_316 == 47)
    goto <bb 372>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 372> :
  getFunctionAssignRHS.860_317 = getFunctionAssignRHS;
  _318 = getFunctionAssignRHS.860_317->exp.operands[0];
  second = _318;
  getFunctionAssignRHS.861_319 = getFunctionAssignRHS;
  _320 = getFunctionAssignRHS.861_319->exp.operands[1];
  second2 = _320;
  second.862_321 = second;
  if (second.862_321 != 0B)
    goto <bb 373>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 373> :
  second.863_322 = second;
  _323 = second.863_322->base.code;
  if (_323 == 165)
    goto <bb 374>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 374> :
  second.864_324 = second;
  three = second.864_324->exp.operands[0];
  if (three != 0B)
    goto <bb 375>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 375> :
  _325 = three->base.code;
  if (_325 == 153)
    goto <bb 376>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 376> :
  def_stmt = three->ssa_name.def_stmt;
  retval.865 = is_gimple_assign (def_stmt);
  if (retval.865 != 0)
    goto <bb 377>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 377> :
  D.250582 = gimple_assign_rhs1 (def_stmt);

  <bb 378> :
  _326 = D.250582;
  _327 = _326->base.code;
  retval.866 = _327 == 36;
  if (retval.866 != 0)
    goto <bb 379>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 379> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.868_328 = function_assign_collect;
  D.250583 = gimple_assign_rhs1 (def_stmt);

  <bb 380> :
  _329 = D.250583;
  D.195701 = _329;
  D.250584 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.868_328, &D.195701);

  <bb 381> :
  _330 = D.250584;
  retval.867 = _330 == 0B;
  D.195701 = {CLOBBER};
  if (retval.867 != 0)
    goto <bb 382>; [INV]
  else
    goto <bb 383>; [INV]

  <bb 382> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 387>; [INV]

  <bb 383> :
  function_assign_collect.869_331 = function_assign_collect;
  D.250586 = gimple_assign_rhs1 (def_stmt);

  <bb 384> :
  _332 = D.250586;
  D.195702 = _332;
  D.250587 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.869_331, &D.195702);

  <bb 385> :
  _333 = D.250587;
  function_assign_array::operator= (&assign_array, _333);

  <bb 386> :
  D.195702 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 387> :
  assign_type.stmt = gc;
  D.250589 = gimple_assign_lhs (def_stmt);

  <bb 388> :
  _334 = D.250589;
  assign_type.assign_tree = _334;
  D.250590 = cgraph_node::get_fun (node);

  <bb 389> :
  _335 = D.250590;
  _336 = _335->decl;
  assign_type.form_tree = _336;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 390> :
  function_assign_collect.870_337 = function_assign_collect;
  D.250591 = gimple_assign_rhs1 (def_stmt);

  <bb 391> :
  _338 = D.250591;
  D.195704 = _338;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.870_337, &D.195704, &assign_array);

  <bb 392> :
  D.195704 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 426>; [INV]

  <bb 393> :
  second.871_339 = second;
  _340 = second.871_339->base.code;
  if (_340 == 36)
    goto <bb 394>; [INV]
  else
    goto <bb 404>; [INV]

  <bb 394> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.873_341 = function_assign_collect;
  D.250596 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.873_341, &second);

  <bb 395> :
  _342 = D.250596;
  retval.872 = _342 == 0B;
  if (retval.872 != 0)
    goto <bb 396>; [INV]
  else
    goto <bb 397>; [INV]

  <bb 396> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 400>; [INV]

  <bb 397> :
  function_assign_collect.874_343 = function_assign_collect;
  D.250597 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.874_343, &second);

  <bb 398> :
  _344 = D.250597;
  function_assign_array::operator= (&assign_array, _344);

  <bb 399> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 400> :
  assign_type.stmt = gc;
  second.875_345 = second;
  assign_type.assign_tree = second.875_345;
  D.250598 = cgraph_node::get_fun (node);

  <bb 401> :
  _346 = D.250598;
  _347 = _346->decl;
  assign_type.form_tree = _347;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 402> :
  function_assign_collect.876_348 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.876_348, &second, &assign_array);

  <bb 403> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 426>; [INV]

  <bb 404> :
  second.877_349 = second;
  _350 = second.877_349->base.code;
  if (_350 == 47)
    goto <bb 405>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 405> :
  getFunctionAssignLHS.878_351 = getFunctionAssignLHS;
  three = getFunctionAssignLHS.878_351->exp.operands[0];
  if (three != 0B)
    goto <bb 406>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 406> :
  _352 = three->base.code;
  if (_352 == 165)
    goto <bb 407>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 407> :
  second.879_353 = second;
  four = second.879_353->exp.operands[0];
  if (four != 0B)
    goto <bb 408>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 408> :
  _354 = four->base.code;
  if (_354 == 153)
    goto <bb 409>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 409> :
  def_stmt = four->ssa_name.def_stmt;
  retval.880 = is_gimple_assign (def_stmt);
  if (retval.880 != 0)
    goto <bb 410>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 410> :
  D.250602 = gimple_assign_rhs1 (def_stmt);

  <bb 411> :
  _355 = D.250602;
  _356 = _355->base.code;
  retval.881 = _356 == 36;
  if (retval.881 != 0)
    goto <bb 412>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 412> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.883_357 = function_assign_collect;
  D.250603 = gimple_assign_rhs1 (def_stmt);

  <bb 413> :
  _358 = D.250603;
  D.195713 = _358;
  D.250604 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.883_357, &D.195713);

  <bb 414> :
  _359 = D.250604;
  retval.882 = _359 == 0B;
  D.195713 = {CLOBBER};
  if (retval.882 != 0)
    goto <bb 415>; [INV]
  else
    goto <bb 416>; [INV]

  <bb 415> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 420>; [INV]

  <bb 416> :
  function_assign_collect.884_360 = function_assign_collect;
  D.250606 = gimple_assign_rhs1 (def_stmt);

  <bb 417> :
  _361 = D.250606;
  D.195714 = _361;
  D.250607 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.884_360, &D.195714);

  <bb 418> :
  _362 = D.250607;
  function_assign_array::operator= (&assign_array, _362);

  <bb 419> :
  D.195714 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 420> :
  assign_type.stmt = gc;
  D.250609 = gimple_assign_lhs (def_stmt);

  <bb 421> :
  _363 = D.250609;
  assign_type.assign_tree = _363;
  D.250610 = cgraph_node::get_fun (node);

  <bb 422> :
  _364 = D.250610;
  _365 = _364->decl;
  assign_type.form_tree = _365;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 423> :
  function_assign_collect.885_366 = function_assign_collect;
  D.250611 = gimple_assign_rhs1 (def_stmt);

  <bb 424> :
  _367 = D.250611;
  D.195716 = _367;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.885_366, &D.195716, &assign_array);

  <bb 425> :
  D.195716 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 426> :
  second2.886_368 = second2;
  if (second2.886_368 != 0B)
    goto <bb 427>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 427> :
  second2.887_369 = second2;
  _370 = second2.887_369->base.code;
  if (_370 == 35)
    goto <bb 428>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 428> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.889_371 = function_assign_collect;
  D.250616 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.889_371, &second2);

  <bb 429> :
  _372 = D.250616;
  retval.888 = _372 == 0B;
  if (retval.888 != 0)
    goto <bb 430>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 430> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 434>; [INV]

  <bb 431> :
  function_assign_collect.890_373 = function_assign_collect;
  D.250617 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.890_373, &second2);

  <bb 432> :
  _374 = D.250617;
  function_assign_array::operator= (&assign_array, _374);

  <bb 433> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 434> :
  assign_type.stmt = gc;
  getFunctionAssignRHS.891_375 = getFunctionAssignRHS;
  assign_type.assign_tree = getFunctionAssignRHS.891_375;
  D.250618 = cgraph_node::get_fun (node);

  <bb 435> :
  _376 = D.250618;
  _377 = _376->decl;
  assign_type.form_tree = _377;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 436> :
  function_assign_collect.892_378 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.892_378, &second2, &assign_array);

  <bb 437> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 438> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 439> :
  getFunctionAssignLHS.893_379 = getFunctionAssignLHS;
  _380 = getFunctionAssignLHS.893_379->base.code;
  if (_380 == 47)
    goto <bb 440>; [INV]
  else
    goto <bb 485>; [INV]

  <bb 440> :
  getFunctionAssignLHS.894_381 = getFunctionAssignLHS;
  _382 = getFunctionAssignLHS.894_381->exp.operands[0];
  second = _382;
  getFunctionAssignLHS.895_383 = getFunctionAssignLHS;
  _384 = getFunctionAssignLHS.895_383->exp.operands[1];
  second2 = _384;
  second.896_385 = second;
  if (second.896_385 != 0B)
    goto <bb 441>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 441> :
  second.897_386 = second;
  _387 = second.897_386->base.code;
  if (_387 == 165)
    goto <bb 442>; [INV]
  else
    goto <bb 461>; [INV]

  <bb 442> :
  second.898_388 = second;
  three = second.898_388->exp.operands[0];
  if (three != 0B)
    goto <bb 443>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 443> :
  _389 = three->base.code;
  if (_389 == 153)
    goto <bb 444>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 444> :
  def_stmt = three->ssa_name.def_stmt;
  retval.899 = is_gimple_assign (def_stmt);
  if (retval.899 != 0)
    goto <bb 445>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 445> :
  D.250623 = gimple_assign_rhs1 (def_stmt);

  <bb 446> :
  _390 = D.250623;
  _391 = _390->base.code;
  retval.900 = _391 == 36;
  if (retval.900 != 0)
    goto <bb 447>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 447> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.902_392 = function_assign_collect;
  D.250624 = gimple_assign_rhs1 (def_stmt);

  <bb 448> :
  _393 = D.250624;
  D.195726 = _393;
  D.250625 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.902_392, &D.195726);

  <bb 449> :
  _394 = D.250625;
  retval.901 = _394 == 0B;
  D.195726 = {CLOBBER};
  if (retval.901 != 0)
    goto <bb 450>; [INV]
  else
    goto <bb 451>; [INV]

  <bb 450> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 455>; [INV]

  <bb 451> :
  function_assign_collect.903_395 = function_assign_collect;
  D.250627 = gimple_assign_rhs1 (def_stmt);

  <bb 452> :
  _396 = D.250627;
  D.195727 = _396;
  D.250628 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.903_395, &D.195727);

  <bb 453> :
  _397 = D.250628;
  function_assign_array::operator= (&assign_array, _397);

  <bb 454> :
  D.195727 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 455> :
  assign_type.stmt = gc;
  D.250630 = gimple_assign_lhs (def_stmt);

  <bb 456> :
  _398 = D.250630;
  assign_type.assign_tree = _398;
  D.250631 = cgraph_node::get_fun (node);

  <bb 457> :
  _399 = D.250631;
  _400 = _399->decl;
  assign_type.form_tree = _400;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 458> :
  function_assign_collect.904_401 = function_assign_collect;
  D.250632 = gimple_assign_rhs1 (def_stmt);

  <bb 459> :
  _402 = D.250632;
  D.195729 = _402;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.904_401, &D.195729, &assign_array);

  <bb 460> :
  D.195729 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 472>; [INV]

  <bb 461> :
  second.905_403 = second;
  _404 = second.905_403->base.code;
  if (_404 == 36)
    goto <bb 462>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 462> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.907_405 = function_assign_collect;
  D.250637 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.907_405, &second);

  <bb 463> :
  _406 = D.250637;
  retval.906 = _406 == 0B;
  if (retval.906 != 0)
    goto <bb 464>; [INV]
  else
    goto <bb 465>; [INV]

  <bb 464> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 468>; [INV]

  <bb 465> :
  function_assign_collect.908_407 = function_assign_collect;
  D.250638 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.908_407, &second);

  <bb 466> :
  _408 = D.250638;
  function_assign_array::operator= (&assign_array, _408);

  <bb 467> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 468> :
  assign_type.stmt = gc;
  second.909_409 = second;
  assign_type.assign_tree = second.909_409;
  D.250639 = cgraph_node::get_fun (node);

  <bb 469> :
  _410 = D.250639;
  _411 = _410->decl;
  assign_type.form_tree = _411;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 470> :
  function_assign_collect.910_412 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.910_412, &second, &assign_array);

  <bb 471> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 472> :
  second2.911_413 = second2;
  if (second2.911_413 != 0B)
    goto <bb 473>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 473> :
  second2.912_414 = second2;
  _415 = second2.912_414->base.code;
  if (_415 == 35)
    goto <bb 474>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 474> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.914_416 = function_assign_collect;
  D.250643 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.914_416, &second2);

  <bb 475> :
  _417 = D.250643;
  retval.913 = _417 == 0B;
  if (retval.913 != 0)
    goto <bb 476>; [INV]
  else
    goto <bb 477>; [INV]

  <bb 476> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 480>; [INV]

  <bb 477> :
  function_assign_collect.915_418 = function_assign_collect;
  D.250644 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.915_418, &second2);

  <bb 478> :
  _419 = D.250644;
  function_assign_array::operator= (&assign_array, _419);

  <bb 479> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 480> :
  assign_type.stmt = gc;
  getFunctionAssignLHS.916_420 = getFunctionAssignLHS;
  assign_type.assign_tree = getFunctionAssignLHS.916_420;
  D.250645 = cgraph_node::get_fun (node);

  <bb 481> :
  _421 = D.250645;
  _422 = _421->decl;
  assign_type.form_tree = _422;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 482> :
  function_assign_collect.917_423 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.917_423, &second2, &assign_array);

  <bb 483> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 484> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 485> :
  getFunctionAssignLHS.918_424 = getFunctionAssignLHS;
  _425 = getFunctionAssignLHS.918_424->base.code;
  if (_425 == 49)
    goto <bb 486>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 486> :
  debug_gimple_stmt (gc);

  <bb 487> :
  getFunctionAssignLHS.919_426 = getFunctionAssignLHS;
  _427 = getFunctionAssignLHS.919_426->exp.operands[0];
  second = _427;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.921_428 = function_assign_collect;
  D.250650 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.921_428, &second);

  <bb 488> :
  _429 = D.250650;
  retval.920 = _429 == 0B;
  if (retval.920 != 0)
    goto <bb 489>; [INV]
  else
    goto <bb 490>; [INV]

  <bb 489> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 493>; [INV]

  <bb 490> :
  function_assign_collect.922_430 = function_assign_collect;
  D.250651 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.922_430, &second);

  <bb 491> :
  _431 = D.250651;
  function_assign_array::operator= (&assign_array, _431);

  <bb 492> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 493> :
  assign_type.stmt = gc;
  D.250652 = gimple_assign_rhs1 (gc);

  <bb 494> :
  _432 = D.250652;
  assign_type.assign_tree = _432;
  D.250653 = cgraph_node::get_fun (node);

  <bb 495> :
  _433 = D.250653;
  _434 = _433->decl;
  assign_type.form_tree = _434;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 496> :
  function_assign_collect.923_435 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.923_435, &second, &assign_array);

  <bb 497> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 498> :
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};

  <bb 499> :
<L373>:
  return;

  <bb 500> :
<L374>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 4

  <bb 501> :
<L375>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 502> :
<L376>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 2

  <bb 503> :
<L377>:
  second = {CLOBBER};
  resx 1

  <bb 504> :
<L378>:
  D.195223 = {CLOBBER};
  resx 16

  <bb 505> :
<L379>:
  D.195224 = {CLOBBER};
  resx 18

  <bb 506> :
<L380>:
  D.195226 = {CLOBBER};
  resx 20

  <bb 507> :
<L381>:
  assign_type = {CLOBBER};
  resx 15

  <bb 508> :
<L382>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 14

  <bb 509> :
<L383>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 13

  <bb 510> :
<L384>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 12

  <bb 511> :
<L385>:
  function_free_array::~function_free_array (&fun_array);
  resx 11

  <bb 512> :
<L386>:
  std::vector<free_type>::~vector (&free_type_array);
  resx 10

  <bb 513> :
<L387>:
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};
  resx 9

  <bb 514> :
<L388>:
  ret_type = {CLOBBER};
  resx 32

  <bb 515> :
<L389>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 31

  <bb 516> :
<L390>:
  function_return_array::~function_return_array (&fun_array);
  resx 30

  <bb 517> :
<L391>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 29

  <bb 518> :
<L392>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 39

  <bb 519> :
<L393>:
  function_return_array::~function_return_array (&fun_array);
  resx 38

  <bb 520> :
<L394>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  resx 37

  <bb 521> :
<L395>:
  assign_type = {CLOBBER};
  resx 46

  <bb 522> :
<L396>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 45

  <bb 523> :
<L397>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 44

  <bb 524> :
<L398>:
  getFunctionAssignRHS = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 43

  <bb 525> :
<L399>:
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  resx 53

  <bb 526> :
<L400>:
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  resx 52

  <bb 527> :
<L401>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  resx 51

  <bb 528> :
<L402>:
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  resx 59

  <bb 529> :
<L403>:
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  resx 58

  <bb 530> :
<L404>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  resx 57

  <bb 531> :
<L405>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 67

  <bb 532> :
<L406>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 66

  <bb 533> :
<L407>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 65

  <bb 534> :
<L408>:
  getVARDECLtree = {CLOBBER};
  resx 64

  <bb 535> :
<L409>:
  D.195634 = {CLOBBER};
  resx 75

  <bb 536> :
<L410>:
  D.195635 = {CLOBBER};
  resx 77

  <bb 537> :
<L411>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 74

  <bb 538> :
<L412>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 73

  <bb 539> :
<L413>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  resx 72

  <bb 540> :
<L414>:
  function_return_array::~function_return_array (&fun_array);
  resx 86

  <bb 541> :
<L415>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 85

  <bb 542> :
<L416>:
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 84

  <bb 543> :
<L417>:
  getreturnFucntionDecl = {CLOBBER};
  resx 63

  <bb 544> :
<L418>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 94

  <bb 545> :
<L419>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 93

  <bb 546> :
<L420>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 92

  <bb 547> :
<L421>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 100

  <bb 548> :
<L422>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 99

  <bb 549> :
<L423>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 98

  <bb 550> :
<L424>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 106

  <bb 551> :
<L425>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 105

  <bb 552> :
<L426>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 104

  <bb 553> :
<L427>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 112

  <bb 554> :
<L428>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 111

  <bb 555> :
<L429>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 110

  <bb 556> :
<L430>:
  D.195676 = {CLOBBER};
  resx 120

  <bb 557> :
<L431>:
  D.195677 = {CLOBBER};
  resx 122

  <bb 558> :
<L432>:
  D.195679 = {CLOBBER};
  resx 124

  <bb 559> :
<L433>:
  assign_type = {CLOBBER};
  resx 119

  <bb 560> :
<L434>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 118

  <bb 561> :
<L435>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 117

  <bb 562> :
<L436>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 116

  <bb 563> :
<L437>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 132

  <bb 564> :
<L438>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 131

  <bb 565> :
<L439>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 130

  <bb 566> :
<L440>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 138

  <bb 567> :
<L441>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 137

  <bb 568> :
<L442>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 136

  <bb 569> :
<L443>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 144

  <bb 570> :
<L444>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 143

  <bb 571> :
<L445>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 142

  <bb 572> :
<L446>:
  D.195701 = {CLOBBER};
  resx 152

  <bb 573> :
<L447>:
  D.195702 = {CLOBBER};
  resx 154

  <bb 574> :
<L448>:
  D.195704 = {CLOBBER};
  resx 156

  <bb 575> :
<L449>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 151

  <bb 576> :
<L450>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 150

  <bb 577> :
<L451>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 149

  <bb 578> :
<L452>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 163

  <bb 579> :
<L453>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 162

  <bb 580> :
<L454>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 161

  <bb 581> :
<L455>:
  D.195713 = {CLOBBER};
  resx 170

  <bb 582> :
<L456>:
  D.195714 = {CLOBBER};
  resx 172

  <bb 583> :
<L457>:
  D.195716 = {CLOBBER};
  resx 174

  <bb 584> :
<L458>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 169

  <bb 585> :
<L459>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 168

  <bb 586> :
<L460>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 167

  <bb 587> :
<L461>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 181

  <bb 588> :
<L462>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 180

  <bb 589> :
<L463>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 179

  <bb 590> :
<L464>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 148

  <bb 591> :
<L465>:
  D.195726 = {CLOBBER};
  resx 190

  <bb 592> :
<L466>:
  D.195727 = {CLOBBER};
  resx 192

  <bb 593> :
<L467>:
  D.195729 = {CLOBBER};
  resx 194

  <bb 594> :
<L468>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 189

  <bb 595> :
<L469>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 188

  <bb 596> :
<L470>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 187

  <bb 597> :
<L471>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 201

  <bb 598> :
<L472>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 200

  <bb 599> :
<L473>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 199

  <bb 600> :
<L474>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 207

  <bb 601> :
<L475>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 206

  <bb 602> :
<L476>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 205

  <bb 603> :
<L477>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 186

  <bb 604> :
<L478>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 214

  <bb 605> :
<L479>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 213

  <bb 606> :
<L480>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 212

  <bb 607> :
<L481>:
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  resx 91

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2Ev, funcdef_no=6367, decl_uid=176650, cgraph_uid=3342, symbol_order=4118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176658;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2Ev, funcdef_no=6365, decl_uid=176108, cgraph_uid=3339, symbol_order=4115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7716, decl_uid=176000, cgraph_uid=4348, symbol_order=5133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this);
  _1 = &this->D.176003;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2Ev, funcdef_no=8618, decl_uid=175778, cgraph_uid=5250, symbol_order=6039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2Ev, funcdef_no=9405, decl_uid=175707, cgraph_uid=6037, symbol_order=6826)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2Ev, funcdef_no=6370, decl_uid=192721, cgraph_uid=3345, symbol_order=4121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::vector (_1);
  return;

}



;; Function function_free_array::operator= (_ZN19function_free_arrayaSERKS_, funcdef_no=6372, decl_uid=195176, cgraph_uid=3347, symbol_order=4123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_free_array & function_free_array::operator= (struct function_free_array * const this, const struct function_free_array & D.195177)
{
  struct function_free_array & D.250660;

  <bb 2> :
  _1 = &D.195177->free_type_array;
  _2 = &this->free_type_array;
  std::vector<free_type>::operator= (_2, _1);
  D.250660 = this;

  <bb 3> :
<L0>:
  return D.250660;

}



;; Function std::vector<free_type>::operator= (_ZNSt6vectorI9free_typeSaIS0_EEaSERKS2_, funcdef_no=7724, decl_uid=176236, cgraph_uid=4358, symbol_order=5143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<free_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.250695;
  struct free_type * __tmp;
  const size_type __xlen;
  struct vector & D.250693;
  struct __normal_iterator D.250690;
  struct __normal_iterator D.250689;
  struct __normal_iterator D.250688;
  struct __normal_iterator D.250687;
  struct __normal_iterator D.250686;
  bool retval.928;
  struct __normal_iterator D.250681;
  struct __normal_iterator D.250680;
  bool retval.927;
  bool iftmp.926;
  bool retval.925;
  bool retval.924;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.924 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ();
  if (retval.924 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.176658;
  _4 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.176658;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.926 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.926 = 0;

  <bb 8> :
  retval.925 = iftmp.926;
  if (retval.925 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<free_type>::clear (this);
  _8 = &this->D.176658;
  _9 = this->D.176658._M_impl.D.176003._M_end_of_storage;
  _10 = this->D.176658._M_impl.D.176003._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.176658._M_impl.D.176003._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_8, _14, _13);
  this->D.176658._M_impl.D.176003._M_start = 0B;
  this->D.176658._M_impl.D.176003._M_finish = 0B;
  this->D.176658._M_impl.D.176003._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.176658;
  _16 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.176658;
  _18 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<free_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<free_type>::size (__x);
  _19 = std::vector<free_type>::capacity (this);
  retval.927 = __xlen > _19;
  if (retval.927 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.250680 = std::vector<free_type>::end (__x);
  D.250681 = std::vector<free_type>::begin (__x);
  D.250695 = std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (this, __xlen, D.250681, D.250680);
  __tmp = D.250695;
  _20 = &this->D.176658;
  _21 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.176658._M_impl.D.176003._M_finish;
  _23 = this->D.176658._M_impl.D.176003._M_start;
  std::_Destroy<free_type*, free_type> (_23, _22, _21);
  _24 = &this->D.176658;
  _25 = this->D.176658._M_impl.D.176003._M_end_of_storage;
  _26 = this->D.176658._M_impl.D.176003._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.176658._M_impl.D.176003._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_24, _30, _29);
  this->D.176658._M_impl.D.176003._M_start = __tmp;
  _31 = this->D.176658._M_impl.D.176003._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.176658._M_impl.D.176003._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<free_type>::size (this);
  retval.928 = __xlen <= _34;
  if (retval.928 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.176658;
  _36 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_35);
  D.250686 = std::vector<free_type>::end (this);
  D.250687 = std::vector<free_type>::begin (this);
  D.250688 = std::vector<free_type>::end (__x);
  D.250689 = std::vector<free_type>::begin (__x);
  D.250690 = std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.250689, D.250688, D.250687);
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (D.250690, D.250686, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.176658._M_impl.D.176003._M_start;
  _38 = __x->D.176658._M_impl.D.176003._M_start;
  _39 = std::vector<free_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.176658._M_impl.D.176003._M_start;
  std::copy<free_type*, free_type*> (_42, _41, _37);
  _43 = &this->D.176658;
  _44 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.176658._M_impl.D.176003._M_finish;
  _46 = __x->D.176658._M_impl.D.176003._M_finish;
  _47 = __x->D.176658._M_impl.D.176003._M_start;
  _48 = std::vector<free_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.176658._M_impl.D.176003._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.176658._M_impl.D.176003._M_finish = _53;

  <bb 17> :
  D.250693 = this;

  <bb 18> :
<L19>:
  return D.250693;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7725, decl_uid=175870, cgraph_uid=4356, symbol_order=5141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ()
{
  bool D.250696;

  <bb 2> :
  D.250696 = 0;

  <bb 3> :
<L0>:
  return D.250696;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E15_S_always_equalEv, funcdef_no=7726, decl_uid=175873, cgraph_uid=4357, symbol_order=5142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ()
{
  bool D.250698;

  <bb 2> :
  D.250698 = 1;

  <bb 3> :
<L0>:
  return D.250698;

}



;; Function std::operator!= (_ZStneRKSaI9free_typeES2_, funcdef_no=8627, decl_uid=175756, cgraph_uid=5259, symbol_order=6048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.224031, const struct allocator & D.224032)
{
  bool D.250700;

  <bb 2> :
  D.250700 = 0;

  <bb 3> :
<L0>:
  return D.250700;

}



;; Function std::vector<free_type>::clear (_ZNSt6vectorI9free_typeSaIS0_EE5clearEv, funcdef_no=8628, decl_uid=176388, cgraph_uid=5260, symbol_order=6049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_start;
  std::vector<free_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<free_type>::_M_erase_at_end (_ZNSt6vectorI9free_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9408, decl_uid=176516, cgraph_uid=6040, symbol_order=6829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<free_type>::_M_erase_at_end (struct vector * const this, struct free_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.176658;
  _5 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.176658._M_impl.D.176003._M_finish;
  std::_Destroy<free_type*, free_type> (__pos, _6, _5);
  this->D.176658._M_impl.D.176003._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<free_type> > (_ZSt15__alloc_on_copyISaI9free_typeEEvRT_RKS2_, funcdef_no=8629, decl_uid=212818, cgraph_uid=5261, symbol_order=6050)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<free_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<free_type>::capacity (_ZNKSt6vectorI9free_typeSaIS0_EE8capacityEv, funcdef_no=8630, decl_uid=176304, cgraph_uid=5262, symbol_order=6051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::capacity (const struct vector * const this)
{
  size_type D.250705;

  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_end_of_storage;
  _2 = this->D.176658._M_impl.D.176003._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.250705 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.250705;

}



;; Function std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZNSt6vectorI9free_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8631, decl_uid=212825, cgraph_uid=5263, symbol_order=6052)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct free_type * std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct free_type * D.250709;
  struct free_type * __result;
  struct free_type * D.250707;

  <bb 2> :
  _1 = &this->D.176658;
  D.250709 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_1, __n);
  __result = D.250709;
  _2 = &this->D.176658;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (__first, __last, __result, _3);

  <bb 3> :
  D.250707 = __result;

  <bb 4> :
<L0>:
  return D.250707;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.176658;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<free_type>::end (_ZNSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8634, decl_uid=176271, cgraph_uid=5266, symbol_order=6055)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::end (struct vector * const this)
{
  struct iterator D.224118;
  struct iterator D.250713;

  <bb 2> :
  _1 = &this->D.176658._M_impl.D.176003._M_finish;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.224118, _1);
  D.250713 = D.224118;
  D.224118 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250713;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9411, decl_uid=212907, cgraph_uid=6043, symbol_order=6832)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8632, decl_uid=176267, cgraph_uid=5264, symbol_order=6053)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::begin (struct vector * const this)
{
  struct iterator D.224072;
  struct iterator D.250716;

  <bb 2> :
  _1 = &this->D.176658._M_impl.D.176003._M_start;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.224072, _1);
  D.250716 = D.224072;
  D.224072 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250716;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8633, decl_uid=212926, cgraph_uid=5265, symbol_order=6054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.250721;
  struct __normal_iterator D.250720;
  struct __normal_iterator D.250719;

  <bb 2> :
  D.250720 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__last);
  D.250721 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__first);
  D.250719 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.250721, D.250720, __result);

  <bb 3> :
<L0>:
  return D.250719;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9413, decl_uid=224084, cgraph_uid=6045, symbol_order=6834)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.250723;

  <bb 2> :
  D.250723 = __it;

  <bb 3> :
<L0>:
  return D.250723;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9414, decl_uid=224090, cgraph_uid=6047, symbol_order=6836)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct free_type * D.250727;
  struct __normal_iterator D.250725;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__result);
  _2 = std::__niter_base<const free_type*, std::vector<free_type> > (__last);
  _3 = std::__niter_base<const free_type*, std::vector<free_type> > (__first);
  D.250727 = std::__copy_move_a1<false, const free_type*, free_type*> (_3, _2, _1);
  _4 = D.250727;
  D.250725 = std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.250725;

}



;; Function std::__niter_base<free_type*, std::vector<free_type> > (_ZSt12__niter_baseIP9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10061, decl_uid=234458, cgraph_uid=6693, symbol_order=7486)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  struct free_type * D.250728;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__it);
  D.250728 = *_1;

  <bb 3> :
<L0>:
  return D.250728;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9425, decl_uid=212894, cgraph_uid=6057, symbol_order=6846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * const & __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  struct free_type * const & D.250730;

  <bb 2> :
  D.250730 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250730;

}



;; Function std::__niter_base<const free_type*, std::vector<free_type> > (_ZSt12__niter_baseIPK9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10060, decl_uid=234307, cgraph_uid=6692, symbol_order=7485)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * std::__niter_base<const free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  const struct free_type * D.250732;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (&__it);
  D.250732 = *_1;

  <bb 3> :
<L0>:
  return D.250732;

}



;; Function std::__copy_move_a1<false, const free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10062, decl_uid=234461, cgraph_uid=6694, symbol_order=7487)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250736;
  struct free_type * D.250734;

  <bb 2> :
  D.250736 = std::__copy_move_a2<false, const free_type*, free_type*> (__first, __last, __result);
  D.250734 = D.250736;

  <bb 3> :
<L0>:
  return D.250734;

}



;; Function std::__copy_move_a2<false, const free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10557, decl_uid=240091, cgraph_uid=7189, symbol_order=7982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250737;

  <bb 2> :
  D.250737 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250737;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI9free_typeEEPT_PKS4_S7_S5_, funcdef_no=10796, decl_uid=243425, cgraph_uid=7428, symbol_order=8223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct free_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  const ptrdiff_t _Num;
  struct free_type * D.250742;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.929_2 = (long unsigned int) _Num;
  _3 = _Num.929_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.930_4 = (long unsigned int) _Num;
  _5 = _Num.930_4 * 24;
  D.250742 = __result + _5;

  <bb 5> :
<L3>:
  return D.250742;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10063, decl_uid=234465, cgraph_uid=6695, symbol_order=7488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __from, struct free_type * __res)
{
  struct __normal_iterator D.250744;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.250744 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.250744;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10558, decl_uid=212885, cgraph_uid=7190, symbol_order=7983)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct free_type * const D.243431;
  struct __normal_iterator D.243432;
  struct __normal_iterator D.250746;

  <bb 2> :
  _1 = this->_M_current;
  __n.931_2 = (long unsigned int) __n;
  _3 = __n.931_2 * 24;
  _4 = _1 + _3;
  D.243431 = _4;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.243432, &D.243431);
  D.250746 = D.243432;
  D.243432 = {CLOBBER};
  D.243431 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.250746;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8635, decl_uid=212932, cgraph_uid=5267, symbol_order=6056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.224121)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9416, decl_uid=224123, cgraph_uid=6048, symbol_order=6837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10064, decl_uid=234489, cgraph_uid=6696, symbol_order=7489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator D.240100, struct __normal_iterator D.240101)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<free_type*, free_type*> (_ZSt4copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=8636, decl_uid=212940, cgraph_uid=5268, symbol_order=6057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250752;
  struct free_type * D.250750;

  <bb 2> :
  _1 = std::__miter_base<free_type*> (__last);
  _2 = std::__miter_base<free_type*> (__first);
  D.250752 = std::__copy_move_a<false, free_type*, free_type*> (_2, _1, __result);
  D.250750 = D.250752;

  <bb 3> :
<L0>:
  return D.250750;

}



;; Function std::__miter_base<free_type*> (_ZSt12__miter_baseIP9free_typeET_S2_, funcdef_no=9417, decl_uid=224139, cgraph_uid=6049, symbol_order=6838)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__miter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.250753;

  <bb 2> :
  D.250753 = __it;

  <bb 3> :
<L0>:
  return D.250753;

}



;; Function std::__copy_move_a<false, free_type*, free_type*> (_ZSt13__copy_move_aILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=9418, decl_uid=224141, cgraph_uid=6050, symbol_order=6839)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250757;
  struct free_type * D.250755;

  <bb 2> :
  __result.932_1 = __result;
  _2 = std::__niter_base<free_type*> (__result.932_1);
  _3 = std::__niter_base<free_type*> (__last);
  _4 = std::__niter_base<free_type*> (__first);
  D.250757 = std::__copy_move_a1<false, free_type*, free_type*> (_4, _3, _2);
  _5 = D.250757;
  D.250755 = std::__niter_wrap<free_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250755;

}



;; Function std::__niter_base<free_type*> (_ZSt12__niter_baseIP9free_typeET_S2_, funcdef_no=10065, decl_uid=224350, cgraph_uid=6697, symbol_order=7490)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.250758;

  <bb 2> :
  D.250758 = __it;

  <bb 3> :
<L0>:
  return D.250758;

}



;; Function std::__copy_move_a1<false, free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10066, decl_uid=234500, cgraph_uid=6698, symbol_order=7491)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250762;
  struct free_type * D.250760;

  <bb 2> :
  D.250762 = std::__copy_move_a2<false, free_type*, free_type*> (__first, __last, __result);
  D.250760 = D.250762;

  <bb 3> :
<L0>:
  return D.250760;

}



;; Function std::__copy_move_a2<false, free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10559, decl_uid=240109, cgraph_uid=7191, symbol_order=7984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250763;

  <bb 2> :
  D.250763 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250763;

}



;; Function std::__niter_wrap<free_type*> (_ZSt12__niter_wrapIP9free_typeET_RKS2_S2_, funcdef_no=10067, decl_uid=234504, cgraph_uid=6699, symbol_order=7492)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_wrap<free_type*> (struct free_type * const & D.240113, struct free_type * __res)
{
  struct free_type * D.250765;

  <bb 2> :
  D.250765 = __res;

  <bb 3> :
<L0>:
  return D.250765;

}



;; Function std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_ZSt22__uninitialized_copy_aIP9free_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8637, decl_uid=212944, cgraph_uid=5269, symbol_order=6058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<free_type*, free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & D.224148)
{
  struct free_type * D.250769;
  struct free_type * D.250767;

  <bb 2> :
  D.250769 = std::uninitialized_copy<free_type*, free_type*> (__first, __last, __result);
  D.250767 = D.250769;

  <bb 3> :
<L0>:
  return D.250767;

}



;; Function std::uninitialized_copy<free_type*, free_type*> (_ZSt18uninitialized_copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=9419, decl_uid=224150, cgraph_uid=6051, symbol_order=6840)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250772;
  const bool __assignable;
  struct free_type * D.250770;

  <bb 2> :
  __assignable = 1;
  D.250772 = std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (__first, __last, __result);
  D.250770 = D.250772;

  <bb 3> :
<L0>:
  return D.250770;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP9free_typeS3_EET0_T_S5_S4_, funcdef_no=10068, decl_uid=234538, cgraph_uid=6700, symbol_order=7493)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.250773;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, free_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250773 = __cur;

  <bb 6> :
<L3>:
  return D.250773;

}



;; Function std::_Construct<free_type, free_type&> (_ZSt10_ConstructI9free_typeJRS0_EEvPT_DpOT0_, funcdef_no=10560, decl_uid=240121, cgraph_uid=7192, symbol_order=7985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, free_type&> (struct free_type * __p, struct free_type & __args#0)
{
  void * D.243451;
  void * D.243450;
  const struct free_type * D.243452;

  <bb 2> :
  D.243452 = std::forward<free_type&> (__args#0);
  D.243450 = __p;
  D.243451 = operator new (24, D.243450);
  MEM[(struct free_type *)D.243451] = *D.243452;
  return;

}



;; Function std::forward<free_type&> (_ZSt7forwardIR9free_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10797, decl_uid=243448, cgraph_uid=7429, symbol_order=8224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type&> (struct type & __t)
{
  struct free_type & D.250775;

  <bb 2> :
  D.250775 = __t;

  <bb 3> :
<L0>:
  return D.250775;

}



;; Function free_type::free_type (_ZN9free_typeC2Ev, funcdef_no=6374, decl_uid=195188, cgraph_uid=3349, symbol_order=4125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void free_type::free_type (struct free_type * const this)
{
  <bb 2> :
  this->Looserulesfree = 0;
  return;

}



;; Function std::vector<free_type>::push_back (_ZNSt6vectorI9free_typeSaIS0_EE9push_backERKS0_, funcdef_no=7727, decl_uid=176338, cgraph_uid=4360, symbol_order=5145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<free_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.250780;

  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_finish;
  _2 = this->D.176658._M_impl.D.176003._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.176658._M_impl.D.176003._M_finish;
  _4 = &this->D.176658._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_4, _3, __x);
  _5 = this->D.176658._M_impl.D.176003._M_finish;
  _6 = _5 + 24;
  this->D.176658._M_impl.D.176003._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.250780 = std::vector<free_type>::end (this);
  std::vector<free_type>::_M_realloc_insert<const free_type&> (this, D.250780, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8638, decl_uid=212956, cgraph_uid=5270, symbol_order=6059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (struct allocator_type & __a, struct free_type * __p, const struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const free_type&> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9421, decl_uid=224167, cgraph_uid=6053, symbol_order=6842)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (struct new_allocator * const this, struct free_type * __p, const struct free_type & __args#0)
{
  void * D.234550;
  void * D.234549;
  const struct free_type * D.234551;

  <bb 2> :
  D.234551 = std::forward<const free_type&> (__args#0);
  D.234549 = __p;
  D.234550 = operator new (24, D.234549);
  MEM[(struct free_type *)D.234550] = *D.234551;
  return;

}



;; Function std::vector<free_type>::_M_realloc_insert<const free_type&> (_ZNSt6vectorI9free_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8639, decl_uid=213125, cgraph_uid=5274, symbol_order=6063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::_M_realloc_insert<const free_type&> (struct vector * const this, struct iterator __position, const struct free_type & __args#0)
{
  struct free_type * D.250785;
  const size_type D.250784;
  struct free_type * __new_finish;
  struct free_type * __new_start;
  const size_type __elems_before;
  struct free_type * __old_finish;
  struct free_type * __old_start;
  const size_type __len;
  struct iterator D.224178;

  <bb 2> :
  D.250784 = std::vector<free_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.250784;
  __old_start = this->D.176658._M_impl.D.176003._M_start;
  __old_finish = this->D.176658._M_impl.D.176003._M_finish;
  D.224178 = std::vector<free_type>::begin (this);
  _1 = __gnu_cxx::operator-<free_type*, std::vector<free_type> > (&__position, &D.224178);
  __elems_before = (const size_type) _1;
  D.224178 = {CLOBBER};
  _2 = &this->D.176658;
  D.250785 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_2, __len);
  __new_start = D.250785;
  __new_finish = __new_start;
  _3 = std::forward<const free_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.176658._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.176658;
  _8 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<free_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.176658;
  _12 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<free_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.176658;
  _23 = this->D.176658._M_impl.D.176003._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.176658._M_impl.D.176003._M_start = __new_start;
  this->D.176658._M_impl.D.176003._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.176658._M_impl.D.176003._M_end_of_storage = _28;
  return;

}



;; Function std::vector<free_type>::_M_check_len (_ZNKSt6vectorI9free_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9422, decl_uid=176507, cgraph_uid=6054, symbol_order=6843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<free_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.935;
  size_type D.250789;
  const long unsigned int D.234556;
  bool retval.933;

  <bb 2> :
  _1 = std::vector<free_type>::max_size (this);
  _2 = std::vector<free_type>::size (this);
  _3 = _1 - _2;
  __n.934_4 = __n;
  retval.933 = _3 < __n.934_4;
  if (retval.933 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<free_type>::size (this);
  _6 = std::vector<free_type>::size (this);
  D.234556 = _6;
  _7 = std::max<long unsigned int> (&D.234556, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234556 = {CLOBBER};
  _9 = std::vector<free_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<free_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.935 = std::vector<free_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.935 = __len;

  <bb 8> :
  D.250789 = iftmp.935;

  <bb 9> :
<L6>:
  return D.250789;

}



;; Function std::vector<free_type>::max_size (_ZNKSt6vectorI9free_typeSaIS0_EE8max_sizeEv, funcdef_no=10069, decl_uid=176293, cgraph_uid=6701, symbol_order=7494)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::max_size (const struct vector * const this)
{
  size_type D.250796;

  <bb 2> :
  _1 = &this->D.176658;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  D.250796 = std::vector<free_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.250796;

}



;; Function std::vector<free_type>::_S_max_size (_ZNSt6vectorI9free_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10561, decl_uid=176514, cgraph_uid=7193, symbol_order=7986)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.250798;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<free_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.250798 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250798;

}



;; Function std::allocator_traits<std::allocator<free_type> >::max_size (_ZNSt16allocator_traitsISaI9free_typeEE8max_sizeERKS1_, funcdef_no=10798, decl_uid=175828, cgraph_uid=7430, symbol_order=8225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<free_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.250801;

  <bb 2> :
  D.250801 = __gnu_cxx::new_allocator<free_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.250801;

}



;; Function __gnu_cxx::new_allocator<free_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE8max_sizeEv, funcdef_no=10902, decl_uid=175670, cgraph_uid=7534, symbol_order=8329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::max_size (const struct new_allocator * const this)
{
  size_type D.250803;

  <bb 2> :
  D.250803 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.250803;

}



;; Function __gnu_cxx::operator-<free_type*, std::vector<free_type> > (_ZN9__gnu_cxxmiIP9free_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9423, decl_uid=224179, cgraph_uid=6055, symbol_order=6844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.250805;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.250805 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.250805;

}



;; Function std::vector<free_type>::_S_relocate (_ZNSt6vectorI9free_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9424, decl_uid=176165, cgraph_uid=6056, symbol_order=6845)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.250808;
  struct free_type * D.250807;

  <bb 2> :
  D.250807 = std::vector<free_type>::_S_do_relocate (__first, __last, __result, __alloc, D.250808);

  <bb 3> :
<L0>:
  return D.250807;

}



;; Function std::vector<free_type>::_S_do_relocate (_ZNSt6vectorI9free_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10070, decl_uid=176153, cgraph_uid=6702, symbol_order=7495)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_do_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240133)
{
  struct free_type * D.250810;

  <bb 2> :
  D.250810 = std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.250810;

}



;; Function std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (_ZSt12__relocate_aIP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10562, decl_uid=224344, cgraph_uid=7194, symbol_order=7987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * D.250812;

  <bb 2> :
  _1 = std::__niter_base<free_type*> (__result);
  _2 = std::__niter_base<free_type*> (__last);
  _3 = std::__niter_base<free_type*> (__first);
  D.250812 = std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.250812;

}



;; Function std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_ZSt14__relocate_a_1IP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10799, decl_uid=224495, cgraph_uid=7431, symbol_order=8226)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * __cur;
  struct free_type * D.250814;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__first);
  _2 = std::__addressof<free_type> (__cur);
  std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250814 = __cur;

  <bb 6> :
<L3>:
  return D.250814;

}



;; Function std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_ZSt19__relocate_object_aI9free_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10903, decl_uid=224524, cgraph_uid=7535, symbol_order=8330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (struct free_type * restrict __dest, struct free_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<free_type&> (__orig);
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (__alloc, __dest, _1);
  _2 = std::__addressof<free_type> (__orig);
  std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (__alloc, _2);
  return;

}



;; Function std::move<free_type&> (_ZSt4moveIR9free_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10949, decl_uid=224536, cgraph_uid=7581, symbol_order=8376)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<free_type&> (struct free_type & __t)
{
  struct type & D.250816;

  <bb 2> :
  D.250816 = __t;

  <bb 3> :
<L0>:
  return D.250816;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10950, decl_uid=224538, cgraph_uid=7582, symbol_order=8377)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (struct allocator_type & __a, struct free_type * __p, struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<free_type> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (__a, __p, _1);
  return;

}



;; Function std::forward<free_type> (_ZSt7forwardI9free_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10969, decl_uid=245350, cgraph_uid=7601, symbol_order=8396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type> (struct type & __t)
{
  struct free_type & D.250818;

  <bb 2> :
  D.250818 = __t;

  <bb 3> :
<L0>:
  return D.250818;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10970, decl_uid=245352, cgraph_uid=7602, symbol_order=8397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (struct new_allocator * const this, struct free_type * __p, struct free_type & __args#0)
{
  void * D.245759;
  void * D.245758;
  struct free_type * D.245760;

  <bb 2> :
  D.245760 = std::forward<free_type> (__args#0);
  D.245758 = __p;
  D.245759 = operator new (24, D.245758);
  MEM[(struct free_type *)D.245759] = *D.245760;
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (_ZNSt16allocator_traitsISaI9free_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9426, decl_uid=224553, cgraph_uid=6058, symbol_order=6847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (struct allocator_type & __a, struct free_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::destroy<free_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::destroy<free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE7destroyIS1_EEvPT_, funcdef_no=10071, decl_uid=234571, cgraph_uid=6703, symbol_order=7496)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::destroy<free_type> (struct new_allocator * const this, struct free_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::put (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7729, decl_uid=192387, cgraph_uid=4361, symbol_order=5146)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_free_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_free_array & v)
{
  bool D.250827;
  struct hash_entry * D.250826;
  unsigned int D.250825;
  bool ins;
  struct hash_entry * e;
  bool D.250823;
  void * D.213135;
  void * D.213134;

  <bb 2> :
  _1 = &this->m_table;
  D.250825 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.250825;
  D.250826 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.250826;
  D.250827 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (e);
  ins = D.250827;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213134 = &e->m_value;
  D.213135 = operator new (24, D.213134);
  function_free_array::function_free_array (D.213135, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_free_array::operator= (_4, v);

  <bb 5> :
  D.250823 = ~ins;

  <bb 6> :
<L3>:
  return D.250823;

  <bb 7> :
<L4>:
  operator delete (D.213135, D.213134);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8643, decl_uid=192545, cgraph_uid=5275, symbol_order=6064)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.250878;
  bool D.250877;
  bool D.250876;
  bool D.250875;
  bool D.250874;
  bool D.250873;
  struct value_type * D.250872;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.941;
  bool retval.940;
  bool retval.939;
  bool retval.938;
  bool retval.937;
  bool retval.936;
  struct value_type * D.250834;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.250873 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.936 = D.250873;
  if (retval.936 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.250874 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.937 = D.250874;
  if (retval.937 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.250875 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.938 = D.250875;
  if (retval.938 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.250834 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.250876 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.939 = D.250876;
  if (retval.939 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.250877 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.940 = D.250877;
  if (retval.940 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.250878 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.941 = D.250878;
  if (retval.941 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.250834 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.250834 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.250834 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.250834 = _37 + _39;

  <bb 27> :
<L37>:
  return D.250834;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9427, decl_uid=192626, cgraph_uid=6071, symbol_order=6860)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.250909;
  unsigned int D.250908;
  bool D.250907;
  bool D.250906;
  struct mem_alloc_description & D.250905;
  struct value_type * D.250904;
  unsigned int D.250903;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234594;
  void * D.234593;
  struct hash_entry & D.234631;
  bool iftmp.945;
  bool retval.944;
  bool iftmp.943;
  bool retval.942;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.943 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.943 = 0;

  <bb 6> :
  retval.942 = iftmp.943;
  if (retval.942 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.250903 = hash_table_higher_prime_index (_5);
  nindex = D.250903;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.250904 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.250904;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.250906 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.250906;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.250907 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.250907;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.945 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.945 = 0;

  <bb 15> :
  retval.944 = iftmp.945;
  if (retval.944 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.250908 = hash_map<tree_node*, function_free_array>::hash_entry::hash (x);
  _16 = D.250908;
  D.250909 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.250909;
  D.234631 = std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (x);
  D.234593 = q;
  D.234594 = operator new (32, D.234593);
  hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (D.234594, D.234631);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10072, decl_uid=192521, cgraph_uid=6704, symbol_order=7497)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.250910;

  <bb 2> :
  D.250910 = this->m_size;

  <bb 3> :
<L0>:
  return D.250910;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10073, decl_uid=192523, cgraph_uid=6705, symbol_order=7498)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.250912;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.250912 = _1 - _2;

  <bb 3> :
<L0>:
  return D.250912;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10074, decl_uid=192623, cgraph_uid=6706, symbol_order=7499)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.946;
  bool D.250914;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.946 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.946 = 0;

  <bb 6> :
  D.250914 = iftmp.946;

  <bb 7> :
<L4>:
  return D.250914;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9301, decl_uid=192613, cgraph_uid=5933, symbol_order=6722)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.250936;
  struct value_type * D.250935;
  struct mem_alloc_description & D.250934;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.250932;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.250935 = xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (n);
  nentries = D.250935;
  goto <bb 6>; [INV]

  <bb 5> :
  D.250936 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (n);
  nentries = D.250936;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.250932 = nentries;

  <bb 9> :
<L14>:
  return D.250932;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9982, decl_uid=216872, cgraph_uid=6614, symbol_order=7407)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.250939;
  struct hash_entry * D.250937;

  <bb 2> :
  D.250939 = xcalloc (count, 32);
  D.250937 = D.250939;

  <bb 3> :
<L0>:
  return D.250937;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9983, decl_uid=233216, cgraph_uid=6615, symbol_order=7408)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.250946;
  struct hash_entry * D.250945;
  struct hash_entry * D.250943;
  bool retval.947;

  <bb 2> :
  retval.947 = need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ();
  if (retval.947 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.250945 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.250943 = D.250945;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.250946 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.250943 = D.250946;

  <bb 5> :
<L2>:
  return D.250943;

}



;; Function finalize<hash_map<tree_node*, function_free_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10495, decl_uid=239747, cgraph_uid=7130, symbol_order=7923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_free_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10497, decl_uid=243171, cgraph_uid=7128, symbol_order=7921)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_free_array::~function_free_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10494, decl_uid=239746, cgraph_uid=7126, symbol_order=7919)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ()
{
  bool D.250947;

  <bb 2> :
  D.250947 = 1;

  <bb 3> :
<L0>:
  return D.250947;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10076, decl_uid=192446, cgraph_uid=6708, symbol_order=7501)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_free_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.250951;
  hashval_t D.250949;

  <bb 2> :
  _1 = &e->m_key;
  D.250951 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_1);
  D.250949 = D.250951;

  <bb 3> :
<L0>:
  return D.250949;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10075, decl_uid=192616, cgraph_uid=6707, symbol_order=7500)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.250964;
  bool D.250963;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.949;
  struct value_type * D.250955;
  bool retval.948;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.250963 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.948 = D.250963;
  if (retval.948 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.250955 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.250964 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.949 = D.250964;
  if (retval.949 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.250955 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.250955;

}



;; Function std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10077, decl_uid=234591, cgraph_uid=6709, symbol_order=7502)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.250965;

  <bb 2> :
  D.250965 = __t;

  <bb 3> :
<L0>:
  return D.250965;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9438, decl_uid=234616, cgraph_uid=6069, symbol_order=6858)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234618)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234618->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234618->m_value;
  function_free_array::function_free_array (_2, _3);
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2EOS_, funcdef_no=9436, decl_uid=192738, cgraph_uid=6066, symbol_order=6855)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, struct function_free_array & D.192740)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192740->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9434, decl_uid=176615, cgraph_uid=6063, symbol_order=6852)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this, struct vector & D.176617)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176658;
  _2 = &D.176617->D.176658;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9432, decl_uid=176083, cgraph_uid=6060, symbol_order=6849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.176085)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.176085->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10079, decl_uid=175989, cgraph_uid=6711, symbol_order=7504)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  std::allocator<free_type>::allocator (this, _1);
  _2 = &this->D.176003;
  _3 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.176003;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI9free_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10563, decl_uid=240163, cgraph_uid=7195, symbol_order=7988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.250967;

  <bb 2> :
  D.250967 = __t;

  <bb 3> :
<L0>:
  return D.250967;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10565, decl_uid=175945, cgraph_uid=7197, symbol_order=7990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8928, decl_uid=216874, cgraph_uid=5560, symbol_order=6349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9440, decl_uid=192634, cgraph_uid=6072, symbol_order=6861)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10081, decl_uid=192458, cgraph_uid=6713, symbol_order=7506)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10567, decl_uid=240178, cgraph_uid=7199, symbol_order=7992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2Ev, funcdef_no=6387, decl_uid=193593, cgraph_uid=3362, symbol_order=4138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6385, decl_uid=177695, cgraph_uid=3359, symbol_order=4135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177703;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6383, decl_uid=177153, cgraph_uid=3356, symbol_order=4132)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7731, decl_uid=177045, cgraph_uid=4363, symbol_order=5148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this);
  _1 = &this->D.177048;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2Ev, funcdef_no=8646, decl_uid=176823, cgraph_uid=5278, symbol_order=6067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2Ev, funcdef_no=9442, decl_uid=176752, cgraph_uid=6074, symbol_order=6863)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_detched_array::operator= (_ZN30function_pthread_detched_arrayaSERKS_, funcdef_no=6389, decl_uid=195392, cgraph_uid=3364, symbol_order=4140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_detched_array & function_pthread_detched_array::operator= (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.195393)
{
  struct function_pthread_detched_array & D.250970;

  <bb 2> :
  _1 = &D.195393->pthread_detched_array;
  _2 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::operator= (_2, _1);
  D.250970 = this;

  <bb 3> :
<L0>:
  return D.250970;

}



;; Function std::vector<pthread_detched_type>::operator= (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEaSERKS2_, funcdef_no=7739, decl_uid=177281, cgraph_uid=4373, symbol_order=5158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_detched_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.251005;
  struct pthread_detched_type * __tmp;
  const size_type __xlen;
  struct vector & D.251003;
  struct __normal_iterator D.251000;
  struct __normal_iterator D.250999;
  struct __normal_iterator D.250998;
  struct __normal_iterator D.250997;
  struct __normal_iterator D.250996;
  bool retval.954;
  struct __normal_iterator D.250991;
  struct __normal_iterator D.250990;
  bool retval.953;
  bool iftmp.952;
  bool retval.951;
  bool retval.950;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.950 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ();
  if (retval.950 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.177703;
  _4 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.177703;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.952 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.952 = 0;

  <bb 8> :
  retval.951 = iftmp.952;
  if (retval.951 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_detched_type>::clear (this);
  _8 = &this->D.177703;
  _9 = this->D.177703._M_impl.D.177048._M_end_of_storage;
  _10 = this->D.177703._M_impl.D.177048._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.177703._M_impl.D.177048._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_8, _14, _13);
  this->D.177703._M_impl.D.177048._M_start = 0B;
  this->D.177703._M_impl.D.177048._M_finish = 0B;
  this->D.177703._M_impl.D.177048._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.177703;
  _16 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.177703;
  _18 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_detched_type>::size (__x);
  _19 = std::vector<pthread_detched_type>::capacity (this);
  retval.953 = __xlen > _19;
  if (retval.953 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.250990 = std::vector<pthread_detched_type>::end (__x);
  D.250991 = std::vector<pthread_detched_type>::begin (__x);
  D.251005 = std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (this, __xlen, D.250991, D.250990);
  __tmp = D.251005;
  _20 = &this->D.177703;
  _21 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.177703._M_impl.D.177048._M_finish;
  _23 = this->D.177703._M_impl.D.177048._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_23, _22, _21);
  _24 = &this->D.177703;
  _25 = this->D.177703._M_impl.D.177048._M_end_of_storage;
  _26 = this->D.177703._M_impl.D.177048._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.177703._M_impl.D.177048._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_24, _30, _29);
  this->D.177703._M_impl.D.177048._M_start = __tmp;
  _31 = this->D.177703._M_impl.D.177048._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.177703._M_impl.D.177048._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_detched_type>::size (this);
  retval.954 = __xlen <= _34;
  if (retval.954 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.177703;
  _36 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_35);
  D.250996 = std::vector<pthread_detched_type>::end (this);
  D.250997 = std::vector<pthread_detched_type>::begin (this);
  D.250998 = std::vector<pthread_detched_type>::end (__x);
  D.250999 = std::vector<pthread_detched_type>::begin (__x);
  D.251000 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.250999, D.250998, D.250997);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (D.251000, D.250996, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.177703._M_impl.D.177048._M_start;
  _38 = __x->D.177703._M_impl.D.177048._M_start;
  _39 = std::vector<pthread_detched_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.177703._M_impl.D.177048._M_start;
  std::copy<pthread_detched_type*, pthread_detched_type*> (_42, _41, _37);
  _43 = &this->D.177703;
  _44 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.177703._M_impl.D.177048._M_finish;
  _46 = __x->D.177703._M_impl.D.177048._M_finish;
  _47 = __x->D.177703._M_impl.D.177048._M_start;
  _48 = std::vector<pthread_detched_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.177703._M_impl.D.177048._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.177703._M_impl.D.177048._M_finish = _53;

  <bb 17> :
  D.251003 = this;

  <bb 18> :
<L19>:
  return D.251003;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7740, decl_uid=176915, cgraph_uid=4371, symbol_order=5156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ()
{
  bool D.251006;

  <bb 2> :
  D.251006 = 0;

  <bb 3> :
<L0>:
  return D.251006;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E15_S_always_equalEv, funcdef_no=7741, decl_uid=176918, cgraph_uid=4372, symbol_order=5157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ()
{
  bool D.251008;

  <bb 2> :
  D.251008 = 1;

  <bb 3> :
<L0>:
  return D.251008;

}



;; Function std::operator!= (_ZStneRKSaI20pthread_detched_typeES2_, funcdef_no=8655, decl_uid=176801, cgraph_uid=5287, symbol_order=6076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.224767, const struct allocator & D.224768)
{
  bool D.251010;

  <bb 2> :
  D.251010 = 0;

  <bb 3> :
<L0>:
  return D.251010;

}



;; Function std::vector<pthread_detched_type>::clear (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5clearEv, funcdef_no=8656, decl_uid=177433, cgraph_uid=5288, symbol_order=6077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_start;
  std::vector<pthread_detched_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_detched_type>::_M_erase_at_end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9445, decl_uid=177561, cgraph_uid=6077, symbol_order=6866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_detched_type>::_M_erase_at_end (struct vector * const this, struct pthread_detched_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.177703;
  _5 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.177703._M_impl.D.177048._M_finish;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (__pos, _6, _5);
  this->D.177703._M_impl.D.177048._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_ZSt15__alloc_on_copyISaI20pthread_detched_typeEEvRT_RKS2_, funcdef_no=8657, decl_uid=213176, cgraph_uid=5289, symbol_order=6078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_detched_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_detched_type>::capacity (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8capacityEv, funcdef_no=8658, decl_uid=177349, cgraph_uid=5290, symbol_order=6079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::capacity (const struct vector * const this)
{
  size_type D.251015;

  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_end_of_storage;
  _2 = this->D.177703._M_impl.D.177048._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.251015 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251015;

}



;; Function std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8659, decl_uid=213183, cgraph_uid=5291, symbol_order=6080)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_detched_type * std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_detched_type * D.251019;
  struct pthread_detched_type * __result;
  struct pthread_detched_type * D.251017;

  <bb 2> :
  _1 = &this->D.177703;
  D.251019 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_1, __n);
  __result = D.251019;
  _2 = &this->D.177703;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (__first, __last, __result, _3);

  <bb 3> :
  D.251017 = __result;

  <bb 4> :
<L0>:
  return D.251017;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.177703;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_detched_type>::end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8662, decl_uid=177316, cgraph_uid=5294, symbol_order=6083)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::end (struct vector * const this)
{
  struct iterator D.224854;
  struct iterator D.251023;

  <bb 2> :
  _1 = &this->D.177703._M_impl.D.177048._M_finish;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.224854, _1);
  D.251023 = D.224854;
  D.224854 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251023;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9448, decl_uid=213265, cgraph_uid=6080, symbol_order=6869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8660, decl_uid=177312, cgraph_uid=5292, symbol_order=6081)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::begin (struct vector * const this)
{
  struct iterator D.224808;
  struct iterator D.251026;

  <bb 2> :
  _1 = &this->D.177703._M_impl.D.177048._M_start;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.224808, _1);
  D.251026 = D.224808;
  D.224808 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251026;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8661, decl_uid=213284, cgraph_uid=5293, symbol_order=6082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.251031;
  struct __normal_iterator D.251030;
  struct __normal_iterator D.251029;

  <bb 2> :
  D.251030 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.251031 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.251029 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.251031, D.251030, __result);

  <bb 3> :
<L0>:
  return D.251029;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9451, decl_uid=224826, cgraph_uid=6084, symbol_order=6873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_detched_type * D.251035;
  struct __normal_iterator D.251033;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__result);
  _2 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.251035 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_3, _2, _1);
  _4 = D.251035;
  D.251033 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.251033;

}



;; Function std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIP20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10085, decl_uid=234814, cgraph_uid=6717, symbol_order=7510)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  struct pthread_detched_type * D.251036;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.251036 = *_1;

  <bb 3> :
<L0>:
  return D.251036;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9462, decl_uid=213252, cgraph_uid=6094, symbol_order=6883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_detched_type * const & D.251038;

  <bb 2> :
  D.251038 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251038;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10087, decl_uid=234821, cgraph_uid=6719, symbol_order=7512)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __from, struct pthread_detched_type * __res)
{
  struct __normal_iterator D.251040;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.251040 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.251040;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10572, decl_uid=213243, cgraph_uid=7204, symbol_order=7997)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_detched_type * const D.243503;
  struct __normal_iterator D.243504;
  struct __normal_iterator D.251042;

  <bb 2> :
  _1 = this->_M_current;
  __n.955_2 = (long unsigned int) __n;
  _3 = __n.955_2 * 16;
  _4 = _1 + _3;
  D.243503 = _4;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.243504, &D.243503);
  D.251042 = D.243504;
  D.243504 = {CLOBBER};
  D.243503 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.251042;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8663, decl_uid=213290, cgraph_uid=5295, symbol_order=6084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.224857)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9453, decl_uid=224859, cgraph_uid=6085, symbol_order=6874)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10088, decl_uid=234845, cgraph_uid=6720, symbol_order=7513)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator D.240203, struct __normal_iterator D.240204)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_detched_type*, pthread_detched_type*> (_ZSt4copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=8664, decl_uid=213298, cgraph_uid=5296, symbol_order=6085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251048;
  struct pthread_detched_type * D.251046;

  <bb 2> :
  _1 = std::__miter_base<pthread_detched_type*> (__last);
  _2 = std::__miter_base<pthread_detched_type*> (__first);
  D.251048 = std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_2, _1, __result);
  D.251046 = D.251048;

  <bb 3> :
<L0>:
  return D.251046;

}



;; Function std::__miter_base<pthread_detched_type*> (_ZSt12__miter_baseIP20pthread_detched_typeET_S2_, funcdef_no=9454, decl_uid=224875, cgraph_uid=6086, symbol_order=6875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__miter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.251049;

  <bb 2> :
  D.251049 = __it;

  <bb 3> :
<L0>:
  return D.251049;

}



;; Function std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_ZSt13__copy_move_aILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=9455, decl_uid=224877, cgraph_uid=6087, symbol_order=6876)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251053;
  struct pthread_detched_type * D.251051;

  <bb 2> :
  __result.956_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.956_1);
  _3 = std::__niter_base<pthread_detched_type*> (__last);
  _4 = std::__niter_base<pthread_detched_type*> (__first);
  D.251053 = std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.251053;
  D.251051 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251051;

}



;; Function std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10090, decl_uid=234856, cgraph_uid=6722, symbol_order=7515)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251056;
  struct pthread_detched_type * D.251054;

  <bb 2> :
  D.251056 = std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.251054 = D.251056;

  <bb 3> :
<L0>:
  return D.251054;

}



;; Function std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10573, decl_uid=240212, cgraph_uid=7205, symbol_order=7998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251057;

  <bb 2> :
  D.251057 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251057;

}



;; Function std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIP20pthread_detched_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8665, decl_uid=213302, cgraph_uid=5297, symbol_order=6086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.224884)
{
  struct pthread_detched_type * D.251061;
  struct pthread_detched_type * D.251059;

  <bb 2> :
  D.251061 = std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.251059 = D.251061;

  <bb 3> :
<L0>:
  return D.251059;

}



;; Function std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (_ZSt18uninitialized_copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=9456, decl_uid=224886, cgraph_uid=6088, symbol_order=6877)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251064;
  const bool __assignable;
  struct pthread_detched_type * D.251062;

  <bb 2> :
  __assignable = 1;
  D.251064 = std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.251062 = D.251064;

  <bb 3> :
<L0>:
  return D.251062;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP20pthread_detched_typeS3_EET0_T_S5_S4_, funcdef_no=10092, decl_uid=234894, cgraph_uid=6724, symbol_order=7517)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251067;
  struct pthread_detched_type * D.251065;

  <bb 2> :
  D.251067 = std::copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.251065 = D.251067;

  <bb 3> :
<L0>:
  return D.251065;

}



;; Function std::vector<pthread_detched_type>::push_back (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE9push_backERKS0_, funcdef_no=7742, decl_uid=177383, cgraph_uid=4375, symbol_order=5160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_detched_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.251071;

  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_finish;
  _2 = this->D.177703._M_impl.D.177048._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.177703._M_impl.D.177048._M_finish;
  _4 = &this->D.177703._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_4, _3, __x);
  _5 = this->D.177703._M_impl.D.177048._M_finish;
  _6 = _5 + 16;
  this->D.177703._M_impl.D.177048._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251071 = std::vector<pthread_detched_type>::end (this);
  std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (this, D.251071, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8666, decl_uid=213314, cgraph_uid=5298, symbol_order=6087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (struct allocator_type & __a, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_detched_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_detched_type&> (_ZSt7forwardIRK20pthread_detched_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9457, decl_uid=224901, cgraph_uid=6089, symbol_order=6878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_detched_type & std::forward<const pthread_detched_type&> (const struct type & __t)
{
  const struct pthread_detched_type & D.251072;

  <bb 2> :
  D.251072 = __t;

  <bb 3> :
<L0>:
  return D.251072;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9458, decl_uid=224903, cgraph_uid=6090, symbol_order=6879)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (struct new_allocator * const this, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  void * D.234906;
  void * D.234905;
  const struct pthread_detched_type * D.234907;

  <bb 2> :
  D.234907 = std::forward<const pthread_detched_type&> (__args#0);
  D.234905 = __p;
  D.234906 = operator new (16, D.234905);
  MEM[(struct pthread_detched_type *)D.234906] = *D.234907;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8667, decl_uid=213483, cgraph_uid=5302, symbol_order=6091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (struct vector * const this, struct iterator __position, const struct pthread_detched_type & __args#0)
{
  struct pthread_detched_type * D.251078;
  const size_type D.251077;
  struct pthread_detched_type * __new_finish;
  struct pthread_detched_type * __new_start;
  const size_type __elems_before;
  struct pthread_detched_type * __old_finish;
  struct pthread_detched_type * __old_start;
  const size_type __len;
  struct iterator D.224914;

  <bb 2> :
  D.251077 = std::vector<pthread_detched_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251077;
  __old_start = this->D.177703._M_impl.D.177048._M_start;
  __old_finish = this->D.177703._M_impl.D.177048._M_finish;
  D.224914 = std::vector<pthread_detched_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (&__position, &D.224914);
  __elems_before = (const size_type) _1;
  D.224914 = {CLOBBER};
  _2 = &this->D.177703;
  D.251078 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_2, __len);
  __new_start = D.251078;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_detched_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.177703._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.177703;
  _8 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.177703;
  _12 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.177703;
  _23 = this->D.177703._M_impl.D.177048._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.177703._M_impl.D.177048._M_start = __new_start;
  this->D.177703._M_impl.D.177048._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.177703._M_impl.D.177048._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_check_len (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9459, decl_uid=177552, cgraph_uid=6091, symbol_order=6880)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_detched_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.959;
  size_type D.251082;
  const long unsigned int D.234912;
  bool retval.957;

  <bb 2> :
  _1 = std::vector<pthread_detched_type>::max_size (this);
  _2 = std::vector<pthread_detched_type>::size (this);
  _3 = _1 - _2;
  __n.958_4 = __n;
  retval.957 = _3 < __n.958_4;
  if (retval.957 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_detched_type>::size (this);
  _6 = std::vector<pthread_detched_type>::size (this);
  D.234912 = _6;
  _7 = std::max<long unsigned int> (&D.234912, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234912 = {CLOBBER};
  _9 = std::vector<pthread_detched_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_detched_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.959 = std::vector<pthread_detched_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.959 = __len;

  <bb 8> :
  D.251082 = iftmp.959;

  <bb 9> :
<L6>:
  return D.251082;

}



;; Function std::vector<pthread_detched_type>::max_size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8max_sizeEv, funcdef_no=10093, decl_uid=177338, cgraph_uid=6725, symbol_order=7518)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::max_size (const struct vector * const this)
{
  size_type D.251089;

  <bb 2> :
  _1 = &this->D.177703;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  D.251089 = std::vector<pthread_detched_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251089;

}



;; Function std::vector<pthread_detched_type>::_S_max_size (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10574, decl_uid=177559, cgraph_uid=7206, symbol_order=7999)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251091;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251091 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251091;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8max_sizeERKS1_, funcdef_no=10801, decl_uid=176873, cgraph_uid=7433, symbol_order=8228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251094;

  <bb 2> :
  D.251094 = __gnu_cxx::new_allocator<pthread_detched_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251094;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE8max_sizeEv, funcdef_no=10904, decl_uid=176715, cgraph_uid=7536, symbol_order=8331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251096;

  <bb 2> :
  D.251096 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251096;

}



;; Function __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZN9__gnu_cxxmiIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9460, decl_uid=224915, cgraph_uid=6092, symbol_order=6881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251098;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251098 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.251098;

}



;; Function std::vector<pthread_detched_type>::_S_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9461, decl_uid=177210, cgraph_uid=6093, symbol_order=6882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251101;
  struct pthread_detched_type * D.251100;

  <bb 2> :
  D.251100 = std::vector<pthread_detched_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251101);

  <bb 3> :
<L0>:
  return D.251100;

}



;; Function std::vector<pthread_detched_type>::_S_do_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10094, decl_uid=177198, cgraph_uid=6726, symbol_order=7519)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_do_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240228)
{
  struct pthread_detched_type * D.251103;

  <bb 2> :
  D.251103 = std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251103;

}



;; Function std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (_ZSt12__relocate_aIP20pthread_detched_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10575, decl_uid=225080, cgraph_uid=7207, symbol_order=8000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & __alloc)
{
  struct pthread_detched_type * D.251105;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*> (__result);
  _2 = std::__niter_base<pthread_detched_type*> (__last);
  _3 = std::__niter_base<pthread_detched_type*> (__first);
  D.251105 = std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251105;

}



;; Function std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_ZSt14__relocate_a_1I20pthread_detched_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10802, decl_uid=225254, cgraph_uid=7434, symbol_order=8229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.244595)
{
  ptrdiff_t __count;
  struct pthread_detched_type * D.251110;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.960_2 = (long unsigned int) __count;
  _3 = __count.960_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.961_4 = (long unsigned int) __count;
  _5 = __count.961_4 * 16;
  D.251110 = __result + _5;

  <bb 5> :
<L3>:
  return D.251110;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::put (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7744, decl_uid=193259, cgraph_uid=4376, symbol_order=5161)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_detched_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_detched_array & v)
{
  bool D.251119;
  struct hash_entry * D.251118;
  unsigned int D.251117;
  bool ins;
  struct hash_entry * e;
  bool D.251115;
  void * D.213493;
  void * D.213492;

  <bb 2> :
  _1 = &this->m_table;
  D.251117 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.251117;
  D.251118 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.251118;
  D.251119 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (e);
  ins = D.251119;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213492 = &e->m_value;
  D.213493 = operator new (24, D.213492);
  function_pthread_detched_array::function_pthread_detched_array (D.213493, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_detched_array::operator= (_4, v);

  <bb 5> :
  D.251115 = ~ins;

  <bb 6> :
<L3>:
  return D.251115;

  <bb 7> :
<L4>:
  operator delete (D.213493, D.213492);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8671, decl_uid=193417, cgraph_uid=5303, symbol_order=6092)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251170;
  bool D.251169;
  bool D.251168;
  bool D.251167;
  bool D.251166;
  bool D.251165;
  struct value_type * D.251164;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.967;
  bool retval.966;
  bool retval.965;
  bool retval.964;
  bool retval.963;
  bool retval.962;
  struct value_type * D.251126;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.251165 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.962 = D.251165;
  if (retval.962 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251166 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.963 = D.251166;
  if (retval.963 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251167 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.964 = D.251167;
  if (retval.964 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.251126 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.251168 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.965 = D.251168;
  if (retval.965 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251169 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.966 = D.251169;
  if (retval.966 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251170 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.967 = D.251170;
  if (retval.967 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.251126 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.251126 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.251126 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.251126 = _37 + _39;

  <bb 27> :
<L37>:
  return D.251126;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9464, decl_uid=193498, cgraph_uid=6108, symbol_order=6897)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251201;
  unsigned int D.251200;
  bool D.251199;
  bool D.251198;
  struct mem_alloc_description & D.251197;
  struct value_type * D.251196;
  unsigned int D.251195;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234950;
  void * D.234949;
  struct hash_entry & D.234987;
  bool iftmp.971;
  bool retval.970;
  bool iftmp.969;
  bool retval.968;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.969 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.969 = 0;

  <bb 6> :
  retval.968 = iftmp.969;
  if (retval.968 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251195 = hash_table_higher_prime_index (_5);
  nindex = D.251195;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251196 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251196;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251198 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251198;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251199 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251199;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.971 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.971 = 0;

  <bb 15> :
  retval.970 = iftmp.971;
  if (retval.970 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251200 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (x);
  _16 = D.251200;
  D.251201 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251201;
  D.234987 = std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (x);
  D.234949 = q;
  D.234950 = operator new (32, D.234949);
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (D.234950, D.234987);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10096, decl_uid=193393, cgraph_uid=6728, symbol_order=7521)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251202;

  <bb 2> :
  D.251202 = this->m_size;

  <bb 3> :
<L0>:
  return D.251202;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10097, decl_uid=193395, cgraph_uid=6729, symbol_order=7522)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251204;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251204 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251204;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10098, decl_uid=193495, cgraph_uid=6730, symbol_order=7523)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.972;
  bool D.251206;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.972 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.972 = 0;

  <bb 6> :
  D.251206 = iftmp.972;

  <bb 7> :
<L4>:
  return D.251206;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9320, decl_uid=193485, cgraph_uid=5952, symbol_order=6741)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.251228;
  struct value_type * D.251227;
  struct mem_alloc_description & D.251226;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.251224;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.251227 = xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (n);
  nentries = D.251227;
  goto <bb 6>; [INV]

  <bb 5> :
  D.251228 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (n);
  nentries = D.251228;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.251224 = nentries;

  <bb 9> :
<L14>:
  return D.251224;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10002, decl_uid=216800, cgraph_uid=6634, symbol_order=7427)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.251231;
  struct hash_entry * D.251229;

  <bb 2> :
  D.251231 = xcalloc (count, 32);
  D.251229 = D.251231;

  <bb 3> :
<L0>:
  return D.251229;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10003, decl_uid=233456, cgraph_uid=6635, symbol_order=7428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.251238;
  struct hash_entry * D.251237;
  struct hash_entry * D.251235;
  bool retval.973;

  <bb 2> :
  retval.973 = need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ();
  if (retval.973 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.251237 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.251235 = D.251237;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.251238 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.251235 = D.251238;

  <bb 5> :
<L2>:
  return D.251235;

}



;; Function finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10512, decl_uid=239839, cgraph_uid=7147, symbol_order=7940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10514, decl_uid=243225, cgraph_uid=7145, symbol_order=7938)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10511, decl_uid=239838, cgraph_uid=7143, symbol_order=7936)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ()
{
  bool D.251239;

  <bb 2> :
  D.251239 = 1;

  <bb 3> :
<L0>:
  return D.251239;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10100, decl_uid=193318, cgraph_uid=6732, symbol_order=7525)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251243;
  hashval_t D.251241;

  <bb 2> :
  _1 = &e->m_key;
  D.251243 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_1);
  D.251241 = D.251243;

  <bb 3> :
<L0>:
  return D.251241;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10099, decl_uid=193488, cgraph_uid=6731, symbol_order=7524)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251256;
  bool D.251255;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.975;
  struct value_type * D.251247;
  bool retval.974;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.251255 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.974 = D.251255;
  if (retval.974 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251247 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.251256 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.975 = D.251256;
  if (retval.975 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251247 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251247;

}



;; Function std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10101, decl_uid=234947, cgraph_uid=6733, symbol_order=7526)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251257;

  <bb 2> :
  D.251257 = __t;

  <bb 3> :
<L0>:
  return D.251257;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9475, decl_uid=234972, cgraph_uid=6106, symbol_order=6895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234974)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234974->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234974->m_value;
  function_pthread_detched_array::function_pthread_detched_array (_2, _3);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2EOS_, funcdef_no=9473, decl_uid=193610, cgraph_uid=6103, symbol_order=6892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, struct function_pthread_detched_array & D.193612)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193612->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9471, decl_uid=177660, cgraph_uid=6100, symbol_order=6889)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this, struct vector & D.177662)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177703;
  _2 = &D.177662->D.177703;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9469, decl_uid=177128, cgraph_uid=6097, symbol_order=6886)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.177130)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.177130->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10103, decl_uid=177034, cgraph_uid=6735, symbol_order=7528)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_detched_type>::allocator (this, _1);
  _2 = &this->D.177048;
  _3 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.177048;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI20pthread_detched_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10576, decl_uid=240258, cgraph_uid=7208, symbol_order=8001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.251259;

  <bb 2> :
  D.251259 = __t;

  <bb 3> :
<L0>:
  return D.251259;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10578, decl_uid=176990, cgraph_uid=7210, symbol_order=8003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8916, decl_uid=216802, cgraph_uid=5548, symbol_order=6337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9477, decl_uid=193506, cgraph_uid=6109, symbol_order=6898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10105, decl_uid=193330, cgraph_uid=6737, symbol_order=7530)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10580, decl_uid=240273, cgraph_uid=7212, symbol_order=8005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2Ev, funcdef_no=6401, decl_uid=194069, cgraph_uid=3376, symbol_order=4152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6399, decl_uid=178740, cgraph_uid=3373, symbol_order=4149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178748;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6397, decl_uid=178198, cgraph_uid=3370, symbol_order=4146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7746, decl_uid=178090, cgraph_uid=4378, symbol_order=5163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this);
  _1 = &this->D.178093;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2Ev, funcdef_no=8674, decl_uid=177868, cgraph_uid=5306, symbol_order=6095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2Ev, funcdef_no=9479, decl_uid=177797, cgraph_uid=6111, symbol_order=6900)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_exit_array::operator= (_ZN27function_pthread_exit_arrayaSERKS_, funcdef_no=6403, decl_uid=195585, cgraph_uid=3378, symbol_order=4154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_exit_array & function_pthread_exit_array::operator= (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.195586)
{
  struct function_pthread_exit_array & D.251262;

  <bb 2> :
  _1 = &D.195586->pthread_exit_array;
  _2 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::operator= (_2, _1);
  D.251262 = this;

  <bb 3> :
<L0>:
  return D.251262;

}



;; Function std::vector<pthread_exit_type>::operator= (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEaSERKS2_, funcdef_no=7754, decl_uid=178326, cgraph_uid=4388, symbol_order=5173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_exit_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.251297;
  struct pthread_exit_type * __tmp;
  const size_type __xlen;
  struct vector & D.251295;
  struct __normal_iterator D.251292;
  struct __normal_iterator D.251291;
  struct __normal_iterator D.251290;
  struct __normal_iterator D.251289;
  struct __normal_iterator D.251288;
  bool retval.980;
  struct __normal_iterator D.251283;
  struct __normal_iterator D.251282;
  bool retval.979;
  bool iftmp.978;
  bool retval.977;
  bool retval.976;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.976 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ();
  if (retval.976 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.178748;
  _4 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.178748;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.978 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.978 = 0;

  <bb 8> :
  retval.977 = iftmp.978;
  if (retval.977 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_exit_type>::clear (this);
  _8 = &this->D.178748;
  _9 = this->D.178748._M_impl.D.178093._M_end_of_storage;
  _10 = this->D.178748._M_impl.D.178093._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.178748._M_impl.D.178093._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_8, _14, _13);
  this->D.178748._M_impl.D.178093._M_start = 0B;
  this->D.178748._M_impl.D.178093._M_finish = 0B;
  this->D.178748._M_impl.D.178093._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.178748;
  _16 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.178748;
  _18 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_exit_type>::size (__x);
  _19 = std::vector<pthread_exit_type>::capacity (this);
  retval.979 = __xlen > _19;
  if (retval.979 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.251282 = std::vector<pthread_exit_type>::end (__x);
  D.251283 = std::vector<pthread_exit_type>::begin (__x);
  D.251297 = std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (this, __xlen, D.251283, D.251282);
  __tmp = D.251297;
  _20 = &this->D.178748;
  _21 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.178748._M_impl.D.178093._M_finish;
  _23 = this->D.178748._M_impl.D.178093._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_23, _22, _21);
  _24 = &this->D.178748;
  _25 = this->D.178748._M_impl.D.178093._M_end_of_storage;
  _26 = this->D.178748._M_impl.D.178093._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.178748._M_impl.D.178093._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_24, _30, _29);
  this->D.178748._M_impl.D.178093._M_start = __tmp;
  _31 = this->D.178748._M_impl.D.178093._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.178748._M_impl.D.178093._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_exit_type>::size (this);
  retval.980 = __xlen <= _34;
  if (retval.980 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.178748;
  _36 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_35);
  D.251288 = std::vector<pthread_exit_type>::end (this);
  D.251289 = std::vector<pthread_exit_type>::begin (this);
  D.251290 = std::vector<pthread_exit_type>::end (__x);
  D.251291 = std::vector<pthread_exit_type>::begin (__x);
  D.251292 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.251291, D.251290, D.251289);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (D.251292, D.251288, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.178748._M_impl.D.178093._M_start;
  _38 = __x->D.178748._M_impl.D.178093._M_start;
  _39 = std::vector<pthread_exit_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.178748._M_impl.D.178093._M_start;
  std::copy<pthread_exit_type*, pthread_exit_type*> (_42, _41, _37);
  _43 = &this->D.178748;
  _44 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.178748._M_impl.D.178093._M_finish;
  _46 = __x->D.178748._M_impl.D.178093._M_finish;
  _47 = __x->D.178748._M_impl.D.178093._M_start;
  _48 = std::vector<pthread_exit_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.178748._M_impl.D.178093._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.178748._M_impl.D.178093._M_finish = _53;

  <bb 17> :
  D.251295 = this;

  <bb 18> :
<L19>:
  return D.251295;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7755, decl_uid=177960, cgraph_uid=4386, symbol_order=5171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ()
{
  bool D.251298;

  <bb 2> :
  D.251298 = 0;

  <bb 3> :
<L0>:
  return D.251298;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E15_S_always_equalEv, funcdef_no=7756, decl_uid=177963, cgraph_uid=4387, symbol_order=5172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ()
{
  bool D.251300;

  <bb 2> :
  D.251300 = 1;

  <bb 3> :
<L0>:
  return D.251300;

}



;; Function std::operator!= (_ZStneRKSaI17pthread_exit_typeES2_, funcdef_no=8683, decl_uid=177846, cgraph_uid=5315, symbol_order=6104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.225473, const struct allocator & D.225474)
{
  bool D.251302;

  <bb 2> :
  D.251302 = 0;

  <bb 3> :
<L0>:
  return D.251302;

}



;; Function std::vector<pthread_exit_type>::clear (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5clearEv, funcdef_no=8684, decl_uid=178478, cgraph_uid=5316, symbol_order=6105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_start;
  std::vector<pthread_exit_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_exit_type>::_M_erase_at_end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9482, decl_uid=178606, cgraph_uid=6114, symbol_order=6903)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_exit_type>::_M_erase_at_end (struct vector * const this, struct pthread_exit_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.178748;
  _5 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.178748._M_impl.D.178093._M_finish;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (__pos, _6, _5);
  this->D.178748._M_impl.D.178093._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_ZSt15__alloc_on_copyISaI17pthread_exit_typeEEvRT_RKS2_, funcdef_no=8685, decl_uid=213534, cgraph_uid=5317, symbol_order=6106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_exit_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_exit_type>::capacity (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8capacityEv, funcdef_no=8686, decl_uid=178394, cgraph_uid=5318, symbol_order=6107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::capacity (const struct vector * const this)
{
  size_type D.251307;

  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_end_of_storage;
  _2 = this->D.178748._M_impl.D.178093._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.251307 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251307;

}



;; Function std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8687, decl_uid=213541, cgraph_uid=5319, symbol_order=6108)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_exit_type * std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_exit_type * D.251311;
  struct pthread_exit_type * __result;
  struct pthread_exit_type * D.251309;

  <bb 2> :
  _1 = &this->D.178748;
  D.251311 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_1, __n);
  __result = D.251311;
  _2 = &this->D.178748;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (__first, __last, __result, _3);

  <bb 3> :
  D.251309 = __result;

  <bb 4> :
<L0>:
  return D.251309;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.178748;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_exit_type>::end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8690, decl_uid=178361, cgraph_uid=5322, symbol_order=6111)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::end (struct vector * const this)
{
  struct iterator D.225560;
  struct iterator D.251315;

  <bb 2> :
  _1 = &this->D.178748._M_impl.D.178093._M_finish;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.225560, _1);
  D.251315 = D.225560;
  D.225560 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251315;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9485, decl_uid=213623, cgraph_uid=6117, symbol_order=6906)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8688, decl_uid=178357, cgraph_uid=5320, symbol_order=6109)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::begin (struct vector * const this)
{
  struct iterator D.225514;
  struct iterator D.251318;

  <bb 2> :
  _1 = &this->D.178748._M_impl.D.178093._M_start;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.225514, _1);
  D.251318 = D.225514;
  D.225514 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251318;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8689, decl_uid=213642, cgraph_uid=5321, symbol_order=6110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.251323;
  struct __normal_iterator D.251322;
  struct __normal_iterator D.251321;

  <bb 2> :
  D.251322 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.251323 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.251321 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.251323, D.251322, __result);

  <bb 3> :
<L0>:
  return D.251321;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9488, decl_uid=225532, cgraph_uid=6121, symbol_order=6910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_exit_type * D.251327;
  struct __normal_iterator D.251325;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__result);
  _2 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.251327 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_3, _2, _1);
  _4 = D.251327;
  D.251325 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.251325;

}



;; Function std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIP17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10109, decl_uid=235170, cgraph_uid=6741, symbol_order=7534)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  struct pthread_exit_type * D.251328;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.251328 = *_1;

  <bb 3> :
<L0>:
  return D.251328;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9499, decl_uid=213610, cgraph_uid=6131, symbol_order=6920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_exit_type * const & D.251330;

  <bb 2> :
  D.251330 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251330;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10111, decl_uid=235177, cgraph_uid=6743, symbol_order=7536)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __from, struct pthread_exit_type * __res)
{
  struct __normal_iterator D.251332;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.251332 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.251332;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10585, decl_uid=213601, cgraph_uid=7217, symbol_order=8010)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_exit_type * const D.243564;
  struct __normal_iterator D.243565;
  struct __normal_iterator D.251334;

  <bb 2> :
  _1 = this->_M_current;
  __n.981_2 = (long unsigned int) __n;
  _3 = __n.981_2 * 16;
  _4 = _1 + _3;
  D.243564 = _4;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.243565, &D.243564);
  D.251334 = D.243565;
  D.243565 = {CLOBBER};
  D.243564 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.251334;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8691, decl_uid=213648, cgraph_uid=5323, symbol_order=6112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.225563)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9490, decl_uid=225565, cgraph_uid=6122, symbol_order=6911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10112, decl_uid=235201, cgraph_uid=6744, symbol_order=7537)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator D.240298, struct __normal_iterator D.240299)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_exit_type*, pthread_exit_type*> (_ZSt4copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=8692, decl_uid=213656, cgraph_uid=5324, symbol_order=6113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251340;
  struct pthread_exit_type * D.251338;

  <bb 2> :
  _1 = std::__miter_base<pthread_exit_type*> (__last);
  _2 = std::__miter_base<pthread_exit_type*> (__first);
  D.251340 = std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_2, _1, __result);
  D.251338 = D.251340;

  <bb 3> :
<L0>:
  return D.251338;

}



;; Function std::__miter_base<pthread_exit_type*> (_ZSt12__miter_baseIP17pthread_exit_typeET_S2_, funcdef_no=9491, decl_uid=225581, cgraph_uid=6123, symbol_order=6912)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__miter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.251341;

  <bb 2> :
  D.251341 = __it;

  <bb 3> :
<L0>:
  return D.251341;

}



;; Function std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_ZSt13__copy_move_aILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=9492, decl_uid=225583, cgraph_uid=6124, symbol_order=6913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251345;
  struct pthread_exit_type * D.251343;

  <bb 2> :
  __result.982_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.982_1);
  _3 = std::__niter_base<pthread_exit_type*> (__last);
  _4 = std::__niter_base<pthread_exit_type*> (__first);
  D.251345 = std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.251345;
  D.251343 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251343;

}



;; Function std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10114, decl_uid=235212, cgraph_uid=6746, symbol_order=7539)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251348;
  struct pthread_exit_type * D.251346;

  <bb 2> :
  D.251348 = std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251346 = D.251348;

  <bb 3> :
<L0>:
  return D.251346;

}



;; Function std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10586, decl_uid=240307, cgraph_uid=7218, symbol_order=8011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251349;

  <bb 2> :
  D.251349 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251349;

}



;; Function std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIP17pthread_exit_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8693, decl_uid=213660, cgraph_uid=5325, symbol_order=6114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.225590)
{
  struct pthread_exit_type * D.251353;
  struct pthread_exit_type * D.251351;

  <bb 2> :
  D.251353 = std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251351 = D.251353;

  <bb 3> :
<L0>:
  return D.251351;

}



;; Function std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (_ZSt18uninitialized_copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=9493, decl_uid=225592, cgraph_uid=6125, symbol_order=6914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251356;
  const bool __assignable;
  struct pthread_exit_type * D.251354;

  <bb 2> :
  __assignable = 1;
  D.251356 = std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251354 = D.251356;

  <bb 3> :
<L0>:
  return D.251354;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP17pthread_exit_typeS3_EET0_T_S5_S4_, funcdef_no=10116, decl_uid=235250, cgraph_uid=6748, symbol_order=7541)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251359;
  struct pthread_exit_type * D.251357;

  <bb 2> :
  D.251359 = std::copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251357 = D.251359;

  <bb 3> :
<L0>:
  return D.251357;

}



;; Function std::vector<pthread_exit_type>::push_back (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE9push_backERKS0_, funcdef_no=7757, decl_uid=178428, cgraph_uid=4390, symbol_order=5175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_exit_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.251363;

  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_finish;
  _2 = this->D.178748._M_impl.D.178093._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.178748._M_impl.D.178093._M_finish;
  _4 = &this->D.178748._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_4, _3, __x);
  _5 = this->D.178748._M_impl.D.178093._M_finish;
  _6 = _5 + 16;
  this->D.178748._M_impl.D.178093._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251363 = std::vector<pthread_exit_type>::end (this);
  std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (this, D.251363, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8694, decl_uid=213672, cgraph_uid=5326, symbol_order=6115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (struct allocator_type & __a, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_exit_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_exit_type&> (_ZSt7forwardIRK17pthread_exit_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9494, decl_uid=225607, cgraph_uid=6126, symbol_order=6915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_exit_type & std::forward<const pthread_exit_type&> (const struct type & __t)
{
  const struct pthread_exit_type & D.251364;

  <bb 2> :
  D.251364 = __t;

  <bb 3> :
<L0>:
  return D.251364;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9495, decl_uid=225609, cgraph_uid=6127, symbol_order=6916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (struct new_allocator * const this, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  void * D.235262;
  void * D.235261;
  const struct pthread_exit_type * D.235263;

  <bb 2> :
  D.235263 = std::forward<const pthread_exit_type&> (__args#0);
  D.235261 = __p;
  D.235262 = operator new (16, D.235261);
  MEM[(struct pthread_exit_type *)D.235262] = *D.235263;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8695, decl_uid=213841, cgraph_uid=5330, symbol_order=6119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (struct vector * const this, struct iterator __position, const struct pthread_exit_type & __args#0)
{
  struct pthread_exit_type * D.251370;
  const size_type D.251369;
  struct pthread_exit_type * __new_finish;
  struct pthread_exit_type * __new_start;
  const size_type __elems_before;
  struct pthread_exit_type * __old_finish;
  struct pthread_exit_type * __old_start;
  const size_type __len;
  struct iterator D.225620;

  <bb 2> :
  D.251369 = std::vector<pthread_exit_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251369;
  __old_start = this->D.178748._M_impl.D.178093._M_start;
  __old_finish = this->D.178748._M_impl.D.178093._M_finish;
  D.225620 = std::vector<pthread_exit_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (&__position, &D.225620);
  __elems_before = (const size_type) _1;
  D.225620 = {CLOBBER};
  _2 = &this->D.178748;
  D.251370 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_2, __len);
  __new_start = D.251370;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_exit_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.178748._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.178748;
  _8 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.178748;
  _12 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.178748;
  _23 = this->D.178748._M_impl.D.178093._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.178748._M_impl.D.178093._M_start = __new_start;
  this->D.178748._M_impl.D.178093._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.178748._M_impl.D.178093._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_check_len (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9496, decl_uid=178597, cgraph_uid=6128, symbol_order=6917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_exit_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.985;
  size_type D.251374;
  const long unsigned int D.235268;
  bool retval.983;

  <bb 2> :
  _1 = std::vector<pthread_exit_type>::max_size (this);
  _2 = std::vector<pthread_exit_type>::size (this);
  _3 = _1 - _2;
  __n.984_4 = __n;
  retval.983 = _3 < __n.984_4;
  if (retval.983 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_exit_type>::size (this);
  _6 = std::vector<pthread_exit_type>::size (this);
  D.235268 = _6;
  _7 = std::max<long unsigned int> (&D.235268, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235268 = {CLOBBER};
  _9 = std::vector<pthread_exit_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_exit_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.985 = std::vector<pthread_exit_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.985 = __len;

  <bb 8> :
  D.251374 = iftmp.985;

  <bb 9> :
<L6>:
  return D.251374;

}



;; Function std::vector<pthread_exit_type>::max_size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8max_sizeEv, funcdef_no=10117, decl_uid=178383, cgraph_uid=6749, symbol_order=7542)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::max_size (const struct vector * const this)
{
  size_type D.251381;

  <bb 2> :
  _1 = &this->D.178748;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  D.251381 = std::vector<pthread_exit_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251381;

}



;; Function std::vector<pthread_exit_type>::_S_max_size (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10587, decl_uid=178604, cgraph_uid=7219, symbol_order=8012)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251383;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251383 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251383;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8max_sizeERKS1_, funcdef_no=10804, decl_uid=177918, cgraph_uid=7436, symbol_order=8231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251386;

  <bb 2> :
  D.251386 = __gnu_cxx::new_allocator<pthread_exit_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251386;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE8max_sizeEv, funcdef_no=10905, decl_uid=177760, cgraph_uid=7537, symbol_order=8332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251388;

  <bb 2> :
  D.251388 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251388;

}



;; Function __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZN9__gnu_cxxmiIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9497, decl_uid=225621, cgraph_uid=6129, symbol_order=6918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251390;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251390 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.251390;

}



;; Function std::vector<pthread_exit_type>::_S_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9498, decl_uid=178255, cgraph_uid=6130, symbol_order=6919)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251393;
  struct pthread_exit_type * D.251392;

  <bb 2> :
  D.251392 = std::vector<pthread_exit_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251393);

  <bb 3> :
<L0>:
  return D.251392;

}



;; Function std::vector<pthread_exit_type>::_S_do_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10118, decl_uid=178243, cgraph_uid=6750, symbol_order=7543)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_do_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240323)
{
  struct pthread_exit_type * D.251395;

  <bb 2> :
  D.251395 = std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251395;

}



;; Function std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (_ZSt12__relocate_aIP17pthread_exit_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10588, decl_uid=225786, cgraph_uid=7220, symbol_order=8013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & __alloc)
{
  struct pthread_exit_type * D.251397;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*> (__result);
  _2 = std::__niter_base<pthread_exit_type*> (__last);
  _3 = std::__niter_base<pthread_exit_type*> (__first);
  D.251397 = std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251397;

}



;; Function std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_ZSt14__relocate_a_1I17pthread_exit_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10805, decl_uid=225960, cgraph_uid=7437, symbol_order=8232)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.244627)
{
  ptrdiff_t __count;
  struct pthread_exit_type * D.251402;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.986_2 = (long unsigned int) __count;
  _3 = __count.986_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.987_4 = (long unsigned int) __count;
  _5 = __count.987_4 * 16;
  D.251402 = __result + _5;

  <bb 5> :
<L3>:
  return D.251402;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::put (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7759, decl_uid=193735, cgraph_uid=4391, symbol_order=5176)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_exit_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_exit_array & v)
{
  bool D.251411;
  struct hash_entry * D.251410;
  unsigned int D.251409;
  bool ins;
  struct hash_entry * e;
  bool D.251407;
  void * D.213851;
  void * D.213850;

  <bb 2> :
  _1 = &this->m_table;
  D.251409 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.251409;
  D.251410 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.251410;
  D.251411 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (e);
  ins = D.251411;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213850 = &e->m_value;
  D.213851 = operator new (24, D.213850);
  function_pthread_exit_array::function_pthread_exit_array (D.213851, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_exit_array::operator= (_4, v);

  <bb 5> :
  D.251407 = ~ins;

  <bb 6> :
<L3>:
  return D.251407;

  <bb 7> :
<L4>:
  operator delete (D.213851, D.213850);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8699, decl_uid=193893, cgraph_uid=5331, symbol_order=6120)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251462;
  bool D.251461;
  bool D.251460;
  bool D.251459;
  bool D.251458;
  bool D.251457;
  struct value_type * D.251456;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.993;
  bool retval.992;
  bool retval.991;
  bool retval.990;
  bool retval.989;
  bool retval.988;
  struct value_type * D.251418;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.251457 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.988 = D.251457;
  if (retval.988 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251458 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.989 = D.251458;
  if (retval.989 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251459 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.990 = D.251459;
  if (retval.990 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.251418 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.251460 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.991 = D.251460;
  if (retval.991 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251461 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.992 = D.251461;
  if (retval.992 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251462 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.993 = D.251462;
  if (retval.993 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.251418 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.251418 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.251418 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.251418 = _37 + _39;

  <bb 27> :
<L37>:
  return D.251418;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9501, decl_uid=193974, cgraph_uid=6145, symbol_order=6934)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251493;
  unsigned int D.251492;
  bool D.251491;
  bool D.251490;
  struct mem_alloc_description & D.251489;
  struct value_type * D.251488;
  unsigned int D.251487;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.235306;
  void * D.235305;
  struct hash_entry & D.235343;
  bool iftmp.997;
  bool retval.996;
  bool iftmp.995;
  bool retval.994;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.995 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.995 = 0;

  <bb 6> :
  retval.994 = iftmp.995;
  if (retval.994 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251487 = hash_table_higher_prime_index (_5);
  nindex = D.251487;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251488 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251488;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251490 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251490;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251491 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251491;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.997 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.997 = 0;

  <bb 15> :
  retval.996 = iftmp.997;
  if (retval.996 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251492 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (x);
  _16 = D.251492;
  D.251493 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251493;
  D.235343 = std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (x);
  D.235305 = q;
  D.235306 = operator new (32, D.235305);
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (D.235306, D.235343);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10120, decl_uid=193869, cgraph_uid=6752, symbol_order=7545)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251494;

  <bb 2> :
  D.251494 = this->m_size;

  <bb 3> :
<L0>:
  return D.251494;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10121, decl_uid=193871, cgraph_uid=6753, symbol_order=7546)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251496;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251496 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251496;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10122, decl_uid=193971, cgraph_uid=6754, symbol_order=7547)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.998;
  bool D.251498;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.998 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.998 = 0;

  <bb 6> :
  D.251498 = iftmp.998;

  <bb 7> :
<L4>:
  return D.251498;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9333, decl_uid=193961, cgraph_uid=5965, symbol_order=6754)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.251520;
  struct value_type * D.251519;
  struct mem_alloc_description & D.251518;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.251516;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.251519 = xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (n);
  nentries = D.251519;
  goto <bb 6>; [INV]

  <bb 5> :
  D.251520 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (n);
  nentries = D.251520;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.251516 = nentries;

  <bb 9> :
<L14>:
  return D.251516;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10010, decl_uid=216824, cgraph_uid=6642, symbol_order=7435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.251523;
  struct hash_entry * D.251521;

  <bb 2> :
  D.251523 = xcalloc (count, 32);
  D.251521 = D.251523;

  <bb 3> :
<L0>:
  return D.251521;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10011, decl_uid=233625, cgraph_uid=6643, symbol_order=7436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.251530;
  struct hash_entry * D.251529;
  struct hash_entry * D.251527;
  bool retval.999;

  <bb 2> :
  retval.999 = need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ();
  if (retval.999 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.251529 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.251527 = D.251529;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.251530 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.251527 = D.251530;

  <bb 5> :
<L2>:
  return D.251527;

}



;; Function finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10521, decl_uid=239875, cgraph_uid=7156, symbol_order=7949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10523, decl_uid=243260, cgraph_uid=7154, symbol_order=7947)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10520, decl_uid=239874, cgraph_uid=7152, symbol_order=7945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ()
{
  bool D.251531;

  <bb 2> :
  D.251531 = 1;

  <bb 3> :
<L0>:
  return D.251531;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10124, decl_uid=193794, cgraph_uid=6756, symbol_order=7549)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251535;
  hashval_t D.251533;

  <bb 2> :
  _1 = &e->m_key;
  D.251535 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_1);
  D.251533 = D.251535;

  <bb 3> :
<L0>:
  return D.251533;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10123, decl_uid=193964, cgraph_uid=6755, symbol_order=7548)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251548;
  bool D.251547;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1001;
  struct value_type * D.251539;
  bool retval.1000;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.251547 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1000 = D.251547;
  if (retval.1000 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251539 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.251548 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1001 = D.251548;
  if (retval.1001 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251539 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251539;

}



;; Function std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10125, decl_uid=235303, cgraph_uid=6757, symbol_order=7550)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251549;

  <bb 2> :
  D.251549 = __t;

  <bb 3> :
<L0>:
  return D.251549;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9512, decl_uid=235328, cgraph_uid=6143, symbol_order=6932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.235330)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.235330->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.235330->m_value;
  function_pthread_exit_array::function_pthread_exit_array (_2, _3);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2EOS_, funcdef_no=9510, decl_uid=194086, cgraph_uid=6140, symbol_order=6929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, struct function_pthread_exit_array & D.194088)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194088->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9508, decl_uid=178705, cgraph_uid=6137, symbol_order=6926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this, struct vector & D.178707)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178748;
  _2 = &D.178707->D.178748;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9506, decl_uid=178173, cgraph_uid=6134, symbol_order=6923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.178175)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.178175->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10127, decl_uid=178079, cgraph_uid=6759, symbol_order=7552)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_exit_type>::allocator (this, _1);
  _2 = &this->D.178093;
  _3 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.178093;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI17pthread_exit_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10589, decl_uid=240353, cgraph_uid=7221, symbol_order=8014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.251551;

  <bb 2> :
  D.251551 = __t;

  <bb 3> :
<L0>:
  return D.251551;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10591, decl_uid=178035, cgraph_uid=7223, symbol_order=8016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8920, decl_uid=216826, cgraph_uid=5552, symbol_order=6341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9514, decl_uid=193982, cgraph_uid=6146, symbol_order=6935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10129, decl_uid=193806, cgraph_uid=6761, symbol_order=7554)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10593, decl_uid=240368, cgraph_uid=7225, symbol_order=8018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<assign_type>::push_back (_ZNSt6vectorI11assign_typeSaIS0_EE9push_backERKS0_, funcdef_no=7713, decl_uid=175285, cgraph_uid=4346, symbol_order=5131)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<assign_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.251557;

  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_finish;
  _2 = this->D.175605._M_impl.D.174950._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.175605._M_impl.D.174950._M_finish;
  _4 = &this->D.175605._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_4, _3, __x);
  _5 = this->D.175605._M_impl.D.174950._M_finish;
  _6 = _5 + 24;
  this->D.175605._M_impl.D.174950._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251557 = std::vector<assign_type>::end (this);
  std::vector<assign_type>::_M_realloc_insert<const assign_type&> (this, D.251557, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_ZNSt16allocator_traitsISaI11assign_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8612, decl_uid=212605, cgraph_uid=5244, symbol_order=6033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (struct allocator_type & __a, struct assign_type * __p, const struct assign_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const assign_type&> (__args#0);
  __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const assign_type&> (_ZSt7forwardIRK11assign_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9397, decl_uid=223474, cgraph_uid=6029, symbol_order=6818)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct assign_type & std::forward<const assign_type&> (const struct type & __t)
{
  const struct assign_type & D.251558;

  <bb 2> :
  D.251558 = __t;

  <bb 3> :
<L0>:
  return D.251558;

}



;; Function __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (_ZN9__gnu_cxx13new_allocatorI11assign_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9398, decl_uid=223476, cgraph_uid=6030, symbol_order=6819)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (struct new_allocator * const this, struct assign_type * __p, const struct assign_type & __args#0)
{
  void * D.234257;
  void * D.234256;
  const struct assign_type * D.234258;

  <bb 2> :
  D.234258 = std::forward<const assign_type&> (__args#0);
  D.234256 = __p;
  D.234257 = operator new (24, D.234256);
  MEM[(struct assign_type *)D.234257] = *D.234258;
  return;

}



;; Function std::vector<assign_type>::_M_realloc_insert<const assign_type&> (_ZNSt6vectorI11assign_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8613, decl_uid=212774, cgraph_uid=5248, symbol_order=6037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_realloc_insert<const assign_type&> (struct vector * const this, struct iterator __position, const struct assign_type & __args#0)
{
  struct assign_type * D.251564;
  const size_type D.251563;
  struct assign_type * __new_finish;
  struct assign_type * __new_start;
  const size_type __elems_before;
  struct assign_type * __old_finish;
  struct assign_type * __old_start;
  const size_type __len;
  struct iterator D.223487;

  <bb 2> :
  D.251563 = std::vector<assign_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251563;
  __old_start = this->D.175605._M_impl.D.174950._M_start;
  __old_finish = this->D.175605._M_impl.D.174950._M_finish;
  D.223487 = std::vector<assign_type>::begin (this);
  _1 = __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (&__position, &D.223487);
  __elems_before = (const size_type) _1;
  D.223487 = {CLOBBER};
  _2 = &this->D.175605;
  D.251564 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_2, __len);
  __new_start = D.251564;
  __new_finish = __new_start;
  _3 = std::forward<const assign_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.175605._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.175605;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<assign_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.175605;
  _12 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<assign_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.175605;
  _23 = this->D.175605._M_impl.D.174950._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.175605._M_impl.D.174950._M_start = __new_start;
  this->D.175605._M_impl.D.174950._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.175605._M_impl.D.174950._M_end_of_storage = _28;
  return;

}



;; Function std::vector<assign_type>::_M_check_len (_ZNKSt6vectorI11assign_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9399, decl_uid=175454, cgraph_uid=6031, symbol_order=6820)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<assign_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1004;
  size_type D.251568;
  const long unsigned int D.234263;
  bool retval.1002;

  <bb 2> :
  _1 = std::vector<assign_type>::max_size (this);
  _2 = std::vector<assign_type>::size (this);
  _3 = _1 - _2;
  __n.1003_4 = __n;
  retval.1002 = _3 < __n.1003_4;
  if (retval.1002 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<assign_type>::size (this);
  _6 = std::vector<assign_type>::size (this);
  D.234263 = _6;
  _7 = std::max<long unsigned int> (&D.234263, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234263 = {CLOBBER};
  _9 = std::vector<assign_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<assign_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1004 = std::vector<assign_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1004 = __len;

  <bb 8> :
  D.251568 = iftmp.1004;

  <bb 9> :
<L6>:
  return D.251568;

}



;; Function std::vector<assign_type>::max_size (_ZNKSt6vectorI11assign_typeSaIS0_EE8max_sizeEv, funcdef_no=10055, decl_uid=175240, cgraph_uid=6687, symbol_order=7480)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::max_size (const struct vector * const this)
{
  size_type D.251575;

  <bb 2> :
  _1 = &this->D.175605;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  D.251575 = std::vector<assign_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251575;

}



;; Function std::vector<assign_type>::_S_max_size (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10552, decl_uid=175461, cgraph_uid=7184, symbol_order=7977)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251577;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<assign_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251577 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251577;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::max_size (_ZNSt16allocator_traitsISaI11assign_typeEE8max_sizeERKS1_, funcdef_no=10794, decl_uid=174775, cgraph_uid=7426, symbol_order=8221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<assign_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251580;

  <bb 2> :
  D.251580 = __gnu_cxx::new_allocator<assign_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251580;

}



;; Function __gnu_cxx::new_allocator<assign_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE8max_sizeEv, funcdef_no=10901, decl_uid=174617, cgraph_uid=7533, symbol_order=8328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251582;

  <bb 2> :
  D.251582 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251582;

}



;; Function __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (_ZN9__gnu_cxxmiIP11assign_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9400, decl_uid=223488, cgraph_uid=6032, symbol_order=6821)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251584;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251584 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.251584;

}



;; Function std::vector<assign_type>::_S_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9401, decl_uid=175112, cgraph_uid=6033, symbol_order=6822)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251587;
  struct assign_type * D.251586;

  <bb 2> :
  D.251586 = std::vector<assign_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251587);

  <bb 3> :
<L0>:
  return D.251586;

}



;; Function std::vector<assign_type>::_S_do_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10056, decl_uid=175100, cgraph_uid=6688, symbol_order=7481)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_do_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240073)
{
  struct assign_type * D.251589;

  <bb 2> :
  D.251589 = std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251589;

}



;; Function std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (_ZSt12__relocate_aIP11assign_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10553, decl_uid=223653, cgraph_uid=7185, symbol_order=7978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & __alloc)
{
  struct assign_type * D.251591;

  <bb 2> :
  _1 = std::__niter_base<assign_type*> (__result);
  _2 = std::__niter_base<assign_type*> (__last);
  _3 = std::__niter_base<assign_type*> (__first);
  D.251591 = std::__relocate_a_1<assign_type, assign_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251591;

}



;; Function std::__relocate_a_1<assign_type, assign_type> (_ZSt14__relocate_a_1I11assign_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10795, decl_uid=223827, cgraph_uid=7427, symbol_order=8222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__relocate_a_1<assign_type, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.244521)
{
  ptrdiff_t __count;
  struct assign_type * D.251596;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1005_2 = (long unsigned int) __count;
  _3 = __count.1005_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1006_4 = (long unsigned int) __count;
  _5 = __count.1006_4 * 24;
  D.251596 = __result + _5;

  <bb 5> :
<L3>:
  return D.251596;

}



;; Function collect_function_return (_Z23collect_function_returnP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6404, decl_uid=187018, cgraph_uid=3380, symbol_order=4156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 14 3 }
;; 3 succs { 4 6 }
;; 4 succs { 14 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 13 8 }
;; 8 succs { 13 9 }
;; 9 succs { 13 10 }
;; 10 succs { 13 11 }
;; 11 succs { 13 12 }
;; 12 succs { 1 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { }
void collect_function_return (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  struct function * D.251604;
  struct greturn * D.251603;
  struct greturn * D.251602;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_return_tree;
  struct function_return_array fun_array;
  bool retval.1007;

  <bb 2> :
  function_return_array::function_return_array (&fun_array);
  D.251602 = as_a<greturn*, gimple> (gc);

  <bb 3> :
  _1 = D.251602;
  _2 = gimple_return_retval (_1);
  retval.1007 = _2 != 0B;
  if (retval.1007 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  D.251603 = as_a<greturn*, gimple> (gc);

  <bb 5> :
  _3 = D.251603;
  get_function_return_tree = gimple_return_retval (_3);
  goto <bb 7>; [INV]

  <bb 6> :
  get_function_return_tree = 0B;

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array);
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);

  <bb 8> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 9> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 10> :
  function_return_collect.1008_4 = function_return_collect;
  D.251604 = cgraph_node::get_fun (node);

  <bb 11> :
  _5 = D.251604;
  _6 = &_5->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.1008_4, _6, &fun_array);

  <bb 12> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  return;

  <bb 13> :
<L3>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 14> :
<L4>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 15> :
<L5>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 1

}



;; Function as_a<greturn*, gimple> (_Z4as_aIP7greturn6gimpleET_PT0_, funcdef_no=7760, decl_uid=195763, cgraph_uid=4392, symbol_order=5177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * as_a<greturn*, gimple> (struct gimple * p)
{
  struct greturn * D.251608;

  <bb 2> :
  D.251608 = reinterpret_is_a_helper<greturn*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.251608;

}



;; Function reinterpret_is_a_helper<greturn*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7greturnE4castI6gimpleEES1_PT_, funcdef_no=8702, decl_uid=213858, cgraph_uid=5334, symbol_order=6123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * reinterpret_is_a_helper<greturn*>::cast<gimple> (struct gimple * p)
{
  struct greturn * D.251610;

  <bb 2> :
  D.251610 = p;

  <bb 3> :
<L0>:
  return D.251610;

}



;; Function gimple_return_retval (_ZL20gimple_return_retvalPK7greturn, funcdef_no=2464, decl_uid=94269, cgraph_uid=1601, symbol_order=1761)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_return_retval (const struct greturn * gs)
{
  union tree_node * D.251612;

  <bb 2> :
  D.251612 = gs->D.90483.op[0];

  <bb 3> :
<L0>:
  return D.251612;

}



;; Function FunctionStmtMappingRet (_Z22FunctionStmtMappingRetP3ptbS0_P12gimple_array, funcdef_no=6405, decl_uid=187022, cgraph_uid=3381, symbol_order=4157)

Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 55
Removing basic block 69
Removing basic block 70
Removing basic block 76
Removing basic block 82
Merging blocks 83 and 85
Removing basic block 86
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
;;
;; Loop 1
;;  header 81, latch 80
;;  depth 1, outer 0
;;  nodes: 81 80 78 79 77 6 76 75 8 7 74 73 19 72 71 23 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32 21 22 20 18 17 16 15 13 12 11 10 9 14
;;
;; Loop 2
;;  header 71, latch 70
;;  depth 2, outer 1
;;  nodes: 71 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 81 }
;; 6 succs { 7 77 }
;; 7 succs { 88 8 }
;; 8 succs { 9 77 }
;; 9 succs { 87 10 }
;; 10 succs { 87 11 }
;; 11 succs { 87 12 }
;; 12 succs { 87 13 }
;; 13 succs { 14 15 }
;; 14 succs { 76 }
;; 15 succs { 87 16 }
;; 16 succs { 87 17 }
;; 17 succs { 87 18 }
;; 18 succs { 19 20 }
;; 19 succs { 73 }
;; 20 succs { 86 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 71 }
;; 24 succs { 25 52 }
;; 25 succs { 26 70 }
;; 26 succs { 31 27 }
;; 27 succs { 31 28 }
;; 28 succs { 31 29 }
;; 29 succs { 31 30 }
;; 30 succs { 31 42 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 41 }
;; 36 succs { 37 41 }
;; 37 succs { 85 38 }
;; 38 succs { 39 41 }
;; 39 succs { 85 40 }
;; 40 succs { 85 41 }
;; 41 succs { 51 }
;; 42 succs { 44 43 }
;; 43 succs { 44 51 }
;; 44 succs { 45 51 }
;; 45 succs { 83 46 }
;; 46 succs { 83 47 }
;; 47 succs { 48 50 }
;; 48 succs { 83 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 70 }
;; 52 succs { 53 65 }
;; 53 succs { 54 70 }
;; 54 succs { 85 55 }
;; 55 succs { 85 56 }
;; 56 succs { 58 57 }
;; 57 succs { 58 70 }
;; 58 succs { 59 70 }
;; 59 succs { 84 60 }
;; 60 succs { 84 61 }
;; 61 succs { 62 64 }
;; 62 succs { 84 63 }
;; 63 succs { 64 }
;; 64 succs { 70 }
;; 65 succs { 66 70 }
;; 66 succs { 85 67 }
;; 67 succs { 68 70 }
;; 68 succs { 85 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 24 72 }
;; 72 succs { 73 }
;; 73 succs { 76 74 }
;; 74 succs { 75 }
;; 75 succs { 77 }
;; 76 succs { 77 }
;; 77 succs { 78 79 }
;; 78 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 81 }
;; 81 succs { 6 82 }
;; 82 succs { 1 }
;; 83 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 86 }
;; 86 succs { 87 }
;; 87 succs { 88 }
;; 88 succs { }
void FunctionStmtMappingRet (struct ptb * ptable, struct ptb * ftable, struct gimple_array * user_tmp)
{
  int finally_tmp.1034;
  union tree_node * D.251721;
  struct pthread_attr_array * D.251719;
  struct pthread_attr_array * D.251718;
  union tree_node * D.251717;
  const char * D.251716;
  union tree_node * D.251715;
  struct pthread_attr_array * D.251713;
  struct pthread_attr_array * D.251712;
  union tree_node * D.251711;
  struct function * D.251710;
  bool D.251709;
  struct function_return_array * D.251708;
  struct function * D.251707;
  struct function_return_array * D.251706;
  struct function * D.251705;
  const char * D.251704;
  union tree_node * D.251703;
  struct gimple_array * D.251702;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  const char * name;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  int i;
  struct gimple * def_stmt;
  union tree_node * second;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  const char * name;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.1033;
  bool retval.1032;
  bool retval.1031;
  bool retval.1030;
  bool retval.1027;
  bool retval.1025;
  bool retval.1020;
  bool retval.1018;
  bool retval.1017;
  bool iftmp.1016;
  bool retval.1015;
  bool retval.1014;
  bool retval.1011;
  union tree_node * iftmp.1009;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1009 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1009 = 0B;

  <bb 5> :
  t = iftmp.1009;
  goto <bb 81>; [INV]

  <bb 6> :
  _1 = table_temp->target;
  if (_1 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 7> :
  treeGimpleArray.1010_2 = treeGimpleArray;
  _3 = &table_temp->target;
  D.251702 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1010_2, _3);

  <bb 8> :
  user_tmp = D.251702;
  if (user_tmp != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 9> :
  _4 = table_temp->last_stmt;
  D.251703 = gimple_call_fn (_4);

  <bb 10> :
  _5 = D.251703;
  D.251704 = get_name (_5);

  <bb 11> :
  name = D.251704;
  function_return_collect.1012_6 = function_return_collect;
  _7 = table_temp->node;
  D.251705 = cgraph_node::get_fun (_7);

  <bb 12> :
  _8 = D.251705;
  _9 = &_8->decl;
  D.251706 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1012_6, _9);

  <bb 13> :
  _10 = D.251706;
  retval.1011 = _10 == 0B;
  if (retval.1011 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  // predicted unlikely by continue predictor.
  goto <bb 76>; [INV]

  <bb 15> :
  function_return_collect.1013_11 = function_return_collect;
  _12 = table_temp->node;
  D.251707 = cgraph_node::get_fun (_12);

  <bb 16> :
  _13 = D.251707;
  _14 = &_13->decl;
  D.251708 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1013_11, _14);

  <bb 17> :
  _15 = D.251708;
  function_return_array::function_return_array (&fun_array, _15);

  <bb 18> :
  _16 = fun_array.return_type_num;
  if (_16 == 2)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  // predicted unlikely by continue predictor.
  finally_tmp.1034 = 0;
  goto <bb 73>; [INV]

  <bb 20> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 21> :
  _17 = table_temp->target;
  _18 = _17->base.code;
  if (_18 == 131)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _19 = table_temp->target;
  second = _19->exp.operands[0];
  _20 = table_temp->target;
  def_stmt = _20->ssa_name.def_stmt;
  table_temp->target = second;
  table_temp->last_stmt = def_stmt;

  <bb 23> :
  i = 0;
  goto <bb 71>; [INV]

  <bb 24> :
  _21 = table_temp->last_stmt;
  _22 = gimple_code (_21);
  retval.1014 = _22 == 8;
  if (retval.1014 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 25> :
  if (name != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 26> :
  _23 = strcmp (name, "realloc");
  if (_23 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _24 = strcmp (name, "malloc");
  if (_24 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  _25 = strcmp (name, "calloc");
  if (_25 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _26 = strcmp (name, "xmalloc");
  if (_26 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _27 = strcmp (name, "strdup");
  if (_27 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 31> :
  _28 = (long unsigned int) i;
  _29 = std::vector<return_type>::operator[] (&ret_type_array, _28);
  _30 = _29->return_tree;
  if (_30 != 0B)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _31 = table_temp->target;
  if (_31 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  iftmp.1016 = 1;
  goto <bb 35>; [INV]

  <bb 34> :
  iftmp.1016 = 0;

  <bb 35> :
  retval.1015 = iftmp.1016;
  if (retval.1015 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 36> :
  _32 = (long unsigned int) i;
  _33 = std::vector<return_type>::operator[] (&ret_type_array, _32);
  _34 = _33->return_tree;
  _35 = _34->base.code;
  retval.1017 = _35 == 153;
  if (retval.1017 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  _36 = (long unsigned int) i;
  _37 = std::vector<return_type>::operator[] (&ret_type_array, _36);
  _38 = _37->return_tree;
  _39 = table_temp->target;
  D.251709 = ptr_derefs_may_alias_p (_39, _38);

  <bb 38> :
  retval.1018 = D.251709;
  if (retval.1018 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 39> :
  fun_array.return_type_num = 2;
  function_return_collect.1019_40 = function_return_collect;
  _41 = table_temp->node;
  D.251710 = cgraph_node::get_fun (_41);

  <bb 40> :
  _42 = D.251710;
  _43 = &_42->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.1019_40, _43, &fun_array);

  <bb 41> :
  goto <bb 51>; [INV]

  <bb 42> :
  _44 = strcmp (name, "pthread_create");
  if (_44 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  _45 = strcmp (name, "pthread_join");
  if (_45 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 44> :
  _46 = strcmp (name, "pthread_create");
  if (_46 == 0)
    goto <bb 45>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 45> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _47 = table_temp->last_stmt;
  D.251711 = gimple_call_arg (_47, 1);

  <bb 46> :
  _48 = D.251711;
  _49 = _48->exp.operands[0];
  getvardecl = _49;
  pthread_attr_setdetachstates.1021_50 = pthread_attr_setdetachstates;
  D.251712 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1021_50, &getvardecl);

  <bb 47> :
  _51 = D.251712;
  retval.1020 = _51 != 0B;
  if (retval.1020 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 48> :
  pthread_attr_setdetachstates.1022_52 = pthread_attr_setdetachstates;
  D.251713 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1022_52, &getvardecl);

  <bb 49> :
  _53 = D.251713;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_53];
  FUNCITON_THREAD.1023_54 = FUNCITON_THREAD;
  FUNCITON_THREAD.1024_55 = (int) FUNCITON_THREAD.1023_54;
  table_temp->swap_type = FUNCITON_THREAD.1024_55;
  _56 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _56;

  <bb 50> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};

  <bb 51> :
  goto <bb 70>; [INV]

  <bb 52> :
  _57 = table_temp->last_stmt;
  _58 = gimple_code (_57);
  retval.1025 = _58 == 6;
  if (retval.1025 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 53> :
  _59 = table_temp->swap_type;
  _60 = (unsigned int) _59;
  FUNCITON_THREAD.1026_61 = FUNCITON_THREAD;
  if (_60 == FUNCITON_THREAD.1026_61)
    goto <bb 54>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 54> :
  _62 = table_temp->swap_stmt;
  D.251715 = gimple_call_fn (_62);

  <bb 55> :
  _63 = D.251715;
  D.251716 = get_name (_63);

  <bb 56> :
  name = D.251716;
  _64 = strcmp (name, "pthread_create");
  if (_64 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  _65 = strcmp (name, "pthread_join");
  if (_65 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 58> :
  _66 = strcmp (name, "pthread_create");
  if (_66 == 0)
    goto <bb 59>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 59> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _67 = table_temp->swap_stmt;
  D.251717 = gimple_call_arg (_67, 1);

  <bb 60> :
  _68 = D.251717;
  _69 = _68->exp.operands[0];
  getvardecl = _69;
  pthread_attr_setdetachstates.1028_70 = pthread_attr_setdetachstates;
  D.251718 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1028_70, &getvardecl);

  <bb 61> :
  _71 = D.251718;
  retval.1027 = _71 != 0B;
  if (retval.1027 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 62> :
  pthread_attr_setdetachstates.1029_72 = pthread_attr_setdetachstates;
  D.251719 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1029_72, &getvardecl);

  <bb 63> :
  _73 = D.251719;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_73];
  _74 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _74;

  <bb 64> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  goto <bb 70>; [INV]

  <bb 65> :
  _75 = table_temp->last_stmt;
  _76 = gimple_code (_75);
  retval.1030 = _76 == 18;
  if (retval.1030 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 66> :
  _77 = (long unsigned int) i;
  _78 = std::vector<return_type>::operator[] (&ret_type_array, _77);
  _79 = _78->return_tree;
  _80 = table_temp->last_stmt;
  D.251721 = gimple_phi_result (_80);

  <bb 67> :
  _81 = D.251721;
  retval.1031 = _79 == _81;
  if (retval.1031 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 68> :
  _82 = (long unsigned int) i;
  _83 = std::vector<return_type>::operator[] (&ret_type_array, _82);
  _84 = _83->stmt;
  _85 = (long unsigned int) i;
  _86 = std::vector<return_type>::operator[] (&ret_type_array, _85);
  _87 = _86->return_tree;
  _88 = (long unsigned int) i;
  _89 = std::vector<return_type>::operator[] (&ret_type_array, _88);
  _90 = _89->return_tree;
  _91 = table_temp->last_stmt;
  set_gimple_array (user_tmp, _91, _90, _87, _84);

  <bb 69> :
  // predicted unlikely by continue predictor.

  <bb 70> :
  i = i + 1;

  <bb 71> :
  _92 = (long unsigned int) i;
  _93 = std::vector<return_type>::size (&ret_type_array);
  retval.1032 = _92 < _93;
  if (retval.1032 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  std::vector<return_type>::~vector (&ret_type_array);
  finally_tmp.1034 = 1;

  <bb 73> :
  function_return_array::~function_return_array (&fun_array);
  if (finally_tmp.1034 == 1)
    goto <bb 74>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 74> :
<L73>:

  <bb 75> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 77>; [INV]

  <bb 76> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 77> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 78> :
  iftmp.1033 = table_temp->target;
  goto <bb 80>; [INV]

  <bb 79> :
  iftmp.1033 = 0B;

  <bb 80> :
  t = iftmp.1033;

  <bb 81> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 82> :
  start = {CLOBBER};
  return;

  <bb 83> :
<L88>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 5

  <bb 84> :
<L89>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 7

  <bb 85> :
<L90>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 4

  <bb 86> :
<L91>:
  function_return_array::~function_return_array (&fun_array);
  resx 3

  <bb 87> :
<L92>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 2

  <bb 88> :
<L93>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK6gimple, funcdef_no=2265, decl_uid=93420, cgraph_uid=1402, symbol_order=1562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gimple * gs)
{
  const struct gphi * D.251735;
  const struct gphi * phi_stmt;
  union tree_node * D.251733;

  <bb 2> :
  D.251735 = as_a<const gphi*, const gimple> (gs);
  phi_stmt = D.251735;
  D.251733 = gimple_phi_result (phi_stmt);

  <bb 3> :
<L0>:
  return D.251733;

}



;; Function as_a<const gphi*, const gimple> (_Z4as_aIPK4gphiK6gimpleET_PT0_, funcdef_no=7055, decl_uid=93408, cgraph_uid=3687, symbol_order=4469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * as_a<const gphi*, const gimple> (const struct gimple * p)
{
  const struct gphi * D.251738;
  const struct gphi * D.251736;

  <bb 2> :
  D.251738 = is_a_helper<const gphi*>::cast<gimple> (p);
  D.251736 = D.251738;

  <bb 3> :
<L0>:
  return D.251736;

}



;; Function is_a_helper<const gphi*>::cast<gimple> (_ZN11is_a_helperIPK4gphiE4castI6gimpleEES2_PKT_, funcdef_no=8052, decl_uid=205935, cgraph_uid=4684, symbol_order=5469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * is_a_helper<const gphi*>::cast<gimple> (const struct gimple * p)
{
  const struct gphi * D.251739;

  <bb 2> :
  D.251739 = reinterpret_is_a_helper<gphi*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.251739;

}



;; Function reinterpret_is_a_helper<gphi*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP4gphiE4castI6gimpleEES1_PT_, funcdef_no=8054, decl_uid=205943, cgraph_uid=4686, symbol_order=5471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gphi * reinterpret_is_a_helper<gphi*>::cast<gimple> (struct gimple * p)
{
  struct gphi * D.251741;

  <bb 2> :
  D.251741 = p;

  <bb 3> :
<L0>:
  return D.251741;

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK4gphi, funcdef_no=2264, decl_uid=93417, cgraph_uid=1401, symbol_order=1561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gphi * gs)
{
  union tree_node * D.251743;

  <bb 2> :
  D.251743 = gs->result;

  <bb 3> :
<L0>:
  return D.251743;

}



;; Function FunctionStmtMappingAssign (_Z25FunctionStmtMappingAssignP3ptbP12gimple_array, funcdef_no=6406, decl_uid=187025, cgraph_uid=3382, symbol_order=4158)

Removing basic block 21
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 1
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 26 6 11 25 24 13 23 22 14 21 19 20 17 18 16 15 12 9 8 7 5 4 10
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 22 14 21 19 20 17 18 16 15
;;
;; Loop 3
;;  header 22, latch 21
;;  depth 3, outer 2
;;  nodes: 22 21 19 20 17 18 16 15
;; 2 succs { 31 3 }
;; 3 succs { 28 }
;; 4 succs { 31 5 }
;; 5 succs { 6 7 }
;; 6 succs { 26 }
;; 7 succs { 31 8 }
;; 8 succs { 31 9 }
;; 9 succs { 10 12 }
;; 10 succs { 31 11 }
;; 11 succs { 26 }
;; 12 succs { 31 13 }
;; 13 succs { 24 }
;; 14 succs { 22 }
;; 15 succs { 17 16 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 30 21 }
;; 21 succs { 22 }
;; 22 succs { 15 23 }
;; 23 succs { 24 }
;; 24 succs { 14 25 }
;; 25 succs { 31 26 }
;; 26 succs { 31 27 }
;; 27 succs { 28 }
;; 28 succs { 4 29 }
;; 29 succs { 1 }
;; 30 succs { 31 }
;; 31 succs { }
void FunctionStmtMappingAssign (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.251764;
  struct function * D.251762;
  bool D.251761;
  struct cgraph_node * D.251760;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.1041;
  bool iftmp.1040;
  bool retval.1039;
  bool retval.1036;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.1035_1 = symtab;
  D.251760 = symbol_table::first_defined_function (symtab.1035_1);

  <bb 3> :
  node = D.251760;
  goto <bb 28>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.251761 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.251761;
  retval.1036 = ~_3;
  if (retval.1036 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 7> :
  D.251762 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.251762;
  push_cfun (_4);

  <bb 9> :
  cfun.1037_5 = cfun;
  if (cfun.1037_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 12> :
  calculate_dominance_info (1);

  <bb 13> :
  cfun.1038_6 = cfun;
  _7 = cfun.1038_6->cfg;
  _8 = _7->x_entry_block_ptr;
  bb = _8->next_bb;
  goto <bb 24>; [INV]

  <bb 14> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 22>; [INV]

  <bb 15> :
  gc = gsi_stmt (gsi);
  _9 = is_gimple_call (gc);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _10 = is_gimple_assign (gc);
  if (_10 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1040 = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.1040 = 0;

  <bb 19> :
  retval.1039 = iftmp.1040;
  if (retval.1039 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  collect_FunctionMapping_Assign (gc, node, bb, ptable);

  <bb 21> :
  gsi_next (&gsi);

  <bb 22> :
  _11 = gsi_end_p (gsi);
  retval.1041 = ~_11;
  if (retval.1041 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 24> :
  cfun.1042_12 = cfun;
  _13 = cfun.1042_12->cfg;
  _14 = _13->x_exit_block_ptr;
  if (bb != _14)
    goto <bb 14>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  pop_cfun ();

  <bb 26> :
  symtab.1043_15 = symtab;
  D.251764 = symbol_table::next_defined_function (symtab.1043_15, node);

  <bb 27> :
  node = D.251764;

  <bb 28> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  start = {CLOBBER};
  return;

  <bb 30> :
<L21>:
  gsi = {CLOBBER};
  resx 2

  <bb 31> :
<L22>:
  start = {CLOBBER};
  resx 1

}



;; Function parseLine (_Z9parseLinePc, funcdef_no=6407, decl_uid=195829, cgraph_uid=3383, symbol_order=4159)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 3 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
int parseLine (char * line)
{
  const char * p;
  int i;
  int D.251767;

  <bb 2> :
  _1 = strlen (line);
  i = (int) _1;
  p = line;
  goto <bb 4>; [INV]

  <bb 3> :
  p = p + 1;

  <bb 4> :
  _2 = *p;
  if (_2 <= 47)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = *p;
  if (_3 > 57)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _4 = (sizetype) i;
  _5 = _4 + 18446744073709551613;
  _6 = line + _5;
  *_6 = 0;
  i = atoi (p);
  D.251767 = i;

  <bb 7> :
<L4>:
  return D.251767;

}



;; Function GetProcessMemory (_Z16GetProcessMemoryv, funcdef_no=6408, decl_uid=195841, cgraph_uid=3384, symbol_order=4160)

Merging blocks 13 and 14
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 10, latch 7
;;  depth 1, outer 0
;;  nodes: 10 7 4 11
;; 2 succs { 15 3 }
;; 3 succs { 10 }
;; 4 succs { 5 7 }
;; 5 succs { 15 6 }
;; 6 succs { 12 }
;; 7 succs { 8 10 }
;; 8 succs { 15 9 }
;; 9 succs { 12 }
;; 10 succs { 15 11 }
;; 11 succs { 4 12 }
;; 12 succs { 15 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
;; 15 succs { }
struct processMem_t GetProcessMemory ()
{
  char * D.251779;
  int D.251778;
  int D.251777;
  struct FILE * D.251776;
  struct processMem_t processMem;
  char line[128];
  struct FILE * file;
  struct processMem_t D.251774;
  bool retval.1044;

  <bb 2> :
  D.251776 = fopen ("/proc/self/status", "r");

  <bb 3> :
  file = D.251776;
  goto <bb 10>; [INV]

  <bb 4> :
  _1 = strncmp (&line, "VmSize:", 7);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251777 = parseLine (&line);

  <bb 6> :
  _2 = D.251777;
  _3 = (unsigned int) _2;
  processMem.virtualMem = _3;
  goto <bb 12>; [INV]

  <bb 7> :
  _4 = strncmp (&line, "VmRSS:", 6);
  if (_4 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  D.251778 = parseLine (&line);

  <bb 9> :
  _5 = D.251778;
  _6 = (unsigned int) _5;
  processMem.physicalMem = _6;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251779 = fgets (&line, 128, file);

  <bb 11> :
  _7 = D.251779;
  retval.1044 = _7 != 0B;
  if (retval.1044 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  fclose (file);

  <bb 13> :
  D.251774 = processMem;
  line = {CLOBBER};
  processMem = {CLOBBER};

  <bb 14> :
<L8>:
  return D.251774;

  <bb 15> :
<L9>:
  line = {CLOBBER};
  processMem = {CLOBBER};
  resx 1

}



;; Function diff (_Z4diff8timespecS_, funcdef_no=6409, decl_uid=187028, cgraph_uid=3385, symbol_order=4161)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct timespec diff (struct timespec start, struct timespec end)
{
  struct timespec temp;
  struct timespec D.251785;

  <bb 2> :
  _1 = end.tv_nsec;
  _2 = start.tv_nsec;
  _3 = _1 - _2;
  if (_3 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = end.tv_sec;
  _5 = start.tv_sec;
  _6 = _4 - _5;
  _7 = _6 + -1;
  temp.tv_sec = _7;
  _8 = end.tv_nsec;
  _9 = _8 + 1000000000;
  _10 = start.tv_nsec;
  _11 = _9 - _10;
  temp.tv_nsec = _11;
  goto <bb 5>; [INV]

  <bb 4> :
  _12 = end.tv_sec;
  _13 = start.tv_sec;
  _14 = _12 - _13;
  temp.tv_sec = _14;
  _15 = end.tv_nsec;
  _16 = start.tv_nsec;
  _17 = _15 - _16;
  temp.tv_nsec = _17;

  <bb 5> :
  D.251785 = temp;
  temp = {CLOBBER};

  <bb 6> :
<L4>:
  return D.251785;

}



;; Function Varnew_search_imm_use (_Z21Varnew_search_imm_useP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6412, decl_uid=196156, cgraph_uid=3392, symbol_order=4168)

Removing basic block 33
Removing basic block 38
Removing basic block 65
Removing basic block 66
Removing basic block 74
Removing basic block 75
Removing basic block 91
Removing basic block 92
Removing basic block 95
Removing basic block 96
Removing basic block 127
Removing basic block 128
Removing basic block 129
Removing basic block 130
Removing basic block 131
Removing basic block 142
Removing basic block 143
Removing basic block 144
Removing basic block 145
Removing basic block 168
Removing basic block 169
Removing basic block 170
Removing basic block 171
Removing basic block 186
Removing basic block 187
Removing basic block 188
Removing basic block 189
Removing basic block 190
Removing basic block 201
Removing basic block 202
Removing basic block 203
Removing basic block 204
Removing basic block 227
Removing basic block 228
Removing basic block 229
Removing basic block 230
Removing basic block 231
Removing basic block 234
Removing basic block 235
Removing basic block 236
Removing basic block 238
Removing basic block 239
Removing basic block 241
Removing basic block 257
Removing basic block 268
Removing basic block 269
Removing basic block 270
Removing basic block 273
Removing basic block 274
Removing basic block 308
Removing basic block 309
Removing basic block 310
Removing basic block 311
Removing basic block 312
Removing basic block 326
Removing basic block 327
Removing basic block 328
Removing basic block 329
Removing basic block 352
Removing basic block 353
Removing basic block 354
Removing basic block 355
Removing basic block 373
Removing basic block 374
Removing basic block 375
Removing basic block 376
Removing basic block 377
Removing basic block 391
Removing basic block 392
Removing basic block 393
Removing basic block 394
Removing basic block 395
Removing basic block 396
Removing basic block 418
Removing basic block 419
Removing basic block 420
Removing basic block 421
Removing basic block 422
Removing basic block 425
Removing basic block 426
Removing basic block 427
Removing basic block 429
Removing basic block 430
Removing basic block 434
Removing basic block 435
Removing basic block 436
Removing basic block 447
Removing basic block 458
Removing basic block 472
Removing basic block 486
Removing basic block 487
Removing basic block 488
Removing basic block 489
Removing basic block 490
Removing basic block 491
Removing basic block 492
Removing basic block 500
Removing basic block 515
Removing basic block 516
Removing basic block 517
Removing basic block 541
Removing basic block 542
Removing basic block 543
Removing basic block 544
Removing basic block 545
Removing basic block 546
Removing basic block 547
Removing basic block 548
Removing basic block 549
Removing basic block 562
Removing basic block 575
Removing basic block 576
Removing basic block 577
Removing basic block 578
Removing basic block 579
Removing basic block 580
Removing basic block 593
Removing basic block 596
Removing basic block 597
Removing basic block 598
Removing basic block 606
Removing basic block 623
Removing basic block 624
Removing basic block 625
Removing basic block 626
Removing basic block 650
Removing basic block 651
Removing basic block 652
Removing basic block 653
Removing basic block 654
Removing basic block 655
Removing basic block 656
Removing basic block 657
Removing basic block 658
Removing basic block 679
Removing basic block 680
Removing basic block 681
Removing basic block 682
Removing basic block 683
Removing basic block 684
Removing basic block 692
Removing basic block 695
Removing basic block 696
Removing basic block 697
Removing basic block 698
Removing basic block 721
Removing basic block 722
Removing basic block 725
Removing basic block 728
Removing basic block 741
Removing basic block 742
Removing basic block 747
Removing basic block 748
Removing basic block 751
Removing basic block 758
Removing basic block 774
Removing basic block 775
Removing basic block 776
Removing basic block 777
Removing basic block 780
Removing basic block 781
Removing basic block 782
Removing basic block 783
Removing basic block 784
Removing basic block 787
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 622, latch 621
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 5
;;  header 597, latch 596
;;  depth 2, outer 3
;;  nodes: 597 596 584 593 591 588 595 594 587 586 585 590 589 592 583 582
;;
;; Loop 4
;;  header 620, latch 619
;;  depth 2, outer 3
;;  nodes: 620 619 608 618 610 615 613 612 611 614 609 617 616 607 606
;;
;; Loop 2
;;  header 346, latch 345
;;  depth 1, outer 0
;;  nodes: 346 345 241 295 293 332 339 329 281 288 278 344 343 342 341 340 276 277 274 275 272 273 260 261 258 259 249 252 257 254 250 253 256 255 251 248 246 247 244 245 243 242 262 271 263 267 270 265 264 269 268 266 286 287 283 285 284 282 280 279 327 328 325 326 323 324 313 315 319 322 317 314 316 321 320 318 312 310 311 301 304 309 306 302 305 308 307 303 300 298 299 296 297 337 338 334 336 335 333 331 330 292 291 290 289 294
;;
;; Loop 1
;;  header 196, latch 195
;;  depth 1, outer 0
;;  nodes: 196 195 102 150 148 182 189 179 136 143 133 194 193 192 191 190 131 132 129 130 127 128 118 119 116 117 110 113 115 114 112 111 109 107 108 105 106 104 103 120 126 122 124 125 123 121 141 142 138 140 139 137 135 134 177 178 175 176 173 174 164 165 162 163 156 159 161 160 158 157 155 153 154 151 152 166 172 168 170 171 169 167 187 188 184 186 185 183 181 180 147 146 145 144 149
;; 2 succs { 3 4 }
;; 3 succs { 20 }
;; 4 succs { 5 6 }
;; 5 succs { 16 6 }
;; 6 succs { 7 8 }
;; 7 succs { 16 8 }
;; 8 succs { 9 10 }
;; 9 succs { 16 10 }
;; 10 succs { 11 12 }
;; 11 succs { 16 12 }
;; 12 succs { 13 14 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 625 }
;; 21 succs { 23 22 }
;; 22 succs { 23 24 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 26 351 }
;; 26 succs { 27 37 }
;; 27 succs { 636 28 }
;; 28 succs { 29 33 }
;; 29 succs { 636 30 }
;; 30 succs { 31 351 }
;; 31 succs { 636 32 }
;; 32 succs { 351 }
;; 33 succs { 636 34 }
;; 34 succs { 35 351 }
;; 35 succs { 636 36 }
;; 36 succs { 351 }
;; 37 succs { 38 351 }
;; 38 succs { 636 39 }
;; 39 succs { 40 43 }
;; 40 succs { 636 41 }
;; 41 succs { 42 43 }
;; 42 succs { 44 }
;; 43 succs { 44 }
;; 44 succs { 45 47 }
;; 45 succs { 636 46 }
;; 46 succs { 47 }
;; 47 succs { 636 48 }
;; 48 succs { 49 52 }
;; 49 succs { 636 50 }
;; 50 succs { 51 52 }
;; 51 succs { 53 }
;; 52 succs { 53 }
;; 53 succs { 54 56 }
;; 54 succs { 636 55 }
;; 55 succs { 56 }
;; 56 succs { 636 57 }
;; 57 succs { 58 63 }
;; 58 succs { 636 59 }
;; 59 succs { 60 63 }
;; 60 succs { 636 61 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 636 64 }
;; 64 succs { 65 70 }
;; 65 succs { 636 66 }
;; 66 succs { 67 70 }
;; 67 succs { 636 68 }
;; 68 succs { 69 70 }
;; 69 succs { 70 }
;; 70 succs { 636 71 }
;; 71 succs { 72 199 }
;; 72 succs { 636 73 }
;; 73 succs { 74 199 }
;; 74 succs { 629 75 }
;; 75 succs { 629 76 }
;; 76 succs { 77 198 }
;; 77 succs { 78 87 }
;; 78 succs { 79 89 }
;; 79 succs { 80 85 }
;; 80 succs { 81 89 }
;; 81 succs { 629 82 }
;; 82 succs { 83 89 }
;; 83 succs { 629 84 }
;; 84 succs { 89 }
;; 85 succs { 86 89 }
;; 86 succs { 89 }
;; 87 succs { 88 89 }
;; 88 succs { 89 }
;; 89 succs { 90 198 }
;; 90 succs { 91 198 }
;; 91 succs { 92 93 }
;; 92 succs { 93 }
;; 93 succs { 626 94 }
;; 94 succs { 95 197 }
;; 95 succs { 626 96 }
;; 96 succs { 626 97 }
;; 97 succs { 626 98 }
;; 98 succs { 626 99 }
;; 99 succs { 100 197 }
;; 100 succs { 101 197 }
;; 101 succs { 196 }
;; 102 succs { 103 195 }
;; 103 succs { 626 104 }
;; 104 succs { 105 149 }
;; 105 succs { 106 107 }
;; 106 succs { 107 }
;; 107 succs { 108 109 }
;; 108 succs { 109 }
;; 109 succs { 110 117 }
;; 110 succs { 111 118 }
;; 111 succs { 626 112 }
;; 112 succs { 113 118 }
;; 113 succs { 114 118 }
;; 114 succs { 115 118 }
;; 115 succs { 116 118 }
;; 116 succs { 118 }
;; 117 succs { 118 }
;; 118 succs { 119 128 }
;; 119 succs { 120 128 }
;; 120 succs { 121 127 }
;; 121 succs { 626 122 }
;; 122 succs { 123 127 }
;; 123 succs { 124 127 }
;; 124 succs { 125 127 }
;; 125 succs { 126 127 }
;; 126 succs { 127 }
;; 127 succs { 129 }
;; 128 succs { 129 }
;; 129 succs { 130 131 }
;; 130 succs { 131 }
;; 131 succs { 132 133 }
;; 132 succs { 133 }
;; 133 succs { 134 195 }
;; 134 succs { 626 135 }
;; 135 succs { 626 136 }
;; 136 succs { 137 195 }
;; 137 succs { 626 138 }
;; 138 succs { 139 142 }
;; 139 succs { 626 140 }
;; 140 succs { 141 142 }
;; 141 succs { 143 }
;; 142 succs { 143 }
;; 143 succs { 144 195 }
;; 144 succs { 626 145 }
;; 145 succs { 626 146 }
;; 146 succs { 626 147 }
;; 147 succs { 626 148 }
;; 148 succs { 626 195 }
;; 149 succs { 626 150 }
;; 150 succs { 151 195 }
;; 151 succs { 152 153 }
;; 152 succs { 153 }
;; 153 succs { 154 155 }
;; 154 succs { 155 }
;; 155 succs { 156 163 }
;; 156 succs { 157 164 }
;; 157 succs { 626 158 }
;; 158 succs { 159 164 }
;; 159 succs { 160 164 }
;; 160 succs { 161 164 }
;; 161 succs { 162 164 }
;; 162 succs { 164 }
;; 163 succs { 164 }
;; 164 succs { 165 174 }
;; 165 succs { 166 174 }
;; 166 succs { 167 173 }
;; 167 succs { 626 168 }
;; 168 succs { 169 173 }
;; 169 succs { 170 173 }
;; 170 succs { 171 173 }
;; 171 succs { 172 173 }
;; 172 succs { 173 }
;; 173 succs { 175 }
;; 174 succs { 175 }
;; 175 succs { 176 177 }
;; 176 succs { 177 }
;; 177 succs { 178 179 }
;; 178 succs { 179 }
;; 179 succs { 180 195 }
;; 180 succs { 626 181 }
;; 181 succs { 626 182 }
;; 182 succs { 183 195 }
;; 183 succs { 626 184 }
;; 184 succs { 185 188 }
;; 185 succs { 626 186 }
;; 186 succs { 187 188 }
;; 187 succs { 189 }
;; 188 succs { 189 }
;; 189 succs { 190 195 }
;; 190 succs { 626 191 }
;; 191 succs { 626 192 }
;; 192 succs { 626 193 }
;; 193 succs { 626 194 }
;; 194 succs { 626 195 }
;; 195 succs { 196 }
;; 196 succs { 102 197 }
;; 197 succs { 198 }
;; 198 succs { 199 }
;; 199 succs { 636 200 }
;; 200 succs { 201 351 }
;; 201 succs { 636 202 }
;; 202 succs { 203 351 }
;; 203 succs { 633 204 }
;; 204 succs { 633 205 }
;; 205 succs { 206 348 }
;; 206 succs { 207 226 }
;; 207 succs { 208 226 }
;; 208 succs { 209 224 }
;; 209 succs { 210 214 }
;; 210 succs { 633 211 }
;; 211 succs { 212 214 }
;; 212 succs { 633 213 }
;; 213 succs { 214 }
;; 214 succs { 633 215 }
;; 215 succs { 216 226 }
;; 216 succs { 217 220 }
;; 217 succs { 633 218 }
;; 218 succs { 219 220 }
;; 219 succs { 221 }
;; 220 succs { 221 }
;; 221 succs { 222 226 }
;; 222 succs { 633 223 }
;; 223 succs { 633 226 }
;; 224 succs { 225 226 }
;; 225 succs { 226 }
;; 226 succs { 227 350 }
;; 227 succs { 228 350 }
;; 228 succs { 229 230 }
;; 229 succs { 230 }
;; 230 succs { 630 231 }
;; 231 succs { 232 347 }
;; 232 succs { 630 233 }
;; 233 succs { 630 234 }
;; 234 succs { 630 235 }
;; 235 succs { 630 236 }
;; 236 succs { 237 347 }
;; 237 succs { 238 239 }
;; 238 succs { 239 }
;; 239 succs { 240 347 }
;; 240 succs { 346 }
;; 241 succs { 242 345 }
;; 242 succs { 630 243 }
;; 243 succs { 244 294 }
;; 244 succs { 245 246 }
;; 245 succs { 246 }
;; 246 succs { 247 248 }
;; 247 succs { 248 }
;; 248 succs { 249 259 }
;; 249 succs { 250 260 }
;; 250 succs { 251 260 }
;; 251 succs { 630 252 }
;; 252 succs { 253 260 }
;; 253 succs { 630 254 }
;; 254 succs { 255 260 }
;; 255 succs { 256 258 }
;; 256 succs { 630 257 }
;; 257 succs { 260 }
;; 258 succs { 260 }
;; 259 succs { 260 }
;; 260 succs { 261 273 }
;; 261 succs { 262 273 }
;; 262 succs { 263 272 }
;; 263 succs { 264 272 }
;; 264 succs { 630 265 }
;; 265 succs { 266 272 }
;; 266 succs { 630 267 }
;; 267 succs { 268 272 }
;; 268 succs { 269 271 }
;; 269 succs { 630 270 }
;; 270 succs { 272 }
;; 271 succs { 272 }
;; 272 succs { 274 }
;; 273 succs { 274 }
;; 274 succs { 275 276 }
;; 275 succs { 276 }
;; 276 succs { 277 278 }
;; 277 succs { 278 }
;; 278 succs { 279 345 }
;; 279 succs { 630 280 }
;; 280 succs { 630 281 }
;; 281 succs { 282 345 }
;; 282 succs { 630 283 }
;; 283 succs { 284 287 }
;; 284 succs { 630 285 }
;; 285 succs { 286 287 }
;; 286 succs { 288 }
;; 287 succs { 288 }
;; 288 succs { 289 345 }
;; 289 succs { 630 290 }
;; 290 succs { 630 291 }
;; 291 succs { 630 292 }
;; 292 succs { 630 293 }
;; 293 succs { 630 345 }
;; 294 succs { 630 295 }
;; 295 succs { 296 345 }
;; 296 succs { 297 298 }
;; 297 succs { 298 }
;; 298 succs { 299 300 }
;; 299 succs { 300 }
;; 300 succs { 301 311 }
;; 301 succs { 302 312 }
;; 302 succs { 303 312 }
;; 303 succs { 630 304 }
;; 304 succs { 305 312 }
;; 305 succs { 630 306 }
;; 306 succs { 307 312 }
;; 307 succs { 308 310 }
;; 308 succs { 630 309 }
;; 309 succs { 312 }
;; 310 succs { 312 }
;; 311 succs { 312 }
;; 312 succs { 313 324 }
;; 313 succs { 314 325 }
;; 314 succs { 315 325 }
;; 315 succs { 316 325 }
;; 316 succs { 630 317 }
;; 317 succs { 318 325 }
;; 318 succs { 630 319 }
;; 319 succs { 320 325 }
;; 320 succs { 321 323 }
;; 321 succs { 630 322 }
;; 322 succs { 325 }
;; 323 succs { 325 }
;; 324 succs { 325 }
;; 325 succs { 326 327 }
;; 326 succs { 327 }
;; 327 succs { 328 329 }
;; 328 succs { 329 }
;; 329 succs { 330 345 }
;; 330 succs { 630 331 }
;; 331 succs { 630 332 }
;; 332 succs { 333 345 }
;; 333 succs { 630 334 }
;; 334 succs { 335 338 }
;; 335 succs { 630 336 }
;; 336 succs { 337 338 }
;; 337 succs { 339 }
;; 338 succs { 339 }
;; 339 succs { 340 345 }
;; 340 succs { 630 341 }
;; 341 succs { 630 342 }
;; 342 succs { 630 343 }
;; 343 succs { 630 344 }
;; 344 succs { 630 345 }
;; 345 succs { 346 }
;; 346 succs { 241 347 }
;; 347 succs { 350 }
;; 348 succs { 349 350 }
;; 349 succs { 350 }
;; 350 succs { 351 }
;; 351 succs { 636 352 }
;; 352 succs { 636 353 }
;; 353 succs { 354 357 }
;; 354 succs { 636 355 }
;; 355 succs { 356 357 }
;; 356 succs { 358 }
;; 357 succs { 358 }
;; 358 succs { 359 361 }
;; 359 succs { 636 360 }
;; 360 succs { 636 371 }
;; 361 succs { 636 362 }
;; 362 succs { 636 363 }
;; 363 succs { 364 367 }
;; 364 succs { 636 365 }
;; 365 succs { 366 367 }
;; 366 succs { 368 }
;; 367 succs { 368 }
;; 368 succs { 369 371 }
;; 369 succs { 636 370 }
;; 370 succs { 636 371 }
;; 371 succs { 372 624 }
;; 372 succs { 634 373 }
;; 373 succs { 374 623 }
;; 374 succs { 634 375 }
;; 375 succs { 622 }
;; 376 succs { 377 554 }
;; 377 succs { 634 378 }
;; 378 succs { 379 397 }
;; 379 succs { 634 380 }
;; 380 succs { 634 381 }
;; 381 succs { 382 621 }
;; 382 succs { 383 384 }
;; 383 succs { 634 386 }
;; 384 succs { 634 385 }
;; 385 succs { 634 386 }
;; 386 succs { 634 387 }
;; 387 succs { 388 621 }
;; 388 succs { 389 621 }
;; 389 succs { 390 621 }
;; 390 succs { 634 391 }
;; 391 succs { 392 621 }
;; 392 succs { 634 393 }
;; 393 succs { 394 621 }
;; 394 succs { 634 395 }
;; 395 succs { 634 396 }
;; 396 succs { 634 621 }
;; 397 succs { 634 398 }
;; 398 succs { 399 479 }
;; 399 succs { 634 400 }
;; 400 succs { 634 401 }
;; 401 succs { 402 418 }
;; 402 succs { 403 404 }
;; 403 succs { 634 406 }
;; 404 succs { 634 405 }
;; 405 succs { 634 406 }
;; 406 succs { 634 407 }
;; 407 succs { 408 418 }
;; 408 succs { 634 409 }
;; 409 succs { 410 413 }
;; 410 succs { 634 411 }
;; 411 succs { 412 413 }
;; 412 succs { 414 }
;; 413 succs { 414 }
;; 414 succs { 415 418 }
;; 415 succs { 634 416 }
;; 416 succs { 634 417 }
;; 417 succs { 634 418 }
;; 418 succs { 634 419 }
;; 419 succs { 420 423 }
;; 420 succs { 634 421 }
;; 421 succs { 422 423 }
;; 422 succs { 424 }
;; 423 succs { 424 }
;; 424 succs { 425 441 }
;; 425 succs { 634 426 }
;; 426 succs { 634 427 }
;; 427 succs { 428 621 }
;; 428 succs { 634 429 }
;; 429 succs { 430 621 }
;; 430 succs { 431 621 }
;; 431 succs { 432 621 }
;; 432 succs { 433 621 }
;; 433 succs { 434 621 }
;; 434 succs { 634 435 }
;; 435 succs { 436 621 }
;; 436 succs { 634 437 }
;; 437 succs { 438 621 }
;; 438 succs { 634 439 }
;; 439 succs { 634 440 }
;; 440 succs { 634 621 }
;; 441 succs { 634 442 }
;; 442 succs { 443 446 }
;; 443 succs { 634 444 }
;; 444 succs { 445 446 }
;; 445 succs { 447 }
;; 446 succs { 447 }
;; 447 succs { 448 465 }
;; 448 succs { 634 449 }
;; 449 succs { 634 450 }
;; 450 succs { 451 621 }
;; 451 succs { 452 453 }
;; 452 succs { 634 455 }
;; 453 succs { 634 454 }
;; 454 succs { 634 455 }
;; 455 succs { 634 456 }
;; 456 succs { 457 621 }
;; 457 succs { 458 621 }
;; 458 succs { 634 459 }
;; 459 succs { 460 621 }
;; 460 succs { 634 461 }
;; 461 succs { 462 621 }
;; 462 succs { 634 463 }
;; 463 succs { 634 464 }
;; 464 succs { 634 621 }
;; 465 succs { 634 466 }
;; 466 succs { 467 470 }
;; 467 succs { 634 468 }
;; 468 succs { 469 470 }
;; 469 succs { 471 }
;; 470 succs { 471 }
;; 471 succs { 472 621 }
;; 472 succs { 634 473 }
;; 473 succs { 634 474 }
;; 474 succs { 475 621 }
;; 475 succs { 476 477 }
;; 476 succs { 634 621 }
;; 477 succs { 634 478 }
;; 478 succs { 634 621 }
;; 479 succs { 634 480 }
;; 480 succs { 481 621 }
;; 481 succs { 634 482 }
;; 482 succs { 634 483 }
;; 483 succs { 484 502 }
;; 484 succs { 485 486 }
;; 485 succs { 634 488 }
;; 486 succs { 634 487 }
;; 487 succs { 634 488 }
;; 488 succs { 634 489 }
;; 489 succs { 490 502 }
;; 490 succs { 634 491 }
;; 491 succs { 492 502 }
;; 492 succs { 634 493 }
;; 493 succs { 494 497 }
;; 494 succs { 634 495 }
;; 495 succs { 496 497 }
;; 496 succs { 498 }
;; 497 succs { 498 }
;; 498 succs { 499 502 }
;; 499 succs { 634 500 }
;; 500 succs { 634 501 }
;; 501 succs { 634 502 }
;; 502 succs { 634 503 }
;; 503 succs { 504 507 }
;; 504 succs { 634 505 }
;; 505 succs { 506 507 }
;; 506 succs { 508 }
;; 507 succs { 508 }
;; 508 succs { 509 525 }
;; 509 succs { 634 510 }
;; 510 succs { 634 511 }
;; 511 succs { 512 621 }
;; 512 succs { 634 513 }
;; 513 succs { 514 621 }
;; 514 succs { 515 621 }
;; 515 succs { 516 621 }
;; 516 succs { 517 621 }
;; 517 succs { 518 621 }
;; 518 succs { 634 519 }
;; 519 succs { 520 621 }
;; 520 succs { 634 521 }
;; 521 succs { 522 621 }
;; 522 succs { 634 523 }
;; 523 succs { 634 524 }
;; 524 succs { 634 621 }
;; 525 succs { 634 526 }
;; 526 succs { 527 530 }
;; 527 succs { 634 528 }
;; 528 succs { 529 530 }
;; 529 succs { 531 }
;; 530 succs { 531 }
;; 531 succs { 532 545 }
;; 532 succs { 634 533 }
;; 533 succs { 634 534 }
;; 534 succs { 535 621 }
;; 535 succs { 634 536 }
;; 536 succs { 537 621 }
;; 537 succs { 538 621 }
;; 538 succs { 634 539 }
;; 539 succs { 540 621 }
;; 540 succs { 634 541 }
;; 541 succs { 542 621 }
;; 542 succs { 634 543 }
;; 543 succs { 634 544 }
;; 544 succs { 634 621 }
;; 545 succs { 634 546 }
;; 546 succs { 547 621 }
;; 547 succs { 634 548 }
;; 548 succs { 634 549 }
;; 549 succs { 550 621 }
;; 550 succs { 551 552 }
;; 551 succs { 634 621 }
;; 552 succs { 634 553 }
;; 553 succs { 634 621 }
;; 554 succs { 555 621 }
;; 555 succs { 556 621 }
;; 556 succs { 634 557 }
;; 557 succs { 558 621 }
;; 558 succs { 634 559 }
;; 559 succs { 634 560 }
;; 560 succs { 634 561 }
;; 561 succs { 564 562 }
;; 562 succs { 634 563 }
;; 563 succs { 564 565 }
;; 564 succs { 566 }
;; 565 succs { 566 }
;; 566 succs { 567 621 }
;; 567 succs { 634 568 }
;; 568 succs { 634 569 }
;; 569 succs { 570 598 }
;; 570 succs { 571 580 }
;; 571 succs { 572 576 }
;; 572 succs { 634 573 }
;; 573 succs { 574 580 }
;; 574 succs { 634 575 }
;; 575 succs { 634 580 }
;; 576 succs { 577 578 }
;; 577 succs { 634 580 }
;; 578 succs { 634 579 }
;; 579 succs { 634 580 }
;; 580 succs { 634 581 }
;; 581 succs { 597 }
;; 582 succs { 634 583 }
;; 583 succs { 634 584 }
;; 584 succs { 585 596 }
;; 585 succs { 634 586 }
;; 586 succs { 587 592 }
;; 587 succs { 634 588 }
;; 588 succs { 589 596 }
;; 589 succs { 634 590 }
;; 590 succs { 634 591 }
;; 591 succs { 634 596 }
;; 592 succs { 634 593 }
;; 593 succs { 594 596 }
;; 594 succs { 634 595 }
;; 595 succs { 634 596 }
;; 596 succs { 597 }
;; 597 succs { 582 621 }
;; 598 succs { 634 599 }
;; 599 succs { 600 621 }
;; 600 succs { 634 601 }
;; 601 succs { 602 604 }
;; 602 succs { 634 603 }
;; 603 succs { 634 604 }
;; 604 succs { 634 605 }
;; 605 succs { 620 }
;; 606 succs { 634 607 }
;; 607 succs { 634 608 }
;; 608 succs { 609 619 }
;; 609 succs { 634 610 }
;; 610 succs { 611 619 }
;; 611 succs { 634 612 }
;; 612 succs { 634 613 }
;; 613 succs { 614 619 }
;; 614 succs { 634 615 }
;; 615 succs { 616 619 }
;; 616 succs { 634 617 }
;; 617 succs { 634 618 }
;; 618 succs { 634 619 }
;; 619 succs { 620 }
;; 620 succs { 606 621 }
;; 621 succs { 622 }
;; 622 succs { 376 623 }
;; 623 succs { 624 }
;; 624 succs { 625 }
;; 625 succs { 1 }
;; 626 succs { 627 }
;; 627 succs { 628 }
;; 628 succs { 629 }
;; 629 succs { 636 }
;; 630 succs { 631 }
;; 631 succs { 632 }
;; 632 succs { 633 }
;; 633 succs { 636 }
;; 634 succs { 635 }
;; 635 succs { 636 }
;; 636 succs { }
void Varnew_search_imm_use (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.252883;
  union tree_node * D.252882;
  union tree_node * D.252881;
  int D.252880;
  union tree_node * D.252879;
  union tree_node * D.252878;
  int D.252877;
  union tree_node * D.252876;
  unsigned int D.252875;
  union tree_node * D.252874;
  union tree_node * D.252873;
  int D.252872;
  union tree_node * D.252871;
  union tree_node * D.252870;
  union tree_node * D.252869;
  union tree_node * D.252868;
  union tree_node * D.252867;
  union tree_node * D.252866;
  int D.252865;
  union tree_node * D.252864;
  unsigned int D.252863;
  union tree_node * D.252862;
  union tree_node * D.252861;
  int D.252860;
  int D.252859;
  union tree_node * D.252858;
  union tree_node * D.252857;
  union tree_node * D.252856;
  const char * D.252855;
  union tree_node * D.252854;
  union tree_node * D.252853;
  union tree_node * D.252852;
  int D.252851;
  union tree_node * D.252850;
  union tree_node * D.252849;
  union tree_node * D.252848;
  union tree_node * D.252847;
  union tree_node * D.252846;
  union tree_node * D.252845;
  union tree_node * D.252844;
  int D.252843;
  union tree_node * D.252842;
  union tree_node * D.252841;
  union tree_node * D.252840;
  union tree_node * D.252839;
  union tree_node * D.252838;
  union tree_node * D.252837;
  union tree_node * D.252836;
  union tree_node * D.252835;
  int D.252834;
  union tree_node * D.252833;
  union tree_node * D.252832;
  union tree_node * D.252831;
  union tree_node * D.252830;
  union tree_node * D.252829;
  int D.252828;
  union tree_node * D.252827;
  int D.252826;
  union tree_node * D.252825;
  union tree_node * D.252824;
  int D.252823;
  union tree_node * D.252822;
  union tree_node * D.252821;
  union tree_node * D.252820;
  int D.252819;
  union tree_node * D.252818;
  union tree_node * D.252817;
  union tree_node * D.252816;
  union tree_node * D.252815;
  union tree_node * D.252814;
  union tree_node * D.252813;
  union tree_node * D.252812;
  union tree_node * D.252811;
  union tree_node * D.252810;
  int D.252809;
  union tree_node * D.252808;
  union tree_node * D.252807;
  union tree_node * D.252806;
  union tree_node * D.252805;
  union tree_node * D.252804;
  union tree_node * D.252803;
  union tree_node * D.252802;
  union tree_node * D.252801;
  int D.252800;
  union tree_node * D.252799;
  union tree_node * D.252798;
  union tree_node * D.252797;
  union tree_node * D.252796;
  union tree_node * D.252795;
  int D.252794;
  union tree_node * D.252793;
  int D.252792;
  union tree_node * D.252791;
  int D.252790;
  union tree_node * D.252789;
  union tree_node * D.252788;
  union tree_node * D.252787;
  union tree_node * D.252786;
  union tree_node * D.252785;
  union tree_node * D.252784;
  union tree_node * D.252783;
  union tree_node * D.252782;
  int D.252781;
  union tree_node * D.252780;
  union tree_node * D.252779;
  struct function_assign_array * D.252778;
  union tree_node * D.252777;
  int D.252776;
  int D.252775;
  union tree_node * D.252774;
  union tree_node * D.252773;
  int D.252772;
  int D.252771;
  union tree_node * D.252770;
  union tree_node * D.252765;
  union tree_node * D.252764;
  union tree_node * D.252763;
  int D.252762;
  union tree_node * D.252761;
  int D.252760;
  union tree_node * D.252759;
  union tree_node * D.252758;
  union tree_node * D.252757;
  union tree_node * D.252756;
  union tree_node * D.252755;
  union tree_node * D.252754;
  union tree_node * D.252753;
  union tree_node * D.252752;
  union tree_node * D.252751;
  union tree_node * D.252750;
  union tree_node * D.252749;
  int D.252748;
  union tree_node * D.252747;
  int D.252746;
  union tree_node * D.252745;
  union tree_node * D.252744;
  union tree_node * D.252743;
  union tree_node * D.252742;
  union tree_node * D.252741;
  union tree_node * D.252740;
  union tree_node * D.252739;
  union tree_node * D.252738;
  struct function_assign_array * D.252737;
  struct function_assign_array * D.252736;
  struct function_assign_array * D.252735;
  int D.252734;
  int D.252733;
  union tree_node * D.252732;
  union tree_node * D.252731;
  union tree_node * D.252730;
  union tree_node * D.252729;
  union tree_node * D.252728;
  union tree_node * D.252727;
  union tree_node * D.252722;
  union tree_node * D.252721;
  union tree_node * D.252720;
  int D.252719;
  union tree_node * D.252718;
  int D.252717;
  union tree_node * D.252716;
  union tree_node * D.252715;
  union tree_node * D.252714;
  union tree_node * D.252713;
  union tree_node * D.252712;
  union tree_node * D.252711;
  union tree_node * D.252710;
  int D.252709;
  union tree_node * D.252708;
  int D.252707;
  union tree_node * D.252706;
  union tree_node * D.252705;
  union tree_node * D.252704;
  union tree_node * D.252703;
  struct function_assign_array * D.252702;
  struct function_assign_array * D.252701;
  struct function_assign_array * D.252700;
  union tree_node * D.252699;
  union tree_node * D.252698;
  union tree_node * D.252697;
  union tree_node * D.252696;
  union tree_node * D.252695;
  union tree_node * D.252694;
  union tree_node * D.252693;
  union tree_node * D.252692;
  union tree_node * D.252691;
  union tree_node * D.252690;
  union tree_node * D.252689;
  union tree_node * D.252688;
  union tree_node * D.252687;
  union tree_node * D.252686;
  union tree_node * D.252685;
  union tree_node * D.252684;
  union tree_node * D.252683;
  union tree_node * D.252682;
  union tree_node * D.252681;
  union tree_node * D.252680;
  union tree_node * D.252679;
  union tree_node * D.252678;
  union tree_node * D.252677;
  union tree_node * D.252676;
  union tree_node * D.252675;
  union tree_node * D.252674;
  union tree_node * D.252673;
  union tree_node * D.252672;
  union tree_node * D.252671;
  union tree_node * D.252670;
  union tree_node * D.252669;
  union tree_node * D.252668;
  union tree_node * D.252667;
  union tree_node * D.252666;
  int i;
  int size;
  int i;
  int size;
  const char * name;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * nowstmt;
  int i;
  struct function_assign_array assign_array;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * getfiledtree;
  struct gimple * def_stmt2;
  union tree_node * getfiledtree;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  union tree_node * getfiledtree;
  struct gimple * def_stmt2;
  union tree_node * getfiledtree;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * second;
  union tree_node * second;
  union tree_node * first;
  union tree_node * getFunctionAssignVAR;
  int passfilter;
  bool retval.1216;
  bool retval.1212;
  bool retval.1210;
  bool retval.1208;
  bool retval.1206;
  bool retval.1205;
  bool retval.1204;
  bool retval.1201;
  bool retval.1197;
  bool retval.1195;
  bool retval.1193;
  bool retval.1192;
  bool retval.1191;
  bool retval.1190;
  bool iftmp.1189;
  bool retval.1188;
  bool retval.1187;
  bool retval.1186;
  bool retval.1185;
  bool retval.1184;
  bool retval.1183;
  bool retval.1182;
  bool retval.1181;
  bool retval.1180;
  bool retval.1179;
  bool retval.1178;
  bool iftmp.1177;
  bool retval.1176;
  bool retval.1175;
  bool retval.1174;
  bool retval.1173;
  bool retval.1172;
  bool iftmp.1171;
  bool retval.1170;
  bool iftmp.1169;
  bool retval.1168;
  bool retval.1167;
  bool retval.1166;
  bool retval.1165;
  bool retval.1164;
  bool retval.1163;
  bool retval.1162;
  bool retval.1161;
  bool iftmp.1160;
  bool retval.1159;
  bool retval.1158;
  bool retval.1157;
  bool retval.1156;
  bool retval.1155;
  bool retval.1154;
  bool iftmp.1153;
  bool retval.1152;
  bool retval.1151;
  bool retval.1150;
  bool retval.1149;
  bool retval.1148;
  bool iftmp.1147;
  bool retval.1146;
  bool iftmp.1145;
  bool retval.1144;
  bool retval.1143;
  bool retval.1142;
  bool retval.1141;
  bool retval.1140;
  bool retval.1139;
  bool retval.1138;
  bool retval.1137;
  bool retval.1136;
  bool retval.1135;
  bool retval.1134;
  bool retval.1133;
  struct function_assign_array D.196210;
  bool retval.1130;
  bool iftmp.1128;
  bool retval.1127;
  bool iftmp.1126;
  bool retval.1125;
  bool retval.1124;
  bool iftmp.1123;
  bool retval.1122;
  bool retval.1121;
  bool retval.1120;
  bool retval.1119;
  bool retval.1118;
  bool retval.1117;
  bool retval.1116;
  bool retval.1115;
  bool retval.1114;
  bool iftmp.1113;
  bool retval.1112;
  bool retval.1111;
  bool retval.1110;
  bool retval.1109;
  bool retval.1108;
  bool retval.1107;
  bool retval.1106;
  bool retval.1105;
  bool retval.1104;
  bool retval.1103;
  bool retval.1101;
  bool retval.1098;
  bool iftmp.1095;
  bool retval.1094;
  bool retval.1093;
  bool retval.1092;
  bool retval.1091;
  bool retval.1090;
  bool retval.1089;
  bool retval.1088;
  bool iftmp.1087;
  bool retval.1086;
  bool retval.1085;
  bool retval.1084;
  bool retval.1083;
  bool retval.1082;
  bool iftmp.1081;
  bool retval.1080;
  bool retval.1079;
  bool retval.1078;
  bool retval.1077;
  bool retval.1076;
  bool retval.1075;
  bool retval.1073;
  bool retval.1070;
  bool retval.1067;
  bool retval.1066;
  bool retval.1065;
  bool retval.1064;
  bool retval.1063;
  bool retval.1062;
  bool retval.1061;
  bool retval.1060;
  bool iftmp.1059;
  bool retval.1058;
  bool iftmp.1057;
  bool retval.1056;
  bool retval.1055;
  bool retval.1054;
  bool retval.1052;
  bool retval.1051;
  bool iftmp.1050;
  bool retval.1049;
  bool iftmp.1048;
  bool retval.1047;
  bool retval.1045;

  <bb 2> :
  passfilter = 0;
  retval.1045 = is_gimple_call (use_stmt);
  if (retval.1045 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  passfilter = 1;
  stderr.1046_1 = stderr;
  __builtin_fwrite ("------------------VAR_DECL : LHS2------------------\n", 1, 52, stderr.1046_1);
  goto <bb 20>; [INV]

  <bb 4> :
  D.252666 = gimple_assign_lhs (use_stmt);
  _2 = D.252666;
  if (_2 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.252667 = gimple_assign_lhs (use_stmt);
  _3 = D.252667;
  _4 = _3->base.code;
  if (_4 == 36)
    goto <bb 16>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  D.252668 = gimple_assign_rhs1 (use_stmt);
  _5 = D.252668;
  if (_5 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.252669 = gimple_assign_rhs1 (use_stmt);
  _6 = D.252669;
  _7 = _6->base.code;
  if (_7 == 36)
    goto <bb 16>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.252670 = gimple_assign_rhs1 (use_stmt);
  _8 = D.252670;
  if (_8 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.252671 = gimple_assign_rhs1 (use_stmt);
  _9 = D.252671;
  _10 = _9->base.code;
  if (_10 == 49)
    goto <bb 16>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  D.252672 = gimple_assign_lhs (use_stmt);
  _11 = D.252672;
  if (_11 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.252673 = gimple_assign_lhs (use_stmt);
  _12 = D.252673;
  _13 = _12->base.code;
  if (_13 == 49)
    goto <bb 16>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  D.252674 = gimple_assign_rhs1 (use_stmt);
  _14 = D.252674;
  if (_14 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  D.252675 = gimple_assign_rhs1 (use_stmt);
  _15 = D.252675;
  _16 = _15->base.code;
  if (_16 == 47)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.252676 = gimple_assign_lhs (use_stmt);
  _17 = D.252676;
  if (_17 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.252677 = gimple_assign_lhs (use_stmt);
  _18 = D.252677;
  _19 = _18->base.code;
  if (_19 == 47)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1048 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1048 = 0;

  <bb 18> :
  retval.1047 = iftmp.1048;
  if (retval.1047 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  passfilter = 1;

  <bb 20> :
  if (passfilter != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 625>; [INV]

  <bb 21> :
  _20 = is_gimple_assign (use_stmt);
  if (_20 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  _21 = is_gimple_call (use_stmt);
  if (_21 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  iftmp.1050 = 1;
  goto <bb 25>; [INV]

  <bb 24> :
  iftmp.1050 = 0;

  <bb 25> :
  retval.1049 = iftmp.1050;
  if (retval.1049 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 26> :
  retval.1051 = is_gimple_call (use_stmt);
  if (retval.1051 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 27> :
  D.252678 = gimple_call_arg (use_stmt, 0);

  <bb 28> :
  _22 = D.252678;
  _23 = _22->base.code;
  retval.1052 = _23 == 131;
  if (retval.1052 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 29> :
  D.252679 = gimple_call_arg (use_stmt, 0);

  <bb 30> :
  _24 = D.252679;
  first = _24->exp.operands[0];
  _25 = first->base.code;
  if (_25 == 36)
    goto <bb 31>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 31> :
  stderr.1053_26 = stderr;
  __builtin_fwrite ("------------------VAR_DECL : LHS2------------------\n", 1, 52, stderr.1053_26);

  <bb 32> :
  getFunctionAssignVAR = first;
  goto <bb 351>; [INV]

  <bb 33> :
  D.252680 = gimple_call_arg (use_stmt, 0);

  <bb 34> :
  _27 = D.252680;
  _28 = _27->base.code;
  retval.1054 = _28 == 36;
  if (retval.1054 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 35> :
  D.252681 = gimple_call_arg (use_stmt, 0);

  <bb 36> :
  _29 = D.252681;
  getFunctionAssignVAR = _29;
  goto <bb 351>; [INV]

  <bb 37> :
  retval.1055 = is_gimple_assign (use_stmt);
  if (retval.1055 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 38> :
  D.252682 = gimple_assign_lhs (use_stmt);

  <bb 39> :
  _30 = D.252682;
  if (_30 != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 40> :
  D.252683 = gimple_assign_lhs (use_stmt);

  <bb 41> :
  _31 = D.252683;
  _32 = _31->base.code;
  if (_32 == 36)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  iftmp.1057 = 1;
  goto <bb 44>; [INV]

  <bb 43> :
  iftmp.1057 = 0;

  <bb 44> :
  retval.1056 = iftmp.1057;
  if (retval.1056 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 45> :
  D.252684 = gimple_assign_lhs (use_stmt);

  <bb 46> :
  _33 = D.252684;
  getFunctionAssignVAR = _33;

  <bb 47> :
  D.252685 = gimple_assign_rhs1 (use_stmt);

  <bb 48> :
  _34 = D.252685;
  if (_34 != 0B)
    goto <bb 49>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 49> :
  D.252686 = gimple_assign_rhs1 (use_stmt);

  <bb 50> :
  _35 = D.252686;
  _36 = _35->base.code;
  if (_36 == 36)
    goto <bb 51>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 51> :
  iftmp.1059 = 1;
  goto <bb 53>; [INV]

  <bb 52> :
  iftmp.1059 = 0;

  <bb 53> :
  retval.1058 = iftmp.1059;
  if (retval.1058 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 54> :
  D.252687 = gimple_assign_rhs1 (use_stmt);

  <bb 55> :
  _37 = D.252687;
  getFunctionAssignVAR = _37;

  <bb 56> :
  D.252688 = gimple_assign_rhs1 (use_stmt);

  <bb 57> :
  _38 = D.252688;
  retval.1060 = _38 != 0B;
  if (retval.1060 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 58> :
  D.252689 = gimple_assign_rhs1 (use_stmt);

  <bb 59> :
  _39 = D.252689;
  _40 = _39->base.code;
  retval.1061 = _40 == 49;
  if (retval.1061 != 0)
    goto <bb 60>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 60> :
  D.252690 = gimple_assign_rhs1 (use_stmt);

  <bb 61> :
  _41 = D.252690;
  second = _41->exp.operands[0];
  if (second != 0B)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  getFunctionAssignVAR = second;

  <bb 63> :
  D.252691 = gimple_assign_lhs (use_stmt);

  <bb 64> :
  _42 = D.252691;
  retval.1062 = _42 != 0B;
  if (retval.1062 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 65> :
  D.252692 = gimple_assign_lhs (use_stmt);

  <bb 66> :
  _43 = D.252692;
  _44 = _43->base.code;
  retval.1063 = _44 == 49;
  if (retval.1063 != 0)
    goto <bb 67>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 67> :
  D.252693 = gimple_assign_lhs (use_stmt);

  <bb 68> :
  _45 = D.252693;
  second = _45->exp.operands[0];
  if (second != 0B)
    goto <bb 69>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 69> :
  getFunctionAssignVAR = second;

  <bb 70> :
  D.252694 = gimple_assign_rhs1 (use_stmt);

  <bb 71> :
  _46 = D.252694;
  retval.1064 = _46 != 0B;
  if (retval.1064 != 0)
    goto <bb 72>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 72> :
  D.252695 = gimple_assign_rhs1 (use_stmt);

  <bb 73> :
  _47 = D.252695;
  _48 = _47->base.code;
  retval.1065 = _48 == 47;
  if (retval.1065 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 74> :
  D.252696 = gimple_assign_rhs1 (use_stmt);

  <bb 75> :
  _49 = D.252696;
  second = _49->exp.operands[0];
  D.252697 = gimple_assign_rhs1 (use_stmt);

  <bb 76> :
  _50 = D.252697;
  _51 = _50->exp.operands[1];
  second2 = _51;
  if (second != 0B)
    goto <bb 77>; [INV]
  else
    goto <bb 198>; [INV]

  <bb 77> :
  _52 = second->base.code;
  if (_52 == 165)
    goto <bb 78>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 78> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 79>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 79> :
  _53 = three->base.code;
  if (_53 == 153)
    goto <bb 80>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 80> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1066 = is_gimple_assign (def_stmt);
  if (retval.1066 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 81> :
  D.252698 = gimple_assign_rhs1 (def_stmt);

  <bb 82> :
  _54 = D.252698;
  _55 = _54->base.code;
  retval.1067 = _55 == 36;
  if (retval.1067 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 83> :
  D.252699 = gimple_assign_rhs1 (def_stmt);

  <bb 84> :
  _56 = D.252699;
  getFunctionAssignVAR = _56;
  goto <bb 89>; [INV]

  <bb 85> :
  _57 = three->base.code;
  if (_57 == 36)
    goto <bb 86>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 86> :
  getFunctionAssignVAR = three;
  goto <bb 89>; [INV]

  <bb 87> :
  _58 = second->base.code;
  if (_58 == 36)
    goto <bb 88>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 88> :
  getFunctionAssignVAR = second;

  <bb 89> :
  second2.1068_59 = second2;
  if (second2.1068_59 != 0B)
    goto <bb 90>; [INV]
  else
    goto <bb 198>; [INV]

  <bb 90> :
  second2.1069_60 = second2;
  _61 = second2.1069_60->base.code;
  if (_61 == 35)
    goto <bb 91>; [INV]
  else
    goto <bb 198>; [INV]

  <bb 91> :
  _62 = second->base.code;
  if (_62 == 36)
    goto <bb 92>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 92> :
  getFunctionAssignVAR = second;

  <bb 93> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1071_63 = function_assign_collect;
  D.252700 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1071_63, &second2);

  <bb 94> :
  _64 = D.252700;
  retval.1070 = _64 != 0B;
  if (retval.1070 != 0)
    goto <bb 95>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 95> :
  function_assign_collect.1072_65 = function_assign_collect;
  D.252701 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1072_65, &second2);

  <bb 96> :
  _66 = D.252701;
  function_assign_array::operator= (&assign_array, _66);

  <bb 97> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 98> :
  function_assign_collect.1074_67 = function_assign_collect;
  D.252702 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1074_67, &second2);

  <bb 99> :
  _68 = D.252702;
  retval.1073 = _68 != 0B;
  if (retval.1073 != 0)
    goto <bb 100>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 100> :
  _69 = second->base.code;
  if (_69 != 36)
    goto <bb 101>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 101> :
  i = 0;
  goto <bb 196>; [INV]

  <bb 102> :
  _70 = (long unsigned int) i;
  _71 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _70);
  _72 = _71->stmt;
  _73 = gimple_code (_72);
  retval.1075 = _73 == 6;
  if (retval.1075 != 0)
    goto <bb 103>; [INV]
  else
    goto <bb 195>; [INV]

  <bb 103> :
  _74 = (long unsigned int) i;
  _75 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _74);
  _76 = _75->stmt;
  D.252703 = gimple_assign_rhs1 (_76);

  <bb 104> :
  _77 = D.252703;
  _78 = _77->base.code;
  retval.1076 = _78 == 153;
  if (retval.1076 != 0)
    goto <bb 105>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 105> :
  filed_from = second->exp.operands[0];
  _79 = (long unsigned int) i;
  _80 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _79);
  _81 = _80->assign_tree;
  filed_from2 = _81->exp.operands[0];
  _82 = filed_from2->base.code;
  if (_82 == 165)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 107> :
  _83 = filed_from->base.code;
  if (_83 == 165)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  filed_from = filed_from->exp.operands[0];

  <bb 109> :
  _84 = filed_from2->base.code;
  if (_84 == 153)
    goto <bb 110>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 110> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  getfiledtree = filed_from2;
  _85 = filed_from->base.code;
  if (_85 != 36)
    goto <bb 111>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 111> :
  D.252704 = gimple_assign_rhs1 (def_stmt);

  <bb 112> :
  getfiledtree = D.252704;
  if (def_stmt != 0B)
    goto <bb 113>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 113> :
  _86 = gimple_code (def_stmt);
  retval.1077 = _86 != 20;
  if (retval.1077 != 0)
    goto <bb 114>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 114> :
  if (getfiledtree != 0B)
    goto <bb 115>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 115> :
  _87 = getfiledtree->base.code;
  if (_87 != 0)
    goto <bb 116>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 116> :
  treecheck = getfiledtree;
  goto <bb 118>; [INV]

  <bb 117> :
  treecheck = filed_from2;

  <bb 118> :
  _88 = second->base.code;
  if (_88 != 36)
    goto <bb 119>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 119> :
  _89 = filed_from->base.code;
  if (_89 != 26)
    goto <bb 120>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 120> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  getfiledtree = filed_from;
  _90 = filed_from->base.code;
  if (_90 != 36)
    goto <bb 121>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 121> :
  D.252705 = gimple_assign_rhs1 (def_stmt2);

  <bb 122> :
  getfiledtree = D.252705;
  if (def_stmt2 != 0B)
    goto <bb 123>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 123> :
  _91 = gimple_code (def_stmt2);
  retval.1078 = _91 != 20;
  if (retval.1078 != 0)
    goto <bb 124>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 124> :
  if (getfiledtree != 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 125> :
  _92 = getfiledtree->base.code;
  if (_92 != 0)
    goto <bb 126>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 126> :
  treecheck2 = getfiledtree;

  <bb 127> :
  goto <bb 129>; [INV]

  <bb 128> :
  treecheck2 = filed_from;

  <bb 129> :
  if (treecheck == 0B)
    goto <bb 130>; [INV]
  else
    goto <bb 131>; [INV]

  <bb 130> :
  treecheck = filed_from2;

  <bb 131> :
  if (treecheck2 == 0B)
    goto <bb 132>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 132> :
  treecheck2 = filed_from;

  <bb 133> :
  if (treecheck2 == treecheck)
    goto <bb 134>; [INV]
  else
    goto <bb 195>; [INV]

  <bb 134> :
  _93 = (long unsigned int) i;
  _94 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _93);
  _95 = _94->stmt;
  D.252706 = gimple_assign_rhs1 (_95);

  <bb 135> :
  _96 = D.252706;
  D.252707 = check_stmtStack (_96);

  <bb 136> :
  _97 = D.252707;
  retval.1079 = _97 == 0;
  if (retval.1079 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 195>; [INV]

  <bb 137> :
  _98 = (long unsigned int) i;
  _99 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _98);
  _100 = _99->stmt;
  D.252708 = gimple_assign_rhs1 (_100);

  <bb 138> :
  _101 = D.252708;
  if (target2 != _101)
    goto <bb 139>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 139> :
  _102 = (long unsigned int) i;
  _103 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _102);
  _104 = _103->stmt;
  D.252709 = check_stmtStack2 (_104);

  <bb 140> :
  _105 = D.252709;
  if (_105 == 0)
    goto <bb 141>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 141> :
  iftmp.1081 = 1;
  goto <bb 143>; [INV]

  <bb 142> :
  iftmp.1081 = 0;

  <bb 143> :
  retval.1080 = iftmp.1081;
  if (retval.1080 != 0)
    goto <bb 144>; [INV]
  else
    goto <bb 195>; [INV]

  <bb 144> :
  _106 = (long unsigned int) i;
  _107 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _106);
  _108 = _107->stmt;
  D.252710 = gimple_assign_rhs1 (_108);

  <bb 145> :
  _109 = D.252710;
  _110 = (long unsigned int) i;
  _111 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _110);
  _112 = _111->stmt;
  set_gimple_array (used_stmt, _112, _109, target, 0B);

  <bb 146> :
  _113 = (long unsigned int) i;
  _114 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _113);
  _115 = _114->stmt;
  D.252711 = gimple_assign_rhs1 (_115);

  <bb 147> :
  _116 = D.252711;
  _117 = (long unsigned int) i;
  _118 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _117);
  _119 = _118->stmt;
  D.252712 = gimple_assign_rhs1 (_119);

  <bb 148> :
  _120 = D.252712;
  new_search_imm_use (used_stmt, _120, _116);
  goto <bb 195>; [INV]

  <bb 149> :
  _121 = (long unsigned int) i;
  _122 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _121);
  _123 = _122->stmt;
  D.252713 = gimple_assign_lhs (_123);

  <bb 150> :
  _124 = D.252713;
  _125 = _124->base.code;
  retval.1082 = _125 == 153;
  if (retval.1082 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 195>; [INV]

  <bb 151> :
  filed_from = second->exp.operands[0];
  _126 = (long unsigned int) i;
  _127 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _126);
  _128 = _127->assign_tree;
  filed_from2 = _128->exp.operands[0];
  _129 = filed_from2->base.code;
  if (_129 == 165)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 153> :
  _130 = filed_from->base.code;
  if (_130 == 165)
    goto <bb 154>; [INV]
  else
    goto <bb 155>; [INV]

  <bb 154> :
  filed_from = filed_from->exp.operands[0];

  <bb 155> :
  _131 = filed_from2->base.code;
  if (_131 == 153)
    goto <bb 156>; [INV]
  else
    goto <bb 163>; [INV]

  <bb 156> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  getfiledtree = filed_from2;
  _132 = filed_from->base.code;
  if (_132 != 36)
    goto <bb 157>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 157> :
  D.252714 = gimple_assign_rhs1 (def_stmt);

  <bb 158> :
  getfiledtree = D.252714;
  if (def_stmt != 0B)
    goto <bb 159>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 159> :
  _133 = gimple_code (def_stmt);
  retval.1083 = _133 != 20;
  if (retval.1083 != 0)
    goto <bb 160>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 160> :
  if (getfiledtree != 0B)
    goto <bb 161>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 161> :
  _134 = getfiledtree->base.code;
  if (_134 != 0)
    goto <bb 162>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 162> :
  treecheck = getfiledtree;
  goto <bb 164>; [INV]

  <bb 163> :
  treecheck = filed_from2;

  <bb 164> :
  _135 = second->base.code;
  if (_135 != 36)
    goto <bb 165>; [INV]
  else
    goto <bb 174>; [INV]

  <bb 165> :
  _136 = filed_from->base.code;
  if (_136 != 26)
    goto <bb 166>; [INV]
  else
    goto <bb 174>; [INV]

  <bb 166> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  getfiledtree = filed_from;
  _137 = filed_from->base.code;
  if (_137 != 36)
    goto <bb 167>; [INV]
  else
    goto <bb 173>; [INV]

  <bb 167> :
  D.252715 = gimple_assign_rhs1 (def_stmt2);

  <bb 168> :
  getfiledtree = D.252715;
  if (def_stmt2 != 0B)
    goto <bb 169>; [INV]
  else
    goto <bb 173>; [INV]

  <bb 169> :
  _138 = gimple_code (def_stmt2);
  retval.1084 = _138 != 20;
  if (retval.1084 != 0)
    goto <bb 170>; [INV]
  else
    goto <bb 173>; [INV]

  <bb 170> :
  if (getfiledtree != 0B)
    goto <bb 171>; [INV]
  else
    goto <bb 173>; [INV]

  <bb 171> :
  _139 = getfiledtree->base.code;
  if (_139 != 0)
    goto <bb 172>; [INV]
  else
    goto <bb 173>; [INV]

  <bb 172> :
  treecheck2 = getfiledtree;

  <bb 173> :
  goto <bb 175>; [INV]

  <bb 174> :
  treecheck2 = filed_from;

  <bb 175> :
  if (treecheck == 0B)
    goto <bb 176>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 176> :
  treecheck = filed_from2;

  <bb 177> :
  if (treecheck2 == 0B)
    goto <bb 178>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 178> :
  treecheck2 = filed_from;

  <bb 179> :
  if (treecheck2 == treecheck)
    goto <bb 180>; [INV]
  else
    goto <bb 195>; [INV]

  <bb 180> :
  _140 = (long unsigned int) i;
  _141 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _140);
  _142 = _141->stmt;
  D.252716 = gimple_assign_lhs (_142);

  <bb 181> :
  _143 = D.252716;
  D.252717 = check_stmtStack (_143);

  <bb 182> :
  _144 = D.252717;
  retval.1085 = _144 == 0;
  if (retval.1085 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 195>; [INV]

  <bb 183> :
  _145 = (long unsigned int) i;
  _146 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _145);
  _147 = _146->stmt;
  D.252718 = gimple_assign_lhs (_147);

  <bb 184> :
  _148 = D.252718;
  if (target2 != _148)
    goto <bb 185>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 185> :
  _149 = (long unsigned int) i;
  _150 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _149);
  _151 = _150->stmt;
  D.252719 = check_stmtStack2 (_151);

  <bb 186> :
  _152 = D.252719;
  if (_152 == 0)
    goto <bb 187>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 187> :
  iftmp.1087 = 1;
  goto <bb 189>; [INV]

  <bb 188> :
  iftmp.1087 = 0;

  <bb 189> :
  retval.1086 = iftmp.1087;
  if (retval.1086 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 195>; [INV]

  <bb 190> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.252720 = gimple_assign_rhs1 (_155);

  <bb 191> :
  _156 = D.252720;
  _157 = (long unsigned int) i;
  _158 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _157);
  _159 = _158->stmt;
  set_gimple_array (used_stmt, _159, _156, target, 0B);

  <bb 192> :
  _160 = (long unsigned int) i;
  _161 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _160);
  _162 = _161->stmt;
  D.252721 = gimple_assign_lhs (_162);

  <bb 193> :
  _163 = D.252721;
  _164 = (long unsigned int) i;
  _165 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _164);
  _166 = _165->stmt;
  D.252722 = gimple_assign_lhs (_166);

  <bb 194> :
  _167 = D.252722;
  new_search_imm_use (used_stmt, _167, _163);

  <bb 195> :
  i = i + 1;

  <bb 196> :
  _168 = (long unsigned int) i;
  _169 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1088 = _168 < _169;
  if (retval.1088 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 197> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 198> :
  second2 = {CLOBBER};

  <bb 199> :
  D.252727 = gimple_assign_lhs (use_stmt);

  <bb 200> :
  _170 = D.252727;
  retval.1089 = _170 != 0B;
  if (retval.1089 != 0)
    goto <bb 201>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 201> :
  D.252728 = gimple_assign_lhs (use_stmt);

  <bb 202> :
  _171 = D.252728;
  _172 = _171->base.code;
  retval.1090 = _172 == 47;
  if (retval.1090 != 0)
    goto <bb 203>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 203> :
  D.252729 = gimple_assign_lhs (use_stmt);

  <bb 204> :
  _173 = D.252729;
  second = _173->exp.operands[0];
  D.252730 = gimple_assign_lhs (use_stmt);

  <bb 205> :
  _174 = D.252730;
  _175 = _174->exp.operands[1];
  second2 = _175;
  if (second != 0B)
    goto <bb 206>; [INV]
  else
    goto <bb 348>; [INV]

  <bb 206> :
  three = second->exp.operands[0];
  _176 = second->base.code;
  if (_176 == 165)
    goto <bb 207>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 207> :
  if (three != 0B)
    goto <bb 208>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 208> :
  _177 = three->base.code;
  if (_177 == 153)
    goto <bb 209>; [INV]
  else
    goto <bb 224>; [INV]

  <bb 209> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1091 = is_gimple_assign (def_stmt);
  if (retval.1091 != 0)
    goto <bb 210>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 210> :
  D.252731 = gimple_assign_rhs1 (def_stmt);

  <bb 211> :
  _178 = D.252731;
  _179 = _178->base.code;
  retval.1092 = _179 == 36;
  if (retval.1092 != 0)
    goto <bb 212>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 212> :
  D.252732 = gimple_assign_rhs1 (def_stmt);

  <bb 213> :
  _180 = D.252732;
  getFunctionAssignVAR = _180;

  <bb 214> :
  D.252733 = check_stmtStack (three);

  <bb 215> :
  _181 = D.252733;
  retval.1093 = _181 == 0;
  if (retval.1093 != 0)
    goto <bb 216>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 216> :
  if (three != target2)
    goto <bb 217>; [INV]
  else
    goto <bb 220>; [INV]

  <bb 217> :
  D.252734 = check_stmtStack2 (use_stmt);

  <bb 218> :
  _182 = D.252734;
  if (_182 == 0)
    goto <bb 219>; [INV]
  else
    goto <bb 220>; [INV]

  <bb 219> :
  iftmp.1095 = 1;
  goto <bb 221>; [INV]

  <bb 220> :
  iftmp.1095 = 0;

  <bb 221> :
  retval.1094 = iftmp.1095;
  if (retval.1094 != 0)
    goto <bb 222>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 222> :
  set_gimple_array (used_stmt, use_stmt, three, target, 0B);

  <bb 223> :
  new_search_imm_use (used_stmt, three, three);
  goto <bb 226>; [INV]

  <bb 224> :
  _183 = three->base.code;
  if (_183 == 36)
    goto <bb 225>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 225> :
  getFunctionAssignVAR = three;

  <bb 226> :
  second2.1096_184 = second2;
  if (second2.1096_184 != 0B)
    goto <bb 227>; [INV]
  else
    goto <bb 350>; [INV]

  <bb 227> :
  second2.1097_185 = second2;
  _186 = second2.1097_185->base.code;
  if (_186 == 35)
    goto <bb 228>; [INV]
  else
    goto <bb 350>; [INV]

  <bb 228> :
  _187 = second->base.code;
  if (_187 == 36)
    goto <bb 229>; [INV]
  else
    goto <bb 230>; [INV]

  <bb 229> :
  getFunctionAssignVAR = second;

  <bb 230> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1099_188 = function_assign_collect;
  D.252735 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1099_188, &second2);

  <bb 231> :
  _189 = D.252735;
  retval.1098 = _189 != 0B;
  if (retval.1098 != 0)
    goto <bb 232>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 232> :
  function_assign_collect.1100_190 = function_assign_collect;
  D.252736 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1100_190, &second2);

  <bb 233> :
  _191 = D.252736;
  function_assign_array::operator= (&assign_array, _191);

  <bb 234> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 235> :
  function_assign_collect.1102_192 = function_assign_collect;
  D.252737 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1102_192, &second2);

  <bb 236> :
  _193 = D.252737;
  retval.1101 = _193 != 0B;
  if (retval.1101 != 0)
    goto <bb 237>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 237> :
  _194 = second->base.code;
  if (_194 == 36)
    goto <bb 238>; [INV]
  else
    goto <bb 239>; [INV]

  <bb 238> :
  getFunctionAssignVAR = second;

  <bb 239> :
  _195 = second->base.code;
  if (_195 != 36)
    goto <bb 240>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 240> :
  i = 0;
  goto <bb 346>; [INV]

  <bb 241> :
  _196 = (long unsigned int) i;
  _197 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _196);
  _198 = _197->stmt;
  _199 = gimple_code (_198);
  retval.1103 = _199 == 6;
  if (retval.1103 != 0)
    goto <bb 242>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 242> :
  _200 = (long unsigned int) i;
  _201 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _200);
  _202 = _201->stmt;
  D.252738 = gimple_assign_rhs1 (_202);

  <bb 243> :
  _203 = D.252738;
  _204 = _203->base.code;
  retval.1104 = _204 == 153;
  if (retval.1104 != 0)
    goto <bb 244>; [INV]
  else
    goto <bb 294>; [INV]

  <bb 244> :
  filed_from = second->exp.operands[0];
  _205 = (long unsigned int) i;
  _206 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _205);
  _207 = _206->assign_tree;
  filed_from2 = _207->exp.operands[0];
  _208 = filed_from2->base.code;
  if (_208 == 165)
    goto <bb 245>; [INV]
  else
    goto <bb 246>; [INV]

  <bb 245> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 246> :
  _209 = filed_from->base.code;
  if (_209 == 165)
    goto <bb 247>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 247> :
  filed_from = filed_from->exp.operands[0];

  <bb 248> :
  _210 = filed_from2->base.code;
  if (_210 == 153)
    goto <bb 249>; [INV]
  else
    goto <bb 259>; [INV]

  <bb 249> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 250>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 250> :
  _211 = gimple_code (def_stmt);
  retval.1105 = _211 != 20;
  if (retval.1105 != 0)
    goto <bb 251>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 251> :
  D.252739 = gimple_assign_rhs1 (def_stmt);

  <bb 252> :
  _212 = D.252739;
  retval.1106 = _212 != 0B;
  if (retval.1106 != 0)
    goto <bb 253>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 253> :
  D.252740 = gimple_assign_rhs1 (def_stmt);

  <bb 254> :
  _213 = D.252740;
  _214 = _213->base.code;
  retval.1107 = _214 != 0;
  if (retval.1107 != 0)
    goto <bb 255>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 255> :
  if (def_stmt != 0B)
    goto <bb 256>; [INV]
  else
    goto <bb 258>; [INV]

  <bb 256> :
  D.252741 = gimple_assign_rhs1 (def_stmt);

  <bb 257> :
  treecheck = D.252741;
  goto <bb 260>; [INV]

  <bb 258> :
  treecheck = filed_from2;
  goto <bb 260>; [INV]

  <bb 259> :
  treecheck = filed_from2;

  <bb 260> :
  _215 = second->base.code;
  if (_215 != 36)
    goto <bb 261>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 261> :
  _216 = filed_from->base.code;
  if (_216 != 26)
    goto <bb 262>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 262> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 263>; [INV]
  else
    goto <bb 272>; [INV]

  <bb 263> :
  _217 = gimple_code (def_stmt2);
  retval.1108 = _217 != 20;
  if (retval.1108 != 0)
    goto <bb 264>; [INV]
  else
    goto <bb 272>; [INV]

  <bb 264> :
  D.252742 = gimple_assign_rhs1 (def_stmt2);

  <bb 265> :
  _218 = D.252742;
  retval.1109 = _218 != 0B;
  if (retval.1109 != 0)
    goto <bb 266>; [INV]
  else
    goto <bb 272>; [INV]

  <bb 266> :
  D.252743 = gimple_assign_rhs1 (def_stmt2);

  <bb 267> :
  _219 = D.252743;
  _220 = _219->base.code;
  retval.1110 = _220 != 0;
  if (retval.1110 != 0)
    goto <bb 268>; [INV]
  else
    goto <bb 272>; [INV]

  <bb 268> :
  if (def_stmt2 != 0B)
    goto <bb 269>; [INV]
  else
    goto <bb 271>; [INV]

  <bb 269> :
  D.252744 = gimple_assign_rhs1 (def_stmt2);

  <bb 270> :
  treecheck2 = D.252744;
  goto <bb 272>; [INV]

  <bb 271> :
  treecheck2 = filed_from;

  <bb 272> :
  goto <bb 274>; [INV]

  <bb 273> :
  treecheck2 = filed_from;

  <bb 274> :
  if (treecheck == 0B)
    goto <bb 275>; [INV]
  else
    goto <bb 276>; [INV]

  <bb 275> :
  treecheck = filed_from2;

  <bb 276> :
  if (treecheck2 == 0B)
    goto <bb 277>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 277> :
  treecheck2 = filed_from;

  <bb 278> :
  if (treecheck2 == treecheck)
    goto <bb 279>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 279> :
  _221 = (long unsigned int) i;
  _222 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _221);
  _223 = _222->stmt;
  D.252745 = gimple_assign_rhs1 (_223);

  <bb 280> :
  _224 = D.252745;
  D.252746 = check_stmtStack (_224);

  <bb 281> :
  _225 = D.252746;
  retval.1111 = _225 == 0;
  if (retval.1111 != 0)
    goto <bb 282>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 282> :
  _226 = (long unsigned int) i;
  _227 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _226);
  _228 = _227->stmt;
  D.252747 = gimple_assign_rhs1 (_228);

  <bb 283> :
  _229 = D.252747;
  if (target2 != _229)
    goto <bb 284>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 284> :
  _230 = (long unsigned int) i;
  _231 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _230);
  _232 = _231->stmt;
  D.252748 = check_stmtStack2 (_232);

  <bb 285> :
  _233 = D.252748;
  if (_233 == 0)
    goto <bb 286>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 286> :
  iftmp.1113 = 1;
  goto <bb 288>; [INV]

  <bb 287> :
  iftmp.1113 = 0;

  <bb 288> :
  retval.1112 = iftmp.1113;
  if (retval.1112 != 0)
    goto <bb 289>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 289> :
  _234 = (long unsigned int) i;
  _235 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _234);
  _236 = _235->stmt;
  D.252749 = gimple_assign_rhs1 (_236);

  <bb 290> :
  _237 = D.252749;
  _238 = (long unsigned int) i;
  _239 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _238);
  _240 = _239->stmt;
  set_gimple_array (used_stmt, _240, _237, target, 0B);

  <bb 291> :
  _241 = (long unsigned int) i;
  _242 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _241);
  _243 = _242->stmt;
  D.252750 = gimple_assign_rhs1 (_243);

  <bb 292> :
  _244 = D.252750;
  _245 = (long unsigned int) i;
  _246 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _245);
  _247 = _246->stmt;
  D.252751 = gimple_assign_rhs1 (_247);

  <bb 293> :
  _248 = D.252751;
  new_search_imm_use (used_stmt, _248, _244);
  goto <bb 345>; [INV]

  <bb 294> :
  _249 = (long unsigned int) i;
  _250 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _249);
  _251 = _250->stmt;
  D.252752 = gimple_assign_lhs (_251);

  <bb 295> :
  _252 = D.252752;
  _253 = _252->base.code;
  retval.1114 = _253 == 153;
  if (retval.1114 != 0)
    goto <bb 296>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 296> :
  filed_from = second->exp.operands[0];
  _254 = (long unsigned int) i;
  _255 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _254);
  _256 = _255->assign_tree;
  filed_from2 = _256->exp.operands[0];
  _257 = filed_from2->base.code;
  if (_257 == 165)
    goto <bb 297>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 297> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 298> :
  _258 = filed_from->base.code;
  if (_258 == 165)
    goto <bb 299>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 299> :
  filed_from = filed_from->exp.operands[0];

  <bb 300> :
  _259 = filed_from2->base.code;
  if (_259 == 153)
    goto <bb 301>; [INV]
  else
    goto <bb 311>; [INV]

  <bb 301> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 302>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 302> :
  _260 = gimple_code (def_stmt);
  retval.1115 = _260 != 20;
  if (retval.1115 != 0)
    goto <bb 303>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 303> :
  D.252753 = gimple_assign_rhs1 (def_stmt);

  <bb 304> :
  _261 = D.252753;
  retval.1116 = _261 != 0B;
  if (retval.1116 != 0)
    goto <bb 305>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 305> :
  D.252754 = gimple_assign_rhs1 (def_stmt);

  <bb 306> :
  _262 = D.252754;
  _263 = _262->base.code;
  retval.1117 = _263 != 0;
  if (retval.1117 != 0)
    goto <bb 307>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 307> :
  if (def_stmt != 0B)
    goto <bb 308>; [INV]
  else
    goto <bb 310>; [INV]

  <bb 308> :
  D.252755 = gimple_assign_rhs1 (def_stmt);

  <bb 309> :
  treecheck = D.252755;
  goto <bb 312>; [INV]

  <bb 310> :
  treecheck = filed_from2;
  goto <bb 312>; [INV]

  <bb 311> :
  treecheck = filed_from2;

  <bb 312> :
  _264 = filed_from->base.code;
  if (_264 == 153)
    goto <bb 313>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 313> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 314>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 314> :
  _265 = filed_from->base.code;
  if (_265 != 20)
    goto <bb 315>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 315> :
  _266 = gimple_code (def_stmt2);
  retval.1118 = _266 != 20;
  if (retval.1118 != 0)
    goto <bb 316>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 316> :
  D.252756 = gimple_assign_rhs1 (def_stmt2);

  <bb 317> :
  _267 = D.252756;
  retval.1119 = _267 != 0B;
  if (retval.1119 != 0)
    goto <bb 318>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 318> :
  D.252757 = gimple_assign_rhs1 (def_stmt2);

  <bb 319> :
  _268 = D.252757;
  _269 = _268->base.code;
  retval.1120 = _269 != 0;
  if (retval.1120 != 0)
    goto <bb 320>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 320> :
  if (def_stmt2 != 0B)
    goto <bb 321>; [INV]
  else
    goto <bb 323>; [INV]

  <bb 321> :
  D.252758 = gimple_assign_rhs1 (def_stmt2);

  <bb 322> :
  treecheck2 = D.252758;
  goto <bb 325>; [INV]

  <bb 323> :
  treecheck2 = filed_from;
  goto <bb 325>; [INV]

  <bb 324> :
  treecheck2 = filed_from;

  <bb 325> :
  if (treecheck == 0B)
    goto <bb 326>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 326> :
  treecheck = filed_from2;

  <bb 327> :
  if (treecheck2 == 0B)
    goto <bb 328>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 328> :
  treecheck2 = filed_from;

  <bb 329> :
  if (treecheck2 == treecheck)
    goto <bb 330>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 330> :
  _270 = (long unsigned int) i;
  _271 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _270);
  _272 = _271->stmt;
  D.252759 = gimple_assign_lhs (_272);

  <bb 331> :
  _273 = D.252759;
  D.252760 = check_stmtStack (_273);

  <bb 332> :
  _274 = D.252760;
  retval.1121 = _274 == 0;
  if (retval.1121 != 0)
    goto <bb 333>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 333> :
  _275 = (long unsigned int) i;
  _276 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _275);
  _277 = _276->stmt;
  D.252761 = gimple_assign_lhs (_277);

  <bb 334> :
  _278 = D.252761;
  if (target2 != _278)
    goto <bb 335>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 335> :
  _279 = (long unsigned int) i;
  _280 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _279);
  _281 = _280->stmt;
  D.252762 = check_stmtStack2 (_281);

  <bb 336> :
  _282 = D.252762;
  if (_282 == 0)
    goto <bb 337>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 337> :
  iftmp.1123 = 1;
  goto <bb 339>; [INV]

  <bb 338> :
  iftmp.1123 = 0;

  <bb 339> :
  retval.1122 = iftmp.1123;
  if (retval.1122 != 0)
    goto <bb 340>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 340> :
  _283 = (long unsigned int) i;
  _284 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _283);
  _285 = _284->stmt;
  D.252763 = gimple_assign_rhs1 (_285);

  <bb 341> :
  _286 = D.252763;
  _287 = (long unsigned int) i;
  _288 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _287);
  _289 = _288->stmt;
  set_gimple_array (used_stmt, _289, _286, target, 0B);

  <bb 342> :
  _290 = (long unsigned int) i;
  _291 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _290);
  _292 = _291->stmt;
  D.252764 = gimple_assign_lhs (_292);

  <bb 343> :
  _293 = D.252764;
  _294 = (long unsigned int) i;
  _295 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _294);
  _296 = _295->stmt;
  D.252765 = gimple_assign_lhs (_296);

  <bb 344> :
  _297 = D.252765;
  new_search_imm_use (used_stmt, _297, _293);

  <bb 345> :
  i = i + 1;

  <bb 346> :
  _298 = (long unsigned int) i;
  _299 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1124 = _298 < _299;
  if (retval.1124 != 0)
    goto <bb 241>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 347> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 350>; [INV]

  <bb 348> :
  _300 = second->base.code;
  if (_300 == 36)
    goto <bb 349>; [INV]
  else
    goto <bb 350>; [INV]

  <bb 349> :
  getFunctionAssignVAR = second;

  <bb 350> :
  second2 = {CLOBBER};

  <bb 351> :
  D.252770 = gimple_assign_lhs (use_stmt);

  <bb 352> :
  _301 = D.252770;
  D.252771 = check_stmtStack (_301);

  <bb 353> :
  _302 = D.252771;
  if (_302 == 0)
    goto <bb 354>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 354> :
  D.252772 = check_stmtStack2 (use_stmt);

  <bb 355> :
  _303 = D.252772;
  if (_303 == 0)
    goto <bb 356>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 356> :
  iftmp.1126 = 1;
  goto <bb 358>; [INV]

  <bb 357> :
  iftmp.1126 = 0;

  <bb 358> :
  retval.1125 = iftmp.1126;
  if (retval.1125 != 0)
    goto <bb 359>; [INV]
  else
    goto <bb 361>; [INV]

  <bb 359> :
  D.252773 = gimple_assign_lhs (use_stmt);

  <bb 360> :
  _304 = D.252773;
  set_gimple_array (used_stmt, use_stmt, _304, target, 0B);
  goto <bb 371>; [INV]

  <bb 361> :
  D.252774 = gimple_assign_rhs1 (use_stmt);

  <bb 362> :
  _305 = D.252774;
  D.252775 = check_stmtStack (_305);

  <bb 363> :
  _306 = D.252775;
  if (_306 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 364> :
  D.252776 = check_stmtStack2 (use_stmt);

  <bb 365> :
  _307 = D.252776;
  if (_307 == 0)
    goto <bb 366>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 366> :
  iftmp.1128 = 1;
  goto <bb 368>; [INV]

  <bb 367> :
  iftmp.1128 = 0;

  <bb 368> :
  retval.1127 = iftmp.1128;
  if (retval.1127 != 0)
    goto <bb 369>; [INV]
  else
    goto <bb 371>; [INV]

  <bb 369> :
  D.252777 = gimple_assign_rhs1 (use_stmt);

  <bb 370> :
  _308 = D.252777;
  set_gimple_array (used_stmt, use_stmt, _308, target, 0B);

  <bb 371> :
  getFunctionAssignVAR.1129_309 = getFunctionAssignVAR;
  if (getFunctionAssignVAR.1129_309 != 0B)
    goto <bb 372>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 372> :
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1131_310 = function_assign_collect;
  D.252778 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1131_310, &getFunctionAssignVAR);

  <bb 373> :
  _311 = D.252778;
  retval.1130 = _311 != 0B;
  if (retval.1130 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 623>; [INV]

  <bb 374> :
  getFunctionAssignVAR.1132_312 = getFunctionAssignVAR;
  D.196210 = ret_function_varstmt (getFunctionAssignVAR.1132_312); [return slot optimization]

  <bb 375> :
  function_assign_array::operator= (&assign_array, &D.196210);
  function_assign_array::~function_assign_array (&D.196210);
  D.196210 = {CLOBBER};
  i = 0;
  goto <bb 622>; [INV]

  <bb 376> :
  _313 = (long unsigned int) i;
  _314 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _313);
  nowstmt = _314->stmt;
  _315 = gimple_code (nowstmt);
  retval.1133 = _315 == 6;
  if (retval.1133 != 0)
    goto <bb 377>; [INV]
  else
    goto <bb 554>; [INV]

  <bb 377> :
  D.252779 = gimple_assign_lhs (nowstmt);

  <bb 378> :
  _316 = D.252779;
  _317 = _316->base.code;
  retval.1134 = _317 == 165;
  if (retval.1134 != 0)
    goto <bb 379>; [INV]
  else
    goto <bb 397>; [INV]

  <bb 379> :
  D.252780 = gimple_assign_lhs (nowstmt);

  <bb 380> :
  _318 = D.252780;
  D.252781 = check_stmtStack (_318);

  <bb 381> :
  _319 = D.252781;
  retval.1135 = _319 == 0;
  if (retval.1135 != 0)
    goto <bb 382>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 382> :
  _320 = (long unsigned int) i;
  _321 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _320);
  _322 = _321->form_tree;
  retval.1136 = _322 != 0B;
  if (retval.1136 != 0)
    goto <bb 383>; [INV]
  else
    goto <bb 384>; [INV]

  <bb 383> :
  _323 = (long unsigned int) i;
  _324 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _323);
  _325 = _324->form_tree;
  set_gimple_array (used_stmt, nowstmt, _325, target, 0B);
  goto <bb 386>; [INV]

  <bb 384> :
  D.252782 = gimple_assign_lhs (nowstmt);

  <bb 385> :
  _326 = D.252782;
  set_gimple_array (used_stmt, nowstmt, _326, target, 0B);

  <bb 386> :
  D.252783 = gimple_assign_lhs (nowstmt);

  <bb 387> :
  _327 = D.252783;
  second = _327->exp.operands[0];
  if (second != 0B)
    goto <bb 388>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 388> :
  _328 = second->base.code;
  if (_328 == 153)
    goto <bb 389>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 389> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1137 = is_gimple_assign (def_stmt);
  if (retval.1137 != 0)
    goto <bb 390>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 390> :
  D.252784 = gimple_assign_lhs (def_stmt);

  <bb 391> :
  _329 = D.252784;
  _330 = _329->base.code;
  retval.1138 = _330 == 153;
  if (retval.1138 != 0)
    goto <bb 392>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 392> :
  D.252785 = gimple_assign_lhs (def_stmt);

  <bb 393> :
  _331 = D.252785;
  retval.1139 = target2 != _331;
  if (retval.1139 != 0)
    goto <bb 394>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 394> :
  D.252786 = gimple_assign_lhs (def_stmt);

  <bb 395> :
  _332 = D.252786;
  D.252787 = gimple_assign_lhs (def_stmt);

  <bb 396> :
  _333 = D.252787;
  new_search_imm_use (used_stmt, _333, _332);
  goto <bb 621>; [INV]

  <bb 397> :
  D.252788 = gimple_assign_lhs (nowstmt);

  <bb 398> :
  _334 = D.252788;
  _335 = _334->base.code;
  retval.1140 = _335 == 153;
  if (retval.1140 != 0)
    goto <bb 399>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 399> :
  D.252789 = gimple_assign_lhs (nowstmt);

  <bb 400> :
  _336 = D.252789;
  D.252790 = check_stmtStack (_336);

  <bb 401> :
  _337 = D.252790;
  retval.1141 = _337 == 0;
  if (retval.1141 != 0)
    goto <bb 402>; [INV]
  else
    goto <bb 418>; [INV]

  <bb 402> :
  _338 = (long unsigned int) i;
  _339 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _338);
  _340 = _339->form_tree;
  retval.1142 = _340 != 0B;
  if (retval.1142 != 0)
    goto <bb 403>; [INV]
  else
    goto <bb 404>; [INV]

  <bb 403> :
  _341 = (long unsigned int) i;
  _342 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _341);
  _343 = _342->form_tree;
  set_gimple_array (used_stmt, nowstmt, _343, target, 0B);
  goto <bb 406>; [INV]

  <bb 404> :
  D.252791 = gimple_assign_lhs (nowstmt);

  <bb 405> :
  _344 = D.252791;
  set_gimple_array (used_stmt, nowstmt, _344, target, 0B);

  <bb 406> :
  D.252792 = check_stmtStack4 (nowstmt);

  <bb 407> :
  _345 = D.252792;
  retval.1143 = _345 == 0;
  if (retval.1143 != 0)
    goto <bb 408>; [INV]
  else
    goto <bb 418>; [INV]

  <bb 408> :
  D.252793 = gimple_assign_lhs (nowstmt);

  <bb 409> :
  _346 = D.252793;
  if (target2 != _346)
    goto <bb 410>; [INV]
  else
    goto <bb 413>; [INV]

  <bb 410> :
  D.252794 = check_stmtStack2 (nowstmt);

  <bb 411> :
  _347 = D.252794;
  if (_347 == 0)
    goto <bb 412>; [INV]
  else
    goto <bb 413>; [INV]

  <bb 412> :
  iftmp.1145 = 1;
  goto <bb 414>; [INV]

  <bb 413> :
  iftmp.1145 = 0;

  <bb 414> :
  retval.1144 = iftmp.1145;
  if (retval.1144 != 0)
    goto <bb 415>; [INV]
  else
    goto <bb 418>; [INV]

  <bb 415> :
  D.252795 = gimple_assign_lhs (nowstmt);

  <bb 416> :
  _348 = D.252795;
  D.252796 = gimple_assign_lhs (nowstmt);

  <bb 417> :
  _349 = D.252796;
  new_search_imm_use (used_stmt, _349, _348);

  <bb 418> :
  D.252797 = gimple_assign_rhs1 (nowstmt);

  <bb 419> :
  _350 = D.252797;
  if (_350 != 0B)
    goto <bb 420>; [INV]
  else
    goto <bb 423>; [INV]

  <bb 420> :
  D.252798 = gimple_assign_rhs1 (nowstmt);

  <bb 421> :
  _351 = D.252798;
  _352 = _351->base.code;
  if (_352 == 47)
    goto <bb 422>; [INV]
  else
    goto <bb 423>; [INV]

  <bb 422> :
  iftmp.1147 = 1;
  goto <bb 424>; [INV]

  <bb 423> :
  iftmp.1147 = 0;

  <bb 424> :
  retval.1146 = iftmp.1147;
  if (retval.1146 != 0)
    goto <bb 425>; [INV]
  else
    goto <bb 441>; [INV]

  <bb 425> :
  D.252799 = gimple_assign_rhs1 (nowstmt);

  <bb 426> :
  _353 = D.252799;
  D.252800 = check_stmtStack (_353);

  <bb 427> :
  _354 = D.252800;
  retval.1148 = _354 == 0;
  if (retval.1148 != 0)
    goto <bb 428>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 428> :
  D.252801 = gimple_assign_rhs1 (nowstmt);

  <bb 429> :
  _355 = D.252801;
  second = _355->exp.operands[0];
  if (second != 0B)
    goto <bb 430>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 430> :
  _356 = second->base.code;
  if (_356 == 165)
    goto <bb 431>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 431> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 432>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 432> :
  _357 = three->base.code;
  if (_357 == 153)
    goto <bb 433>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 433> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1149 = is_gimple_assign (def_stmt);
  if (retval.1149 != 0)
    goto <bb 434>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 434> :
  D.252802 = gimple_assign_lhs (def_stmt);

  <bb 435> :
  _358 = D.252802;
  _359 = _358->base.code;
  retval.1150 = _359 == 153;
  if (retval.1150 != 0)
    goto <bb 436>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 436> :
  D.252803 = gimple_assign_lhs (def_stmt);

  <bb 437> :
  _360 = D.252803;
  retval.1151 = target2 != _360;
  if (retval.1151 != 0)
    goto <bb 438>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 438> :
  D.252804 = gimple_assign_lhs (def_stmt);

  <bb 439> :
  _361 = D.252804;
  D.252805 = gimple_assign_lhs (def_stmt);

  <bb 440> :
  _362 = D.252805;
  new_search_imm_use (used_stmt, _362, _361);
  goto <bb 621>; [INV]

  <bb 441> :
  D.252806 = gimple_assign_rhs1 (nowstmt);

  <bb 442> :
  _363 = D.252806;
  if (_363 != 0B)
    goto <bb 443>; [INV]
  else
    goto <bb 446>; [INV]

  <bb 443> :
  D.252807 = gimple_assign_rhs1 (nowstmt);

  <bb 444> :
  _364 = D.252807;
  _365 = _364->base.code;
  if (_365 == 165)
    goto <bb 445>; [INV]
  else
    goto <bb 446>; [INV]

  <bb 445> :
  iftmp.1153 = 1;
  goto <bb 447>; [INV]

  <bb 446> :
  iftmp.1153 = 0;

  <bb 447> :
  retval.1152 = iftmp.1153;
  if (retval.1152 != 0)
    goto <bb 448>; [INV]
  else
    goto <bb 465>; [INV]

  <bb 448> :
  D.252808 = gimple_assign_rhs1 (nowstmt);

  <bb 449> :
  _366 = D.252808;
  D.252809 = check_stmtStack (_366);

  <bb 450> :
  _367 = D.252809;
  retval.1154 = _367 == 0;
  if (retval.1154 != 0)
    goto <bb 451>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 451> :
  _368 = (long unsigned int) i;
  _369 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _368);
  _370 = _369->form_tree;
  retval.1155 = _370 != 0B;
  if (retval.1155 != 0)
    goto <bb 452>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 452> :
  _371 = (long unsigned int) i;
  _372 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _371);
  _373 = _372->form_tree;
  set_gimple_array (used_stmt, nowstmt, _373, target, 0B);
  goto <bb 455>; [INV]

  <bb 453> :
  D.252810 = gimple_assign_rhs1 (nowstmt);

  <bb 454> :
  _374 = D.252810;
  set_gimple_array (used_stmt, nowstmt, _374, target, 0B);

  <bb 455> :
  D.252811 = gimple_assign_rhs1 (nowstmt);

  <bb 456> :
  _375 = D.252811;
  second = _375->exp.operands[0];
  _376 = second->base.code;
  if (_376 == 165)
    goto <bb 457>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 457> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1156 = is_gimple_assign (def_stmt);
  if (retval.1156 != 0)
    goto <bb 458>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 458> :
  D.252812 = gimple_assign_lhs (def_stmt);

  <bb 459> :
  _377 = D.252812;
  _378 = _377->base.code;
  retval.1157 = _378 == 153;
  if (retval.1157 != 0)
    goto <bb 460>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 460> :
  D.252813 = gimple_assign_lhs (def_stmt);

  <bb 461> :
  _379 = D.252813;
  retval.1158 = target2 != _379;
  if (retval.1158 != 0)
    goto <bb 462>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 462> :
  D.252814 = gimple_assign_lhs (def_stmt);

  <bb 463> :
  _380 = D.252814;
  D.252815 = gimple_assign_lhs (def_stmt);

  <bb 464> :
  _381 = D.252815;
  new_search_imm_use (used_stmt, _381, _380);
  goto <bb 621>; [INV]

  <bb 465> :
  D.252816 = gimple_assign_rhs1 (nowstmt);

  <bb 466> :
  _382 = D.252816;
  if (_382 != 0B)
    goto <bb 467>; [INV]
  else
    goto <bb 470>; [INV]

  <bb 467> :
  D.252817 = gimple_assign_rhs1 (nowstmt);

  <bb 468> :
  _383 = D.252817;
  _384 = _383->base.code;
  if (_384 == 49)
    goto <bb 469>; [INV]
  else
    goto <bb 470>; [INV]

  <bb 469> :
  iftmp.1160 = 1;
  goto <bb 471>; [INV]

  <bb 470> :
  iftmp.1160 = 0;

  <bb 471> :
  retval.1159 = iftmp.1160;
  if (retval.1159 != 0)
    goto <bb 472>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 472> :
  D.252818 = gimple_assign_rhs1 (nowstmt);

  <bb 473> :
  _385 = D.252818;
  D.252819 = check_stmtStack (_385);

  <bb 474> :
  _386 = D.252819;
  retval.1161 = _386 == 0;
  if (retval.1161 != 0)
    goto <bb 475>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 475> :
  _387 = (long unsigned int) i;
  _388 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _387);
  _389 = _388->form_tree;
  retval.1162 = _389 != 0B;
  if (retval.1162 != 0)
    goto <bb 476>; [INV]
  else
    goto <bb 477>; [INV]

  <bb 476> :
  _390 = (long unsigned int) i;
  _391 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _390);
  _392 = _391->form_tree;
  set_gimple_array (used_stmt, nowstmt, _392, target, 0B);
  goto <bb 621>; [INV]

  <bb 477> :
  D.252820 = gimple_assign_rhs1 (nowstmt);

  <bb 478> :
  _393 = D.252820;
  set_gimple_array (used_stmt, nowstmt, _393, target, 0B);
  goto <bb 621>; [INV]

  <bb 479> :
  D.252821 = gimple_assign_rhs1 (nowstmt);

  <bb 480> :
  _394 = D.252821;
  _395 = _394->base.code;
  retval.1163 = _395 == 153;
  if (retval.1163 != 0)
    goto <bb 481>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 481> :
  D.252822 = gimple_assign_rhs1 (nowstmt);

  <bb 482> :
  _396 = D.252822;
  D.252823 = check_stmtStack (_396);

  <bb 483> :
  _397 = D.252823;
  retval.1164 = _397 == 0;
  if (retval.1164 != 0)
    goto <bb 484>; [INV]
  else
    goto <bb 502>; [INV]

  <bb 484> :
  _398 = (long unsigned int) i;
  _399 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _398);
  _400 = _399->form_tree;
  retval.1165 = _400 != 0B;
  if (retval.1165 != 0)
    goto <bb 485>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 485> :
  _401 = (long unsigned int) i;
  _402 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _401);
  _403 = _402->form_tree;
  set_gimple_array (used_stmt, nowstmt, _403, target, 0B);
  goto <bb 488>; [INV]

  <bb 486> :
  D.252824 = gimple_assign_rhs1 (nowstmt);

  <bb 487> :
  _404 = D.252824;
  set_gimple_array (used_stmt, nowstmt, _404, target, 0B);

  <bb 488> :
  D.252825 = gimple_assign_rhs1 (nowstmt);

  <bb 489> :
  _405 = D.252825;
  retval.1166 = target2 != _405;
  if (retval.1166 != 0)
    goto <bb 490>; [INV]
  else
    goto <bb 502>; [INV]

  <bb 490> :
  D.252826 = check_stmtStack4 (nowstmt);

  <bb 491> :
  _406 = D.252826;
  retval.1167 = _406 == 0;
  if (retval.1167 != 0)
    goto <bb 492>; [INV]
  else
    goto <bb 502>; [INV]

  <bb 492> :
  D.252827 = gimple_assign_rhs1 (nowstmt);

  <bb 493> :
  _407 = D.252827;
  if (target2 != _407)
    goto <bb 494>; [INV]
  else
    goto <bb 497>; [INV]

  <bb 494> :
  D.252828 = check_stmtStack2 (nowstmt);

  <bb 495> :
  _408 = D.252828;
  if (_408 == 0)
    goto <bb 496>; [INV]
  else
    goto <bb 497>; [INV]

  <bb 496> :
  iftmp.1169 = 1;
  goto <bb 498>; [INV]

  <bb 497> :
  iftmp.1169 = 0;

  <bb 498> :
  retval.1168 = iftmp.1169;
  if (retval.1168 != 0)
    goto <bb 499>; [INV]
  else
    goto <bb 502>; [INV]

  <bb 499> :
  D.252829 = gimple_assign_rhs1 (nowstmt);

  <bb 500> :
  _409 = D.252829;
  D.252830 = gimple_assign_rhs1 (nowstmt);

  <bb 501> :
  _410 = D.252830;
  new_search_imm_use (used_stmt, _410, _409);

  <bb 502> :
  D.252831 = gimple_assign_lhs (nowstmt);

  <bb 503> :
  _411 = D.252831;
  if (_411 != 0B)
    goto <bb 504>; [INV]
  else
    goto <bb 507>; [INV]

  <bb 504> :
  D.252832 = gimple_assign_lhs (nowstmt);

  <bb 505> :
  _412 = D.252832;
  _413 = _412->base.code;
  if (_413 == 47)
    goto <bb 506>; [INV]
  else
    goto <bb 507>; [INV]

  <bb 506> :
  iftmp.1171 = 1;
  goto <bb 508>; [INV]

  <bb 507> :
  iftmp.1171 = 0;

  <bb 508> :
  retval.1170 = iftmp.1171;
  if (retval.1170 != 0)
    goto <bb 509>; [INV]
  else
    goto <bb 525>; [INV]

  <bb 509> :
  D.252833 = gimple_assign_lhs (nowstmt);

  <bb 510> :
  _414 = D.252833;
  D.252834 = check_stmtStack (_414);

  <bb 511> :
  _415 = D.252834;
  retval.1172 = _415 == 0;
  if (retval.1172 != 0)
    goto <bb 512>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 512> :
  D.252835 = gimple_assign_lhs (nowstmt);

  <bb 513> :
  _416 = D.252835;
  second = _416->exp.operands[0];
  if (second != 0B)
    goto <bb 514>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 514> :
  _417 = second->base.code;
  if (_417 == 165)
    goto <bb 515>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 515> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 516>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 516> :
  _418 = three->base.code;
  if (_418 == 153)
    goto <bb 517>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 517> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1173 = is_gimple_assign (def_stmt);
  if (retval.1173 != 0)
    goto <bb 518>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 518> :
  D.252836 = gimple_assign_lhs (def_stmt);

  <bb 519> :
  _419 = D.252836;
  _420 = _419->base.code;
  retval.1174 = _420 == 153;
  if (retval.1174 != 0)
    goto <bb 520>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 520> :
  D.252837 = gimple_assign_lhs (def_stmt);

  <bb 521> :
  _421 = D.252837;
  retval.1175 = target2 != _421;
  if (retval.1175 != 0)
    goto <bb 522>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 522> :
  D.252838 = gimple_assign_lhs (def_stmt);

  <bb 523> :
  _422 = D.252838;
  D.252839 = gimple_assign_lhs (def_stmt);

  <bb 524> :
  _423 = D.252839;
  new_search_imm_use (used_stmt, _423, _422);
  goto <bb 621>; [INV]

  <bb 525> :
  D.252840 = gimple_assign_lhs (nowstmt);

  <bb 526> :
  _424 = D.252840;
  if (_424 != 0B)
    goto <bb 527>; [INV]
  else
    goto <bb 530>; [INV]

  <bb 527> :
  D.252841 = gimple_assign_lhs (nowstmt);

  <bb 528> :
  _425 = D.252841;
  _426 = _425->base.code;
  if (_426 == 165)
    goto <bb 529>; [INV]
  else
    goto <bb 530>; [INV]

  <bb 529> :
  iftmp.1177 = 1;
  goto <bb 531>; [INV]

  <bb 530> :
  iftmp.1177 = 0;

  <bb 531> :
  retval.1176 = iftmp.1177;
  if (retval.1176 != 0)
    goto <bb 532>; [INV]
  else
    goto <bb 545>; [INV]

  <bb 532> :
  D.252842 = gimple_assign_lhs (nowstmt);

  <bb 533> :
  _427 = D.252842;
  D.252843 = check_stmtStack (_427);

  <bb 534> :
  _428 = D.252843;
  retval.1178 = _428 == 0;
  if (retval.1178 != 0)
    goto <bb 535>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 535> :
  D.252844 = gimple_assign_lhs (nowstmt);

  <bb 536> :
  _429 = D.252844;
  second = _429->exp.operands[0];
  _430 = second->base.code;
  if (_430 == 165)
    goto <bb 537>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 537> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1179 = is_gimple_assign (def_stmt);
  if (retval.1179 != 0)
    goto <bb 538>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 538> :
  D.252845 = gimple_assign_lhs (def_stmt);

  <bb 539> :
  _431 = D.252845;
  _432 = _431->base.code;
  retval.1180 = _432 == 153;
  if (retval.1180 != 0)
    goto <bb 540>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 540> :
  D.252846 = gimple_assign_lhs (def_stmt);

  <bb 541> :
  _433 = D.252846;
  retval.1181 = target2 != _433;
  if (retval.1181 != 0)
    goto <bb 542>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 542> :
  D.252847 = gimple_assign_lhs (def_stmt);

  <bb 543> :
  _434 = D.252847;
  D.252848 = gimple_assign_lhs (def_stmt);

  <bb 544> :
  _435 = D.252848;
  new_search_imm_use (used_stmt, _435, _434);
  goto <bb 621>; [INV]

  <bb 545> :
  D.252849 = gimple_assign_lhs (nowstmt);

  <bb 546> :
  _436 = D.252849;
  _437 = _436->base.code;
  retval.1182 = _437 == 49;
  if (retval.1182 != 0)
    goto <bb 547>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 547> :
  D.252850 = gimple_assign_lhs (nowstmt);

  <bb 548> :
  _438 = D.252850;
  D.252851 = check_stmtStack (_438);

  <bb 549> :
  _439 = D.252851;
  retval.1183 = _439 == 0;
  if (retval.1183 != 0)
    goto <bb 550>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 550> :
  _440 = (long unsigned int) i;
  _441 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _440);
  _442 = _441->form_tree;
  retval.1184 = _442 != 0B;
  if (retval.1184 != 0)
    goto <bb 551>; [INV]
  else
    goto <bb 552>; [INV]

  <bb 551> :
  _443 = (long unsigned int) i;
  _444 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _443);
  _445 = _444->form_tree;
  set_gimple_array (used_stmt, nowstmt, _445, target, 0B);
  goto <bb 621>; [INV]

  <bb 552> :
  D.252852 = gimple_assign_lhs (nowstmt);

  <bb 553> :
  _446 = D.252852;
  set_gimple_array (used_stmt, nowstmt, _446, target, 0B);
  goto <bb 621>; [INV]

  <bb 554> :
  _447 = gimple_code (nowstmt);
  retval.1185 = _447 == 8;
  if (retval.1185 != 0)
    goto <bb 555>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 555> :
  _448 = gimple_code (nowstmt);
  retval.1186 = _448 == 8;
  if (retval.1186 != 0)
    goto <bb 556>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 556> :
  D.252853 = gimple_call_fn (nowstmt);

  <bb 557> :
  _449 = D.252853;
  retval.1187 = _449 != 0B;
  if (retval.1187 != 0)
    goto <bb 558>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 558> :
  D.252854 = gimple_call_fn (nowstmt);

  <bb 559> :
  _450 = D.252854;
  D.252855 = get_name (_450);

  <bb 560> :
  name = D.252855;
  D.252856 = gimple_call_lhs (nowstmt);

  <bb 561> :
  _451 = D.252856;
  if (_451 != 0B)
    goto <bb 564>; [INV]
  else
    goto <bb 562>; [INV]

  <bb 562> :
  D.252857 = gimple_call_fndecl (nowstmt);

  <bb 563> :
  _452 = D.252857;
  if (_452 != 0B)
    goto <bb 564>; [INV]
  else
    goto <bb 565>; [INV]

  <bb 564> :
  iftmp.1189 = 1;
  goto <bb 566>; [INV]

  <bb 565> :
  iftmp.1189 = 0;

  <bb 566> :
  retval.1188 = iftmp.1189;
  if (retval.1188 != 0)
    goto <bb 567>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 567> :
  D.252858 = gimple_call_lhs (nowstmt);

  <bb 568> :
  _453 = D.252858;
  D.252859 = check_stmtStack (_453);

  <bb 569> :
  _454 = D.252859;
  retval.1190 = _454 == 0;
  if (retval.1190 != 0)
    goto <bb 570>; [INV]
  else
    goto <bb 598>; [INV]

  <bb 570> :
  if (name != 0B)
    goto <bb 571>; [INV]
  else
    goto <bb 580>; [INV]

  <bb 571> :
  _455 = strcmp (name, "free");
  if (_455 == 0)
    goto <bb 572>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 572> :
  D.252860 = check_stmtStack2 (nowstmt);

  <bb 573> :
  _456 = D.252860;
  retval.1191 = _456 == 0;
  if (retval.1191 != 0)
    goto <bb 574>; [INV]
  else
    goto <bb 580>; [INV]

  <bb 574> :
  D.252861 = gimple_call_arg (nowstmt, 0);

  <bb 575> :
  _457 = D.252861;
  set_gimple_array (used_stmt, nowstmt, _457, target, 0B);
  goto <bb 580>; [INV]

  <bb 576> :
  _458 = (long unsigned int) i;
  _459 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _458);
  _460 = _459->form_tree;
  retval.1192 = _460 != 0B;
  if (retval.1192 != 0)
    goto <bb 577>; [INV]
  else
    goto <bb 578>; [INV]

  <bb 577> :
  _461 = (long unsigned int) i;
  _462 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _461);
  _463 = _462->form_tree;
  set_gimple_array (used_stmt, nowstmt, _463, target, 0B);
  goto <bb 580>; [INV]

  <bb 578> :
  D.252862 = gimple_call_lhs (nowstmt);

  <bb 579> :
  _464 = D.252862;
  set_gimple_array (used_stmt, nowstmt, _464, target, 0B);

  <bb 580> :
  D.252863 = gimple_call_num_args (nowstmt);

  <bb 581> :
  _465 = D.252863;
  size = (int) _465;
  i = 0;
  goto <bb 597>; [INV]

  <bb 582> :
  i.1194_466 = (unsigned int) i;
  D.252864 = gimple_call_arg (nowstmt, i.1194_466);

  <bb 583> :
  _467 = D.252864;
  D.252865 = check_stmtStack (_467);

  <bb 584> :
  _468 = D.252865;
  retval.1193 = _468 == 0;
  if (retval.1193 != 0)
    goto <bb 585>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 585> :
  i.1196_469 = (unsigned int) i;
  D.252866 = gimple_call_arg (nowstmt, i.1196_469);

  <bb 586> :
  _470 = D.252866;
  _471 = _470->base.code;
  retval.1195 = _471 == 153;
  if (retval.1195 != 0)
    goto <bb 587>; [INV]
  else
    goto <bb 592>; [INV]

  <bb 587> :
  i.1198_472 = (unsigned int) i;
  D.252867 = gimple_call_arg (nowstmt, i.1198_472);

  <bb 588> :
  _473 = D.252867;
  retval.1197 = target2 != _473;
  if (retval.1197 != 0)
    goto <bb 589>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 589> :
  i.1199_474 = (unsigned int) i;
  D.252868 = gimple_call_arg (nowstmt, i.1199_474);

  <bb 590> :
  _475 = D.252868;
  i.1200_476 = (unsigned int) i;
  D.252869 = gimple_call_arg (nowstmt, i.1200_476);

  <bb 591> :
  _477 = D.252869;
  new_search_imm_use (used_stmt, _477, _475);
  goto <bb 596>; [INV]

  <bb 592> :
  i.1202_478 = (unsigned int) i;
  D.252870 = gimple_call_arg (nowstmt, i.1202_478);

  <bb 593> :
  _479 = D.252870;
  _480 = _479->base.code;
  retval.1201 = _480 == 131;
  if (retval.1201 != 0)
    goto <bb 594>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 594> :
  i.1203_481 = (unsigned int) i;
  D.252871 = gimple_call_arg (nowstmt, i.1203_481);

  <bb 595> :
  _482 = D.252871;
  set_gimple_array (used_stmt, nowstmt, _482, target, 0B);

  <bb 596> :
  i = i + 1;

  <bb 597> :
  if (i < size)
    goto <bb 582>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 598> :
  D.252872 = check_stmtStack2 (nowstmt);

  <bb 599> :
  _483 = D.252872;
  retval.1204 = _483 == 0;
  if (retval.1204 != 0)
    goto <bb 600>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 600> :
  D.252873 = gimple_call_arg (nowstmt, 0);

  <bb 601> :
  _484 = D.252873;
  _485 = _484->base.code;
  retval.1205 = _485 == 131;
  if (retval.1205 != 0)
    goto <bb 602>; [INV]
  else
    goto <bb 604>; [INV]

  <bb 602> :
  D.252874 = gimple_call_arg (nowstmt, 0);

  <bb 603> :
  _486 = D.252874;
  set_gimple_array (used_stmt, nowstmt, _486, target, 0B);

  <bb 604> :
  D.252875 = gimple_call_num_args (nowstmt);

  <bb 605> :
  _487 = D.252875;
  size = (int) _487;
  i = 0;
  goto <bb 620>; [INV]

  <bb 606> :
  i.1207_488 = (unsigned int) i;
  D.252876 = gimple_call_arg (nowstmt, i.1207_488);

  <bb 607> :
  _489 = D.252876;
  D.252877 = check_stmtStack (_489);

  <bb 608> :
  _490 = D.252877;
  retval.1206 = _490 == 0;
  if (retval.1206 != 0)
    goto <bb 609>; [INV]
  else
    goto <bb 619>; [INV]

  <bb 609> :
  i.1209_491 = (unsigned int) i;
  D.252878 = gimple_call_arg (nowstmt, i.1209_491);

  <bb 610> :
  _492 = D.252878;
  _493 = _492->base.code;
  retval.1208 = _493 == 153;
  if (retval.1208 != 0)
    goto <bb 611>; [INV]
  else
    goto <bb 619>; [INV]

  <bb 611> :
  i.1211_494 = (unsigned int) i;
  D.252879 = gimple_call_arg (nowstmt, i.1211_494);

  <bb 612> :
  _495 = D.252879;
  D.252880 = check_stmtStack (_495);

  <bb 613> :
  _496 = D.252880;
  retval.1210 = _496 == 0;
  if (retval.1210 != 0)
    goto <bb 614>; [INV]
  else
    goto <bb 619>; [INV]

  <bb 614> :
  i.1213_497 = (unsigned int) i;
  D.252881 = gimple_call_arg (nowstmt, i.1213_497);

  <bb 615> :
  _498 = D.252881;
  retval.1212 = target2 != _498;
  if (retval.1212 != 0)
    goto <bb 616>; [INV]
  else
    goto <bb 619>; [INV]

  <bb 616> :
  i.1214_499 = (unsigned int) i;
  D.252882 = gimple_call_arg (nowstmt, i.1214_499);

  <bb 617> :
  _500 = D.252882;
  i.1215_501 = (unsigned int) i;
  D.252883 = gimple_call_arg (nowstmt, i.1215_501);

  <bb 618> :
  _502 = D.252883;
  new_search_imm_use (used_stmt, _502, _500);

  <bb 619> :
  i = i + 1;

  <bb 620> :
  if (i < size)
    goto <bb 606>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 621> :
  i = i + 1;

  <bb 622> :
  _503 = (long unsigned int) i;
  _504 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1216 = _503 < _504;
  if (retval.1216 != 0)
    goto <bb 376>; [INV]
  else
    goto <bb 623>; [INV]

  <bb 623> :
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};

  <bb 624> :
  getFunctionAssignVAR = {CLOBBER};

  <bb 625> :
  return;

  <bb 626> :
<L749>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 5

  <bb 627> :
<L750>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 4

  <bb 628> :
<L751>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 3

  <bb 629> :
<L752>:
  second2 = {CLOBBER};
  resx 2

  <bb 630> :
<L753>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 13

  <bb 631> :
<L754>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 12

  <bb 632> :
<L755>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 11

  <bb 633> :
<L756>:
  second2 = {CLOBBER};
  resx 10

  <bb 634> :
<L757>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 19

  <bb 635> :
<L758>:
  assign_array = {CLOBBER};
  resx 18

  <bb 636> :
<L759>:
  getFunctionAssignVAR = {CLOBBER};
  resx 1

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSEOS_, funcdef_no=6416, decl_uid=191026, cgraph_uid=3391, symbol_order=4167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, struct function_assign_array & D.191027)
{
  struct function_assign_array & D.252887;

  <bb 2> :
  _1 = D.191027->pass;
  this->pass = _1;
  _2 = &D.191027->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.252887 = this;

  <bb 3> :
<L0>:
  return D.252887;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSEOS2_, funcdef_no=7761, decl_uid=175195, cgraph_uid=4393, symbol_order=5178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, struct vector & __x)
{
  const bool __move_storage;
  struct vector & D.252890;
  struct integral_constant D.252889;

  <bb 2> :
  __move_storage = 1;
  _1 = std::move<std::vector<assign_type>&> (__x);
  std::vector<assign_type>::_M_move_assign (this, _1, D.252889);
  D.252890 = this;

  <bb 3> :
<L0>:
  return D.252890;

}



;; Function std::move<std::vector<assign_type>&> (_ZSt4moveIRSt6vectorI11assign_typeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=8703, decl_uid=213868, cgraph_uid=5335, symbol_order=6124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::vector<assign_type>&> (struct vector & __t)
{
  struct type & D.252892;

  <bb 2> :
  D.252892 = __t;

  <bb 3> :
<L0>:
  return D.252892;

}



;; Function std::vector<assign_type>::_M_move_assign (_ZNSt6vectorI11assign_typeSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE, funcdef_no=8704, decl_uid=175473, cgraph_uid=5336, symbol_order=6125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_move_assign (struct vector * const this, struct vector & __x, struct true_type D.226171)
{
  struct vector __tmp;
  struct allocator_type D.226174;

  <bb 2> :
  _1 = &this->D.175605;
  D.226174 = std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_1); [return slot optimization]
  std::vector<assign_type>::vector (&__tmp, &D.226174);
  std::allocator<assign_type>::~allocator (&D.226174);
  D.226174 = {CLOBBER};
  _2 = &this->D.175605._M_impl.D.174950;
  _3 = &__x->D.175605._M_impl.D.174950;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_2, _3);
  _4 = &__x->D.175605._M_impl.D.174950;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (&__tmp.D.175605._M_impl.D.174950, _4);
  _5 = &__x->D.175605;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = &this->D.175605;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  std::__alloc_on_move<std::allocator<assign_type> > (_8, _6);
  std::vector<assign_type>::~vector (&__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE13get_allocatorEv, funcdef_no=9515, decl_uid=174842, cgraph_uid=6147, symbol_order=6936)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (const struct _Vector_base * const this)
{
  <bb 2> :
  _1 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (this);
  std::allocator<assign_type>::allocator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=9517, decl_uid=175592, cgraph_uid=6149, symbol_order=6938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=10131, decl_uid=175050, cgraph_uid=6763, symbol_order=7556)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_, funcdef_no=9519, decl_uid=174886, cgraph_uid=6151, symbol_order=6940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  struct _Vector_impl_data __tmp;

  <bb 2> :
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (&__tmp);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (&__tmp, this);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (this, __x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (__x, &__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_, funcdef_no=10133, decl_uid=174883, cgraph_uid=6765, symbol_order=7558)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (struct _Vector_impl_data * const this, const struct _Vector_impl_data & __x)
{
  <bb 2> :
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  return;

}



;; Function std::__alloc_on_move<std::allocator<assign_type> > (_ZSt15__alloc_on_moveISaI11assign_typeEEvRT_S3_, funcdef_no=9520, decl_uid=226175, cgraph_uid=6152, symbol_order=6941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_move<std::allocator<assign_type> > (struct allocator & __one, struct allocator & __two)
{
  <bb 2> :
  std::move<std::allocator<assign_type>&> (__two);
  return;

}



;; Function std::move<std::allocator<assign_type>&> (_ZSt4moveIRSaI11assign_typeEEONSt16remove_referenceIT_E4typeEOS4_, funcdef_no=10134, decl_uid=235368, cgraph_uid=6766, symbol_order=7559)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<assign_type>&> (struct allocator & __t)
{
  struct type & D.252896;

  <bb 2> :
  D.252896 = __t;

  <bb 3> :
<L0>:
  return D.252896;

}



;; Function Prenew_search_imm_use (_Z21Prenew_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6417, decl_uid=187041, cgraph_uid=3393, symbol_order=4169)

Removing basic block 36
Removing basic block 39
Removing basic block 40
Removing basic block 48
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 89
Removing basic block 90
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 118
Removing basic block 119
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 132
Removing basic block 149
Removing basic block 150
Removing basic block 151
Removing basic block 152
Removing basic block 176
Removing basic block 177
Removing basic block 178
Removing basic block 179
Removing basic block 180
Removing basic block 181
Removing basic block 182
Removing basic block 183
Removing basic block 184
Removing basic block 205
Removing basic block 206
Removing basic block 207
Removing basic block 208
Removing basic block 209
Removing basic block 210
Removing basic block 211
Removing basic block 212
Removing basic block 221
Removing basic block 222
Removing basic block 230
Removing basic block 233
Removing basic block 234
Removing basic block 235
Removing basic block 238
Removing basic block 243
Removing basic block 246
Removing basic block 247
Removing basic block 248
Removing basic block 249
Removing basic block 250
Removing basic block 251
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 192, latch 191
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 186, latch 185
;;  depth 2, outer 1
;;  nodes: 186 185 88 168 184 37 167 134 137 139 142 144 140 138 136 157 160 164 162 159 147 101 68 71 73 76 78 74 72 70 91 94 98 96 93 81 35 33 154 103 178 182 180 179 181 177 176 170 175 173 172 171 174 169 102 39 38 30 29 28 152 153 149 151 150 148 131 129 130 126 128 127 125 106 124 112 121 114 113 119 120 116 118 117 115 111 108 110 109 107 123 122 105 104 32 31 34 80 79 92 95 97 90 89 69 77 75 67 66 65 63 64 60 62 61 59 42 58 48 55 53 54 50 52 51 49 47 44 46 45 43 57 56 41 40 100 99 146 145 158 161 163 156 155 135 143 141 133 132 166 165 36 183 86 87 83 85 84 82
;; 2 succs { 3 193 }
;; 3 succs { 4 193 }
;; 4 succs { 5 193 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 193 }
;; 10 succs { 11 193 }
;; 11 succs { 12 193 }
;; 12 succs { 192 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 188 }
;; 18 succs { 195 19 }
;; 19 succs { 20 22 }
;; 20 succs { 195 21 }
;; 21 succs { 24 }
;; 22 succs { 195 23 }
;; 23 succs { 24 }
;; 24 succs { 194 25 }
;; 25 succs { 26 187 }
;; 26 succs { 194 27 }
;; 27 succs { 186 }
;; 28 succs { 29 168 }
;; 29 succs { 194 30 }
;; 30 succs { 31 38 }
;; 31 succs { 194 32 }
;; 32 succs { 194 33 }
;; 33 succs { 34 185 }
;; 34 succs { 35 36 }
;; 35 succs { 194 185 }
;; 36 succs { 194 37 }
;; 37 succs { 194 185 }
;; 38 succs { 194 39 }
;; 39 succs { 40 102 }
;; 40 succs { 194 41 }
;; 41 succs { 194 42 }
;; 42 succs { 43 59 }
;; 43 succs { 44 45 }
;; 44 succs { 194 47 }
;; 45 succs { 194 46 }
;; 46 succs { 194 47 }
;; 47 succs { 194 48 }
;; 48 succs { 49 59 }
;; 49 succs { 194 50 }
;; 50 succs { 51 54 }
;; 51 succs { 194 52 }
;; 52 succs { 53 54 }
;; 53 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 56 59 }
;; 56 succs { 194 57 }
;; 57 succs { 194 58 }
;; 58 succs { 194 59 }
;; 59 succs { 194 60 }
;; 60 succs { 61 64 }
;; 61 succs { 194 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 82 }
;; 66 succs { 194 67 }
;; 67 succs { 194 68 }
;; 68 succs { 69 185 }
;; 69 succs { 194 70 }
;; 70 succs { 71 185 }
;; 71 succs { 72 185 }
;; 72 succs { 73 185 }
;; 73 succs { 74 185 }
;; 74 succs { 75 185 }
;; 75 succs { 194 76 }
;; 76 succs { 77 185 }
;; 77 succs { 194 78 }
;; 78 succs { 79 185 }
;; 79 succs { 194 80 }
;; 80 succs { 194 81 }
;; 81 succs { 194 185 }
;; 82 succs { 194 83 }
;; 83 succs { 84 87 }
;; 84 succs { 194 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 185 }
;; 89 succs { 194 90 }
;; 90 succs { 194 91 }
;; 91 succs { 92 185 }
;; 92 succs { 194 93 }
;; 93 succs { 94 185 }
;; 94 succs { 95 185 }
;; 95 succs { 194 96 }
;; 96 succs { 97 185 }
;; 97 succs { 194 98 }
;; 98 succs { 99 185 }
;; 99 succs { 194 100 }
;; 100 succs { 194 101 }
;; 101 succs { 194 185 }
;; 102 succs { 194 103 }
;; 103 succs { 104 185 }
;; 104 succs { 194 105 }
;; 105 succs { 194 106 }
;; 106 succs { 107 125 }
;; 107 succs { 108 109 }
;; 108 succs { 194 111 }
;; 109 succs { 194 110 }
;; 110 succs { 194 111 }
;; 111 succs { 194 112 }
;; 112 succs { 113 125 }
;; 113 succs { 194 114 }
;; 114 succs { 115 125 }
;; 115 succs { 194 116 }
;; 116 succs { 117 120 }
;; 117 succs { 194 118 }
;; 118 succs { 119 120 }
;; 119 succs { 121 }
;; 120 succs { 121 }
;; 121 succs { 122 125 }
;; 122 succs { 194 123 }
;; 123 succs { 194 124 }
;; 124 succs { 194 125 }
;; 125 succs { 194 126 }
;; 126 succs { 127 130 }
;; 127 succs { 194 128 }
;; 128 succs { 129 130 }
;; 129 succs { 131 }
;; 130 succs { 131 }
;; 131 succs { 132 148 }
;; 132 succs { 194 133 }
;; 133 succs { 194 134 }
;; 134 succs { 135 185 }
;; 135 succs { 194 136 }
;; 136 succs { 137 185 }
;; 137 succs { 138 185 }
;; 138 succs { 139 185 }
;; 139 succs { 140 185 }
;; 140 succs { 141 185 }
;; 141 succs { 194 142 }
;; 142 succs { 143 185 }
;; 143 succs { 194 144 }
;; 144 succs { 145 185 }
;; 145 succs { 194 146 }
;; 146 succs { 194 147 }
;; 147 succs { 194 185 }
;; 148 succs { 194 149 }
;; 149 succs { 150 153 }
;; 150 succs { 194 151 }
;; 151 succs { 152 153 }
;; 152 succs { 154 }
;; 153 succs { 154 }
;; 154 succs { 155 185 }
;; 155 succs { 194 156 }
;; 156 succs { 194 157 }
;; 157 succs { 158 185 }
;; 158 succs { 194 159 }
;; 159 succs { 160 185 }
;; 160 succs { 161 185 }
;; 161 succs { 194 162 }
;; 162 succs { 163 185 }
;; 163 succs { 194 164 }
;; 164 succs { 165 185 }
;; 165 succs { 194 166 }
;; 166 succs { 194 167 }
;; 167 succs { 194 185 }
;; 168 succs { 169 185 }
;; 169 succs { 194 170 }
;; 170 succs { 171 176 }
;; 171 succs { 194 172 }
;; 172 succs { 194 173 }
;; 173 succs { 174 176 }
;; 174 succs { 194 175 }
;; 175 succs { 194 176 }
;; 176 succs { 194 177 }
;; 177 succs { 194 178 }
;; 178 succs { 179 185 }
;; 179 succs { 194 180 }
;; 180 succs { 181 185 }
;; 181 succs { 182 183 }
;; 182 succs { 194 185 }
;; 183 succs { 194 184 }
;; 184 succs { 194 185 }
;; 185 succs { 186 }
;; 186 succs { 28 187 }
;; 187 succs { 191 }
;; 188 succs { 189 191 }
;; 189 succs { 190 191 }
;; 190 succs { 191 }
;; 191 succs { 192 }
;; 192 succs { 13 193 }
;; 193 succs { 1 }
;; 194 succs { 195 }
;; 195 succs { }
void Prenew_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  unsigned int D.253262;
  union tree_node * D.253261;
  union tree_node * D.253260;
  int D.253259;
  union tree_node * D.253258;
  union tree_node * D.253257;
  union tree_node * D.253254;
  union tree_node * D.253253;
  int D.253252;
  union tree_node * D.253251;
  union tree_node * D.253250;
  int D.253249;
  union tree_node * D.253248;
  union tree_node * D.253247;
  union tree_node * D.253246;
  union tree_node * D.253245;
  union tree_node * D.253244;
  union tree_node * D.253243;
  union tree_node * D.253242;
  int D.253241;
  union tree_node * D.253240;
  union tree_node * D.253239;
  union tree_node * D.253238;
  union tree_node * D.253237;
  union tree_node * D.253236;
  union tree_node * D.253235;
  union tree_node * D.253234;
  union tree_node * D.253233;
  int D.253232;
  union tree_node * D.253231;
  union tree_node * D.253230;
  union tree_node * D.253229;
  union tree_node * D.253228;
  union tree_node * D.253227;
  int D.253226;
  union tree_node * D.253225;
  int D.253224;
  union tree_node * D.253223;
  union tree_node * D.253222;
  int D.253221;
  union tree_node * D.253220;
  union tree_node * D.253219;
  union tree_node * D.253218;
  union tree_node * D.253217;
  union tree_node * D.253216;
  union tree_node * D.253215;
  union tree_node * D.253214;
  int D.253213;
  union tree_node * D.253212;
  union tree_node * D.253211;
  union tree_node * D.253210;
  union tree_node * D.253209;
  union tree_node * D.253208;
  union tree_node * D.253207;
  union tree_node * D.253206;
  union tree_node * D.253205;
  int D.253204;
  union tree_node * D.253203;
  union tree_node * D.253202;
  union tree_node * D.253201;
  union tree_node * D.253200;
  union tree_node * D.253199;
  int D.253198;
  union tree_node * D.253197;
  int D.253196;
  union tree_node * D.253195;
  int D.253194;
  union tree_node * D.253193;
  union tree_node * D.253192;
  union tree_node * D.253191;
  int D.253190;
  union tree_node * D.253189;
  union tree_node * D.253188;
  struct function_assign_array * D.253187;
  union tree_node * D.253186;
  union tree_node * D.253185;
  union tree_node * D.253184;
  union tree_node * D.253183;
  union tree_node * D.253182;
  unsigned int D.253181;
  union tree_node * D.253180;
  union tree_node * D.253179;
  union tree_node * D.253178;
  union tree_node * D.253177;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  union tree_node * second;
  int i;
  struct gimple * def_stmt;
  bool retval.1288;
  bool retval.1284;
  bool retval.1282;
  bool retval.1281;
  bool retval.1280;
  bool retval.1279;
  bool retval.1278;
  bool retval.1277;
  bool retval.1276;
  bool retval.1275;
  bool retval.1274;
  bool retval.1273;
  bool retval.1272;
  bool retval.1271;
  bool iftmp.1270;
  bool retval.1269;
  bool retval.1268;
  bool retval.1267;
  bool retval.1266;
  bool retval.1265;
  bool iftmp.1264;
  bool retval.1263;
  bool iftmp.1262;
  bool retval.1261;
  bool retval.1260;
  bool retval.1259;
  bool retval.1258;
  bool retval.1257;
  bool retval.1256;
  bool retval.1255;
  bool retval.1254;
  bool retval.1253;
  bool retval.1252;
  bool iftmp.1251;
  bool retval.1250;
  bool retval.1249;
  bool retval.1248;
  bool retval.1247;
  bool retval.1246;
  bool iftmp.1245;
  bool retval.1244;
  bool iftmp.1243;
  bool retval.1242;
  bool retval.1241;
  bool retval.1240;
  bool retval.1239;
  bool retval.1238;
  bool retval.1237;
  bool retval.1236;
  bool retval.1235;
  bool retval.1234;
  struct function_assign_array D.196267;
  bool retval.1231;
  bool retval.1227;
  bool iftmp.1224;
  bool retval.1223;
  bool retval.1222;
  bool retval.1221;
  bool iftmp.1220;
  bool retval.1219;
  bool retval.1218;
  bool retval.1217;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 3> :
  _1 = gimple_code (def_stmt);
  retval.1217 = _1 == 8;
  if (retval.1217 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 4> :
  D.253177 = gimple_call_lhs (def_stmt);
  _2 = D.253177;
  retval.1218 = _2 != 0B;
  if (retval.1218 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 5> :
  D.253178 = gimple_call_lhs (def_stmt);
  _3 = D.253178;
  if (_3 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  D.253179 = gimple_call_lhs (def_stmt);
  _4 = D.253179;
  _5 = _4->base.code;
  if (_5 == 153)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1220 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1220 = 0;

  <bb 9> :
  retval.1219 = iftmp.1220;
  if (retval.1219 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 10> :
  D.253180 = gimple_assign_rhs1 (def_stmt);
  _6 = D.253180;
  retval.1221 = _6 != 0B;
  if (retval.1221 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 11> :
  D.253181 = gimple_call_num_args (def_stmt);
  _7 = D.253181;
  retval.1222 = _7 != 0;
  if (retval.1222 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 12> :
  i = 0;
  goto <bb 192>; [INV]

  <bb 13> :
  i.1225_8 = (unsigned int) i;
  D.253182 = gimple_call_arg (def_stmt, i.1225_8);
  _9 = D.253182;
  _10 = _9->base.code;
  if (_10 == 131)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  i.1226_11 = (unsigned int) i;
  D.253183 = gimple_call_arg (def_stmt, i.1226_11);
  _12 = D.253183;
  _13 = _12->base.code;
  if (_13 == 36)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1224 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1224 = 0;

  <bb 17> :
  retval.1223 = iftmp.1224;
  if (retval.1223 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 18> :
  i.1228_14 = (unsigned int) i;
  D.253184 = gimple_call_arg (def_stmt, i.1228_14);

  <bb 19> :
  _15 = D.253184;
  _16 = _15->base.code;
  retval.1227 = _16 == 131;
  if (retval.1227 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  i.1229_17 = (unsigned int) i;
  D.253185 = gimple_call_arg (def_stmt, i.1229_17);

  <bb 21> :
  _18 = D.253185;
  second = _18->exp.operands[0];
  goto <bb 24>; [INV]

  <bb 22> :
  i.1230_19 = (unsigned int) i;
  D.253186 = gimple_call_arg (def_stmt, i.1230_19);

  <bb 23> :
  second = D.253186;

  <bb 24> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1232_20 = function_assign_collect;
  D.253187 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1232_20, &getFunctionAssignVAR);

  <bb 25> :
  _21 = D.253187;
  retval.1231 = _21 != 0B;
  if (retval.1231 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 26> :
  getFunctionAssignVAR.1233_22 = getFunctionAssignVAR;
  D.196267 = ret_function_varstmt (getFunctionAssignVAR.1233_22); [return slot optimization]

  <bb 27> :
  function_assign_array::operator= (&assign_array, &D.196267);
  function_assign_array::~function_assign_array (&D.196267);
  D.196267 = {CLOBBER};
  i = 0;
  goto <bb 186>; [INV]

  <bb 28> :
  _23 = (long unsigned int) i;
  _24 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _23);
  _25 = _24->stmt;
  _26 = gimple_code (_25);
  retval.1234 = _26 == 6;
  if (retval.1234 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 29> :
  _27 = (long unsigned int) i;
  _28 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _27);
  _29 = _28->stmt;
  D.253188 = gimple_assign_lhs (_29);

  <bb 30> :
  _30 = D.253188;
  _31 = _30->base.code;
  retval.1235 = _31 == 165;
  if (retval.1235 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 31> :
  _32 = (long unsigned int) i;
  _33 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _32);
  _34 = _33->stmt;
  D.253189 = gimple_assign_lhs (_34);

  <bb 32> :
  _35 = D.253189;
  D.253190 = check_stmtStack (_35);

  <bb 33> :
  _36 = D.253190;
  retval.1236 = _36 == 0;
  if (retval.1236 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 34> :
  _37 = (long unsigned int) i;
  _38 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _37);
  _39 = _38->form_tree;
  retval.1237 = _39 != 0B;
  if (retval.1237 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _40 = (long unsigned int) i;
  _41 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _40);
  _42 = _41->form_tree;
  _43 = (long unsigned int) i;
  _44 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _43);
  _45 = _44->stmt;
  set_gimple_array (used_stmt, _45, _42, target, 0B);
  goto <bb 185>; [INV]

  <bb 36> :
  _46 = (long unsigned int) i;
  _47 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _46);
  _48 = _47->stmt;
  D.253191 = gimple_assign_lhs (_48);

  <bb 37> :
  _49 = D.253191;
  _50 = (long unsigned int) i;
  _51 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _50);
  _52 = _51->stmt;
  set_gimple_array (used_stmt, _52, _49, target, 0B);
  goto <bb 185>; [INV]

  <bb 38> :
  _53 = (long unsigned int) i;
  _54 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _53);
  _55 = _54->stmt;
  D.253192 = gimple_assign_lhs (_55);

  <bb 39> :
  _56 = D.253192;
  _57 = _56->base.code;
  retval.1238 = _57 == 153;
  if (retval.1238 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 40> :
  _58 = (long unsigned int) i;
  _59 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _58);
  _60 = _59->stmt;
  D.253193 = gimple_assign_lhs (_60);

  <bb 41> :
  _61 = D.253193;
  D.253194 = check_stmtStack (_61);

  <bb 42> :
  _62 = D.253194;
  retval.1239 = _62 == 0;
  if (retval.1239 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 43> :
  _63 = (long unsigned int) i;
  _64 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _63);
  _65 = _64->form_tree;
  retval.1240 = _65 != 0B;
  if (retval.1240 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  _66 = (long unsigned int) i;
  _67 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _66);
  _68 = _67->form_tree;
  _69 = (long unsigned int) i;
  _70 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _69);
  _71 = _70->stmt;
  set_gimple_array (used_stmt, _71, _68, target, 0B);
  goto <bb 47>; [INV]

  <bb 45> :
  _72 = (long unsigned int) i;
  _73 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _72);
  _74 = _73->stmt;
  D.253195 = gimple_assign_lhs (_74);

  <bb 46> :
  _75 = D.253195;
  _76 = (long unsigned int) i;
  _77 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _76);
  _78 = _77->stmt;
  set_gimple_array (used_stmt, _78, _75, target, 0B);

  <bb 47> :
  _79 = (long unsigned int) i;
  _80 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _79);
  _81 = _80->stmt;
  D.253196 = check_stmtStack4 (_81);

  <bb 48> :
  _82 = D.253196;
  retval.1241 = _82 == 0;
  if (retval.1241 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 49> :
  _83 = (long unsigned int) i;
  _84 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _83);
  _85 = _84->stmt;
  D.253197 = gimple_assign_lhs (_85);

  <bb 50> :
  _86 = D.253197;
  if (target2 != _86)
    goto <bb 51>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 51> :
  _87 = (long unsigned int) i;
  _88 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _87);
  _89 = _88->stmt;
  D.253198 = check_stmtStack2 (_89);

  <bb 52> :
  _90 = D.253198;
  if (_90 == 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  iftmp.1243 = 1;
  goto <bb 55>; [INV]

  <bb 54> :
  iftmp.1243 = 0;

  <bb 55> :
  retval.1242 = iftmp.1243;
  if (retval.1242 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 56> :
  _91 = (long unsigned int) i;
  _92 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _91);
  _93 = _92->stmt;
  D.253199 = gimple_assign_lhs (_93);

  <bb 57> :
  _94 = D.253199;
  _95 = (long unsigned int) i;
  _96 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _95);
  _97 = _96->stmt;
  D.253200 = gimple_assign_lhs (_97);

  <bb 58> :
  _98 = D.253200;
  new_search_imm_use (used_stmt, _98, _94);

  <bb 59> :
  _99 = (long unsigned int) i;
  _100 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _99);
  _101 = _100->stmt;
  D.253201 = gimple_assign_rhs1 (_101);

  <bb 60> :
  _102 = D.253201;
  if (_102 != 0B)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  _103 = (long unsigned int) i;
  _104 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _103);
  _105 = _104->stmt;
  D.253202 = gimple_assign_rhs1 (_105);

  <bb 62> :
  _106 = D.253202;
  _107 = _106->base.code;
  if (_107 == 47)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1245 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.1245 = 0;

  <bb 65> :
  retval.1244 = iftmp.1245;
  if (retval.1244 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 66> :
  _108 = (long unsigned int) i;
  _109 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _108);
  _110 = _109->stmt;
  D.253203 = gimple_assign_rhs1 (_110);

  <bb 67> :
  _111 = D.253203;
  D.253204 = check_stmtStack (_111);

  <bb 68> :
  _112 = D.253204;
  retval.1246 = _112 == 0;
  if (retval.1246 != 0)
    goto <bb 69>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 69> :
  _113 = (long unsigned int) i;
  _114 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _113);
  _115 = _114->stmt;
  D.253205 = gimple_assign_rhs1 (_115);

  <bb 70> :
  _116 = D.253205;
  second = _116->exp.operands[0];
  if (second != 0B)
    goto <bb 71>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 71> :
  _117 = second->base.code;
  if (_117 == 165)
    goto <bb 72>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 72> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 73>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 73> :
  _118 = three->base.code;
  if (_118 == 153)
    goto <bb 74>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 74> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1247 = is_gimple_assign (def_stmt);
  if (retval.1247 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 75> :
  D.253206 = gimple_assign_lhs (def_stmt);

  <bb 76> :
  _119 = D.253206;
  _120 = _119->base.code;
  retval.1248 = _120 == 153;
  if (retval.1248 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 77> :
  D.253207 = gimple_assign_lhs (def_stmt);

  <bb 78> :
  _121 = D.253207;
  retval.1249 = target2 != _121;
  if (retval.1249 != 0)
    goto <bb 79>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 79> :
  D.253208 = gimple_assign_lhs (def_stmt);

  <bb 80> :
  _122 = D.253208;
  D.253209 = gimple_assign_lhs (def_stmt);

  <bb 81> :
  _123 = D.253209;
  new_search_imm_use (used_stmt, _123, _122);
  goto <bb 185>; [INV]

  <bb 82> :
  _124 = (long unsigned int) i;
  _125 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _124);
  _126 = _125->stmt;
  D.253210 = gimple_assign_rhs1 (_126);

  <bb 83> :
  _127 = D.253210;
  if (_127 != 0B)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  _128 = (long unsigned int) i;
  _129 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _128);
  _130 = _129->stmt;
  D.253211 = gimple_assign_rhs1 (_130);

  <bb 85> :
  _131 = D.253211;
  _132 = _131->base.code;
  if (_132 == 165)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1251 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1251 = 0;

  <bb 88> :
  retval.1250 = iftmp.1251;
  if (retval.1250 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 89> :
  _133 = (long unsigned int) i;
  _134 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _133);
  _135 = _134->stmt;
  D.253212 = gimple_assign_rhs1 (_135);

  <bb 90> :
  _136 = D.253212;
  D.253213 = check_stmtStack (_136);

  <bb 91> :
  _137 = D.253213;
  retval.1252 = _137 == 0;
  if (retval.1252 != 0)
    goto <bb 92>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 92> :
  _138 = (long unsigned int) i;
  _139 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _138);
  _140 = _139->stmt;
  D.253214 = gimple_assign_rhs1 (_140);

  <bb 93> :
  _141 = D.253214;
  second = _141->exp.operands[0];
  _142 = second->base.code;
  if (_142 == 165)
    goto <bb 94>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 94> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1253 = is_gimple_assign (def_stmt);
  if (retval.1253 != 0)
    goto <bb 95>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 95> :
  D.253215 = gimple_assign_lhs (def_stmt);

  <bb 96> :
  _143 = D.253215;
  _144 = _143->base.code;
  retval.1254 = _144 == 153;
  if (retval.1254 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 97> :
  D.253216 = gimple_assign_lhs (def_stmt);

  <bb 98> :
  _145 = D.253216;
  retval.1255 = target2 != _145;
  if (retval.1255 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 99> :
  D.253217 = gimple_assign_lhs (def_stmt);

  <bb 100> :
  _146 = D.253217;
  D.253218 = gimple_assign_lhs (def_stmt);

  <bb 101> :
  _147 = D.253218;
  new_search_imm_use (used_stmt, _147, _146);
  goto <bb 185>; [INV]

  <bb 102> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.253219 = gimple_assign_rhs1 (_150);

  <bb 103> :
  _151 = D.253219;
  _152 = _151->base.code;
  retval.1256 = _152 == 153;
  if (retval.1256 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 104> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.253220 = gimple_assign_rhs1 (_155);

  <bb 105> :
  _156 = D.253220;
  D.253221 = check_stmtStack (_156);

  <bb 106> :
  _157 = D.253221;
  retval.1257 = _157 == 0;
  if (retval.1257 != 0)
    goto <bb 107>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 107> :
  _158 = (long unsigned int) i;
  _159 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _158);
  _160 = _159->form_tree;
  retval.1258 = _160 != 0B;
  if (retval.1258 != 0)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->form_tree;
  _164 = (long unsigned int) i;
  _165 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _164);
  _166 = _165->stmt;
  set_gimple_array (used_stmt, _166, _163, target, 0B);
  goto <bb 111>; [INV]

  <bb 109> :
  _167 = (long unsigned int) i;
  _168 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _167);
  _169 = _168->stmt;
  D.253222 = gimple_assign_rhs1 (_169);

  <bb 110> :
  _170 = D.253222;
  _171 = (long unsigned int) i;
  _172 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _171);
  _173 = _172->stmt;
  set_gimple_array (used_stmt, _173, _170, target, 0B);

  <bb 111> :
  _174 = (long unsigned int) i;
  _175 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _174);
  _176 = _175->stmt;
  D.253223 = gimple_assign_rhs1 (_176);

  <bb 112> :
  _177 = D.253223;
  retval.1259 = target2 != _177;
  if (retval.1259 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 113> :
  _178 = (long unsigned int) i;
  _179 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _178);
  _180 = _179->stmt;
  D.253224 = check_stmtStack4 (_180);

  <bb 114> :
  _181 = D.253224;
  retval.1260 = _181 == 0;
  if (retval.1260 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 115> :
  _182 = (long unsigned int) i;
  _183 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _182);
  _184 = _183->stmt;
  D.253225 = gimple_assign_rhs1 (_184);

  <bb 116> :
  _185 = D.253225;
  if (target2 != _185)
    goto <bb 117>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 117> :
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->stmt;
  D.253226 = check_stmtStack2 (_188);

  <bb 118> :
  _189 = D.253226;
  if (_189 == 0)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  iftmp.1262 = 1;
  goto <bb 121>; [INV]

  <bb 120> :
  iftmp.1262 = 0;

  <bb 121> :
  retval.1261 = iftmp.1262;
  if (retval.1261 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 122> :
  _190 = (long unsigned int) i;
  _191 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _190);
  _192 = _191->stmt;
  D.253227 = gimple_assign_rhs1 (_192);

  <bb 123> :
  _193 = D.253227;
  _194 = (long unsigned int) i;
  _195 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _194);
  _196 = _195->stmt;
  D.253228 = gimple_assign_rhs1 (_196);

  <bb 124> :
  _197 = D.253228;
  new_search_imm_use (used_stmt, _197, _193);

  <bb 125> :
  _198 = (long unsigned int) i;
  _199 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _198);
  _200 = _199->stmt;
  D.253229 = gimple_assign_lhs (_200);

  <bb 126> :
  _201 = D.253229;
  if (_201 != 0B)
    goto <bb 127>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 127> :
  _202 = (long unsigned int) i;
  _203 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _202);
  _204 = _203->stmt;
  D.253230 = gimple_assign_lhs (_204);

  <bb 128> :
  _205 = D.253230;
  _206 = _205->base.code;
  if (_206 == 47)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  iftmp.1264 = 1;
  goto <bb 131>; [INV]

  <bb 130> :
  iftmp.1264 = 0;

  <bb 131> :
  retval.1263 = iftmp.1264;
  if (retval.1263 != 0)
    goto <bb 132>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 132> :
  _207 = (long unsigned int) i;
  _208 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _207);
  _209 = _208->stmt;
  D.253231 = gimple_assign_lhs (_209);

  <bb 133> :
  _210 = D.253231;
  D.253232 = check_stmtStack (_210);

  <bb 134> :
  _211 = D.253232;
  retval.1265 = _211 == 0;
  if (retval.1265 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 135> :
  _212 = (long unsigned int) i;
  _213 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _212);
  _214 = _213->stmt;
  D.253233 = gimple_assign_lhs (_214);

  <bb 136> :
  _215 = D.253233;
  second = _215->exp.operands[0];
  if (second != 0B)
    goto <bb 137>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 137> :
  _216 = second->base.code;
  if (_216 == 165)
    goto <bb 138>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 138> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 139>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 139> :
  _217 = three->base.code;
  if (_217 == 153)
    goto <bb 140>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 140> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1266 = is_gimple_assign (def_stmt);
  if (retval.1266 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 141> :
  D.253234 = gimple_assign_lhs (def_stmt);

  <bb 142> :
  _218 = D.253234;
  _219 = _218->base.code;
  retval.1267 = _219 == 153;
  if (retval.1267 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 143> :
  D.253235 = gimple_assign_lhs (def_stmt);

  <bb 144> :
  _220 = D.253235;
  retval.1268 = target2 != _220;
  if (retval.1268 != 0)
    goto <bb 145>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 145> :
  D.253236 = gimple_assign_lhs (def_stmt);

  <bb 146> :
  _221 = D.253236;
  D.253237 = gimple_assign_lhs (def_stmt);

  <bb 147> :
  _222 = D.253237;
  new_search_imm_use (used_stmt, _222, _221);
  goto <bb 185>; [INV]

  <bb 148> :
  _223 = (long unsigned int) i;
  _224 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _223);
  _225 = _224->stmt;
  D.253238 = gimple_assign_lhs (_225);

  <bb 149> :
  _226 = D.253238;
  if (_226 != 0B)
    goto <bb 150>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 150> :
  _227 = (long unsigned int) i;
  _228 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _227);
  _229 = _228->stmt;
  D.253239 = gimple_assign_lhs (_229);

  <bb 151> :
  _230 = D.253239;
  _231 = _230->base.code;
  if (_231 == 165)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  iftmp.1270 = 1;
  goto <bb 154>; [INV]

  <bb 153> :
  iftmp.1270 = 0;

  <bb 154> :
  retval.1269 = iftmp.1270;
  if (retval.1269 != 0)
    goto <bb 155>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 155> :
  _232 = (long unsigned int) i;
  _233 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _232);
  _234 = _233->stmt;
  D.253240 = gimple_assign_lhs (_234);

  <bb 156> :
  _235 = D.253240;
  D.253241 = check_stmtStack (_235);

  <bb 157> :
  _236 = D.253241;
  retval.1271 = _236 == 0;
  if (retval.1271 != 0)
    goto <bb 158>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 158> :
  _237 = (long unsigned int) i;
  _238 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _237);
  _239 = _238->stmt;
  D.253242 = gimple_assign_lhs (_239);

  <bb 159> :
  _240 = D.253242;
  second = _240->exp.operands[0];
  _241 = second->base.code;
  if (_241 == 165)
    goto <bb 160>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 160> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1272 = is_gimple_assign (def_stmt);
  if (retval.1272 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 161> :
  D.253243 = gimple_assign_lhs (def_stmt);

  <bb 162> :
  _242 = D.253243;
  _243 = _242->base.code;
  retval.1273 = _243 == 153;
  if (retval.1273 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 163> :
  D.253244 = gimple_assign_lhs (def_stmt);

  <bb 164> :
  _244 = D.253244;
  retval.1274 = target2 != _244;
  if (retval.1274 != 0)
    goto <bb 165>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 165> :
  D.253245 = gimple_assign_lhs (def_stmt);

  <bb 166> :
  _245 = D.253245;
  D.253246 = gimple_assign_lhs (def_stmt);

  <bb 167> :
  _246 = D.253246;
  new_search_imm_use (used_stmt, _246, _245);
  goto <bb 185>; [INV]

  <bb 168> :
  _247 = (long unsigned int) i;
  _248 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _247);
  _249 = _248->stmt;
  _250 = gimple_code (_249);
  retval.1275 = _250 == 8;
  if (retval.1275 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 169> :
  _251 = (long unsigned int) i;
  _252 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _251);
  _253 = _252->stmt;
  D.253247 = gimple_call_arg (_253, 0);

  <bb 170> :
  _254 = D.253247;
  _255 = _254->base.code;
  retval.1276 = _255 == 131;
  if (retval.1276 != 0)
    goto <bb 171>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 171> :
  _256 = (long unsigned int) i;
  _257 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _256);
  _258 = _257->stmt;
  D.253248 = gimple_call_arg (_258, 0);

  <bb 172> :
  _259 = D.253248;
  D.253249 = check_stmtStack (_259);

  <bb 173> :
  _260 = D.253249;
  retval.1277 = _260 == 0;
  if (retval.1277 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 174> :
  _261 = (long unsigned int) i;
  _262 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _261);
  _263 = _262->stmt;
  D.253250 = gimple_call_arg (_263, 0);

  <bb 175> :
  _264 = D.253250;
  _265 = (long unsigned int) i;
  _266 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _265);
  _267 = _266->stmt;
  set_gimple_array (used_stmt, _267, _264, target, 0B);

  <bb 176> :
  _268 = (long unsigned int) i;
  _269 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _268);
  _270 = _269->stmt;
  D.253251 = gimple_call_arg (_270, 0);

  <bb 177> :
  _271 = D.253251;
  D.253252 = check_stmtStack (_271);

  <bb 178> :
  _272 = D.253252;
  retval.1278 = _272 == 0;
  if (retval.1278 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 179> :
  _273 = (long unsigned int) i;
  _274 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _273);
  _275 = _274->stmt;
  D.253253 = gimple_call_arg (_275, 0);

  <bb 180> :
  _276 = D.253253;
  _277 = _276->base.code;
  retval.1279 = _277 == 153;
  if (retval.1279 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 181> :
  _278 = (long unsigned int) i;
  _279 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _278);
  _280 = _279->form_tree;
  retval.1280 = _280 != 0B;
  if (retval.1280 != 0)
    goto <bb 182>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 182> :
  _281 = (long unsigned int) i;
  _282 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _281);
  _283 = _282->form_tree;
  _284 = (long unsigned int) i;
  _285 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _284);
  _286 = _285->stmt;
  set_gimple_array (used_stmt, _286, _283, target, 0B);
  goto <bb 185>; [INV]

  <bb 183> :
  _287 = (long unsigned int) i;
  _288 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _287);
  _289 = _288->stmt;
  D.253254 = gimple_call_arg (_289, 0);

  <bb 184> :
  _290 = D.253254;
  _291 = (long unsigned int) i;
  _292 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _291);
  _293 = _292->stmt;
  set_gimple_array (used_stmt, _293, _290, target, 0B);

  <bb 185> :
  i = i + 1;

  <bb 186> :
  _294 = (long unsigned int) i;
  _295 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1281 = _294 < _295;
  if (retval.1281 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 187> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  goto <bb 191>; [INV]

  <bb 188> :
  i.1283_296 = (unsigned int) i;
  D.253257 = gimple_call_arg (def_stmt, i.1283_296);
  _297 = D.253257;
  _298 = _297->base.code;
  retval.1282 = _298 == 153;
  if (retval.1282 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 189> :
  i.1285_299 = (unsigned int) i;
  D.253258 = gimple_call_arg (def_stmt, i.1285_299);
  _300 = D.253258;
  D.253259 = check_stmtStack (_300);
  _301 = D.253259;
  retval.1284 = _301 == 0;
  if (retval.1284 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 190> :
  i.1286_302 = (unsigned int) i;
  D.253260 = gimple_call_arg (def_stmt, i.1286_302);
  _303 = D.253260;
  i.1287_304 = (unsigned int) i;
  D.253261 = gimple_call_arg (def_stmt, i.1287_304);
  _305 = D.253261;
  new_search_imm_use (used_stmt, _305, _303);

  <bb 191> :
  i = i + 1;

  <bb 192> :
  D.253262 = gimple_call_num_args (def_stmt);
  _306 = D.253262;
  i.1289_307 = (unsigned int) i;
  retval.1288 = _306 > i.1289_307;
  if (retval.1288 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 193> :
  return;

  <bb 194> :
<L224>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 195> :
<L225>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 1

}



;; Function new_search_imm_use (_Z18new_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6418, decl_uid=187037, cgraph_uid=3394, symbol_order=4170)

Removing basic block 11
Removing basic block 12
Removing basic block 16
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 49
Removing basic block 50
Removing basic block 76
Removing basic block 78
Removing basic block 90
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 106
Removing basic block 108
Removing basic block 109
Removing basic block 118
Removing basic block 120
Removing basic block 121
Removing basic block 125
Removing basic block 132
Removing basic block 142
Removing basic block 143
Removing basic block 144
Removing basic block 159
Removing basic block 160
Removing basic block 161
Removing basic block 162
Removing basic block 189
Removing basic block 190
Removing basic block 191
Removing basic block 192
Removing basic block 193
Removing basic block 214
Removing basic block 215
Removing basic block 228
Removing basic block 229
Removing basic block 230
Removing basic block 231
Removing basic block 232
Removing basic block 245
Removing basic block 246
Removing basic block 256
Removing basic block 284
Removing basic block 290
Removing basic block 291
Removing basic block 304
Removing basic block 310
Removing basic block 311
Removing basic block 312
Removing basic block 321
Removing basic block 322
Removing basic block 323
Removing basic block 326
Removing basic block 328
Removing basic block 338
Removing basic block 339
Removing basic block 362
Removing basic block 363
Removing basic block 386
Removing basic block 387
Removing basic block 388
Removing basic block 389
Removing basic block 390
Removing basic block 394
Removing basic block 395
Removing basic block 396
Removing basic block 397
Removing basic block 398
Removing basic block 409
Removing basic block 410
Removing basic block 425
Removing basic block 431
Removing basic block 435
Removing basic block 436
Removing basic block 437
Removing basic block 438
Removing basic block 439
Removing basic block 441
Removing basic block 442
Removing basic block 446
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368
;;
;; Loop 2
;;  header 325, latch 324
;;  depth 1, outer 0
;;  nodes: 325 324 311 323 313 318 320 315 314 319 317 316 312 322 321 310 326
;;
;; Loop 1
;;  header 269, latch 268
;;  depth 1, outer 0
;;  nodes: 269 268 249 260 267 242 252 235 259 262 265 264 263 261 258 257 254 256 255 253 234 233 232 230 231 227 229 228 226 225 251 250 241 240 237 239 238 236 266 247 248 244 246 245 243
;; 2 succs { 4 3 }
;; 3 succs { 4 363 }
;; 4 succs { 5 7 }
;; 5 succs { 368 6 }
;; 6 succs { 208 }
;; 7 succs { 8 11 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 22 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 364 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 363 }
;; 19 succs { 362 }
;; 20 succs { 368 21 }
;; 21 succs { 22 360 }
;; 22 succs { 368 23 }
;; 23 succs { 24 36 }
;; 24 succs { 25 36 }
;; 25 succs { 368 26 }
;; 26 succs { 27 36 }
;; 27 succs { 368 28 }
;; 28 succs { 29 31 }
;; 29 succs { 30 31 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 36 }
;; 33 succs { 368 34 }
;; 34 succs { 35 36 }
;; 35 succs { 368 36 }
;; 36 succs { 37 41 }
;; 37 succs { 368 38 }
;; 38 succs { 368 39 }
;; 39 succs { 40 360 }
;; 40 succs { 368 360 }
;; 41 succs { 42 133 }
;; 42 succs { 368 43 }
;; 43 succs { 368 44 }
;; 44 succs { 368 45 }
;; 45 succs { 368 46 }
;; 46 succs { 47 92 }
;; 47 succs { 48 92 }
;; 48 succs { 368 49 }
;; 49 succs { 50 79 }
;; 50 succs { 368 51 }
;; 51 succs { 52 56 }
;; 52 succs { 368 53 }
;; 53 succs { 368 54 }
;; 54 succs { 55 56 }
;; 55 succs { 57 }
;; 56 succs { 57 }
;; 57 succs { 58 67 }
;; 58 succs { 368 59 }
;; 59 succs { 60 63 }
;; 60 succs { 368 61 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 368 66 }
;; 66 succs { 368 91 }
;; 67 succs { 68 91 }
;; 68 succs { 69 91 }
;; 69 succs { 368 70 }
;; 70 succs { 71 91 }
;; 71 succs { 72 75 }
;; 72 succs { 368 73 }
;; 73 succs { 74 75 }
;; 74 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 77 78 }
;; 77 succs { 368 78 }
;; 78 succs { 368 91 }
;; 79 succs { 80 91 }
;; 80 succs { 81 91 }
;; 81 succs { 368 82 }
;; 82 succs { 83 91 }
;; 83 succs { 84 87 }
;; 84 succs { 368 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 90 }
;; 89 succs { 368 90 }
;; 90 succs { 368 91 }
;; 91 succs { 100 }
;; 92 succs { 93 100 }
;; 93 succs { 94 100 }
;; 94 succs { 368 95 }
;; 95 succs { 96 100 }
;; 96 succs { 368 97 }
;; 97 succs { 98 99 }
;; 98 succs { 368 99 }
;; 99 succs { 368 100 }
;; 100 succs { 368 101 }
;; 101 succs { 102 103 }
;; 102 succs { 368 103 }
;; 103 succs { 368 104 }
;; 104 succs { 105 110 }
;; 105 succs { 106 110 }
;; 106 succs { 368 107 }
;; 107 succs { 108 109 }
;; 108 succs { 368 109 }
;; 109 succs { 132 }
;; 110 succs { 111 119 }
;; 111 succs { 112 119 }
;; 112 succs { 113 118 }
;; 113 succs { 368 114 }
;; 114 succs { 115 118 }
;; 115 succs { 368 116 }
;; 116 succs { 117 118 }
;; 117 succs { 368 118 }
;; 118 succs { 132 }
;; 119 succs { 120 132 }
;; 120 succs { 121 132 }
;; 121 succs { 122 132 }
;; 122 succs { 368 123 }
;; 123 succs { 126 124 }
;; 124 succs { 368 125 }
;; 125 succs { 126 127 }
;; 126 succs { 128 }
;; 127 succs { 128 }
;; 128 succs { 129 132 }
;; 129 succs { 368 130 }
;; 130 succs { 131 132 }
;; 131 succs { 368 132 }
;; 132 succs { 360 }
;; 133 succs { 134 158 }
;; 134 succs { 368 135 }
;; 135 succs { 136 139 }
;; 136 succs { 368 137 }
;; 137 succs { 138 139 }
;; 138 succs { 140 }
;; 139 succs { 140 }
;; 140 succs { 141 360 }
;; 141 succs { 368 142 }
;; 142 succs { 143 360 }
;; 143 succs { 368 144 }
;; 144 succs { 368 145 }
;; 145 succs { 146 149 }
;; 146 succs { 368 147 }
;; 147 succs { 148 149 }
;; 148 succs { 150 }
;; 149 succs { 150 }
;; 150 succs { 151 360 }
;; 151 succs { 368 152 }
;; 152 succs { 368 153 }
;; 153 succs { 368 154 }
;; 154 succs { 155 360 }
;; 155 succs { 368 156 }
;; 156 succs { 368 157 }
;; 157 succs { 368 360 }
;; 158 succs { 159 360 }
;; 159 succs { 368 160 }
;; 160 succs { 161 162 }
;; 161 succs { 364 }
;; 162 succs { 368 163 }
;; 163 succs { 368 164 }
;; 164 succs { 165 360 }
;; 165 succs { 166 190 }
;; 166 succs { 368 167 }
;; 167 succs { 168 359 }
;; 168 succs { 368 169 }
;; 169 succs { 368 170 }
;; 170 succs { 171 178 }
;; 171 succs { 368 172 }
;; 172 succs { 368 173 }
;; 173 succs { 368 174 }
;; 174 succs { 175 359 }
;; 175 succs { 368 176 }
;; 176 succs { 368 177 }
;; 177 succs { 368 359 }
;; 178 succs { 368 179 }
;; 179 succs { 180 359 }
;; 180 succs { 368 181 }
;; 181 succs { 368 182 }
;; 182 succs { 183 359 }
;; 183 succs { 368 184 }
;; 184 succs { 368 185 }
;; 185 succs { 368 186 }
;; 186 succs { 187 359 }
;; 187 succs { 368 188 }
;; 188 succs { 368 189 }
;; 189 succs { 368 359 }
;; 190 succs { 192 191 }
;; 191 succs { 192 203 }
;; 192 succs { 368 193 }
;; 193 succs { 368 194 }
;; 194 succs { 195 202 }
;; 195 succs { 368 196 }
;; 196 succs { 368 197 }
;; 197 succs { 368 198 }
;; 198 succs { 199 202 }
;; 199 succs { 368 200 }
;; 200 succs { 368 201 }
;; 201 succs { 368 202 }
;; 202 succs { 359 }
;; 203 succs { 205 204 }
;; 204 succs { 205 281 }
;; 205 succs { 368 206 }
;; 206 succs { 368 207 }
;; 207 succs { 208 280 }
;; 208 succs { 209 211 }
;; 209 succs { 210 211 }
;; 210 succs { 211 }
;; 211 succs { 368 212 }
;; 212 succs { 213 215 }
;; 213 succs { 368 214 }
;; 214 succs { 219 }
;; 215 succs { 368 216 }
;; 216 succs { 217 219 }
;; 217 succs { 368 218 }
;; 218 succs { 219 }
;; 219 succs { 220 271 }
;; 220 succs { 221 271 }
;; 221 succs { 366 222 }
;; 222 succs { 223 270 }
;; 223 succs { 366 224 }
;; 224 succs { 269 }
;; 225 succs { 226 260 }
;; 226 succs { 366 227 }
;; 227 succs { 228 231 }
;; 228 succs { 366 229 }
;; 229 succs { 230 231 }
;; 230 succs { 232 }
;; 231 succs { 232 }
;; 232 succs { 233 243 }
;; 233 succs { 366 234 }
;; 234 succs { 366 235 }
;; 235 succs { 236 268 }
;; 236 succs { 237 238 }
;; 237 succs { 366 240 }
;; 238 succs { 366 239 }
;; 239 succs { 366 240 }
;; 240 succs { 366 241 }
;; 241 succs { 366 242 }
;; 242 succs { 366 268 }
;; 243 succs { 366 244 }
;; 244 succs { 245 248 }
;; 245 succs { 366 246 }
;; 246 succs { 247 248 }
;; 247 succs { 249 }
;; 248 succs { 249 }
;; 249 succs { 250 268 }
;; 250 succs { 366 251 }
;; 251 succs { 366 252 }
;; 252 succs { 253 268 }
;; 253 succs { 254 255 }
;; 254 succs { 366 257 }
;; 255 succs { 366 256 }
;; 256 succs { 366 257 }
;; 257 succs { 366 258 }
;; 258 succs { 366 259 }
;; 259 succs { 366 268 }
;; 260 succs { 261 268 }
;; 261 succs { 366 262 }
;; 262 succs { 263 268 }
;; 263 succs { 366 264 }
;; 264 succs { 366 265 }
;; 265 succs { 266 268 }
;; 266 succs { 366 267 }
;; 267 succs { 366 268 }
;; 268 succs { 269 }
;; 269 succs { 225 270 }
;; 270 succs { 271 }
;; 271 succs { 272 273 }
;; 272 succs { 364 }
;; 273 succs { 368 274 }
;; 274 succs { 368 275 }
;; 275 succs { 368 276 }
;; 276 succs { 277 280 }
;; 277 succs { 368 278 }
;; 278 succs { 368 279 }
;; 279 succs { 368 280 }
;; 280 succs { 359 }
;; 281 succs { 368 282 }
;; 282 succs { 283 288 }
;; 283 succs { 368 284 }
;; 284 succs { 285 288 }
;; 285 succs { 368 286 }
;; 286 succs { 287 288 }
;; 287 succs { 289 }
;; 288 succs { 289 }
;; 289 succs { 290 327 }
;; 290 succs { 368 291 }
;; 291 succs { 368 292 }
;; 292 succs { 293 359 }
;; 293 succs { 368 294 }
;; 294 succs { 368 295 }
;; 295 succs { 368 296 }
;; 296 succs { 297 302 }
;; 297 succs { 368 298 }
;; 298 succs { 299 302 }
;; 299 succs { 368 300 }
;; 300 succs { 368 301 }
;; 301 succs { 368 302 }
;; 302 succs { 368 303 }
;; 303 succs { 304 359 }
;; 304 succs { 368 305 }
;; 305 succs { 368 306 }
;; 306 succs { 307 359 }
;; 307 succs { 368 308 }
;; 308 succs { 309 359 }
;; 309 succs { 325 }
;; 310 succs { 368 311 }
;; 311 succs { 312 324 }
;; 312 succs { 368 313 }
;; 313 succs { 314 324 }
;; 314 succs { 368 315 }
;; 315 succs { 316 324 }
;; 316 succs { 368 317 }
;; 317 succs { 368 318 }
;; 318 succs { 319 324 }
;; 319 succs { 368 320 }
;; 320 succs { 321 324 }
;; 321 succs { 368 322 }
;; 322 succs { 368 323 }
;; 323 succs { 368 324 }
;; 324 succs { 325 }
;; 325 succs { 368 326 }
;; 326 succs { 310 359 }
;; 327 succs { 368 328 }
;; 328 succs { 368 329 }
;; 329 succs { 330 337 }
;; 330 succs { 368 331 }
;; 331 succs { 368 332 }
;; 332 succs { 368 333 }
;; 333 succs { 334 337 }
;; 334 succs { 368 335 }
;; 335 succs { 368 336 }
;; 336 succs { 368 337 }
;; 337 succs { 368 338 }
;; 338 succs { 339 359 }
;; 339 succs { 368 340 }
;; 340 succs { 368 341 }
;; 341 succs { 342 359 }
;; 342 succs { 368 343 }
;; 343 succs { 344 359 }
;; 344 succs { 368 345 }
;; 345 succs { 368 346 }
;; 346 succs { 368 347 }
;; 347 succs { 348 351 }
;; 348 succs { 368 349 }
;; 349 succs { 368 350 }
;; 350 succs { 368 351 }
;; 351 succs { 368 352 }
;; 352 succs { 353 359 }
;; 353 succs { 368 354 }
;; 354 succs { 355 356 }
;; 355 succs { 368 359 }
;; 356 succs { 368 357 }
;; 357 succs { 358 359 }
;; 358 succs { 368 359 }
;; 359 succs { 360 }
;; 360 succs { 368 361 }
;; 361 succs { 362 }
;; 362 succs { 20 363 }
;; 363 succs { 365 }
;; 364 succs { 365 }
;; 365 succs { 1 }
;; 366 succs { 367 }
;; 367 succs { 368 }
;; 368 succs { }
void new_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  struct ssa_use_operand_t * D.253843;
  union tree_node * D.253842;
  union tree_node * D.253841;
  union tree_node * D.253840;
  union tree_node * D.253839;
  union tree_node * D.253838;
  union tree_node * D.253837;
  union tree_node * D.253836;
  union tree_node * D.253835;
  int D.253834;
  union tree_node * D.253833;
  union tree_node * D.253832;
  union tree_node * D.253831;
  union tree_node * D.253830;
  union tree_node * D.253829;
  union tree_node * D.253828;
  int D.253827;
  union tree_node * D.253826;
  unsigned int D.253825;
  union tree_node * D.253824;
  union tree_node * D.253823;
  union tree_node * D.253822;
  int D.253821;
  union tree_node * D.253820;
  union tree_node * D.253819;
  union tree_node * D.253818;
  union tree_node * D.253817;
  unsigned int D.253816;
  int D.253815;
  union tree_node * D.253814;
  union tree_node * D.253813;
  union tree_node * D.253812;
  union tree_node * D.253811;
  int D.253810;
  union tree_node * D.253809;
  union tree_node * D.253808;
  int D.253807;
  union tree_node * D.253806;
  union tree_node * D.253805;
  union tree_node * D.253804;
  union tree_node * D.253803;
  union tree_node * D.253802;
  union tree_node * D.253801;
  union tree_node * D.253800;
  union tree_node * D.253799;
  union tree_node * D.253796;
  int D.253795;
  union tree_node * D.253794;
  union tree_node * D.253793;
  union tree_node * D.253792;
  union tree_node * D.253791;
  union tree_node * D.253790;
  int D.253789;
  union tree_node * D.253788;
  union tree_node * D.253787;
  union tree_node * D.253786;
  union tree_node * D.253785;
  union tree_node * D.253784;
  union tree_node * D.253783;
  int D.253782;
  union tree_node * D.253781;
  union tree_node * D.253780;
  union tree_node * D.253779;
  struct function_assign_array * D.253778;
  union tree_node * D.253777;
  union tree_node * D.253776;
  union tree_node * D.253775;
  union tree_node * D.253774;
  int D.253773;
  union tree_node * D.253772;
  union tree_node * D.253771;
  union tree_node * D.253770;
  union tree_node * D.253769;
  union tree_node * D.253768;
  int D.253767;
  union tree_node * D.253766;
  union tree_node * D.253765;
  union tree_node * D.253764;
  union tree_node * D.253763;
  union tree_node * D.253762;
  int D.253761;
  union tree_node * D.253760;
  union tree_node * D.253759;
  union tree_node * D.253758;
  union tree_node * D.253757;
  union tree_node * D.253756;
  union tree_node * D.253755;
  int D.253754;
  union tree_node * D.253753;
  union tree_node * D.253752;
  const char * D.253751;
  union tree_node * D.253750;
  union tree_node * D.253749;
  union tree_node * D.253748;
  union tree_node * D.253747;
  union tree_node * D.253746;
  union tree_node * D.253745;
  int D.253744;
  int D.253743;
  union tree_node * D.253742;
  union tree_node * D.253741;
  union tree_node * D.253740;
  union tree_node * D.253739;
  int D.253738;
  int D.253737;
  int D.253736;
  int D.253735;
  int D.253734;
  int D.253733;
  int D.253732;
  int D.253731;
  int D.253730;
  int D.253729;
  int D.253728;
  int D.253727;
  union tree_node * D.253726;
  int D.253725;
  union tree_node * D.253724;
  union tree_node * D.253723;
  union tree_node * D.253722;
  union tree_node * D.253721;
  union tree_node * D.253720;
  int D.253719;
  struct greturn * D.253718;
  int D.253717;
  const struct gcond * D.253716;
  union tree_node * D.253715;
  tree_code D.253714;
  int D.253713;
  struct gimple * def_stmt;
  int i;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  int isVardecl;
  union tree_node * second;
  union tree_node * fundecl;
  union tree_node * gimpleassignrhs;
  union tree_node * gimpleassignlhs;
  int ssa_name_assign;
  union tree_node * return_tree;
  const struct gcond * gc;
  const struct ssa_use_operand_t * const head;
  int has_single_use_flag;
  int var_declsuperjump;
  int size;
  struct gimple * def_stmt;
  const char * name;
  struct gimple * gc;
  struct gimple * use_stmt;
  struct ssa_use_operand_t * use_p;
  struct imm_use_iterator imm_iter;
  bool retval.1392;
  bool retval.1391;
  bool retval.1390;
  bool retval.1389;
  bool retval.1388;
  bool retval.1387;
  bool retval.1386;
  bool retval.1385;
  bool retval.1384;
  bool retval.1383;
  bool retval.1381;
  bool retval.1377;
  bool retval.1375;
  bool retval.1373;
  bool retval.1371;
  bool retval.1369;
  bool retval.1368;
  bool retval.1367;
  bool retval.1366;
  bool retval.1365;
  bool retval.1364;
  bool retval.1363;
  bool iftmp.1362;
  bool retval.1361;
  bool retval.1360;
  bool retval.1359;
  bool retval.1358;
  bool retval.1357;
  bool retval.1356;
  bool retval.1355;
  bool retval.1354;
  bool iftmp.1353;
  bool retval.1352;
  bool retval.1351;
  bool retval.1350;
  bool iftmp.1349;
  bool retval.1348;
  bool retval.1347;
  struct function_assign_array D.196347;
  bool retval.1344;
  bool retval.1343;
  bool retval.1342;
  bool retval.1341;
  bool retval.1340;
  bool retval.1339;
  bool retval.1338;
  bool retval.1337;
  bool retval.1336;
  bool retval.1335;
  bool retval.1334;
  bool retval.1333;
  bool retval.1332;
  bool retval.1331;
  bool retval.1330;
  bool iftmp.1329;
  bool retval.1328;
  bool retval.1327;
  bool iftmp.1326;
  bool retval.1325;
  bool retval.1324;
  bool iftmp.1323;
  bool retval.1322;
  bool retval.1321;
  bool retval.1320;
  bool retval.1319;
  bool retval.1318;
  bool iftmp.1317;
  bool retval.1316;
  bool retval.1315;
  bool iftmp.1314;
  bool retval.1313;
  bool retval.1312;
  bool iftmp.1311;
  bool retval.1310;
  bool iftmp.1309;
  bool retval.1308;
  bool retval.1307;
  bool retval.1306;
  bool retval.1305;
  bool retval.1304;
  bool retval.1303;
  bool iftmp.1302;
  bool retval.1301;
  bool retval.1300;
  bool retval.1299;
  bool retval.1298;
  bool retval.1297;
  bool iftmp.1296;
  bool retval.1295;
  bool retval.1292;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  size = 8;
  var_declsuperjump = 0;
  has_single_use_flag = 0;
  levelsize.1290_1 = levelsize;
  _2 = levelsize.1290_1 + 1;
  levelsize = _2;
  _3 = target->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _4 = target->base.code;
  if (_4 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 4> :
  head = &target->ssa_name.imm_uses;
  _5 = target->base.code;
  if (_5 == 131)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  stderr.1291_6 = stderr;
  __builtin_fwrite ("GIMPLE CODE :var_declsuperjump-------\n", 1, 38, stderr.1291_6);

  <bb 6> :
  var_declsuperjump = 1;
  // predicted unlikely by goto predictor.
  goto <bb 208>; [INV]

  <bb 7> :
  _7 = head->next;
  _8 = _7->loc.stmt;
  if (_8 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _9 = num_imm_uses (target);
  retval.1292 = _9 == 1;
  if (retval.1292 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  has_single_use_flag = 1;
  if (target != target2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _10 = head->next;
  use_stmt = _10->loc.stmt;
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 11> :
  levelsize.1293_11 = levelsize;
  if (levelsize.1293_11 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  now_tree.1294_12 = now_tree;
  if (target == now_tree.1294_12)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 364>; [INV]

  <bb 14> :
  _13 = num_imm_uses (target);
  if (_13 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = head->next;
  if (_14 != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1296 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1296 = 0;

  <bb 18> :
  retval.1295 = iftmp.1296;
  if (retval.1295 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 19> :
  use_p = first_readonly_imm_use (&imm_iter, target);
  goto <bb 362>; [INV]

  <bb 20> :
  use_stmt = use_p->loc.stmt;
  D.253713 = check_stmtStack4 (use_stmt);

  <bb 21> :
  _15 = D.253713;
  retval.1297 = _15 == 0;
  if (retval.1297 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 22> :
has_single_use_jump:
  D.253714 = gimple_cond_code (use_stmt);

  <bb 23> :
  _16 = D.253714;
  retval.1298 = _16 != 0;
  if (retval.1298 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 24> :
  _17 = is_gimple_assign (use_stmt);
  retval.1299 = ~_17;
  if (retval.1299 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 25> :
  D.253715 = gimple_cond_lhs (use_stmt);

  <bb 26> :
  _18 = D.253715;
  retval.1300 = _18 != 0B;
  if (retval.1300 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 27> :
  D.253716 = GIMPLE_CHECK2<const gcond*> (use_stmt);

  <bb 28> :
  gc = D.253716;
  _19 = gimple_cond_rhs (gc);
  if (_19 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 29> :
  _20 = gimple_cond_lhs (gc);
  if (_20 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  iftmp.1302 = 1;
  goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1302 = 0;

  <bb 32> :
  retval.1301 = iftmp.1302;
  if (retval.1301 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 33> :
  _21 = gimple_cond_rhs (gc);
  D.253717 = check_stmtStack (_21);

  <bb 34> :
  _22 = D.253717;
  retval.1303 = _22 == 0;
  if (retval.1303 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _23 = gimple_cond_lhs (gc);
  set_gimple_array (used_stmt, use_stmt, _23, target, 0B);

  <bb 36> :
  _24 = gimple_code (use_stmt);
  retval.1304 = _24 == 10;
  if (retval.1304 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  D.253718 = as_a<greturn*, gimple> (use_stmt);

  <bb 38> :
  _25 = D.253718;
  return_tree = gimple_return_retval (_25);
  D.253719 = check_stmtStack (return_tree);

  <bb 39> :
  _26 = D.253719;
  retval.1305 = _26 == 0;
  if (retval.1305 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 40> :
  set_gimple_array (used_stmt, use_stmt, return_tree, return_tree, 0B);
  goto <bb 360>; [INV]

  <bb 41> :
  _27 = gimple_code (use_stmt);
  retval.1306 = _27 == 6;
  if (retval.1306 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 42> :
  ssa_name_assign = 0;
  D.253720 = gimple_assign_lhs (use_stmt);

  <bb 43> :
  _28 = D.253720;
  D.253721 = prechecktree (_28);

  <bb 44> :
  gimpleassignlhs = D.253721;
  D.253722 = gimple_assign_rhs1 (use_stmt);

  <bb 45> :
  _29 = D.253722;
  D.253723 = prechecktree (_29);

  <bb 46> :
  gimpleassignrhs = D.253723;
  if (gimpleassignlhs != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 47> :
  _30 = gimpleassignlhs->base.code;
  if (_30 == 153)
    goto <bb 48>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 48> :
  D.253724 = gimple_call_fn (use_stmt);

  <bb 49> :
  _31 = D.253724;
  retval.1307 = _31 != 0B;
  if (retval.1307 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 50> :
  D.253725 = check_stmtStack (gimpleassignlhs);

  <bb 51> :
  _32 = D.253725;
  if (_32 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 52> :
  D.253726 = gimple_call_fn (use_stmt);

  <bb 53> :
  _33 = D.253726;
  D.253727 = check_stmtStack (_33);

  <bb 54> :
  _34 = D.253727;
  if (_34 == 0)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  iftmp.1309 = 1;
  goto <bb 57>; [INV]

  <bb 56> :
  iftmp.1309 = 0;

  <bb 57> :
  retval.1308 = iftmp.1309;
  if (retval.1308 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 58> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 59> :
  ssa_name_assign = 1;
  if (gimpleassignlhs != target2)
    goto <bb 60>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 60> :
  D.253728 = check_stmtStack2 (use_stmt);

  <bb 61> :
  _35 = D.253728;
  if (_35 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  iftmp.1311 = 1;
  goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1311 = 0;

  <bb 64> :
  retval.1310 = iftmp.1311;
  if (retval.1310 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 66> :
  Checknew_search_imm_use_lhs (used_stmt, use_stmt, target, target2);
  goto <bb 91>; [INV]

  <bb 67> :
  if (gimpleassignrhs != 0B)
    goto <bb 68>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 68> :
  _36 = gimpleassignrhs->base.code;
  if (_36 == 153)
    goto <bb 69>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 69> :
  D.253729 = check_stmtStack (gimpleassignrhs);

  <bb 70> :
  _37 = D.253729;
  retval.1312 = _37 == 0;
  if (retval.1312 != 0)
    goto <bb 71>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 71> :
  if (gimpleassignrhs != target2)
    goto <bb 72>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 72> :
  D.253730 = check_stmtStack2 (use_stmt);

  <bb 73> :
  _38 = D.253730;
  if (_38 == 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  iftmp.1314 = 1;
  goto <bb 76>; [INV]

  <bb 75> :
  iftmp.1314 = 0;

  <bb 76> :
  retval.1313 = iftmp.1314;
  if (retval.1313 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 78> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);
  goto <bb 91>; [INV]

  <bb 79> :
  if (gimpleassignlhs != 0B)
    goto <bb 80>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 80> :
  _39 = gimpleassignlhs->base.code;
  if (_39 == 153)
    goto <bb 81>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 81> :
  D.253731 = check_stmtStack (gimpleassignlhs);

  <bb 82> :
  _40 = D.253731;
  retval.1315 = _40 == 0;
  if (retval.1315 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 83> :
  if (gimpleassignlhs != target2)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  D.253732 = check_stmtStack2 (use_stmt);

  <bb 85> :
  _41 = D.253732;
  if (_41 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1317 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1317 = 0;

  <bb 88> :
  retval.1316 = iftmp.1317;
  if (retval.1316 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 89> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 90> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 91> :
  goto <bb 100>; [INV]

  <bb 92> :
  if (gimpleassignrhs != 0B)
    goto <bb 93>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 93> :
  _42 = gimpleassignrhs->base.code;
  if (_42 == 153)
    goto <bb 94>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 94> :
  D.253733 = check_stmtStack (gimpleassignrhs);

  <bb 95> :
  _43 = D.253733;
  retval.1318 = _43 == 0;
  if (retval.1318 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 96> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 97> :
  if (gimpleassignrhs != target2)
    goto <bb 98>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 98> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 99> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 100> :
  D.253734 = check_stmtStack (target);

  <bb 101> :
  _44 = D.253734;
  retval.1319 = _44 == 0;
  if (retval.1319 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 102> :
  set_gimple_array (used_stmt, use_stmt, target, target2, 0B);

  <bb 103> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 104> :
  if (gimpleassignlhs != 0B)
    goto <bb 105>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 105> :
  _45 = gimpleassignlhs->base.code;
  if (_45 == 165)
    goto <bb 106>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 106> :
  fundecl = gimpleassignlhs->exp.operands[0];
  D.253735 = check_stmtStack (gimpleassignlhs);

  <bb 107> :
  _46 = D.253735;
  retval.1320 = _46 == 0;
  if (retval.1320 != 0)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 109> :
  goto <bb 132>; [INV]

  <bb 110> :
  if (gimpleassignlhs != 0B)
    goto <bb 111>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 111> :
  _47 = gimpleassignlhs->base.code;
  if (_47 == 47)
    goto <bb 112>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 112> :
  _48 = gimpleassignrhs->base.code;
  if (_48 == 153)
    goto <bb 113>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 113> :
  D.253736 = check_stmtStack (gimpleassignrhs);

  <bb 114> :
  _49 = D.253736;
  retval.1321 = _49 == 0;
  if (retval.1321 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 115> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 116> :
  if (gimpleassignrhs != target2)
    goto <bb 117>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 117> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 118> :
  goto <bb 132>; [INV]

  <bb 119> :
  if (gimpleassignrhs != 0B)
    goto <bb 120>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 120> :
  _50 = gimpleassignrhs->base.code;
  if (_50 == 47)
    goto <bb 121>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 121> :
  _51 = gimpleassignlhs->base.code;
  if (_51 == 153)
    goto <bb 122>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 122> :
  D.253737 = check_stmtStack (gimpleassignlhs);

  <bb 123> :
  _52 = D.253737;
  if (_52 == 0)
    goto <bb 126>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 124> :
  D.253738 = check_stmtStack2 (use_stmt);

  <bb 125> :
  _53 = D.253738;
  if (_53 == 0)
    goto <bb 126>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 126> :
  iftmp.1323 = 1;
  goto <bb 128>; [INV]

  <bb 127> :
  iftmp.1323 = 0;

  <bb 128> :
  retval.1322 = iftmp.1323;
  if (retval.1322 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 129> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 130> :
  if (gimpleassignlhs != target2)
    goto <bb 131>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 131> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 132> :
  goto <bb 360>; [INV]

  <bb 133> :
  _54 = gimple_code (use_stmt);
  retval.1324 = _54 == 18;
  if (retval.1324 != 0)
    goto <bb 134>; [INV]
  else
    goto <bb 158>; [INV]

  <bb 134> :
  D.253739 = gimple_phi_result (use_stmt);

  <bb 135> :
  _55 = D.253739;
  if (_55 != 0B)
    goto <bb 136>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 136> :
  D.253740 = gimple_phi_result (use_stmt);

  <bb 137> :
  _56 = D.253740;
  _57 = _56->base.code;
  if (_57 == 153)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  iftmp.1326 = 1;
  goto <bb 140>; [INV]

  <bb 139> :
  iftmp.1326 = 0;

  <bb 140> :
  retval.1325 = iftmp.1326;
  if (retval.1325 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 141> :
  D.253741 = gimple_phi_result (use_stmt);

  <bb 142> :
  _58 = D.253741;
  _59 = _58->base.code;
  retval.1327 = _59 == 153;
  if (retval.1327 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 143> :
  D.253742 = gimple_phi_result (use_stmt);

  <bb 144> :
  _60 = D.253742;
  D.253743 = check_stmtStack (_60);

  <bb 145> :
  _61 = D.253743;
  if (_61 == 0)
    goto <bb 146>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 146> :
  D.253744 = check_stmtStack2 (use_stmt);

  <bb 147> :
  _62 = D.253744;
  if (_62 == 0)
    goto <bb 148>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 148> :
  iftmp.1329 = 1;
  goto <bb 150>; [INV]

  <bb 149> :
  iftmp.1329 = 0;

  <bb 150> :
  retval.1328 = iftmp.1329;
  if (retval.1328 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 151> :
  D.253745 = gimple_phi_result (use_stmt);

  <bb 152> :
  _63 = D.253745;
  set_gimple_array (used_stmt, use_stmt, _63, target, 0B);

  <bb 153> :
  D.253746 = gimple_phi_result (use_stmt);

  <bb 154> :
  _64 = D.253746;
  retval.1330 = target2 != _64;
  if (retval.1330 != 0)
    goto <bb 155>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 155> :
  D.253747 = gimple_phi_result (use_stmt);

  <bb 156> :
  _65 = D.253747;
  D.253748 = gimple_phi_result (use_stmt);

  <bb 157> :
  _66 = D.253748;
  new_search_imm_use (used_stmt, _66, _65);
  goto <bb 360>; [INV]

  <bb 158> :
  _67 = gimple_code (use_stmt);
  retval.1331 = _67 == 8;
  if (retval.1331 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 159> :
  D.253749 = gimple_call_fn (use_stmt);

  <bb 160> :
  _68 = D.253749;
  retval.1332 = _68 == 0B;
  if (retval.1332 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 161> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 364>; [INV]

  <bb 162> :
  D.253750 = gimple_call_fn (use_stmt);

  <bb 163> :
  _69 = D.253750;
  D.253751 = get_name (_69);

  <bb 164> :
  name = D.253751;
  if (name != 0B)
    goto <bb 165>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 165> :
  _70 = strcmp (name, "realloc");
  if (_70 == 0)
    goto <bb 166>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 166> :
  D.253752 = gimple_call_lhs (use_stmt);

  <bb 167> :
  _71 = D.253752;
  retval.1333 = _71 != 0B;
  if (retval.1333 != 0)
    goto <bb 168>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 168> :
  D.253753 = gimple_call_lhs (use_stmt);

  <bb 169> :
  _72 = D.253753;
  D.253754 = check_stmtStack (_72);

  <bb 170> :
  _73 = D.253754;
  retval.1334 = _73 == 0;
  if (retval.1334 != 0)
    goto <bb 171>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 171> :
  D.253755 = gimple_call_lhs (use_stmt);

  <bb 172> :
  _74 = D.253755;
  set_gimple_array (used_stmt, use_stmt, _74, target, 0B);

  <bb 173> :
  D.253756 = gimple_call_lhs (use_stmt);

  <bb 174> :
  _75 = D.253756;
  _76 = _75->base.code;
  retval.1335 = _76 == 153;
  if (retval.1335 != 0)
    goto <bb 175>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 175> :
  D.253757 = gimple_call_lhs (use_stmt);

  <bb 176> :
  _77 = D.253757;
  D.253758 = gimple_call_lhs (use_stmt);

  <bb 177> :
  _78 = D.253758;
  new_search_imm_use (used_stmt, _78, _77);
  goto <bb 359>; [INV]

  <bb 178> :
  D.253759 = gimple_call_fn (use_stmt);

  <bb 179> :
  _79 = D.253759;
  retval.1336 = _79 != 0B;
  if (retval.1336 != 0)
    goto <bb 180>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 180> :
  D.253760 = gimple_call_arg (use_stmt, 0);

  <bb 181> :
  _80 = D.253760;
  D.253761 = check_stmtStack (_80);

  <bb 182> :
  _81 = D.253761;
  retval.1337 = _81 == 0;
  if (retval.1337 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 183> :
  D.253762 = gimple_call_arg (use_stmt, 0);

  <bb 184> :
  _82 = D.253762;
  set_gimple_array (used_stmt, use_stmt, _82, target, 0B);

  <bb 185> :
  D.253763 = gimple_call_arg (use_stmt, 0);

  <bb 186> :
  _83 = D.253763;
  _84 = _83->base.code;
  retval.1338 = _84 == 153;
  if (retval.1338 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 187> :
  D.253764 = gimple_call_arg (use_stmt, 0);

  <bb 188> :
  _85 = D.253764;
  D.253765 = gimple_call_arg (use_stmt, 0);

  <bb 189> :
  _86 = D.253765;
  new_search_imm_use (used_stmt, _86, _85);
  goto <bb 359>; [INV]

  <bb 190> :
  _87 = strcmp (name, "free");
  if (_87 == 0)
    goto <bb 192>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 191> :
  _88 = strcmp (name, "xfree");
  if (_88 == 0)
    goto <bb 192>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 192> :
  D.253766 = gimple_call_fn (use_stmt);

  <bb 193> :
  _89 = D.253766;
  D.253767 = check_stmtStack (_89);

  <bb 194> :
  _90 = D.253767;
  retval.1339 = _90 == 0;
  if (retval.1339 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 195> :
  D.253768 = gimple_call_fn (use_stmt);

  <bb 196> :
  _91 = D.253768;
  set_gimple_array (used_stmt, use_stmt, _91, target, 0B);

  <bb 197> :
  D.253769 = gimple_call_fn (use_stmt);

  <bb 198> :
  _92 = D.253769;
  _93 = _92->base.code;
  retval.1340 = _93 == 153;
  if (retval.1340 != 0)
    goto <bb 199>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 199> :
  D.253770 = gimple_call_fn (use_stmt);

  <bb 200> :
  _94 = D.253770;
  D.253771 = gimple_call_fn (use_stmt);

  <bb 201> :
  _95 = D.253771;
  new_search_imm_use (used_stmt, _95, _94);

  <bb 202> :
  goto <bb 359>; [INV]

  <bb 203> :
  _96 = strcmp (name, "pthread_create");
  if (_96 == 0)
    goto <bb 205>; [INV]
  else
    goto <bb 204>; [INV]

  <bb 204> :
  _97 = strcmp (name, "pthread_join");
  if (_97 == 0)
    goto <bb 205>; [INV]
  else
    goto <bb 281>; [INV]

  <bb 205> :
  D.253772 = gimple_call_fn (use_stmt);

  <bb 206> :
  _98 = D.253772;
  D.253773 = check_stmtStack (_98);

  <bb 207> :
  _99 = D.253773;
  retval.1341 = _99 == 0;
  if (retval.1341 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 280>; [INV]

  <bb 208> :
has_single_use_addr_expr_jump:
  second = 0B;
  isVardecl = 0;
  if (var_declsuperjump == 1)
    goto <bb 209>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 209> :
  _100 = target->base.code;
  if (_100 == 131)
    goto <bb 210>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 210> :
  second = target->exp.operands[0];
  target = target;
  isVardecl = 1;

  <bb 211> :
  D.253774 = gimple_assign_rhs1 (def_stmt);

  <bb 212> :
  _101 = D.253774;
  _102 = _101->base.code;
  retval.1342 = _102 == 131;
  if (retval.1342 != 0)
    goto <bb 213>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 213> :
  D.253775 = gimple_assign_rhs1 (def_stmt);

  <bb 214> :
  _103 = D.253775;
  second = _103->exp.operands[0];
  second = second->exp.operands[0];
  isVardecl = 1;
  goto <bb 219>; [INV]

  <bb 215> :
  D.253776 = gimple_assign_rhs1 (def_stmt);

  <bb 216> :
  _104 = D.253776;
  _105 = _104->base.code;
  retval.1343 = _105 == 36;
  if (retval.1343 != 0)
    goto <bb 217>; [INV]
  else
    goto <bb 219>; [INV]

  <bb 217> :
  D.253777 = gimple_assign_rhs1 (def_stmt);

  <bb 218> :
  second = D.253777;
  isVardecl = 1;

  <bb 219> :
  if (second != 0B)
    goto <bb 220>; [INV]
  else
    goto <bb 271>; [INV]

  <bb 220> :
  _106 = second->base.code;
  if (_106 == 36)
    goto <bb 221>; [INV]
  else
    goto <bb 271>; [INV]

  <bb 221> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1345_107 = function_assign_collect;
  D.253778 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1345_107, &getFunctionAssignVAR);

  <bb 222> :
  _108 = D.253778;
  retval.1344 = _108 != 0B;
  if (retval.1344 != 0)
    goto <bb 223>; [INV]
  else
    goto <bb 270>; [INV]

  <bb 223> :
  getFunctionAssignVAR.1346_109 = getFunctionAssignVAR;
  D.196347 = ret_function_varstmt (getFunctionAssignVAR.1346_109); [return slot optimization]

  <bb 224> :
  function_assign_array::operator= (&assign_array, &D.196347);
  function_assign_array::~function_assign_array (&D.196347);
  D.196347 = {CLOBBER};
  i = 0;
  goto <bb 269>; [INV]

  <bb 225> :
  _110 = (long unsigned int) i;
  _111 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _110);
  _112 = _111->stmt;
  _113 = gimple_code (_112);
  retval.1347 = _113 == 6;
  if (retval.1347 != 0)
    goto <bb 226>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 226> :
  _114 = (long unsigned int) i;
  _115 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _114);
  _116 = _115->stmt;
  D.253779 = gimple_assign_lhs (_116);

  <bb 227> :
  _117 = D.253779;
  if (target != _117)
    goto <bb 228>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 228> :
  _118 = (long unsigned int) i;
  _119 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _118);
  _120 = _119->stmt;
  D.253780 = gimple_assign_lhs (_120);

  <bb 229> :
  _121 = D.253780;
  _122 = _121->base.code;
  if (_122 == 153)
    goto <bb 230>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 230> :
  iftmp.1349 = 1;
  goto <bb 232>; [INV]

  <bb 231> :
  iftmp.1349 = 0;

  <bb 232> :
  retval.1348 = iftmp.1349;
  if (retval.1348 != 0)
    goto <bb 233>; [INV]
  else
    goto <bb 243>; [INV]

  <bb 233> :
  _123 = (long unsigned int) i;
  _124 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _123);
  _125 = _124->stmt;
  D.253781 = gimple_assign_lhs (_125);

  <bb 234> :
  _126 = D.253781;
  D.253782 = check_stmtStack (_126);

  <bb 235> :
  _127 = D.253782;
  retval.1350 = _127 == 0;
  if (retval.1350 != 0)
    goto <bb 236>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 236> :
  _128 = (long unsigned int) i;
  _129 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _128);
  _130 = _129->form_tree;
  retval.1351 = _130 != 0B;
  if (retval.1351 != 0)
    goto <bb 237>; [INV]
  else
    goto <bb 238>; [INV]

  <bb 237> :
  _131 = (long unsigned int) i;
  _132 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _131);
  _133 = _132->form_tree;
  _134 = (long unsigned int) i;
  _135 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _134);
  _136 = _135->stmt;
  set_gimple_array (used_stmt, _136, _133, target, 0B);
  goto <bb 240>; [INV]

  <bb 238> :
  _137 = (long unsigned int) i;
  _138 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _137);
  _139 = _138->stmt;
  D.253783 = gimple_assign_lhs (_139);

  <bb 239> :
  _140 = D.253783;
  _141 = (long unsigned int) i;
  _142 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _141);
  _143 = _142->stmt;
  set_gimple_array (used_stmt, _143, _140, target, 0B);

  <bb 240> :
  _144 = (long unsigned int) i;
  _145 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _144);
  _146 = _145->stmt;
  D.253784 = gimple_assign_lhs (_146);

  <bb 241> :
  _147 = D.253784;
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.253785 = gimple_assign_lhs (_150);

  <bb 242> :
  _151 = D.253785;
  new_search_imm_use (used_stmt, _151, _147);
  goto <bb 268>; [INV]

  <bb 243> :
  _152 = (long unsigned int) i;
  _153 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _152);
  _154 = _153->stmt;
  D.253786 = gimple_assign_rhs1 (_154);

  <bb 244> :
  _155 = D.253786;
  if (target != _155)
    goto <bb 245>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 245> :
  _156 = (long unsigned int) i;
  _157 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _156);
  _158 = _157->stmt;
  D.253787 = gimple_assign_rhs1 (_158);

  <bb 246> :
  _159 = D.253787;
  _160 = _159->base.code;
  if (_160 == 153)
    goto <bb 247>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 247> :
  iftmp.1353 = 1;
  goto <bb 249>; [INV]

  <bb 248> :
  iftmp.1353 = 0;

  <bb 249> :
  retval.1352 = iftmp.1353;
  if (retval.1352 != 0)
    goto <bb 250>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 250> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->stmt;
  D.253788 = gimple_assign_rhs1 (_163);

  <bb 251> :
  _164 = D.253788;
  D.253789 = check_stmtStack (_164);

  <bb 252> :
  _165 = D.253789;
  retval.1354 = _165 == 0;
  if (retval.1354 != 0)
    goto <bb 253>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 253> :
  _166 = (long unsigned int) i;
  _167 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _166);
  _168 = _167->form_tree;
  retval.1355 = _168 != 0B;
  if (retval.1355 != 0)
    goto <bb 254>; [INV]
  else
    goto <bb 255>; [INV]

  <bb 254> :
  _169 = (long unsigned int) i;
  _170 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _169);
  _171 = _170->form_tree;
  _172 = (long unsigned int) i;
  _173 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _172);
  _174 = _173->stmt;
  set_gimple_array (used_stmt, _174, _171, target, 0B);
  goto <bb 257>; [INV]

  <bb 255> :
  _175 = (long unsigned int) i;
  _176 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _175);
  _177 = _176->stmt;
  D.253790 = gimple_assign_rhs1 (_177);

  <bb 256> :
  _178 = D.253790;
  _179 = (long unsigned int) i;
  _180 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _179);
  _181 = _180->stmt;
  set_gimple_array (used_stmt, _181, _178, target, 0B);

  <bb 257> :
  _182 = (long unsigned int) i;
  _183 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _182);
  _184 = _183->stmt;
  D.253791 = gimple_assign_rhs1 (_184);

  <bb 258> :
  _185 = D.253791;
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->stmt;
  D.253792 = gimple_assign_rhs1 (_188);

  <bb 259> :
  _189 = D.253792;
  new_search_imm_use (used_stmt, _189, _185);
  goto <bb 268>; [INV]

  <bb 260> :
  _190 = (long unsigned int) i;
  _191 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _190);
  _192 = _191->stmt;
  _193 = gimple_code (_192);
  retval.1356 = _193 == 8;
  if (retval.1356 != 0)
    goto <bb 261>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 261> :
  _194 = (long unsigned int) i;
  _195 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _194);
  _196 = _195->stmt;
  D.253793 = gimple_call_arg (_196, 0);

  <bb 262> :
  _197 = D.253793;
  _198 = _197->base.code;
  retval.1357 = _198 == 131;
  if (retval.1357 != 0)
    goto <bb 263>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 263> :
  _199 = (long unsigned int) i;
  _200 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _199);
  _201 = _200->stmt;
  D.253794 = gimple_call_arg (_201, 0);

  <bb 264> :
  _202 = D.253794;
  D.253795 = check_stmtStack (_202);

  <bb 265> :
  _203 = D.253795;
  retval.1358 = _203 == 0;
  if (retval.1358 != 0)
    goto <bb 266>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 266> :
  _204 = (long unsigned int) i;
  _205 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _204);
  _206 = _205->stmt;
  D.253796 = gimple_call_arg (_206, 0);

  <bb 267> :
  _207 = D.253796;
  _208 = (long unsigned int) i;
  _209 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _208);
  _210 = _209->stmt;
  set_gimple_array (used_stmt, _210, _207, target, 0B);

  <bb 268> :
  i = i + 1;

  <bb 269> :
  _211 = (long unsigned int) i;
  _212 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1359 = _211 < _212;
  if (retval.1359 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 270>; [INV]

  <bb 270> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};

  <bb 271> :
  if (var_declsuperjump == 1)
    goto <bb 272>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 272> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 364>; [INV]

  <bb 273> :
  D.253799 = gimple_call_fn (use_stmt);

  <bb 274> :
  _213 = D.253799;
  set_gimple_array (used_stmt, use_stmt, _213, target, 0B);

  <bb 275> :
  D.253800 = gimple_call_fn (use_stmt);

  <bb 276> :
  _214 = D.253800;
  _215 = _214->base.code;
  retval.1360 = _215 == 153;
  if (retval.1360 != 0)
    goto <bb 277>; [INV]
  else
    goto <bb 280>; [INV]

  <bb 277> :
  D.253801 = gimple_call_fn (use_stmt);

  <bb 278> :
  _216 = D.253801;
  D.253802 = gimple_call_fn (use_stmt);

  <bb 279> :
  _217 = D.253802;
  new_search_imm_use (used_stmt, _217, _216);

  <bb 280> :
  goto <bb 359>; [INV]

  <bb 281> :
  D.253803 = gimple_call_fn (use_stmt);

  <bb 282> :
  _218 = D.253803;
  if (_218 != 0B)
    goto <bb 283>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 283> :
  D.253804 = gimple_call_lhs (use_stmt);

  <bb 284> :
  _219 = D.253804;
  if (_219 != 0B)
    goto <bb 285>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 285> :
  D.253805 = gimple_call_lhs (use_stmt);

  <bb 286> :
  _220 = D.253805;
  _221 = _220->base.code;
  if (_221 == 153)
    goto <bb 287>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 287> :
  iftmp.1362 = 1;
  goto <bb 289>; [INV]

  <bb 288> :
  iftmp.1362 = 0;

  <bb 289> :
  retval.1361 = iftmp.1362;
  if (retval.1361 != 0)
    goto <bb 290>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 290> :
  D.253806 = gimple_call_lhs (use_stmt);

  <bb 291> :
  _222 = D.253806;
  D.253807 = check_stmtStack (_222);

  <bb 292> :
  _223 = D.253807;
  retval.1363 = _223 == 0;
  if (retval.1363 != 0)
    goto <bb 293>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 293> :
  D.253808 = gimple_call_lhs (use_stmt);

  <bb 294> :
  _224 = D.253808;
  set_gimple_array (used_stmt, use_stmt, _224, target, 0B);

  <bb 295> :
  D.253809 = gimple_call_lhs (use_stmt);

  <bb 296> :
  _225 = D.253809;
  retval.1364 = target2 != _225;
  if (retval.1364 != 0)
    goto <bb 297>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 297> :
  D.253810 = check_stmtStack2 (use_stmt);

  <bb 298> :
  _226 = D.253810;
  retval.1365 = _226 == 0;
  if (retval.1365 != 0)
    goto <bb 299>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 299> :
  D.253811 = gimple_call_lhs (use_stmt);

  <bb 300> :
  _227 = D.253811;
  D.253812 = gimple_call_lhs (use_stmt);

  <bb 301> :
  _228 = D.253812;
  new_search_imm_use (used_stmt, _228, _227);

  <bb 302> :
  D.253813 = gimple_call_fn (use_stmt);

  <bb 303> :
  _229 = D.253813;
  retval.1366 = _229 != 0B;
  if (retval.1366 != 0)
    goto <bb 304>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 304> :
  D.253814 = gimple_call_fn (use_stmt);

  <bb 305> :
  _230 = D.253814;
  D.253815 = check_stmtStack (_230);

  <bb 306> :
  _231 = D.253815;
  retval.1367 = _231 == 0;
  if (retval.1367 != 0)
    goto <bb 307>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 307> :
  D.253816 = gimple_call_num_args (use_stmt);

  <bb 308> :
  _232 = D.253816;
  retval.1368 = _232 != 0;
  if (retval.1368 != 0)
    goto <bb 309>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 309> :
  i = 0;
  goto <bb 325>; [INV]

  <bb 310> :
  i.1370_233 = (unsigned int) i;
  D.253817 = gimple_call_arg (use_stmt, i.1370_233);

  <bb 311> :
  _234 = D.253817;
  retval.1369 = _234 != 0B;
  if (retval.1369 != 0)
    goto <bb 312>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 312> :
  i.1372_235 = (unsigned int) i;
  D.253818 = gimple_call_arg (use_stmt, i.1372_235);

  <bb 313> :
  _236 = D.253818;
  retval.1371 = target2 != _236;
  if (retval.1371 != 0)
    goto <bb 314>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 314> :
  i.1374_237 = (unsigned int) i;
  D.253819 = gimple_call_arg (use_stmt, i.1374_237);

  <bb 315> :
  _238 = D.253819;
  _239 = _238->base.code;
  retval.1373 = _239 == 153;
  if (retval.1373 != 0)
    goto <bb 316>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 316> :
  i.1376_240 = (unsigned int) i;
  D.253820 = gimple_call_arg (use_stmt, i.1376_240);

  <bb 317> :
  _241 = D.253820;
  D.253821 = check_stmtStack (_241);

  <bb 318> :
  _242 = D.253821;
  retval.1375 = _242 == 0;
  if (retval.1375 != 0)
    goto <bb 319>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 319> :
  i.1378_243 = (unsigned int) i;
  D.253822 = gimple_call_arg (use_stmt, i.1378_243);

  <bb 320> :
  _244 = D.253822;
  retval.1377 = target2 != _244;
  if (retval.1377 != 0)
    goto <bb 321>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 321> :
  i.1379_245 = (unsigned int) i;
  D.253823 = gimple_call_arg (use_stmt, i.1379_245);

  <bb 322> :
  _246 = D.253823;
  i.1380_247 = (unsigned int) i;
  D.253824 = gimple_call_arg (use_stmt, i.1380_247);

  <bb 323> :
  _248 = D.253824;
  new_search_imm_use (used_stmt, _248, _246);

  <bb 324> :
  i = i + 1;

  <bb 325> :
  D.253825 = gimple_call_num_args (use_stmt);

  <bb 326> :
  _249 = D.253825;
  i.1382_250 = (unsigned int) i;
  retval.1381 = _249 > i.1382_250;
  if (retval.1381 != 0)
    goto <bb 310>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 327> :
  D.253826 = gimple_call_fn (use_stmt);

  <bb 328> :
  _251 = D.253826;
  D.253827 = check_stmtStack (_251);

  <bb 329> :
  _252 = D.253827;
  retval.1383 = _252 == 0;
  if (retval.1383 != 0)
    goto <bb 330>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 330> :
  D.253828 = gimple_call_fn (use_stmt);

  <bb 331> :
  _253 = D.253828;
  set_gimple_array (used_stmt, use_stmt, _253, target, 0B);

  <bb 332> :
  D.253829 = gimple_call_fn (use_stmt);

  <bb 333> :
  _254 = D.253829;
  _255 = _254->base.code;
  retval.1384 = _255 == 153;
  if (retval.1384 != 0)
    goto <bb 334>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 334> :
  D.253830 = gimple_call_fn (use_stmt);

  <bb 335> :
  _256 = D.253830;
  D.253831 = gimple_call_fn (use_stmt);

  <bb 336> :
  _257 = D.253831;
  new_search_imm_use (used_stmt, _257, _256);

  <bb 337> :
  D.253832 = gimple_call_arg (use_stmt, 0);

  <bb 338> :
  _258 = D.253832;
  retval.1385 = _258 != 0B;
  if (retval.1385 != 0)
    goto <bb 339>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 339> :
  D.253833 = gimple_call_arg (use_stmt, 0);

  <bb 340> :
  _259 = D.253833;
  D.253834 = check_stmtStack (_259);

  <bb 341> :
  _260 = D.253834;
  retval.1386 = _260 == 0;
  if (retval.1386 != 0)
    goto <bb 342>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 342> :
  D.253835 = gimple_call_arg (use_stmt, 0);

  <bb 343> :
  _261 = D.253835;
  _262 = _261->base.code;
  retval.1387 = _262 == 153;
  if (retval.1387 != 0)
    goto <bb 344>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 344> :
  D.253836 = gimple_call_arg (use_stmt, 0);

  <bb 345> :
  _263 = D.253836;
  debug_tree (_263);

  <bb 346> :
  D.253837 = gimple_call_arg (use_stmt, 0);

  <bb 347> :
  _264 = D.253837;
  _265 = _264->base.code;
  retval.1388 = _265 == 153;
  if (retval.1388 != 0)
    goto <bb 348>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 348> :
  D.253838 = gimple_call_arg (use_stmt, 0);

  <bb 349> :
  _266 = D.253838;
  D.253839 = gimple_call_arg (use_stmt, 0);

  <bb 350> :
  _267 = D.253839;
  new_search_imm_use (used_stmt, _267, _266);

  <bb 351> :
  D.253840 = gimple_call_arg (use_stmt, 0);

  <bb 352> :
  _268 = D.253840;
  def_stmt = _268->ssa_name.def_stmt;
  retval.1389 = is_gimple_assign (def_stmt);
  if (retval.1389 != 0)
    goto <bb 353>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 353> :
  D.253841 = gimple_assign_lhs (def_stmt);

  <bb 354> :
  _269 = D.253841;
  _270 = _269->base.code;
  retval.1390 = _270 == 36;
  if (retval.1390 != 0)
    goto <bb 355>; [INV]
  else
    goto <bb 356>; [INV]

  <bb 355> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 359>; [INV]

  <bb 356> :
  D.253842 = gimple_assign_rhs1 (def_stmt);

  <bb 357> :
  _271 = D.253842;
  _272 = _271->base.code;
  retval.1391 = _272 == 36;
  if (retval.1391 != 0)
    goto <bb 358>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 358> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);

  <bb 359> :

  <bb 360> :
  D.253843 = next_readonly_imm_use (&imm_iter);

  <bb 361> :
  use_p = D.253843;

  <bb 362> :
  _273 = end_readonly_imm_use_p (&imm_iter);
  retval.1392 = ~_273;
  if (retval.1392 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 363> :
  imm_iter = {CLOBBER};
  goto <bb 365>; [INV]

  <bb 364> :
  imm_iter = {CLOBBER};

  <bb 365> :
<L373>:
  return;

  <bb 366> :
<L374>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 367> :
<L375>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 2

  <bb 368> :
<L376>:
  imm_iter = {CLOBBER};
  resx 1

}



;; Function num_imm_uses (_ZL12num_imm_usesPK9tree_node, funcdef_no=2993, decl_uid=109485, cgraph_uid=2095, symbol_order=2260)

Removing basic block 8
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5
;;
;; Loop 1
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 13 14 11 12 9 10
;; 2 succs { 3 8 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 4 17 }
;; 8 succs { 16 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 9 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
unsigned int num_imm_uses (const union tree_node * var)
{
  unsigned int num;
  const struct ssa_use_operand_t * ptr;
  const struct ssa_use_operand_t * const start;
  unsigned int D.253862;
  bool iftmp.1394;
  bool retval.1393;

  <bb 2> :
  start = &var->ssa_name.imm_uses;
  num = 0;
  _1 = global_options.x_flag_var_tracking_assignments;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  ptr = start->next;
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = ptr->loc.stmt;
  if (_2 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  num = num + 1;

  <bb 6> :
  ptr = ptr->next;

  <bb 7> :
  if (ptr != start)
    goto <bb 4>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  ptr = start->next;
  goto <bb 16>; [INV]

  <bb 9> :
  _3 = ptr->loc.stmt;
  if (_3 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _4 = ptr->loc.stmt;
  _5 = is_gimple_debug (_4);
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.1394 = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.1394 = 0;

  <bb 13> :
  retval.1393 = iftmp.1394;
  if (retval.1393 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  num = num + 1;

  <bb 15> :
  ptr = ptr->next;

  <bb 16> :
  if (ptr != start)
    goto <bb 9>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  D.253862 = num;

  <bb 18> :
<L19>:
  return D.253862;

}



;; Function is_gimple_debug (_ZL15is_gimple_debugPK6gimple, funcdef_no=2297, decl_uid=93567, cgraph_uid=1434, symbol_order=1594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_debug (const struct gimple * gs)
{
  bool D.253864;

  <bb 2> :
  _1 = gimple_code (gs);
  D.253864 = _1 == 2;

  <bb 3> :
<L0>:
  return D.253864;

}



;; Function first_readonly_imm_use (_ZL22first_readonly_imm_useP16imm_use_iteratorP9tree_node, funcdef_no=2988, decl_uid=109451, cgraph_uid=2090, symbol_order=2255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct ssa_use_operand_t * first_readonly_imm_use (struct imm_use_iterator * imm, union tree_node * var)
{
  struct ssa_use_operand_t * D.253869;
  bool retval.1395;

  <bb 2> :
  _1 = &var->ssa_name.imm_uses;
  imm->end_p = _1;
  _2 = imm->end_p;
  _3 = _2->next;
  imm->imm_use = _3;
  _4 = imm->imm_use;
  _5 = _4->next;
  imm->iter_node.next = _5;
  retval.1395 = end_readonly_imm_use_p (imm);
  if (retval.1395 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253869 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.253869 = imm->imm_use;

  <bb 5> :
<L2>:
  return D.253869;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK6gimple, funcdef_no=2174, decl_uid=93048, cgraph_uid=1311, symbol_order=1471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gimple * gs)
{
  const struct gcond * D.253873;
  const struct gcond * gc;
  tree_code D.253871;

  <bb 2> :
  D.253873 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.253873;
  D.253871 = gimple_cond_code (gc);

  <bb 3> :
<L0>:
  return D.253871;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_PK6gimple, funcdef_no=7048, decl_uid=93051, cgraph_uid=3680, symbol_order=4462)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (const struct gimple * gs)
{
  const struct gcond * D.253876;
  const struct gcond * D.253874;

  <bb 2> :
  D.253876 = as_a<const gcond*, const gimple> (gs);
  D.253874 = D.253876;

  <bb 3> :
<L0>:
  return D.253874;

}



;; Function as_a<const gcond*, const gimple> (_Z4as_aIPK5gcondK6gimpleET_PT0_, funcdef_no=8038, decl_uid=205877, cgraph_uid=4670, symbol_order=5455)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, const gimple> (const struct gimple * p)
{
  const struct gcond * D.253879;
  const struct gcond * D.253877;

  <bb 2> :
  D.253879 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.253877 = D.253879;

  <bb 3> :
<L0>:
  return D.253877;

}



;; Function is_a_helper<const gcond*>::cast<gimple> (_ZN11is_a_helperIPK5gcondE4castI6gimpleEES2_PKT_, funcdef_no=8042, decl_uid=205895, cgraph_uid=4674, symbol_order=5459)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * is_a_helper<const gcond*>::cast<gimple> (const struct gimple * p)
{
  const struct gcond * D.253880;

  <bb 2> :
  D.253880 = reinterpret_is_a_helper<gcond*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.253880;

}



;; Function reinterpret_is_a_helper<gcond*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcondE4castI6gimpleEES1_PT_, funcdef_no=8997, decl_uid=218033, cgraph_uid=5629, symbol_order=6418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcond * reinterpret_is_a_helper<gcond*>::cast<gimple> (struct gimple * p)
{
  struct gcond * D.253882;

  <bb 2> :
  D.253882 = p;

  <bb 3> :
<L0>:
  return D.253882;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK5gcond, funcdef_no=2173, decl_uid=93045, cgraph_uid=1310, symbol_order=1470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gcond * gs)
{
  tree_code D.253884;

  <bb 2> :
  _1 = gs->D.90458.D.90144.D.90137.subcode;
  D.253884 = (tree_code) _1;

  <bb 3> :
<L0>:
  return D.253884;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK6gimple, funcdef_no=2177, decl_uid=93063, cgraph_uid=1314, symbol_order=1474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gimple * gs)
{
  const struct gcond * D.253888;
  const struct gcond * gc;
  union tree_node * D.253886;

  <bb 2> :
  D.253888 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.253888;
  D.253886 = gimple_cond_lhs (gc);

  <bb 3> :
<L0>:
  return D.253886;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_P6gimple, funcdef_no=7762, decl_uid=93053, cgraph_uid=4394, symbol_order=5179)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (struct gimple * gs)
{
  const struct gcond * D.253891;
  const struct gcond * D.253889;

  <bb 2> :
  D.253891 = as_a<const gcond*, gimple> (gs);
  D.253889 = D.253891;

  <bb 3> :
<L0>:
  return D.253889;

}



;; Function as_a<const gcond*, gimple> (_Z4as_aIPK5gcond6gimpleET_PT0_, funcdef_no=8705, decl_uid=213873, cgraph_uid=5337, symbol_order=6126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, gimple> (struct gimple * p)
{
  const struct gcond * D.253894;
  const struct gcond * D.253892;

  <bb 2> :
  D.253894 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.253892 = D.253894;

  <bb 3> :
<L0>:
  return D.253892;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK5gcond, funcdef_no=2180, decl_uid=93074, cgraph_uid=1317, symbol_order=1477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gcond * gs)
{
  union tree_node * D.253895;

  <bb 2> :
  D.253895 = gs->D.90458.op[1];

  <bb 3> :
<L0>:
  return D.253895;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK5gcond, funcdef_no=2176, decl_uid=93060, cgraph_uid=1313, symbol_order=1473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gcond * gs)
{
  union tree_node * D.253897;

  <bb 2> :
  D.253897 = gs->D.90458.op[0];

  <bb 3> :
<L0>:
  return D.253897;

}



;; Function next_readonly_imm_use (_ZL21next_readonly_imm_useP16imm_use_iterator, funcdef_no=2989, decl_uid=109454, cgraph_uid=2091, symbol_order=2256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct ssa_use_operand_t * next_readonly_imm_use (struct imm_use_iterator * imm)
{
  static const char __FUNCTION__[22] [value-expr: "next_readonly_imm_use"];
  struct ssa_use_operand_t * old;
  struct ssa_use_operand_t * D.253907;
  bool retval.1396;

  <bb 2> :
  old = imm->imm_use;
  _1 = global_options.x_flag_checking;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = imm->iter_node.next;
  _3 = old->next;
  if (_2 != _3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/ssa-iterators.h", 374, "next_readonly_imm_use");

  <bb 5> :
  _4 = old->next;
  _5 = _4->next;
  imm->iter_node.next = _5;

  <bb 6> :
  _6 = old->next;
  imm->imm_use = _6;
  retval.1396 = end_readonly_imm_use_p (imm);
  if (retval.1396 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.253907 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  D.253907 = imm->imm_use;

  <bb 9> :
<L7>:
  return D.253907;

}



;; Function end_readonly_imm_use_p (_ZL22end_readonly_imm_use_pPK16imm_use_iterator, funcdef_no=2987, decl_uid=109447, cgraph_uid=2089, symbol_order=2254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool end_readonly_imm_use_p (const struct imm_use_iterator * imm)
{
  bool D.253909;

  <bb 2> :
  _1 = imm->imm_use;
  _2 = imm->end_p;
  D.253909 = _1 == _2;

  <bb 3> :
<L0>:
  return D.253909;

}



;; Function check_bbStack (_Z13check_bbStackP15basic_block_def, funcdef_no=6419, decl_uid=196364, cgraph_uid=3395, symbol_order=4171)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_bbStack (struct basic_block_def * target)
{
  int o;
  int size;
  int D.253914;
  bool retval.1397;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::size (&new_path_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&new_path_array, _4);
  _6 = *_5;
  target.1398_7 = target;
  retval.1397 = _6 == target.1398_7;
  if (retval.1397 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253914 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1399_8 = totalsize;
  _9 = size + totalsize.1399_8;
  totalsize = _9;
  std::vector<basic_block_def*>::push_back (&new_path_array, &target);
  D.253914 = 0;

  <bb 8> :
<L5>:
  return D.253914;

}



;; Function std::vector<basic_block_def*>::size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE4sizeEv, funcdef_no=7763, decl_uid=169933, cgraph_uid=4395, symbol_order=5180)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::size (const struct vector * const this)
{
  size_type D.253916;

  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_finish;
  _2 = this->D.170300._M_impl.D.169645._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.253916 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253916;

}



;; Function std::vector<basic_block_def*>::operator[] (_ZNSt6vectorIP15basic_block_defSaIS1_EEixEm, funcdef_no=7764, decl_uid=169953, cgraph_uid=4396, symbol_order=5181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * & std::vector<basic_block_def*>::operator[] (struct vector * const this, size_type __n)
{
  struct basic_block_def * & D.253918;

  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_start;
  _2 = __n * 8;
  D.253918 = _1 + _2;

  <bb 3> :
<L0>:
  return D.253918;

}



;; Function std::vector<basic_block_def*>::push_back (_ZNSt6vectorIP15basic_block_defSaIS1_EE9push_backERKS1_, funcdef_no=7765, decl_uid=169980, cgraph_uid=4398, symbol_order=5183)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<basic_block_def*>::push_back (struct vector * const this, struct basic_block_def * const & __x)
{
  struct __normal_iterator D.253923;

  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_finish;
  _2 = this->D.170300._M_impl.D.169645._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.170300._M_impl.D.169645._M_finish;
  _4 = &this->D.170300._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_4, _3, __x);
  _5 = this->D.170300._M_impl.D.169645._M_finish;
  _6 = _5 + 8;
  this->D.170300._M_impl.D.169645._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253923 = std::vector<basic_block_def*>::end (this);
  std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (this, D.253923, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_ZNSt16allocator_traitsISaIP15basic_block_defEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8706, decl_uid=213880, cgraph_uid=5338, symbol_order=6127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (struct allocator_type & __a, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<basic_block_def* const&> (_ZSt7forwardIRKP15basic_block_defEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9522, decl_uid=226193, cgraph_uid=6154, symbol_order=6943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * const & std::forward<basic_block_def* const&> (struct basic_block_def * const & __t)
{
  struct basic_block_def * const & D.253924;

  <bb 2> :
  D.253924 = __t;

  <bb 3> :
<L0>:
  return D.253924;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9523, decl_uid=226195, cgraph_uid=6155, symbol_order=6944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (struct new_allocator * const this, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  void * D.235385;
  void * D.235384;
  struct basic_block_def * D.235386;

  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  D.235386 = *_1;
  D.235384 = __p;
  D.235385 = operator new (8, D.235384);
  MEM[(struct basic_block_def * *)D.235385] = D.235386;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=8707, decl_uid=169913, cgraph_uid=5339, symbol_order=6128)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::end (struct vector * const this)
{
  struct iterator D.226218;
  struct iterator D.253926;

  <bb 2> :
  _1 = &this->D.170300._M_impl.D.169645._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.226218, _1);
  D.253926 = D.226218;
  D.226218 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253926;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9525, decl_uid=214127, cgraph_uid=6157, symbol_order=6946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (_ZNSt6vectorIP15basic_block_defSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8708, decl_uid=214146, cgraph_uid=5343, symbol_order=6132)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (struct vector * const this, struct iterator __position, struct basic_block_def * const & __args#0)
{
  struct basic_block_def * * D.253933;
  const size_type D.253932;
  struct basic_block_def * * __new_finish;
  struct basic_block_def * * __new_start;
  const size_type __elems_before;
  struct basic_block_def * * __old_finish;
  struct basic_block_def * * __old_start;
  const size_type __len;
  struct iterator D.226226;

  <bb 2> :
  D.253932 = std::vector<basic_block_def*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253932;
  __old_start = this->D.170300._M_impl.D.169645._M_start;
  __old_finish = this->D.170300._M_impl.D.169645._M_finish;
  D.226226 = std::vector<basic_block_def*>::begin (this);
  _1 = __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (&__position, &D.226226);
  __elems_before = (const size_type) _1;
  D.226226 = {CLOBBER};
  _2 = &this->D.170300;
  D.253933 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_2, __len);
  __new_start = D.253933;
  __new_finish = __new_start;
  _3 = std::forward<basic_block_def* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.170300._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.170300;
  _8 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.170300;
  _12 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.170300;
  _23 = this->D.170300._M_impl.D.169645._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_22, __old_start, _26);
  this->D.170300._M_impl.D.169645._M_start = __new_start;
  this->D.170300._M_impl.D.169645._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.170300._M_impl.D.169645._M_end_of_storage = _28;
  return;

}



;; Function std::vector<basic_block_def*>::_M_check_len (_ZNKSt6vectorIP15basic_block_defSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9527, decl_uid=170149, cgraph_uid=6159, symbol_order=6948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<basic_block_def*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1402;
  size_type D.253937;
  const long unsigned int D.235395;
  bool retval.1400;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::max_size (this);
  _2 = std::vector<basic_block_def*>::size (this);
  _3 = _1 - _2;
  __n.1401_4 = __n;
  retval.1400 = _3 < __n.1401_4;
  if (retval.1400 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<basic_block_def*>::size (this);
  _6 = std::vector<basic_block_def*>::size (this);
  D.235395 = _6;
  _7 = std::max<long unsigned int> (&D.235395, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235395 = {CLOBBER};
  _9 = std::vector<basic_block_def*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<basic_block_def*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1402 = std::vector<basic_block_def*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1402 = __len;

  <bb 8> :
  D.253937 = iftmp.1402;

  <bb 9> :
<L6>:
  return D.253937;

}



;; Function std::vector<basic_block_def*>::max_size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8max_sizeEv, funcdef_no=10135, decl_uid=169935, cgraph_uid=6767, symbol_order=7560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::max_size (const struct vector * const this)
{
  size_type D.253944;

  <bb 2> :
  _1 = &this->D.170300;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  D.253944 = std::vector<basic_block_def*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253944;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9600, decl_uid=169535, cgraph_uid=6232, symbol_order=7021)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.253946;

  <bb 2> :
  D.253946 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.253946;

}



;; Function std::vector<basic_block_def*>::_S_max_size (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10594, decl_uid=170156, cgraph_uid=7226, symbol_order=8019)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253948;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<basic_block_def*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253948 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253948;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::max_size (_ZNSt16allocator_traitsISaIP15basic_block_defEE8max_sizeERKS2_, funcdef_no=10806, decl_uid=169470, cgraph_uid=7438, symbol_order=8233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<basic_block_def*> >::max_size (const struct allocator_type & __a)
{
  size_type D.253951;

  <bb 2> :
  D.253951 = __gnu_cxx::new_allocator<basic_block_def*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253951;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE8max_sizeEv, funcdef_no=10906, decl_uid=169312, cgraph_uid=7538, symbol_order=8333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::max_size (const struct new_allocator * const this)
{
  size_type D.253953;

  <bb 2> :
  D.253953 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253953;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE11_M_max_sizeEv, funcdef_no=10596, decl_uid=169331, cgraph_uid=7227, symbol_order=8020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.253955;

  <bb 2> :
  D.253955 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.253955;

}



;; Function std::vector<basic_block_def*>::begin (_ZNSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9528, decl_uid=169909, cgraph_uid=6160, symbol_order=6949)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::begin (struct vector * const this)
{
  struct iterator D.235397;
  struct iterator D.253957;

  <bb 2> :
  _1 = &this->D.170300._M_impl.D.169645._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.235397, _1);
  D.253957 = D.235397;
  D.235397 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253957;

}



;; Function __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (_ZN9__gnu_cxxmiIPP15basic_block_defSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9529, decl_uid=226227, cgraph_uid=6161, symbol_order=6950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253960;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253960 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.253960;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE11_M_allocateEm, funcdef_no=9530, decl_uid=169649, cgraph_uid=6162, symbol_order=6951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct basic_block_def * * std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.253968;
  struct basic_block_def * * iftmp.1403;
  struct basic_block_def * * D.253962;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.253968 = std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_1, __n);
  iftmp.1403 = D.253968;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1403 = 0B;

  <bb 5> :
  D.253962 = iftmp.1403;

  <bb 6> :
<L3>:
  return D.253962;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE8allocateERS2_m, funcdef_no=10136, decl_uid=169450, cgraph_uid=6768, symbol_order=7561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * std::allocator_traits<std::allocator<basic_block_def*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct basic_block_def * * D.253971;
  struct basic_block_def * * D.253969;

  <bb 2> :
  D.253971 = __gnu_cxx::new_allocator<basic_block_def*>::allocate (__a, __n, 0B);
  D.253969 = D.253971;

  <bb 3> :
<L0>:
  return D.253969;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::allocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE8allocateEmPKv, funcdef_no=10595, decl_uid=169304, cgraph_uid=7228, symbol_order=8021)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * __gnu_cxx::new_allocator<basic_block_def*>::allocate (struct new_allocator * const this, size_type __n, const void * D.243600)
{
  struct basic_block_def * * D.253982;
  struct basic_block_def * * D.253981;
  align_val_t __al;
  struct basic_block_def * * D.253979;
  bool retval.1404;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1404 = _4 != 0;
  if (retval.1404 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.253982 = operator new (_6);
  D.253979 = D.253982;

  <bb 7> :
<L6>:
  return D.253979;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8721, decl_uid=169533, cgraph_uid=5353, symbol_order=6142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.253983;

  <bb 2> :
  D.253983 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.253983;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9532, decl_uid=214114, cgraph_uid=6164, symbol_order=6953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * const & __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * * const & D.253985;

  <bb 2> :
  D.253985 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253985;

}



;; Function std::vector<basic_block_def*>::_S_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9531, decl_uid=169807, cgraph_uid=6163, symbol_order=6952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253988;
  struct basic_block_def * * D.253987;

  <bb 2> :
  D.253987 = std::vector<basic_block_def*>::_S_do_relocate (__first, __last, __result, __alloc, D.253988);

  <bb 3> :
<L0>:
  return D.253987;

}



;; Function std::vector<basic_block_def*>::_S_do_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10137, decl_uid=169795, cgraph_uid=6769, symbol_order=7562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_do_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240388)
{
  struct basic_block_def * * D.253990;

  <bb 2> :
  D.253990 = std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253990;

}



;; Function std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (_ZSt12__relocate_aIPP15basic_block_defS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10597, decl_uid=226392, cgraph_uid=7229, symbol_order=8022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & __alloc)
{
  struct basic_block_def * * D.253992;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**> (__result);
  _2 = std::__niter_base<basic_block_def**> (__last);
  _3 = std::__niter_base<basic_block_def**> (__first);
  D.253992 = std::__relocate_a_1<basic_block_def*, basic_block_def*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253992;

}



;; Function std::__niter_base<basic_block_def**> (_ZSt12__niter_baseIPP15basic_block_defET_S3_, funcdef_no=10640, decl_uid=226398, cgraph_uid=7272, symbol_order=8065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.253994;

  <bb 2> :
  D.253994 = __it;

  <bb 3> :
<L0>:
  return D.253994;

}



;; Function std::__relocate_a_1<basic_block_def*, basic_block_def*> (_ZSt14__relocate_a_1IP15basic_block_defS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10807, decl_uid=226566, cgraph_uid=7439, symbol_order=8234)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__relocate_a_1<basic_block_def*, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.244635)
{
  ptrdiff_t __count;
  struct basic_block_def * * D.253999;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1405_2 = (long unsigned int) __count;
  _3 = __count.1405_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1406_4 = (long unsigned int) __count;
  _5 = __count.1406_4 * 8;
  D.253999 = __result + _5;

  <bb 5> :
<L3>:
  return D.253999;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8373, decl_uid=169652, cgraph_uid=5005, symbol_order=5794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (struct _Vector_base * const this, struct basic_block_def * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE10deallocateERS2_PS1_m, funcdef_no=9160, decl_uid=169457, cgraph_uid=5792, symbol_order=6581)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (struct allocator_type & __a, struct basic_block_def * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE10deallocateEPS2_m, funcdef_no=9877, decl_uid=169308, cgraph_uid=6509, symbol_order=7302)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::deallocate (struct new_allocator * const this, struct basic_block_def * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack (_Z15check_stmtStackP9tree_node, funcdef_no=6420, decl_uid=186967, cgraph_uid=3396, symbol_order=4172)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack (union tree_node * target)
{
  int o;
  int size;
  int D.254010;
  bool retval.1407;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  target.1408_7 = target;
  retval.1407 = _6 == target.1408_7;
  if (retval.1407 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.254010 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1409_8 = totalsize;
  _9 = size + totalsize.1409_8;
  totalsize = _9;
  std::vector<tree_node*>::push_back (&new_gimpletree_array, &target);
  D.254010 = 0;

  <bb 8> :
<L5>:
  return D.254010;

}



;; Function check_stmtStack2 (_Z16check_stmtStack2P6gimple, funcdef_no=6421, decl_uid=186965, cgraph_uid=3397, symbol_order=4173)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack2 (struct gimple * stmt)
{
  int o;
  int size;
  int D.254015;
  bool retval.1410;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  stmt.1411_7 = stmt;
  retval.1410 = _6 == stmt.1411_7;
  if (retval.1410 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.254015 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1412_8 = totalsize;
  _9 = size + totalsize.1412_8;
  totalsize = _9;
  std::vector<gimple*>::push_back (&new_gimple_array, &stmt);
  D.254015 = 0;

  <bb 8> :
<L5>:
  return D.254015;

}



;; Function std::vector<gimple*>::size (_ZNKSt6vectorIP6gimpleSaIS1_EE4sizeEv, funcdef_no=7767, decl_uid=183606, cgraph_uid=4399, symbol_order=5184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::size (const struct vector * const this)
{
  size_type D.254017;

  <bb 2> :
  _1 = this->D.183973._M_impl.D.183329._M_finish;
  _2 = this->D.183973._M_impl.D.183329._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.254017 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.254017;

}



;; Function std::vector<gimple*>::operator[] (_ZNSt6vectorIP6gimpleSaIS1_EEixEm, funcdef_no=7768, decl_uid=183626, cgraph_uid=4400, symbol_order=5185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * & std::vector<gimple*>::operator[] (struct vector * const this, size_type __n)
{
  struct gimple * & D.254019;

  <bb 2> :
  _1 = this->D.183973._M_impl.D.183329._M_start;
  _2 = __n * 8;
  D.254019 = _1 + _2;

  <bb 3> :
<L0>:
  return D.254019;

}



;; Function std::vector<gimple*>::push_back (_ZNSt6vectorIP6gimpleSaIS1_EE9push_backERKS1_, funcdef_no=7769, decl_uid=183653, cgraph_uid=4402, symbol_order=5187)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<gimple*>::push_back (struct vector * const this, struct gimple * const & __x)
{
  struct __normal_iterator D.254024;

  <bb 2> :
  _1 = this->D.183973._M_impl.D.183329._M_finish;
  _2 = this->D.183973._M_impl.D.183329._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.183973._M_impl.D.183329._M_finish;
  _4 = &this->D.183973._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_4, _3, __x);
  _5 = this->D.183973._M_impl.D.183329._M_finish;
  _6 = _5 + 8;
  this->D.183973._M_impl.D.183329._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.254024 = std::vector<gimple*>::end (this);
  std::vector<gimple*>::_M_realloc_insert<gimple* const&> (this, D.254024, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_ZNSt16allocator_traitsISaIP6gimpleEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8712, decl_uid=214155, cgraph_uid=5344, symbol_order=6133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (struct allocator_type & __a, struct gimple * * __p, struct gimple * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<gimple* const&> (_ZSt7forwardIRKP6gimpleEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9534, decl_uid=226718, cgraph_uid=6166, symbol_order=6955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * const & std::forward<gimple* const&> (struct gimple * const & __t)
{
  struct gimple * const & D.254025;

  <bb 2> :
  D.254025 = __t;

  <bb 3> :
<L0>:
  return D.254025;

}



;; Function __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9535, decl_uid=226720, cgraph_uid=6167, symbol_order=6956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (struct new_allocator * const this, struct gimple * * __p, struct gimple * const & __args#0)
{
  void * D.235426;
  void * D.235425;
  struct gimple * D.235427;

  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  D.235427 = *_1;
  D.235425 = __p;
  D.235426 = operator new (8, D.235425);
  MEM[(struct gimple * *)D.235426] = D.235427;
  return;

}



;; Function std::vector<gimple*>::end (_ZNSt6vectorIP6gimpleSaIS1_EE3endEv, funcdef_no=8713, decl_uid=183586, cgraph_uid=5345, symbol_order=6134)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::end (struct vector * const this)
{
  struct iterator D.226743;
  struct iterator D.254027;

  <bb 2> :
  _1 = &this->D.183973._M_impl.D.183329._M_finish;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.226743, _1);
  D.254027 = D.226743;
  D.226743 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.254027;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9537, decl_uid=214392, cgraph_uid=6169, symbol_order=6958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (struct __normal_iterator * const this, struct gimple * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<gimple*>::_M_realloc_insert<gimple* const&> (_ZNSt6vectorIP6gimpleSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8714, decl_uid=214411, cgraph_uid=5349, symbol_order=6138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::_M_realloc_insert<gimple* const&> (struct vector * const this, struct iterator __position, struct gimple * const & __args#0)
{
  struct gimple * * D.254034;
  const size_type D.254033;
  struct gimple * * __new_finish;
  struct gimple * * __new_start;
  const size_type __elems_before;
  struct gimple * * __old_finish;
  struct gimple * * __old_start;
  const size_type __len;
  struct iterator D.226751;

  <bb 2> :
  D.254033 = std::vector<gimple*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.254033;
  __old_start = this->D.183973._M_impl.D.183329._M_start;
  __old_finish = this->D.183973._M_impl.D.183329._M_finish;
  D.226751 = std::vector<gimple*>::begin (this);
  _1 = __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (&__position, &D.226751);
  __elems_before = (const size_type) _1;
  D.226751 = {CLOBBER};
  _2 = &this->D.183973;
  D.254034 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_2, __len);
  __new_start = D.254034;
  __new_finish = __new_start;
  _3 = std::forward<gimple* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.183973._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.183973;
  _8 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<gimple*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.183973;
  _12 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<gimple*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.183973;
  _23 = this->D.183973._M_impl.D.183329._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_22, __old_start, _26);
  this->D.183973._M_impl.D.183329._M_start = __new_start;
  this->D.183973._M_impl.D.183329._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.183973._M_impl.D.183329._M_end_of_storage = _28;
  return;

}



;; Function std::vector<gimple*>::_M_check_len (_ZNKSt6vectorIP6gimpleSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9539, decl_uid=183822, cgraph_uid=6171, symbol_order=6960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<gimple*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1415;
  size_type D.254038;
  const long unsigned int D.235436;
  bool retval.1413;

  <bb 2> :
  _1 = std::vector<gimple*>::max_size (this);
  _2 = std::vector<gimple*>::size (this);
  _3 = _1 - _2;
  __n.1414_4 = __n;
  retval.1413 = _3 < __n.1414_4;
  if (retval.1413 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<gimple*>::size (this);
  _6 = std::vector<gimple*>::size (this);
  D.235436 = _6;
  _7 = std::max<long unsigned int> (&D.235436, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235436 = {CLOBBER};
  _9 = std::vector<gimple*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<gimple*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1415 = std::vector<gimple*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1415 = __len;

  <bb 8> :
  D.254038 = iftmp.1415;

  <bb 9> :
<L6>:
  return D.254038;

}



;; Function std::vector<gimple*>::max_size (_ZNKSt6vectorIP6gimpleSaIS1_EE8max_sizeEv, funcdef_no=10139, decl_uid=183608, cgraph_uid=6771, symbol_order=7564)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::max_size (const struct vector * const this)
{
  size_type D.254045;

  <bb 2> :
  _1 = &this->D.183973;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.254045 = std::vector<gimple*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.254045;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10599, decl_uid=183219, cgraph_uid=7231, symbol_order=8024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.254047;

  <bb 2> :
  D.254047 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.254047;

}



;; Function std::vector<gimple*>::_S_max_size (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10598, decl_uid=183829, cgraph_uid=7230, symbol_order=8023)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.254049;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<gimple*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.254049 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.254049;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::max_size (_ZNSt16allocator_traitsISaIP6gimpleEE8max_sizeERKS2_, funcdef_no=10808, decl_uid=181785, cgraph_uid=7440, symbol_order=8235)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<gimple*> >::max_size (const struct allocator_type & __a)
{
  size_type D.254052;

  <bb 2> :
  D.254052 = __gnu_cxx::new_allocator<gimple*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.254052;

}



;; Function __gnu_cxx::new_allocator<gimple*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE8max_sizeEv, funcdef_no=10907, decl_uid=181627, cgraph_uid=7539, symbol_order=8334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::max_size (const struct new_allocator * const this)
{
  size_type D.254054;

  <bb 2> :
  D.254054 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.254054;

}



;; Function __gnu_cxx::new_allocator<gimple*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE11_M_max_sizeEv, funcdef_no=10601, decl_uid=181646, cgraph_uid=7232, symbol_order=8025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.254056;

  <bb 2> :
  D.254056 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.254056;

}



;; Function std::vector<gimple*>::begin (_ZNSt6vectorIP6gimpleSaIS1_EE5beginEv, funcdef_no=9540, decl_uid=183582, cgraph_uid=6172, symbol_order=6961)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::begin (struct vector * const this)
{
  struct iterator D.235438;
  struct iterator D.254058;

  <bb 2> :
  _1 = &this->D.183973._M_impl.D.183329._M_start;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.235438, _1);
  D.254058 = D.235438;
  D.235438 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.254058;

}



;; Function __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (_ZN9__gnu_cxxmiIPP6gimpleSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9541, decl_uid=226752, cgraph_uid=6173, symbol_order=6962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.254061;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.254061 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.254061;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE11_M_allocateEm, funcdef_no=9542, decl_uid=183333, cgraph_uid=6174, symbol_order=6963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct gimple * * D.254069;
  struct gimple * * iftmp.1416;
  struct gimple * * D.254063;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.254069 = std::allocator_traits<std::allocator<gimple*> >::allocate (_1, __n);
  iftmp.1416 = D.254069;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1416 = 0B;

  <bb 5> :
  D.254063 = iftmp.1416;

  <bb 6> :
<L3>:
  return D.254063;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::allocate (_ZNSt16allocator_traitsISaIP6gimpleEE8allocateERS2_m, funcdef_no=10140, decl_uid=181765, cgraph_uid=6772, symbol_order=7565)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * std::allocator_traits<std::allocator<gimple*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * D.254072;
  struct gimple * * D.254070;

  <bb 2> :
  D.254072 = __gnu_cxx::new_allocator<gimple*>::allocate (__a, __n, 0B);
  D.254070 = D.254072;

  <bb 3> :
<L0>:
  return D.254070;

}



;; Function __gnu_cxx::new_allocator<gimple*>::allocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE8allocateEmPKv, funcdef_no=10600, decl_uid=181619, cgraph_uid=7233, symbol_order=8026)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * __gnu_cxx::new_allocator<gimple*>::allocate (struct new_allocator * const this, size_type __n, const void * D.243617)
{
  struct gimple * * D.254083;
  struct gimple * * D.254082;
  align_val_t __al;
  struct gimple * * D.254080;
  bool retval.1417;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1417 = _4 != 0;
  if (retval.1417 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.254083 = operator new (_6);
  D.254080 = D.254083;

  <bb 7> :
<L6>:
  return D.254080;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9545, decl_uid=183217, cgraph_uid=6177, symbol_order=6966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.254084;

  <bb 2> :
  D.254084 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.254084;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9544, decl_uid=214379, cgraph_uid=6176, symbol_order=6965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * const & __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (const struct __normal_iterator * const this)
{
  struct gimple * * const & D.254086;

  <bb 2> :
  D.254086 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.254086;

}



;; Function std::vector<gimple*>::_S_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9543, decl_uid=183481, cgraph_uid=6175, symbol_order=6964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.254089;
  struct gimple * * D.254088;

  <bb 2> :
  D.254088 = std::vector<gimple*>::_S_do_relocate (__first, __last, __result, __alloc, D.254089);

  <bb 3> :
<L0>:
  return D.254088;

}



;; Function std::vector<gimple*>::_S_do_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10141, decl_uid=183469, cgraph_uid=6773, symbol_order=7566)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_do_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240400)
{
  struct gimple * * D.254091;

  <bb 2> :
  D.254091 = std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.254091;

}



;; Function std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (_ZSt12__relocate_aIPP6gimpleS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10602, decl_uid=226917, cgraph_uid=7234, symbol_order=8027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & __alloc)
{
  struct gimple * * D.254093;

  <bb 2> :
  _1 = std::__niter_base<gimple**> (__result);
  _2 = std::__niter_base<gimple**> (__last);
  _3 = std::__niter_base<gimple**> (__first);
  D.254093 = std::__relocate_a_1<gimple*, gimple*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.254093;

}



;; Function std::__niter_base<gimple**> (_ZSt12__niter_baseIPP6gimpleET_S3_, funcdef_no=10809, decl_uid=226923, cgraph_uid=7441, symbol_order=8236)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__niter_base<gimple**> (struct gimple * * __it)
{
  struct gimple * * D.254095;

  <bb 2> :
  D.254095 = __it;

  <bb 3> :
<L0>:
  return D.254095;

}



;; Function std::__relocate_a_1<gimple*, gimple*> (_ZSt14__relocate_a_1IP6gimpleS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10810, decl_uid=227091, cgraph_uid=7442, symbol_order=8237)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct gimple * * std::__relocate_a_1<gimple*, gimple*> (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & D.244645)
{
  ptrdiff_t __count;
  struct gimple * * D.254100;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1418_2 = (long unsigned int) __count;
  _3 = __count.1418_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1419_4 = (long unsigned int) __count;
  _5 = __count.1419_4 * 8;
  D.254100 = __result + _5;

  <bb 5> :
<L3>:
  return D.254100;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8353, decl_uid=183336, cgraph_uid=4985, symbol_order=5774)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (struct _Vector_base * const this, struct gimple * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::deallocate (_ZNSt16allocator_traitsISaIP6gimpleEE10deallocateERS2_PS1_m, funcdef_no=9152, decl_uid=181772, cgraph_uid=5784, symbol_order=6573)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::deallocate (struct allocator_type & __a, struct gimple * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE10deallocateEPS2_m, funcdef_no=9875, decl_uid=181623, cgraph_uid=6507, symbol_order=7300)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::deallocate (struct new_allocator * const this, struct gimple * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack3 (_Z16check_stmtStack3P9tree_node, funcdef_no=6422, decl_uid=186963, cgraph_uid=3398, symbol_order=4174)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack3 (union tree_node * target)
{
  int o;
  int D.254111;
  bool retval.1420;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  retval.1420 = target == _6;
  if (retval.1420 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.254111 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.254111 = 0;

  <bb 8> :
<L5>:
  return D.254111;

}



;; Function check_stmtStack4 (_Z16check_stmtStack4P6gimple, funcdef_no=6423, decl_uid=186961, cgraph_uid=3399, symbol_order=4175)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack4 (struct gimple * stmt)
{
  int o;
  int D.254116;
  bool retval.1421;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  retval.1421 = stmt == _6;
  if (retval.1421 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.254116 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.254116 = 0;

  <bb 8> :
<L5>:
  return D.254116;

}



;; Function Checknew_search_imm_use_lhs (_Z27Checknew_search_imm_use_lhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6424, decl_uid=186959, cgraph_uid=3400, symbol_order=4176)

Removing basic block 12
Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 12 }
;; 5 succs { 6 12 }
;; 6 succs { 7 8 }
;; 7 succs { 12 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
void Checknew_search_imm_use_lhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.254146;
  union tree_node * D.254145;
  union tree_node * D.254144;
  union tree_node * D.254143;
  union tree_node * D.254142;
  union tree_node * D.254141;
  struct gimple * def_stmt;
  struct gimple * def_stmt;
  bool retval.1426;
  bool retval.1425;
  bool retval.1424;
  bool retval.1423;
  bool retval.1422;

  <bb 2> :
  def_stmt = use_stmt;
  D.254141 = gimple_assign_rhs1 (use_stmt);
  _1 = D.254141;
  _2 = _1->base.code;
  retval.1422 = _2 == 153;
  if (retval.1422 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.254142 = gimple_assign_lhs (use_stmt);
  _3 = D.254142;
  def_stmt = _3->ssa_name.def_stmt;

  <bb 4> :
  if (def_stmt != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  D.254143 = gimple_assign_lhs (def_stmt);
  _4 = D.254143;
  retval.1423 = _4 != 0B;
  if (retval.1423 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  D.254144 = gimple_assign_lhs (def_stmt);
  _5 = D.254144;
  _6 = _5->base.code;
  retval.1424 = _6 == 49;
  if (retval.1424 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 12>; [INV]

  <bb 8> :
  D.254145 = gimple_assign_lhs (def_stmt);
  _7 = D.254145;
  _8 = _7->base.code;
  retval.1425 = _8 == 47;
  if (retval.1425 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 12>; [INV]

  <bb 10> :
  D.254146 = gimple_assign_lhs (def_stmt);
  _9 = D.254146;
  _10 = _9->base.code;
  retval.1426 = _10 == 165;
  if (retval.1426 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);

  <bb 12> :
  return;

}



;; Function Checknew_search_imm_use_rhs (_Z27Checknew_search_imm_use_rhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6425, decl_uid=186954, cgraph_uid=3401, symbol_order=4177)

Removing basic block 14
Removing basic block 15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 14 }
;; 5 succs { 6 14 }
;; 6 succs { 7 8 }
;; 7 succs { 14 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 12 }
;; 11 succs { 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void Checknew_search_imm_use_rhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.254178;
  union tree_node * D.254177;
  union tree_node * D.254176;
  union tree_node * D.254175;
  union tree_node * D.254174;
  union tree_node * D.254173;
  struct gimple * def_stmt;
  bool retval.1431;
  bool retval.1430;
  bool retval.1429;
  bool retval.1428;
  bool retval.1427;

  <bb 2> :
  def_stmt = use_stmt;
  D.254173 = gimple_assign_rhs1 (use_stmt);
  _1 = D.254173;
  _2 = _1->base.code;
  retval.1427 = _2 == 153;
  if (retval.1427 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.254174 = gimple_assign_rhs1 (use_stmt);
  _3 = D.254174;
  def_stmt = _3->ssa_name.def_stmt;

  <bb 4> :
  if (def_stmt != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  D.254175 = gimple_assign_rhs1 (def_stmt);
  _4 = D.254175;
  retval.1428 = _4 != 0B;
  if (retval.1428 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  D.254176 = gimple_assign_rhs1 (def_stmt);
  _5 = D.254176;
  _6 = _5->base.code;
  retval.1429 = _6 == 49;
  if (retval.1429 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 8> :
  D.254177 = gimple_assign_rhs1 (def_stmt);
  _7 = D.254177;
  _8 = _7->base.code;
  retval.1430 = _8 == 47;
  if (retval.1430 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 10> :
  D.254178 = gimple_assign_rhs1 (def_stmt);
  _9 = D.254178;
  _10 = _9->base.code;
  retval.1431 = _10 == 165;
  if (retval.1431 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 12> :
  _11 = target->base.code;
  if (_11 == 36)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 14> :
  return;

}



;; Function prechecktree (_Z12prechecktreeP9tree_node, funcdef_no=6426, decl_uid=186943, cgraph_uid=3402, symbol_order=4179)

Removing basic block 7
Removing basic block 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
union tree_node * prechecktree (union tree_node * tree)
{
  union tree_node * D.254187;

  <bb 2> :
  if (tree != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _1 = tree->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _2 = tree->exp.operands[0];
  gettree = _2;
  gettree.1432_3 = gettree;
  if (gettree.1432_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  gettree.1433_4 = gettree;
  _5 = gettree.1433_4->base.code;
  if (_5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.254187 = gettree;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  D.254187 = tree;

  <bb 8> :
<L10>:
  return D.254187;

}



;; Function check_bbinfo (_Z12check_bbinfoP11cgraph_nodeP15basic_block_def, funcdef_no=6427, decl_uid=186949, cgraph_uid=3403, symbol_order=4180)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 21 17 20 18 19 15 16 14 13 9 12 10 11 7 8 6 5
;; 2 succs { 3 28 }
;; 3 succs { 23 }
;; 4 succs { 5 22 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 13 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 21 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 4 24 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 1 }
void check_bbinfo (struct cgraph_node * m, struct basic_block_def * bb)
{
  bool D.254232;
  bool D.254231;
  struct function * D.254230;
  struct symbolicinfo * D.254229;
  struct symbolicinfo * D.254228;
  struct symbolicinfo * symbolicinfotmp;
  int o;
  int find_path_constraint;
  bool retval.1445;
  bool retval.1444;
  bool iftmp.1443;
  bool retval.1442;
  bool retval.1441;
  bool iftmp.1440;
  bool retval.1439;
  bool retval.1436;

  <bb 2> :
  pathconstraint.1434_1 = pathconstraint;
  if (pathconstraint.1434_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 3> :
  find_path_constraint = 0;
  stderr.1435_2 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1435_2);
  o = 0;
  goto <bb 23>; [INV]

  <bb 4> :
  syminfo.1437_3 = syminfo;
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _4);
  D.254228 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1437_3, _5);
  _6 = D.254228;
  retval.1436 = _6 != 0B;
  if (retval.1436 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 5> :
  syminfo.1438_7 = syminfo;
  _8 = (long unsigned int) o;
  _9 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _8);
  D.254229 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1438_7, _9);
  symbolicinfotmp = D.254229;
  _10 = symbolicinfotmp->node;
  D.254230 = cgraph_node::get_fun (_10);
  _11 = D.254230;
  push_cfun (_11);
  calculate_dominance_info (1);
  _12 = symbolicinfotmp->cond_truebranch;
  if (bb == _12)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _13 = symbolicinfotmp->cond_truebranch;
  D.254231 = dominated_by_p (1, bb, _13);
  _14 = D.254231;
  if (_14 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1440 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1440 = 0;

  <bb 9> :
  retval.1439 = iftmp.1440;
  if (retval.1439 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  _15 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_15);
  retval.1441 = 1;
  if (retval.1441 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _16 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_16);

  <bb 12> :
  _17 = symbolicinfotmp->cond_stmt;
  _18 = gimple_location_safe (_17);
  warning_at (_18, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 13> :
  _19 = symbolicinfotmp->cond_falsebranch;
  if (bb == _19)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _20 = symbolicinfotmp->cond_falsebranch;
  D.254232 = dominated_by_p (1, bb, _20);
  _21 = D.254232;
  if (_21 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1443 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1443 = 0;

  <bb 17> :
  retval.1442 = iftmp.1443;
  if (retval.1442 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _22 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_22);
  retval.1444 = 1;
  if (retval.1444 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _23 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_23);

  <bb 20> :
  _24 = symbolicinfotmp->cond_stmt;
  _25 = gimple_location_safe (_24);
  warning_at (_25, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  o = o + 1;

  <bb 23> :
  _26 = (long unsigned int) o;
  _27 = std::vector<basic_block_def*>::size (&symbolicExecution);
  retval.1445 = _26 < _27;
  if (retval.1445 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find_path_constraint == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  stderr.1446_28 = stderr;
  __builtin_fwrite ("=======================NO find Path Constaint===========================\n\n", 1, 74, stderr.1446_28);
  goto <bb 27>; [INV]

  <bb 26> :
  stderr.1447_29 = stderr;
  fprintf (stderr.1447_29, "=======================Path Constaint=====%d======================\n\n", find_path_constraint);

  <bb 27> :
  stderr.1448_30 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1448_30);

  <bb 28> :
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::get (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7771, decl_uid=196526, cgraph_uid=4403, symbol_order=5188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfo * hash_map<basic_block_def*, symbolicinfo>::get (struct hash_map * const this, struct basic_block_def * const & k)
{
  bool D.254241;
  struct hash_entry & D.254240;
  unsigned int D.254239;
  struct hash_entry & e;
  struct symbolicinfo * iftmp.1449;
  struct symbolicinfo * D.254233;

  <bb 2> :
  _1 = &this->m_table;
  D.254239 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.254239;
  D.254240 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.254240;
  D.254241 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  _3 = D.254241;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1449 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1449 = &e->m_value;

  <bb 5> :
  D.254233 = iftmp.1449;

  <bb 6> :
<L3>:
  return D.254233;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE4hashERKS2_, funcdef_no=8718, decl_uid=196482, cgraph_uid=5350, symbol_order=6139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (struct basic_block_def * const & h)
{
  hashval_t D.254242;

  <bb 2> :
  D.254242 = pointer_hash<basic_block_def>::hash (h);

  <bb 3> :
<L0>:
  return D.254242;

}



;; Function pointer_hash<basic_block_def>::hash (_ZN12pointer_hashI15basic_block_defE4hashERKPS0_, funcdef_no=9547, decl_uid=196439, cgraph_uid=6179, symbol_order=6968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<basic_block_def>::hash (struct basic_block_def * const & candidate)
{
  hashval_t D.254244;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.254244 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.254244;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8719, decl_uid=196669, cgraph_uid=5351, symbol_order=6140)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash)
{
  bool D.254278;
  bool D.254277;
  bool D.254276;
  bool D.254275;
  bool D.254274;
  bool D.254273;
  struct value_type * D.254272;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.1453;
  bool retval.1452;
  struct value_type & D.254258;
  bool iftmp.1451;
  bool retval.1450;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 168;
  entry = _5 + _7;
  D.254273 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.254273;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.254274 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.254274;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.254275 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _11 = D.254275;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1451 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1451 = 0;

  <bb 8> :
  retval.1450 = iftmp.1451;
  if (retval.1450 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.254258 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  entry = _17 + _19;
  D.254276 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.254276;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.254277 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.254277;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.254278 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _23 = D.254278;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1453 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1453 = 0;

  <bb 18> :
  retval.1452 = iftmp.1453;
  if (retval.1452 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.254258 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.254258;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8893, decl_uid=196765, cgraph_uid=5525, symbol_order=6314)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.254281;
  bool D.254279;

  <bb 2> :
  D.254281 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (v);
  D.254279 = D.254281;

  <bb 3> :
<L0>:
  return D.254279;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8776, decl_uid=196595, cgraph_uid=5408, symbol_order=6197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.254284;
  bool D.254282;

  <bb 2> :
  D.254284 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.254282 = D.254284;

  <bb 3> :
<L0>:
  return D.254282;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8894, decl_uid=196763, cgraph_uid=5526, symbol_order=6315)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.254287;
  bool D.254285;

  <bb 2> :
  D.254287 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (v);
  D.254285 = D.254287;

  <bb 3> :
<L0>:
  return D.254285;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9726, decl_uid=196590, cgraph_uid=6358, symbol_order=7147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.254290;
  bool D.254288;

  <bb 2> :
  D.254290 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.254288 = D.254290;

  <bb 3> :
<L0>:
  return D.254288;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10286, decl_uid=237326, cgraph_uid=6918, symbol_order=7711)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.254291;

  <bb 2> :
  _1 = entry->m_key;
  D.254291 = pointer_hash<basic_block_def>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.254291;

}



;; Function pointer_hash<basic_block_def>::is_deleted (_ZN12pointer_hashI15basic_block_defE10is_deletedEPS0_, funcdef_no=10701, decl_uid=196449, cgraph_uid=7333, symbol_order=8126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_deleted (struct basic_block_def * e)
{
  bool D.254293;

  <bb 2> :
  D.254293 = e == 1B;

  <bb 3> :
<L0>:
  return D.254293;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9549, decl_uid=196583, cgraph_uid=6181, symbol_order=6970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (const struct hash_entry & a, struct basic_block_def * const & b)
{
  bool D.254297;
  bool D.254295;

  <bb 2> :
  _1 = &a->m_key;
  D.254297 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_1, b);
  D.254295 = D.254297;

  <bb 3> :
<L0>:
  return D.254295;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10equal_keysERKS2_S7_, funcdef_no=10145, decl_uid=196484, cgraph_uid=6777, symbol_order=7570)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (struct basic_block_def * const & k1, struct basic_block_def * const & k2)
{
  bool D.254298;

  <bb 2> :
  D.254298 = pointer_hash<basic_block_def>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.254298;

}



;; Function pointer_hash<basic_block_def>::equal (_ZN12pointer_hashI15basic_block_defE5equalERKPS0_S4_, funcdef_no=10609, decl_uid=196441, cgraph_uid=7241, symbol_order=8034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::equal (struct basic_block_def * const & existing, struct basic_block_def * const & candidate)
{
  bool D.254300;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.254300 = _1 == _2;

  <bb 3> :
<L0>:
  return D.254300;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8720, decl_uid=214418, cgraph_uid=5352, symbol_order=6141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.254302;

  <bb 2> :
  _1 = entry->m_key;
  D.254302 = pointer_hash<basic_block_def>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.254302;

}



;; Function pointer_hash<basic_block_def>::is_empty (_ZN12pointer_hashI15basic_block_defE8is_emptyEPS0_, funcdef_no=9550, decl_uid=196451, cgraph_uid=6182, symbol_order=6971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_empty (struct basic_block_def * e)
{
  bool D.254304;

  <bb 2> :
  D.254304 = e == 0B;

  <bb 3> :
<L0>:
  return D.254304;

}



;; Function checkPointerConstraint (_Z22checkPointerConstraintP9tree_nodeP3ptbP12gimple_arrayS0_i, funcdef_no=6785, decl_uid=186983, cgraph_uid=3423, symbol_order=4200)

Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 68
Removing basic block 69
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 112
Removing basic block 118
Removing basic block 141
Removing basic block 150
Removing basic block 176
Removing basic block 177
Removing basic block 178
Removing basic block 190
Removing basic block 191
Removing basic block 201
Removing basic block 208
Removing basic block 209
Removing basic block 222
Removing basic block 223
Removing basic block 239
Removing basic block 240
Removing basic block 241
Removing basic block 242
Removing basic block 243
Removing basic block 244
Removing basic block 251
Removing basic block 287
Removing basic block 288
Removing basic block 293
Removing basic block 294
Removing basic block 295
Removing basic block 301
Removing basic block 338
Removing basic block 347
Removing basic block 362
Removing basic block 365
Removing basic block 368
Removing basic block 375
Removing basic block 381
Removing basic block 387
Removing basic block 396
Removing basic block 398
Removing basic block 399
Removing basic block 402
Removing basic block 416
Removing basic block 435
Removing basic block 436
Removing basic block 456
Removing basic block 472
Removing basic block 475
Removing basic block 484
Removing basic block 487
Removing basic block 488
Removing basic block 489
Removing basic block 499
Removing basic block 500
Removing basic block 515
Removing basic block 516
Removing basic block 524
Removing basic block 528
Removing basic block 529
Removing basic block 534
Removing basic block 543
Removing basic block 551
Removing basic block 552
Removing basic block 554
Removing basic block 555
Removing basic block 556
Removing basic block 578
Removing basic block 579
Removing basic block 596
Removing basic block 598
Removing basic block 604
Removing basic block 605
Removing basic block 626
Removing basic block 628
Removing basic block 654
Removing basic block 663
Removing basic block 664
Removing basic block 685
Removing basic block 703
Removing basic block 707
Removing basic block 708
Removing basic block 709
Removing basic block 717
Removing basic block 718
Removing basic block 723
Removing basic block 724
Removing basic block 732
Removing basic block 749
Removing basic block 752
Removing basic block 753
Removing basic block 754
Removing basic block 762
Removing basic block 774
Removing basic block 778
Removing basic block 782
Removing basic block 792
Removing basic block 795
Removing basic block 797
Removing basic block 803
Removing basic block 808
Removing basic block 811
Removing basic block 816
Removing basic block 817
Removing basic block 822
Removing basic block 830
Removing basic block 832
Removing basic block 841
Removing basic block 847
Removing basic block 850
Removing basic block 856
Removing basic block 857
Removing basic block 862
Merging blocks 863 and 865
Merging blocks 864 and 868
Removing basic block 866
;; 17 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 751, latch 750
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 9
;;  header 663, latch 662
;;  depth 2, outer 3
;;  nodes: 663 662 660 661 659 658 589 657 592 600 620 627 631 656 594 634 633 632 603 630 628 621 626 625 624 623 622 606 619 607 608 618 610 617 616 611 615 613 614 612 609 605 604 629 602 601 595 599 598 597 596 593 654 655 653 652 651 650 649 648 647 646 645 644 643 642 641 640 639 637 638 636 635 591 590
;;
;; Loop 10
;;  header 658, latch 657
;;  depth 3, outer 9
;;  nodes: 658 657 592 600 620 627 631 656 594 634 633 632 603 630 628 621 626 625 624 623 622 606 619 607 608 618 610 617 616 611 615 613 614 612 609 605 604 629 602 601 595 599 598 597 596 593 654 655 653 652 651 650 649 648 647 646 645 644 643 642 641 640 639 637 638 636 635 591 590
;;
;; Loop 11
;;  header 616, latch 615
;;  depth 4, outer 10
;;  nodes: 616 615 613 614 612 617
;;
;; Loop 8
;;  header 579, latch 578
;;  depth 2, outer 3
;;  nodes: 579 578 565 577 576 575 574 572 573 570 566 569 568 567 571 564
;;
;; Loop 7
;;  header 546, latch 545
;;  depth 2, outer 3
;;  nodes: 546 545 544 543 542 541 540 539 538 537 536
;;
;; Loop 6
;;  header 523, latch 522
;;  depth 2, outer 3
;;  nodes: 523 522 511 521 519 520 518 517 516 515 514 513 512 510
;;
;; Loop 5
;;  header 508, latch 507
;;  depth 2, outer 3
;;  nodes: 508 507 506 500 505 501 504 503 502 499
;;
;; Loop 12
;;  header 506, latch 505
;;  depth 3, outer 5
;;  nodes: 506 505 501 504 503 502
;;
;; Loop 4
;;  header 490, latch 489
;;  depth 2, outer 3
;;  nodes
;;
;; Loop 13
;;  header 180, latch 179
;;  depth 3, outer 4
;;  nodes: 180 179 178 177 120 176 175 174 121 173 133 172 139 144 142 143 141 140 137 138 134 136 135 171 170 145 169 161 162 163 168 148 150 149 147 146 167 166 165 164 160 159 158 157 156 155 154 153 152 151 131 132 130 129 123 128 125 124 127 126 122 119
;;
;; Loop 14
;;  header 177, latch 176
;;  depth 4, outer 13
;;  nodes: 177 176 175 174 121 173 133 172 139 144 142 143 141 140 137 138 134 136 135 171 170 145 169 161 162 163 168 148 150 149 147 146 167 166 165 164 160 159 158 157 156 155 154 153 152 151 131 132 130 129 123 128 125 124 127 126 122 178
;;
;; Loop 15
;;  header 174, latch 173
;;  depth 5, outer 14
;;  nodes: 174 173 133 172 139 144 142 143 141 140 137 138 134 136 135 171 170 145 169 161 162 163 168 148 150 149 147 146 167 166 165 164 160 159 158 157 156 155 154 153 152 151 131 132 130 129 123 128 125 124 127 126 122 175
;;
;; Loop 16
;;  header 170, latch 169
;;  depth 6, outer 15
;;  nodes: 170 169 161 162 163 168 148 150 149 147 146 171 167 166 165 164 160 159 158 157 156 155 154 153 152 151
;;
;; Loop 2
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 15 19 18 17 16
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 778 6 }
;; 6 succs { 778 7 }
;; 7 succs { 8 24 }
;; 8 succs { 9 24 }
;; 9 succs { 754 10 }
;; 10 succs { 754 11 }
;; 11 succs { 754 12 }
;; 12 succs { 754 13 }
;; 13 succs { 754 14 }
;; 14 succs { 21 }
;; 15 succs { 16 20 }
;; 16 succs { 753 17 }
;; 17 succs { 753 18 }
;; 18 succs { 753 19 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 15 22 }
;; 22 succs { 753 23 }
;; 23 succs { 24 }
;; 24 succs { 778 25 }
;; 25 succs { 778 26 }
;; 26 succs { 27 28 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 751 }
;; 30 succs { 777 31 }
;; 31 succs { 32 746 }
;; 32 succs { 33 746 }
;; 33 succs { 775 34 }
;; 34 succs { 775 35 }
;; 35 succs { 37 36 }
;; 36 succs { 37 40 }
;; 37 succs { 775 38 }
;; 38 succs { 775 39 }
;; 39 succs { 742 }
;; 40 succs { 41 82 }
;; 41 succs { 42 79 }
;; 42 succs { 43 79 }
;; 43 succs { 775 44 }
;; 44 succs { 45 57 }
;; 45 succs { 775 46 }
;; 46 succs { 47 49 }
;; 47 succs { 775 48 }
;; 48 succs { 57 }
;; 49 succs { 50 57 }
;; 50 succs { 51 57 }
;; 51 succs { 52 57 }
;; 52 succs { 775 53 }
;; 53 succs { 54 57 }
;; 54 succs { 775 55 }
;; 55 succs { 775 56 }
;; 56 succs { 57 }
;; 57 succs { 775 58 }
;; 58 succs { 59 77 }
;; 59 succs { 60 65 }
;; 60 succs { 775 61 }
;; 61 succs { 775 62 }
;; 62 succs { 775 63 }
;; 63 succs { 64 77 }
;; 64 succs { 775 77 }
;; 65 succs { 66 77 }
;; 66 succs { 67 77 }
;; 67 succs { 68 77 }
;; 68 succs { 775 69 }
;; 69 succs { 70 77 }
;; 70 succs { 775 71 }
;; 71 succs { 775 72 }
;; 72 succs { 775 73 }
;; 73 succs { 775 74 }
;; 74 succs { 775 75 }
;; 75 succs { 76 77 }
;; 76 succs { 775 77 }
;; 77 succs { 775 78 }
;; 78 succs { 81 }
;; 79 succs { 775 80 }
;; 80 succs { 775 81 }
;; 81 succs { 82 }
;; 82 succs { 83 95 }
;; 83 succs { 90 84 }
;; 84 succs { 90 85 }
;; 85 succs { 90 86 }
;; 86 succs { 90 87 }
;; 87 succs { 90 88 }
;; 88 succs { 90 89 }
;; 89 succs { 90 92 }
;; 90 succs { 775 91 }
;; 91 succs { 94 }
;; 92 succs { 775 93 }
;; 93 succs { 775 94 }
;; 94 succs { 95 }
;; 95 succs { 775 96 }
;; 96 succs { 97 668 }
;; 97 succs { 773 98 }
;; 98 succs { 756 99 }
;; 99 succs { 771 100 }
;; 100 succs { 101 102 }
;; 101 succs { 771 105 }
;; 102 succs { 771 103 }
;; 103 succs { 771 104 }
;; 104 succs { 771 105 }
;; 105 succs { 106 107 }
;; 106 succs { 771 108 }
;; 107 succs { 771 108 }
;; 108 succs { 771 109 }
;; 109 succs { 110 527 }
;; 110 succs { 111 112 }
;; 111 succs { 113 }
;; 112 succs { 113 }
;; 113 succs { 490 }
;; 114 succs { 115 182 }
;; 115 succs { 760 116 }
;; 116 succs { 760 117 }
;; 117 succs { 760 118 }
;; 118 succs { 180 }
;; 119 succs { 760 120 }
;; 120 succs { 177 }
;; 121 succs { 174 }
;; 122 succs { 758 123 }
;; 123 succs { 124 129 }
;; 124 succs { 758 125 }
;; 125 succs { 126 129 }
;; 126 succs { 758 127 }
;; 127 succs { 758 128 }
;; 128 succs { 129 }
;; 129 succs { 131 130 }
;; 130 succs { 131 132 }
;; 131 succs { 133 }
;; 132 succs { 133 }
;; 133 succs { 134 173 }
;; 134 succs { 135 137 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 138 139 }
;; 138 succs { 139 }
;; 139 succs { 140 173 }
;; 140 succs { 142 141 }
;; 141 succs { 142 143 }
;; 142 succs { 144 }
;; 143 succs { 144 }
;; 144 succs { 145 173 }
;; 145 succs { 170 }
;; 146 succs { 147 162 }
;; 147 succs { 757 148 }
;; 148 succs { 149 169 }
;; 149 succs { 757 150 }
;; 150 succs { 151 169 }
;; 151 succs { 757 152 }
;; 152 succs { 757 153 }
;; 153 succs { 757 154 }
;; 154 succs { 757 155 }
;; 155 succs { 757 156 }
;; 156 succs { 757 157 }
;; 157 succs { 757 158 }
;; 158 succs { 757 159 }
;; 159 succs { 757 160 }
;; 160 succs { 757 161 }
;; 161 succs { 757 169 }
;; 162 succs { 163 169 }
;; 163 succs { 164 169 }
;; 164 succs { 757 165 }
;; 165 succs { 757 166 }
;; 166 succs { 757 167 }
;; 167 succs { 757 168 }
;; 168 succs { 169 }
;; 169 succs { 757 170 }
;; 170 succs { 757 171 }
;; 171 succs { 146 172 }
;; 172 succs { 173 }
;; 173 succs { 758 174 }
;; 174 succs { 758 175 }
;; 175 succs { 122 176 }
;; 176 succs { 177 }
;; 177 succs { 760 178 }
;; 178 succs { 121 179 }
;; 179 succs { 180 }
;; 180 succs { 119 181 }
;; 181 succs { 760 182 }
;; 182 succs { 183 188 }
;; 183 succs { 760 184 }
;; 184 succs { 185 188 }
;; 185 succs { 760 186 }
;; 186 succs { 760 187 }
;; 187 succs { 760 188 }
;; 188 succs { 189 215 }
;; 189 succs { 190 215 }
;; 190 succs { 191 215 }
;; 191 succs { 760 192 }
;; 192 succs { 193 215 }
;; 193 succs { 760 194 }
;; 194 succs { 195 215 }
;; 195 succs { 760 196 }
;; 196 succs { 760 197 }
;; 197 succs { 198 200 }
;; 198 succs { 199 215 }
;; 199 succs { 760 215 }
;; 200 succs { 760 201 }
;; 201 succs { 760 202 }
;; 202 succs { 203 215 }
;; 203 succs { 760 204 }
;; 204 succs { 760 205 }
;; 205 succs { 206 215 }
;; 206 succs { 760 207 }
;; 207 succs { 760 208 }
;; 208 succs { 760 209 }
;; 209 succs { 760 210 }
;; 210 succs { 760 211 }
;; 211 succs { 760 212 }
;; 212 succs { 760 213 }
;; 213 succs { 760 214 }
;; 214 succs { 485 }
;; 215 succs { 216 484 }
;; 216 succs { 217 260 }
;; 217 succs { 218 221 }
;; 218 succs { 760 219 }
;; 219 succs { 760 220 }
;; 220 succs { 760 221 }
;; 221 succs { 222 484 }
;; 222 succs { 760 223 }
;; 223 succs { 760 224 }
;; 224 succs { 760 225 }
;; 225 succs { 226 484 }
;; 226 succs { 760 227 }
;; 227 succs { 760 228 }
;; 228 succs { 760 229 }
;; 229 succs { 760 230 }
;; 230 succs { 760 231 }
;; 231 succs { 760 232 }
;; 232 succs { 760 233 }
;; 233 succs { 760 234 }
;; 234 succs { 760 235 }
;; 235 succs { 760 236 }
;; 236 succs { 760 237 }
;; 237 succs { 760 238 }
;; 238 succs { 760 239 }
;; 239 succs { 760 240 }
;; 240 succs { 760 241 }
;; 241 succs { 760 242 }
;; 242 succs { 760 243 }
;; 243 succs { 244 256 }
;; 244 succs { 760 245 }
;; 245 succs { 246 249 }
;; 246 succs { 760 247 }
;; 247 succs { 248 249 }
;; 248 succs { 250 }
;; 249 succs { 250 }
;; 250 succs { 251 256 }
;; 251 succs { 760 252 }
;; 252 succs { 760 253 }
;; 253 succs { 760 254 }
;; 254 succs { 760 255 }
;; 255 succs { 760 256 }
;; 256 succs { 760 257 }
;; 257 succs { 760 258 }
;; 258 succs { 760 259 }
;; 259 succs { 760 484 }
;; 260 succs { 261 343 }
;; 261 succs { 262 265 }
;; 262 succs { 760 263 }
;; 263 succs { 760 264 }
;; 264 succs { 760 265 }
;; 265 succs { 760 266 }
;; 266 succs { 760 267 }
;; 267 succs { 268 343 }
;; 268 succs { 759 269 }
;; 269 succs { 759 270 }
;; 270 succs { 759 271 }
;; 271 succs { 759 272 }
;; 272 succs { 759 273 }
;; 273 succs { 759 274 }
;; 274 succs { 759 275 }
;; 275 succs { 759 276 }
;; 276 succs { 759 277 }
;; 277 succs { 759 278 }
;; 278 succs { 759 279 }
;; 279 succs { 759 280 }
;; 280 succs { 759 281 }
;; 281 succs { 759 282 }
;; 282 succs { 759 283 }
;; 283 succs { 759 284 }
;; 284 succs { 759 285 }
;; 285 succs { 286 301 }
;; 286 succs { 759 287 }
;; 287 succs { 288 291 }
;; 288 succs { 759 289 }
;; 289 succs { 290 291 }
;; 290 succs { 292 }
;; 291 succs { 292 }
;; 292 succs { 293 300 }
;; 293 succs { 759 294 }
;; 294 succs { 759 295 }
;; 295 succs { 759 296 }
;; 296 succs { 759 297 }
;; 297 succs { 759 298 }
;; 298 succs { 759 299 }
;; 299 succs { 301 }
;; 300 succs { 301 }
;; 301 succs { 759 302 }
;; 302 succs { 759 303 }
;; 303 succs { 304 333 }
;; 304 succs { 305 309 }
;; 305 succs { 759 306 }
;; 306 succs { 759 307 }
;; 307 succs { 759 308 }
;; 308 succs { 759 309 }
;; 309 succs { 759 310 }
;; 310 succs { 759 311 }
;; 311 succs { 312 342 }
;; 312 succs { 315 313 }
;; 313 succs { 315 314 }
;; 314 succs { 315 328 }
;; 315 succs { 759 316 }
;; 316 succs { 759 317 }
;; 317 succs { 759 318 }
;; 318 succs { 759 319 }
;; 319 succs { 320 325 }
;; 320 succs { 759 321 }
;; 321 succs { 322 323 }
;; 322 succs { 759 324 }
;; 323 succs { 759 324 }
;; 324 succs { 759 325 }
;; 325 succs { 326 327 }
;; 326 succs { 759 327 }
;; 327 succs { 332 }
;; 328 succs { 759 329 }
;; 329 succs { 759 330 }
;; 330 succs { 759 331 }
;; 331 succs { 759 332 }
;; 332 succs { 342 }
;; 333 succs { 334 338 }
;; 334 succs { 759 335 }
;; 335 succs { 759 336 }
;; 336 succs { 759 337 }
;; 337 succs { 759 338 }
;; 338 succs { 759 339 }
;; 339 succs { 759 340 }
;; 340 succs { 759 341 }
;; 341 succs { 759 342 }
;; 342 succs { 343 }
;; 343 succs { 344 484 }
;; 344 succs { 345 352 }
;; 345 succs { 760 346 }
;; 346 succs { 347 352 }
;; 347 succs { 760 348 }
;; 348 succs { 760 349 }
;; 349 succs { 350 351 }
;; 350 succs { 760 352 }
;; 351 succs { 760 352 }
;; 352 succs { 353 354 }
;; 353 succs { 760 354 }
;; 354 succs { 355 365 }
;; 355 succs { 362 356 }
;; 356 succs { 362 357 }
;; 357 succs { 362 358 }
;; 358 succs { 362 359 }
;; 359 succs { 362 360 }
;; 360 succs { 362 361 }
;; 361 succs { 362 363 }
;; 362 succs { 364 }
;; 363 succs { 364 }
;; 364 succs { 365 }
;; 365 succs { 366 367 }
;; 366 succs { 760 385 }
;; 367 succs { 368 385 }
;; 368 succs { 369 385 }
;; 369 succs { 370 385 }
;; 370 succs { 760 371 }
;; 371 succs { 372 377 }
;; 372 succs { 760 373 }
;; 373 succs { 760 374 }
;; 374 succs { 760 375 }
;; 375 succs { 760 376 }
;; 376 succs { 485 }
;; 377 succs { 760 378 }
;; 378 succs { 760 379 }
;; 379 succs { 760 380 }
;; 380 succs { 760 381 }
;; 381 succs { 760 382 }
;; 382 succs { 760 383 }
;; 383 succs { 760 384 }
;; 384 succs { 760 385 }
;; 385 succs { 386 389 }
;; 386 succs { 388 387 }
;; 387 succs { 388 389 }
;; 388 succs { 390 }
;; 389 succs { 390 }
;; 390 succs { 391 484 }
;; 391 succs { 760 392 }
;; 392 succs { 760 393 }
;; 393 succs { 394 484 }
;; 394 succs { 397 395 }
;; 395 succs { 397 396 }
;; 396 succs { 397 407 }
;; 397 succs { 760 398 }
;; 398 succs { 760 399 }
;; 399 succs { 760 400 }
;; 400 succs { 760 401 }
;; 401 succs { 402 404 }
;; 402 succs { 760 403 }
;; 403 succs { 760 405 }
;; 404 succs { 760 405 }
;; 405 succs { 760 406 }
;; 406 succs { 483 }
;; 407 succs { 408 464 }
;; 408 succs { 409 483 }
;; 409 succs { 760 410 }
;; 410 succs { 760 411 }
;; 411 succs { 760 412 }
;; 412 succs { 760 413 }
;; 413 succs { 760 414 }
;; 414 succs { 760 415 }
;; 415 succs { 416 421 }
;; 416 succs { 417 419 }
;; 417 succs { 760 418 }
;; 418 succs { 760 421 }
;; 419 succs { 760 420 }
;; 420 succs { 760 421 }
;; 421 succs { 760 422 }
;; 422 succs { 760 423 }
;; 423 succs { 424 431 }
;; 424 succs { 760 425 }
;; 425 succs { 426 431 }
;; 426 succs { 760 427 }
;; 427 succs { 428 429 }
;; 428 succs { 760 431 }
;; 429 succs { 430 431 }
;; 430 succs { 760 431 }
;; 431 succs { 432 440 }
;; 432 succs { 760 433 }
;; 433 succs { 434 436 }
;; 434 succs { 435 436 }
;; 435 succs { 437 }
;; 436 succs { 437 }
;; 437 succs { 438 440 }
;; 438 succs { 760 439 }
;; 439 succs { 760 440 }
;; 440 succs { 441 444 }
;; 441 succs { 760 442 }
;; 442 succs { 443 444 }
;; 443 succs { 445 }
;; 444 succs { 445 }
;; 445 succs { 446 454 }
;; 446 succs { 760 447 }
;; 447 succs { 760 448 }
;; 448 succs { 760 449 }
;; 449 succs { 760 450 }
;; 450 succs { 760 451 }
;; 451 succs { 452 454 }
;; 452 succs { 760 453 }
;; 453 succs { 760 454 }
;; 454 succs { 455 461 }
;; 455 succs { 456 457 }
;; 456 succs { 458 }
;; 457 succs { 458 }
;; 458 succs { 760 459 }
;; 459 succs { 460 463 }
;; 460 succs { 463 }
;; 461 succs { 760 462 }
;; 462 succs { 463 }
;; 463 succs { 760 483 }
;; 464 succs { 465 468 }
;; 465 succs { 466 483 }
;; 466 succs { 760 467 }
;; 467 succs { 483 }
;; 468 succs { 469 483 }
;; 469 succs { 483 470 }
;; 470 succs { 483 471 }
;; 471 succs { 483 472 }
;; 472 succs { 483 473 }
;; 473 succs { 483 474 }
;; 474 succs { 483 475 }
;; 475 succs { 483 476 }
;; 476 succs { 760 477 }
;; 477 succs { 760 478 }
;; 478 succs { 760 479 }
;; 479 succs { 760 480 }
;; 480 succs { 760 481 }
;; 481 succs { 482 483 }
;; 482 succs { 760 483 }
;; 483 succs { 484 }
;; 484 succs { 486 }
;; 485 succs { 486 }
;; 486 succs { 487 488 }
;; 487 succs { 489 }
;; 488 succs { 489 }
;; 489 succs { 490 }
;; 490 succs { 114 491 }
;; 491 succs { 492 528 }
;; 492 succs { 493 528 }
;; 493 succs { 762 494 }
;; 494 succs { 762 495 }
;; 495 succs { 762 496 }
;; 496 succs { 762 497 }
;; 497 succs { 761 498 }
;; 498 succs { 508 }
;; 499 succs { 762 500 }
;; 500 succs { 506 }
;; 501 succs { 502 505 }
;; 502 succs { 762 503 }
;; 503 succs { 504 505 }
;; 504 succs { 762 505 }
;; 505 succs { 506 }
;; 506 succs { 501 507 }
;; 507 succs { 508 }
;; 508 succs { 499 509 }
;; 509 succs { 523 }
;; 510 succs { 762 511 }
;; 511 succs { 512 522 }
;; 512 succs { 762 513 }
;; 513 succs { 762 514 }
;; 514 succs { 762 515 }
;; 515 succs { 762 516 }
;; 516 succs { 762 517 }
;; 517 succs { 762 518 }
;; 518 succs { 762 519 }
;; 519 succs { 520 521 }
;; 520 succs { 762 521 }
;; 521 succs { 762 522 }
;; 522 succs { 523 }
;; 523 succs { 510 524 }
;; 524 succs { 525 526 }
;; 525 succs { 526 }
;; 526 succs { 528 }
;; 527 succs { 528 }
;; 528 succs { 529 548 }
;; 529 succs { 530 548 }
;; 530 succs { 763 531 }
;; 531 succs { 532 547 }
;; 532 succs { 763 533 }
;; 533 succs { 763 534 }
;; 534 succs { 763 535 }
;; 535 succs { 546 }
;; 536 succs { 763 537 }
;; 537 succs { 763 538 }
;; 538 succs { 763 539 }
;; 539 succs { 763 540 }
;; 540 succs { 763 541 }
;; 541 succs { 763 542 }
;; 542 succs { 763 543 }
;; 543 succs { 763 544 }
;; 544 succs { 763 545 }
;; 545 succs { 546 }
;; 546 succs { 536 547 }
;; 547 succs { 548 }
;; 548 succs { 549 581 }
;; 549 succs { 771 550 }
;; 550 succs { 771 551 }
;; 551 succs { 771 552 }
;; 552 succs { 771 553 }
;; 553 succs { 555 554 }
;; 554 succs { 555 581 }
;; 555 succs { 556 581 }
;; 556 succs { 771 557 }
;; 557 succs { 771 558 }
;; 558 succs { 771 559 }
;; 559 succs { 560 581 }
;; 560 succs { 769 561 }
;; 561 succs { 769 562 }
;; 562 succs { 768 563 }
;; 563 succs { 579 }
;; 564 succs { 767 565 }
;; 565 succs { 566 578 }
;; 566 succs { 567 570 }
;; 567 succs { 766 568 }
;; 568 succs { 766 569 }
;; 569 succs { 570 }
;; 570 succs { 571 573 }
;; 571 succs { 766 572 }
;; 572 succs { 766 574 }
;; 573 succs { 766 574 }
;; 574 succs { 766 575 }
;; 575 succs { 766 576 }
;; 576 succs { 766 577 }
;; 577 succs { 578 }
;; 578 succs { 579 }
;; 579 succs { 564 580 }
;; 580 succs { 581 }
;; 581 succs { 582 666 }
;; 582 succs { 770 583 }
;; 583 succs { 770 584 }
;; 584 succs { 585 664 }
;; 585 succs { 586 587 }
;; 586 succs { 588 }
;; 587 succs { 588 }
;; 588 succs { 663 }
;; 589 succs { 658 }
;; 590 succs { 770 591 }
;; 591 succs { 770 592 }
;; 592 succs { 593 657 }
;; 593 succs { 770 594 }
;; 594 succs { 595 657 }
;; 595 succs { 596 601 }
;; 596 succs { 770 597 }
;; 597 succs { 770 598 }
;; 598 succs { 770 599 }
;; 599 succs { 600 601 }
;; 600 succs { 657 }
;; 601 succs { 770 602 }
;; 602 succs { 770 603 }
;; 603 succs { 604 632 }
;; 604 succs { 770 605 }
;; 605 succs { 770 606 }
;; 606 succs { 607 621 }
;; 607 succs { 608 621 }
;; 608 succs { 609 621 }
;; 609 succs { 770 610 }
;; 610 succs { 611 618 }
;; 611 succs { 616 }
;; 612 succs { 770 613 }
;; 613 succs { 614 615 }
;; 614 succs { 615 }
;; 615 succs { 616 }
;; 616 succs { 770 617 }
;; 617 succs { 612 618 }
;; 618 succs { 770 619 }
;; 619 succs { 620 621 }
;; 620 succs { 657 }
;; 621 succs { 622 628 }
;; 622 succs { 770 623 }
;; 623 succs { 770 624 }
;; 624 succs { 770 625 }
;; 625 succs { 626 628 }
;; 626 succs { 627 628 }
;; 627 succs { 657 }
;; 628 succs { 629 632 }
;; 629 succs { 770 630 }
;; 630 succs { 631 632 }
;; 631 succs { 657 }
;; 632 succs { 770 633 }
;; 633 succs { 770 634 }
;; 634 succs { 635 657 }
;; 635 succs { 770 636 }
;; 636 succs { 770 637 }
;; 637 succs { 638 639 }
;; 638 succs { 770 639 }
;; 639 succs { 770 640 }
;; 640 succs { 770 641 }
;; 641 succs { 770 642 }
;; 642 succs { 770 643 }
;; 643 succs { 770 644 }
;; 644 succs { 770 645 }
;; 645 succs { 770 646 }
;; 646 succs { 770 647 }
;; 647 succs { 770 648 }
;; 648 succs { 770 649 }
;; 649 succs { 770 650 }
;; 650 succs { 770 651 }
;; 651 succs { 770 652 }
;; 652 succs { 770 653 }
;; 653 succs { 654 655 }
;; 654 succs { 770 656 }
;; 655 succs { 770 656 }
;; 656 succs { 770 657 }
;; 657 succs { 658 }
;; 658 succs { 590 659 }
;; 659 succs { 660 661 }
;; 660 succs { 662 }
;; 661 succs { 662 }
;; 662 succs { 663 }
;; 663 succs { 589 664 }
;; 664 succs { 770 665 }
;; 665 succs { 666 }
;; 666 succs { 771 667 }
;; 667 succs { 669 }
;; 668 succs { 669 }
;; 669 succs { 670 681 }
;; 670 succs { 671 678 }
;; 671 succs { 672 675 }
;; 672 succs { 774 673 }
;; 673 succs { 774 674 }
;; 674 succs { 774 681 }
;; 675 succs { 774 676 }
;; 676 succs { 774 677 }
;; 677 succs { 774 681 }
;; 678 succs { 774 679 }
;; 679 succs { 774 680 }
;; 680 succs { 774 681 }
;; 681 succs { 682 684 }
;; 682 succs { 683 684 }
;; 683 succs { 684 }
;; 684 succs { 685 693 }
;; 685 succs { 774 686 }
;; 686 succs { 774 687 }
;; 687 succs { 774 688 }
;; 688 succs { 689 690 }
;; 689 succs { 774 690 }
;; 690 succs { 691 692 }
;; 691 succs { 774 692 }
;; 692 succs { 774 693 }
;; 693 succs { 694 708 }
;; 694 succs { 695 698 }
;; 695 succs { 774 696 }
;; 696 succs { 774 697 }
;; 697 succs { 774 740 }
;; 698 succs { 699 704 }
;; 699 succs { 774 700 }
;; 700 succs { 701 702 }
;; 701 succs { 774 703 }
;; 702 succs { 774 703 }
;; 703 succs { 774 740 }
;; 704 succs { 705 740 }
;; 705 succs { 774 706 }
;; 706 succs { 774 707 }
;; 707 succs { 774 740 }
;; 708 succs { 709 712 }
;; 709 succs { 774 710 }
;; 710 succs { 774 711 }
;; 711 succs { 774 740 }
;; 712 succs { 713 720 }
;; 713 succs { 774 714 }
;; 714 succs { 774 715 }
;; 715 succs { 774 716 }
;; 716 succs { 774 717 }
;; 717 succs { 718 719 }
;; 718 succs { 774 719 }
;; 719 succs { 774 740 }
;; 720 succs { 774 721 }
;; 721 succs { 774 722 }
;; 722 succs { 723 740 }
;; 723 succs { 724 728 }
;; 724 succs { 774 725 }
;; 725 succs { 774 726 }
;; 726 succs { 774 727 }
;; 727 succs { 774 740 }
;; 728 succs { 729 735 }
;; 729 succs { 774 730 }
;; 730 succs { 774 731 }
;; 731 succs { 732 733 }
;; 732 succs { 774 734 }
;; 733 succs { 774 734 }
;; 734 succs { 774 740 }
;; 735 succs { 736 740 }
;; 736 succs { 774 737 }
;; 737 succs { 774 738 }
;; 738 succs { 774 739 }
;; 739 succs { 774 740 }
;; 740 succs { 774 741 }
;; 741 succs { 742 }
;; 742 succs { 745 743 }
;; 743 succs { 744 }
;; 744 succs { 746 }
;; 745 succs { 747 }
;; 746 succs { 747 }
;; 747 succs { 748 749 }
;; 748 succs { 750 }
;; 749 succs { 750 }
;; 750 succs { 751 }
;; 751 succs { 30 752 }
;; 752 succs { 1 }
;; 753 succs { 754 }
;; 754 succs { 755 }
;; 755 succs { 778 }
;; 756 succs { 773 }
;; 757 succs { 758 }
;; 758 succs { 760 }
;; 759 succs { 760 }
;; 760 succs { 771 }
;; 761 succs { 762 }
;; 762 succs { 771 }
;; 763 succs { 764 }
;; 764 succs { 765 }
;; 765 succs { 771 }
;; 766 succs { 767 }
;; 767 succs { 768 }
;; 768 succs { 769 }
;; 769 succs { 771 }
;; 770 succs { 771 }
;; 771 succs { 772 }
;; 772 succs { 773 }
;; 773 succs { 774 }
;; 774 succs { 775 }
;; 775 succs { 776 }
;; 776 succs { 777 }
;; 777 succs { 778 }
;; 778 succs { }
void checkPointerConstraint (union tree_node * function_tree, struct ptb * ptable, struct gimple_array * user_tmp, union tree_node * checkTree, int calleetype)
{
  int finally_tmp.1844;
  bool D.255100;
  const char * D.255095;
  union tree_node * D.255094;
  struct value_type & D.255093;
  struct value_type & D.255092;
  struct value_type & D.255091;
  struct value_type & D.255090;
  struct value_type & D.255089;
  bool D.255088;
  struct value_type & D.255087;
  union tree_node * D.255086;
  union tree_node * D.255085;
  union tree_node * D.255084;
  struct value_type & D.255083;
  union tree_node * D.255082;
  unsigned int D.255081;
  union tree_node * D.255080;
  unsigned int D.255079;
  union tree_node * D.255078;
  struct value_type & D.255077;
  unsigned int D.255076;
  struct value_type & D.255075;
  union tree_node * D.255074;
  union tree_node * D.255073;
  struct value_type & D.255072;
  struct value_type & D.255071;
  union tree_node * D.255070;
  struct value_type & D.255069;
  struct gimple_array * D.255068;
  const char * D.255063;
  union tree_node * D.255062;
  bool D.255061;
  struct function_free_array * D.255060;
  struct function_free_array * D.255059;
  const char * D.255055;
  struct function_relate_array * D.255054;
  struct function_relate_array * D.255053;
  const char * D.255051;
  int * D.255050;
  int * D.255049;
  void * D.255047;
  struct function_relate_array * D.255046;
  union tree_node * D.255042;
  union tree_node * D.255041;
  union tree_node * D.255040;
  union tree_node * D.255039;
  unsigned int D.255038;
  union tree_node * D.255037;
  unsigned int D.255036;
  union tree_node * D.255035;
  unsigned int D.255034;
  union tree_node * D.255033;
  union tree_node * D.255032;
  union tree_node * D.255031;
  unsigned int D.255030;
  const char * D.255029;
  union tree_node * D.255028;
  union tree_node * D.255027;
  const char * D.255026;
  union tree_node * D.255025;
  union tree_node * D.255024;
  const char * D.255022;
  union tree_node * D.255021;
  union tree_node * D.255020;
  const char * D.255019;
  union tree_node * D.255018;
  union tree_node * D.255017;
  union tree_node * D.255016;
  union tree_node * D.255015;
  const char * D.255014;
  const char * D.255013;
  const char * D.255012;
  union tree_node * D.255011;
  union tree_node * D.255010;
  union tree_node * D.255009;
  union tree_node * D.255008;
  const char * D.255007;
  const char * D.255006;
  const char * D.255005;
  union tree_node * D.255004;
  const char * D.255003;
  union tree_node * D.255002;
  union tree_node * D.255001;
  union tree_node * D.255000;
  union tree_node * D.254999;
  union tree_node * D.254998;
  bool D.254997;
  struct function * D.254996;
  bool D.254994;
  bool D.254992;
  bool D.254991;
  bool D.254990;
  const char * D.254989;
  union tree_node * D.254988;
  union tree_node * D.254987;
  union tree_node * D.254986;
  struct function * D.254985;
  struct function * D.254984;
  struct function_relate_array * D.254983;
  struct function_relate_array * D.254982;
  void * D.254980;
  struct gimple_array * D.254979;
  union tree_node * D.254978;
  const char * D.254977;
  union tree_node * D.254976;
  union tree_node * D.254975;
  const char * D.254974;
  const char * D.254973;
  union tree_node * D.254972;
  union tree_node * D.254971;
  const char * D.254970;
  struct function * D.254969;
  const char * D.254968;
  struct function_return_array * D.254964;
  const char * D.254963;
  const char * D.254962;
  union tree_node * arg;
  int k;
  struct gimple * def_stmt;
  union tree_node * callarg;
  int i;
  struct gimple_array start;
  struct free_type free_type;
  int k;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  long unsigned int x;
  int k;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  long unsigned int x;
  struct gimple * def_stmt;
  int max_bb;
  int max_bb;
  int j;
  int i;
  struct iterator it_i;
  struct hash_map * function_maxbasicblock_collect;
  int freecount;
  union tree_node * findtree;
  union tree_node * findtree;
  const char * name;
  struct gimple * def_stmt;
  struct gimple * use_stmt;
  struct relate_type relate_type;
  struct gimple * finalstmt;
  struct gimple * tmp;
  struct edge_iterator ei2;
  struct edge_def * e2;
  int check;
  struct edge_iterator ei;
  struct edge_def * e;
  struct basic_block_def * bb;
  int k;
  int succ_havereturn;
  struct free_type free_type;
  int lastbasicblock;
  struct function_relate_array maxbb_array;
  struct vector maxbb_type_array;
  struct gimple * laststmt;
  union tree_node * lastfucntion;
  struct hash_map * function_maxbb_collect;
  const char * name;
  const char * name;
  struct vector earlyend;
  struct gimple * def_stmt;
  const char * name;
  struct vector free_array;
  int init_check_table_stmt;
  int find_mallocstmt;
  int is_pthread_detched;
  int find_pthread_join;
  int find_pthread_detched;
  int find_retheapstmt;
  int find_freestmt;
  int find_phistmt;
  int childptable_type;
  int ptable_type;
  int find_Looserulesfreestmt;
  int k;
  int find_thread_count;
  int find_thread;
  struct vector funcalleeRetTypearray;
  struct function_return_array find_fun_array;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * user_tmp2;
  struct gimple_array * used_stmt2;
  struct gimple_array * used_stmt;
  struct gimple_array start2;
  struct gimple_array start;
  struct gimple * u_stmt2;
  struct gimple * u_stmt;
  union tree_node * iftmp.1843;
  bool retval.1820;
  struct gimple * iftmp.1765;
  bool retval.1764;
  bool retval.1757;
  bool retval.1754;
  bool retval.1753;
  bool retval.1752;
  bool retval.1751;
  bool retval.1750;
  bool retval.1749;
  bool retval.1747;
  bool retval.1746;
  bool retval.1745;
  bool retval.1744;
  bool retval.1743;
  bool retval.1742;
  bool retval.1741;
  bool retval.1740;
  struct gimple * iftmp.1739;
  bool retval.1735;
  bool retval.1731;
  bool retval.1730;
  bool retval.1727;
  bool retval.1720;
  bool retval.1711;
  struct hash_map * function_maxbb_collect.1707;
  struct iterator D.201572;
  bool retval.1706;
  bool retval.1704;
  bool retval.1698;
  bool retval.1697;
  bool retval.1696;
  bool retval.1695;
  bool retval.1694;
  void * D.201438;
  struct gimple * iftmp.1691;
  const char[16] * iftmp.1679;
  bool iftmp.1675;
  bool retval.1674;
  bool iftmp.1673;
  bool retval.1672;
  bool retval.1669;
  bool retval.1668;
  bool retval.1666;
  bool retval.1665;
  bool iftmp.1643;
  bool retval.1642;
  bool retval.1633;
  bool retval.1632;
  bool retval.1622;
  bool retval.1619;
  bool retval.1618;
  bool retval.1599;
  bool iftmp.1593;
  bool retval.1592;
  bool retval.1591;
  bool iftmp.1568;
  bool retval.1567;
  bool retval.1566;
  bool retval.1554;
  bool retval.1545;
  bool retval.1544;
  bool retval.1543;
  bool retval.1542;
  bool retval.1541;
  bool retval.1540;
  bool retval.1535;
  bool retval.1533;
  bool retval.1532;
  bool retval.1531;
  bool retval.1530;
  bool retval.1517;
  bool retval.1515;
  bool iftmp.1511;
  bool retval.1510;
  bool retval.1509;
  bool iftmp.1508;
  bool retval.1507;
  bool retval.1506;
  bool retval.1505;
  struct gimple * iftmp.1503;
  bool retval.1498;
  void * D.201316;
  bool retval.1485;
  bool retval.1484;
  bool retval.1477;
  bool retval.1476;
  bool retval.1471;
  union tree_node * iftmp.1470;
  bool retval.1466;
  bool retval.1463;
  bool retval.1454;

  <bb 2> :
  gimple_array::gimple_array (&start);
  gimple_array::gimple_array (&start2);
  start.stmt = 0B;
  start2.stmt = 0B;
  used_stmt = &start;
  used_stmt2 = &start;
  user_tmp2 = user_tmp;
  table_temp = ptable;
  goto <bb 4>; [INV]

  <bb 3> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 4> :
  _1 = std::vector<tree_node*>::size (&traceStack);
  retval.1454 = _1 != 0;
  if (retval.1454 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  function_tree.1455_2 = function_tree;
  D.254962 = get_name (function_tree.1455_2);

  <bb 6> :
  _3 = D.254962;
  stderr.1456_4 = stderr;
  fprintf (stderr.1456_4, "\x1b[40;42m =======pre_check_funciton:%s========= \x1b[0m\n", _3);

  <bb 7> :
  calleetype.1457_5 = (unsigned int) calleetype;
  FUNCITON_THREAD.1458_6 = FUNCITON_THREAD;
  if (calleetype.1457_5 == FUNCITON_THREAD.1458_6)
    goto <bb 8>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 8> :
  threadmod.1459_7 = threadmod;
  _8 = (int) threadmod.1459_7;
  if (_8 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 9> :
  function_return_array::function_return_array (&find_fun_array);
  function_tree.1460_9 = function_tree;
  D.254963 = get_name (function_tree.1460_9);

  <bb 10> :
  _10 = D.254963;
  stderr.1461_11 = stderr;
  fprintf (stderr.1461_11, "\x1b[40;42m =======thread job funciton:%s========= \x1b[0m\n", _10);

  <bb 11> :
  function_return_collect.1462_12 = function_return_collect;
  D.254964 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1462_12, &function_tree);

  <bb 12> :
  _13 = D.254964;
  function_return_array::operator= (&find_fun_array, _13);

  <bb 13> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 14> :
  find_thread = 0;
  find_thread_count = 0;
  k = 0;
  goto <bb 21>; [INV]

  <bb 15> :
  _14 = (long unsigned int) k;
  _15 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _14);
  _16 = _15->return_type_stmt_num;
  _17 = (unsigned int) _16;
  FUNCITON_THREAD.1464_18 = FUNCITON_THREAD;
  retval.1463 = _17 == FUNCITON_THREAD.1464_18;
  if (retval.1463 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  _19 = (long unsigned int) k;
  _20 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _19);
  _21 = _20->return_type_stmt_num;
  stderr.1465_22 = stderr;
  fprintf (stderr.1465_22, "\x1b[40;44m ======= print pthread lock stmt %d ========  \x1b[0m\n", _21);

  <bb 17> :
  _23 = (long unsigned int) k;
  _24 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _23);
  _25 = _24->stmt;
  debug_gimple_stmt (_25);

  <bb 18> :
  _26 = (long unsigned int) k;
  _27 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _26);
  _28 = _27->stmt;
  _29 = gimple_location_safe (_28);
  warning_at (_29, 0, "use location");

  <bb 19> :
  find_thread_count = find_thread_count + 1;

  <bb 20> :
  k = k + 1;

  <bb 21> :
  _30 = (long unsigned int) k;
  _31 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.1466 = _30 < _31;
  if (retval.1466 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  stderr.1467_32 = stderr;
  fprintf (stderr.1467_32, "\x1b[40;42m =======thread job funciton lock count :%d========= \x1b[0m\n", find_thread_count);

  <bb 23> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 24> :
  function_tree.1468_33 = function_tree;
  D.254968 = get_name (function_tree.1468_33);

  <bb 25> :
  _34 = D.254968;
  stderr.1469_35 = stderr;
  fprintf (stderr.1469_35, "\x1b[40;42m =======start_check_funciton:%s========= \x1b[0m\n", _34);

  <bb 26> :
  if (table_temp != 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  iftmp.1470 = table_temp->target;
  goto <bb 29>; [INV]

  <bb 28> :
  iftmp.1470 = 0B;

  <bb 29> :
  t = iftmp.1470;
  goto <bb 751>; [INV]

  <bb 30> :
  find_Looserulesfreestmt = 0;
  ptable_type = 0;
  childptable_type = 0;
  find_phistmt = 0;
  find_freestmt = 0;
  find_retheapstmt = -2;
  find_pthread_detched = 0;
  find_pthread_join = 0;
  is_pthread_detched = 0;
  find_mallocstmt = 0;
  init_check_table_stmt = 0;
  _36 = table_temp->node;
  D.254969 = cgraph_node::get_fun (_36);

  <bb 31> :
  _37 = D.254969;
  _38 = _37->decl;
  function_tree.1472_39 = function_tree;
  retval.1471 = _38 == function_tree.1472_39;
  if (retval.1471 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 746>; [INV]

  <bb 32> :
  _40 = table_temp->target;
  if (_40 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 746>; [INV]

  <bb 33> :
  std::vector<free_type>::vector (&free_array);
  find_phistmt = 0;
  find_mallocstmt = find_phistmt;
  find_freestmt = find_mallocstmt;
  stderr.1473_41 = stderr;
  __builtin_fwrite ("\ndot graph START\n", 1, 17, stderr.1473_41);

  <bb 34> :
  stderr.1474_42 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1474_42);

  <bb 35> :
  name = "";
  _43 = table_temp->target;
  _44 = _43->base.code;
  if (_44 == 26)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _45 = table_temp->target;
  _46 = _45->base.code;
  if (_46 == 32)
    goto <bb 37>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 37> :
  stderr.1475_47 = stderr;
  __builtin_fwrite ("\n ================== collect possiable invalid ================== \n", 1, 67, stderr.1475_47);

  <bb 38> :
  _48 = table_temp->target;
  debug_tree (_48);

  <bb 39> :
  // predicted unlikely by continue predictor.
  finally_tmp.1844 = 0;
  goto <bb 742>; [INV]

  <bb 40> :
  _49 = table_temp->target;
  def_stmt = _49->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 41>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 41> :
  _50 = table_temp->target;
  _51 = _50->base.code;
  if (_51 != 36)
    goto <bb 42>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 42> :
  _52 = table_temp->target;
  _53 = _52->base.code;
  if (_53 != 38)
    goto <bb 43>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 43> :
  _54 = table_temp->target;
  debug_tree (_54);

  <bb 44> :
  if (def_stmt != 0B)
    goto <bb 45>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 45> :
  _55 = table_temp->target;
  debug_tree (_55);

  <bb 46> :
  _56 = table_temp->target;
  _57 = _56->base.code;
  if (_57 == 33)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _58 = table_temp->target;
  D.254970 = get_name (_58);

  <bb 48> :
  name = D.254970;
  goto <bb 57>; [INV]

  <bb 49> :
  _59 = table_temp->target;
  _60 = _59->base.code;
  if (_60 != 131)
    goto <bb 50>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 50> :
  _61 = table_temp->target;
  _62 = _61->base.code;
  if (_62 != 0)
    goto <bb 51>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 51> :
  retval.1476 = is_gimple_call (def_stmt);
  if (retval.1476 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 52> :
  D.254971 = gimple_call_fndecl (def_stmt);

  <bb 53> :
  _63 = D.254971;
  retval.1477 = _63 != 0B;
  if (retval.1477 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 54> :
  D.254972 = gimple_call_fndecl (def_stmt);

  <bb 55> :
  _64 = D.254972;
  D.254973 = get_name (_64);

  <bb 56> :
  name = D.254973;

  <bb 57> :
  stderr.1478_65 = stderr;
  __builtin_fwrite ("\n ================== pre trace ptable ================== \n", 1, 58, stderr.1478_65);

  <bb 58> :
  if (def_stmt != 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 59> :
  _66 = table_temp->target;
  _67 = _66->base.code;
  if (_67 == 33)
    goto <bb 60>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 60> :
  _68 = table_temp->target;
  D.254974 = get_name (_68);

  <bb 61> :
  name = D.254974;
  stderr.1479_69 = stderr;
  fprintf (stderr.1479_69, "trace fucntion name:%s \n", name);

  <bb 62> :
  _70 = table_temp->target;
  RET_HEAP_OBJECT.1480_71 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1481_72 = (int) RET_HEAP_OBJECT.1480_71;
  _73 = table_temp->target;
  trace_function_path (_73, RET_HEAP_OBJECT.1481_72, _70, &find_retheapstmt);

  <bb 63> :
  find_retheapstmt.1482_74 = find_retheapstmt;
  if (find_retheapstmt.1482_74 > 0)
    goto <bb 64>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 64> :
  stderr.1483_75 = stderr;
  __builtin_fwrite ("some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n", 1, 86, stderr.1483_75);
  goto <bb 77>; [INV]

  <bb 65> :
  _76 = table_temp->target;
  _77 = _76->base.code;
  if (_77 != 131)
    goto <bb 66>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 66> :
  _78 = table_temp->target;
  _79 = _78->base.code;
  if (_79 != 38)
    goto <bb 67>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 67> :
  retval.1484 = is_gimple_call (def_stmt);
  if (retval.1484 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 68> :
  D.254975 = gimple_call_fn (def_stmt);

  <bb 69> :
  _80 = D.254975;
  retval.1485 = _80 != 0B;
  if (retval.1485 != 0)
    goto <bb 70>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 70> :
  D.254976 = gimple_call_fn (def_stmt);

  <bb 71> :
  _81 = D.254976;
  D.254977 = get_name (_81);

  <bb 72> :
  name = D.254977;
  stderr.1486_82 = stderr;
  fprintf (stderr.1486_82, "trace fucntion name:%s \n", name);

  <bb 73> :
  _83 = table_temp->target;
  RET_HEAP_OBJECT.1487_84 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1488_85 = (int) RET_HEAP_OBJECT.1487_84;
  D.254978 = gimple_call_fndecl (def_stmt);

  <bb 74> :
  _86 = D.254978;
  trace_function_path (_86, RET_HEAP_OBJECT.1488_85, _83, &find_retheapstmt);

  <bb 75> :
  find_retheapstmt.1489_87 = find_retheapstmt;
  if (find_retheapstmt.1489_87 > 0)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  stderr.1490_88 = stderr;
  __builtin_fwrite ("some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n", 1, 86, stderr.1490_88);

  <bb 77> :
  stderr.1491_89 = stderr;
  __builtin_fwrite ("\n ================== pre trace ptable finish================== \n", 1, 64, stderr.1491_89);

  <bb 78> :
  goto <bb 81>; [INV]

  <bb 79> :
  _90 = table_temp->target;
  debug_tree (_90);

  <bb 80> :
  stderr.1492_91 = stderr;
  __builtin_fwrite ("\n ================== this stmt hava call fucntion ================== \n", 1, 70, stderr.1492_91);

  <bb 81> :

  <bb 82> :
  if (name != 0B)
    goto <bb 83>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 83> :
  _92 = strcmp (name, "realloc");
  if (_92 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 84> :
  _93 = strcmp (name, "malloc");
  if (_93 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 85> :
  _94 = strcmp (name, "xmalloc");
  if (_94 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  _95 = strcmp (name, "calloc");
  if (_95 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 87> :
  _96 = strcmp (name, "xcalloc");
  if (_96 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  _97 = strcmp (name, "strdup");
  if (_97 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 89> :
  _98 = strcmp (name, "xstrdup");
  if (_98 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 90> :
  IS_MALLOC_FUCNTION.1493_99 = IS_MALLOC_FUCNTION;
  ptable_type = (int) IS_MALLOC_FUCNTION.1493_99;
  stderr.1494_100 = stderr;
  fprintf (stderr.1494_100, "is Reserved word function :%s\n", name);

  <bb 91> :
  goto <bb 94>; [INV]

  <bb 92> :
  IS_OTHRER_FUCNTION.1495_101 = IS_OTHRER_FUCNTION;
  ptable_type = (int) IS_OTHRER_FUCNTION.1495_101;
  _102 = table_temp->target;
  debug_tree (_102);

  <bb 93> :
  stderr.1496_103 = stderr;
  fprintf (stderr.1496_103, "is Other function %s\n", name);

  <bb 94> :

  <bb 95> :
  treeGimpleArray.1497_104 = treeGimpleArray;
  _105 = &table_temp->target;
  D.254979 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1497_104, _105);

  <bb 96> :
  user_tmp = D.254979;
  std::vector<basic_block_def*>::vector (&earlyend);
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 97>; [INV]
  else
    goto <bb 668>; [INV]

  <bb 97> :
  D.254980 = operator new (48);

  <bb 98> :
  D.201316 = D.254980;
  hash_map<tree_node*, function_relate_array>::hash_map (D.201316, 13, 0, 1, 0);

  <bb 99> :
  function_maxbb_collect = D.201316;
  lastfucntion = 0B;
  laststmt = 0B;
  std::vector<relate_type>::vector (&maxbb_type_array);
  function_relate_array::function_relate_array (&maxbb_array);
  _106 = &table_temp->target;
  D.254982 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _106);

  <bb 100> :
  _107 = D.254982;
  retval.1498 = _107 == 0B;
  if (retval.1498 != 0)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  std::vector<relate_type>::operator= (&maxbb_array.relate_type_array, &maxbb_type_array);
  goto <bb 105>; [INV]

  <bb 102> :
  _108 = &table_temp->target;
  D.254983 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _108);

  <bb 103> :
  _109 = D.254983;
  function_relate_array::operator= (&maxbb_array, _109);

  <bb 104> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 105> :
  lastbasicblock = -1;
  _110 = table_temp->swap_type;
  _111 = (unsigned int) _110;
  FUNCITON_THREAD.1499_112 = FUNCITON_THREAD;
  if (_111 == FUNCITON_THREAD.1499_112)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  stderr.1500_113 = stderr;
  __builtin_fwrite (" \n Start is Pthread Job Collect  \n", 1, 34, stderr.1500_113);
  goto <bb 108>; [INV]

  <bb 107> :
  stderr.1501_114 = stderr;
  __builtin_fwrite (" \n Start check Pointer Collect  \n", 1, 33, stderr.1501_114);

  <bb 108> :
  stderr.1502_115 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1502_115);

  <bb 109> :
  _116 = user_tmp->size;
  if (_116 > 0)
    goto <bb 110>; [INV]
  else
    goto <bb 527>; [INV]

  <bb 110> :
  if (user_tmp != 0B)
    goto <bb 111>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 111> :
  iftmp.1503 = user_tmp->stmt;
  goto <bb 113>; [INV]

  <bb 112> :
  iftmp.1503 = 0B;

  <bb 113> :
  u_stmt = iftmp.1503;
  goto <bb 490>; [INV]

  <bb 114> :
  prebranchexit.1504_117 = prebranchexit;
  if (prebranchexit.1504_117 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 182>; [INV]

  <bb 115> :
  _118 = table_temp->node;
  D.254984 = cgraph_node::get_fun (_118);

  <bb 116> :
  _119 = D.254984;
  push_cfun (_119);

  <bb 117> :
  calculate_dominance_info (1);

  <bb 118> :
  succ_havereturn = 0;
  k = 0;
  goto <bb 180>; [INV]

  <bb 119> :
  _120 = table_temp->node;
  D.254985 = cgraph_node::get_fun (_120);

  <bb 120> :
  _121 = D.254985;
  _122 = _121->cfg;
  _123 = _122->x_entry_block_ptr;
  bb = _123->next_bb;
  goto <bb 177>; [INV]

  <bb 121> :
  _124 = &bb->succs;
  ei = ei_start_1 (_124);
  goto <bb 174>; [INV]

  <bb 122> :
  name = "";
  _125 = (long unsigned int) k;
  _126 = std::vector<return_type>::operator[] (&global_ret_type_array, _125);
  _127 = _126->stmt;
  D.254986 = gimple_call_lhs (_127);

  <bb 123> :
  _128 = D.254986;
  retval.1505 = _128 == 0B;
  if (retval.1505 != 0)
    goto <bb 124>; [INV]
  else
    goto <bb 129>; [INV]

  <bb 124> :
  _129 = (long unsigned int) k;
  _130 = std::vector<return_type>::operator[] (&global_ret_type_array, _129);
  _131 = _130->stmt;
  D.254987 = gimple_call_fn (_131);

  <bb 125> :
  _132 = D.254987;
  retval.1506 = _132 != 0B;
  if (retval.1506 != 0)
    goto <bb 126>; [INV]
  else
    goto <bb 129>; [INV]

  <bb 126> :
  _133 = (long unsigned int) k;
  _134 = std::vector<return_type>::operator[] (&global_ret_type_array, _133);
  _135 = _134->stmt;
  D.254988 = gimple_call_fn (_135);

  <bb 127> :
  _136 = D.254988;
  D.254989 = get_name (_136);

  <bb 128> :
  name = D.254989;

  <bb 129> :
  if (name != 0B)
    goto <bb 131>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 130> :
  _137 = (long unsigned int) k;
  _138 = std::vector<return_type>::operator[] (&global_ret_type_array, _137);
  _139 = _138->stmt;
  _140 = gimple_code (_139);
  if (_140 == 10)
    goto <bb 131>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 131> :
  iftmp.1508 = 1;
  goto <bb 133>; [INV]

  <bb 132> :
  iftmp.1508 = 0;

  <bb 133> :
  retval.1507 = iftmp.1508;
  if (retval.1507 != 0)
    goto <bb 134>; [INV]
  else
    goto <bb 173>; [INV]

  <bb 134> :
  check = 0;
  if (name != 0B)
    goto <bb 135>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 135> :
  _141 = strcmp (name, "exit");
  if (_141 == 0)
    goto <bb 136>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 136> :
  check = 1;

  <bb 137> :
  _142 = (long unsigned int) k;
  _143 = std::vector<return_type>::operator[] (&global_ret_type_array, _142);
  _144 = _143->stmt;
  _145 = gimple_code (_144);
  retval.1509 = _145 == 10;
  if (retval.1509 != 0)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  check = 1;

  <bb 139> :
  if (check == 1)
    goto <bb 140>; [INV]
  else
    goto <bb 173>; [INV]

  <bb 140> :
  _146 = bb->index;
  _147 = gimple_bb (u_stmt);
  _148 = _147->index;
  if (_146 == _148)
    goto <bb 142>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 141> :
  e.1512_149 = e;
  _150 = e.1512_149->dest;
  _151 = _150->index;
  _152 = gimple_bb (u_stmt);
  _153 = _152->index;
  if (_151 == _153)
    goto <bb 142>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 142> :
  iftmp.1511 = 1;
  goto <bb 144>; [INV]

  <bb 143> :
  iftmp.1511 = 0;

  <bb 144> :
  retval.1510 = iftmp.1511;
  if (retval.1510 != 0)
    goto <bb 145>; [INV]
  else
    goto <bb 173>; [INV]

  <bb 145> :
  _154 = (long unsigned int) k;
  _155 = std::vector<return_type>::operator[] (&global_ret_type_array, _154);
  tmp = _155->stmt;
  _156 = &bb->succs;
  ei2 = ei_start_1 (_156);
  goto <bb 170>; [INV]

  <bb 146> :
  e.1513_157 = e;
  _158 = e.1513_157->dest;
  _159 = _158->index;
  e2.1514_160 = e2;
  _161 = e2.1514_160->dest;
  _162 = _161->index;
  if (_159 != _162)
    goto <bb 147>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 147> :
  e2.1516_163 = e2;
  _164 = e2.1516_163->dest;
  _165 = gimple_bb (tmp);
  D.254990 = dominated_by_p (1, _165, _164);

  <bb 148> :
  retval.1515 = D.254990;
  if (retval.1515 != 0)
    goto <bb 149>; [INV]
  else
    goto <bb 169>; [INV]

  <bb 149> :
  _166 = gimple_bb (tmp);
  cfun.1518_167 = cfun;
  _168 = cfun.1518_167->cfg;
  _169 = _168->x_exit_block_ptr;
  _170 = _169->prev_bb;
  D.254991 = dominated_by_p (1, _170, _166);

  <bb 150> :
  _171 = D.254991;
  retval.1517 = ~_171;
  if (retval.1517 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 169>; [INV]

  <bb 151> :
  stderr.1519_172 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1519_172);

  <bb 152> :
  stderr.1520_173 = stderr;
  __builtin_fwrite ("\x1b[40;31m    branch possiable have return or exit  \x1b[0m\n", 1, 55, stderr.1520_173);

  <bb 153> :
  debug_gimple_stmt (u_stmt);

  <bb 154> :
  _174 = gimple_bb (u_stmt);
  _175 = _174->index;
  stderr.1521_176 = stderr;
  fprintf (stderr.1521_176, "bb index := %d\n", _175);

  <bb 155> :
  debug_gimple_stmt (tmp);

  <bb 156> :
  _177 = gimple_location_safe (tmp);
  warning_at (_177, 0, "use location");

  <bb 157> :
  _178 = gimple_bb (tmp);
  _179 = _178->index;
  stderr.1522_180 = stderr;
  fprintf (stderr.1522_180, "beacuse in succ := %d have return or exit\n", _179);

  <bb 158> :
  _181 = (long unsigned int) k;
  _182 = std::vector<return_type>::operator[] (&global_ret_type_array, _181);
  _183 = _182->stmt;
  debug_gimple_stmt (_183);

  <bb 159> :
  _184 = (long unsigned int) k;
  _185 = std::vector<return_type>::operator[] (&global_ret_type_array, _184);
  _186 = _185->stmt;
  _187 = gimple_location_safe (_186);
  warning_at (_187, 0, "use location");

  <bb 160> :
  _188 = gimple_bb (tmp);
  _189 = _188->index;
  _190 = gimple_bb (u_stmt);
  _191 = _190->index;
  stderr.1523_192 = stderr;
  fprintf (stderr.1523_192, "gimple stmt in succ := %d ,possiable got to succ := %d\n", _191, _189);

  <bb 161> :
  stderr.1524_193 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1524_193);
  goto <bb 169>; [INV]

  <bb 162> :
  if (succ_havereturn == 0)
    goto <bb 163>; [INV]
  else
    goto <bb 169>; [INV]

  <bb 163> :
  e2.1525_194 = e2;
  _195 = e2.1525_194->dest;
  _196 = _195->index;
  cfun.1526_197 = cfun;
  _198 = cfun.1526_197->cfg;
  _199 = _198->x_exit_block_ptr;
  _200 = _199->prev_bb;
  _201 = _200->index;
  if (_196 == _201)
    goto <bb 164>; [INV]
  else
    goto <bb 169>; [INV]

  <bb 164> :
  debug_gimple_stmt (u_stmt);

  <bb 165> :
  _202 = gimple_location_safe (u_stmt);
  warning_at (_202, 0, "use location");

  <bb 166> :
  succ_havereturn = 1;
  _203 = bb->index;
  stderr.1527_204 = stderr;
  fprintf (stderr.1527_204, "\x1b[40;31m    branch possiable have return in bb:%d \x1b[0m\n", _203);

  <bb 167> :
  cfun.1528_205 = cfun;
  _206 = cfun.1528_205->cfg;
  _207 = _206->x_exit_block_ptr;
  _208 = _207->prev_bb;
  _209 = _208->index;
  stderr.1529_210 = stderr;
  fprintf (stderr.1529_210, "beacuse in succ := %d have return \n", _209);

  <bb 168> :
  // predicted unlikely by continue predictor.

  <bb 169> :
  ei_next (&ei2);

  <bb 170> :
  D.254992 = ei_cond (ei2, &e2);

  <bb 171> :
  retval.1530 = D.254992;
  if (retval.1530 != 0)
    goto <bb 146>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 172> :
  e2 = {CLOBBER};
  ei2 = {CLOBBER};

  <bb 173> :
  ei_next (&ei);

  <bb 174> :
  D.254994 = ei_cond (ei, &e);

  <bb 175> :
  retval.1531 = D.254994;
  if (retval.1531 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 176> :
  e = {CLOBBER};
  ei = {CLOBBER};
  bb = bb->next_bb;

  <bb 177> :
  _211 = table_temp->node;
  D.254996 = cgraph_node::get_fun (_211);

  <bb 178> :
  _212 = D.254996;
  _213 = _212->cfg;
  _214 = _213->x_exit_block_ptr;
  retval.1532 = bb != _214;
  if (retval.1532 != 0)
    goto <bb 121>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 179> :
  k = k + 1;

  <bb 180> :
  _215 = (long unsigned int) k;
  _216 = std::vector<return_type>::size (&global_ret_type_array);
  retval.1533 = _215 < _216;
  if (retval.1533 != 0)
    goto <bb 119>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 181> :
  pop_cfun ();

  <bb 182> :
  stmtloopcheck.1534_217 = stmtloopcheck;
  if (stmtloopcheck.1534_217 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 183> :
  _218 = gimple_bb (u_stmt);
  D.254997 = bb_in_loop_p (_218);

  <bb 184> :
  retval.1535 = D.254997;
  if (retval.1535 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 185> :
  stderr.1536_219 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1536_219);

  <bb 186> :
  stderr.1537_220 = stderr;
  __builtin_fwrite ("\x1b[40;31m    collect Stmt in loop \x1b[0m\n", 1, 38, stderr.1537_220);

  <bb 187> :
  stderr.1538_221 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1538_221);

  <bb 188> :
  samefucntioncheck.1539_222 = samefucntioncheck;
  if (samefucntioncheck.1539_222 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 189> :
  _223 = table_temp->last_stmt;
  _224 = gimple_code (_223);
  retval.1540 = _224 == 8;
  if (retval.1540 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 190> :
  _225 = gimple_code (u_stmt);
  retval.1541 = _225 == 8;
  if (retval.1541 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 191> :
  _226 = table_temp->last_stmt;
  D.254998 = gimple_call_fn (_226);

  <bb 192> :
  _227 = D.254998;
  retval.1542 = _227 != 0B;
  if (retval.1542 != 0)
    goto <bb 193>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 193> :
  D.254999 = gimple_call_fn (u_stmt);

  <bb 194> :
  _228 = D.254999;
  retval.1543 = _228 != 0B;
  if (retval.1543 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 195> :
  _229 = table_temp->last_stmt;
  D.255000 = gimple_call_fn (_229);

  <bb 196> :
  _230 = D.255000;
  D.255001 = gimple_call_fn (u_stmt);

  <bb 197> :
  _231 = D.255001;
  retval.1544 = _230 == _231;
  if (retval.1544 != 0)
    goto <bb 198>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 198> :
  _232 = table_temp->last_stmt;
  if (u_stmt == _232)
    goto <bb 199>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 199> :
  debug_gimple_stmt (u_stmt);
  goto <bb 215>; [INV]

  <bb 200> :
  D.255002 = gimple_call_fn (u_stmt);

  <bb 201> :
  _233 = D.255002;
  D.255003 = get_name (_233);

  <bb 202> :
  name = D.255003;
  if (name != 0B)
    goto <bb 203>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 203> :
  _234 = table_temp->last_stmt;
  D.255004 = gimple_call_fn (_234);

  <bb 204> :
  _235 = D.255004;
  D.255005 = get_name (_235);

  <bb 205> :
  _236 = D.255005;
  _237 = strcmp (name, _236);
  retval.1545 = _237 == 0;
  if (retval.1545 != 0)
    goto <bb 206>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 206> :
  stderr.1546_238 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1546_238);

  <bb 207> :
  stderr.1547_239 = stderr;
  fprintf (stderr.1547_239, "\n Expand conflict \n", name);

  <bb 208> :
  stderr.1548_240 = stderr;
  fprintf (stderr.1548_240, " The same function may have multiple branches :%s\n", name);

  <bb 209> :
  _241 = table_temp->last_stmt;
  debug_gimple_stmt (_241);

  <bb 210> :
  _242 = table_temp->last_stmt;
  _243 = gimple_location_safe (_242);
  warning_at (_243, 0, "use location");

  <bb 211> :
  debug_gimple_stmt (u_stmt);

  <bb 212> :
  _244 = gimple_location_safe (u_stmt);
  warning_at (_244, 0, "use location");

  <bb 213> :
  _245 = gimple_bb (u_stmt);
  _246 = table_temp->node;
  check_bbinfo (_246, _245);

  <bb 214> :
  // predicted unlikely by continue predictor.
  goto <bb 485>; [INV]

  <bb 215> :
  free_type::free_type (&free_type);
  memoryleakcheck.1549_247 = memoryleakcheck;
  if (memoryleakcheck.1549_247 != 0)
    goto <bb 216>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 216> :
  _248 = user_tmp->ret_stmt;
  if (_248 != 0B)
    goto <bb 217>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 217> :
  debugmod.1550_249 = debugmod;
  if (debugmod.1550_249 != 0)
    goto <bb 218>; [INV]
  else
    goto <bb 221>; [INV]

  <bb 218> :
  function_tree.1551_250 = function_tree;
  D.255006 = get_name (function_tree.1551_250);

  <bb 219> :
  _251 = D.255006;
  stderr.1552_252 = stderr;
  fprintf (stderr.1552_252, "dot graph entry %s\n", _251);

  <bb 220> :
  stderr.1553_253 = stderr;
  __builtin_fwrite ("dot graph target entry end\n\n", 1, 28, stderr.1553_253);

  <bb 221> :
  _254 = user_tmp->ret_stmt;
  _255 = gimple_code (_254);
  retval.1554 = _255 == 10;
  if (retval.1554 != 0)
    goto <bb 222>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 222> :
  _256 = user_tmp->ret_stmt;
  debug (_256);

  <bb 223> :
  _257 = user_tmp->ret_stmt;
  _258 = gimple_location_safe (_257);
  warning_at (_258, 0, "use location");

  <bb 224> :
  _259 = user_tmp->ret_stmt;
  debug_gimple_stmt (_259);

  <bb 225> :
  _260 = user_tmp->ret_stmt;
  now_stmt = _260;
  debugmod.1555_261 = debugmod;
  if (debugmod.1555_261 != 0)
    goto <bb 226>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 226> :
  stderr.1556_262 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1556_262);

  <bb 227> :
  _263 = user_tmp->ret_stmt;
  debug_gimple_stmt (_263);

  <bb 228> :
  _264 = user_tmp->ret_stmt;
  _265 = gimple_location_safe (_264);
  warning_at (_265, 0, "use location");

  <bb 229> :
  stderr.1557_266 = stderr;
  __builtin_fwrite ("dot graph target loc en1\n\n", 1, 26, stderr.1557_266);

  <bb 230> :
  _267 = user_tmp->ret_stmt;
  _268 = gimple_bb (_267);
  _269 = _268->index;
  stderr.1558_270 = stderr;
  fprintf (stderr.1558_270, "dot graph target line desc form basic block %d: ", _269);

  <bb 231> :
  _271 = user_tmp->ret_stmt;
  debug_gimple_stmt (_271);

  <bb 232> :
  _272 = user_tmp->ret_stmt;
  _273 = gimple_location_safe (_272);
  warning_at (_273, 0, "use location");

  <bb 233> :
  stderr.1559_274 = stderr;
  __builtin_fwrite ("dot graph target line desend\n\n", 1, 30, stderr.1559_274);

  <bb 234> :
  stderr.1560_275 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1560_275);

  <bb 235> :
  _276 = user_tmp->ret_stmt;
  debug_gimple_stmt (_276);

  <bb 236> :
  _277 = user_tmp->ret_stmt;
  _278 = gimple_location_safe (_277);
  warning_at (_278, 0, "use location");

  <bb 237> :
  stderr.1561_279 = stderr;
  __builtin_fwrite ("dot graph target loc end\n\n", 1, 26, stderr.1561_279);

  <bb 238> :
  stderr.1562_280 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1562_280);

  <bb 239> :
  _281 = user_tmp->ret_stmt;
  _282 = gimple_bb (_281);
  _283 = _282->index;
  function_tree.1563_284 = function_tree;
  D.255007 = get_name (function_tree.1563_284);

  <bb 240> :
  _285 = D.255007;
  stderr.1564_286 = stderr;
  fprintf (stderr.1564_286, "from %s basic block %d", _285, _283);

  <bb 241> :
  stderr.1565_287 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1565_287);

  <bb 242> :
  _288 = user_tmp->ret_stmt;
  D.255008 = gimple_block (_288);

  <bb 243> :
  _289 = D.255008;
  retval.1566 = _289 != 0B;
  if (retval.1566 != 0)
    goto <bb 244>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 244> :
  _290 = user_tmp->ret_stmt;
  D.255009 = gimple_block (_290);

  <bb 245> :
  _291 = D.255009;
  _292 = _291->block.supercontext;
  _293 = _292->base.code;
  if (_293 == 33)
    goto <bb 246>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 246> :
  _294 = user_tmp->ret_stmt;
  D.255010 = gimple_block (_294);

  <bb 247> :
  _295 = D.255010;
  _296 = _295->block.supercontext;
  function_tree.1569_297 = function_tree;
  if (_296 != function_tree.1569_297)
    goto <bb 248>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 248> :
  iftmp.1568 = 1;
  goto <bb 250>; [INV]

  <bb 249> :
  iftmp.1568 = 0;

  <bb 250> :
  retval.1567 = iftmp.1568;
  if (retval.1567 != 0)
    goto <bb 251>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 251> :
  stderr.1570_298 = stderr;
  __builtin_fwrite ("dot graph target basicblock star1 ", 1, 34, stderr.1570_298);

  <bb 252> :
  _299 = user_tmp->ret_stmt;
  _300 = gimple_bb (_299);
  _301 = _300->index;
  _302 = user_tmp->ret_stmt;
  D.255011 = gimple_block (_302);

  <bb 253> :
  _303 = D.255011;
  _304 = _303->block.supercontext;
  D.255012 = get_name (_304);

  <bb 254> :
  _305 = D.255012;
  stderr.1571_306 = stderr;
  fprintf (stderr.1571_306, "from %s basic block %d", _305, _301);

  <bb 255> :
  stderr.1572_307 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1572_307);

  <bb 256> :
  stderr.1573_308 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1573_308);

  <bb 257> :
  _309 = user_tmp->ret_stmt;
  debug (_309);

  <bb 258> :
  _310 = user_tmp->ret_stmt;
  _311 = gimple_location_safe (_310);
  warning_at (_311, 0, "use location");

  <bb 259> :
  stderr.1574_312 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1574_312);
  goto <bb 484>; [INV]

  <bb 260> :
  _313 = user_tmp->target;
  if (_313 != 0B)
    goto <bb 261>; [INV]
  else
    goto <bb 343>; [INV]

  <bb 261> :
  debugmod.1575_314 = debugmod;
  if (debugmod.1575_314 != 0)
    goto <bb 262>; [INV]
  else
    goto <bb 265>; [INV]

  <bb 262> :
  function_tree.1576_315 = function_tree;
  D.255013 = get_name (function_tree.1576_315);

  <bb 263> :
  _316 = D.255013;
  stderr.1577_317 = stderr;
  fprintf (stderr.1577_317, "dot graph entry %s\n", _316);

  <bb 264> :
  stderr.1578_318 = stderr;
  __builtin_fwrite ("dot graph target entry end\n\n", 1, 28, stderr.1578_318);

  <bb 265> :
  finalstmt = u_stmt;
  debug (u_stmt);

  <bb 266> :
  _319 = gimple_location_safe (u_stmt);
  warning_at (_319, 0, "use location");

  <bb 267> :
  now_stmt = u_stmt;
  debugmod.1579_320 = debugmod;
  if (debugmod.1579_320 != 0)
    goto <bb 268>; [INV]
  else
    goto <bb 343>; [INV]

  <bb 268> :
  stderr.1580_321 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1580_321);

  <bb 269> :
  _322 = table_temp->last_stmt;
  debug_gimple_stmt (_322);

  <bb 270> :
  _323 = table_temp->last_stmt;
  _324 = gimple_location_safe (_323);
  warning_at (_324, 0, "use location");

  <bb 271> :
  stderr.1581_325 = stderr;
  __builtin_fwrite ("dot graph target loc en1\n\n", 1, 26, stderr.1581_325);

  <bb 272> :
  _326 = gimple_bb (u_stmt);
  _327 = _326->index;
  stderr.1582_328 = stderr;
  fprintf (stderr.1582_328, "dot graph target line desc form basic block %d: ", _327);

  <bb 273> :
  debug (u_stmt);

  <bb 274> :
  _329 = gimple_location_safe (u_stmt);
  warning_at (_329, 0, "use location");

  <bb 275> :
  stderr.1583_330 = stderr;
  __builtin_fwrite ("dot graph target line desend\n\n", 1, 30, stderr.1583_330);

  <bb 276> :
  stderr.1584_331 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1584_331);

  <bb 277> :
  _332 = table_temp->last_stmt;
  debug_gimple_stmt (_332);

  <bb 278> :
  _333 = table_temp->last_stmt;
  _334 = gimple_location_safe (_333);
  warning_at (_334, 0, "use location");

  <bb 279> :
  stderr.1585_335 = stderr;
  __builtin_fwrite ("dot graph target loc end\n\n", 1, 26, stderr.1585_335);

  <bb 280> :
  stderr.1586_336 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1586_336);

  <bb 281> :
  _337 = gimple_bb (u_stmt);
  _338 = _337->index;
  function_tree.1587_339 = function_tree;
  D.255014 = get_name (function_tree.1587_339);

  <bb 282> :
  _340 = D.255014;
  stderr.1588_341 = stderr;
  fprintf (stderr.1588_341, "from %s basic block %d", _340, _338);

  <bb 283> :
  stderr.1589_342 = stderr;
  __builtin_fwrite ("dot graph target basicblock en1\n\n", 1, 33, stderr.1589_342);

  <bb 284> :
  relate_type::relate_type (&relate_type);
  function_tree.1590_343 = function_tree;
  relate_type.relate_funtree = function_tree.1590_343;
  D.255015 = gimple_block (u_stmt);

  <bb 285> :
  _344 = D.255015;
  retval.1591 = _344 != 0B;
  if (retval.1591 != 0)
    goto <bb 286>; [INV]
  else
    goto <bb 301>; [INV]

  <bb 286> :
  D.255016 = gimple_block (u_stmt);

  <bb 287> :
  _345 = D.255016;
  _346 = _345->block.supercontext;
  _347 = _346->base.code;
  if (_347 == 33)
    goto <bb 288>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 288> :
  D.255017 = gimple_block (u_stmt);

  <bb 289> :
  _348 = D.255017;
  _349 = _348->block.supercontext;
  function_tree.1594_350 = function_tree;
  if (_349 != function_tree.1594_350)
    goto <bb 290>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 290> :
  iftmp.1593 = 1;
  goto <bb 292>; [INV]

  <bb 291> :
  iftmp.1593 = 0;

  <bb 292> :
  retval.1592 = iftmp.1593;
  if (retval.1592 != 0)
    goto <bb 293>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 293> :
  stderr.1595_351 = stderr;
  __builtin_fwrite ("dot graph target basicblock star1 ", 1, 34, stderr.1595_351);

  <bb 294> :
  _352 = gimple_bb (u_stmt);
  _353 = _352->index;
  D.255018 = gimple_block (u_stmt);

  <bb 295> :
  _354 = D.255018;
  _355 = _354->block.supercontext;
  D.255019 = get_name (_355);

  <bb 296> :
  _356 = D.255019;
  stderr.1596_357 = stderr;
  fprintf (stderr.1596_357, "from %s basic block %d", _356, _353);

  <bb 297> :
  stderr.1597_358 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1597_358);

  <bb 298> :
  D.255020 = gimple_block (u_stmt);

  <bb 299> :
  _359 = D.255020;
  _360 = _359->block.supercontext;
  relate_type.relate_funtree = _360;
  goto <bb 301>; [INV]

  <bb 300> :
  function_tree.1598_361 = function_tree;
  relate_type.relate_funtree = function_tree.1598_361;

  <bb 301> :
  _362 = table_temp->last_stmt;
  relate_type.laststmt = _362;
  relate_type.stmt = u_stmt;
  _363 = user_tmp->target;
  relate_type.relate_tree = _363;
  _364 = gimple_bb (u_stmt);
  _365 = _364->index;
  relate_type.now_basicblock = _365;
  std::vector<relate_type>::push_back (&maxbb_array.relate_type_array, &relate_type);

  <bb 302> :
  _366 = &table_temp->target;
  hash_map<tree_node*, function_relate_array>::put (function_maxbb_collect, _366, &maxbb_array);

  <bb 303> :
  _367 = gimple_code (u_stmt);
  retval.1599 = _367 == 8;
  if (retval.1599 != 0)
    goto <bb 304>; [INV]
  else
    goto <bb 333>; [INV]

  <bb 304> :
  debugmod.1600_368 = debugmod;
  if (debugmod.1600_368 != 0)
    goto <bb 305>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 305> :
  stderr.1601_369 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1601_369);

  <bb 306> :
  debug (finalstmt);

  <bb 307> :
  _370 = table_temp->last_stmt;
  debug (_370);

  <bb 308> :
  stderr.1602_371 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1602_371);

  <bb 309> :
  D.255021 = gimple_call_fn (u_stmt);

  <bb 310> :
  _372 = D.255021;
  D.255022 = get_name (_372);

  <bb 311> :
  name = D.255022;
  if (name != 0B)
    goto <bb 312>; [INV]
  else
    goto <bb 342>; [INV]

  <bb 312> :
  _373 = strcmp (name, "free");
  if (_373 == 0)
    goto <bb 315>; [INV]
  else
    goto <bb 313>; [INV]

  <bb 313> :
  _374 = strcmp (name, "xfree");
  if (_374 == 0)
    goto <bb 315>; [INV]
  else
    goto <bb 314>; [INV]

  <bb 314> :
  _375 = strcmp (name, "realloc");
  if (_375 == 0)
    goto <bb 315>; [INV]
  else
    goto <bb 328>; [INV]

  <bb 315> :
  stderr.1603_376 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1603_376);

  <bb 316> :
  debug (u_stmt);

  <bb 317> :
  _377 = gimple_location_safe (u_stmt);
  warning_at (_377, 0, "use location");

  <bb 318> :
  stderr.1604_378 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1604_378);

  <bb 319> :
  freemod.1605_379 = freemod;
  if (freemod.1605_379 != 0)
    goto <bb 320>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 320> :
  stderr.1606_380 = stderr;
  __builtin_fwrite ("dot graph target color desc", 1, 27, stderr.1606_380);

  <bb 321> :
  _381 = strcmp (name, "realloc");
  if (_381 == 0)
    goto <bb 322>; [INV]
  else
    goto <bb 323>; [INV]

  <bb 322> :
  stderr.1607_382 = stderr;
  __builtin_fwrite ("red", 1, 3, stderr.1607_382);
  goto <bb 324>; [INV]

  <bb 323> :
  stderr.1608_383 = stderr;
  __builtin_fwrite ("green", 1, 5, stderr.1608_383);

  <bb 324> :
  stderr.1609_384 = stderr;
  __builtin_fwrite ("dot graph target color desend\n\n", 1, 31, stderr.1609_384);

  <bb 325> :
  _385 = strcmp (name, "realloc");
  if (_385 == 0)
    goto <bb 326>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 326> :
  stderr.1610_386 = stderr;
  __builtin_fwrite ("If realloc() fails, the initial memory block will not be freed() ", 1, 65, stderr.1610_386);

  <bb 327> :
  goto <bb 332>; [INV]

  <bb 328> :
  stderr.1611_387 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1611_387);

  <bb 329> :
  debug (u_stmt);

  <bb 330> :
  _388 = gimple_location_safe (u_stmt);
  warning_at (_388, 0, "use location");

  <bb 331> :
  stderr.1612_389 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1612_389);

  <bb 332> :
  goto <bb 342>; [INV]

  <bb 333> :
  debugmod.1613_390 = debugmod;
  if (debugmod.1613_390 != 0)
    goto <bb 334>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 334> :
  stderr.1614_391 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1614_391);

  <bb 335> :
  debug (u_stmt);

  <bb 336> :
  _392 = table_temp->last_stmt;
  debug (_392);

  <bb 337> :
  stderr.1615_393 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1615_393);

  <bb 338> :
  stderr.1616_394 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1616_394);

  <bb 339> :
  debug (u_stmt);

  <bb 340> :
  _395 = gimple_location_safe (u_stmt);
  warning_at (_395, 0, "use location");

  <bb 341> :
  stderr.1617_396 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1617_396);

  <bb 342> :
  relate_type = {CLOBBER};

  <bb 343> :
  _397 = user_tmp->target;
  if (_397 != 0B)
    goto <bb 344>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 344> :
  _398 = user_tmp->target;
  use_stmt = _398->ssa_name.def_stmt;
  _399 = gimple_code (u_stmt);
  retval.1618 = _399 == 8;
  if (retval.1618 != 0)
    goto <bb 345>; [INV]
  else
    goto <bb 352>; [INV]

  <bb 345> :
  D.255024 = gimple_call_fndecl (u_stmt);

  <bb 346> :
  _400 = D.255024;
  retval.1619 = _400 != 0B;
  if (retval.1619 != 0)
    goto <bb 347>; [INV]
  else
    goto <bb 352>; [INV]

  <bb 347> :
  D.255025 = gimple_call_fndecl (u_stmt);

  <bb 348> :
  _401 = D.255025;
  D.255026 = get_name (_401);

  <bb 349> :
  name = D.255026;
  if (name != 0B)
    goto <bb 350>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 350> :
  stderr.1620_402 = stderr;
  fprintf (stderr.1620_402, "this stmt call this function :%s\n", name);
  goto <bb 352>; [INV]

  <bb 351> :
  stderr.1621_403 = stderr;
  fprintf (stderr.1621_403, "this stmt call this function :null\n", name);

  <bb 352> :
  _404 = gimple_code (u_stmt);
  retval.1622 = _404 == 18;
  if (retval.1622 != 0)
    goto <bb 353>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 353> :
  find_phistmt = 1;
  stderr.1623_405 = stderr;
  fprintf (stderr.1623_405, "this stmt have mutiple branch ---%s-----\n", name);

  <bb 354> :
  if (name != 0B)
    goto <bb 355>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 355> :
  _406 = strcmp (name, "realloc");
  if (_406 == 0)
    goto <bb 362>; [INV]
  else
    goto <bb 356>; [INV]

  <bb 356> :
  _407 = strcmp (name, "malloc");
  if (_407 == 0)
    goto <bb 362>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 357> :
  _408 = strcmp (name, "xmalloc");
  if (_408 == 0)
    goto <bb 362>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 358> :
  _409 = strcmp (name, "calloc");
  if (_409 == 0)
    goto <bb 362>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 359> :
  _410 = strcmp (name, "xcalloc");
  if (_410 == 0)
    goto <bb 362>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 360> :
  _411 = strcmp (name, "strdup");
  if (_411 == 0)
    goto <bb 362>; [INV]
  else
    goto <bb 361>; [INV]

  <bb 361> :
  _412 = strcmp (name, "xstrdup");
  if (_412 == 0)
    goto <bb 362>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 362> :
  IS_MALLOC_FUCNTION.1624_413 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1624_413;
  goto <bb 364>; [INV]

  <bb 363> :
  IS_OTHRER_FUCNTION.1625_414 = IS_OTHRER_FUCNTION;
  find_mallocstmt = (int) IS_OTHRER_FUCNTION.1625_414;

  <bb 364> :

  <bb 365> :
  calleetype.1626_415 = (unsigned int) calleetype;
  FUNCITON_HEAP.1627_416 = FUNCITON_HEAP;
  if (calleetype.1626_415 == FUNCITON_HEAP.1627_416)
    goto <bb 366>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 366> :
  function_tree.1628_417 = function_tree;
  debug_tree (function_tree.1628_417);
  goto <bb 385>; [INV]

  <bb 367> :
  calleetype.1629_418 = (unsigned int) calleetype;
  FUNCITON_THREAD.1630_419 = FUNCITON_THREAD;
  if (calleetype.1629_418 == FUNCITON_THREAD.1630_419)
    goto <bb 368>; [INV]
  else
    goto <bb 385>; [INV]

  <bb 368> :
  threadmod.1631_420 = threadmod;
  _421 = (int) threadmod.1631_420;
  if (_421 == 1)
    goto <bb 369>; [INV]
  else
    goto <bb 385>; [INV]

  <bb 369> :
  _422 = gimple_code (finalstmt);
  retval.1632 = _422 == 6;
  if (retval.1632 != 0)
    goto <bb 370>; [INV]
  else
    goto <bb 385>; [INV]

  <bb 370> :
  D.255027 = gimple_assign_lhs (finalstmt);

  <bb 371> :
  _423 = D.255027;
  _424 = BIT_FIELD_REF <_423->base, 8, 24>;
  _425 = _424 & 4;
  _426 = _425 == 0;
  _427 = (int) _426;
  retval.1633 = _427 == 1;
  if (retval.1633 != 0)
    goto <bb 372>; [INV]
  else
    goto <bb 377>; [INV]

  <bb 372> :
  stderr.1634_428 = stderr;
  __builtin_fwrite (" \n LOCAL VARIBALE  \n", 1, 20, stderr.1634_428);

  <bb 373> :
  debug_gimple_stmt (finalstmt);

  <bb 374> :
  _429 = gimple_location_safe (finalstmt);
  warning_at (_429, 0, "use location");

  <bb 375> :
  stderr.1635_430 = stderr;
  __builtin_fwrite (" \n LOCAL VARIBALE  \n", 1, 20, stderr.1635_430);

  <bb 376> :
  // predicted unlikely by continue predictor.
  goto <bb 485>; [INV]

  <bb 377> :
  stderr.1636_431 = stderr;
  __builtin_fwrite ("\n ================== warring  ================== \n", 1, 50, stderr.1636_431);

  <bb 378> :
  stderr.1637_432 = stderr;
  __builtin_fwrite ("\x1b[40;35m warring thread fucntion detction is on \x1b[0m\n", 1, 53, stderr.1637_432);

  <bb 379> :
  stderr.1638_433 = stderr;
  __builtin_fwrite ("\x1b[40;35m Detect GLOBAL VARIBALE \x1b[0m\n", 1, 37, stderr.1638_433);

  <bb 380> :
  debug_gimple_stmt (finalstmt);

  <bb 381> :
  _434 = gimple_location_safe (finalstmt);
  warning_at (_434, 0, "use location");

  <bb 382> :
  stderr.1639_435 = stderr;
  __builtin_fwrite ("\x1b[40;35m thread job function \x1b[0m\n", 1, 34, stderr.1639_435);

  <bb 383> :
  stderr.1640_436 = stderr;
  __builtin_fwrite ("\x1b[40;35m this stmt possible have Race Condition \xe3\x80\x82 \x1b[0m\n", 1, 57, stderr.1640_436);

  <bb 384> :
  stderr.1641_437 = stderr;
  __builtin_fwrite ("\n ================== warring  ================== \n", 1, 50, stderr.1641_437);

  <bb 385> :
  _438 = gimple_code (u_stmt);
  if (_438 == 8)
    goto <bb 386>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 386> :
  find_mallocstmt.1644_439 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1645_440 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1644_439 == IS_MALLOC_FUCNTION.1645_440)
    goto <bb 388>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 387> :
  find_mallocstmt.1646_441 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1647_442 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1646_441 == IS_OTHRER_FUCNTION.1647_442)
    goto <bb 388>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 388> :
  iftmp.1643 = 1;
  goto <bb 390>; [INV]

  <bb 389> :
  iftmp.1643 = 0;

  <bb 390> :
  retval.1642 = iftmp.1643;
  if (retval.1642 != 0)
    goto <bb 391>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 391> :
  IS_MALLOC_FUCNTION.1648_443 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1648_443;
  _444 = user_tmp->target;
  def_stmt = _444->ssa_name.def_stmt;
  D.255028 = gimple_call_fn (u_stmt);

  <bb 392> :
  _445 = D.255028;
  D.255029 = get_name (_445);

  <bb 393> :
  name = D.255029;
  if (name != 0B)
    goto <bb 394>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 394> :
  _446 = strcmp (name, "free");
  if (_446 == 0)
    goto <bb 397>; [INV]
  else
    goto <bb 395>; [INV]

  <bb 395> :
  _447 = strcmp (name, "xfree");
  if (_447 == 0)
    goto <bb 397>; [INV]
  else
    goto <bb 396>; [INV]

  <bb 396> :
  _448 = strcmp (name, "realloc");
  if (_448 == 0)
    goto <bb 397>; [INV]
  else
    goto <bb 407>; [INV]

  <bb 397> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 398> :
  stderr.1649_449 = stderr;
  __builtin_fwrite ("\n ================== find free stmt ================== \n", 1, 56, stderr.1649_449);

  <bb 399> :
  debug (u_stmt);

  <bb 400> :
  _450 = gimple_location_safe (u_stmt);
  warning_at (_450, 0, "use location");

  <bb 401> :
  _451 = strcmp (name, "realloc");
  if (_451 == 0)
    goto <bb 402>; [INV]
  else
    goto <bb 404>; [INV]

  <bb 402> :
  find_freestmt.1650_452 = find_freestmt;
  _453 = find_freestmt.1650_452 + 1;
  find_freestmt = _453;
  find_freestmt.1651_454 = find_freestmt;
  stderr.1652_455 = stderr;
  fprintf (stderr.1652_455, "\x1b[40;32m    FIND REALLOC STMT count:%d name:%s \x1b[0m\n", find_freestmt.1651_454, name);

  <bb 403> :
  find_freestmt.1653_456 = find_freestmt;
  stderr.1654_457 = stderr;
  fprintf (stderr.1654_457, "\x1b[40;32m    this stmt possiable free memory \x1b[0m\n", find_freestmt.1653_456, name);
  goto <bb 405>; [INV]

  <bb 404> :
  find_freestmt.1655_458 = find_freestmt;
  _459 = find_freestmt.1655_458 + 1;
  find_freestmt = _459;
  find_freestmt.1656_460 = find_freestmt;
  stderr.1657_461 = stderr;
  fprintf (stderr.1657_461, "\x1b[40;32m    HAS FREE STMT count:%d name:%s \x1b[0m\n", find_freestmt.1656_460, name);

  <bb 405> :
  stderr.1658_462 = stderr;
  __builtin_fwrite ("\n ================== find free stmt ================== \n", 1, 56, stderr.1658_462);

  <bb 406> :
  goto <bb 483>; [INV]

  <bb 407> :
  _463 = strcmp (name, "pthread_create");
  if (_463 == 0)
    goto <bb 408>; [INV]
  else
    goto <bb 464>; [INV]

  <bb 408> :
  table_temp->last_stmt = u_stmt;
  FUNCITON_THREAD.1659_464 = FUNCITON_THREAD;
  FUNCITON_THREAD.1660_465 = (int) FUNCITON_THREAD.1659_464;
  table_temp->swap_type = FUNCITON_THREAD.1660_465;
  _466 = table_temp->swap_type;
  _467 = (unsigned int) _466;
  FUNCITON_THREAD.1661_468 = FUNCITON_THREAD;
  if (_467 == FUNCITON_THREAD.1661_468)
    goto <bb 409>; [INV]
  else
    goto <bb 483>; [INV]

  <bb 409> :
  stderr.1662_469 = stderr;
  __builtin_fwrite ("\n ================== find pthread stmt ================== \n", 1, 59, stderr.1662_469);

  <bb 410> :
  debug (u_stmt);

  <bb 411> :
  _470 = gimple_location_safe (u_stmt);
  warning_at (_470, 0, "use location");

  <bb 412> :
  stderr.1663_471 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_CREATED STMT  \x1b[0m\n", 1, 44, stderr.1663_471);

  <bb 413> :
  stderr.1664_472 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched ================== \n", 1, 61, stderr.1664_472);

  <bb 414> :
  _473 = table_temp->last_stmt;
  D.255030 = gimple_call_num_args (_473);

  <bb 415> :
  _474 = D.255030;
  retval.1665 = _474 != 0;
  if (retval.1665 != 0)
    goto <bb 416>; [INV]
  else
    goto <bb 421>; [INV]

  <bb 416> :
  _475 = table_temp->last_stmt;
  retval.1666 = is_gimple_assign (_475);
  if (retval.1666 != 0)
    goto <bb 417>; [INV]
  else
    goto <bb 419>; [INV]

  <bb 417> :
  _476 = table_temp->last_stmt;
  D.255031 = gimple_assign_lhs (_476);

  <bb 418> :
  _477 = D.255031;
  trace_function_path (_477, -1, 0B, &find_pthread_detched);
  goto <bb 421>; [INV]

  <bb 419> :
  _478 = table_temp->last_stmt;
  D.255032 = gimple_call_arg (_478, 2);

  <bb 420> :
  _479 = D.255032;
  _480 = _479->exp.operands[0];
  trace_function_path (_480, -1, 0B, &find_pthread_detched);

  <bb 421> :
  stderr.1667_481 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched end ================== \n", 1, 65, stderr.1667_481);

  <bb 422> :
  _482 = table_temp->last_stmt;
  D.255033 = gimple_call_arg (_482, 3);

  <bb 423> :
  findtree = D.255033;
  retval.1668 = is_gimple_call (u_stmt);
  if (retval.1668 != 0)
    goto <bb 424>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 424> :
  D.255034 = gimple_call_num_args (u_stmt);

  <bb 425> :
  _483 = D.255034;
  retval.1669 = _483 != 0;
  if (retval.1669 != 0)
    goto <bb 426>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 426> :
  D.255035 = gimple_call_arg (u_stmt, 3);

  <bb 427> :
  findtree = D.255035;
  _484 = findtree->base.code;
  if (_484 == 131)
    goto <bb 428>; [INV]
  else
    goto <bb 429>; [INV]

  <bb 428> :
  _485 = findtree->exp.operands[0];
  function_tree.1670_486 = function_tree;
  trace_function_path (function_tree.1670_486, -1, _485, &find_freestmt);
  goto <bb 431>; [INV]

  <bb 429> :
  _487 = findtree->base.code;
  if (_487 == 153)
    goto <bb 430>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 430> :
  function_tree.1671_488 = function_tree;
  trace_function_path (function_tree.1671_488, -1, findtree, &find_freestmt);

  <bb 431> :
  if (findtree != 0B)
    goto <bb 432>; [INV]
  else
    goto <bb 440>; [INV]

  <bb 432> :
  _489 = table_temp->last_stmt;
  D.255036 = gimple_call_num_args (_489);

  <bb 433> :
  _490 = D.255036;
  if (_490 != 0)
    goto <bb 434>; [INV]
  else
    goto <bb 436>; [INV]

  <bb 434> :
  _491 = table_temp->last_stmt;
  _492 = is_gimple_call (_491);
  if (_492 != 0)
    goto <bb 435>; [INV]
  else
    goto <bb 436>; [INV]

  <bb 435> :
  iftmp.1673 = 1;
  goto <bb 437>; [INV]

  <bb 436> :
  iftmp.1673 = 0;

  <bb 437> :
  retval.1672 = iftmp.1673;
  if (retval.1672 != 0)
    goto <bb 438>; [INV]
  else
    goto <bb 440>; [INV]

  <bb 438> :
  _493 = table_temp->last_stmt;
  D.255037 = gimple_call_arg (_493, 2);

  <bb 439> :
  _494 = D.255037;
  _495 = _494->exp.operands[0];
  trace_function_path (_495, 0, findtree, &find_freestmt);

  <bb 440> :
  _496 = table_temp->swap_stmt;
  if (_496 != 0B)
    goto <bb 441>; [INV]
  else
    goto <bb 444>; [INV]

  <bb 441> :
  _497 = table_temp->swap_stmt;
  D.255038 = gimple_call_num_args (_497);

  <bb 442> :
  _498 = D.255038;
  if (_498 != 0)
    goto <bb 443>; [INV]
  else
    goto <bb 444>; [INV]

  <bb 443> :
  iftmp.1675 = 1;
  goto <bb 445>; [INV]

  <bb 444> :
  iftmp.1675 = 0;

  <bb 445> :
  retval.1674 = iftmp.1675;
  if (retval.1674 != 0)
    goto <bb 446>; [INV]
  else
    goto <bb 454>; [INV]

  <bb 446> :
  stderr.1676_499 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched ================== \n", 1, 61, stderr.1676_499);

  <bb 447> :
  _500 = table_temp->swap_stmt;
  D.255039 = gimple_call_arg (_500, 2);

  <bb 448> :
  _501 = D.255039;
  _502 = _501->exp.operands[0];
  trace_function_path (_502, -1, 0B, &find_pthread_detched);

  <bb 449> :
  stderr.1677_503 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched end ================== \n", 1, 65, stderr.1677_503);

  <bb 450> :
  _504 = table_temp->swap_stmt;
  D.255040 = gimple_call_arg (_504, 3);

  <bb 451> :
  findtree = D.255040;
  if (findtree != 0B)
    goto <bb 452>; [INV]
  else
    goto <bb 454>; [INV]

  <bb 452> :
  _505 = table_temp->swap_stmt;
  D.255041 = gimple_call_arg (_505, 2);

  <bb 453> :
  _506 = D.255041;
  _507 = _506->exp.operands[0];
  trace_function_path (_507, 0, findtree, &find_freestmt);

  <bb 454> :
  find_pthread_detched.1678_508 = find_pthread_detched;
  if (find_pthread_detched.1678_508 == 0)
    goto <bb 455>; [INV]
  else
    goto <bb 461>; [INV]

  <bb 455> :
  _509 = table_temp->pthread_type;
  if (_509 == 0)
    goto <bb 456>; [INV]
  else
    goto <bb 457>; [INV]

  <bb 456> :
  iftmp.1679 = "CREATE_JOINABLE";
  goto <bb 458>; [INV]

  <bb 457> :
  iftmp.1679 = "CREATE_DETACHED";

  <bb 458> :
  stderr.1680_510 = stderr;
  fprintf (stderr.1680_510, "\x1b[40;32m    FIND PTHREAD_CREATED TYPE is %s  \x1b[0m\n", iftmp.1679);

  <bb 459> :
  is_pthread_detched = 0;
  _511 = table_temp->pthread_type;
  if (_511 == 1)
    goto <bb 460>; [INV]
  else
    goto <bb 463>; [INV]

  <bb 460> :
  is_pthread_detched = 1;
  goto <bb 463>; [INV]

  <bb 461> :
  stderr.1681_512 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_DETACHED  \x1b[0m\n", 1, 63, stderr.1681_512);

  <bb 462> :
  is_pthread_detched = 1;

  <bb 463> :
  stderr.1682_513 = stderr;
  __builtin_fwrite ("\n ================== find pthread stmt ================== \n", 1, 59, stderr.1682_513);
  goto <bb 483>; [INV]

  <bb 464> :
  _514 = strcmp (name, "pthread_join");
  if (_514 == 0)
    goto <bb 465>; [INV]
  else
    goto <bb 468>; [INV]

  <bb 465> :
  _515 = table_temp->swap_type;
  _516 = (unsigned int) _515;
  FUNCITON_THREAD.1683_517 = FUNCITON_THREAD;
  if (_516 == FUNCITON_THREAD.1683_517)
    goto <bb 466>; [INV]
  else
    goto <bb 483>; [INV]

  <bb 466> :
  stderr.1684_518 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_JOIN \x1b[0m\n", 1, 35, stderr.1684_518);

  <bb 467> :
  find_pthread_join = find_pthread_join + 1;
  goto <bb 483>; [INV]

  <bb 468> :
  freecount = find_freestmt;
  if (name != 0B)
    goto <bb 469>; [INV]
  else
    goto <bb 483>; [INV]

  <bb 469> :
  _519 = strcmp (name, "realloc");
  if (_519 == 0)
    goto <bb 483>; [INV]
  else
    goto <bb 470>; [INV]

  <bb 470> :
  _520 = strcmp (name, "malloc");
  if (_520 == 0)
    goto <bb 483>; [INV]
  else
    goto <bb 471>; [INV]

  <bb 471> :
  _521 = strcmp (name, "xmalloc");
  if (_521 == 0)
    goto <bb 483>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 472> :
  _522 = strcmp (name, "calloc");
  if (_522 == 0)
    goto <bb 483>; [INV]
  else
    goto <bb 473>; [INV]

  <bb 473> :
  _523 = strcmp (name, "xcalloc");
  if (_523 == 0)
    goto <bb 483>; [INV]
  else
    goto <bb 474>; [INV]

  <bb 474> :
  _524 = strcmp (name, "strdup");
  if (_524 == 0)
    goto <bb 483>; [INV]
  else
    goto <bb 475>; [INV]

  <bb 475> :
  _525 = strcmp (name, "xstrdup");
  if (_525 == 0)
    goto <bb 483>; [INV]
  else
    goto <bb 476>; [INV]

  <bb 476> :
  IS_MALLOC_FUCNTION.1685_526 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1685_526;
  stderr.1686_527 = stderr;
  fprintf (stderr.1686_527, "trace fucntion name:%s \n", name);

  <bb 477> :
  _528 = table_temp->target;
  D.255042 = gimple_call_fndecl (u_stmt);

  <bb 478> :
  _529 = D.255042;
  trace_function_path (_529, 0, _528, &find_freestmt);

  <bb 479> :
  stderr.1687_530 = stderr;
  __builtin_fwrite ("\n ================== trace ================== \n", 1, 47, stderr.1687_530);

  <bb 480> :
  find_freestmt.1688_531 = find_freestmt;
  stderr.1689_532 = stderr;
  fprintf (stderr.1689_532, "trace fucntion free:%d \n", find_freestmt.1688_531);

  <bb 481> :
  find_freestmt.1690_533 = find_freestmt;
  if (freecount < find_freestmt.1690_533)
    goto <bb 482>; [INV]
  else
    goto <bb 483>; [INV]

  <bb 482> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 483> :

  <bb 484> :
  free_type = {CLOBBER};
  goto <bb 486>; [INV]

  <bb 485> :
  free_type = {CLOBBER};

  <bb 486> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 487>; [INV]
  else
    goto <bb 488>; [INV]

  <bb 487> :
  iftmp.1691 = user_tmp->stmt;
  goto <bb 489>; [INV]

  <bb 488> :
  iftmp.1691 = 0B;

  <bb 489> :
  u_stmt = iftmp.1691;

  <bb 490> :
  if (user_tmp != 0B)
    goto <bb 114>; [INV]
  else
    goto <bb 491>; [INV]

  <bb 491> :
  samefucntioncheck.1692_534 = samefucntioncheck;
  if (samefucntioncheck.1692_534 != 0)
    goto <bb 492>; [INV]
  else
    goto <bb 528>; [INV]

  <bb 492> :
  debugmod.1693_535 = debugmod;
  if (debugmod.1693_535 != 0)
    goto <bb 493>; [INV]
  else
    goto <bb 528>; [INV]

  <bb 493> :
  lastbasicblock = -1;
  _536 = &table_temp->target;
  D.255046 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _536);

  <bb 494> :
  _537 = D.255046;
  function_relate_array::operator= (&maxbb_array, _537);

  <bb 495> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 496> :
  D.255047 = operator new (48);

  <bb 497> :
  D.201438 = D.255047;
  hash_map<tree_node*, int>::hash_map (D.201438, 13, 0, 1, 0);

  <bb 498> :
  function_maxbasicblock_collect = D.201438;
  i = 0;
  goto <bb 508>; [INV]

  <bb 499> :
  _538 = (long unsigned int) i;
  _539 = std::vector<relate_type>::operator[] (&maxbb_type_array, _538);
  _540 = &_539->now_basicblock;
  _541 = (long unsigned int) i;
  _542 = std::vector<relate_type>::operator[] (&maxbb_type_array, _541);
  _543 = &_542->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _543, _540);

  <bb 500> :
  j = 0;
  goto <bb 506>; [INV]

  <bb 501> :
  _544 = (long unsigned int) i;
  _545 = std::vector<relate_type>::operator[] (&maxbb_type_array, _544);
  _546 = _545->relate_funtree;
  _547 = (long unsigned int) j;
  _548 = std::vector<relate_type>::operator[] (&maxbb_type_array, _547);
  _549 = _548->relate_funtree;
  retval.1694 = _546 == _549;
  if (retval.1694 != 0)
    goto <bb 502>; [INV]
  else
    goto <bb 505>; [INV]

  <bb 502> :
  _550 = (long unsigned int) i;
  _551 = std::vector<relate_type>::operator[] (&maxbb_type_array, _550);
  _552 = &_551->relate_funtree;
  D.255049 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _552);

  <bb 503> :
  _553 = D.255049;
  max_bb = *_553;
  _554 = (long unsigned int) j;
  _555 = std::vector<relate_type>::operator[] (&maxbb_type_array, _554);
  _556 = _555->now_basicblock;
  retval.1695 = max_bb <= _556;
  if (retval.1695 != 0)
    goto <bb 504>; [INV]
  else
    goto <bb 505>; [INV]

  <bb 504> :
  _557 = (long unsigned int) j;
  _558 = std::vector<relate_type>::operator[] (&maxbb_type_array, _557);
  _559 = &_558->now_basicblock;
  _560 = (long unsigned int) j;
  _561 = std::vector<relate_type>::operator[] (&maxbb_type_array, _560);
  _562 = &_561->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _562, _559);

  <bb 505> :
  j = j + 1;

  <bb 506> :
  _563 = (long unsigned int) j;
  _564 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1696 = _563 < _564;
  if (retval.1696 != 0)
    goto <bb 501>; [INV]
  else
    goto <bb 507>; [INV]

  <bb 507> :
  i = i + 1;

  <bb 508> :
  _565 = (long unsigned int) i;
  _566 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1697 = _565 < _566;
  if (retval.1697 != 0)
    goto <bb 499>; [INV]
  else
    goto <bb 509>; [INV]

  <bb 509> :
  it_i._M_current = 0B;
  it_i = std::vector<relate_type>::begin (&maxbb_type_array);
  goto <bb 523>; [INV]

  <bb 510> :
  _567 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _568 = &_567->relate_funtree;
  D.255050 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _568);

  <bb 511> :
  _569 = D.255050;
  max_bb = *_569;
  _570 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _571 = _570->now_basicblock;
  retval.1698 = max_bb == _571;
  if (retval.1698 != 0)
    goto <bb 512>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 512> :
  _572 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _573 = _572->relate_tree;
  def_stmt = _573->ssa_name.def_stmt;
  stderr.1699_574 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1699_574);

  <bb 513> :
  _575 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _576 = _575->stmt;
  _577 = gimple_bb (_576);
  _578 = _577->index;
  _579 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _580 = _579->relate_funtree;
  D.255051 = get_name (_580);

  <bb 514> :
  _581 = D.255051;
  stderr.1700_582 = stderr;
  fprintf (stderr.1700_582, "from %s basic block %d", _581, _578);

  <bb 515> :
  stderr.1701_583 = stderr;
  __builtin_fwrite ("dot graph target basicblock en1\n\n", 1, 33, stderr.1701_583);

  <bb 516> :
  _584 = rand ();
  x = (long unsigned int) _584;
  stderr.1702_585 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.1702_585);

  <bb 517> :
  stderr.1703_586 = stderr;
  fprintf (stderr.1703_586, "subgraph cluster_%lu dot graph subgraph  ", x);

  <bb 518> :
  _587 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _588 = _587->stmt;
  debug (_588);

  <bb 519> :
  _589 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _590 = _589->relate_tree;
  _591 = _590->base.code;
  retval.1704 = _591 != 36;
  if (retval.1704 != 0)
    goto <bb 520>; [INV]
  else
    goto <bb 521>; [INV]

  <bb 520> :
  debug (def_stmt);

  <bb 521> :
  stderr.1705_592 = stderr;
  __builtin_fwrite ("dot graph subgrapend\n\n", 1, 22, stderr.1705_592);

  <bb 522> :
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (&it_i);

  <bb 523> :
  D.201572 = std::vector<relate_type>::end (&maxbb_type_array);
  retval.1706 = __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (&it_i, &D.201572);
  D.201572 = {CLOBBER};
  if (retval.1706 != 0)
    goto <bb 510>; [INV]
  else
    goto <bb 524>; [INV]

  <bb 524> :
  function_maxbb_collect.1707 = function_maxbb_collect;
  if (function_maxbb_collect.1707 != 0B)
    goto <bb 525>; [INV]
  else
    goto <bb 526>; [INV]

  <bb 525> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_maxbb_collect.1707);
  operator delete (function_maxbb_collect.1707, 48);

  <bb 526> :
  it_i = {CLOBBER};
  goto <bb 528>; [INV]

  <bb 527> :
  PTABLE_IS_NULL.1708_593 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1708_593;

  <bb 528> :
  relatemod.1709_594 = relatemod;
  if (relatemod.1709_594 != 0)
    goto <bb 529>; [INV]
  else
    goto <bb 548>; [INV]

  <bb 529> :
  debugmod.1710_595 = debugmod;
  if (debugmod.1710_595 != 0)
    goto <bb 530>; [INV]
  else
    goto <bb 548>; [INV]

  <bb 530> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  function_relate_collect.1712_596 = function_relate_collect;
  _597 = &table_temp->target;
  D.255053 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1712_596, _597);

  <bb 531> :
  _598 = D.255053;
  retval.1711 = _598 != 0B;
  if (retval.1711 != 0)
    goto <bb 532>; [INV]
  else
    goto <bb 547>; [INV]

  <bb 532> :
  function_relate_collect.1713_599 = function_relate_collect;
  _600 = &table_temp->target;
  D.255054 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1713_599, _600);

  <bb 533> :
  _601 = D.255054;
  function_relate_array::operator= (&fun_array, _601);

  <bb 534> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 535> :
  k = 0;
  goto <bb 546>; [INV]

  <bb 536> :
  _602 = rand ();
  x = (long unsigned int) _602;
  stderr.1714_603 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.1714_603);

  <bb 537> :
  _604 = (long unsigned int) k;
  _605 = std::vector<relate_type>::operator[] (&relate_type_array, _604);
  _606 = _605->now_fucntion;
  stderr.1715_607 = stderr;
  fprintf (stderr.1715_607, "ID : %lu\n", _606);

  <bb 538> :
  _608 = (long unsigned int) k;
  _609 = std::vector<relate_type>::operator[] (&relate_type_array, _608);
  _610 = _609->stmt;
  _611 = gimple_bb (_610);
  _612 = _611->index;
  _613 = (long unsigned int) k;
  _614 = std::vector<relate_type>::operator[] (&relate_type_array, _613);
  _615 = _614->relate_funtree;
  D.255055 = get_name (_615);

  <bb 539> :
  _616 = D.255055;
  stderr.1716_617 = stderr;
  fprintf (stderr.1716_617, "from %s basic block %d", _616, _612);

  <bb 540> :
  stderr.1717_618 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.1717_618);

  <bb 541> :
  _619 = (long unsigned int) k;
  _620 = std::vector<relate_type>::operator[] (&relate_type_array, _619);
  _621 = _620->now_fucntion;
  _622 = (long unsigned int) k;
  _623 = std::vector<relate_type>::operator[] (&relate_type_array, _622);
  _624 = _623->now_stmt;
  stderr.1718_625 = stderr;
  fprintf (stderr.1718_625, "subgraph cluster_%lu dot graph subgraph  start ID : %lu stmt(relate) \xef\xbc\x8c Tree ID : %lu : ", x, _624, _621);

  <bb 542> :
  _626 = (long unsigned int) k;
  _627 = std::vector<relate_type>::operator[] (&relate_type_array, _626);
  _628 = _627->stmt;
  debug (_628);

  <bb 543> :
  _629 = (long unsigned int) k;
  _630 = std::vector<relate_type>::operator[] (&relate_type_array, _629);
  _631 = _630->stmt;
  _632 = gimple_location_safe (_631);
  warning_at (_632, 0, "use location");

  <bb 544> :
  stderr.1719_633 = stderr;
  __builtin_fwrite ("dot graph subgrapend\n\n", 1, 22, stderr.1719_633);

  <bb 545> :
  k = k + 1;

  <bb 546> :
  _634 = (long unsigned int) k;
  _635 = std::vector<relate_type>::size (&relate_type_array);
  retval.1720 = _634 < _635;
  if (retval.1720 != 0)
    goto <bb 536>; [INV]
  else
    goto <bb 547>; [INV]

  <bb 547> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 548> :
  Looserulesfree.1721_636 = Looserulesfree;
  if (Looserulesfree.1721_636 != 0)
    goto <bb 549>; [INV]
  else
    goto <bb 581>; [INV]

  <bb 549> :
  stderr.1722_637 = stderr;
  __builtin_fwrite ("\n ================== Start Looserules free Check ================== \n", 1, 69, stderr.1722_637);

  <bb 550> :
  stderr.1723_638 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1723_638);

  <bb 551> :
  stderr.1724_639 = stderr;
  __builtin_fwrite ("\x1b[40;35m   this module possiable false positives \x1b[0m\n", 1, 54, stderr.1724_639);

  <bb 552> :
  stderr.1725_640 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1725_640);

  <bb 553> :
  _641 = table_temp->target;
  _642 = _641->base.code;
  if (_642 == 153)
    goto <bb 555>; [INV]
  else
    goto <bb 554>; [INV]

  <bb 554> :
  _643 = table_temp->target;
  _644 = _643->base.code;
  if (_644 == 165)
    goto <bb 555>; [INV]
  else
    goto <bb 581>; [INV]

  <bb 555> :
  _645 = table_temp->target;
  if (_645 != 0B)
    goto <bb 556>; [INV]
  else
    goto <bb 581>; [INV]

  <bb 556> :
  _646 = table_temp->target;
  debug_tree (_646);

  <bb 557> :
  stderr.1726_647 = stderr;
  __builtin_fwrite ("\n ================================================================= \n", 1, 69, stderr.1726_647);

  <bb 558> :
  function_free_collect.1728_648 = function_free_collect;
  D.255059 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1728_648, &function_tree);

  <bb 559> :
  _649 = D.255059;
  retval.1727 = _649 != 0B;
  if (retval.1727 != 0)
    goto <bb 560>; [INV]
  else
    goto <bb 581>; [INV]

  <bb 560> :
  function_free_collect.1729_650 = function_free_collect;
  D.255060 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1729_650, &function_tree);

  <bb 561> :
  _651 = D.255060;
  function_free_array::function_free_array (&callerFunArray, _651);

  <bb 562> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 563> :
  k = 0;
  goto <bb 579>; [INV]

  <bb 564> :
  _652 = table_temp->target;
  _653 = (long unsigned int) k;
  _654 = std::vector<free_type>::operator[] (&callerRetTypearray, _653);
  _655 = _654->free_tree;
  D.255061 = ptr_derefs_may_alias_p (_655, _652);

  <bb 565> :
  retval.1730 = D.255061;
  if (retval.1730 != 0)
    goto <bb 566>; [INV]
  else
    goto <bb 578>; [INV]

  <bb 566> :
  _656 = (long unsigned int) k;
  _657 = std::vector<free_type>::operator[] (&callerRetTypearray, _656);
  _658 = _657->stmt;
  retval.1731 = is_gimple_call (_658);
  if (retval.1731 != 0)
    goto <bb 567>; [INV]
  else
    goto <bb 570>; [INV]

  <bb 567> :
  _659 = (long unsigned int) k;
  _660 = std::vector<free_type>::operator[] (&callerRetTypearray, _659);
  _661 = _660->stmt;
  D.255062 = gimple_call_fn (_661);

  <bb 568> :
  _662 = D.255062;
  D.255063 = get_name (_662);

  <bb 569> :
  name = D.255063;

  <bb 570> :
  _663 = strcmp (name, "realloc");
  if (_663 == 0)
    goto <bb 571>; [INV]
  else
    goto <bb 573>; [INV]

  <bb 571> :
  stderr.1732_664 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find realloc stmt free same pointer \x1b[0m\n", 1, 63, stderr.1732_664);

  <bb 572> :
  stderr.1733_665 = stderr;
  __builtin_fwrite ("*/If realloc() fails, the initial memory block will not be freed() */", 1, 69, stderr.1733_665);
  goto <bb 574>; [INV]

  <bb 573> :
  stderr.1734_666 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n", 1, 60, stderr.1734_666);

  <bb 574> :
  _667 = (long unsigned int) k;
  _668 = std::vector<free_type>::operator[] (&callerRetTypearray, _667);
  _669 = _668->stmt;
  debug_gimple_stmt (_669);

  <bb 575> :
  _670 = (long unsigned int) k;
  _671 = std::vector<free_type>::operator[] (&callerRetTypearray, _670);
  _672 = _671->stmt;
  _673 = gimple_location_safe (_672);
  warning_at (_673, 0, "use location");

  <bb 576> :
  free_type::free_type (&free_type);
  _674 = (long unsigned int) k;
  _675 = std::vector<free_type>::operator[] (&callerRetTypearray, _674);
  _676 = _675->stmt;
  free_type.stmt = _676;
  free_type.Looserulesfree = 1;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 577> :
  find_Looserulesfreestmt = find_Looserulesfreestmt + 1;
  free_type = {CLOBBER};

  <bb 578> :
  k = k + 1;

  <bb 579> :
  _677 = (long unsigned int) k;
  _678 = std::vector<free_type>::size (&callerRetTypearray);
  retval.1735 = _677 < _678;
  if (retval.1735 != 0)
    goto <bb 564>; [INV]
  else
    goto <bb 580>; [INV]

  <bb 580> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 581> :
  useafterfree.1736_679 = useafterfree;
  if (useafterfree.1736_679 != 0)
    goto <bb 582>; [INV]
  else
    goto <bb 666>; [INV]

  <bb 582> :
  treeGimpleArray.1737_680 = treeGimpleArray;
  _681 = &table_temp->target;
  D.255068 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1737_680, _681);

  <bb 583> :
  user_tmp = D.255068;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  stderr.1738_682 = stderr;
  __builtin_fwrite ("\n ================== Start Use after free Check ================== \n", 1, 68, stderr.1738_682);

  <bb 584> :
  _683 = user_tmp->size;
  if (_683 > 0)
    goto <bb 585>; [INV]
  else
    goto <bb 664>; [INV]

  <bb 585> :
  if (user_tmp != 0B)
    goto <bb 586>; [INV]
  else
    goto <bb 587>; [INV]

  <bb 586> :
  iftmp.1739 = user_tmp->stmt;
  goto <bb 588>; [INV]

  <bb 587> :
  iftmp.1739 = 0B;

  <bb 588> :
  u_stmt = iftmp.1739;
  goto <bb 663>; [INV]

  <bb 589> :
  i = 0;
  goto <bb 658>; [INV]

  <bb 590> :
  _684 = (long unsigned int) i;
  D.255069 = std::vector<free_type>::at (&free_array, _684);

  <bb 591> :
  _685 = D.255069;
  _686 = _685->stmt;
  D.255070 = gimple_call_fndecl (_686);

  <bb 592> :
  _687 = D.255070;
  retval.1740 = _687 != 0B;
  if (retval.1740 != 0)
    goto <bb 593>; [INV]
  else
    goto <bb 657>; [INV]

  <bb 593> :
  _688 = (long unsigned int) i;
  D.255071 = std::vector<free_type>::at (&free_array, _688);

  <bb 594> :
  _689 = D.255071;
  _690 = _689->stmt;
  retval.1741 = u_stmt != _690;
  if (retval.1741 != 0)
    goto <bb 595>; [INV]
  else
    goto <bb 657>; [INV]

  <bb 595> :
  retval.1742 = is_gimple_call (u_stmt);
  if (retval.1742 != 0)
    goto <bb 596>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 596> :
  _691 = (long unsigned int) i;
  D.255072 = std::vector<free_type>::at (&free_array, _691);

  <bb 597> :
  _692 = D.255072;
  _693 = _692->stmt;
  D.255073 = gimple_call_fndecl (_693);

  <bb 598> :
  _694 = D.255073;
  D.255074 = gimple_call_fndecl (u_stmt);

  <bb 599> :
  _695 = D.255074;
  retval.1743 = _694 == _695;
  if (retval.1743 != 0)
    goto <bb 600>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 600> :
  // predicted unlikely by continue predictor.
  goto <bb 657>; [INV]

  <bb 601> :
  _696 = (long unsigned int) i;
  D.255075 = std::vector<free_type>::at (&free_array, _696);

  <bb 602> :
  _697 = D.255075;
  _698 = _697->stmt;
  D.255076 = gimple_call_num_args (_698);

  <bb 603> :
  _699 = D.255076;
  retval.1744 = _699 != 0;
  if (retval.1744 != 0)
    goto <bb 604>; [INV]
  else
    goto <bb 632>; [INV]

  <bb 604> :
  _700 = (long unsigned int) i;
  D.255077 = std::vector<free_type>::at (&free_array, _700);

  <bb 605> :
  _701 = D.255077;
  _702 = _701->stmt;
  D.255078 = gimple_call_arg (_702, 0);

  <bb 606> :
  callarg = D.255078;
  _703 = callarg->base.code;
  if (_703 == 153)
    goto <bb 607>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 607> :
  def_stmt = callarg->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 608>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 608> :
  _704 = gimple_code (def_stmt);
  retval.1745 = _704 == 18;
  if (retval.1745 != 0)
    goto <bb 609>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 609> :
  D.255079 = gimple_phi_num_args (def_stmt);

  <bb 610> :
  _705 = D.255079;
  retval.1746 = _705 != 0;
  if (retval.1746 != 0)
    goto <bb 611>; [INV]
  else
    goto <bb 618>; [INV]

  <bb 611> :
  k = 0;
  goto <bb 616>; [INV]

  <bb 612> :
  _706 = (long unsigned int) k;
  D.255080 = gimple_phi_arg_def (def_stmt, _706);

  <bb 613> :
  arg = D.255080;
  _707 = user_tmp->target;
  if (arg == _707)
    goto <bb 614>; [INV]
  else
    goto <bb 615>; [INV]

  <bb 614> :
  // predicted unlikely by continue predictor.

  <bb 615> :
  k = k + 1;

  <bb 616> :
  D.255081 = gimple_phi_num_args (def_stmt);

  <bb 617> :
  _708 = D.255081;
  k.1748_709 = (unsigned int) k;
  retval.1747 = _708 > k.1748_709;
  if (retval.1747 != 0)
    goto <bb 612>; [INV]
  else
    goto <bb 618>; [INV]

  <bb 618> :
  D.255082 = gimple_phi_result (def_stmt);

  <bb 619> :
  _710 = D.255082;
  _711 = user_tmp->target;
  retval.1749 = _710 == _711;
  if (retval.1749 != 0)
    goto <bb 620>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 620> :
  // predicted unlikely by continue predictor.
  goto <bb 657>; [INV]

  <bb 621> :
  retval.1750 = is_gimple_call (u_stmt);
  if (retval.1750 != 0)
    goto <bb 622>; [INV]
  else
    goto <bb 628>; [INV]

  <bb 622> :
  _712 = (long unsigned int) i;
  D.255083 = std::vector<free_type>::at (&free_array, _712);

  <bb 623> :
  _713 = D.255083;
  _714 = _713->stmt;
  D.255084 = gimple_call_fndecl (_714);

  <bb 624> :
  _715 = D.255084;
  D.255085 = gimple_call_fndecl (u_stmt);

  <bb 625> :
  _716 = D.255085;
  retval.1751 = _715 == _716;
  if (retval.1751 != 0)
    goto <bb 626>; [INV]
  else
    goto <bb 628>; [INV]

  <bb 626> :
  _717 = user_tmp->target;
  if (callarg == _717)
    goto <bb 627>; [INV]
  else
    goto <bb 628>; [INV]

  <bb 627> :
  // predicted unlikely by continue predictor.
  goto <bb 657>; [INV]

  <bb 628> :
  _718 = gimple_code (u_stmt);
  retval.1752 = _718 == 18;
  if (retval.1752 != 0)
    goto <bb 629>; [INV]
  else
    goto <bb 632>; [INV]

  <bb 629> :
  D.255086 = gimple_phi_result (u_stmt);

  <bb 630> :
  _719 = D.255086;
  retval.1753 = callarg == _719;
  if (retval.1753 != 0)
    goto <bb 631>; [INV]
  else
    goto <bb 632>; [INV]

  <bb 631> :
  // predicted unlikely by continue predictor.
  goto <bb 657>; [INV]

  <bb 632> :
  function_tree.1755_720 = function_tree;
  _721 = (long unsigned int) i;
  D.255087 = std::vector<free_type>::at (&free_array, _721);

  <bb 633> :
  _722 = D.255087;
  _723 = _722->stmt;
  D.255088 = Location_b2 (_723, u_stmt, function_tree.1755_720);

  <bb 634> :
  retval.1754 = D.255088;
  if (retval.1754 != 0)
    goto <bb 635>; [INV]
  else
    goto <bb 657>; [INV]

  <bb 635> :
  stderr.1756_724 = stderr;
  __builtin_fwrite ("\n============================================================\n", 1, 62, stderr.1756_724);

  <bb 636> :
  _725 = (long unsigned int) i;
  D.255089 = std::vector<free_type>::at (&free_array, _725);

  <bb 637> :
  _726 = D.255089;
  _727 = _726->Looserulesfree;
  retval.1757 = _727 != 0;
  if (retval.1757 != 0)
    goto <bb 638>; [INV]
  else
    goto <bb 639>; [INV]

  <bb 638> :
  stderr.1758_728 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n", 1, 60, stderr.1758_728);

  <bb 639> :
  _729 = (long unsigned int) i;
  D.255090 = std::vector<free_type>::at (&free_array, _729);

  <bb 640> :
  _730 = D.255090;
  _731 = _730->stmt;
  debug_gimple_stmt (_731);

  <bb 641> :
  _732 = (long unsigned int) i;
  D.255091 = std::vector<free_type>::at (&free_array, _732);

  <bb 642> :
  _733 = D.255091;
  _734 = _733->stmt;
  _735 = gimple_location_safe (_734);
  warning_at (_735, 0, "free in this location");

  <bb 643> :
  _736 = (long unsigned int) i;
  D.255092 = std::vector<free_type>::at (&free_array, _736);

  <bb 644> :
  _737 = D.255092;
  _738 = _737->stmt;
  _739 = gimple_bb (_738);
  _740 = table_temp->node;
  check_bbinfo (_740, _739);

  <bb 645> :
  stderr.1759_741 = stderr;
  __builtin_fwrite ("\n===== possiable asias =====\n", 1, 29, stderr.1759_741);

  <bb 646> :
  debug_gimple_stmt (u_stmt);

  <bb 647> :
  _742 = gimple_location_safe (u_stmt);
  warning_at (_742, 0, "use location");

  <bb 648> :
  _743 = gimple_bb (u_stmt);
  _744 = table_temp->node;
  check_bbinfo (_744, _743);

  <bb 649> :
  stderr.1760_745 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1760_745);

  <bb 650> :
  _746 = (long unsigned int) i;
  D.255093 = std::vector<free_type>::at (&free_array, _746);

  <bb 651> :
  _747 = D.255093;
  _748 = _747->stmt;
  D.255094 = gimple_call_fn (_748);

  <bb 652> :
  _749 = D.255094;
  D.255095 = get_name (_749);

  <bb 653> :
  name = D.255095;
  _750 = strcmp (name, "realloc");
  if (_750 == 0)
    goto <bb 654>; [INV]
  else
    goto <bb 655>; [INV]

  <bb 654> :
  stderr.1761_751 = stderr;
  __builtin_fwrite ("\x1b[40;35m  realloc Use after free error! \x1b[0m\n", 1, 45, stderr.1761_751);
  goto <bb 656>; [INV]

  <bb 655> :
  stderr.1762_752 = stderr;
  __builtin_fwrite ("\x1b[40;35m    Use after free error! \x1b[0m\n", 1, 39, stderr.1762_752);

  <bb 656> :
  stderr.1763_753 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1763_753);

  <bb 657> :
  i = i + 1;

  <bb 658> :
  _754 = (long unsigned int) i;
  _755 = std::vector<free_type>::size (&free_array);
  retval.1764 = _754 < _755;
  if (retval.1764 != 0)
    goto <bb 590>; [INV]
  else
    goto <bb 659>; [INV]

  <bb 659> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 660>; [INV]
  else
    goto <bb 661>; [INV]

  <bb 660> :
  iftmp.1765 = user_tmp->stmt;
  goto <bb 662>; [INV]

  <bb 661> :
  iftmp.1765 = 0B;

  <bb 662> :
  u_stmt = iftmp.1765;

  <bb 663> :
  if (user_tmp != 0B)
    goto <bb 589>; [INV]
  else
    goto <bb 664>; [INV]

  <bb 664> :
  stderr.1766_756 = stderr;
  __builtin_fwrite ("\ndot graph END\n", 1, 15, stderr.1766_756);

  <bb 665> :
  start = {CLOBBER};

  <bb 666> :
  stderr.1767_757 = stderr;
  __builtin_fwrite (" \n Finish check Pointer Collect  \n", 1, 34, stderr.1767_757);

  <bb 667> :
  function_relate_array::~function_relate_array (&maxbb_array);
  std::vector<relate_type>::~vector (&maxbb_type_array);
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  goto <bb 669>; [INV]

  <bb 668> :
  PTABLE_IS_NULL.1768_758 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1768_758;

  <bb 669> :
  _759 = table_temp->swap_type;
  _760 = (unsigned int) _759;
  FUNCITON_THREAD.1769_761 = FUNCITON_THREAD;
  if (_760 == FUNCITON_THREAD.1769_761)
    goto <bb 670>; [INV]
  else
    goto <bb 681>; [INV]

  <bb 670> :
  if (is_pthread_detched == 0)
    goto <bb 671>; [INV]
  else
    goto <bb 678>; [INV]

  <bb 671> :
  if (find_pthread_join == 0)
    goto <bb 672>; [INV]
  else
    goto <bb 675>; [INV]

  <bb 672> :
  stderr.1770_762 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1770_762);

  <bb 673> :
  stderr.1771_763 = stderr;
  __builtin_fwrite ("\x1b[40;31m    pthread is JOINABLE but no pthread_join stmt \x1b[0m\n", 1, 62, stderr.1771_763);

  <bb 674> :
  stderr.1772_764 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1772_764);
  goto <bb 681>; [INV]

  <bb 675> :
  stderr.1773_765 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1773_765);

  <bb 676> :
  stderr.1774_766 = stderr;
  __builtin_fwrite ("\x1b[40;32m    pthread is JOINABLE and no memory leak   \x1b[0m\n", 1, 58, stderr.1774_766);

  <bb 677> :
  stderr.1775_767 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1775_767);
  goto <bb 681>; [INV]

  <bb 678> :
  stderr.1776_768 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1776_768);

  <bb 679> :
  stderr.1777_769 = stderr;
  __builtin_fwrite ("\x1b[40;32m    pthread is DETACHED and no memory leak  \x1b[0m\n", 1, 57, stderr.1777_769);

  <bb 680> :
  stderr.1778_770 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1778_770);

  <bb 681> :
  ptable_type.1779_771 = (unsigned int) ptable_type;
  IS_MALLOC_FUCNTION.1780_772 = IS_MALLOC_FUCNTION;
  if (ptable_type.1779_771 == IS_MALLOC_FUCNTION.1780_772)
    goto <bb 682>; [INV]
  else
    goto <bb 684>; [INV]

  <bb 682> :
  find_mallocstmt.1781_773 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1782_774 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1781_773 == IS_OTHRER_FUCNTION.1782_774)
    goto <bb 683>; [INV]
  else
    goto <bb 684>; [INV]

  <bb 683> :
  IS_MALLOC_FUCNTION.1783_775 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1783_775;

  <bb 684> :
  Looserulesfree.1784_776 = Looserulesfree;
  if (Looserulesfree.1784_776 != 0)
    goto <bb 685>; [INV]
  else
    goto <bb 693>; [INV]

  <bb 685> :
  stderr.1785_777 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1785_777);

  <bb 686> :
  stderr.1786_778 = stderr;
  fprintf (stderr.1786_778, "\x1b[40;35m  \tLooserules free count:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 687> :
  find_freestmt.1787_779 = find_freestmt;
  stderr.1788_780 = stderr;
  fprintf (stderr.1788_780, "\x1b[40;31m  \tfree count:%d \x1b[0m\n", find_freestmt.1787_779);

  <bb 688> :
  if (find_Looserulesfreestmt > 1)
    goto <bb 689>; [INV]
  else
    goto <bb 690>; [INV]

  <bb 689> :
  stderr.1789_781 = stderr;
  fprintf (stderr.1789_781, "\x1b[40;31m  \tpossible double free [Looserules]:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 690> :
  find_freestmt.1790_782 = find_freestmt;
  if (find_freestmt.1790_782 > 1)
    goto <bb 691>; [INV]
  else
    goto <bb 692>; [INV]

  <bb 691> :
  find_freestmt.1791_783 = find_freestmt;
  stderr.1792_784 = stderr;
  fprintf (stderr.1792_784, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1791_783);

  <bb 692> :
  stderr.1793_785 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1793_785);

  <bb 693> :
  find_mallocstmt.1794_786 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1795_787 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1794_786 == IS_MALLOC_FUCNTION.1795_787)
    goto <bb 694>; [INV]
  else
    goto <bb 708>; [INV]

  <bb 694> :
  find_freestmt.1796_788 = find_freestmt;
  if (find_freestmt.1796_788 == 0)
    goto <bb 695>; [INV]
  else
    goto <bb 698>; [INV]

  <bb 695> :
  stderr.1797_789 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1797_789);

  <bb 696> :
  stderr.1798_790 = stderr;
  __builtin_fwrite ("\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n", 1, 51, stderr.1798_790);

  <bb 697> :
  stderr.1799_791 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1799_791);
  goto <bb 740>; [INV]

  <bb 698> :
  find_freestmt.1800_792 = find_freestmt;
  if (find_freestmt.1800_792 == 1)
    goto <bb 699>; [INV]
  else
    goto <bb 704>; [INV]

  <bb 699> :
  stderr.1801_793 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1801_793);

  <bb 700> :
  if (find_phistmt == 1)
    goto <bb 701>; [INV]
  else
    goto <bb 702>; [INV]

  <bb 701> :
  stderr.1802_794 = stderr;
  __builtin_fwrite ("\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n", 1, 68, stderr.1802_794);
  goto <bb 703>; [INV]

  <bb 702> :
  stderr.1803_795 = stderr;
  __builtin_fwrite ("\x1b[40;32m   No memory leak, need more check!  \x1b[0m\n", 1, 50, stderr.1803_795);

  <bb 703> :
  stderr.1804_796 = stderr;
  __builtin_fwrite ("\n======================================================================\n\n", 1, 73, stderr.1804_796);
  goto <bb 740>; [INV]

  <bb 704> :
  find_freestmt.1805_797 = find_freestmt;
  if (find_freestmt.1805_797 > 1)
    goto <bb 705>; [INV]
  else
    goto <bb 740>; [INV]

  <bb 705> :
  stderr.1806_798 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1806_798);

  <bb 706> :
  find_freestmt.1807_799 = find_freestmt;
  stderr.1808_800 = stderr;
  fprintf (stderr.1808_800, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1807_799);

  <bb 707> :
  stderr.1809_801 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1809_801);
  goto <bb 740>; [INV]

  <bb 708> :
  find_mallocstmt.1810_802 = (unsigned int) find_mallocstmt;
  IS_HEAP_FUCNTION.1811_803 = IS_HEAP_FUCNTION;
  if (find_mallocstmt.1810_802 == IS_HEAP_FUCNTION.1811_803)
    goto <bb 709>; [INV]
  else
    goto <bb 712>; [INV]

  <bb 709> :
  stderr.1812_804 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1812_804);

  <bb 710> :
  stderr.1813_805 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tthis fucntion return possible is heap-object \x1b[0m\n", 1, 60, stderr.1813_805);

  <bb 711> :
  stderr.1814_806 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1814_806);
  goto <bb 740>; [INV]

  <bb 712> :
  find_mallocstmt.1815_807 = (unsigned int) find_mallocstmt;
  PTABLE_IS_NULL.1816_808 = PTABLE_IS_NULL;
  if (find_mallocstmt.1815_807 == PTABLE_IS_NULL.1816_808)
    goto <bb 713>; [INV]
  else
    goto <bb 720>; [INV]

  <bb 713> :
  stderr.1817_809 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1817_809);

  <bb 714> :
  stderr.1818_810 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tCan\'t find this fucntion in Pointer table \x1b[0m\n", 1, 57, stderr.1818_810);

  <bb 715> :
  stderr.1819_811 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tPossiable no other stmt relate with this stmt \x1b[0m\n", 1, 61, stderr.1819_811);

  <bb 716> :
  _812 = table_temp->last_stmt;
  D.255100 = empty_body_p (_812);

  <bb 717> :
  retval.1820 = D.255100;
  if (retval.1820 != 0)
    goto <bb 718>; [INV]
  else
    goto <bb 719>; [INV]

  <bb 718> :
  _813 = table_temp->last_stmt;
  _814 = gimple_location_safe (_813);
  warning_at (_814, 0, "use location");

  <bb 719> :
  stderr.1821_815 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1821_815);
  goto <bb 740>; [INV]

  <bb 720> :
  stderr.1822_816 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1822_816);

  <bb 721> :
  stderr.1823_817 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tthis stmt need double check \x1b[0m\n", 1, 43, stderr.1823_817);

  <bb 722> :
  find_retheapstmt.1824_818 = find_retheapstmt;
  if (find_retheapstmt.1824_818 > 0)
    goto <bb 723>; [INV]
  else
    goto <bb 740>; [INV]

  <bb 723> :
  find_freestmt.1825_819 = find_freestmt;
  if (find_freestmt.1825_819 > 2)
    goto <bb 724>; [INV]
  else
    goto <bb 728>; [INV]

  <bb 724> :
  stderr.1826_820 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1826_820);

  <bb 725> :
  stderr.1827_821 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1827_821);

  <bb 726> :
  find_freestmt.1828_822 = find_freestmt;
  stderr.1829_823 = stderr;
  fprintf (stderr.1829_823, "\x1b[40;31m  \tpossible double free :%d \x1b[0m\n", find_freestmt.1828_822);

  <bb 727> :
  stderr.1830_824 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1830_824);
  goto <bb 740>; [INV]

  <bb 728> :
  find_freestmt.1831_825 = find_freestmt;
  if (find_freestmt.1831_825 == 1)
    goto <bb 729>; [INV]
  else
    goto <bb 735>; [INV]

  <bb 729> :
  stderr.1832_826 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1832_826);

  <bb 730> :
  stderr.1833_827 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1833_827);

  <bb 731> :
  if (find_phistmt == 1)
    goto <bb 732>; [INV]
  else
    goto <bb 733>; [INV]

  <bb 732> :
  stderr.1834_828 = stderr;
  __builtin_fwrite ("\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n", 1, 68, stderr.1834_828);
  goto <bb 734>; [INV]

  <bb 733> :
  stderr.1835_829 = stderr;
  __builtin_fwrite ("\x1b[40;32m   Maybe you don\'t have memory leak.... need more checks  \x1b[0m\n", 1, 71, stderr.1835_829);

  <bb 734> :
  stderr.1836_830 = stderr;
  __builtin_fwrite ("\n======================================================================\n\n", 1, 73, stderr.1836_830);
  goto <bb 740>; [INV]

  <bb 735> :
  find_freestmt.1837_831 = find_freestmt;
  if (find_freestmt.1837_831 == 0)
    goto <bb 736>; [INV]
  else
    goto <bb 740>; [INV]

  <bb 736> :
  stderr.1838_832 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1838_832);

  <bb 737> :
  stderr.1839_833 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1839_833);

  <bb 738> :
  stderr.1840_834 = stderr;
  __builtin_fwrite ("\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n", 1, 51, stderr.1840_834);

  <bb 739> :
  stderr.1841_835 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1841_835);

  <bb 740> :
  stderr.1842_836 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1842_836);

  <bb 741> :
  std::vector<basic_block_def*>::~vector (&earlyend);
  finally_tmp.1844 = 1;

  <bb 742> :
  std::vector<free_type>::~vector (&free_array);
  if (finally_tmp.1844 == 1)
    goto <bb 743>; [INV]
  else
    goto <bb 745>; [INV]

  <bb 743> :
<L612>:

  <bb 744> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  goto <bb 746>; [INV]

  <bb 745> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  goto <bb 747>; [INV]

  <bb 746> :
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};

  <bb 747> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 748>; [INV]
  else
    goto <bb 749>; [INV]

  <bb 748> :
  iftmp.1843 = table_temp->target;
  goto <bb 750>; [INV]

  <bb 749> :
  iftmp.1843 = 0B;

  <bb 750> :
  t = iftmp.1843;

  <bb 751> :
  if (t != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 752>; [INV]

  <bb 752> :
  start = {CLOBBER};
  start2 = {CLOBBER};
  return;

  <bb 753> :
<L629>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 4

  <bb 754> :
<L630>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 3

  <bb 755> :
<L631>:
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 2

  <bb 756> :
<L632>:
  operator delete (D.201316, 48);
  resx 13

  <bb 757> :
<L633>:
  e2 = {CLOBBER};
  ei2 = {CLOBBER};
  resx 19

  <bb 758> :
<L634>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 18

  <bb 759> :
<L635>:
  relate_type = {CLOBBER};
  resx 22

  <bb 760> :
<L636>:
  free_type = {CLOBBER};
  resx 17

  <bb 761> :
<L637>:
  operator delete (D.201438, 48);
  resx 26

  <bb 762> :
<L638>:
  it_i = {CLOBBER};
  resx 25

  <bb 763> :
<L639>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 33

  <bb 764> :
<L640>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 32

  <bb 765> :
<L641>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 31

  <bb 766> :
<L642>:
  free_type = {CLOBBER};
  resx 40

  <bb 767> :
<L643>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 39

  <bb 768> :
<L644>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 38

  <bb 769> :
<L645>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 37

  <bb 770> :
<L646>:
  start = {CLOBBER};
  resx 45

  <bb 771> :
<L647>:
  function_relate_array::~function_relate_array (&maxbb_array);
  resx 16

  <bb 772> :
<L648>:
  std::vector<relate_type>::~vector (&maxbb_type_array);
  resx 15

  <bb 773> :
<L649>:
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  resx 12

  <bb 774> :
<L650>:
  std::vector<basic_block_def*>::~vector (&earlyend);
  resx 11

  <bb 775> :
<L651>:
  std::vector<free_type>::~vector (&free_array);
  resx 10

  <bb 776> :
<L652>:
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  resx 9

  <bb 777> :
<L653>:
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  resx 8

  <bb 778> :
<L654>:
  start = {CLOBBER};
  start2 = {CLOBBER};
  resx 1

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6201, decl_uid=170292, cgraph_uid=3177, symbol_order=3930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170300;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6199, decl_uid=169750, cgraph_uid=3174, symbol_order=3927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2Ev, funcdef_no=7552, decl_uid=169642, cgraph_uid=4184, symbol_order=4969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this);
  _1 = &this->D.169645;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2Ev, funcdef_no=8365, decl_uid=169420, cgraph_uid=4997, symbol_order=5786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2Ev, funcdef_no=9158, decl_uid=169349, cgraph_uid=5790, symbol_order=6579)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8368, decl_uid=169592, cgraph_uid=5000, symbol_order=5789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7776, decl_uid=191737, cgraph_uid=4408, symbol_order=5193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8724, decl_uid=191696, cgraph_uid=5356, symbol_order=6145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.255116;
  unsigned int D.255115;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.255115 = hash_table_higher_prime_index (size);
  size_prime_index = D.255115;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.255116 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.255116;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function ei_start_1 (_ZL10ei_start_1PP3vecIP8edge_def5va_gc8vl_embedE, funcdef_no=1666, decl_uid=75277, cgraph_uid=817, symbol_order=969)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_iterator ei_start_1 (struct vec * * ev)
{
  struct edge_iterator i;
  struct edge_iterator D.255117;

  <bb 2> :
  i.index = 0;
  i.container = ev;
  D.255117 = i;
  i = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255117;

}



;; Function ei_next (_ZL7ei_nextP13edge_iterator, funcdef_no=1670, decl_uid=75328, cgraph_uid=821, symbol_order=973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ei_next (struct edge_iterator * i)
{
  <bb 2> :
  _1 = i->index;
  _2 = _1 + 1;
  i->index = _2;
  return;

}



;; Function ei_cond (_ZL7ei_cond13edge_iteratorPP8edge_def, funcdef_no=1674, decl_uid=75345, cgraph_uid=825, symbol_order=977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
bool ei_cond (struct edge_iterator ei, struct edge_def * * p)
{
  struct edge_def * D.255126;
  bool D.255125;
  bool D.255123;
  bool retval.1845;

  <bb 2> :
  D.255125 = ei_end_p (ei);
  _1 = D.255125;
  retval.1845 = ~_1;
  if (retval.1845 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255126 = ei_edge (ei);
  _2 = D.255126;
  *p = _2;
  D.255123 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  *p = 0B;
  D.255123 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.255123;

}



;; Function ei_end_p (_ZL8ei_end_p13edge_iterator, funcdef_no=1668, decl_uid=75320, cgraph_uid=819, symbol_order=971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool ei_end_p (struct edge_iterator i)
{
  unsigned int D.255129;
  bool D.255127;

  <bb 2> :
  _1 = i.index;
  _2 = ei_container (i);
  D.255129 = vec_safe_length<edge_def*, va_gc> (_2);
  _3 = D.255129;
  D.255127 = _1 == _3;

  <bb 3> :
<L0>:
  return D.255127;

}



;; Function ei_container (_ZL12ei_container13edge_iterator, funcdef_no=1665, decl_uid=75274, cgraph_uid=816, symbol_order=968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vec * ei_container (struct edge_iterator i)
{
  struct vec * D.255130;

  <bb 2> :
  _1 = i.container;
  D.255130 = *_1;

  <bb 3> :
<L0>:
  return D.255130;

}



;; Function vec_safe_length<edge_def*, va_gc> (_Z15vec_safe_lengthIP8edge_def5va_gcEjPK3vecIT_T0_8vl_embedE, funcdef_no=6956, decl_uid=75252, cgraph_uid=3588, symbol_order=4370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int vec_safe_length<edge_def*, va_gc> (const struct vec * v)
{
  unsigned int iftmp.1846;
  unsigned int D.255132;

  <bb 2> :
  if (v != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1846 = vec<edge_def*, va_gc>::length (v);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1846 = 0;

  <bb 5> :
  D.255132 = iftmp.1846;

  <bb 6> :
<L3>:
  return D.255132;

}



;; Function vec<edge_def*, va_gc>::length (_ZNK3vecIP8edge_def5va_gc8vl_embedE6lengthEv, funcdef_no=7963, decl_uid=75146, cgraph_uid=4595, symbol_order=5380)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int vec<edge_def*, va_gc>::length (const struct vec * const this)
{
  unsigned int D.255138;

  <bb 2> :
  D.255138 = this->m_vecpfx.m_num;

  <bb 3> :
<L0>:
  return D.255138;

}



;; Function ei_edge (_ZL7ei_edge13edge_iterator, funcdef_no=1672, decl_uid=75335, cgraph_uid=823, symbol_order=975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * ei_edge (struct edge_iterator i)
{
  struct edge_def * D.255140;

  <bb 2> :
  _1 = ei_container (i);
  _2 = i.index;
  _3 = vec<edge_def*, va_gc>::operator[] (_1, _2);
  D.255140 = *_3;

  <bb 3> :
<L0>:
  return D.255140;

}



;; Function vec<edge_def*, va_gc>::operator[] (_ZN3vecIP8edge_def5va_gc8vl_embedEixEj, funcdef_no=6957, decl_uid=75165, cgraph_uid=3589, symbol_order=4371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * & vec<edge_def*, va_gc>::operator[] (struct vec * const this, unsigned int ix)
{
  struct edge_def * & D.255142;

  <bb 2> :
  D.255142 = &this->m_vecdata[ix];

  <bb 3> :
<L0>:
  return D.255142;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7784, decl_uid=201483, cgraph_uid=4416, symbol_order=5201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (const struct __normal_iterator * const this)
{
  struct relate_type * D.255144;

  <bb 2> :
  D.255144 = this->_M_current;

  <bb 3> :
<L0>:
  return D.255144;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7783, decl_uid=201485, cgraph_uid=4415, symbol_order=5200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.255146;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.255146 = this;

  <bb 3> :
<L0>:
  return D.255146;

}



;; Function __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIP11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7782, decl_uid=201583, cgraph_uid=4414, symbol_order=5199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.255148;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.255148 = _2 != _4;

  <bb 3> :
<L0>:
  return D.255148;

}



;; Function hash_map<tree_node*, function_relate_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6790, decl_uid=201599, cgraph_uid=3421, symbol_order=4198)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7786, decl_uid=191706, cgraph_uid=4418, symbol_order=5203)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.255163;
  bool D.255162;
  size_t i;
  bool iftmp.1848;
  bool retval.1847;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.255162 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.255162;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.255163 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.255163;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1848 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1848 = 0;

  <bb 7> :
  retval.1847 = iftmp.1848;
  if (retval.1847 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_relate_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8732, decl_uid=191480, cgraph_uid=5364, symbol_order=6153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9553, decl_uid=227150, cgraph_uid=6185, symbol_order=6974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_relate_array::~function_relate_array (_2);
  return;

}



;; Function std::vector<relate_type>::operator[] (_ZNSt6vectorI11relate_typeSaIS0_EEixEm, funcdef_no=7779, decl_uid=179449, cgraph_uid=4411, symbol_order=5196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<relate_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.255164;

  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_start;
  _2 = __n * 48;
  D.255164 = _1 + _2;

  <bb 3> :
<L0>:
  return D.255164;

}



;; Function gimple_phi_arg_def (_ZL18gimple_phi_arg_defP6gimplem, funcdef_no=2276, decl_uid=93486, cgraph_uid=1413, symbol_order=1573)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_arg_def (struct gimple * gs, size_t index)
{
  struct phi_arg_d * D.255168;
  union tree_node * D.255166;

  <bb 2> :
  _1 = (unsigned int) index;
  D.255168 = gimple_phi_arg (gs, _1);
  _2 = D.255168;
  D.255166 = _2->def;

  <bb 3> :
<L0>:
  return D.255166;

}



;; Function gimple_phi_arg (_ZL14gimple_phi_argP6gimplej, funcdef_no=2271, decl_uid=93448, cgraph_uid=1408, symbol_order=1568)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct phi_arg_d * gimple_phi_arg (struct gimple * gs, unsigned int index)
{
  struct gphi * D.255171;
  struct gphi * phi_stmt;
  struct phi_arg_d * D.255169;

  <bb 2> :
  D.255171 = as_a<gphi*, gimple> (gs);
  phi_stmt = D.255171;
  D.255169 = gimple_phi_arg (phi_stmt, index);

  <bb 3> :
<L0>:
  return D.255169;

}



;; Function as_a<gphi*, gimple> (_Z4as_aIP4gphi6gimpleET_PT0_, funcdef_no=7056, decl_uid=93430, cgraph_uid=3688, symbol_order=4470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gphi * as_a<gphi*, gimple> (struct gimple * p)
{
  struct gphi * D.255172;

  <bb 2> :
  D.255172 = reinterpret_is_a_helper<gphi*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.255172;

}



;; Function gimple_phi_arg (_ZL14gimple_phi_argP4gphij, funcdef_no=2269, decl_uid=93440, cgraph_uid=1406, symbol_order=1566)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct phi_arg_d * gimple_phi_arg (struct gphi * gs, unsigned int index)
{
  struct phi_arg_d * D.255174;

  <bb 2> :
  D.255174 = &gs->args[index];

  <bb 3> :
<L0>:
  return D.255174;

}



;; Function gimple_phi_num_args (_ZL19gimple_phi_num_argsPK6gimple, funcdef_no=2263, decl_uid=93413, cgraph_uid=1400, symbol_order=1560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_phi_num_args (const struct gimple * gs)
{
  const struct gphi * D.255178;
  const struct gphi * phi_stmt;
  unsigned int D.255176;

  <bb 2> :
  D.255178 = as_a<const gphi*, const gimple> (gs);
  phi_stmt = D.255178;
  D.255176 = phi_stmt->nargs;

  <bb 3> :
<L0>:
  return D.255176;

}



;; Function std::vector<free_type>::at (_ZNSt6vectorI9free_typeSaIS0_EE2atEm, funcdef_no=7788, decl_uid=176320, cgraph_uid=4420, symbol_order=5205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::at (struct vector * const this, size_type __n)
{
  struct value_type & D.255179;

  <bb 2> :
  std::vector<free_type>::_M_range_check (this, __n);
  D.255179 = std::vector<free_type>::operator[] (this, __n);

  <bb 3> :
<L0>:
  return D.255179;

}



;; Function std::vector<free_type>::_M_range_check (_ZNKSt6vectorI9free_typeSaIS0_EE14_M_range_checkEm, funcdef_no=8734, decl_uid=176317, cgraph_uid=5366, symbol_order=6155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
void std::vector<free_type>::_M_range_check (const struct vector * const this, size_type __n)
{
  bool retval.1849;

  <bb 2> :
  _1 = std::vector<free_type>::size (this);
  retval.1849 = __n >= _1;
  if (retval.1849 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = std::vector<free_type>::size (this);
  std::__throw_out_of_range_fmt ("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, _2);

  <bb 4> :
  return;

}



;; Function std::vector<basic_block_def*>::~vector (_ZNSt6vectorIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7773, decl_uid=170297, cgraph_uid=4405, symbol_order=5190)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170300;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.170300._M_impl.D.169645._M_finish;
  _4 = this->D.170300._M_impl.D.169645._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_4, _3, _2);
  _5 = &this->D.170300;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<basic_block_def**, basic_block_def*> (_ZSt8_DestroyIPP15basic_block_defS1_EvT_S3_RSaIT0_E, funcdef_no=8722, decl_uid=214422, cgraph_uid=5354, symbol_order=6143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct allocator & D.227124)
{
  <bb 2> :
  std::_Destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy<basic_block_def**> (_ZSt8_DestroyIPP15basic_block_defEvT_S3_, funcdef_no=9551, decl_uid=227126, cgraph_uid=6183, symbol_order=6972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<basic_block_def**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP15basic_block_defEEvT_S5_, funcdef_no=10146, decl_uid=235495, cgraph_uid=6778, symbol_order=7571)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<basic_block_def**> (struct basic_block_def * * D.240431, struct basic_block_def * * D.240432)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7558, decl_uid=169755, cgraph_uid=4190, symbol_order=4975)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.169645._M_end_of_storage;
  _2 = this->_M_impl.D.169645._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.169645._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implD2Ev, funcdef_no=6197, decl_uid=169692, cgraph_uid=3171, symbol_order=3924)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<basic_block_def*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<basic_block_def*>::~allocator (_ZNSaIP15basic_block_defED2Ev, funcdef_no=7555, decl_uid=169425, cgraph_uid=4187, symbol_order=4972)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defED2Ev, funcdef_no=8371, decl_uid=169354, cgraph_uid=5003, symbol_order=5792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function record_fucntion (_Z15record_fucntionP11cgraph_node, funcdef_no=6792, decl_uid=186985, cgraph_uid=3456, symbol_order=4233)

Removing basic block 50
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
;;
;; Loop 1
;;  header 61, latch 60
;;  depth 1, outer 0
;;  nodes: 61 60 59 57 58 6 11 10 9 8 7 5 4 56 55 54 53 30 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32 29 13 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14 12
;;
;; Loop 3
;;  header 53, latch 52
;;  depth 2, outer 1
;;  nodes: 53 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 4
;;  header 51, latch 50
;;  depth 3, outer 3
;;  nodes: 51 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 5
;;  header 45, latch 44
;;  depth 4, outer 4
;;  nodes: 45 44 42 43 41 46
;;
;; Loop 2
;;  header 29, latch 28
;;  depth 2, outer 1
;;  nodes: 29 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14
;;
;; Loop 6
;;  header 23, latch 22
;;  depth 3, outer 2
;;  nodes: 23 22 20 21
;; 2 succs { 72 3 }
;; 3 succs { 61 }
;; 4 succs { 71 5 }
;; 5 succs { 6 7 }
;; 6 succs { 58 }
;; 7 succs { 71 8 }
;; 8 succs { 71 9 }
;; 9 succs { 10 12 }
;; 10 succs { 71 11 }
;; 11 succs { 58 }
;; 12 succs { 69 13 }
;; 13 succs { 29 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 69 18 }
;; 18 succs { 19 28 }
;; 19 succs { 23 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 20 24 }
;; 24 succs { 25 27 }
;; 25 succs { 63 26 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 29 }
;; 29 succs { 14 30 }
;; 30 succs { 53 }
;; 31 succs { 51 }
;; 32 succs { 68 33 }
;; 33 succs { 34 50 }
;; 34 succs { 68 35 }
;; 35 succs { 36 50 }
;; 36 succs { 67 37 }
;; 37 succs { 66 38 }
;; 38 succs { 66 39 }
;; 39 succs { 40 48 }
;; 40 succs { 45 }
;; 41 succs { 42 43 }
;; 42 succs { 44 }
;; 43 succs { 44 }
;; 44 succs { 65 45 }
;; 45 succs { 65 46 }
;; 46 succs { 41 47 }
;; 47 succs { 48 }
;; 48 succs { 66 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 32 52 }
;; 52 succs { 53 }
;; 53 succs { 31 54 }
;; 54 succs { 69 55 }
;; 55 succs { 69 56 }
;; 56 succs { 69 57 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 72 60 }
;; 60 succs { 61 }
;; 61 succs { 4 62 }
;; 62 succs { 1 }
;; 63 succs { 64 }
;; 64 succs { 69 }
;; 65 succs { 66 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 }
;; 72 succs { }
void record_fucntion (struct cgraph_node * node)
{
  struct cgraph_node * D.255241;
  struct function * D.255235;
  bool D.255230;
  union tree_node * D.255229;
  union tree_node * D.255228;
  tree_code D.255227;
  tree_code D.255226;
  struct cgraph_node * D.255223;
  struct function * D.255222;
  bool D.255221;
  struct cgraph_node * D.255220;
  int init;
  struct edge_iterator ei;
  struct edge_def * e;
  struct symbolicinfo symbolicinfo;
  tree_code code;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_path path_type;
  struct iterator it_i;
  int find;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  struct vector function_path_array;
  struct function_path_array fun_array;
  availability avail;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.1867;
  bool retval.1865;
  bool retval.1859;
  bool retval.1858;
  struct iterator D.201977;
  bool retval.1855;
  bool retval.1854;
  struct cgraph_node * iftmp.1853;
  bool retval.1851;

  <bb 2> :
  symtab.1850_1 = symtab;
  D.255220 = symbol_table::first_defined_function (symtab.1850_1);

  <bb 3> :
  node = D.255220;
  goto <bb 61>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.255221 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.255221;
  retval.1851 = ~_3;
  if (retval.1851 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 7> :
  D.255222 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.255222;
  push_cfun (_4);

  <bb 9> :
  cfun.1852_5 = cfun;
  if (cfun.1852_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 12> :
  function_path_array::function_path_array (&fun_array);
  std::vector<function_path>::vector (&function_path_array);
  std::vector<function_path>::operator= (&fun_array.function_path_array, &function_path_array);

  <bb 13> :
  e = node->callees;
  goto <bb 29>; [INV]

  <bb 14> :
  _6 = e->caller;
  _7 = _6->inlined_to;
  if (_7 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _8 = e->caller;
  iftmp.1853 = _8->inlined_to;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1853 = e->caller;

  <bb 17> :
  caller = iftmp.1853;
  _9 = e->callee;
  D.255223 = cgraph_node::ultimate_alias_target (_9, &avail, caller);

  <bb 18> :
  callee = D.255223;
  if (callee != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 19> :
  find = 0;
  it_i._M_current = 0B;
  it_i = std::vector<function_path>::begin (&fun_array.function_path_array);
  goto <bb 23>; [INV]

  <bb 20> :
  _10 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (&it_i);
  _11 = _10->next;
  _12 = callee->D.97512.decl;
  retval.1854 = _11 == _12;
  if (retval.1854 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  find = 1;

  <bb 22> :
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (&it_i);

  <bb 23> :
  D.201977 = std::vector<function_path>::end (&fun_array.function_path_array);
  retval.1855 = __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (&it_i, &D.201977);
  D.201977 = {CLOBBER};
  if (retval.1855 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  path_type.cgnext = callee;
  _13 = callee->D.97512.decl;
  path_type.next = _13;
  std::vector<function_path>::push_back (&fun_array.function_path_array, &path_type);

  <bb 26> :
  path_type = {CLOBBER};

  <bb 27> :
  it_i = {CLOBBER};

  <bb 28> :
  e = e->next_callee;

  <bb 29> :
  if (e != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  cfun.1856_14 = cfun;
  _15 = cfun.1856_14->cfg;
  _16 = _15->x_entry_block_ptr;
  _17 = _16->next_bb;
  bb = _17;
  goto <bb 53>; [INV]

  <bb 31> :
  bb.1857_18 = bb;
  gsi = gsi_start_bb (bb.1857_18); [return slot optimization]
  goto <bb 51>; [INV]

  <bb 32> :
  gc = gsi_stmt (gsi);
  D.255226 = gimple_cond_code (gc);

  <bb 33> :
  _19 = D.255226;
  retval.1858 = _19 != 0;
  if (retval.1858 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 34> :
  D.255227 = gimple_cond_code (gc);

  <bb 35> :
  code = D.255227;
  _20 = is_gimple_assign (gc);
  retval.1859 = ~_20;
  if (retval.1859 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 36> :
  std::vector<basic_block_def*>::push_back (&symbolicExecution, &bb);

  <bb 37> :
  symbolicinfo::symbolicinfo (&symbolicinfo);
  symbolicinfo.cond_stmt = gc;
  D.255228 = gimple_cond_lhs (gc);

  <bb 38> :
  _21 = D.255228;
  symbolicinfo.cond_lhs = _21;
  D.255229 = gimple_cond_rhs (gc);

  <bb 39> :
  _22 = D.255229;
  symbolicinfo.cond_rhs = _22;
  symbolicinfo.node = node;
  cfun.1860_23 = cfun;
  _24 = cfun.1860_23->cfg;
  _25 = _24->x_exit_block_ptr;
  _26 = _25->prev_bb;
  bb.1861_27 = bb;
  if (_26 != bb.1861_27)
    goto <bb 40>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 40> :
  init = 0;
  bb.1862_28 = bb;
  _29 = &bb.1862_28->succs;
  ei = ei_start_1 (_29);
  goto <bb 45>; [INV]

  <bb 41> :
  if (init == 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  e.1863_30 = e;
  _31 = e.1863_30->dest;
  symbolicinfo.cond_truebranch = _31;
  goto <bb 44>; [INV]

  <bb 43> :
  e.1864_32 = e;
  _33 = e.1864_32->dest;
  symbolicinfo.cond_falsebranch = _33;

  <bb 44> :
  init = init + 1;
  ei_next (&ei);

  <bb 45> :
  D.255230 = ei_cond (ei, &e);

  <bb 46> :
  retval.1865 = D.255230;
  if (retval.1865 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 48> :
  syminfo.1866_34 = syminfo;
  hash_map<basic_block_def*, symbolicinfo>::put (syminfo.1866_34, &bb, &symbolicinfo);

  <bb 49> :
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  symbolicinfo = {CLOBBER};

  <bb 50> :
  gsi_next (&gsi);

  <bb 51> :
  _35 = gsi_end_p (gsi);
  retval.1867 = ~_35;
  if (retval.1867 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  gsi = {CLOBBER};
  bb.1868_36 = bb;
  _37 = bb.1868_36->next_bb;
  bb = _37;

  <bb 53> :
  cfun.1869_38 = cfun;
  _39 = cfun.1869_38->cfg;
  _40 = _39->x_exit_block_ptr;
  bb.1870_41 = bb;
  if (_40 != bb.1870_41)
    goto <bb 31>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  function_path_collect.1871_42 = function_path_collect;
  D.255235 = cgraph_node::get_fun (node);

  <bb 55> :
  _43 = D.255235;
  _44 = &_43->decl;
  hash_map<tree_node*, function_path_array>::put (function_path_collect.1871_42, _44, &fun_array);

  <bb 56> :
  pop_cfun ();

  <bb 57> :
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  goto <bb 59>; [INV]

  <bb 58> :
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};

  <bb 59> :
  symtab.1872_45 = symtab;
  D.255241 = symbol_table::next_defined_function (symtab.1872_45, node);

  <bb 60> :
  node = D.255241;

  <bb 61> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 62> :
  bb = {CLOBBER};
  return;

  <bb 63> :
<L49>:
  path_type = {CLOBBER};
  resx 7

  <bb 64> :
<L50>:
  it_i = {CLOBBER};
  resx 5

  <bb 65> :
<L51>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 13

  <bb 66> :
<L52>:
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  resx 12

  <bb 67> :
<L53>:
  symbolicinfo = {CLOBBER};
  resx 11

  <bb 68> :
<L54>:
  gsi = {CLOBBER};
  resx 10

  <bb 69> :
<L55>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 4

  <bb 70> :
<L56>:
  function_path_array::~function_path_array (&fun_array);
  resx 3

  <bb 71> :
<L57>:
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  resx 2

  <bb 72> :
<L58>:
  bb = {CLOBBER};
  resx 1

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2Ev, funcdef_no=6804, decl_uid=192239, cgraph_uid=3435, symbol_order=4212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  this->funtion_type_num = 0;
  _1 = &this->function_path_array;
  std::vector<function_path>::vector (_1);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2Ev, funcdef_no=6802, decl_uid=174549, cgraph_uid=3432, symbol_order=4209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174557;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2Ev, funcdef_no=6800, decl_uid=174007, cgraph_uid=3429, symbol_order=4206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2Ev, funcdef_no=7790, decl_uid=173899, cgraph_uid=4422, symbol_order=5207)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this);
  _1 = &this->D.173902;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2Ev, funcdef_no=8736, decl_uid=173677, cgraph_uid=5368, symbol_order=6157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2Ev, funcdef_no=9555, decl_uid=173606, cgraph_uid=6187, symbol_order=6976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::operator= (_ZNSt6vectorI13function_pathSaIS0_EEaSERKS2_, funcdef_no=7798, decl_uid=174135, cgraph_uid=4432, symbol_order=5217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<function_path>::operator= (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.255276;
  struct function_path * __tmp;
  const size_type __xlen;
  struct vector & D.255274;
  struct __normal_iterator D.255271;
  struct __normal_iterator D.255270;
  struct __normal_iterator D.255269;
  struct __normal_iterator D.255268;
  struct __normal_iterator D.255267;
  bool retval.1877;
  struct __normal_iterator D.255262;
  struct __normal_iterator D.255261;
  bool retval.1876;
  bool iftmp.1875;
  bool retval.1874;
  bool retval.1873;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1873 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ();
  if (retval.1873 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.174557;
  _4 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.174557;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1875 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1875 = 0;

  <bb 8> :
  retval.1874 = iftmp.1875;
  if (retval.1874 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<function_path>::clear (this);
  _8 = &this->D.174557;
  _9 = this->D.174557._M_impl.D.173902._M_end_of_storage;
  _10 = this->D.174557._M_impl.D.173902._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.174557._M_impl.D.173902._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_8, _14, _13);
  this->D.174557._M_impl.D.173902._M_start = 0B;
  this->D.174557._M_impl.D.173902._M_finish = 0B;
  this->D.174557._M_impl.D.173902._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.174557;
  _16 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.174557;
  _18 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<function_path> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<function_path>::size (__x);
  _19 = std::vector<function_path>::capacity (this);
  retval.1876 = __xlen > _19;
  if (retval.1876 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.255261 = std::vector<function_path>::end (__x);
  D.255262 = std::vector<function_path>::begin (__x);
  D.255276 = std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (this, __xlen, D.255262, D.255261);
  __tmp = D.255276;
  _20 = &this->D.174557;
  _21 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_20);
  _22 = this->D.174557._M_impl.D.173902._M_finish;
  _23 = this->D.174557._M_impl.D.173902._M_start;
  std::_Destroy<function_path*, function_path> (_23, _22, _21);
  _24 = &this->D.174557;
  _25 = this->D.174557._M_impl.D.173902._M_end_of_storage;
  _26 = this->D.174557._M_impl.D.173902._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.174557._M_impl.D.173902._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_24, _30, _29);
  this->D.174557._M_impl.D.173902._M_start = __tmp;
  _31 = this->D.174557._M_impl.D.173902._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.174557._M_impl.D.173902._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<function_path>::size (this);
  retval.1877 = __xlen <= _34;
  if (retval.1877 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.174557;
  _36 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_35);
  D.255267 = std::vector<function_path>::end (this);
  D.255268 = std::vector<function_path>::begin (this);
  D.255269 = std::vector<function_path>::end (__x);
  D.255270 = std::vector<function_path>::begin (__x);
  D.255271 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.255270, D.255269, D.255268);
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (D.255271, D.255267, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.174557._M_impl.D.173902._M_start;
  _38 = __x->D.174557._M_impl.D.173902._M_start;
  _39 = std::vector<function_path>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.174557._M_impl.D.173902._M_start;
  std::copy<function_path*, function_path*> (_42, _41, _37);
  _43 = &this->D.174557;
  _44 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_43);
  _45 = this->D.174557._M_impl.D.173902._M_finish;
  _46 = __x->D.174557._M_impl.D.173902._M_finish;
  _47 = __x->D.174557._M_impl.D.173902._M_start;
  _48 = std::vector<function_path>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.174557._M_impl.D.173902._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.174557._M_impl.D.173902._M_finish = _53;

  <bb 17> :
  D.255274 = this;

  <bb 18> :
<L19>:
  return D.255274;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7799, decl_uid=173769, cgraph_uid=4430, symbol_order=5215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ()
{
  bool D.255277;

  <bb 2> :
  D.255277 = 0;

  <bb 3> :
<L0>:
  return D.255277;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E15_S_always_equalEv, funcdef_no=7800, decl_uid=173772, cgraph_uid=4431, symbol_order=5216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ()
{
  bool D.255279;

  <bb 2> :
  D.255279 = 1;

  <bb 3> :
<L0>:
  return D.255279;

}



;; Function std::operator!= (_ZStneRKSaI13function_pathES2_, funcdef_no=8745, decl_uid=173655, cgraph_uid=5377, symbol_order=6166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.227173, const struct allocator & D.227174)
{
  bool D.255281;

  <bb 2> :
  D.255281 = 0;

  <bb 3> :
<L0>:
  return D.255281;

}



;; Function std::vector<function_path>::clear (_ZNSt6vectorI13function_pathSaIS0_EE5clearEv, funcdef_no=8746, decl_uid=174287, cgraph_uid=5378, symbol_order=6167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_start;
  std::vector<function_path>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<function_path>::_M_erase_at_end (_ZNSt6vectorI13function_pathSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9558, decl_uid=174415, cgraph_uid=6190, symbol_order=6979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<function_path>::_M_erase_at_end (struct vector * const this, struct function_path * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.174557;
  _5 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_4);
  _6 = this->D.174557._M_impl.D.173902._M_finish;
  std::_Destroy<function_path*, function_path> (__pos, _6, _5);
  this->D.174557._M_impl.D.173902._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<function_path> > (_ZSt15__alloc_on_copyISaI13function_pathEEvRT_RKS2_, funcdef_no=8747, decl_uid=214520, cgraph_uid=5379, symbol_order=6168)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<function_path> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::capacity (_ZNKSt6vectorI13function_pathSaIS0_EE8capacityEv, funcdef_no=8748, decl_uid=174203, cgraph_uid=5380, symbol_order=6169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::capacity (const struct vector * const this)
{
  size_type D.255286;

  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_end_of_storage;
  _2 = this->D.174557._M_impl.D.173902._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.255286 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255286;

}



;; Function std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZNSt6vectorI13function_pathSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8749, decl_uid=214527, cgraph_uid=5381, symbol_order=6170)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct function_path * std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct function_path * D.255290;
  struct function_path * __result;
  struct function_path * D.255288;

  <bb 2> :
  _1 = &this->D.174557;
  D.255290 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_1, __n);
  __result = D.255290;
  _2 = &this->D.174557;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (__first, __last, __result, _3);

  <bb 3> :
  D.255288 = __result;

  <bb 4> :
<L0>:
  return D.255288;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.174557;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8750, decl_uid=214535, cgraph_uid=5382, symbol_order=6171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.255296;
  struct __normal_iterator D.255295;
  struct __normal_iterator D.255294;

  <bb 2> :
  D.255295 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.255296 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.255294 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.255296, D.255295, __result);

  <bb 3> :
<L0>:
  return D.255294;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9561, decl_uid=227212, cgraph_uid=6194, symbol_order=6983)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct function_path * D.255300;
  struct __normal_iterator D.255298;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__result);
  _2 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.255300 = std::__copy_move_a1<false, const function_path*, function_path*> (_3, _2, _1);
  _4 = D.255300;
  D.255298 = std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (__result, _4);

  <bb 3> :
<L0>:
  return D.255298;

}



;; Function std::__niter_base<function_path*, std::vector<function_path> > (_ZSt12__niter_baseIP13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10151, decl_uid=235677, cgraph_uid=6783, symbol_order=7576)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  struct function_path * D.255301;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__it);
  D.255301 = *_1;

  <bb 3> :
<L0>:
  return D.255301;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8757, decl_uid=201915, cgraph_uid=5389, symbol_order=6178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * const & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  struct function_path * const & D.255303;

  <bb 2> :
  D.255303 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255303;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10153, decl_uid=235684, cgraph_uid=6785, symbol_order=7578)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __from, struct function_path * __res)
{
  struct __normal_iterator D.255305;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.255305 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.255305;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10614, decl_uid=201906, cgraph_uid=7246, symbol_order=8039)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct function_path * const D.243683;
  struct __normal_iterator D.243684;
  struct __normal_iterator D.255307;

  <bb 2> :
  _1 = this->_M_current;
  __n.1878_2 = (long unsigned int) __n;
  _3 = __n.1878_2 * 24;
  _4 = _1 + _3;
  D.243683 = _4;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.243684, &D.243683);
  D.255307 = D.243684;
  D.243684 = {CLOBBER};
  D.243683 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.255307;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8755, decl_uid=201928, cgraph_uid=5387, symbol_order=6176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8751, decl_uid=214541, cgraph_uid=5383, symbol_order=6172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.227241)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9563, decl_uid=227243, cgraph_uid=6195, symbol_order=6984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10154, decl_uid=235708, cgraph_uid=6786, symbol_order=7579)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator D.240459, struct __normal_iterator D.240460)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<function_path*, function_path*> (_ZSt4copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=8752, decl_uid=214549, cgraph_uid=5384, symbol_order=6173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255313;
  struct function_path * D.255311;

  <bb 2> :
  _1 = std::__miter_base<function_path*> (__last);
  _2 = std::__miter_base<function_path*> (__first);
  D.255313 = std::__copy_move_a<false, function_path*, function_path*> (_2, _1, __result);
  D.255311 = D.255313;

  <bb 3> :
<L0>:
  return D.255311;

}



;; Function std::__miter_base<function_path*> (_ZSt12__miter_baseIP13function_pathET_S2_, funcdef_no=9564, decl_uid=227259, cgraph_uid=6196, symbol_order=6985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__miter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.255314;

  <bb 2> :
  D.255314 = __it;

  <bb 3> :
<L0>:
  return D.255314;

}



;; Function std::__copy_move_a<false, function_path*, function_path*> (_ZSt13__copy_move_aILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=9565, decl_uid=227261, cgraph_uid=6197, symbol_order=6986)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255318;
  struct function_path * D.255316;

  <bb 2> :
  __result.1879_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.1879_1);
  _3 = std::__niter_base<function_path*> (__last);
  _4 = std::__niter_base<function_path*> (__first);
  D.255318 = std::__copy_move_a1<false, function_path*, function_path*> (_4, _3, _2);
  _5 = D.255318;
  D.255316 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255316;

}



;; Function std::__copy_move_a1<false, function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10156, decl_uid=235719, cgraph_uid=6788, symbol_order=7581)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255321;
  struct function_path * D.255319;

  <bb 2> :
  D.255321 = std::__copy_move_a2<false, function_path*, function_path*> (__first, __last, __result);
  D.255319 = D.255321;

  <bb 3> :
<L0>:
  return D.255319;

}



;; Function std::__copy_move_a2<false, function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10615, decl_uid=240468, cgraph_uid=7247, symbol_order=8040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255322;

  <bb 2> :
  D.255322 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255322;

}



;; Function std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_ZSt22__uninitialized_copy_aIP13function_pathS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8753, decl_uid=214553, cgraph_uid=5385, symbol_order=6174)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<function_path*, function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.227268)
{
  struct function_path * D.255326;
  struct function_path * D.255324;

  <bb 2> :
  D.255326 = std::uninitialized_copy<function_path*, function_path*> (__first, __last, __result);
  D.255324 = D.255326;

  <bb 3> :
<L0>:
  return D.255324;

}



;; Function std::uninitialized_copy<function_path*, function_path*> (_ZSt18uninitialized_copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=9566, decl_uid=227270, cgraph_uid=6198, symbol_order=6987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255329;
  const bool __assignable;
  struct function_path * D.255327;

  <bb 2> :
  __assignable = 1;
  D.255329 = std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (__first, __last, __result);
  D.255327 = D.255329;

  <bb 3> :
<L0>:
  return D.255327;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP13function_pathS3_EET0_T_S5_S4_, funcdef_no=10158, decl_uid=235757, cgraph_uid=6790, symbol_order=7583)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255332;
  struct function_path * D.255330;

  <bb 2> :
  D.255332 = std::copy<function_path*, function_path*> (__first, __last, __result);
  D.255330 = D.255332;

  <bb 3> :
<L0>:
  return D.255330;

}



;; Function cgraph_node::ultimate_alias_target (_ZN11cgraph_node21ultimate_alias_targetEP12availabilityP11symtab_node, funcdef_no=2586, decl_uid=97088, cgraph_uid=1723, symbol_order=1883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct cgraph_node * cgraph_node::ultimate_alias_target (struct cgraph_node * const this, availability * availability, struct symtab_node * ref)
{
  struct cgraph_node * D.255341;
  struct symtab_node * D.255340;
  struct cgraph_node * n;
  struct cgraph_node * D.255338;

  <bb 2> :
  _1 = &this->D.97512;
  D.255340 = symtab_node::ultimate_alias_target (_1, availability, ref);
  _2 = D.255340;
  D.255341 = dyn_cast<cgraph_node*, symtab_node> (_2);
  n = D.255341;
  if (n == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  *availability = 1;

  <bb 5> :
  D.255338 = n;

  <bb 6> :
<L5>:
  return D.255338;

}



;; Function symtab_node::ultimate_alias_target (_ZN11symtab_node21ultimate_alias_targetEP12availabilityPS_, funcdef_no=2585, decl_uid=96460, cgraph_uid=1722, symbol_order=1882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
struct symtab_node * symtab_node::ultimate_alias_target (struct symtab_node * const this, availability * availability, struct symtab_node * ref)
{
  struct symtab_node * D.255350;
  availability D.255349;
  struct symtab_node * D.255347;

  <bb 2> :
  _1 = BIT_FIELD_REF <*this, 8, 16>;
  _2 = _1 & 2;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.255349 = symtab_node::get_availability (this, ref);
  _3 = D.255349;
  *availability = _3;

  <bb 5> :
  D.255347 = this;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.255350 = symtab_node::ultimate_alias_target_1 (this, availability, ref);
  D.255347 = D.255350;

  <bb 7> :
<L5>:
  return D.255347;

}



;; Function symtab_node::get_availability (_ZN11symtab_node16get_availabilityEPS_, funcdef_no=2597, decl_uid=96516, cgraph_uid=1734, symbol_order=1894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
availability symtab_node::get_availability (struct symtab_node * const this, struct symtab_node * ref)
{
  availability D.255359;
  struct varpool_node * D.255358;
  availability D.255357;
  struct cgraph_node * D.255356;
  availability D.255354;
  bool retval.1880;

  <bb 2> :
  retval.1880 = is_a<cgraph_node*, symtab_node> (this);
  if (retval.1880 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255356 = dyn_cast<cgraph_node*, symtab_node> (this);
  _1 = D.255356;
  D.255357 = cgraph_node::get_availability (_1, ref);
  D.255354 = D.255357;
  goto <bb 5>; [INV]

  <bb 4> :
  D.255358 = dyn_cast<varpool_node*, symtab_node> (this);
  _2 = D.255358;
  D.255359 = varpool_node::get_availability (_2, ref);
  D.255354 = D.255359;

  <bb 5> :
<L2>:
  return D.255354;

}



;; Function dyn_cast<varpool_node*, symtab_node> (_Z8dyn_castIP12varpool_node11symtab_nodeET_PT0_, funcdef_no=7086, decl_uid=99587, cgraph_uid=3718, symbol_order=4500)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct varpool_node * dyn_cast<varpool_node*, symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.255363;
  bool retval.1881;

  <bb 2> :
  retval.1881 = is_a<varpool_node*, symtab_node> (p);
  if (retval.1881 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255363 = reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.255363 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.255363;

}



;; Function is_a<varpool_node*, symtab_node> (_Z4is_aIP12varpool_node11symtab_nodeEbPT0_, funcdef_no=7089, decl_uid=99946, cgraph_uid=3721, symbol_order=4503)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<varpool_node*, symtab_node> (struct symtab_node * p)
{
  bool D.255365;

  <bb 2> :
  D.255365 = is_a_helper<varpool_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.255365;

}



;; Function is_a_helper<varpool_node*>::test<symtab_node> (_ZN11is_a_helperIP12varpool_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2533, decl_uid=98472, cgraph_uid=1670, symbol_order=1830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<varpool_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.1882;
  bool D.255367;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1882 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1882 = 0;

  <bb 6> :
  D.255367 = iftmp.1882;

  <bb 7> :
<L4>:
  return D.255367;

}



;; Function reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP12varpool_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8097, decl_uid=206117, cgraph_uid=4729, symbol_order=5514)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct varpool_node * reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.255374;

  <bb 2> :
  D.255374 = p;

  <bb 3> :
<L0>:
  return D.255374;

}



;; Function std::vector<function_path>::begin (_ZNSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=7801, decl_uid=174166, cgraph_uid=4433, symbol_order=5218)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::begin (struct vector * const this)
{
  struct iterator D.214564;
  struct iterator D.255376;

  <bb 2> :
  _1 = &this->D.174557._M_impl.D.173902._M_start;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.214564, _1);
  D.255376 = D.214564;
  D.214564 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255376;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7805, decl_uid=201888, cgraph_uid=4437, symbol_order=5222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (const struct __normal_iterator * const this)
{
  struct function_path * D.255379;

  <bb 2> :
  D.255379 = this->_M_current;

  <bb 3> :
<L0>:
  return D.255379;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7804, decl_uid=201890, cgraph_uid=4436, symbol_order=5221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.255381;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.255381 = this;

  <bb 3> :
<L0>:
  return D.255381;

}



;; Function std::vector<function_path>::end (_ZNSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=7802, decl_uid=174170, cgraph_uid=4434, symbol_order=5219)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::end (struct vector * const this)
{
  struct iterator D.214566;
  struct iterator D.255383;

  <bb 2> :
  _1 = &this->D.174557._M_impl.D.173902._M_finish;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.214566, _1);
  D.255383 = D.214566;
  D.214566 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255383;

}



;; Function __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxneIP13function_pathSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7803, decl_uid=201988, cgraph_uid=4435, symbol_order=5220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.255386;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  D.255386 = _2 != _4;

  <bb 3> :
<L0>:
  return D.255386;

}



;; Function std::vector<function_path>::push_back (_ZNSt6vectorI13function_pathSaIS0_EE9push_backERKS0_, funcdef_no=7806, decl_uid=174237, cgraph_uid=4439, symbol_order=5224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<function_path>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.255391;

  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_finish;
  _2 = this->D.174557._M_impl.D.173902._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.174557._M_impl.D.173902._M_finish;
  _4 = &this->D.174557._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_4, _3, __x);
  _5 = this->D.174557._M_impl.D.173902._M_finish;
  _6 = _5 + 24;
  this->D.174557._M_impl.D.173902._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.255391 = std::vector<function_path>::end (this);
  std::vector<function_path>::_M_realloc_insert<const function_path&> (this, D.255391, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_ZNSt16allocator_traitsISaI13function_pathEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8758, decl_uid=214574, cgraph_uid=5390, symbol_order=6179)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (struct allocator_type & __a, struct function_path * __p, const struct function_path & __args#0)
{
  <bb 2> :
  _1 = std::forward<const function_path&> (__args#0);
  __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (__a, __p, _1);
  return;

}



;; Function std::forward<const function_path&> (_ZSt7forwardIRK13function_pathEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9567, decl_uid=227290, cgraph_uid=6199, symbol_order=6988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct function_path & std::forward<const function_path&> (const struct type & __t)
{
  const struct function_path & D.255392;

  <bb 2> :
  D.255392 = __t;

  <bb 3> :
<L0>:
  return D.255392;

}



;; Function __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (_ZN9__gnu_cxx13new_allocatorI13function_pathE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9568, decl_uid=227292, cgraph_uid=6200, symbol_order=6989)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (struct new_allocator * const this, struct function_path * __p, const struct function_path & __args#0)
{
  void * D.235769;
  void * D.235768;
  const struct function_path * D.235770;

  <bb 2> :
  D.235770 = std::forward<const function_path&> (__args#0);
  D.235768 = __p;
  D.235769 = operator new (24, D.235768);
  MEM[(struct function_path *)D.235769] = *D.235770;
  return;

}



;; Function std::vector<function_path>::_M_realloc_insert<const function_path&> (_ZNSt6vectorI13function_pathSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8759, decl_uid=214743, cgraph_uid=5394, symbol_order=6183)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::_M_realloc_insert<const function_path&> (struct vector * const this, struct iterator __position, const struct function_path & __args#0)
{
  struct function_path * D.255398;
  const size_type D.255397;
  struct function_path * __new_finish;
  struct function_path * __new_start;
  const size_type __elems_before;
  struct function_path * __old_finish;
  struct function_path * __old_start;
  const size_type __len;
  struct iterator D.227303;

  <bb 2> :
  D.255397 = std::vector<function_path>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.255397;
  __old_start = this->D.174557._M_impl.D.173902._M_start;
  __old_finish = this->D.174557._M_impl.D.173902._M_finish;
  D.227303 = std::vector<function_path>::begin (this);
  _1 = __gnu_cxx::operator-<function_path*, std::vector<function_path> > (&__position, &D.227303);
  __elems_before = (const size_type) _1;
  D.227303 = {CLOBBER};
  _2 = &this->D.174557;
  D.255398 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_2, __len);
  __new_start = D.255398;
  __new_finish = __new_start;
  _3 = std::forward<const function_path&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.174557._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.174557;
  _8 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<function_path>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.174557;
  _12 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<function_path>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.174557;
  _23 = this->D.174557._M_impl.D.173902._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_22, __old_start, _26);
  this->D.174557._M_impl.D.173902._M_start = __new_start;
  this->D.174557._M_impl.D.173902._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.174557._M_impl.D.173902._M_end_of_storage = _28;
  return;

}



;; Function std::vector<function_path>::_M_check_len (_ZNKSt6vectorI13function_pathSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9569, decl_uid=174406, cgraph_uid=6201, symbol_order=6990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<function_path>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1885;
  size_type D.255402;
  const long unsigned int D.235775;
  bool retval.1883;

  <bb 2> :
  _1 = std::vector<function_path>::max_size (this);
  _2 = std::vector<function_path>::size (this);
  _3 = _1 - _2;
  __n.1884_4 = __n;
  retval.1883 = _3 < __n.1884_4;
  if (retval.1883 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<function_path>::size (this);
  _6 = std::vector<function_path>::size (this);
  D.235775 = _6;
  _7 = std::max<long unsigned int> (&D.235775, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235775 = {CLOBBER};
  _9 = std::vector<function_path>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<function_path>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1885 = std::vector<function_path>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1885 = __len;

  <bb 8> :
  D.255402 = iftmp.1885;

  <bb 9> :
<L6>:
  return D.255402;

}



;; Function std::vector<function_path>::max_size (_ZNKSt6vectorI13function_pathSaIS0_EE8max_sizeEv, funcdef_no=10159, decl_uid=174192, cgraph_uid=6791, symbol_order=7584)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::max_size (const struct vector * const this)
{
  size_type D.255409;

  <bb 2> :
  _1 = &this->D.174557;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  D.255409 = std::vector<function_path>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.255409;

}



;; Function std::vector<function_path>::_S_max_size (_ZNSt6vectorI13function_pathSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10616, decl_uid=174413, cgraph_uid=7248, symbol_order=8041)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.255411;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<function_path> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.255411 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255411;

}



;; Function std::allocator_traits<std::allocator<function_path> >::max_size (_ZNSt16allocator_traitsISaI13function_pathEE8max_sizeERKS1_, funcdef_no=10812, decl_uid=173727, cgraph_uid=7444, symbol_order=8239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<function_path> >::max_size (const struct allocator_type & __a)
{
  size_type D.255414;

  <bb 2> :
  D.255414 = __gnu_cxx::new_allocator<function_path>::max_size (__a);

  <bb 3> :
<L0>:
  return D.255414;

}



;; Function __gnu_cxx::new_allocator<function_path>::max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE8max_sizeEv, funcdef_no=10908, decl_uid=173569, cgraph_uid=7540, symbol_order=8335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::max_size (const struct new_allocator * const this)
{
  size_type D.255416;

  <bb 2> :
  D.255416 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.255416;

}



;; Function __gnu_cxx::operator-<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxmiIP13function_pathSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9570, decl_uid=227304, cgraph_uid=6202, symbol_order=6991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.255418;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.255418 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.255418;

}



;; Function std::vector<function_path>::_S_relocate (_ZNSt6vectorI13function_pathSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9571, decl_uid=174064, cgraph_uid=6203, symbol_order=6992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.255421;
  struct function_path * D.255420;

  <bb 2> :
  D.255420 = std::vector<function_path>::_S_do_relocate (__first, __last, __result, __alloc, D.255421);

  <bb 3> :
<L0>:
  return D.255420;

}



;; Function std::vector<function_path>::_S_do_relocate (_ZNSt6vectorI13function_pathSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10160, decl_uid=174052, cgraph_uid=6792, symbol_order=7585)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_do_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240484)
{
  struct function_path * D.255423;

  <bb 2> :
  D.255423 = std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.255423;

}



;; Function std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (_ZSt12__relocate_aIP13function_pathS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10617, decl_uid=227468, cgraph_uid=7249, symbol_order=8042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & __alloc)
{
  struct function_path * D.255425;

  <bb 2> :
  _1 = std::__niter_base<function_path*> (__result);
  _2 = std::__niter_base<function_path*> (__last);
  _3 = std::__niter_base<function_path*> (__first);
  D.255425 = std::__relocate_a_1<function_path, function_path> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.255425;

}



;; Function std::__relocate_a_1<function_path, function_path> (_ZSt14__relocate_a_1I13function_pathS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10813, decl_uid=227642, cgraph_uid=7445, symbol_order=8240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__relocate_a_1<function_path, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.244677)
{
  ptrdiff_t __count;
  struct function_path * D.255430;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1886_2 = (long unsigned int) __count;
  _3 = __count.1886_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1887_4 = (long unsigned int) __count;
  _5 = __count.1887_4 * 24;
  D.255430 = __result + _5;

  <bb 5> :
<L3>:
  return D.255430;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2Ev, funcdef_no=6820, decl_uid=202040, cgraph_uid=3451, symbol_order=4228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->switchs;
  std::vector<basic_block_def*>::vector (_1);
  this->prevlogic = 1;
  _2 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_2);
  _3 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_3);
  _4 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_4);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6818, decl_uid=171337, cgraph_uid=3448, symbol_order=4225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171345;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6816, decl_uid=170795, cgraph_uid=3445, symbol_order=4222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2Ev, funcdef_no=7809, decl_uid=170687, cgraph_uid=4441, symbol_order=5226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this);
  _1 = &this->D.170690;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2Ev, funcdef_no=8764, decl_uid=170465, cgraph_uid=5396, symbol_order=6185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2Ev, funcdef_no=9574, decl_uid=170394, cgraph_uid=6206, symbol_order=6995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8767, decl_uid=170637, cgraph_uid=5399, symbol_order=6188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK6gimple, funcdef_no=2181, decl_uid=93077, cgraph_uid=1318, symbol_order=1478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gimple * gs)
{
  const struct gcond * D.255434;
  const struct gcond * gc;
  union tree_node * D.255432;

  <bb 2> :
  D.255434 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.255434;
  D.255432 = gimple_cond_rhs (gc);

  <bb 3> :
<L0>:
  return D.255432;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::put (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7820, decl_uid=196522, cgraph_uid=4456, symbol_order=5241)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<basic_block_def*, symbolicinfo>::put (struct hash_map * const this, struct basic_block_def * const & k, const struct symbolicinfo & v)
{
  bool D.255442;
  struct hash_entry * D.255441;
  unsigned int D.255440;
  bool ins;
  struct hash_entry * e;
  bool D.255438;
  void * D.214785;
  void * D.214784;

  <bb 2> :
  _1 = &this->m_table;
  D.255440 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.255440;
  D.255441 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.255441;
  D.255442 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (e);
  ins = D.255442;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214784 = &e->m_value;
  D.214785 = operator new (160, D.214784);
  symbolicinfo::symbolicinfo (D.214785, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  symbolicinfo::operator= (_4, v);

  <bb 5> :
  D.255438 = ~ins;

  <bb 6> :
<L3>:
  return D.255438;

  <bb 7> :
<L4>:
  operator delete (D.214785, D.214784);
  resx 1

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8775, decl_uid=196680, cgraph_uid=5407, symbol_order=6196)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.255493;
  bool D.255492;
  bool D.255491;
  bool D.255490;
  bool D.255489;
  bool D.255488;
  struct value_type * D.255487;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1893;
  bool retval.1892;
  bool retval.1891;
  bool retval.1890;
  bool retval.1889;
  bool retval.1888;
  struct value_type * D.255449;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 168;
  entry = _11 + _13;
  size = this->m_size;
  D.255488 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1888 = D.255488;
  if (retval.1888 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.255489 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1889 = D.255489;
  if (retval.1889 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 168;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.255490 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1890 = D.255490;
  if (retval.1890 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  D.255449 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 168;
  entry = _24 + _26;
  D.255491 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1891 = D.255491;
  if (retval.1891 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.255492 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1892 = D.255492;
  if (retval.1892 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 168;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.255493 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1893 = D.255493;
  if (retval.1893 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 168;
  D.255449 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.255449 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.255449 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 168;
  D.255449 = _37 + _39;

  <bb 27> :
<L37>:
  return D.255449;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9579, decl_uid=196761, cgraph_uid=6229, symbol_order=7018)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.255524;
  unsigned int D.255523;
  bool D.255522;
  bool D.255521;
  struct mem_alloc_description & D.255520;
  struct value_type * D.255519;
  unsigned int D.255518;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236132;
  void * D.236131;
  struct hash_entry & D.236175;
  bool iftmp.1897;
  bool retval.1896;
  bool iftmp.1895;
  bool retval.1894;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 168;
  olimit = oentries + _1;
  elts = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1895 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1895 = 0;

  <bb 6> :
  retval.1894 = iftmp.1895;
  if (retval.1894 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.255518 = hash_table_higher_prime_index (_5);
  nindex = D.255518;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.255519 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.255519;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.255521 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.255521;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.255522 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.255522;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1897 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1897 = 0;

  <bb 15> :
  retval.1896 = iftmp.1897;
  if (retval.1896 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.255523 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (x);
  _16 = D.255523;
  D.255524 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.255524;
  D.236175 = std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (x);
  D.236131 = q;
  D.236132 = operator new (168, D.236131);
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (D.236132, D.236175);

  <bb 17> :
  p = p + 168;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10164, decl_uid=196656, cgraph_uid=6796, symbol_order=7589)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.255525;

  <bb 2> :
  D.255525 = this->m_size;

  <bb 3> :
<L0>:
  return D.255525;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10165, decl_uid=196658, cgraph_uid=6797, symbol_order=7590)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.255527;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.255527 = _1 - _2;

  <bb 3> :
<L0>:
  return D.255527;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10166, decl_uid=196758, cgraph_uid=6798, symbol_order=7591)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1898;
  bool D.255529;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1898 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1898 = 0;

  <bb 6> :
  D.255529 = iftmp.1898;

  <bb 7> :
<L4>:
  return D.255529;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9548, decl_uid=196748, cgraph_uid=6180, symbol_order=6969)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.255551;
  struct value_type * D.255550;
  struct mem_alloc_description & D.255549;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.255547;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.255550 = xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (n);
  nentries = D.255550;
  goto <bb 6>; [INV]

  <bb 5> :
  D.255551 = ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (n);
  nentries = D.255551;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.255547 = nentries;

  <bb 9> :
<L14>:
  return D.255547;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10143, decl_uid=216680, cgraph_uid=6775, symbol_order=7568)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.255554;
  struct hash_entry * D.255552;

  <bb 2> :
  D.255554 = xcalloc (count, 168);
  D.255552 = D.255554;

  <bb 3> :
<L0>:
  return D.255552;

}



;; Function ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10144, decl_uid=235467, cgraph_uid=6776, symbol_order=7569)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (size_t c)
{
  struct hash_entry * D.255561;
  struct hash_entry * D.255560;
  struct hash_entry * D.255558;
  bool retval.1899;

  <bb 2> :
  retval.1899 = need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ();
  if (retval.1899 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 168;
  D.255560 = ggc_internal_cleared_alloc (_1, finalize, 168, c);
  D.255558 = D.255560;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 168;
  D.255561 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.255558 = D.255561;

  <bb 5> :
<L2>:
  return D.255558;

}



;; Function finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z8finalizeIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10605, decl_uid=240426, cgraph_uid=7240, symbol_order=8033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10607, decl_uid=243640, cgraph_uid=7238, symbol_order=8031)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  symbolicinfo::~symbolicinfo (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10604, decl_uid=240425, cgraph_uid=7236, symbol_order=8029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ()
{
  bool D.255562;

  <bb 2> :
  D.255562 = 1;

  <bb 3> :
<L0>:
  return D.255562;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10168, decl_uid=196581, cgraph_uid=6800, symbol_order=7593)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.255566;
  hashval_t D.255564;

  <bb 2> :
  _1 = &e->m_key;
  D.255566 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_1);
  D.255564 = D.255566;

  <bb 3> :
<L0>:
  return D.255564;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10167, decl_uid=196751, cgraph_uid=6799, symbol_order=7592)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.255579;
  bool D.255578;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1901;
  struct value_type * D.255570;
  bool retval.1900;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 168;
  slot = _2 + _4;
  D.255578 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1900 = D.255578;
  if (retval.1900 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255570 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 168;
  slot = _8 + _10;
  D.255579 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1901 = D.255579;
  if (retval.1901 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.255570 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.255570;

}



;; Function std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (_ZSt4moveIRN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10169, decl_uid=236129, cgraph_uid=6801, symbol_order=7594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.255580;

  <bb 2> :
  D.255580 = __t;

  <bb 3> :
<L0>:
  return D.255580;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9596, decl_uid=236154, cgraph_uid=6227, symbol_order=7016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236156)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236156->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236156->m_value;
  symbolicinfo::symbolicinfo (_2, _3);
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2EOS_, funcdef_no=9594, decl_uid=202057, cgraph_uid=6224, symbol_order=7013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, struct symbolicinfo & D.202059)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.202059->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.202059->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.202059->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.202059->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.202059->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.202059->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.202059->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.202059->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.202059->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.202059->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.202059->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.202059->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);
  return;

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9586, decl_uid=170257, cgraph_uid=6215, symbol_order=7004)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this, struct vector & D.170259)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170300;
  _2 = &D.170259->D.170300;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9584, decl_uid=169725, cgraph_uid=6212, symbol_order=7001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.169727)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.169727->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2EOS4_, funcdef_no=10171, decl_uid=169631, cgraph_uid=6803, symbol_order=7596)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  std::allocator<basic_block_def*>::allocator (this, _1);
  _2 = &this->D.169645;
  _3 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  _4 = &_3->D.169645;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2ERKS1_, funcdef_no=10620, decl_uid=169415, cgraph_uid=7252, symbol_order=8045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2ERKS3_, funcdef_no=10815, decl_uid=169344, cgraph_uid=7447, symbol_order=8242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.169346)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIP15basic_block_defSaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_, funcdef_no=10618, decl_uid=240520, cgraph_uid=7250, symbol_order=8043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.255582;

  <bb 2> :
  D.255582 = __t;

  <bb 3> :
<L0>:
  return D.255582;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2EOS4_, funcdef_no=10623, decl_uid=169587, cgraph_uid=7255, symbol_order=8048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9592, decl_uid=171302, cgraph_uid=6221, symbol_order=7010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, struct vector & D.171304)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171345;
  _2 = &D.171304->D.171345;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9590, decl_uid=170770, cgraph_uid=6218, symbol_order=7007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.170772)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.170772->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10174, decl_uid=170676, cgraph_uid=6806, symbol_order=7599)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  std::allocator<symbolicinfoPatharray>::allocator (this, _1);
  _2 = &this->D.170690;
  _3 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  _4 = &_3->D.170690;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2ERKS0_, funcdef_no=10627, decl_uid=170460, cgraph_uid=7259, symbol_order=8052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2ERKS2_, funcdef_no=10818, decl_uid=170389, cgraph_uid=7450, symbol_order=8245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.170391)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI21symbolicinfoPatharraySaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10625, decl_uid=240540, cgraph_uid=7257, symbol_order=8050)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.255584;

  <bb 2> :
  D.255584 = __t;

  <bb 3> :
<L0>:
  return D.255584;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10630, decl_uid=170632, cgraph_uid=7262, symbol_order=8055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8896, decl_uid=216682, cgraph_uid=5528, symbol_order=6317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9598, decl_uid=196769, cgraph_uid=6230, symbol_order=7019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10176, decl_uid=196593, cgraph_uid=6808, symbol_order=7601)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10632, decl_uid=240555, cgraph_uid=7264, symbol_order=8057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<basic_block_def>::mark_empty (_1);
  return;

}



;; Function pointer_hash<basic_block_def>::mark_empty (_ZN12pointer_hashI15basic_block_defE10mark_emptyERPS0_, funcdef_no=10820, decl_uid=196447, cgraph_uid=7452, symbol_order=8247)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<basic_block_def>::mark_empty (struct basic_block_def * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2ERKS_, funcdef_no=7822, decl_uid=202048, cgraph_uid=4453, symbol_order=5238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 8 3 }
;; 3 succs { 7 4 }
;; 4 succs { 6 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, const struct symbolicinfo & D.202050)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.202050->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.202050->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.202050->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.202050->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.202050->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.202050->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.202050->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.202050->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.202050->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.202050->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);

  <bb 3> :
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.202050->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);

  <bb 4> :
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.202050->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);

  <bb 5> :
  return;

  <bb 6> :
<L0>:
  _18 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_18);
  resx 3

  <bb 7> :
<L1>:
  _19 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_19);
  resx 2

  <bb 8> :
<L2>:
  _20 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_20);
  resx 1

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2ERKS3_, funcdef_no=8778, decl_uid=170263, cgraph_uid=5410, symbol_order=6199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<basic_block_def*>::vector (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.255594;
  struct __normal_iterator D.255591;
  struct __normal_iterator D.255590;
  struct allocator D.227978;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170300;
  _2 = &__x->D.170300;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  D.227978 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<basic_block_def*>::size (__x);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _4, &D.227978);

  <bb 3> :
  std::allocator<basic_block_def*>::~allocator (&D.227978);
  D.227978 = {CLOBBER};
  _5 = &this->D.170300;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = this->D.170300._M_impl.D.169645._M_start;
  D.255590 = std::vector<basic_block_def*>::end (__x);
  D.255591 = std::vector<basic_block_def*>::begin (__x);
  D.255594 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (D.255591, D.255590, _7, _6);

  <bb 4> :
  _8 = D.255594;
  this->D.170300._M_impl.D.169645._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<basic_block_def*>::~allocator (&D.227978);
  resx 2

  <bb 6> :
<L1>:
  D.227978 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.170300;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E17_S_select_on_copyERKS3_, funcdef_no=9599, decl_uid=169507, cgraph_uid=6231, symbol_order=7020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIP15basic_block_defEE37select_on_container_copy_constructionERKS2_, funcdef_no=10177, decl_uid=169472, cgraph_uid=6809, symbol_order=7602)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<basic_block_def*>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EmRKS2_, funcdef_no=9602, decl_uid=169732, cgraph_uid=6234, symbol_order=7023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2ERKS2_, funcdef_no=10179, decl_uid=169637, cgraph_uid=6811, symbol_order=7604)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this, __a);
  _1 = &this->D.169645;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_M_create_storageEm, funcdef_no=10181, decl_uid=169656, cgraph_uid=6813, symbol_order=7606)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.255601;

  <bb 2> :
  D.255601 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (this, __n);
  _1 = D.255601;
  this->_M_impl.D.169645._M_start = _1;
  _2 = this->_M_impl.D.169645._M_start;
  this->_M_impl.D.169645._M_finish = _2;
  _3 = this->_M_impl.D.169645._M_start;
  _4 = __n * 8;
  _5 = _3 + _4;
  this->_M_impl.D.169645._M_end_of_storage = _5;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNKSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=9605, decl_uid=169915, cgraph_uid=6237, symbol_order=7026)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::end (const struct vector * const this)
{
  struct const_iterator D.236211;
  struct const_iterator D.255602;

  <bb 2> :
  _1 = &this->D.170300._M_impl.D.169645._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.236211, _1);
  D.255602 = D.236211;
  D.236211 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255602;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS4_, funcdef_no=10183, decl_uid=227947, cgraph_uid=6815, symbol_order=7608)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * const * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::begin (_ZNKSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9604, decl_uid=169911, cgraph_uid=6236, symbol_order=7025)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::begin (const struct vector * const this)
{
  struct const_iterator D.236209;
  struct const_iterator D.255605;

  <bb 2> :
  _1 = &this->D.170300._M_impl.D.169645._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.236209, _1);
  D.255605 = D.236209;
  D.236209 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255605;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E, funcdef_no=9606, decl_uid=227967, cgraph_uid=6238, symbol_order=7027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result, struct allocator & D.236215)
{
  struct basic_block_def * * D.255610;
  struct basic_block_def * * D.255608;

  <bb 2> :
  D.255610 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.255608 = D.255610;

  <bb 3> :
<L0>:
  return D.255608;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10185, decl_uid=236217, cgraph_uid=6818, symbol_order=7611)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255613;
  const bool __assignable;
  struct basic_block_def * * D.255611;

  <bb 2> :
  __assignable = 1;
  D.255613 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.255611 = D.255613;

  <bb 3> :
<L0>:
  return D.255611;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_, funcdef_no=10633, decl_uid=240672, cgraph_uid=7265, symbol_order=8058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255616;
  struct basic_block_def * * D.255614;

  <bb 2> :
  D.255616 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.255614 = D.255616;

  <bb 3> :
<L0>:
  return D.255614;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10821, decl_uid=243752, cgraph_uid=7453, symbol_order=8248)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255621;
  struct __normal_iterator D.255619;
  struct __normal_iterator D.255618;
  struct basic_block_def * * D.255617;

  <bb 2> :
  D.255618 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.255619 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.255621 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (D.255619, D.255618, __result);
  D.255617 = D.255621;

  <bb 3> :
<L0>:
  return D.255617;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEET_SA_, funcdef_no=10198, decl_uid=236321, cgraph_uid=6830, symbol_order=7623)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.255622;

  <bb 2> :
  D.255622 = __it;

  <bb 3> :
<L0>:
  return D.255622;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_, funcdef_no=10909, decl_uid=244698, cgraph_uid=7541, symbol_order=8336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255626;
  struct basic_block_def * * D.255624;

  <bb 2> :
  __result.1902_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1902_1);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _4 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.255626 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_4, _3, _2);
  _5 = D.255626;
  D.255624 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255624;

}



;; Function std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPKP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE, funcdef_no=10635, decl_uid=240841, cgraph_uid=7267, symbol_order=8060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * const * D.255627;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (&__it);
  D.255627 = *_1;

  <bb 3> :
<L0>:
  return D.255627;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=10827, decl_uid=227934, cgraph_uid=7459, symbol_order=8254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * const & __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * const * const & D.255629;

  <bb 2> :
  D.255629 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255629;

}



;; Function std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10637, decl_uid=240995, cgraph_uid=7269, symbol_order=8062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255633;
  struct basic_block_def * * D.255631;

  <bb 2> :
  D.255633 = std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (__first, __last, __result);
  D.255631 = D.255633;

  <bb 3> :
<L0>:
  return D.255631;

}



;; Function std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10828, decl_uid=243797, cgraph_uid=7460, symbol_order=8255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255634;

  <bb 2> :
  D.255634 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255634;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP15basic_block_defEEPT_PKS5_S8_S6_, funcdef_no=10911, decl_uid=244743, cgraph_uid=7543, symbol_order=8338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  const ptrdiff_t _Num;
  struct basic_block_def * * D.255639;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 8;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1903_2 = (long unsigned int) _Num;
  _3 = _Num.1903_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1904_4 = (long unsigned int) _Num;
  _5 = _Num.1904_4 * 8;
  D.255639 = __result + _5;

  <bb 5> :
<L3>:
  return D.255639;

}



;; Function std::__niter_wrap<basic_block_def**> (_ZSt12__niter_wrapIPP15basic_block_defET_RKS3_S3_, funcdef_no=10642, decl_uid=241038, cgraph_uid=7274, symbol_order=8067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_wrap<basic_block_def**> (struct basic_block_def * * const & D.243819, struct basic_block_def * * __res)
{
  struct basic_block_def * * D.255641;

  <bb 2> :
  D.255641 = __res;

  <bb 3> :
<L0>:
  return D.255641;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2ERKS2_, funcdef_no=8781, decl_uid=171308, cgraph_uid=5413, symbol_order=6202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.255647;
  struct __normal_iterator D.255644;
  struct __normal_iterator D.255643;
  struct allocator D.228095;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171345;
  _2 = &__x->D.171345;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  D.228095 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<symbolicinfoPatharray>::size (__x);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _4, &D.228095);

  <bb 3> :
  std::allocator<symbolicinfoPatharray>::~allocator (&D.228095);
  D.228095 = {CLOBBER};
  _5 = &this->D.171345;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = this->D.171345._M_impl.D.170690._M_start;
  D.255643 = std::vector<symbolicinfoPatharray>::end (__x);
  D.255644 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.255647 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (D.255644, D.255643, _7, _6);

  <bb 4> :
  _8 = D.255647;
  this->D.171345._M_impl.D.170690._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<symbolicinfoPatharray>::~allocator (&D.228095);
  resx 2

  <bb 6> :
<L1>:
  D.228095 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.171345;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9609, decl_uid=170580, cgraph_uid=6241, symbol_order=7030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.255649;

  <bb 2> :
  D.255649 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.255649;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E17_S_select_on_copyERKS2_, funcdef_no=9608, decl_uid=170552, cgraph_uid=6240, symbol_order=7029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE37select_on_container_copy_constructionERKS1_, funcdef_no=10187, decl_uid=170517, cgraph_uid=6819, symbol_order=7612)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<symbolicinfoPatharray>::size (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE4sizeEv, funcdef_no=9607, decl_uid=170978, cgraph_uid=6239, symbol_order=7028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::size (const struct vector * const this)
{
  size_type D.255655;

  <bb 2> :
  _1 = this->D.171345._M_impl.D.170690._M_finish;
  _2 = this->D.171345._M_impl.D.170690._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.255655 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255655;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EmRKS1_, funcdef_no=9611, decl_uid=170777, cgraph_uid=6243, symbol_order=7032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=10189, decl_uid=170682, cgraph_uid=6821, symbol_order=7614)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this, __a);
  _1 = &this->D.170690;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_M_create_storageEm, funcdef_no=10191, decl_uid=170701, cgraph_uid=6823, symbol_order=7616)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.255658;

  <bb 2> :
  D.255658 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (this, __n);
  _1 = D.255658;
  this->_M_impl.D.170690._M_start = _1;
  _2 = this->_M_impl.D.170690._M_start;
  this->_M_impl.D.170690._M_finish = _2;
  _3 = this->_M_impl.D.170690._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.170690._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE11_M_allocateEm, funcdef_no=10206, decl_uid=170694, cgraph_uid=6838, symbol_order=7631)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.255665;
  struct symbolicinfoPatharray * iftmp.1905;
  struct symbolicinfoPatharray * D.255659;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.255665 = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_1, __n);
  iftmp.1905 = D.255665;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1905 = 0B;

  <bb 5> :
  D.255659 = iftmp.1905;

  <bb 6> :
<L3>:
  return D.255659;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE8allocateERS1_m, funcdef_no=10644, decl_uid=170495, cgraph_uid=7276, symbol_order=8069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct symbolicinfoPatharray * D.255668;
  struct symbolicinfoPatharray * D.255666;

  <bb 2> :
  D.255668 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (__a, __n, 0B);
  D.255666 = D.255668;

  <bb 3> :
<L0>:
  return D.255666;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE8allocateEmPKv, funcdef_no=10831, decl_uid=170349, cgraph_uid=7464, symbol_order=8259)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (struct new_allocator * const this, size_type __n, const void * D.244762)
{
  struct symbolicinfoPatharray * D.255679;
  struct symbolicinfoPatharray * D.255678;
  align_val_t __al;
  struct symbolicinfoPatharray * D.255676;
  bool retval.1906;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1906 = _4 != 0;
  if (retval.1906 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.255679 = operator new (_6);
  D.255676 = D.255679;

  <bb 7> :
<L6>:
  return D.255676;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE11_M_max_sizeEv, funcdef_no=10832, decl_uid=170376, cgraph_uid=7463, symbol_order=8258)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.255680;

  <bb 2> :
  D.255680 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.255680;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implD2Ev, funcdef_no=6814, decl_uid=170737, cgraph_uid=3442, symbol_order=4219)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::~allocator (_ZNSaI21symbolicinfoPatharrayED2Ev, funcdef_no=7812, decl_uid=170470, cgraph_uid=4444, symbol_order=5229)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayED2Ev, funcdef_no=8770, decl_uid=170399, cgraph_uid=5402, symbol_order=6191)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8773, decl_uid=170578, cgraph_uid=5405, symbol_order=6194)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.255682;

  <bb 2> :
  D.255682 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.255682;

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9614, decl_uid=170960, cgraph_uid=6246, symbol_order=7035)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::end (const struct vector * const this)
{
  struct const_iterator D.236265;
  struct const_iterator D.255684;

  <bb 2> :
  _1 = &this->D.171345._M_impl.D.170690._M_finish;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236265, _1);
  D.255684 = D.236265;
  D.236265 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255684;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=10193, decl_uid=228064, cgraph_uid=6825, symbol_order=7618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, const struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9613, decl_uid=170956, cgraph_uid=6245, symbol_order=7034)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::begin (const struct vector * const this)
{
  struct const_iterator D.236263;
  struct const_iterator D.255687;

  <bb 2> :
  _1 = &this->D.171345._M_impl.D.170690._M_start;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236263, _1);
  D.255687 = D.236263;
  D.236263 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255687;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9615, decl_uid=228084, cgraph_uid=6247, symbol_order=7036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result, struct allocator & D.236269)
{
  struct symbolicinfoPatharray * D.255692;
  struct symbolicinfoPatharray * D.255690;

  <bb 2> :
  D.255692 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.255690 = D.255692;

  <bb 3> :
<L0>:
  return D.255690;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10195, decl_uid=236271, cgraph_uid=6828, symbol_order=7621)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255695;
  const bool __assignable;
  struct symbolicinfoPatharray * D.255693;

  <bb 2> :
  __assignable = 1;
  D.255695 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.255693 = D.255695;

  <bb 3> :
<L0>:
  return D.255693;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10634, decl_uid=240823, cgraph_uid=7266, symbol_order=8059)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.255697;
  bool retval.1907;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (&__first);
  _2 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_2, _1);
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (&__first);
  __cur = __cur + 16;

  <bb 4> :
  retval.1907 = __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (&__first, &__last);
  if (retval.1907 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.255697 = __cur;

  <bb 6> :
<L3>:
  return D.255697;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10825, decl_uid=228022, cgraph_uid=7457, symbol_order=8252)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray & D.255699;

  <bb 2> :
  D.255699 = this->_M_current;

  <bb 3> :
<L0>:
  return D.255699;

}



;; Function std::__addressof<symbolicinfoPatharray> (_ZSt11__addressofI21symbolicinfoPatharrayEPT_RS1_, funcdef_no=10824, decl_uid=243780, cgraph_uid=7456, symbol_order=8251)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__addressof<symbolicinfoPatharray> (struct symbolicinfoPatharray & __r)
{
  struct symbolicinfoPatharray * D.255701;

  <bb 2> :
  D.255701 = __r;

  <bb 3> :
<L0>:
  return D.255701;

}



;; Function std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRKS0_EEvPT_DpOT0_, funcdef_no=10826, decl_uid=243782, cgraph_uid=7458, symbol_order=8253)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, const struct symbolicinfoPatharray & __args#0)
{
  void * D.244724;
  void * D.244723;
  const struct symbolicinfoPatharray * D.244725;

  <bb 2> :
  D.244725 = std::forward<const symbolicinfoPatharray&> (__args#0);
  D.244723 = __p;
  D.244724 = operator new (16, D.244723);
  MEM[(struct symbolicinfoPatharray *)D.244724] = *D.244725;
  return;

}



;; Function std::forward<const symbolicinfoPatharray&> (_ZSt7forwardIRK21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=10910, decl_uid=244721, cgraph_uid=7542, symbol_order=8337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct symbolicinfoPatharray & std::forward<const symbolicinfoPatharray&> (const struct type & __t)
{
  const struct symbolicinfoPatharray & D.255703;

  <bb 2> :
  D.255703 = __t;

  <bb 3> :
<L0>:
  return D.255703;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10823, decl_uid=228026, cgraph_uid=7455, symbol_order=8250)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.255705;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 16;
  this->_M_current = _2;
  D.255705 = this;

  <bb 3> :
<L0>:
  return D.255705;

}



;; Function __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZN9__gnu_cxxneIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10822, decl_uid=243773, cgraph_uid=7454, symbol_order=8249)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.255707;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__rhs);
  _4 = *_3;
  D.255707 = _2 != _4;

  <bb 3> :
<L0>:
  return D.255707;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10833, decl_uid=228051, cgraph_uid=7465, symbol_order=8260)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray * const & D.255709;

  <bb 2> :
  D.255709 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255709;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7815, decl_uid=170800, cgraph_uid=4447, symbol_order=5232)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.170690._M_end_of_storage;
  _2 = this->_M_impl.D.170690._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.170690._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8772, decl_uid=170697, cgraph_uid=5404, symbol_order=6193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (struct _Vector_base * const this, struct symbolicinfoPatharray * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE10deallocateERS1_PS0_m, funcdef_no=9576, decl_uid=170502, cgraph_uid=6208, symbol_order=6997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (struct allocator_type & __a, struct symbolicinfoPatharray * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE10deallocateEPS1_m, funcdef_no=10162, decl_uid=170353, cgraph_uid=6794, symbol_order=7587)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (struct new_allocator * const this, struct symbolicinfoPatharray * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<symbolicinfoPatharray>::~vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7818, decl_uid=171342, cgraph_uid=4450, symbol_order=5235)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171345;
  _2 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_1);
  _3 = this->D.171345._M_impl.D.170690._M_finish;
  _4 = this->D.171345._M_impl.D.170690._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_4, _3, _2);
  _5 = &this->D.171345;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt8_DestroyIP21symbolicinfoPatharrayS0_EvT_S2_RSaIT0_E, funcdef_no=8774, decl_uid=214766, cgraph_uid=5406, symbol_order=6195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct allocator & D.227849)
{
  <bb 2> :
  std::_Destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*> (_ZSt8_DestroyIP21symbolicinfoPatharrayEvT_S2_, funcdef_no=9577, decl_uid=227851, cgraph_uid=6210, symbol_order=6999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP21symbolicinfoPatharrayEEvT_S4_, funcdef_no=10163, decl_uid=236109, cgraph_uid=6795, symbol_order=7588)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * D.240491, struct symbolicinfoPatharray * D.240492)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function symbolicinfo::operator= (_ZN12symbolicinfoaSERKS_, funcdef_no=7824, decl_uid=214789, cgraph_uid=4455, symbol_order=5240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfo & symbolicinfo::operator= (struct symbolicinfo * const this, const struct symbolicinfo & D.214790)
{
  struct symbolicinfo & D.255717;

  <bb 2> :
  _1 = D.214790->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.214790->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.214790->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.214790->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.214790->node;
  this->node = _5;
  _6 = &D.214790->switchs;
  _7 = &this->switchs;
  std::vector<basic_block_def*>::operator= (_7, _6);
  _8 = D.214790->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.214790->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.214790->prevlogic;
  this->prevlogic = _10;
  _11 = &D.214790->symbolicExecutionPathConstraint;
  _12 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::operator= (_12, _11);
  _13 = &D.214790->symbolicExecutionPathConstraintarrayTrue;
  _14 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::operator= (_14, _13);
  _15 = &D.214790->symbolicExecutionPathConstraintarrayFalse;
  _16 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::operator= (_16, _15);
  D.255717 = this;

  <bb 3> :
<L0>:
  return D.255717;

}



;; Function std::vector<basic_block_def*>::operator= (_ZNSt6vectorIP15basic_block_defSaIS1_EEaSERKS3_, funcdef_no=8783, decl_uid=169878, cgraph_uid=5417, symbol_order=6206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<basic_block_def*>::operator= (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.255752;
  struct basic_block_def * * __tmp;
  const size_type __xlen;
  struct vector & D.255750;
  struct __normal_iterator D.255747;
  struct __normal_iterator D.255746;
  struct __normal_iterator D.255745;
  struct __normal_iterator D.255744;
  struct __normal_iterator D.255743;
  bool retval.1912;
  struct __normal_iterator D.255738;
  struct __normal_iterator D.255737;
  bool retval.1911;
  bool iftmp.1910;
  bool retval.1909;
  bool retval.1908;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1908 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ();
  if (retval.1908 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.170300;
  _4 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.170300;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1910 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1910 = 0;

  <bb 8> :
  retval.1909 = iftmp.1910;
  if (retval.1909 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<basic_block_def*>::clear (this);
  _8 = &this->D.170300;
  _9 = this->D.170300._M_impl.D.169645._M_end_of_storage;
  _10 = this->D.170300._M_impl.D.169645._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 8;
  _13 = (long unsigned int) _12;
  _14 = this->D.170300._M_impl.D.169645._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_8, _14, _13);
  this->D.170300._M_impl.D.169645._M_start = 0B;
  this->D.170300._M_impl.D.169645._M_finish = 0B;
  this->D.170300._M_impl.D.169645._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.170300;
  _16 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.170300;
  _18 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<basic_block_def*> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<basic_block_def*>::size (__x);
  _19 = std::vector<basic_block_def*>::capacity (this);
  retval.1911 = __xlen > _19;
  if (retval.1911 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.255737 = std::vector<basic_block_def*>::end (__x);
  D.255738 = std::vector<basic_block_def*>::begin (__x);
  D.255752 = std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (this, __xlen, D.255738, D.255737);
  __tmp = D.255752;
  _20 = &this->D.170300;
  _21 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_20);
  _22 = this->D.170300._M_impl.D.169645._M_finish;
  _23 = this->D.170300._M_impl.D.169645._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_23, _22, _21);
  _24 = &this->D.170300;
  _25 = this->D.170300._M_impl.D.169645._M_end_of_storage;
  _26 = this->D.170300._M_impl.D.169645._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 8;
  _29 = (long unsigned int) _28;
  _30 = this->D.170300._M_impl.D.169645._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_24, _30, _29);
  this->D.170300._M_impl.D.169645._M_start = __tmp;
  _31 = this->D.170300._M_impl.D.169645._M_start;
  _32 = __xlen * 8;
  _33 = _31 + _32;
  this->D.170300._M_impl.D.169645._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<basic_block_def*>::size (this);
  retval.1912 = __xlen <= _34;
  if (retval.1912 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.170300;
  _36 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_35);
  D.255743 = std::vector<basic_block_def*>::end (this);
  D.255744 = std::vector<basic_block_def*>::begin (this);
  D.255745 = std::vector<basic_block_def*>::end (__x);
  D.255746 = std::vector<basic_block_def*>::begin (__x);
  D.255747 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.255746, D.255745, D.255744);
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (D.255747, D.255743, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.170300._M_impl.D.169645._M_start;
  _38 = __x->D.170300._M_impl.D.169645._M_start;
  _39 = std::vector<basic_block_def*>::size (this);
  _40 = _39 * 8;
  _41 = _38 + _40;
  _42 = __x->D.170300._M_impl.D.169645._M_start;
  std::copy<basic_block_def**, basic_block_def**> (_42, _41, _37);
  _43 = &this->D.170300;
  _44 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_43);
  _45 = this->D.170300._M_impl.D.169645._M_finish;
  _46 = __x->D.170300._M_impl.D.169645._M_finish;
  _47 = __x->D.170300._M_impl.D.169645._M_start;
  _48 = std::vector<basic_block_def*>::size (this);
  _49 = _48 * 8;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.170300._M_impl.D.169645._M_start;
  _52 = __xlen * 8;
  _53 = _51 + _52;
  this->D.170300._M_impl.D.169645._M_finish = _53;

  <bb 17> :
  D.255750 = this;

  <bb 18> :
<L19>:
  return D.255750;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E27_S_propagate_on_copy_assignEv, funcdef_no=8784, decl_uid=169512, cgraph_uid=5415, symbol_order=6204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ()
{
  bool D.255753;

  <bb 2> :
  D.255753 = 0;

  <bb 3> :
<L0>:
  return D.255753;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E15_S_always_equalEv, funcdef_no=8785, decl_uid=169515, cgraph_uid=5416, symbol_order=6205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ()
{
  bool D.255755;

  <bb 2> :
  D.255755 = 1;

  <bb 3> :
<L0>:
  return D.255755;

}



;; Function std::operator!= (_ZStneRKSaIP15basic_block_defES3_, funcdef_no=9616, decl_uid=169398, cgraph_uid=6248, symbol_order=7037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.236288, const struct allocator & D.236289)
{
  bool D.255757;

  <bb 2> :
  D.255757 = 0;

  <bb 3> :
<L0>:
  return D.255757;

}



;; Function std::vector<basic_block_def*>::clear (_ZNSt6vectorIP15basic_block_defSaIS1_EE5clearEv, funcdef_no=9617, decl_uid=170030, cgraph_uid=6249, symbol_order=7038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_start;
  std::vector<basic_block_def*>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<basic_block_def*>::_M_erase_at_end (_ZNSt6vectorIP15basic_block_defSaIS1_EE15_M_erase_at_endEPS1_, funcdef_no=10197, decl_uid=170158, cgraph_uid=6829, symbol_order=7622)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<basic_block_def*>::_M_erase_at_end (struct vector * const this, struct basic_block_def * * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 8;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.170300;
  _5 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_4);
  _6 = this->D.170300._M_impl.D.169645._M_finish;
  std::_Destroy<basic_block_def**, basic_block_def*> (__pos, _6, _5);
  this->D.170300._M_impl.D.169645._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<basic_block_def*> > (_ZSt15__alloc_on_copyISaIP15basic_block_defEEvRT_RKS3_, funcdef_no=9618, decl_uid=228122, cgraph_uid=6250, symbol_order=7039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<basic_block_def*> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<basic_block_def*>::capacity (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8capacityEv, funcdef_no=9619, decl_uid=169946, cgraph_uid=6251, symbol_order=7040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::capacity (const struct vector * const this)
{
  size_type D.255762;

  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_end_of_storage;
  _2 = this->D.170300._M_impl.D.169645._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.255762 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255762;

}



;; Function std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZNSt6vectorIP15basic_block_defSaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_, funcdef_no=9620, decl_uid=228129, cgraph_uid=6252, symbol_order=7041)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct basic_block_def * * std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct basic_block_def * * D.255766;
  struct basic_block_def * * __result;
  struct basic_block_def * * D.255764;

  <bb 2> :
  _1 = &this->D.170300;
  D.255766 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_1, __n);
  __result = D.255766;
  _2 = &this->D.170300;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (__first, __last, __result, _3);

  <bb 3> :
  D.255764 = __result;

  <bb 4> :
<L0>:
  return D.255764;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.170300;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_, funcdef_no=9621, decl_uid=228137, cgraph_uid=6253, symbol_order=7042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.255772;
  struct __normal_iterator D.255771;
  struct __normal_iterator D.255770;

  <bb 2> :
  D.255771 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.255772 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.255770 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.255772, D.255771, __result);

  <bb 3> :
<L0>:
  return D.255770;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_, funcdef_no=10199, decl_uid=236327, cgraph_uid=6832, symbol_order=7625)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct basic_block_def * * D.255776;
  struct __normal_iterator D.255774;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__result);
  _2 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.255776 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_3, _2, _1);
  _4 = D.255776;
  D.255774 = std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (__result, _4);

  <bb 3> :
<L0>:
  return D.255774;

}



;; Function std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10636, decl_uid=240992, cgraph_uid=7268, symbol_order=8061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * * D.255777;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__it);
  D.255777 = *_1;

  <bb 3> :
<L0>:
  return D.255777;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, funcdef_no=10638, decl_uid=240999, cgraph_uid=7270, symbol_order=8063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __from, struct basic_block_def * * __res)
{
  struct __normal_iterator D.255779;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 8;
  D.255779 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.255779;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEplEl, funcdef_no=10829, decl_uid=214105, cgraph_uid=7461, symbol_order=8256)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct basic_block_def * * const D.244749;
  struct __normal_iterator D.244750;
  struct __normal_iterator D.255781;

  <bb 2> :
  _1 = this->_M_current;
  __n.1913_2 = (long unsigned int) __n;
  _3 = __n.1913_2 * 8;
  _4 = _1 + _3;
  D.244749 = _4;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.244750, &D.244749);
  D.255781 = D.244750;
  D.244750 = {CLOBBER};
  D.244749 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.255781;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E, funcdef_no=9622, decl_uid=228143, cgraph_uid=6254, symbol_order=7043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.236356)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEEEvT_S9_, funcdef_no=10201, decl_uid=236358, cgraph_uid=6833, symbol_order=7626)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS5_SaIS5_EEEEEEvT_SB_, funcdef_no=10639, decl_uid=241023, cgraph_uid=7271, symbol_order=8064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator D.243806, struct __normal_iterator D.243807)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<basic_block_def**, basic_block_def**> (_ZSt4copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=9623, decl_uid=228151, cgraph_uid=6255, symbol_order=7044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255787;
  struct basic_block_def * * D.255785;

  <bb 2> :
  _1 = std::__miter_base<basic_block_def**> (__last);
  _2 = std::__miter_base<basic_block_def**> (__first);
  D.255787 = std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_2, _1, __result);
  D.255785 = D.255787;

  <bb 3> :
<L0>:
  return D.255785;

}



;; Function std::__miter_base<basic_block_def**> (_ZSt12__miter_baseIPP15basic_block_defET_S3_, funcdef_no=10202, decl_uid=236374, cgraph_uid=6834, symbol_order=7627)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__miter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.255788;

  <bb 2> :
  D.255788 = __it;

  <bb 3> :
<L0>:
  return D.255788;

}



;; Function std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_ZSt13__copy_move_aILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10203, decl_uid=236376, cgraph_uid=6835, symbol_order=7628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255792;
  struct basic_block_def * * D.255790;

  <bb 2> :
  __result.1914_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1914_1);
  _3 = std::__niter_base<basic_block_def**> (__last);
  _4 = std::__niter_base<basic_block_def**> (__first);
  D.255792 = std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_4, _3, _2);
  _5 = D.255792;
  D.255790 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255790;

}



;; Function std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10641, decl_uid=241034, cgraph_uid=7273, symbol_order=8066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255795;
  struct basic_block_def * * D.255793;

  <bb 2> :
  D.255795 = std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255793 = D.255795;

  <bb 3> :
<L0>:
  return D.255793;

}



;; Function std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10830, decl_uid=243815, cgraph_uid=7462, symbol_order=8257)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255796;

  <bb 2> :
  D.255796 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255796;

}



;; Function std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIPP15basic_block_defS2_S1_ET0_T_S4_S3_RSaIT1_E, funcdef_no=9624, decl_uid=228155, cgraph_uid=6256, symbol_order=7045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.236383)
{
  struct basic_block_def * * D.255800;
  struct basic_block_def * * D.255798;

  <bb 2> :
  D.255800 = std::uninitialized_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255798 = D.255800;

  <bb 3> :
<L0>:
  return D.255798;

}



;; Function std::uninitialized_copy<basic_block_def**, basic_block_def**> (_ZSt18uninitialized_copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=10204, decl_uid=236385, cgraph_uid=6836, symbol_order=7629)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255803;
  const bool __assignable;
  struct basic_block_def * * D.255801;

  <bb 2> :
  __assignable = 1;
  D.255803 = std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255801 = D.255803;

  <bb 3> :
<L0>:
  return D.255801;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP15basic_block_defS4_EET0_T_S6_S5_, funcdef_no=10643, decl_uid=241072, cgraph_uid=7275, symbol_order=8068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255806;
  struct basic_block_def * * D.255804;

  <bb 2> :
  D.255806 = std::copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255804 = D.255806;

  <bb 3> :
<L0>:
  return D.255804;

}



;; Function std::vector<symbolicinfoPatharray>::operator= (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEaSERKS2_, funcdef_no=8786, decl_uid=170923, cgraph_uid=5420, symbol_order=6209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<symbolicinfoPatharray>::operator= (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.255840;
  struct symbolicinfoPatharray * __tmp;
  const size_type __xlen;
  struct vector & D.255838;
  struct __normal_iterator D.255835;
  struct __normal_iterator D.255834;
  struct __normal_iterator D.255833;
  struct __normal_iterator D.255832;
  struct __normal_iterator D.255831;
  bool retval.1919;
  struct __normal_iterator D.255826;
  struct __normal_iterator D.255825;
  bool retval.1918;
  bool iftmp.1917;
  bool retval.1916;
  bool retval.1915;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1915 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ();
  if (retval.1915 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.171345;
  _4 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.171345;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1917 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1917 = 0;

  <bb 8> :
  retval.1916 = iftmp.1917;
  if (retval.1916 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<symbolicinfoPatharray>::clear (this);
  _8 = &this->D.171345;
  _9 = this->D.171345._M_impl.D.170690._M_end_of_storage;
  _10 = this->D.171345._M_impl.D.170690._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.171345._M_impl.D.170690._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_8, _14, _13);
  this->D.171345._M_impl.D.170690._M_start = 0B;
  this->D.171345._M_impl.D.170690._M_finish = 0B;
  this->D.171345._M_impl.D.170690._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.171345;
  _16 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.171345;
  _18 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<symbolicinfoPatharray>::size (__x);
  _19 = std::vector<symbolicinfoPatharray>::capacity (this);
  retval.1918 = __xlen > _19;
  if (retval.1918 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.255825 = std::vector<symbolicinfoPatharray>::end (__x);
  D.255826 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.255840 = std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (this, __xlen, D.255826, D.255825);
  __tmp = D.255840;
  _20 = &this->D.171345;
  _21 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_20);
  _22 = this->D.171345._M_impl.D.170690._M_finish;
  _23 = this->D.171345._M_impl.D.170690._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_23, _22, _21);
  _24 = &this->D.171345;
  _25 = this->D.171345._M_impl.D.170690._M_end_of_storage;
  _26 = this->D.171345._M_impl.D.170690._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.171345._M_impl.D.170690._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_24, _30, _29);
  this->D.171345._M_impl.D.170690._M_start = __tmp;
  _31 = this->D.171345._M_impl.D.170690._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.171345._M_impl.D.170690._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<symbolicinfoPatharray>::size (this);
  retval.1919 = __xlen <= _34;
  if (retval.1919 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.171345;
  _36 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_35);
  D.255831 = std::vector<symbolicinfoPatharray>::end (this);
  D.255832 = std::vector<symbolicinfoPatharray>::begin (this);
  D.255833 = std::vector<symbolicinfoPatharray>::end (__x);
  D.255834 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.255835 = std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.255834, D.255833, D.255832);
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (D.255835, D.255831, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.171345._M_impl.D.170690._M_start;
  _38 = __x->D.171345._M_impl.D.170690._M_start;
  _39 = std::vector<symbolicinfoPatharray>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.171345._M_impl.D.170690._M_start;
  std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_42, _41, _37);
  _43 = &this->D.171345;
  _44 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_43);
  _45 = this->D.171345._M_impl.D.170690._M_finish;
  _46 = __x->D.171345._M_impl.D.170690._M_finish;
  _47 = __x->D.171345._M_impl.D.170690._M_start;
  _48 = std::vector<symbolicinfoPatharray>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.171345._M_impl.D.170690._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.171345._M_impl.D.170690._M_finish = _53;

  <bb 17> :
  D.255838 = this;

  <bb 18> :
<L19>:
  return D.255838;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E27_S_propagate_on_copy_assignEv, funcdef_no=8787, decl_uid=170557, cgraph_uid=5418, symbol_order=6207)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ()
{
  bool D.255841;

  <bb 2> :
  D.255841 = 0;

  <bb 3> :
<L0>:
  return D.255841;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E15_S_always_equalEv, funcdef_no=8788, decl_uid=170560, cgraph_uid=5419, symbol_order=6208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ()
{
  bool D.255843;

  <bb 2> :
  D.255843 = 1;

  <bb 3> :
<L0>:
  return D.255843;

}



;; Function std::operator!= (_ZStneRKSaI21symbolicinfoPatharrayES2_, funcdef_no=9625, decl_uid=170443, cgraph_uid=6257, symbol_order=7046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.236389, const struct allocator & D.236390)
{
  bool D.255845;

  <bb 2> :
  D.255845 = 0;

  <bb 3> :
<L0>:
  return D.255845;

}



;; Function std::vector<symbolicinfoPatharray>::clear (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5clearEv, funcdef_no=9626, decl_uid=171075, cgraph_uid=6258, symbol_order=7047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.171345._M_impl.D.170690._M_start;
  std::vector<symbolicinfoPatharray>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::_M_erase_at_end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=10205, decl_uid=171203, cgraph_uid=6837, symbol_order=7630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<symbolicinfoPatharray>::_M_erase_at_end (struct vector * const this, struct symbolicinfoPatharray * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.171345._M_impl.D.170690._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.171345;
  _5 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_4);
  _6 = this->D.171345._M_impl.D.170690._M_finish;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (__pos, _6, _5);
  this->D.171345._M_impl.D.170690._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_ZSt15__alloc_on_copyISaI21symbolicinfoPatharrayEEvRT_RKS2_, funcdef_no=9627, decl_uid=228188, cgraph_uid=6259, symbol_order=7048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<symbolicinfoPatharray>::capacity (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE8capacityEv, funcdef_no=9628, decl_uid=170991, cgraph_uid=6260, symbol_order=7049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::capacity (const struct vector * const this)
{
  size_type D.255850;

  <bb 2> :
  _1 = this->D.171345._M_impl.D.170690._M_end_of_storage;
  _2 = this->D.171345._M_impl.D.170690._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.255850 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255850;

}



;; Function std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=9629, decl_uid=228195, cgraph_uid=6261, symbol_order=7050)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct symbolicinfoPatharray * std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct symbolicinfoPatharray * D.255854;
  struct symbolicinfoPatharray * __result;
  struct symbolicinfoPatharray * D.255852;

  <bb 2> :
  _1 = &this->D.171345;
  D.255854 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_1, __n);
  __result = D.255854;
  _2 = &this->D.171345;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (__first, __last, __result, _3);

  <bb 3> :
  D.255852 = __result;

  <bb 4> :
<L0>:
  return D.255852;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.171345;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9632, decl_uid=170958, cgraph_uid=6264, symbol_order=7053)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::end (struct vector * const this)
{
  struct iterator D.236476;
  struct iterator D.255858;

  <bb 2> :
  _1 = &this->D.171345._M_impl.D.170690._M_finish;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236476, _1);
  D.255858 = D.236476;
  D.236476 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255858;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=10208, decl_uid=228277, cgraph_uid=6840, symbol_order=7633)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9630, decl_uid=170954, cgraph_uid=6262, symbol_order=7051)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::begin (struct vector * const this)
{
  struct iterator D.236430;
  struct iterator D.255861;

  <bb 2> :
  _1 = &this->D.171345._M_impl.D.170690._M_start;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236430, _1);
  D.255861 = D.236430;
  D.236430 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255861;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=9631, decl_uid=228296, cgraph_uid=6263, symbol_order=7052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.255866;
  struct __normal_iterator D.255865;
  struct __normal_iterator D.255864;

  <bb 2> :
  D.255865 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__last);
  D.255866 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first);
  D.255864 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.255866, D.255865, __result);

  <bb 3> :
<L0>:
  return D.255864;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=10210, decl_uid=236442, cgraph_uid=6842, symbol_order=7635)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.255868;

  <bb 2> :
  D.255868 = __it;

  <bb 3> :
<L0>:
  return D.255868;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=10211, decl_uid=236448, cgraph_uid=6845, symbol_order=7638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct symbolicinfoPatharray * D.255872;
  struct __normal_iterator D.255870;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__result);
  _2 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__last);
  _3 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__first);
  D.255872 = std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_3, _2, _1);
  _4 = D.255872;
  D.255870 = std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__result, _4);

  <bb 3> :
<L0>:
  return D.255870;

}



;; Function std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIP21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10646, decl_uid=241246, cgraph_uid=7278, symbol_order=8071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  struct symbolicinfoPatharray * D.255873;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.255873 = *_1;

  <bb 3> :
<L0>:
  return D.255873;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10834, decl_uid=228264, cgraph_uid=7466, symbol_order=8261)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  struct symbolicinfoPatharray * const & D.255875;

  <bb 2> :
  D.255875 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255875;

}



;; Function std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIPK21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10645, decl_uid=241095, cgraph_uid=7277, symbol_order=8070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  const struct symbolicinfoPatharray * D.255877;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.255877 = *_1;

  <bb 3> :
<L0>:
  return D.255877;

}



;; Function std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10647, decl_uid=241394, cgraph_uid=7279, symbol_order=8072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255881;
  struct symbolicinfoPatharray * D.255879;

  <bb 2> :
  D.255881 = std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255879 = D.255881;

  <bb 3> :
<L0>:
  return D.255879;

}



;; Function std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10835, decl_uid=243837, cgraph_uid=7467, symbol_order=8262)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255882;

  <bb 2> :
  D.255882 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255882;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI21symbolicinfoPatharrayEEPT_PKS4_S7_S5_, funcdef_no=10912, decl_uid=244786, cgraph_uid=7544, symbol_order=8339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  const ptrdiff_t _Num;
  struct symbolicinfoPatharray * D.255887;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1920_2 = (long unsigned int) _Num;
  _3 = _Num.1920_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1921_4 = (long unsigned int) _Num;
  _5 = _Num.1921_4 * 16;
  D.255887 = __result + _5;

  <bb 5> :
<L3>:
  return D.255887;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10648, decl_uid=241398, cgraph_uid=7280, symbol_order=8073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __from, struct symbolicinfoPatharray * __res)
{
  struct __normal_iterator D.255889;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.255889 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.255889;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10836, decl_uid=228255, cgraph_uid=7468, symbol_order=8263)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct symbolicinfoPatharray * const D.244792;
  struct __normal_iterator D.244793;
  struct __normal_iterator D.255891;

  <bb 2> :
  _1 = this->_M_current;
  __n.1922_2 = (long unsigned int) __n;
  _3 = __n.1922_2 * 16;
  _4 = _1 + _3;
  D.244792 = _4;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.244793, &D.244792);
  D.255891 = D.244793;
  D.244793 = {CLOBBER};
  D.244792 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.255891;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=9633, decl_uid=228302, cgraph_uid=6265, symbol_order=7054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.236479)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=10214, decl_uid=236481, cgraph_uid=6846, symbol_order=7639)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10649, decl_uid=241422, cgraph_uid=7281, symbol_order=8074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator D.243847, struct __normal_iterator D.243848)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt4copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=9634, decl_uid=228310, cgraph_uid=6266, symbol_order=7055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255897;
  struct symbolicinfoPatharray * D.255895;

  <bb 2> :
  _1 = std::__miter_base<symbolicinfoPatharray*> (__last);
  _2 = std::__miter_base<symbolicinfoPatharray*> (__first);
  D.255897 = std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_2, _1, __result);
  D.255895 = D.255897;

  <bb 3> :
<L0>:
  return D.255895;

}



;; Function std::__miter_base<symbolicinfoPatharray*> (_ZSt12__miter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10215, decl_uid=236497, cgraph_uid=6847, symbol_order=7640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__miter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.255898;

  <bb 2> :
  D.255898 = __it;

  <bb 3> :
<L0>:
  return D.255898;

}



;; Function std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt13__copy_move_aILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10216, decl_uid=236499, cgraph_uid=6848, symbol_order=7641)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255902;
  struct symbolicinfoPatharray * D.255900;

  <bb 2> :
  __result.1923_1 = __result;
  _2 = std::__niter_base<symbolicinfoPatharray*> (__result.1923_1);
  _3 = std::__niter_base<symbolicinfoPatharray*> (__last);
  _4 = std::__niter_base<symbolicinfoPatharray*> (__first);
  D.255902 = std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_4, _3, _2);
  _5 = D.255902;
  D.255900 = std::__niter_wrap<symbolicinfoPatharray*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255900;

}



;; Function std::__niter_base<symbolicinfoPatharray*> (_ZSt12__niter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10650, decl_uid=241433, cgraph_uid=7282, symbol_order=8075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.255903;

  <bb 2> :
  D.255903 = __it;

  <bb 3> :
<L0>:
  return D.255903;

}



;; Function std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10651, decl_uid=241435, cgraph_uid=7283, symbol_order=8076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255907;
  struct symbolicinfoPatharray * D.255905;

  <bb 2> :
  D.255907 = std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255905 = D.255907;

  <bb 3> :
<L0>:
  return D.255905;

}



;; Function std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10837, decl_uid=243856, cgraph_uid=7469, symbol_order=8264)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255908;

  <bb 2> :
  D.255908 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255908;

}



;; Function std::__niter_wrap<symbolicinfoPatharray*> (_ZSt12__niter_wrapIP21symbolicinfoPatharrayET_RKS2_S2_, funcdef_no=10652, decl_uid=241439, cgraph_uid=7284, symbol_order=8077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_wrap<symbolicinfoPatharray*> (struct symbolicinfoPatharray * const & D.243860, struct symbolicinfoPatharray * __res)
{
  struct symbolicinfoPatharray * D.255910;

  <bb 2> :
  D.255910 = __res;

  <bb 3> :
<L0>:
  return D.255910;

}



;; Function std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIP21symbolicinfoPatharrayS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=9635, decl_uid=228314, cgraph_uid=6267, symbol_order=7056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result, struct allocator & D.236506)
{
  struct symbolicinfoPatharray * D.255914;
  struct symbolicinfoPatharray * D.255912;

  <bb 2> :
  D.255914 = std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255912 = D.255914;

  <bb 3> :
<L0>:
  return D.255912;

}



;; Function std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=10217, decl_uid=236508, cgraph_uid=6849, symbol_order=7642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255917;
  const bool __assignable;
  struct symbolicinfoPatharray * D.255915;

  <bb 2> :
  __assignable = 1;
  D.255917 = std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255915 = D.255917;

  <bb 3> :
<L0>:
  return D.255915;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP21symbolicinfoPatharrayS3_EET0_T_S5_S4_, funcdef_no=10653, decl_uid=241473, cgraph_uid=7285, symbol_order=8078)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.255918;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_1, __first);
  __first = __first + 16;
  __cur = __cur + 16;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.255918 = __cur;

  <bb 6> :
<L3>:
  return D.255918;

}



;; Function std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRS0_EEvPT_DpOT0_, funcdef_no=10838, decl_uid=243868, cgraph_uid=7470, symbol_order=8265)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, struct symbolicinfoPatharray & __args#0)
{
  void * D.244817;
  void * D.244816;
  const struct symbolicinfoPatharray * D.244818;

  <bb 2> :
  D.244818 = std::forward<symbolicinfoPatharray&> (__args#0);
  D.244816 = __p;
  D.244817 = operator new (16, D.244816);
  MEM[(struct symbolicinfoPatharray *)D.244817] = *D.244818;
  return;

}



;; Function std::forward<symbolicinfoPatharray&> (_ZSt7forwardIR21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10913, decl_uid=244814, cgraph_uid=7545, symbol_order=8340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray & std::forward<symbolicinfoPatharray&> (struct type & __t)
{
  struct symbolicinfoPatharray & D.255920;

  <bb 2> :
  D.255920 = __t;

  <bb 3> :
<L0>:
  return D.255920;

}



;; Function hash_map<tree_node*, function_path_array>::put (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7825, decl_uid=191905, cgraph_uid=4458, symbol_order=5243)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_path_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_path_array & v)
{
  bool D.255929;
  struct hash_entry * D.255928;
  unsigned int D.255927;
  bool ins;
  struct hash_entry * e;
  bool D.255925;
  void * D.214910;
  void * D.214909;

  <bb 2> :
  _1 = &this->m_table;
  D.255927 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.255927;
  D.255928 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.255928;
  D.255929 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (e);
  ins = D.255929;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214909 = &e->m_value;
  D.214910 = operator new (32, D.214909);
  function_path_array::function_path_array (D.214910, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_path_array::operator= (_4, v);

  <bb 5> :
  D.255925 = ~ins;

  <bb 6> :
<L3>:
  return D.255925;

  <bb 7> :
<L4>:
  operator delete (D.214910, D.214909);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8789, decl_uid=192063, cgraph_uid=5421, symbol_order=6210)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.255980;
  bool D.255979;
  bool D.255978;
  bool D.255977;
  bool D.255976;
  bool D.255975;
  struct value_type * D.255974;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1929;
  bool retval.1928;
  bool retval.1927;
  bool retval.1926;
  bool retval.1925;
  bool retval.1924;
  struct value_type * D.255936;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.255975 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1924 = D.255975;
  if (retval.1924 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.255976 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1925 = D.255976;
  if (retval.1925 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.255977 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.1926 = D.255977;
  if (retval.1926 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.255936 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.255978 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1927 = D.255978;
  if (retval.1927 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.255979 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1928 = D.255979;
  if (retval.1928 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.255980 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.1929 = D.255980;
  if (retval.1929 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.255936 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.255936 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.255936 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.255936 = _37 + _39;

  <bb 27> :
<L37>:
  return D.255936;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9636, decl_uid=192144, cgraph_uid=6280, symbol_order=7069)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.256011;
  unsigned int D.256010;
  bool D.256009;
  bool D.256008;
  struct mem_alloc_description & D.256007;
  struct value_type * D.256006;
  unsigned int D.256005;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236532;
  void * D.236531;
  struct hash_entry & D.236569;
  bool iftmp.1933;
  bool retval.1932;
  bool iftmp.1931;
  bool retval.1930;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1931 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1931 = 0;

  <bb 6> :
  retval.1930 = iftmp.1931;
  if (retval.1930 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.256005 = hash_table_higher_prime_index (_5);
  nindex = D.256005;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.256006 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.256006;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.256008 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.256008;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.256009 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.256009;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1933 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1933 = 0;

  <bb 15> :
  retval.1932 = iftmp.1933;
  if (retval.1932 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.256010 = hash_map<tree_node*, function_path_array>::hash_entry::hash (x);
  _16 = D.256010;
  D.256011 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.256011;
  D.236569 = std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (x);
  D.236531 = q;
  D.236532 = operator new (40, D.236531);
  hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (D.236532, D.236569);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10218, decl_uid=192039, cgraph_uid=6850, symbol_order=7643)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.256012;

  <bb 2> :
  D.256012 = this->m_size;

  <bb 3> :
<L0>:
  return D.256012;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10219, decl_uid=192041, cgraph_uid=6851, symbol_order=7644)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.256014;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.256014 = _1 - _2;

  <bb 3> :
<L0>:
  return D.256014;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10220, decl_uid=192141, cgraph_uid=6852, symbol_order=7645)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1934;
  bool D.256016;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1934 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1934 = 0;

  <bb 6> :
  D.256016 = iftmp.1934;

  <bb 7> :
<L4>:
  return D.256016;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9288, decl_uid=192131, cgraph_uid=5920, symbol_order=6709)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256038;
  struct value_type * D.256037;
  struct mem_alloc_description & D.256036;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256034;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256037 = xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (n);
  nentries = D.256037;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256038 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (n);
  nentries = D.256038;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256034 = nentries;

  <bb 9> :
<L14>:
  return D.256034;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9974, decl_uid=216848, cgraph_uid=6606, symbol_order=7399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256041;
  struct hash_entry * D.256039;

  <bb 2> :
  D.256041 = xcalloc (count, 40);
  D.256039 = D.256041;

  <bb 3> :
<L0>:
  return D.256039;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9975, decl_uid=233047, cgraph_uid=6607, symbol_order=7400)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.256048;
  struct hash_entry * D.256047;
  struct hash_entry * D.256045;
  bool retval.1935;

  <bb 2> :
  retval.1935 = need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ();
  if (retval.1935 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.256047 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.256045 = D.256047;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.256048 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256045 = D.256048;

  <bb 5> :
<L2>:
  return D.256045;

}



;; Function finalize<hash_map<tree_node*, function_path_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10486, decl_uid=239711, cgraph_uid=7121, symbol_order=7914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_path_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10488, decl_uid=243136, cgraph_uid=7119, symbol_order=7912)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_path_array::~function_path_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10485, decl_uid=239710, cgraph_uid=7117, symbol_order=7910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ()
{
  bool D.256049;

  <bb 2> :
  D.256049 = 1;

  <bb 3> :
<L0>:
  return D.256049;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10222, decl_uid=191964, cgraph_uid=6854, symbol_order=7647)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_path_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.256053;
  hashval_t D.256051;

  <bb 2> :
  _1 = &e->m_key;
  D.256053 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_1);
  D.256051 = D.256053;

  <bb 3> :
<L0>:
  return D.256051;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10221, decl_uid=192134, cgraph_uid=6853, symbol_order=7646)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.256066;
  bool D.256065;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1937;
  struct value_type * D.256057;
  bool retval.1936;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.256065 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1936 = D.256065;
  if (retval.1936 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256057 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.256066 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1937 = D.256066;
  if (retval.1937 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.256057 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.256057;

}



;; Function std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10223, decl_uid=236529, cgraph_uid=6855, symbol_order=7648)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.256067;

  <bb 2> :
  D.256067 = __t;

  <bb 3> :
<L0>:
  return D.256067;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9647, decl_uid=236554, cgraph_uid=6278, symbol_order=7067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236556)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236556->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236556->m_value;
  function_path_array::function_path_array (_2, _3);
  return;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2EOS_, funcdef_no=9645, decl_uid=192256, cgraph_uid=6275, symbol_order=7064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, struct function_path_array & D.192258)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192258->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192258->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9643, decl_uid=174514, cgraph_uid=6272, symbol_order=7061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this, struct vector & D.174516)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174557;
  _2 = &D.174516->D.174557;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9641, decl_uid=173982, cgraph_uid=6269, symbol_order=7058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.173984)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.173984->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10225, decl_uid=173888, cgraph_uid=6857, symbol_order=7650)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  std::allocator<function_path>::allocator (this, _1);
  _2 = &this->D.173902;
  _3 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  _4 = &_3->D.173902;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI13function_pathSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10654, decl_uid=241503, cgraph_uid=7286, symbol_order=8079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.256069;

  <bb 2> :
  D.256069 = __t;

  <bb 3> :
<L0>:
  return D.256069;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10656, decl_uid=173844, cgraph_uid=7288, symbol_order=8081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8924, decl_uid=216850, cgraph_uid=5556, symbol_order=6345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9649, decl_uid=192152, cgraph_uid=6281, symbol_order=7070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10227, decl_uid=191976, cgraph_uid=6859, symbol_order=7652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10658, decl_uid=241518, cgraph_uid=7290, symbol_order=8083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_path_array::operator= (_ZN19function_path_arrayaSERKS_, funcdef_no=7826, decl_uid=214911, cgraph_uid=4457, symbol_order=5242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path_array & function_path_array::operator= (struct function_path_array * const this, const struct function_path_array & D.214912)
{
  struct function_path_array & D.256072;

  <bb 2> :
  _1 = D.214912->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &D.214912->function_path_array;
  _3 = &this->function_path_array;
  std::vector<function_path>::operator= (_3, _2);
  D.256072 = this;

  <bb 3> :
<L0>:
  return D.256072;

}



;; Function symbolicinfo::~symbolicinfo (_ZN12symbolicinfoD2Ev, funcdef_no=6823, decl_uid=202215, cgraph_uid=3454, symbol_order=4231)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::~symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::~vector (_1);
  _2 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_2);
  _3 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_3);
  _4 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_4);
  *this = {CLOBBER};
  return;

}



;; Function PointerConstraint (_Z17PointerConstraintP3ptbS0_, funcdef_no=6825, decl_uid=202256, cgraph_uid=3457, symbol_order=4234)

Removing basic block 23
Removing basic block 33
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Merging blocks 78 and 81
Removing basic block 83
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117
;;
;; Loop 1
;;  header 71, multiple latches: 69 70
;;  depth 1, outer 0
;;  nodes: 71 69 70 12 53 62 61 60 59 57 58 56 54 55 52 51 50 49 33 48 18 47 34 42 46 45 35 32 23 31 30 28 29 25 27 26 24 19 22 21 20 44 43 40 41 37 39 38 36 16 17 15 14 13 11 67 66 65 64 63
;;
;; Loop 3
;;  header 59, latch 58
;;  depth 2, outer 1
;;  nodes: 59 58
;;
;; Loop 2
;;  header 56, latch 55
;;  depth 2, outer 1
;;  nodes: 56 55
;; 2 succs { 117 3 }
;; 3 succs { 117 4 }
;; 4 succs { 117 5 }
;; 5 succs { 117 6 }
;; 6 succs { 117 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 93 }
;; 9 succs { 10 72 }
;; 10 succs { 71 }
;; 11 succs { 12 13 }
;; 12 succs { 70 }
;; 13 succs { 14 48 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 49 }
;; 19 succs { 20 23 }
;; 20 succs { 116 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 32 }
;; 24 succs { 116 25 }
;; 25 succs { 26 29 }
;; 26 succs { 116 27 }
;; 27 succs { 28 29 }
;; 28 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 33 49 }
;; 33 succs { 34 49 }
;; 34 succs { 35 49 }
;; 35 succs { 36 49 }
;; 36 succs { 116 37 }
;; 37 succs { 38 41 }
;; 38 succs { 116 39 }
;; 39 succs { 40 41 }
;; 40 succs { 42 }
;; 41 succs { 42 }
;; 42 succs { 43 49 }
;; 43 succs { 116 44 }
;; 44 succs { 116 45 }
;; 45 succs { 46 49 }
;; 46 succs { 47 49 }
;; 47 succs { 116 49 }
;; 48 succs { 116 49 }
;; 49 succs { 116 50 }
;; 50 succs { 116 51 }
;; 51 succs { 116 52 }
;; 52 succs { 53 54 }
;; 53 succs { 70 }
;; 54 succs { 56 }
;; 55 succs { 56 }
;; 56 succs { 55 57 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 58 60 }
;; 60 succs { 116 61 }
;; 61 succs { 62 63 }
;; 62 succs { 70 }
;; 63 succs { 116 64 }
;; 64 succs { 116 65 }
;; 65 succs { 116 66 }
;; 66 succs { 116 67 }
;; 67 succs { 68 69 }
;; 68 succs { 72 }
;; 69 succs { 71 }
;; 70 succs { 71 }
;; 71 succs { 11 72 }
;; 72 succs { 117 73 }
;; 73 succs { 117 74 }
;; 74 succs { 117 75 }
;; 75 succs { 117 76 }
;; 76 succs { 117 77 }
;; 77 succs { 117 78 }
;; 78 succs { 117 79 }
;; 79 succs { 117 80 }
;; 80 succs { 117 81 }
;; 81 succs { 117 82 }
;; 82 succs { 117 83 }
;; 83 succs { 117 84 }
;; 84 succs { 117 85 }
;; 85 succs { 117 86 }
;; 86 succs { 117 87 }
;; 87 succs { 117 88 }
;; 88 succs { 117 89 }
;; 89 succs { 117 90 }
;; 90 succs { 117 91 }
;; 91 succs { 117 92 }
;; 92 succs { 94 }
;; 93 succs { 117 94 }
;; 94 succs { 117 95 }
;; 95 succs { 117 96 }
;; 96 succs { 117 97 }
;; 97 succs { 117 98 }
;; 98 succs { 117 99 }
;; 99 succs { 117 100 }
;; 100 succs { 117 101 }
;; 101 succs { 117 102 }
;; 102 succs { 117 103 }
;; 103 succs { 117 104 }
;; 104 succs { 117 105 }
;; 105 succs { 117 106 }
;; 106 succs { 117 107 }
;; 107 succs { 117 108 }
;; 108 succs { 117 109 }
;; 109 succs { 117 110 }
;; 110 succs { 117 111 }
;; 111 succs { 117 112 }
;; 112 succs { 117 113 }
;; 113 succs { 117 114 }
;; 114 succs { 117 115 }
;; 115 succs { 1 }
;; 116 succs { 117 }
;; 117 succs { }
void PointerConstraint (struct ptb * ptable, struct ptb * ftable)
{
  struct gimple_array * D.256161;
  const char * D.256160;
  const char * D.256159;
  union tree_node * D.256158;
  union tree_node * D.256157;
  union tree_node * D.256156;
  union tree_node * D.256155;
  union tree_node * D.256154;
  union tree_node * D.256153;
  int pass;
  struct gimple * def_stmt;
  const char * name;
  struct gimple_array start;
  int colectCount;
  int count;
  struct tm * timeinfo;
  time_t rawtime;
  struct ptb * processtable;
  int Entrypoint;
  double time_used2;
  double time_used;
  struct timespec temp;
  struct cgraph_node * node;
  struct gimple_array start;
  struct gimple_array * used_stmt;
  struct timespec aend;
  struct timespec astart;
  bool retval.1958;
  bool retval.1957;
  bool retval.1956;
  bool retval.1955;
  bool iftmp.1954;
  bool retval.1953;
  bool retval.1952;
  bool iftmp.1951;
  bool retval.1950;
  bool retval.1949;
  bool retval.1948;
  bool retval.1947;
  bool iftmp.1946;
  bool retval.1945;

  <bb 2> :
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  clock_gettime (1, &astart);
  Entrypoint = 0;
  stderr.1938_1 = stderr;
  __builtin_fwrite ("start PointerConstraint\n", 1, 24, stderr.1938_1);

  <bb 3> :
  pointtablecount.1939_2 = pointtablecount;
  stderr.1940_3 = stderr;
  fprintf (stderr.1940_3, "ptable point %d \n", pointtablecount.1939_2);

  <bb 4> :
  stderr.1941_4 = stderr;
  __builtin_fwrite ("===============The second stage : Mapping stmt=================\n", 1, 64, stderr.1941_4);

  <bb 5> :
  FunctionStmtMappingAssign (ptable, used_stmt);

  <bb 6> :
  processtable = ptable;
  stderr.1942_5 = stderr;
  __builtin_fwrite ("===============The second stage : Program slicing=================\n", 1, 67, stderr.1942_5);

  <bb 7> :
  GIMPLE_FREE_COUNT.1943_6 = GIMPLE_FREE_COUNT;
  if (GIMPLE_FREE_COUNT.1943_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  freeanysis.1944_7 = freeanysis;
  if (freeanysis.1944_7 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 9> :
  _8 = processtable->size;
  if (_8 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 10> :
  count = 0;
  goto <bb 71>; [INV]

  <bb 11> :
  _9 = processtable->target;
  _10 = _9->base.code;
  if (_10 == 26)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 70>; [INV]

  <bb 13> :
  colectCount = 0;
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  _11 = processtable->target;
  _12 = _11->base.code;
  if (_12 == 153)
    goto <bb 14>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 14> :
  _13 = processtable->target;
  def_stmt = _13->ssa_name.def_stmt;
  levelsize = 0;
  _14 = gimple_code (def_stmt);
  if (_14 != 20)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _15 = gimple_code (def_stmt);
  if (_15 != 131)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1946 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1946 = 0;

  <bb 18> :
  retval.1945 = iftmp.1946;
  if (retval.1945 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 19> :
  pass = 0;
  _16 = gimple_code (def_stmt);
  retval.1947 = _16 == 8;
  if (retval.1947 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  D.256153 = gimple_call_fn (def_stmt);

  <bb 21> :
  _17 = D.256153;
  _18 = _17->base.code;
  retval.1948 = _18 != 165;
  if (retval.1948 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  pass = 1;

  <bb 23> :
  _19 = gimple_code (def_stmt);
  retval.1949 = _19 == 6;
  if (retval.1949 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 24> :
  D.256154 = gimple_assign_rhs1 (def_stmt);

  <bb 25> :
  _20 = D.256154;
  _21 = _20->base.code;
  if (_21 != 165)
    goto <bb 26>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 26> :
  D.256155 = gimple_assign_rhs1 (def_stmt);

  <bb 27> :
  _22 = D.256155;
  _23 = _22->base.code;
  if (_23 != 36)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  iftmp.1951 = 1;
  goto <bb 30>; [INV]

  <bb 29> :
  iftmp.1951 = 0;

  <bb 30> :
  retval.1950 = iftmp.1951;
  if (retval.1950 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  pass = 1;

  <bb 32> :
  _24 = processtable->target;
  _25 = _24->base.code;
  if (_25 != 131)
    goto <bb 33>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 33> :
  if (pass == 1)
    goto <bb 34>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 34> :
  if (def_stmt != 0B)
    goto <bb 35>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 35> :
  _26 = gimple_code (def_stmt);
  retval.1952 = _26 == 8;
  if (retval.1952 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 36> :
  D.256156 = gimple_call_fn (def_stmt);

  <bb 37> :
  _27 = D.256156;
  if (_27 != 0B)
    goto <bb 38>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 38> :
  D.256157 = gimple_call_fndecl (def_stmt);

  <bb 39> :
  _28 = D.256157;
  if (_28 != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  iftmp.1954 = 1;
  goto <bb 42>; [INV]

  <bb 41> :
  iftmp.1954 = 0;

  <bb 42> :
  retval.1953 = iftmp.1954;
  if (retval.1953 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 43> :
  D.256158 = gimple_call_fn (def_stmt);

  <bb 44> :
  _29 = D.256158;
  D.256159 = get_name (_29);

  <bb 45> :
  name = D.256159;
  if (name != 0B)
    goto <bb 46>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 46> :
  _30 = strcmp (name, "malloc");
  if (_30 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _31 = processtable->target;
  _32 = processtable->target;
  Prenew_search_imm_use (used_stmt, _32, _31);
  goto <bb 49>; [INV]

  <bb 48> :
  _33 = processtable->target;
  _34 = processtable->target;
  _35 = processtable->last_stmt;
  Varnew_search_imm_use (used_stmt, _35, _34, _33);

  <bb 49> :
  _36 = processtable->target;
  now_tree = _36;
  _37 = processtable->target;
  _38 = processtable->target;
  new_search_imm_use (used_stmt, _38, _37);

  <bb 50> :
  _39 = processtable->target;
  _40 = processtable->target;
  _41 = processtable->last_stmt;
  set_gimple_array (used_stmt, _41, _40, _39, 0B);

  <bb 51> :
  _42 = used_stmt->target;
  _43 = _42->base.code;
  _44 = (tree_code) _43;
  D.256160 = get_tree_code_name (_44);

  <bb 52> :
  _45 = D.256160;
  _46 = strcmp (_45, "<invalid tree code>");
  retval.1955 = _46 == 0;
  if (retval.1955 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 70>; [INV]

  <bb 54> :
  goto <bb 56>; [INV]

  <bb 55> :
  colectCount = colectCount + 1;
  std::vector<gimple*>::pop_back (&new_gimple_array);

  <bb 56> :
  _47 = std::vector<gimple*>::size (&new_gimple_array);
  retval.1956 = _47 != 0;
  if (retval.1956 != 0)
    goto <bb 55>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  goto <bb 59>; [INV]

  <bb 58> :
  std::vector<tree_node*>::pop_back (&new_gimpletree_array);

  <bb 59> :
  _48 = std::vector<tree_node*>::size (&new_gimpletree_array);
  retval.1957 = _48 != 0;
  if (retval.1957 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  treeGimpleArray.1959_49 = treeGimpleArray;
  _50 = &processtable->target;
  D.256161 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1959_49, _50);

  <bb 61> :
  _51 = D.256161;
  retval.1958 = _51 != 0B;
  if (retval.1958 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 70>; [INV]

  <bb 63> :
  treeGimpleArray.1960_52 = treeGimpleArray;
  _53 = &processtable->target;
  hash_map<tree_node*, gimple_array>::put (treeGimpleArray.1960_52, _53, used_stmt);

  <bb 64> :
  Entrypoint = Entrypoint + 1;
  stderr.1961_54 = stderr;
  __builtin_fwrite ("=============== *this point analyzable =================\n", 1, 57, stderr.1961_54);

  <bb 65> :
  _55 = processtable->last_stmt;
  debug (_55);

  <bb 66> :
  stderr.1962_56 = stderr;
  __builtin_fwrite ("========================================================\n", 1, 57, stderr.1962_56);

  <bb 67> :
  _57 = processtable->next;
  _58 = _57->target;
  if (_58 == 0B)
    goto <bb 68>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 68> :
  start = {CLOBBER};
  goto <bb 72>; [INV]

  <bb 69> :
  processtable = processtable->next;
  start = {CLOBBER};
  goto <bb 71>; [INV]

  <bb 70> :
  start = {CLOBBER};

  <bb 71> :
  _59 = processtable->next;
  if (_59 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  FunctionStmtMappingRet (ptable, ftable, used_stmt);

  <bb 73> :
  stderr.1963_60 = stderr;
  __builtin_fwrite ("===============The second stage : build fucntion type=================\n", 1, 71, stderr.1963_60);

  <bb 74> :
  stderr.1964_61 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1964_61);

  <bb 75> :
  stderr.1965_62 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1965_62);

  <bb 76> :
  stderr.1966_63 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.1966_63);

  <bb 77> :
  stderr.1967_64 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.1967_64);

  <bb 78> :
  stderr.1968_65 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.1968_65);

  <bb 79> :
  stderr.1969_66 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.1969_66);

  <bb 80> :
  stderr.1970_67 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1970_67);

  <bb 81> :
  stderr.1971_68 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1971_68);

  <bb 82> :
  stderr.1972_69 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1972_69);

  <bb 83> :
  stderr.1973_70 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1973_70);

  <bb 84> :
  stderr.1974_71 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1974_71);

  <bb 85> :
  stderr.1975_72 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1975_72);

  <bb 86> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 87> :
  _73 = temp.tv_sec;
  _74 = (double) _73;
  _75 = temp.tv_nsec;
  _76 = (double) _75;
  _77 = _76 / 1.0e+9;
  time_used = _74 + _77;
  stderr.1976_78 = stderr;
  __builtin_fwrite ("\n=============== The third stage : Start detection  =================\n", 1, 70, stderr.1976_78);

  <bb 88> :
  dump_fucntion (node, ptable, used_stmt);

  <bb 89> :
  stderr.1977_79 = stderr;
  __builtin_fwrite ("\n=============== The third stage : detection  End=================\n", 1, 67, stderr.1977_79);

  <bb 90> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 91> :
  _80 = temp.tv_sec;
  _81 = (double) _80;
  _82 = temp.tv_nsec;
  _83 = (double) _82;
  _84 = _83 / 1.0e+9;
  time_used2 = _81 + _84;
  printfBasicblock ();

  <bb 92> :
  goto <bb 94>; [INV]

  <bb 93> :
  stderr.1978_85 = stderr;
  __builtin_fwrite ("\x1b[40;41m GIMPLE STMT NO FREE STMT\x1b[0m\n", 1, 38, stderr.1978_85);

  <bb 94> :
  time (&rawtime);
  timeinfo = localtime (&rawtime);
  stderr.1979_86 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1979_86);

  <bb 95> :
  stderr.1980_87 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1980_87);

  <bb 96> :
  stderr.1981_88 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.1981_88);

  <bb 97> :
  stderr.1982_89 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.1982_89);

  <bb 98> :
  stderr.1983_90 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.1983_90);

  <bb 99> :
  stderr.1984_91 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.1984_91);

  <bb 100> :
  stderr.1985_92 = stderr;
  __builtin_fwrite ("                   \n", 1, 20, stderr.1985_92);

  <bb 101> :
  stderr.1986_93 = stderr;
  __builtin_fwrite ("    ~~~~~~~~~~~  \n", 1, 18, stderr.1986_93);

  <bb 102> :
  stderr.1987_94 = stderr;
  __builtin_fwrite (" ~~~~~~\n", 1, 8, stderr.1987_94);

  <bb 103> :
  stderr.1988_95 = stderr;
  __builtin_fwrite ("           ~~~~~~~\n", 1, 19, stderr.1988_95);

  <bb 104> :
  GIMPLE_MALLOC_COUNT.1989_96 = GIMPLE_MALLOC_COUNT;
  stderr.1990_97 = stderr;
  fprintf (stderr.1990_97, "\x1b[40;34m    gimple malloc count : %d \x1b[0m\n", GIMPLE_MALLOC_COUNT.1989_96);

  <bb 105> :
  GIMPLE_FREE_COUNT.1991_98 = GIMPLE_FREE_COUNT;
  stderr.1992_99 = stderr;
  fprintf (stderr.1992_99, "\x1b[40;34m    gimple free   count : %d \x1b[0m\n", GIMPLE_FREE_COUNT.1991_98);

  <bb 106> :
  pointtablecount.1993_100 = pointtablecount;
  stderr.1994_101 = stderr;
  fprintf (stderr.1994_101, "\x1b[40;34m    all ptable point : %d \x1b[0m\n", pointtablecount.1993_100);

  <bb 107> :
  stderr.1995_102 = stderr;
  fprintf (stderr.1995_102, "\x1b[40;34m    analyzable ptable point : %d \x1b[0m\n", Entrypoint);

  <bb 108> :
  totalsize.1996_103 = totalsize;
  _104 = (double) totalsize.1996_103;
  _105 = _104 * 9.99999999999999954748111825886258685613938723690807819366e-7;
  stderr.1997_106 = stderr;
  fprintf (stderr.1997_106, "\x1b[40;34m    used_stmt array stack totalsize of : %f mb\x1b[0m\n", _105);

  <bb 109> :
  stderr.1998_107 = stderr;
  fprintf (stderr.1998_107, "\x1b[40;34m    collect time: : %f s \x1b[0m\n", time_used);

  <bb 110> :
  stderr.1999_108 = stderr;
  fprintf (stderr.1999_108, "\x1b[40;34m    algorithm time: %f s \x1b[0m\n", time_used2);

  <bb 111> :
  gimplestmt_count.2000_109 = gimplestmt_count;
  stderr.2001_110 = stderr;
  fprintf (stderr.2001_110, "\x1b[40;34m    gimple stmt count : : %d \x1b[0m\n", gimplestmt_count.2000_109);

  <bb 112> :
  _111 = asctime (timeinfo);
  stderr.2002_112 = stderr;
  fprintf (stderr.2002_112, "\x1b[40;34m    this report analysis in %s \x1b[0m\n", _111);

  <bb 113> :
  stderr.2003_113 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2003_113);

  <bb 114> :
  stderr.2004_114 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2004_114);

  <bb 115> :
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  rawtime = {CLOBBER};
  return;

  <bb 116> :
<L77>:
  start = {CLOBBER};
  resx 2

  <bb 117> :
<L78>:
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  rawtime = {CLOBBER};
  resx 1

}



;; Function std::vector<gimple*>::pop_back (_ZNSt6vectorIP6gimpleSaIS1_EE8pop_backEv, funcdef_no=7827, decl_uid=183663, cgraph_uid=4459, symbol_order=5244)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.183973._M_impl.D.183329._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.183973._M_impl.D.183329._M_finish = _2;
  _3 = this->D.183973._M_impl.D.183329._M_finish;
  _4 = &this->D.183973._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_ZNSt16allocator_traitsISaIP6gimpleEE7destroyIS1_EEvRS2_PT_, funcdef_no=8791, decl_uid=214919, cgraph_uid=5423, symbol_order=6212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (struct allocator_type & __a, struct gimple * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE7destroyIS2_EEvPT_, funcdef_no=9650, decl_uid=228342, cgraph_uid=6282, symbol_order=7071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (struct new_allocator * const this, struct gimple * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::put (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7828, decl_uid=190065, cgraph_uid=4460, symbol_order=5245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, gimple_array>::put (struct hash_map * const this, union tree_node * const & k, const struct gimple_array & v)
{
  bool D.256174;
  struct hash_entry * D.256173;
  unsigned int D.256172;
  bool ins;
  struct hash_entry * e;
  bool D.256170;
  void * D.215059;
  void * D.215058;

  <bb 2> :
  _1 = &this->m_table;
  D.256172 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.256172;
  D.256173 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.256173;
  D.256174 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (e);
  ins = D.256174;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.215058 = &e->m_value;
  D.215059 = operator new (48, D.215058);
  MEM[(struct gimple_array *)D.215059] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.256170 = ~ins;

  <bb 6> :
<L3>:
  return D.256170;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8792, decl_uid=190220, cgraph_uid=5424, symbol_order=6213)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.256224;
  bool D.256223;
  bool D.256222;
  bool D.256221;
  bool D.256220;
  bool D.256219;
  struct value_type * D.256218;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2010;
  bool retval.2009;
  bool retval.2008;
  bool retval.2007;
  bool retval.2006;
  bool retval.2005;
  struct value_type * D.256180;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.256219 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2005 = D.256219;
  if (retval.2005 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.256220 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2006 = D.256220;
  if (retval.2006 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.256221 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.2007 = D.256221;
  if (retval.2007 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.256180 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.256222 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2008 = D.256222;
  if (retval.2008 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.256223 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2009 = D.256223;
  if (retval.2009 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.256224 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.2010 = D.256224;
  if (retval.2010 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.256180 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.256180 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.256180 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.256180 = _37 + _39;

  <bb 27> :
<L37>:
  return D.256180;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9651, decl_uid=190301, cgraph_uid=6283, symbol_order=7072)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.256255;
  unsigned int D.256254;
  bool D.256253;
  bool D.256252;
  struct mem_alloc_description & D.256251;
  struct value_type * D.256250;
  unsigned int D.256249;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236597;
  void * D.236596;
  struct hash_entry * D.236622;
  bool iftmp.2014;
  bool retval.2013;
  bool iftmp.2012;
  bool retval.2011;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2012 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2012 = 0;

  <bb 6> :
  retval.2011 = iftmp.2012;
  if (retval.2011 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.256249 = hash_table_higher_prime_index (_5);
  nindex = D.256249;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.256250 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.256250;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.256252 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.256252;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.256253 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.256253;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2014 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2014 = 0;

  <bb 15> :
  retval.2013 = iftmp.2014;
  if (retval.2013 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.256254 = hash_map<tree_node*, gimple_array>::hash_entry::hash (x);
  _16 = D.256254;
  D.256255 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.256255;
  D.236622 = std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (x);
  D.236596 = q;
  D.236597 = operator new (56, D.236596);
  MEM[(struct value_type *)D.236597] = *D.236622;

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10228, decl_uid=190196, cgraph_uid=6860, symbol_order=7653)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.256256;

  <bb 2> :
  D.256256 = this->m_size;

  <bb 3> :
<L0>:
  return D.256256;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10229, decl_uid=190198, cgraph_uid=6861, symbol_order=7654)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.256258;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.256258 = _1 - _2;

  <bb 3> :
<L0>:
  return D.256258;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10230, decl_uid=190298, cgraph_uid=6862, symbol_order=7655)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2015;
  bool D.256260;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2015 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2015 = 0;

  <bb 6> :
  D.256260 = iftmp.2015;

  <bb 7> :
<L4>:
  return D.256260;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9204, decl_uid=190288, cgraph_uid=5836, symbol_order=6625)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256282;
  struct value_type * D.256281;
  struct mem_alloc_description & D.256280;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256278;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256281 = xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (n);
  nentries = D.256281;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256282 = ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (n);
  nentries = D.256282;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256278 = nentries;

  <bb 9> :
<L14>:
  return D.256278;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9914, decl_uid=216656, cgraph_uid=6546, symbol_order=7339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256285;
  struct hash_entry * D.256283;

  <bb 2> :
  D.256285 = xcalloc (count, 56);
  D.256283 = D.256285;

  <bb 3> :
<L0>:
  return D.256283;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9915, decl_uid=232064, cgraph_uid=6547, symbol_order=7340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.256292;
  struct hash_entry * D.256291;
  struct hash_entry * D.256289;
  bool retval.2016;

  <bb 2> :
  retval.2016 = need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ();
  if (retval.2016 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.256291 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.256289 = D.256291;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.256292 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256289 = D.256292;

  <bb 5> :
<L2>:
  return D.256289;

}



;; Function finalize<hash_map<tree_node*, gimple_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10447, decl_uid=239438, cgraph_uid=7079, symbol_order=7872)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, gimple_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10446, decl_uid=239437, cgraph_uid=7078, symbol_order=7871)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ()
{
  bool D.256293;

  <bb 2> :
  D.256293 = 0;

  <bb 3> :
<L0>:
  return D.256293;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10232, decl_uid=190124, cgraph_uid=6864, symbol_order=7657)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, gimple_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.256297;
  hashval_t D.256295;

  <bb 2> :
  _1 = &e->m_key;
  D.256297 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_1);
  D.256295 = D.256297;

  <bb 3> :
<L0>:
  return D.256295;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10231, decl_uid=190291, cgraph_uid=6863, symbol_order=7656)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.256310;
  bool D.256309;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2018;
  struct value_type * D.256301;
  bool retval.2017;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.256309 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2017 = D.256309;
  if (retval.2017 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256301 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.256310 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2018 = D.256310;
  if (retval.2018 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.256301 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.256301;

}



;; Function std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10233, decl_uid=236594, cgraph_uid=6865, symbol_order=7658)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.256311;

  <bb 2> :
  D.256311 = __t;

  <bb 3> :
<L0>:
  return D.256311;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8892, decl_uid=216658, cgraph_uid=5524, symbol_order=6313)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9652, decl_uid=190309, cgraph_uid=6284, symbol_order=7073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10234, decl_uid=190136, cgraph_uid=6866, symbol_order=7659)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10659, decl_uid=241541, cgraph_uid=7291, symbol_order=8084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function detect (_Z6detectv, funcdef_no=6826, decl_uid=202297, cgraph_uid=3533, symbol_order=4310)

Removing basic block 48
Merging blocks 49 and 51
Removing basic block 84
Removing basic block 87
Removing basic block 90
Removing basic block 105
Removing basic block 143
Merging blocks 147 and 149
Removing basic block 152
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 2
;;  header 95, latch 94
;;  depth 1, outer 0
;;  nodes: 95 94 93 91 92 59 65 64 63 62 61 60 58 57 56 55 90 89 68 88 87 79 86 84 85 82 83 80 81 78 69 77 76 75 71 74 73 72 70 67 66
;;
;; Loop 3
;;  header 89, latch 88
;;  depth 2, outer 2
;;  nodes: 89 88 87 79 86 84 85 82 83 80 81 78 69 77 76 75 71 74 73 72 70
;;
;; Loop 5
;;  header 87, latch 86
;;  depth 3, outer 3
;;  nodes: 87 86 84 85 82 83 80 81
;;
;; Loop 4
;;  header 75, latch 74
;;  depth 3, outer 3
;;  nodes: 75 74 73 72 76
;;
;; Loop 1
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38 37 36 42 41 40
;; 2 succs { 169 3 }
;; 3 succs { 147 4 }
;; 4 succs { 169 5 }
;; 5 succs { 148 6 }
;; 6 succs { 169 7 }
;; 7 succs { 149 8 }
;; 8 succs { 169 9 }
;; 9 succs { 150 10 }
;; 10 succs { 169 11 }
;; 11 succs { 151 12 }
;; 12 succs { 169 13 }
;; 13 succs { 152 14 }
;; 14 succs { 169 15 }
;; 15 succs { 153 16 }
;; 16 succs { 169 17 }
;; 17 succs { 154 18 }
;; 18 succs { 169 19 }
;; 19 succs { 155 20 }
;; 20 succs { 169 21 }
;; 21 succs { 156 22 }
;; 22 succs { 169 23 }
;; 23 succs { 157 24 }
;; 24 succs { 169 25 }
;; 25 succs { 158 26 }
;; 26 succs { 169 27 }
;; 27 succs { 159 28 }
;; 28 succs { 29 50 }
;; 29 succs { 163 30 }
;; 30 succs { 162 31 }
;; 31 succs { 162 32 }
;; 32 succs { 33 35 }
;; 33 succs { 162 34 }
;; 34 succs { 46 }
;; 35 succs { 39 }
;; 36 succs { 160 37 }
;; 37 succs { 160 38 }
;; 38 succs { 160 39 }
;; 39 succs { 160 40 }
;; 40 succs { 160 41 }
;; 41 succs { 160 42 }
;; 42 succs { 36 43 }
;; 43 succs { 160 44 }
;; 44 succs { 162 45 }
;; 45 succs { 46 }
;; 46 succs { 49 47 }
;; 47 succs { 48 }
;; 48 succs { 50 }
;; 49 succs { 139 }
;; 50 succs { 169 51 }
;; 51 succs { 169 52 }
;; 52 succs { 169 53 }
;; 53 succs { 169 54 }
;; 54 succs { 95 }
;; 55 succs { 167 56 }
;; 56 succs { 167 57 }
;; 57 succs { 167 58 }
;; 58 succs { 59 60 }
;; 59 succs { 92 }
;; 60 succs { 167 61 }
;; 61 succs { 167 62 }
;; 62 succs { 63 66 }
;; 63 succs { 167 64 }
;; 64 succs { 167 65 }
;; 65 succs { 92 }
;; 66 succs { 167 67 }
;; 67 succs { 166 68 }
;; 68 succs { 89 }
;; 69 succs { 70 78 }
;; 70 succs { 164 71 }
;; 71 succs { 75 }
;; 72 succs { 164 73 }
;; 73 succs { 164 74 }
;; 74 succs { 164 75 }
;; 75 succs { 164 76 }
;; 76 succs { 72 77 }
;; 77 succs { 78 }
;; 78 succs { 166 79 }
;; 79 succs { 87 }
;; 80 succs { 81 82 }
;; 81 succs { 165 82 }
;; 82 succs { 83 84 }
;; 83 succs { 165 84 }
;; 84 succs { 85 86 }
;; 85 succs { 165 86 }
;; 86 succs { 87 }
;; 87 succs { 80 88 }
;; 88 succs { 89 }
;; 89 succs { 69 90 }
;; 90 succs { 166 91 }
;; 91 succs { 93 }
;; 92 succs { 93 }
;; 93 succs { 169 94 }
;; 94 succs { 95 }
;; 95 succs { 55 96 }
;; 96 succs { 169 97 }
;; 97 succs { 169 98 }
;; 98 succs { 99 100 }
;; 99 succs { 169 100 }
;; 100 succs { 101 102 }
;; 101 succs { 102 }
;; 102 succs { 103 104 }
;; 103 succs { 104 }
;; 104 succs { 105 106 }
;; 105 succs { 106 }
;; 106 succs { 107 108 }
;; 107 succs { 108 }
;; 108 succs { 109 110 }
;; 109 succs { 110 }
;; 110 succs { 111 112 }
;; 111 succs { 112 }
;; 112 succs { 113 114 }
;; 113 succs { 114 }
;; 114 succs { 115 116 }
;; 115 succs { 116 }
;; 116 succs { 117 118 }
;; 117 succs { 118 }
;; 118 succs { 119 120 }
;; 119 succs { 120 }
;; 120 succs { 121 122 }
;; 121 succs { 122 }
;; 122 succs { 123 124 }
;; 123 succs { 124 }
;; 124 succs { 125 126 }
;; 125 succs { 126 }
;; 126 succs { 169 127 }
;; 127 succs { 169 128 }
;; 128 succs { 168 129 }
;; 129 succs { 130 137 }
;; 130 succs { 168 131 }
;; 131 succs { 168 132 }
;; 132 succs { 168 133 }
;; 133 succs { 168 134 }
;; 134 succs { 168 135 }
;; 135 succs { 168 136 }
;; 136 succs { 168 138 }
;; 137 succs { 168 138 }
;; 138 succs { 139 }
;; 139 succs { 141 140 }
;; 140 succs { 142 }
;; 141 succs { 142 }
;; 142 succs { 145 143 }
;; 143 succs { 144 }
;; 144 succs { 146 }
;; 145 succs { 146 }
;; 146 succs { 1 }
;; 147 succs { 169 }
;; 148 succs { 169 }
;; 149 succs { 169 }
;; 150 succs { 169 }
;; 151 succs { 169 }
;; 152 succs { 169 }
;; 153 succs { 169 }
;; 154 succs { 169 }
;; 155 succs { 169 }
;; 156 succs { 169 }
;; 157 succs { 169 }
;; 158 succs { 169 }
;; 159 succs { 169 }
;; 160 succs { 161 }
;; 161 succs { 162 }
;; 162 succs { 163 }
;; 163 succs { 169 }
;; 164 succs { 166 }
;; 165 succs { 166 }
;; 166 succs { 167 }
;; 167 succs { 169 }
;; 168 succs { 169 }
;; 169 succs { 170 }
;; 170 succs { 171 }
;; 171 succs { }
void detect ()
{
  int finally_tmp.2075;
  int finally_tmp.2074;
  struct __ostream_type & D.256461;
  struct basic_ostream & D.256460;
  struct __ostream_type & D.256459;
  struct basic_ostream & D.256458;
  bool D.256457;
  struct cgraph_node * D.256456;
  bool D.256449;
  struct function * D.256448;
  bool D.256447;
  const char * D.256446;
  struct cgraph_node * D.256445;
  int finally_tmp.2073;
  bool D.256433;
  struct __istream_type & D.256432;
  struct basic_istream & D.256431;
  bool D.256430;
  void * D.256428;
  void * D.256426;
  void * D.256424;
  void * D.256422;
  void * D.256420;
  void * D.256418;
  void * D.256416;
  void * D.256414;
  void * D.256412;
  void * D.256410;
  void * D.256408;
  void * D.256406;
  void * D.256404;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct edge_iterator ei;
  struct edge_def * e;
  struct Graph DFS;
  int score;
  struct string name;
  struct ifstream ifs;
  struct ofstream myfile;
  struct timevar_time_def now;
  double time_used;
  struct timespec temp;
  struct timespec end;
  struct timespec start;
  double s;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  struct function * fn;
  struct function * ofun;
  union tree_node * attr;
  union tree_node * ptr;
  struct breakpoint getbp;
  unsigned int i;
  const int N;
  struct var_points_to vpt;
  struct cgraph_node * node;
  struct timeval stime;
  struct timeval utime;
  struct rusage ru;
  bool retval.2072;
  struct hash_map * function_relate_collect.2071;
  struct hash_map * function_graph_collect.2070;
  struct hash_map * function_free_collect.2069;
  struct hash_map * function_path_collect.2068;
  struct hash_map * function_pthread_exit_collect.2067;
  struct hash_map * function_pthread_detched_collect.2066;
  struct hash_map * pthread_attr_setdetachstates.2065;
  struct hash_map * function_assign_collect.2064;
  struct hash_map * function_return_collect.2063;
  struct hash_map * fDFS.2062;
  struct hash_map * syminfo.2061;
  struct hash_map * treeGimpleArray.2060;
  struct hash_map * tvpt.2059;
  bool retval.2049;
  bool retval.2047;
  bool retval.2045;
  bool retval.2043;
  bool retval.2041;
  bool retval.2030;
  struct __istream_type & D.256320;
  bool retval.2024;
  bool retval.2021;
  void * D.203919;
  void * D.203918;
  void * D.203547;
  void * D.203546;
  void * D.203545;
  void * D.203544;
  void * D.203543;
  void * D.203542;
  void * D.203541;
  void * D.203540;
  void * D.203119;
  void * D.203118;
  void * D.203117;

  <bb 2> :
  var_points_to::var_points_to (&vpt);
  N = 100;
  breakpoint::breakpoint (&getbp);
  ipa = 1;
  D.256404 = operator new (48);

  <bb 3> :
  D.203117 = D.256404;
  hash_map<tree_node*, var_points_to>::hash_map (D.203117, 13, 0, 1, 0);

  <bb 4> :
  tvpt = D.203117;
  D.256406 = operator new (48);

  <bb 5> :
  D.203118 = D.256406;
  hash_map<tree_node*, gimple_array>::hash_map (D.203118, 13, 0, 1, 0);

  <bb 6> :
  treeGimpleArray = D.203118;
  D.256408 = operator new (48);

  <bb 7> :
  D.203119 = D.256408;
  hash_map<basic_block_def*, symbolicinfo>::hash_map (D.203119, 13, 0, 1, 0);

  <bb 8> :
  syminfo = D.203119;
  D.256410 = operator new (48);

  <bb 9> :
  D.203540 = D.256410;
  hash_map<cgraph_node*, Graph>::hash_map (D.203540, 13, 0, 1, 0);

  <bb 10> :
  fDFS = D.203540;
  D.256412 = operator new (48);

  <bb 11> :
  D.203541 = D.256412;
  hash_map<tree_node*, function_return_array>::hash_map (D.203541, 13, 0, 1, 0);

  <bb 12> :
  function_return_collect = D.203541;
  D.256414 = operator new (48);

  <bb 13> :
  D.203542 = D.256414;
  hash_map<tree_node*, function_assign_array>::hash_map (D.203542, 13, 0, 1, 0);

  <bb 14> :
  function_assign_collect = D.203542;
  D.256416 = operator new (48);

  <bb 15> :
  D.203543 = D.256416;
  hash_map<tree_node*, pthread_attr_array>::hash_map (D.203543, 13, 0, 1, 0);

  <bb 16> :
  pthread_attr_setdetachstates = D.203543;
  D.256418 = operator new (48);

  <bb 17> :
  D.203544 = D.256418;
  hash_map<tree_node*, function_pthread_detched_array>::hash_map (D.203544, 13, 0, 1, 0);

  <bb 18> :
  function_pthread_detched_collect = D.203544;
  D.256420 = operator new (48);

  <bb 19> :
  D.203545 = D.256420;
  hash_map<tree_node*, function_pthread_exit_array>::hash_map (D.203545, 13, 0, 1, 0);

  <bb 20> :
  function_pthread_exit_collect = D.203545;
  D.256422 = operator new (48);

  <bb 21> :
  D.203546 = D.256422;
  hash_map<tree_node*, function_path_array>::hash_map (D.203546, 13, 0, 1, 0);

  <bb 22> :
  function_path_collect = D.203546;
  D.256424 = operator new (48);

  <bb 23> :
  D.203547 = D.256424;
  hash_map<tree_node*, function_free_array>::hash_map (D.203547, 13, 0, 1, 0);

  <bb 24> :
  function_free_collect = D.203547;
  D.256426 = operator new (48);

  <bb 25> :
  D.203918 = D.256426;
  hash_map<tree_node*, function_graph_array>::hash_map (D.203918, 13, 0, 1, 0);

  <bb 26> :
  function_graph_collect = D.203918;
  D.256428 = operator new (48);

  <bb 27> :
  D.203919 = D.256428;
  hash_map<tree_node*, function_relate_array>::hash_map (D.203919, 13, 0, 1, 0);

  <bb 28> :
  function_relate_collect = D.203919;
  vscode_extensionmod.2019_1 = vscode_extensionmod;
  if (vscode_extensionmod.2019_1 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 29> :
  std::basic_ifstream<char>::basic_ifstream (&ifs, "/root/.vscode-server/data/User/globalStorage/vscode-samples.helloworld-sample/breakpoint.txt", 8);

  <bb 30> :
  stderr.2020_2 = stderr;
  __builtin_fwrite ("==============breakpoint=========\n", 1, 34, stderr.2020_2);

  <bb 31> :
  D.256430 = std::basic_ifstream<char>::is_open (&ifs);

  <bb 32> :
  _3 = D.256430;
  retval.2021 = ~_3;
  if (retval.2021 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 33> :
  std::operator<< <std::char_traits<char> > (&cout, "Failed to open file.\n");

  <bb 34> :
  // predicted unlikely by early return (on trees) predictor.
  finally_tmp.2073 = 0;
  goto <bb 46>; [INV]

  <bb 35> :
  std::__cxx11::basic_string<char>::basic_string (&name);
  goto <bb 39>; [INV]

  <bb 36> :
  std::__cxx11::basic_string<char>::operator= (&getbp.name, &name);

  <bb 37> :
  score.2022_4 = score;
  getbp.line = score.2022_4;
  _5 = getbp.line;
  _6 = std::__cxx11::basic_string<char>::c_str (&getbp.name);
  stderr.2023_7 = stderr;
  fprintf (stderr.2023_7, "%s %d\n", _6, _5);

  <bb 38> :
  std::vector<breakpoint>::push_back (&vbreakpoint, &getbp);

  <bb 39> :
  D.256431 = std::operator>><char, std::char_traits<char>, std::allocator<char> > (&ifs.D.155214, &name);

  <bb 40> :
  _8 = D.256431;
  D.256432 = std::basic_istream<char>::operator>> (_8, &score);

  <bb 41> :
  D.256320 = D.256432;
  _9 = D.256320->_vptr.basic_istream;
  _10 = _9 + 18446744073709551592;
  _11 = MEM[(long int *)_10];
  _12 = (sizetype) _11;
  _13 = D.256320 + _12;
  D.256433 = std::basic_ios<char>::operator bool (_13);

  <bb 42> :
  retval.2024 = D.256433;
  if (retval.2024 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  std::basic_ifstream<char>::close (&ifs);

  <bb 44> :
  std::__cxx11::basic_string<char>::~basic_string (&name);
  name = {CLOBBER};
  score = {CLOBBER};
  std::basic_ifstream<char>::close (&ifs);

  <bb 45> :
  finally_tmp.2073 = 1;

  <bb 46> :
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  if (finally_tmp.2073 == 1)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
<L7>:

  <bb 48> :
  ifs = {CLOBBER};
  goto <bb 50>; [INV]

  <bb 49> :
  ifs = {CLOBBER};
  finally_tmp.2074 = 0;
  goto <bb 139>; [INV]

  <bb 50> :
  _14 = time (0B);
  _15 = (unsigned int) _14;
  _16 = getpid ();
  _17 = (unsigned int) _16;
  _18 = _15 + _17;
  srand (_18);
  stderr.2025_19 = stderr;
  __builtin_fwrite ("=======ipa_pta=========\n", 1, 24, stderr.2025_19);

  <bb 51> :
  init_table ();

  <bb 52> :
  s = 0.0;
  clock_gettime (1, &start);
  getrusage (0, &ru);
  utime = ru.ru_utime;
  stime = ru.ru_stime;
  stderr.2026_20 = stderr;
  __builtin_fwrite ("=============== The first stage : Point of interest stmt collect =================\n", 1, 83, stderr.2026_20);

  <bb 53> :
  symtab.2027_21 = symtab;
  D.256445 = symbol_table::first_defined_function (symtab.2027_21);

  <bb 54> :
  _22 = D.256445;
  node = _22;
  goto <bb 95>; [INV]

  <bb 55> :
  node.2028_23 = node;
  _24 = node.2028_23->D.97512.decl;
  D.256446 = get_name (_24);

  <bb 56> :
  _25 = D.256446;
  stderr.2029_26 = stderr;
  fprintf (stderr.2029_26, "=======node_fun:%s=========\n", _25);

  <bb 57> :
  node.2031_27 = node;
  _28 = node.2031_27->D.97512.decl;
  D.256447 = gimple_has_body_p (_28);

  <bb 58> :
  _29 = D.256447;
  retval.2030 = ~_29;
  if (retval.2030 != 0)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  // predicted unlikely by continue predictor.
  goto <bb 92>; [INV]

  <bb 60> :
  node.2032_30 = node;
  D.256448 = cgraph_node::get_fun (node.2032_30);

  <bb 61> :
  _31 = D.256448;
  push_cfun (_31);

  <bb 62> :
  cfun.2033_32 = cfun;
  if (cfun.2033_32 == 0B)
    goto <bb 63>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 63> :
  pop_cfun ();

  <bb 64> :
  free_dominance_info (1);

  <bb 65> :
  // predicted unlikely by continue predictor.
  goto <bb 92>; [INV]

  <bb 66> :
  calculate_dominance_info (1);

  <bb 67> :
  Graph::Graph (&DFS);
  cfun.2034_33 = cfun;
  _34 = cfun.2034_33->cfg;
  _35 = _34->x_last_basic_block;
  Graph::init_Graph (&DFS, _35);

  <bb 68> :
  cfun.2035_36 = cfun;
  _37 = cfun.2035_36->cfg;
  _38 = _37->x_entry_block_ptr;
  bb = _38->next_bb;
  goto <bb 89>; [INV]

  <bb 69> :
  cfun.2036_39 = cfun;
  _40 = cfun.2036_39->cfg;
  _41 = _40->x_exit_block_ptr;
  _42 = _41->prev_bb;
  if (bb != _42)
    goto <bb 70>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 70> :
  _43 = bb->index;
  stderr.2037_44 = stderr;
  fprintf (stderr.2037_44, "node:= %d \n ", _43);

  <bb 71> :
  _45 = &bb->succs;
  ei = ei_start_1 (_45);
  goto <bb 75>; [INV]

  <bb 72> :
  e.2038_46 = e;
  _47 = e.2038_46->dest;
  _48 = _47->index;
  _49 = bb->index;
  Graph::addEdge (&DFS, _49, _48);

  <bb 73> :
  e.2039_50 = e;
  _51 = e.2039_50->dest;
  _52 = _51->index;
  stderr.2040_53 = stderr;
  fprintf (stderr.2040_53, "\tnext_branch :=%d\n", _52);

  <bb 74> :
  ei_next (&ei);

  <bb 75> :
  D.256449 = ei_cond (ei, &e);

  <bb 76> :
  retval.2041 = D.256449;
  if (retval.2041 != 0)
    goto <bb 72>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 77> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 78> :
  fDFS.2042_54 = fDFS;
  hash_map<cgraph_node*, Graph>::put (fDFS.2042_54, &node, &DFS);

  <bb 79> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 87>; [INV]

  <bb 80> :
  gc = gsi_stmt (gsi);
  retval.2043 = is_gimple_call (gc);
  if (retval.2043 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  node.2044_55 = node;
  collect_function_call (gc, node.2044_55, bb);

  <bb 82> :
  retval.2045 = is_gimple_assign (gc);
  if (retval.2045 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 83> :
  node.2046_56 = node;
  collect_function_call (gc, node.2046_56, bb);

  <bb 84> :
  _57 = gimple_code (gc);
  retval.2047 = _57 == 10;
  if (retval.2047 != 0)
    goto <bb 85>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 85> :
  node.2048_58 = node;
  collect_function_return (gc, node.2048_58, bb);

  <bb 86> :
  gsi_next (&gsi);

  <bb 87> :
  _59 = gsi_end_p (gsi);
  retval.2049 = ~_59;
  if (retval.2049 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 89> :
  cfun.2050_60 = cfun;
  _61 = cfun.2050_60->cfg;
  _62 = _61->x_exit_block_ptr;
  if (bb != _62)
    goto <bb 69>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 90> :
  pop_cfun ();

  <bb 91> :
  Graph::~Graph (&DFS);
  DFS = {CLOBBER};
  goto <bb 93>; [INV]

  <bb 92> :
  DFS = {CLOBBER};

  <bb 93> :
  symtab.2051_63 = symtab;
  node.2052_64 = node;
  D.256456 = symbol_table::next_defined_function (symtab.2051_63, node.2052_64);

  <bb 94> :
  _65 = D.256456;
  node = _65;

  <bb 95> :
  node.2053_66 = node;
  if (node.2053_66 != 0B)
    goto <bb 55>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 96> :
  stderr.2054_67 = stderr;
  __builtin_fwrite ("=============== The first stage :  record fucntion =================\n", 1, 69, stderr.2054_67);

  <bb 97> :
  node.2055_68 = node;
  record_fucntion (node.2055_68);

  <bb 98> :
  ipa.2056_69 = ipa;
  if (ipa.2056_69 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  ftable.2057_70 = ftable;
  ptable.2058_71 = ptable;
  PointerConstraint (ptable.2058_71, ftable.2057_70);

  <bb 100> :
  tvpt.2059 = tvpt;
  if (tvpt.2059 != 0B)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  hash_map<tree_node*, var_points_to>::~hash_map (tvpt.2059);
  operator delete (tvpt.2059, 48);

  <bb 102> :
  treeGimpleArray.2060 = treeGimpleArray;
  if (treeGimpleArray.2060 != 0B)
    goto <bb 103>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 103> :
  hash_map<tree_node*, gimple_array>::~hash_map (treeGimpleArray.2060);
  operator delete (treeGimpleArray.2060, 48);

  <bb 104> :
  syminfo.2061 = syminfo;
  if (syminfo.2061 != 0B)
    goto <bb 105>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 105> :
  hash_map<basic_block_def*, symbolicinfo>::~hash_map (syminfo.2061);
  operator delete (syminfo.2061, 48);

  <bb 106> :
  fDFS.2062 = fDFS;
  if (fDFS.2062 != 0B)
    goto <bb 107>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 107> :
  hash_map<cgraph_node*, Graph>::~hash_map (fDFS.2062);
  operator delete (fDFS.2062, 48);

  <bb 108> :
  function_return_collect.2063 = function_return_collect;
  if (function_return_collect.2063 != 0B)
    goto <bb 109>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 109> :
  hash_map<tree_node*, function_return_array>::~hash_map (function_return_collect.2063);
  operator delete (function_return_collect.2063, 48);

  <bb 110> :
  function_assign_collect.2064 = function_assign_collect;
  if (function_assign_collect.2064 != 0B)
    goto <bb 111>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 111> :
  hash_map<tree_node*, function_assign_array>::~hash_map (function_assign_collect.2064);
  operator delete (function_assign_collect.2064, 48);

  <bb 112> :
  pthread_attr_setdetachstates.2065 = pthread_attr_setdetachstates;
  if (pthread_attr_setdetachstates.2065 != 0B)
    goto <bb 113>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 113> :
  hash_map<tree_node*, pthread_attr_array>::~hash_map (pthread_attr_setdetachstates.2065);
  operator delete (pthread_attr_setdetachstates.2065, 48);

  <bb 114> :
  function_pthread_detched_collect.2066 = function_pthread_detched_collect;
  if (function_pthread_detched_collect.2066 != 0B)
    goto <bb 115>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 115> :
  hash_map<tree_node*, function_pthread_detched_array>::~hash_map (function_pthread_detched_collect.2066);
  operator delete (function_pthread_detched_collect.2066, 48);

  <bb 116> :
  function_pthread_exit_collect.2067 = function_pthread_exit_collect;
  if (function_pthread_exit_collect.2067 != 0B)
    goto <bb 117>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 117> :
  hash_map<tree_node*, function_pthread_exit_array>::~hash_map (function_pthread_exit_collect.2067);
  operator delete (function_pthread_exit_collect.2067, 48);

  <bb 118> :
  function_path_collect.2068 = function_path_collect;
  if (function_path_collect.2068 != 0B)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  hash_map<tree_node*, function_path_array>::~hash_map (function_path_collect.2068);
  operator delete (function_path_collect.2068, 48);

  <bb 120> :
  function_free_collect.2069 = function_free_collect;
  if (function_free_collect.2069 != 0B)
    goto <bb 121>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 121> :
  hash_map<tree_node*, function_free_array>::~hash_map (function_free_collect.2069);
  operator delete (function_free_collect.2069, 48);

  <bb 122> :
  function_graph_collect.2070 = function_graph_collect;
  if (function_graph_collect.2070 != 0B)
    goto <bb 123>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 123> :
  hash_map<tree_node*, function_graph_array>::~hash_map (function_graph_collect.2070);
  operator delete (function_graph_collect.2070, 48);

  <bb 124> :
  function_relate_collect.2071 = function_relate_collect;
  if (function_relate_collect.2071 != 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_relate_collect.2071);
  operator delete (function_relate_collect.2071, 48);

  <bb 126> :
  clock_gettime (1, &end);
  temp = diff (start, end);

  <bb 127> :
  _72 = temp.tv_sec;
  _73 = (double) _72;
  _74 = temp.tv_nsec;
  _75 = (double) _74;
  _76 = _75 / 1.0e+9;
  time_used = _73 + _76;
  std::basic_ofstream<char>::basic_ofstream (&myfile, "time.txt", 16);

  <bb 128> :
  D.256457 = std::basic_ofstream<char>::is_open (&myfile);

  <bb 129> :
  retval.2072 = D.256457;
  if (retval.2072 != 0)
    goto <bb 130>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 130> :
  D.256458 = std::operator<< <std::char_traits<char> > (&myfile.D.155383, "utime_used: ");

  <bb 131> :
  _77 = D.256458;
  D.256459 = std::basic_ostream<char>::operator<< (_77, time_used);

  <bb 132> :
  _78 = D.256459;
  std::operator<< <std::char_traits<char> > (_78, " s;\n");

  <bb 133> :
  D.256460 = std::operator<< <std::char_traits<char> > (&myfile.D.155383, "stime_used: ");

  <bb 134> :
  _79 = D.256460;
  D.256461 = std::basic_ostream<char>::operator<< (_79, time_used);

  <bb 135> :
  _80 = D.256461;
  std::operator<< <std::char_traits<char> > (_80, " s;\n");

  <bb 136> :
  std::basic_ofstream<char>::close (&myfile);
  goto <bb 138>; [INV]

  <bb 137> :
  std::operator<< <std::char_traits<char> > (&cout, "Unable to open file");

  <bb 138> :
  std::basic_ofstream<char>::~basic_ofstream (&myfile);
  finally_tmp.2074 = 1;

  <bb 139> :
  breakpoint::~breakpoint (&getbp);
  if (finally_tmp.2074 == 1)
    goto <bb 140>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 140> :
<L91>:
  finally_tmp.2075 = 1;
  goto <bb 142>; [INV]

  <bb 141> :
<L92>:
  finally_tmp.2075 = 0;

  <bb 142> :
  var_points_to::~var_points_to (&vpt);
  if (finally_tmp.2075 == 1)
    goto <bb 143>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 143> :
<L95>:

  <bb 144> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};
  goto <bb 146>; [INV]

  <bb 145> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};

  <bb 146> :
<L100>:
  return;

  <bb 147> :
<L101>:
  operator delete (D.203117, 48);
  resx 4

  <bb 148> :
<L102>:
  operator delete (D.203118, 48);
  resx 6

  <bb 149> :
<L103>:
  operator delete (D.203119, 48);
  resx 8

  <bb 150> :
<L104>:
  operator delete (D.203540, 48);
  resx 10

  <bb 151> :
<L105>:
  operator delete (D.203541, 48);
  resx 12

  <bb 152> :
<L106>:
  operator delete (D.203542, 48);
  resx 14

  <bb 153> :
<L107>:
  operator delete (D.203543, 48);
  resx 16

  <bb 154> :
<L108>:
  operator delete (D.203544, 48);
  resx 18

  <bb 155> :
<L109>:
  operator delete (D.203545, 48);
  resx 20

  <bb 156> :
<L110>:
  operator delete (D.203546, 48);
  resx 22

  <bb 157> :
<L111>:
  operator delete (D.203547, 48);
  resx 24

  <bb 158> :
<L112>:
  operator delete (D.203918, 48);
  resx 26

  <bb 159> :
<L113>:
  operator delete (D.203919, 48);
  resx 28

  <bb 160> :
<L114>:
  std::__cxx11::basic_string<char>::~basic_string (&name);
  resx 33

  <bb 161> :
<L115>:
  name = {CLOBBER};
  score = {CLOBBER};
  resx 32

  <bb 162> :
<L116>:
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  resx 31

  <bb 163> :
<L117>:
  ifs = {CLOBBER};
  resx 30

  <bb 164> :
<L118>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 40

  <bb 165> :
<L119>:
  gsi = {CLOBBER};
  resx 42

  <bb 166> :
<L120>:
  Graph::~Graph (&DFS);
  resx 39

  <bb 167> :
<L121>:
  DFS = {CLOBBER};
  resx 38

  <bb 168> :
<L122>:
  std::basic_ofstream<char>::~basic_ofstream (&myfile);
  resx 59

  <bb 169> :
<L123>:
  breakpoint::~breakpoint (&getbp);
  resx 3

  <bb 170> :
<L124>:
  var_points_to::~var_points_to (&vpt);
  resx 2

  <bb 171> :
<L125>:
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};
  resx 1

}



;; Function var_points_to::var_points_to (_ZN13var_points_toC2Ev, funcdef_no=6838, decl_uid=202374, cgraph_uid=3469, symbol_order=4246)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_1);
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EEC2Ev, funcdef_no=6836, decl_uid=172411, cgraph_uid=3466, symbol_order=4243)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172419;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EEC2Ev, funcdef_no=6834, decl_uid=171869, cgraph_uid=3463, symbol_order=4240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implC2Ev, funcdef_no=7830, decl_uid=171761, cgraph_uid=4462, symbol_order=5247)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (this);
  _1 = &this->D.171764;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEEC2Ev, funcdef_no=8795, decl_uid=171539, cgraph_uid=5427, symbol_order=6216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEEC2Ev, funcdef_no=9654, decl_uid=171468, cgraph_uid=6286, symbol_order=7075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE17_Vector_impl_dataC2Ev, funcdef_no=8798, decl_uid=171711, cgraph_uid=5430, symbol_order=6219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2Ev, funcdef_no=6845, decl_uid=202566, cgraph_uid=3476, symbol_order=4253)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::basic_string (_1);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7845, decl_uid=203109, cgraph_uid=4477, symbol_order=5262)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8809, decl_uid=203068, cgraph_uid=5441, symbol_order=6230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256479;
  unsigned int D.256478;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256478 = hash_table_higher_prime_index (size);
  size_prime_index = D.256478;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256479 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256479;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9659, decl_uid=203014, cgraph_uid=6291, symbol_order=7080)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256495;
  struct value_type * D.256494;
  struct mem_alloc_description & D.256493;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256491;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256494 = xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (n);
  nentries = D.256494;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256495 = ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (n);
  nentries = D.256495;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256491 = nentries;

  <bb 9> :
<L14>:
  return D.256491;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10237, decl_uid=216632, cgraph_uid=6869, symbol_order=7662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256498;
  struct hash_entry * D.256496;

  <bb 2> :
  D.256498 = xcalloc (count, 40);
  D.256496 = D.256498;

  <bb 3> :
<L0>:
  return D.256496;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10238, decl_uid=236961, cgraph_uid=6870, symbol_order=7663)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (size_t c)
{
  struct hash_entry * D.256505;
  struct hash_entry * D.256504;
  struct hash_entry * D.256502;
  bool retval.2076;

  <bb 2> :
  retval.2076 = need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ();
  if (retval.2076 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.256504 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.256502 = D.256504;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.256505 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256502 = D.256505;

  <bb 5> :
<L2>:
  return D.256502;

}



;; Function finalize<hash_map<tree_node*, var_points_to>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10663, decl_uid=241562, cgraph_uid=7298, symbol_order=8091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, var_points_to>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10665, decl_uid=243904, cgraph_uid=7296, symbol_order=8089)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  var_points_to::~var_points_to (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10662, decl_uid=241561, cgraph_uid=7294, symbol_order=8087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ()
{
  bool D.256506;

  <bb 2> :
  D.256506 = 1;

  <bb 3> :
<L0>:
  return D.256506;

}



;; Function hash_map<tree_node*, gimple_array>::hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7848, decl_uid=190383, cgraph_uid=4480, symbol_order=5265)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8812, decl_uid=190342, cgraph_uid=5444, symbol_order=6233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256509;
  unsigned int D.256508;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256508 = hash_table_higher_prime_index (size);
  size_prime_index = D.256508;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256509 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256509;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7851, decl_uid=196843, cgraph_uid=4483, symbol_order=5268)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8815, decl_uid=196802, cgraph_uid=5447, symbol_order=6236)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256511;
  unsigned int D.256510;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256510 = hash_table_higher_prime_index (size);
  size_prime_index = D.256510;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256511 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256511;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7854, decl_uid=203532, cgraph_uid=4486, symbol_order=5271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8818, decl_uid=203491, cgraph_uid=5450, symbol_order=6239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256513;
  unsigned int D.256512;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256512 = hash_table_higher_prime_index (size);
  size_prime_index = D.256512;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256513 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256513;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9660, decl_uid=203437, cgraph_uid=6292, symbol_order=7081)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256529;
  struct value_type * D.256528;
  struct mem_alloc_description & D.256527;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256525;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256528 = xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (n);
  nentries = D.256528;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256529 = ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (n);
  nentries = D.256529;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256525 = nentries;

  <bb 9> :
<L14>:
  return D.256525;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10240, decl_uid=216704, cgraph_uid=6872, symbol_order=7665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256532;
  struct hash_entry * D.256530;

  <bb 2> :
  D.256532 = xcalloc (count, 56);
  D.256530 = D.256532;

  <bb 3> :
<L0>:
  return D.256530;

}



;; Function ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10241, decl_uid=236972, cgraph_uid=6873, symbol_order=7666)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (size_t c)
{
  struct hash_entry * D.256539;
  struct hash_entry * D.256538;
  struct hash_entry * D.256536;
  bool retval.2077;

  <bb 2> :
  retval.2077 = need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ();
  if (retval.2077 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.256538 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.256536 = D.256538;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.256539 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256536 = D.256539;

  <bb 5> :
<L2>:
  return D.256536;

}



;; Function finalize<hash_map<cgraph_node*, Graph>::hash_entry> (_Z8finalizeIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10669, decl_uid=241571, cgraph_uid=7304, symbol_order=8097)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<cgraph_node*, Graph>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10671, decl_uid=243927, cgraph_uid=7302, symbol_order=8095)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  Graph::~Graph (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10668, decl_uid=241570, cgraph_uid=7300, symbol_order=8093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ()
{
  bool D.256540;

  <bb 2> :
  D.256540 = 1;

  <bb 3> :
<L0>:
  return D.256540;

}



;; Function hash_map<tree_node*, function_return_array>::hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7857, decl_uid=189854, cgraph_uid=4489, symbol_order=5274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8821, decl_uid=189813, cgraph_uid=5453, symbol_order=6242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256543;
  unsigned int D.256542;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256542 = hash_table_higher_prime_index (size);
  size_prime_index = D.256542;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256543 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256543;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7860, decl_uid=191015, cgraph_uid=4492, symbol_order=5277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8824, decl_uid=190974, cgraph_uid=5456, symbol_order=6245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256545;
  unsigned int D.256544;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256544 = hash_table_higher_prime_index (size);
  size_prime_index = D.256544;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256545 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256545;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7863, decl_uid=194954, cgraph_uid=4495, symbol_order=5280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8827, decl_uid=194913, cgraph_uid=5459, symbol_order=6248)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256547;
  unsigned int D.256546;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256546 = hash_table_higher_prime_index (size);
  size_prime_index = D.256546;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256547 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256547;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7866, decl_uid=193580, cgraph_uid=4498, symbol_order=5283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8830, decl_uid=193539, cgraph_uid=5462, symbol_order=6251)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256549;
  unsigned int D.256548;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256548 = hash_table_higher_prime_index (size);
  size_prime_index = D.256548;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256549 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256549;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7869, decl_uid=194056, cgraph_uid=4501, symbol_order=5286)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8833, decl_uid=194015, cgraph_uid=5465, symbol_order=6254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256551;
  unsigned int D.256550;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256550 = hash_table_higher_prime_index (size);
  size_prime_index = D.256550;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256551 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256551;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7872, decl_uid=192226, cgraph_uid=4504, symbol_order=5289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8836, decl_uid=192185, cgraph_uid=5468, symbol_order=6257)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256553;
  unsigned int D.256552;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256552 = hash_table_higher_prime_index (size);
  size_prime_index = D.256552;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256553 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256553;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7875, decl_uid=192708, cgraph_uid=4507, symbol_order=5292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8839, decl_uid=192667, cgraph_uid=5471, symbol_order=6260)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256555;
  unsigned int D.256554;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256554 = hash_table_higher_prime_index (size);
  size_prime_index = D.256554;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256555 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256555;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7878, decl_uid=203910, cgraph_uid=4510, symbol_order=5295)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8842, decl_uid=203869, cgraph_uid=5474, symbol_order=6263)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256557;
  unsigned int D.256556;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256556 = hash_table_higher_prime_index (size);
  size_prime_index = D.256556;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256557 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256557;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9661, decl_uid=203815, cgraph_uid=6293, symbol_order=7082)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256573;
  struct value_type * D.256572;
  struct mem_alloc_description & D.256571;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256569;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256572 = xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (n);
  nentries = D.256572;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256573 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (n);
  nentries = D.256573;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256569 = nentries;

  <bb 9> :
<L14>:
  return D.256569;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10242, decl_uid=216896, cgraph_uid=6874, symbol_order=7667)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256576;
  struct hash_entry * D.256574;

  <bb 2> :
  D.256576 = xcalloc (count, 16);
  D.256574 = D.256576;

  <bb 3> :
<L0>:
  return D.256574;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10243, decl_uid=236983, cgraph_uid=6875, symbol_order=7668)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.256583;
  struct hash_entry * D.256582;
  struct hash_entry * D.256580;
  bool retval.2078;

  <bb 2> :
  retval.2078 = need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ();
  if (retval.2078 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.256582 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.256580 = D.256582;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.256583 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256580 = D.256583;

  <bb 5> :
<L2>:
  return D.256580;

}



;; Function finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10674, decl_uid=241578, cgraph_uid=7306, symbol_order=8099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10673, decl_uid=241577, cgraph_uid=7305, symbol_order=8098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ()
{
  bool D.256584;

  <bb 2> :
  D.256584 = 0;

  <bb 3> :
<L0>:
  return D.256584;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev, funcdef_no=7842, decl_uid=126276, cgraph_uid=4474, symbol_order=5259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this)
{
  char * D.256586;
  struct allocator D.216140;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  std::allocator<char>::allocator (&D.216140);
  D.256586 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _2 = D.256586;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _2, &D.216140);
  std::allocator<char>::~allocator (&D.216140);
  D.216140 = {CLOBBER};
  std::__cxx11::basic_string<char>::_M_set_length (this, 0);
  return;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2Ev, funcdef_no=7264, decl_uid=117129, cgraph_uid=3896, symbol_order=4678)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2Ev, funcdef_no=8167, decl_uid=117056, cgraph_uid=4799, symbol_order=5584)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_, funcdef_no=8180, decl_uid=125172, cgraph_uid=4812, symbol_order=5597)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (struct _Alloc_hider * const this, char * __dat, struct allocator & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::allocator<char>&> (__a);
  std::allocator<char>::allocator (this, _1);
  this->_M_p = __dat;
  return;

}



;; Function std::move<std::allocator<char>&> (_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=8178, decl_uid=207561, cgraph_uid=4810, symbol_order=5595)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<char>&> (struct allocator & __t)
{
  struct type & D.256587;

  <bb 2> :
  D.256587 = __t;

  <bb 3> :
<L0>:
  return D.256587;

}



;; Function std::allocator<char>::~allocator (_ZNSaIcED2Ev, funcdef_no=7267, decl_uid=117134, cgraph_uid=3899, symbol_order=4681)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIcED2Ev, funcdef_no=8170, decl_uid=117061, cgraph_uid=4802, symbol_order=5587)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::push_back (_ZNSt6vectorI10breakpointSaIS0_EE9push_backERKS0_, funcdef_no=7891, decl_uid=185905, cgraph_uid=4524, symbol_order=5309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<breakpoint>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.256592;

  <bb 2> :
  _1 = this->D.186225._M_impl.D.185570._M_finish;
  _2 = this->D.186225._M_impl.D.185570._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.186225._M_impl.D.185570._M_finish;
  _4 = &this->D.186225._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_4, _3, __x);
  _5 = this->D.186225._M_impl.D.185570._M_finish;
  _6 = _5 + 40;
  this->D.186225._M_impl.D.185570._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.256592 = std::vector<breakpoint>::end (this);
  std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (this, D.256592, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8858, decl_uid=216253, cgraph_uid=5490, symbol_order=6279)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (struct allocator_type & __a, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<const breakpoint&> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (__a, __p, _1);
  return;

}



;; Function std::forward<const breakpoint&> (_ZSt7forwardIRK10breakpointEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9666, decl_uid=229463, cgraph_uid=6298, symbol_order=7087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct breakpoint & std::forward<const breakpoint&> (const struct type & __t)
{
  const struct breakpoint & D.256593;

  <bb 2> :
  D.256593 = __t;

  <bb 3> :
<L0>:
  return D.256593;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9667, decl_uid=229465, cgraph_uid=6302, symbol_order=7091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (struct new_allocator * const this, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  void * D.237015;
  void * D.237014;
  const struct breakpoint & D.237019;

  <bb 2> :
  D.237019 = std::forward<const breakpoint&> (__args#0);
  D.237014 = __p;
  D.237015 = operator new (40, D.237014);
  breakpoint::breakpoint (D.237015, D.237019);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  operator delete (D.237015, D.237014);
  resx 1

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2ERKS_, funcdef_no=9669, decl_uid=202574, cgraph_uid=6300, symbol_order=7089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, const struct breakpoint & D.202576)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.202576->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.202576->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_, funcdef_no=8234, decl_uid=126265, cgraph_uid=4866, symbol_order=5651)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 8 3 }
;; 3 succs { 8 4 }
;; 4 succs { 10 5 }
;; 5 succs { 10 6 }
;; 6 succs { 10 7 }
;; 7 succs { 1 }
;; 8 succs { 9 }
;; 9 succs { }
;; 10 succs { }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, const struct basic_string & __str)
{
  char * D.256601;
  char * D.256600;
  char * D.256597;
  const struct allocator_type & D.256596;
  struct allocator D.218725;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.256596 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.256596;
  D.218725 = __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_2); [return slot optimization]
  D.256597 = std::__cxx11::basic_string<char>::_M_local_data (this);

  <bb 3> :
  _3 = D.256597;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _3, &D.218725);

  <bb 4> :
  std::allocator<char>::~allocator (&D.218725);
  D.218725 = {CLOBBER};
  D.256600 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 5> :
  _4 = D.256600;
  _5 = std::__cxx11::basic_string<char>::length (__str);
  _6 = _4 + _5;
  D.256601 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 6> :
  _7 = D.256601;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, _7, _6);

  <bb 7> :
  return;

  <bb 8> :
<L0>:
  std::allocator<char>::~allocator (&D.218725);
  resx 2

  <bb 9> :
<L1>:
  D.218725 = {CLOBBER};
  resx 1

  <bb 10> :
<L2>:
  _8 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_8);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_, funcdef_no=9082, decl_uid=125092, cgraph_uid=5714, symbol_order=6503)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_, funcdef_no=9838, decl_uid=125052, cgraph_uid=6470, symbol_order=7259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<char>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2ERKS_, funcdef_no=9054, decl_uid=117124, cgraph_uid=5686, symbol_order=6475)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_, funcdef_no=9803, decl_uid=117051, cgraph_uid=6435, symbol_order=7224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.117053)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_, funcdef_no=9058, decl_uid=218475, cgraph_uid=5690, symbol_order=6479)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end)
{
  struct __false_type D.256607;

  <bb 2> :
  std::__cxx11::basic_string<char>::_M_construct_aux<char*> (this, __beg, __end, D.256607);
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct_aux<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type, funcdef_no=9807, decl_uid=230817, cgraph_uid=6439, symbol_order=7228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::__cxx11::basic_string<char>::_M_construct_aux<char*> (struct basic_string * const this, char * __beg, char * __end, struct __false_type D.238077)
{
  struct forward_iterator_tag D.256608;
  struct _Tag D.238080;

  <bb 2> :
  _1 = &D.238080;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, __beg, __end, D.256608);

  <bb 3> :
  D.238080 = {CLOBBER};
  return;

  <bb 4> :
<L0>:
  D.238080 = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag, funcdef_no=10351, decl_uid=238081, cgraph_uid=6984, symbol_order=7777)

Removing basic block 18
Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 20 }
;; 8 succs { 20 9 }
;; 9 succs { 10 13 }
;; 10 succs { 20 11 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 16 14 }
;; 14 succs { 20 15 }
;; 15 succs { 1 }
;; 16 succs { 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end, struct forward_iterator_tag D.242565)
{
  char * D.256623;
  char * D.256622;
  long int D.256621;
  size_type __dnew;
  bool iftmp.2080;
  bool retval.2079;

  <bb 2> :
  _1 = __gnu_cxx::__is_null_pointer<char> (__beg);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__beg != __end)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2080 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2080 = 0;

  <bb 6> :
  retval.2079 = iftmp.2080;
  if (retval.2079 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 8> :
  D.256621 = std::distance<char*> (__beg, __end);

  <bb 9> :
  _2 = D.256621;
  _3 = (long unsigned int) _2;
  __dnew = _3;
  __dnew.2081_4 = __dnew;
  if (__dnew.2081_4 > 15)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  D.256622 = std::__cxx11::basic_string<char>::_M_create (this, &__dnew, 0);

  <bb 11> :
  _5 = D.256622;
  std::__cxx11::basic_string<char>::_M_data (this, _5);

  <bb 12> :
  __dnew.2082_6 = __dnew;
  std::__cxx11::basic_string<char>::_M_capacity (this, __dnew.2082_6);

  <bb 13> :
  D.256623 = std::__cxx11::basic_string<char>::_M_data (this);

  <bb 14> :
  _7 = D.256623;
  std::__cxx11::basic_string<char>::_S_copy_chars (_7, __beg, __end);
  __dnew.2083_9 = __dnew;
  std::__cxx11::basic_string<char>::_M_set_length (this, __dnew.2083_9);

  <bb 15> :
  __dnew = {CLOBBER};
  return;

  <bb 16> :
<L9>:
  eh_dispatch 2

  <bb 17> :
<L10>:
  _8 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_8);
  std::__cxx11::basic_string<char>::_M_dispose (this);

  <bb 18> :
  __cxa_rethrow ();

  <bb 19> :
<L11>:
  __cxa_end_catch ();
  resx 3

  <bb 20> :
<L12>:
  __dnew = {CLOBBER};
  resx 1

}



;; Function __gnu_cxx::__is_null_pointer<char> (_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_, funcdef_no=10730, decl_uid=242569, cgraph_uid=7362, symbol_order=8155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__is_null_pointer<char> (char * __ptr)
{
  bool D.256628;

  <bb 2> :
  D.256628 = __ptr == 0B;

  <bb 3> :
<L0>:
  return D.256628;

}



;; Function std::distance<char*> (_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_, funcdef_no=10352, decl_uid=242572, cgraph_uid=6983, symbol_order=7776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::distance<char*> (char * __first, char * __last)
{
  struct random_access_iterator_tag D.256631;
  difference_type D.256630;

  <bb 2> :
  std::__iterator_category<char*> (&__first);
  __first.2084_1 = __first;
  D.256630 = std::__distance<char*> (__first.2084_1, __last, D.256631);

  <bb 3> :
<L0>:
  return D.256630;

}



;; Function std::__iterator_category<char*> (_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_, funcdef_no=10731, decl_uid=242578, cgraph_uid=7363, symbol_order=8156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator_category std::__iterator_category<char*> (char * const & D.244195)
{
  struct iterator_category D.256633;

  <bb 2> :

  <bb 3> :
<L0>:
  return D.256633;

}



;; Function std::__distance<char*> (_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag, funcdef_no=10732, decl_uid=242581, cgraph_uid=7364, symbol_order=8157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::__distance<char*> (char * __first, char * __last, struct random_access_iterator_tag D.244203)
{
  difference_type D.256635;

  <bb 2> :
  D.256635 = __last - __first;

  <bb 3> :
<L0>:
  return D.256635;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev, funcdef_no=7271, decl_uid=126589, cgraph_uid=3902, symbol_order=4684)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (struct _Alloc_hider * const this)
{
  <bb 2> :
  std::allocator<char>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<breakpoint>::end (_ZNSt6vectorI10breakpointSaIS0_EE3endEv, funcdef_no=8859, decl_uid=185838, cgraph_uid=5491, symbol_order=6280)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::end (struct vector * const this)
{
  struct iterator D.229488;
  struct iterator D.256637;

  <bb 2> :
  _1 = &this->D.186225._M_impl.D.185570._M_finish;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.229488, _1);
  D.256637 = D.229488;
  D.229488 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256637;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9672, decl_uid=216500, cgraph_uid=6304, symbol_order=7093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (struct __normal_iterator * const this, struct breakpoint * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (_ZNSt6vectorI10breakpointSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8860, decl_uid=216519, cgraph_uid=5495, symbol_order=6284)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { }
void std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (struct vector * const this, struct iterator __position, const struct breakpoint & __args#0)
{
  struct breakpoint * D.256644;
  const size_type D.256643;
  struct breakpoint * __new_finish;
  struct breakpoint * __new_start;
  const size_type __elems_before;
  struct breakpoint * __old_finish;
  struct breakpoint * __old_start;
  const size_type __len;
  struct iterator D.229496;

  <bb 2> :
  D.256643 = std::vector<breakpoint>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.256643;
  __old_start = this->D.186225._M_impl.D.185570._M_start;
  __old_finish = this->D.186225._M_impl.D.185570._M_finish;
  D.229496 = std::vector<breakpoint>::begin (this);
  _1 = __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (&__position, &D.229496);
  __elems_before = (const size_type) _1;
  D.229496 = {CLOBBER};
  _2 = &this->D.186225;
  D.256644 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_2, __len);
  __new_start = D.256644;
  __new_finish = __new_start;
  _3 = std::forward<const breakpoint&> (__args#0);
  _4 = __elems_before * 40;
  _5 = __new_start + _4;
  _6 = &this->D.186225._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_6, _5, _3);

  <bb 3> :
  __new_finish = 0B;
  _7 = &this->D.186225;
  _8 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<breakpoint>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 40;
  _11 = &this->D.186225;
  _12 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<breakpoint>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.186225;
  _23 = this->D.186225._M_impl.D.185570._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 40;
  _26 = (long unsigned int) _25;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_22, __old_start, _26);
  this->D.186225._M_impl.D.185570._M_start = __new_start;
  this->D.186225._M_impl.D.185570._M_finish = __new_finish;
  _27 = __len * 40;
  _28 = __new_start + _27;
  this->D.186225._M_impl.D.185570._M_end_of_storage = _28;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 2

  <bb 5> :
<L1>:
  _15 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_15);
  if (__new_finish == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _16 = __elems_before * 40;
  _17 = __new_start + _16;
  _18 = &this->D.186225._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_18, _17);
  goto <bb 8>; [INV]

  <bb 7> :
  _19 = &this->D.186225;
  _20 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_19);
  std::_Destroy<breakpoint*, breakpoint> (__new_start, __new_finish, _20);

  <bb 8> :
  _21 = &this->D.186225;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_21, __new_start, __len);

  <bb 9> :
  __cxa_rethrow ();

  <bb 10> :
<L5>:
  __cxa_end_catch ();
  resx 3

}



;; Function std::vector<breakpoint>::_M_check_len (_ZNKSt6vectorI10breakpointSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9674, decl_uid=186074, cgraph_uid=6306, symbol_order=7095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<breakpoint>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.2087;
  size_type D.256651;
  const long unsigned int D.237028;
  bool retval.2085;

  <bb 2> :
  _1 = std::vector<breakpoint>::max_size (this);
  _2 = std::vector<breakpoint>::size (this);
  _3 = _1 - _2;
  __n.2086_4 = __n;
  retval.2085 = _3 < __n.2086_4;
  if (retval.2085 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<breakpoint>::size (this);
  _6 = std::vector<breakpoint>::size (this);
  D.237028 = _6;
  _7 = std::max<long unsigned int> (&D.237028, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237028 = {CLOBBER};
  _9 = std::vector<breakpoint>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<breakpoint>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2087 = std::vector<breakpoint>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2087 = __len;

  <bb 8> :
  D.256651 = iftmp.2087;

  <bb 9> :
<L6>:
  return D.256651;

}



;; Function std::vector<breakpoint>::max_size (_ZNKSt6vectorI10breakpointSaIS0_EE8max_sizeEv, funcdef_no=10247, decl_uid=185860, cgraph_uid=6879, symbol_order=7672)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::max_size (const struct vector * const this)
{
  size_type D.256658;

  <bb 2> :
  _1 = &this->D.186225;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  D.256658 = std::vector<breakpoint>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.256658;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=10677, decl_uid=185460, cgraph_uid=7309, symbol_order=8102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.256660;

  <bb 2> :
  D.256660 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256660;

}



;; Function std::vector<breakpoint>::_S_max_size (_ZNSt6vectorI10breakpointSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10676, decl_uid=186081, cgraph_uid=7308, symbol_order=8101)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.256662;

  <bb 2> :
  __diffmax = 230584300921369395;
  _1 = std::allocator_traits<std::allocator<breakpoint> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.256662 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256662;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::max_size (_ZNSt16allocator_traitsISaI10breakpointEE8max_sizeERKS1_, funcdef_no=10844, decl_uid=185395, cgraph_uid=7476, symbol_order=8271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<breakpoint> >::max_size (const struct allocator_type & __a)
{
  size_type D.256665;

  <bb 2> :
  D.256665 = __gnu_cxx::new_allocator<breakpoint>::max_size (__a);

  <bb 3> :
<L0>:
  return D.256665;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE8max_sizeEv, funcdef_no=10922, decl_uid=185237, cgraph_uid=7554, symbol_order=8349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::max_size (const struct new_allocator * const this)
{
  size_type D.256667;

  <bb 2> :
  D.256667 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.256667;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE11_M_max_sizeEv, funcdef_no=10679, decl_uid=185256, cgraph_uid=7310, symbol_order=8103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.256669;

  <bb 2> :
  D.256669 = 230584300921369395;

  <bb 3> :
<L0>:
  return D.256669;

}



;; Function std::vector<breakpoint>::begin (_ZNSt6vectorI10breakpointSaIS0_EE5beginEv, funcdef_no=9675, decl_uid=185834, cgraph_uid=6307, symbol_order=7096)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::begin (struct vector * const this)
{
  struct iterator D.237030;
  struct iterator D.256671;

  <bb 2> :
  _1 = &this->D.186225._M_impl.D.185570._M_start;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.237030, _1);
  D.256671 = D.237030;
  D.237030 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256671;

}



;; Function __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (_ZN9__gnu_cxxmiIP10breakpointSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9676, decl_uid=229497, cgraph_uid=6308, symbol_order=7097)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.256674;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.256674 = _5 /[ex] 40;

  <bb 3> :
<L0>:
  return D.256674;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE11_M_allocateEm, funcdef_no=9677, decl_uid=185574, cgraph_uid=6309, symbol_order=7098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct breakpoint * D.256682;
  struct breakpoint * iftmp.2088;
  struct breakpoint * D.256676;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.256682 = std::allocator_traits<std::allocator<breakpoint> >::allocate (_1, __n);
  iftmp.2088 = D.256682;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2088 = 0B;

  <bb 5> :
  D.256676 = iftmp.2088;

  <bb 6> :
<L3>:
  return D.256676;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::allocate (_ZNSt16allocator_traitsISaI10breakpointEE8allocateERS1_m, funcdef_no=10248, decl_uid=185375, cgraph_uid=6880, symbol_order=7673)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * std::allocator_traits<std::allocator<breakpoint> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct breakpoint * D.256685;
  struct breakpoint * D.256683;

  <bb 2> :
  D.256685 = __gnu_cxx::new_allocator<breakpoint>::allocate (__a, __n, 0B);
  D.256683 = D.256685;

  <bb 3> :
<L0>:
  return D.256683;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::allocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE8allocateEmPKv, funcdef_no=10678, decl_uid=185229, cgraph_uid=7311, symbol_order=8104)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * __gnu_cxx::new_allocator<breakpoint>::allocate (struct new_allocator * const this, size_type __n, const void * D.243959)
{
  struct breakpoint * D.256696;
  struct breakpoint * D.256695;
  align_val_t __al;
  struct breakpoint * D.256693;
  bool retval.2089;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2089 = _4 != 0;
  if (retval.2089 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 461168601842738790)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 40;
  D.256696 = operator new (_6);
  D.256693 = D.256696;

  <bb 7> :
<L6>:
  return D.256693;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9679, decl_uid=216487, cgraph_uid=6311, symbol_order=7100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * const & __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (const struct __normal_iterator * const this)
{
  struct breakpoint * const & D.256697;

  <bb 2> :
  D.256697 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256697;

}



;; Function std::vector<breakpoint>::_S_relocate (_ZNSt6vectorI10breakpointSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9678, decl_uid=185732, cgraph_uid=6310, symbol_order=7099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.256700;
  struct breakpoint * D.256699;

  <bb 2> :
  D.256699 = std::vector<breakpoint>::_S_do_relocate (__first, __last, __result, __alloc, D.256700);

  <bb 3> :
<L0>:
  return D.256699;

}



;; Function std::vector<breakpoint>::_S_do_relocate (_ZNSt6vectorI10breakpointSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10249, decl_uid=185720, cgraph_uid=6881, symbol_order=7674)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_do_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc, struct true_type D.241597)
{
  struct breakpoint * D.256702;

  <bb 2> :
  D.256702 = std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.256702;

}



;; Function std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt12__relocate_aIP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10680, decl_uid=229662, cgraph_uid=7312, symbol_order=8105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * D.256704;

  <bb 2> :
  _1 = std::__niter_base<breakpoint*> (__result);
  _2 = std::__niter_base<breakpoint*> (__last);
  _3 = std::__niter_base<breakpoint*> (__first);
  D.256704 = std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.256704;

}



;; Function std::__niter_base<breakpoint*> (_ZSt12__niter_baseIP10breakpointET_S2_, funcdef_no=10845, decl_uid=229668, cgraph_uid=7477, symbol_order=8272)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__niter_base<breakpoint*> (struct breakpoint * __it)
{
  struct breakpoint * D.256706;

  <bb 2> :
  D.256706 = __it;

  <bb 3> :
<L0>:
  return D.256706;

}



;; Function std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt14__relocate_a_1IP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10846, decl_uid=229813, cgraph_uid=7478, symbol_order=8273)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * __cur;
  struct breakpoint * D.256708;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  _2 = std::__addressof<breakpoint> (__cur);
  std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_2, _1, __alloc);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.256708 = __cur;

  <bb 6> :
<L3>:
  return D.256708;

}



;; Function std::__addressof<breakpoint> (_ZSt11__addressofI10breakpointEPT_RS1_, funcdef_no=10847, decl_uid=229869, cgraph_uid=7479, symbol_order=8274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__addressof<breakpoint> (struct breakpoint & __r)
{
  struct breakpoint * D.256710;

  <bb 2> :
  D.256710 = __r;

  <bb 3> :
<L0>:
  return D.256710;

}



;; Function std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_ZSt19__relocate_object_aI10breakpointS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10923, decl_uid=229842, cgraph_uid=7555, symbol_order=8350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (struct breakpoint * restrict __dest, struct breakpoint * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<breakpoint&> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (__alloc, __dest, _1);
  _2 = std::__addressof<breakpoint> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (__alloc, _2);
  return;

}



;; Function std::move<breakpoint&> (_ZSt4moveIR10breakpointEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10957, decl_uid=229854, cgraph_uid=7589, symbol_order=8384)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<breakpoint&> (struct breakpoint & __t)
{
  struct type & D.256712;

  <bb 2> :
  D.256712 = __t;

  <bb 3> :
<L0>:
  return D.256712;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10958, decl_uid=229856, cgraph_uid=7590, symbol_order=8385)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (struct allocator_type & __a, struct breakpoint * __p, struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<breakpoint> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (__a, __p, _1);
  return;

}



;; Function std::forward<breakpoint> (_ZSt7forwardI10breakpointEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10976, decl_uid=245704, cgraph_uid=7608, symbol_order=8403)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint & std::forward<breakpoint> (struct type & __t)
{
  struct breakpoint & D.256714;

  <bb 2> :
  D.256714 = __t;

  <bb 3> :
<L0>:
  return D.256714;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10977, decl_uid=245706, cgraph_uid=7612, symbol_order=8407)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (struct new_allocator * const this, struct breakpoint * __p, struct breakpoint & __args#0)
{
  void * D.245783;
  void * D.245782;
  struct breakpoint & D.245787;

  <bb 2> :
  D.245787 = std::forward<breakpoint> (__args#0);
  D.245782 = __p;
  D.245783 = operator new (40, D.245782);
  breakpoint::breakpoint (D.245783, D.245787);
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2EOS_, funcdef_no=10979, decl_uid=202583, cgraph_uid=7610, symbol_order=8405)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, struct breakpoint & D.202585)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.202585->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.202585->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_, funcdef_no=7281, decl_uid=126195, cgraph_uid=3913, symbol_order=4696)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, struct basic_string & __str)
{
  char * D.256724;
  char * D.256723;
  bool D.256722;
  char * D.256721;
  struct allocator_type & D.256720;
  bool retval.2090;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.256720 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.256720;
  _3 = std::move<std::allocator<char>&> (_2);
  D.256721 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _4 = D.256721;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _4, _3);
  D.256722 = std::__cxx11::basic_string<char>::_M_is_local (__str);
  retval.2090 = D.256722;
  if (retval.2090 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = &__str->D.125192._M_local_buf;
  _6 = &this->D.125192._M_local_buf;
  std::char_traits<char>::copy (_6, _5, 16);
  goto <bb 5>; [INV]

  <bb 4> :
  D.256723 = std::__cxx11::basic_string<char>::_M_data (__str);
  _7 = D.256723;
  std::__cxx11::basic_string<char>::_M_data (this, _7);
  _8 = __str->D.125192._M_allocated_capacity;
  std::__cxx11::basic_string<char>::_M_capacity (this, _8);

  <bb 5> :
  _9 = std::__cxx11::basic_string<char>::length (__str);
  std::__cxx11::basic_string<char>::_M_length (this, _9);
  D.256724 = std::__cxx11::basic_string<char>::_M_local_data (__str);
  _10 = D.256724;
  std::__cxx11::basic_string<char>::_M_data (__str, _10);
  std::__cxx11::basic_string<char>::_M_set_length (__str, 0);
  return;

}



;; Function std::char_traits<char>::copy (_ZNSt11char_traitsIcE4copyEPcPKcm, funcdef_no=3400, decl_uid=115117, cgraph_uid=2218, symbol_order=2386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
char_type * std::char_traits<char>::copy (char_type * __s1, const char_type * __s2, size_t __n)
{
  char_type * D.256727;

  <bb 2> :
  if (__n == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256727 = __s1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.256727 = __builtin_memcpy (__s1, __s2, __n);

  <bb 5> :
<L2>:
  return D.256727;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE7destroyIS0_EEvRS1_PT_, funcdef_no=9681, decl_uid=229871, cgraph_uid=6313, symbol_order=7102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (struct allocator_type & __a, struct breakpoint * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE7destroyIS1_EEvPT_, funcdef_no=10250, decl_uid=237049, cgraph_uid=6882, symbol_order=7675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (struct new_allocator * const this, struct breakpoint * __p)
{
  <bb 2> :
  breakpoint::~breakpoint (__p);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9680, decl_uid=185458, cgraph_uid=6312, symbol_order=7101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256729;

  <bb 2> :
  D.256729 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256729;

}



;; Function std::_Destroy<breakpoint*, breakpoint> (_ZSt8_DestroyIP10breakpointS0_EvT_S2_RSaIT0_E, funcdef_no=9682, decl_uid=230053, cgraph_uid=6314, symbol_order=7103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*, breakpoint> (struct breakpoint * __first, struct breakpoint * __last, struct allocator & D.237054)
{
  <bb 2> :
  std::_Destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy<breakpoint*> (_ZSt8_DestroyIP10breakpointEvT_S2_, funcdef_no=10251, decl_uid=237056, cgraph_uid=6883, symbol_order=7676)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<breakpoint*> (_ZNSt12_Destroy_auxILb0EE9__destroyIP10breakpointEEvT_S4_, funcdef_no=10681, decl_uid=241626, cgraph_uid=7313, symbol_order=8106)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  std::_Destroy<breakpoint> (_1);
  __first = __first + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Destroy<breakpoint> (_ZSt8_DestroyI10breakpointEvPT_, funcdef_no=10848, decl_uid=243974, cgraph_uid=7480, symbol_order=8275)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint> (struct breakpoint * __pointer)
{
  <bb 2> :
  breakpoint::~breakpoint (__pointer);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8383, decl_uid=185577, cgraph_uid=5015, symbol_order=5804)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (struct _Vector_base * const this, struct breakpoint * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::deallocate (_ZNSt16allocator_traitsISaI10breakpointEE10deallocateERS1_PS0_m, funcdef_no=9164, decl_uid=185382, cgraph_uid=5796, symbol_order=6585)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::deallocate (struct allocator_type & __a, struct breakpoint * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::deallocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE10deallocateEPS1_m, funcdef_no=9878, decl_uid=185233, cgraph_uid=6510, symbol_order=7303)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::deallocate (struct new_allocator * const this, struct breakpoint * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 40;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function Graph::Graph (_ZN5GraphC2Ev, funcdef_no=6861, decl_uid=204183, cgraph_uid=3492, symbol_order=4269)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::vector (_1);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2Ev, funcdef_no=6859, decl_uid=167760, cgraph_uid=3489, symbol_order=4266)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2Ev, funcdef_no=6857, decl_uid=167186, cgraph_uid=3486, symbol_order=4263)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev, funcdef_no=7895, decl_uid=167078, cgraph_uid=4527, symbol_order=5312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this);
  _1 = &this->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2Ev, funcdef_no=8865, decl_uid=166856, cgraph_uid=5497, symbol_order=6286)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2Ev, funcdef_no=9684, decl_uid=166785, cgraph_uid=6316, symbol_order=7105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev, funcdef_no=8868, decl_uid=167028, cgraph_uid=5500, symbol_order=6289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::put (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7906, decl_uid=203211, cgraph_uid=4542, symbol_order=5327)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<cgraph_node*, Graph>::put (struct hash_map * const this, struct cgraph_node * const & k, const struct Graph & v)
{
  bool D.256744;
  struct hash_entry * D.256743;
  unsigned int D.256742;
  bool ins;
  struct hash_entry * e;
  bool D.256740;
  void * D.216562;
  void * D.216561;

  <bb 2> :
  _1 = &this->m_table;
  D.256742 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (k);
  _2 = D.256742;
  D.256743 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.256743;
  D.256744 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (e);
  ins = D.256744;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216561 = &e->m_value;
  D.216562 = operator new (48, D.216561);
  Graph::Graph (D.216562, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  Graph::operator= (_4, v);

  <bb 5> :
  D.256740 = ~ins;

  <bb 6> :
<L3>:
  return D.256740;

  <bb 7> :
<L4>:
  operator delete (D.216562, D.216561);
  resx 1

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE4hashERKS2_, funcdef_no=8876, decl_uid=203171, cgraph_uid=5508, symbol_order=6297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (struct cgraph_node * const & h)
{
  hashval_t D.256746;

  <bb 2> :
  D.256746 = pointer_hash<cgraph_node>::hash (h);

  <bb 3> :
<L0>:
  return D.256746;

}



;; Function pointer_hash<cgraph_node>::hash (_ZN12pointer_hashI11cgraph_nodeE4hashERKPS0_, funcdef_no=9688, decl_uid=203128, cgraph_uid=6320, symbol_order=7109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<cgraph_node>::hash (struct cgraph_node * const & candidate)
{
  hashval_t D.256748;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.256748 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.256748;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8877, decl_uid=203369, cgraph_uid=5509, symbol_order=6298)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct cgraph_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.256799;
  bool D.256798;
  bool D.256797;
  bool D.256796;
  bool D.256795;
  bool D.256794;
  struct value_type * D.256793;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2096;
  bool retval.2095;
  bool retval.2094;
  bool retval.2093;
  bool retval.2092;
  bool retval.2091;
  struct value_type * D.256755;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.256794 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2091 = D.256794;
  if (retval.2091 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.256795 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2092 = D.256795;
  if (retval.2092 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.256796 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2093 = D.256796;
  if (retval.2093 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.256755 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.256797 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2094 = D.256797;
  if (retval.2094 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.256798 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2095 = D.256798;
  if (retval.2095 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.256799 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2096 = D.256799;
  if (retval.2096 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.256755 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.256755 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.256755 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.256755 = _37 + _39;

  <bb 27> :
<L37>:
  return D.256755;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9689, decl_uid=203450, cgraph_uid=6333, symbol_order=7122)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.256830;
  unsigned int D.256829;
  bool D.256828;
  bool D.256827;
  struct mem_alloc_description & D.256826;
  struct value_type * D.256825;
  unsigned int D.256824;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.237107;
  void * D.237106;
  struct hash_entry & D.237144;
  bool iftmp.2100;
  bool retval.2099;
  bool iftmp.2098;
  bool retval.2097;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2098 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2098 = 0;

  <bb 6> :
  retval.2097 = iftmp.2098;
  if (retval.2097 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.256824 = hash_table_higher_prime_index (_5);
  nindex = D.256824;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.256825 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.256825;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.256827 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.256827;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.256828 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.256828;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2100 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2100 = 0;

  <bb 15> :
  retval.2099 = iftmp.2100;
  if (retval.2099 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.256829 = hash_map<cgraph_node*, Graph>::hash_entry::hash (x);
  _16 = D.256829;
  D.256830 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.256830;
  D.237144 = std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (x);
  D.237106 = q;
  D.237107 = operator new (56, D.237106);
  hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (D.237107, D.237144);

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10254, decl_uid=203345, cgraph_uid=6886, symbol_order=7679)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.256831;

  <bb 2> :
  D.256831 = this->m_size;

  <bb 3> :
<L0>:
  return D.256831;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10255, decl_uid=203347, cgraph_uid=6887, symbol_order=7680)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.256833;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.256833 = _1 - _2;

  <bb 3> :
<L0>:
  return D.256833;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10256, decl_uid=203447, cgraph_uid=6888, symbol_order=7681)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2101;
  bool D.256835;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2101 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2101 = 0;

  <bb 6> :
  D.256835 = iftmp.2101;

  <bb 7> :
<L4>:
  return D.256835;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10258, decl_uid=203270, cgraph_uid=6890, symbol_order=7683)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<cgraph_node*, Graph>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.256844;
  hashval_t D.256842;

  <bb 2> :
  _1 = &e->m_key;
  D.256844 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_1);
  D.256842 = D.256844;

  <bb 3> :
<L0>:
  return D.256842;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10257, decl_uid=203440, cgraph_uid=6889, symbol_order=7682)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.256857;
  bool D.256856;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2103;
  struct value_type * D.256848;
  bool retval.2102;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.256856 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2102 = D.256856;
  if (retval.2102 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256848 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.256857 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2103 = D.256857;
  if (retval.2103 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.256848 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.256848;

}



;; Function std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (_ZSt4moveIRN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10259, decl_uid=237104, cgraph_uid=6891, symbol_order=7684)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.256858;

  <bb 2> :
  D.256858 = __t;

  <bb 3> :
<L0>:
  return D.256858;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9700, decl_uid=237129, cgraph_uid=6331, symbol_order=7120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.237131)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.237131->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.237131->m_value;
  Graph::Graph (_2, _3);
  return;

}



;; Function Graph::Graph (_ZN5GraphC2EOS_, funcdef_no=9698, decl_uid=204200, cgraph_uid=6328, symbol_order=7117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, struct Graph & D.204202)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.204202->V;
  this->V = _1;
  _2 = D.204202->end;
  this->end = _2;
  _3 = D.204202->succ;
  this->succ = _3;
  _4 = D.204202->adj;
  this->adj = _4;
  _5 = &this->stack;
  _6 = &D.204202->stack;
  std::vector<int>::vector (_5, _6);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2EOS1_, funcdef_no=9696, decl_uid=167725, cgraph_uid=6325, symbol_order=7114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this, struct vector & D.167727)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167768;
  _2 = &D.167727->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EOS1_, funcdef_no=9694, decl_uid=167161, cgraph_uid=6322, symbol_order=7111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.167163)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.167163->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS2_, funcdef_no=10261, decl_uid=167067, cgraph_uid=6893, symbol_order=7686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  std::allocator<int>::allocator (this, _1);
  _2 = &this->D.167081;
  _3 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  _4 = &_3->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2ERKS_, funcdef_no=10684, decl_uid=166851, cgraph_uid=7316, symbol_order=8109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_, funcdef_no=10850, decl_uid=166780, cgraph_uid=7482, symbol_order=8277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.166782)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIiSaIiEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=10682, decl_uid=241661, cgraph_uid=7314, symbol_order=8107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.256860;

  <bb 2> :
  D.256860 = __t;

  <bb 3> :
<L0>:
  return D.256860;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2EOS2_, funcdef_no=10687, decl_uid=167023, cgraph_uid=7319, symbol_order=8112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8900, decl_uid=216706, cgraph_uid=5532, symbol_order=6321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8897, decl_uid=203454, cgraph_uid=5529, symbol_order=6318)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.256865;
  bool D.256863;

  <bb 2> :
  D.256865 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (v);
  D.256863 = D.256865;

  <bb 3> :
<L0>:
  return D.256863;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8898, decl_uid=203452, cgraph_uid=5530, symbol_order=6319)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.256868;
  bool D.256866;

  <bb 2> :
  D.256868 = hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (v);
  D.256866 = D.256868;

  <bb 3> :
<L0>:
  return D.256866;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9728, decl_uid=203279, cgraph_uid=6360, symbol_order=7149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.256871;
  bool D.256869;

  <bb 2> :
  D.256871 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.256869 = D.256871;

  <bb 3> :
<L0>:
  return D.256869;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10288, decl_uid=237332, cgraph_uid=6920, symbol_order=7713)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256872;

  <bb 2> :
  _1 = entry->m_key;
  D.256872 = pointer_hash<cgraph_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.256872;

}



;; Function pointer_hash<cgraph_node>::is_deleted (_ZN12pointer_hashI11cgraph_nodeE10is_deletedEPS0_, funcdef_no=10702, decl_uid=203138, cgraph_uid=7334, symbol_order=8127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_deleted (struct cgraph_node * e)
{
  bool D.256874;

  <bb 2> :
  D.256874 = e == 1B;

  <bb 3> :
<L0>:
  return D.256874;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::equal (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9702, decl_uid=203272, cgraph_uid=6334, symbol_order=7123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::equal (const struct hash_entry & a, struct cgraph_node * const & b)
{
  bool D.256878;
  bool D.256876;

  <bb 2> :
  _1 = &a->m_key;
  D.256878 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_1, b);
  D.256876 = D.256878;

  <bb 3> :
<L0>:
  return D.256876;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10equal_keysERKS2_S7_, funcdef_no=10263, decl_uid=203173, cgraph_uid=6895, symbol_order=7688)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (struct cgraph_node * const & k1, struct cgraph_node * const & k2)
{
  bool D.256879;

  <bb 2> :
  D.256879 = pointer_hash<cgraph_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.256879;

}



;; Function pointer_hash<cgraph_node>::equal (_ZN12pointer_hashI11cgraph_nodeE5equalERKPS0_S4_, funcdef_no=10689, decl_uid=203130, cgraph_uid=7321, symbol_order=8114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::equal (struct cgraph_node * const & existing, struct cgraph_node * const & candidate)
{
  bool D.256881;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.256881 = _1 == _2;

  <bb 3> :
<L0>:
  return D.256881;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9703, decl_uid=203458, cgraph_uid=6335, symbol_order=7124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10264, decl_uid=203282, cgraph_uid=6896, symbol_order=7689)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10690, decl_uid=241679, cgraph_uid=7322, symbol_order=8115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<cgraph_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<cgraph_node>::mark_empty (_ZN12pointer_hashI11cgraph_nodeE10mark_emptyERPS0_, funcdef_no=10852, decl_uid=203136, cgraph_uid=7484, symbol_order=8279)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<cgraph_node>::mark_empty (struct cgraph_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8878, decl_uid=203284, cgraph_uid=5510, symbol_order=6299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.256885;
  bool D.256883;

  <bb 2> :
  D.256885 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.256883 = D.256885;

  <bb 3> :
<L0>:
  return D.256883;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=9704, decl_uid=230103, cgraph_uid=6336, symbol_order=7125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256886;

  <bb 2> :
  _1 = entry->m_key;
  D.256886 = pointer_hash<cgraph_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.256886;

}



;; Function pointer_hash<cgraph_node>::is_empty (_ZN12pointer_hashI11cgraph_nodeE8is_emptyEPS0_, funcdef_no=10265, decl_uid=203140, cgraph_uid=6897, symbol_order=7690)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_empty (struct cgraph_node * e)
{
  bool D.256888;

  <bb 2> :
  D.256888 = e == 0B;

  <bb 3> :
<L0>:
  return D.256888;

}



;; Function Graph::Graph (_ZN5GraphC2ERKS_, funcdef_no=7908, decl_uid=204191, cgraph_uid=4539, symbol_order=5324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, const struct Graph & D.204193)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.204193->V;
  this->V = _1;
  _2 = D.204193->end;
  this->end = _2;
  _3 = D.204193->succ;
  this->succ = _3;
  _4 = D.204193->adj;
  this->adj = _4;
  _5 = &this->stack;
  _6 = &D.204193->stack;
  std::vector<int>::vector (_5, _6);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2ERKS1_, funcdef_no=8880, decl_uid=167731, cgraph_uid=5512, symbol_order=6301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<int>::vector (struct vector * const this, const struct vector & __x)
{
  int * D.256894;
  struct __normal_iterator D.256891;
  struct __normal_iterator D.256890;
  struct allocator D.230214;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167768;
  _2 = &__x->D.167768;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  D.230214 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<int>::size (__x);
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _4, &D.230214);

  <bb 3> :
  std::allocator<int>::~allocator (&D.230214);
  D.230214 = {CLOBBER};
  _5 = &this->D.167768;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = this->D.167768._M_impl.D.167081._M_start;
  D.256890 = std::vector<int>::end (__x);
  D.256891 = std::vector<int>::begin (__x);
  D.256894 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (D.256891, D.256890, _7, _6);

  <bb 4> :
  _8 = D.256894;
  this->D.167768._M_impl.D.167081._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<int>::~allocator (&D.230214);
  resx 2

  <bb 6> :
<L1>:
  D.230214 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE17_S_select_on_copyERKS1_, funcdef_no=9705, decl_uid=166943, cgraph_uid=6337, symbol_order=7126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_, funcdef_no=10266, decl_uid=166908, cgraph_uid=6898, symbol_order=7691)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<int>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_, funcdef_no=9708, decl_uid=167168, cgraph_uid=6340, symbol_order=7129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<int, std::allocator<int> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_, funcdef_no=10268, decl_uid=167073, cgraph_uid=6900, symbol_order=7693)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this, __a);
  _1 = &this->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_create_storage (_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm, funcdef_no=10270, decl_uid=167092, cgraph_uid=6902, symbol_order=7695)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  int * D.256901;

  <bb 2> :
  D.256901 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (this, __n);
  _1 = D.256901;
  this->_M_impl.D.167081._M_start = _1;
  _2 = this->_M_impl.D.167081._M_start;
  this->_M_impl.D.167081._M_finish = _2;
  _3 = this->_M_impl.D.167081._M_start;
  _4 = __n * 4;
  _5 = _3 + _4;
  this->_M_impl.D.167081._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev, funcdef_no=6855, decl_uid=167128, cgraph_uid=3483, symbol_order=4260)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<int>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<int>::~allocator (_ZNSaIiED2Ev, funcdef_no=7898, decl_uid=166861, cgraph_uid=4530, symbol_order=5315)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIiED2Ev, funcdef_no=8871, decl_uid=166790, cgraph_uid=5503, symbol_order=6292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::end (_ZNKSt6vectorIiSaIiEE3endEv, funcdef_no=9711, decl_uid=167355, cgraph_uid=6343, symbol_order=7132)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::end (const struct vector * const this)
{
  struct const_iterator D.237185;
  struct const_iterator D.256902;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_finish;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.237185, _1);
  D.256902 = D.237185;
  D.237185 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256902;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_, funcdef_no=10272, decl_uid=230183, cgraph_uid=6904, symbol_order=7697)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, const int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::begin (_ZNKSt6vectorIiSaIiEE5beginEv, funcdef_no=9710, decl_uid=167351, cgraph_uid=6342, symbol_order=7131)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::begin (const struct vector * const this)
{
  struct const_iterator D.237183;
  struct const_iterator D.256905;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_start;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.237183, _1);
  D.256905 = D.237183;
  D.237183 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256905;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E, funcdef_no=9712, decl_uid=230203, cgraph_uid=6344, symbol_order=7133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result, struct allocator & D.237189)
{
  int * D.256910;
  int * D.256908;

  <bb 2> :
  D.256910 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.256908 = D.256910;

  <bb 3> :
<L0>:
  return D.256908;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10274, decl_uid=237191, cgraph_uid=6907, symbol_order=7700)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256913;
  const bool __assignable;
  int * D.256911;

  <bb 2> :
  __assignable = 1;
  D.256913 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.256911 = D.256913;

  <bb 3> :
<L0>:
  return D.256911;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_, funcdef_no=10691, decl_uid=241798, cgraph_uid=7323, symbol_order=8116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256916;
  int * D.256914;

  <bb 2> :
  D.256916 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.256914 = D.256916;

  <bb 3> :
<L0>:
  return D.256914;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10853, decl_uid=244010, cgraph_uid=7485, symbol_order=8280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256921;
  struct __normal_iterator D.256919;
  struct __normal_iterator D.256918;
  int * D.256917;

  <bb 2> :
  D.256918 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.256919 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.256921 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (D.256919, D.256918, __result);
  D.256917 = D.256921;

  <bb 3> :
<L0>:
  return D.256917;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_, funcdef_no=10276, decl_uid=237240, cgraph_uid=6908, symbol_order=7701)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.256922;

  <bb 2> :
  D.256922 = __it;

  <bb 3> :
<L0>:
  return D.256922;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_, funcdef_no=10924, decl_uid=244876, cgraph_uid=7556, symbol_order=8351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256926;
  int * D.256924;

  <bb 2> :
  __result.2104_1 = __result;
  _2 = std::__niter_base<int*> (__result.2104_1);
  _3 = std::__niter_base<const int*, std::vector<int> > (__last);
  _4 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.256926 = std::__copy_move_a1<false, const int*, int*> (_4, _3, _2);
  _5 = D.256926;
  D.256924 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.256924;

}



;; Function std::__niter_base<const int*, std::vector<int> > (_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10692, decl_uid=241813, cgraph_uid=7324, symbol_order=8117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * std::__niter_base<const int*, std::vector<int> > (struct __normal_iterator __it)
{
  const int * D.256927;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (&__it);
  D.256927 = *_1;

  <bb 3> :
<L0>:
  return D.256927;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv, funcdef_no=10854, decl_uid=230170, cgraph_uid=7486, symbol_order=8281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * const & __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  const int * const & D.256929;

  <bb 2> :
  D.256929 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256929;

}



;; Function std::__copy_move_a1<false, const int*, int*> (_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10694, decl_uid=241967, cgraph_uid=7326, symbol_order=8119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.256933;
  int * D.256931;

  <bb 2> :
  D.256933 = std::__copy_move_a2<false, const int*, int*> (__first, __last, __result);
  D.256931 = D.256933;

  <bb 3> :
<L0>:
  return D.256931;

}



;; Function std::__copy_move_a2<false, const int*, int*> (_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10855, decl_uid=244024, cgraph_uid=7487, symbol_order=8282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.256934;

  <bb 2> :
  D.256934 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.256934;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_, funcdef_no=10925, decl_uid=244897, cgraph_uid=7557, symbol_order=8352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (const int * __first, const int * __last, int * __result)
{
  const ptrdiff_t _Num;
  int * D.256939;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 4;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.2105_2 = (long unsigned int) _Num;
  _3 = _Num.2105_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.2106_4 = (long unsigned int) _Num;
  _5 = _Num.2106_4 * 4;
  D.256939 = __result + _5;

  <bb 5> :
<L3>:
  return D.256939;

}



;; Function std::__niter_wrap<int*> (_ZSt12__niter_wrapIPiET_RKS1_S1_, funcdef_no=10699, decl_uid=242010, cgraph_uid=7331, symbol_order=8124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_wrap<int*> (int * const & D.244046, int * __res)
{
  int * D.256941;

  <bb 2> :
  D.256941 = __res;

  <bb 3> :
<L0>:
  return D.256941;

}



;; Function std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_ZNSt12_Vector_baseIiSaIiEED2Ev, funcdef_no=7901, decl_uid=167191, cgraph_uid=4533, symbol_order=5318)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.167081._M_end_of_storage;
  _2 = this->_M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function Graph::operator= (_ZN5GraphaSERKS_, funcdef_no=7910, decl_uid=216566, cgraph_uid=4541, symbol_order=5326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct Graph & Graph::operator= (struct Graph * const this, const struct Graph & D.216567)
{
  struct Graph & D.256943;

  <bb 2> :
  _1 = D.216567->V;
  this->V = _1;
  _2 = D.216567->end;
  this->end = _2;
  _3 = D.216567->succ;
  this->succ = _3;
  _4 = D.216567->adj;
  this->adj = _4;
  _5 = &D.216567->stack;
  _6 = &this->stack;
  std::vector<int>::operator= (_6, _5);
  D.256943 = this;

  <bb 3> :
<L0>:
  return D.256943;

}



;; Function std::vector<int>::operator= (_ZNSt6vectorIiSaIiEEaSERKS1_, funcdef_no=8882, decl_uid=167316, cgraph_uid=5516, symbol_order=6305)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<int>::operator= (struct vector * const this, const struct vector & __x)
{
  int * D.256978;
  int * __tmp;
  const size_type __xlen;
  struct vector & D.256976;
  struct __normal_iterator D.256973;
  struct __normal_iterator D.256972;
  struct __normal_iterator D.256971;
  struct __normal_iterator D.256970;
  struct __normal_iterator D.256969;
  bool retval.2111;
  struct __normal_iterator D.256964;
  struct __normal_iterator D.256963;
  bool retval.2110;
  bool iftmp.2109;
  bool retval.2108;
  bool retval.2107;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.2107 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ();
  if (retval.2107 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.167768;
  _4 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.167768;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2109 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2109 = 0;

  <bb 8> :
  retval.2108 = iftmp.2109;
  if (retval.2108 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<int>::clear (this);
  _8 = &this->D.167768;
  _9 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _10 = this->D.167768._M_impl.D.167081._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 4;
  _13 = (long unsigned int) _12;
  _14 = this->D.167768._M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_8, _14, _13);
  this->D.167768._M_impl.D.167081._M_start = 0B;
  this->D.167768._M_impl.D.167081._M_finish = 0B;
  this->D.167768._M_impl.D.167081._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.167768;
  _16 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.167768;
  _18 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<int> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<int>::size (__x);
  _19 = std::vector<int>::capacity (this);
  retval.2110 = __xlen > _19;
  if (retval.2110 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.256963 = std::vector<int>::end (__x);
  D.256964 = std::vector<int>::begin (__x);
  D.256978 = std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (this, __xlen, D.256964, D.256963);
  __tmp = D.256978;
  _20 = &this->D.167768;
  _21 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_20);
  _22 = this->D.167768._M_impl.D.167081._M_finish;
  _23 = this->D.167768._M_impl.D.167081._M_start;
  std::_Destroy<int*, int> (_23, _22, _21);
  _24 = &this->D.167768;
  _25 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _26 = this->D.167768._M_impl.D.167081._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 4;
  _29 = (long unsigned int) _28;
  _30 = this->D.167768._M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_24, _30, _29);
  this->D.167768._M_impl.D.167081._M_start = __tmp;
  _31 = this->D.167768._M_impl.D.167081._M_start;
  _32 = __xlen * 4;
  _33 = _31 + _32;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<int>::size (this);
  retval.2111 = __xlen <= _34;
  if (retval.2111 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.167768;
  _36 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_35);
  D.256969 = std::vector<int>::end (this);
  D.256970 = std::vector<int>::begin (this);
  D.256971 = std::vector<int>::end (__x);
  D.256972 = std::vector<int>::begin (__x);
  D.256973 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.256972, D.256971, D.256970);
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (D.256973, D.256969, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.167768._M_impl.D.167081._M_start;
  _38 = __x->D.167768._M_impl.D.167081._M_start;
  _39 = std::vector<int>::size (this);
  _40 = _39 * 4;
  _41 = _38 + _40;
  _42 = __x->D.167768._M_impl.D.167081._M_start;
  std::copy<int*, int*> (_42, _41, _37);
  _43 = &this->D.167768;
  _44 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_43);
  _45 = this->D.167768._M_impl.D.167081._M_finish;
  _46 = __x->D.167768._M_impl.D.167081._M_finish;
  _47 = __x->D.167768._M_impl.D.167081._M_start;
  _48 = std::vector<int>::size (this);
  _49 = _48 * 4;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<int*, int*, int> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.167768._M_impl.D.167081._M_start;
  _52 = __xlen * 4;
  _53 = _51 + _52;
  this->D.167768._M_impl.D.167081._M_finish = _53;

  <bb 17> :
  D.256976 = this;

  <bb 18> :
<L19>:
  return D.256976;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv, funcdef_no=8883, decl_uid=166948, cgraph_uid=5514, symbol_order=6303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ()
{
  bool D.256979;

  <bb 2> :
  D.256979 = 0;

  <bb 3> :
<L0>:
  return D.256979;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv, funcdef_no=8884, decl_uid=166951, cgraph_uid=5515, symbol_order=6304)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ()
{
  bool D.256981;

  <bb 2> :
  D.256981 = 1;

  <bb 3> :
<L0>:
  return D.256981;

}



;; Function std::operator!= (_ZStneRKSaIiES1_, funcdef_no=9713, decl_uid=166834, cgraph_uid=6345, symbol_order=7134)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.237208, const struct allocator & D.237209)
{
  bool D.256983;

  <bb 2> :
  D.256983 = 0;

  <bb 3> :
<L0>:
  return D.256983;

}



;; Function std::__alloc_on_copy<std::allocator<int> > (_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_, funcdef_no=9714, decl_uid=230240, cgraph_uid=6346, symbol_order=7135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<int> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::capacity (_ZNKSt6vectorIiSaIiEE8capacityEv, funcdef_no=9715, decl_uid=167386, cgraph_uid=6347, symbol_order=7136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::capacity (const struct vector * const this)
{
  size_type D.256985;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _2 = this->D.167768._M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.256985 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.256985;

}



;; Function std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPimT_S9_, funcdef_no=9716, decl_uid=230247, cgraph_uid=6348, symbol_order=7137)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
int * std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  int * D.256989;
  int * __result;
  int * D.256987;

  <bb 2> :
  _1 = &this->D.167768;
  D.256989 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_1, __n);
  __result = D.256989;
  _2 = &this->D.167768;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (__first, __last, __result, _3);

  <bb 3> :
  D.256987 = __result;

  <bb 4> :
<L0>:
  return D.256987;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_, funcdef_no=9717, decl_uid=230255, cgraph_uid=6349, symbol_order=7138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.256995;
  struct __normal_iterator D.256994;
  struct __normal_iterator D.256993;

  <bb 2> :
  D.256994 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.256995 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.256993 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.256995, D.256994, __result);

  <bb 3> :
<L0>:
  return D.256993;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_, funcdef_no=10277, decl_uid=237246, cgraph_uid=6910, symbol_order=7703)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  int * D.256999;
  struct __normal_iterator D.256997;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__result);
  _2 = std::__niter_base<const int*, std::vector<int> > (__last);
  _3 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.256999 = std::__copy_move_a1<false, const int*, int*> (_3, _2, _1);
  _4 = D.256999;
  D.256997 = std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (__result, _4);

  <bb 3> :
<L0>:
  return D.256997;

}



;; Function std::__niter_base<int*, std::vector<int> > (_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE, funcdef_no=10693, decl_uid=241964, cgraph_uid=7325, symbol_order=8118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*, std::vector<int> > (struct __normal_iterator __it)
{
  int * D.257000;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__it);
  D.257000 = *_1;

  <bb 3> :
<L0>:
  return D.257000;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_, funcdef_no=10695, decl_uid=241971, cgraph_uid=7327, symbol_order=8120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (struct __normal_iterator __from, int * __res)
{
  struct __normal_iterator D.257002;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 4;
  D.257002 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.257002;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl, funcdef_no=10856, decl_uid=210084, cgraph_uid=7488, symbol_order=8283)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.244903;
  struct __normal_iterator D.244904;
  struct __normal_iterator D.257004;

  <bb 2> :
  _1 = this->_M_current;
  __n.2112_2 = (long unsigned int) __n;
  _3 = __n.2112_2 * 4;
  _4 = _1 + _3;
  D.244903 = _4;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.244904, &D.244903);
  D.257004 = D.244904;
  D.244904 = {CLOBBER};
  D.244903 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.257004;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E, funcdef_no=9718, decl_uid=230261, cgraph_uid=6350, symbol_order=7139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.237275)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_, funcdef_no=10279, decl_uid=237277, cgraph_uid=6911, symbol_order=7704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_, funcdef_no=10696, decl_uid=241995, cgraph_uid=7328, symbol_order=8121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator D.244033, struct __normal_iterator D.244034)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<int*, int*> (_ZSt4copyIPiS0_ET0_T_S2_S1_, funcdef_no=9719, decl_uid=230269, cgraph_uid=6351, symbol_order=7140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.257010;
  int * D.257008;

  <bb 2> :
  _1 = std::__miter_base<int*> (__last);
  _2 = std::__miter_base<int*> (__first);
  D.257010 = std::__copy_move_a<false, int*, int*> (_2, _1, __result);
  D.257008 = D.257010;

  <bb 3> :
<L0>:
  return D.257008;

}



;; Function std::__miter_base<int*> (_ZSt12__miter_baseIPiET_S1_, funcdef_no=10280, decl_uid=237293, cgraph_uid=6912, symbol_order=7705)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__miter_base<int*> (int * __it)
{
  int * D.257011;

  <bb 2> :
  D.257011 = __it;

  <bb 3> :
<L0>:
  return D.257011;

}



;; Function std::__copy_move_a<false, int*, int*> (_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10281, decl_uid=237295, cgraph_uid=6913, symbol_order=7706)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.257015;
  int * D.257013;

  <bb 2> :
  __result.2113_1 = __result;
  _2 = std::__niter_base<int*> (__result.2113_1);
  _3 = std::__niter_base<int*> (__last);
  _4 = std::__niter_base<int*> (__first);
  D.257015 = std::__copy_move_a1<false, int*, int*> (_4, _3, _2);
  _5 = D.257015;
  D.257013 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.257013;

}



;; Function std::__copy_move_a1<false, int*, int*> (_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10698, decl_uid=242006, cgraph_uid=7330, symbol_order=8123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.257018;
  int * D.257016;

  <bb 2> :
  D.257018 = std::__copy_move_a2<false, int*, int*> (__first, __last, __result);
  D.257016 = D.257018;

  <bb 3> :
<L0>:
  return D.257016;

}



;; Function std::__copy_move_a2<false, int*, int*> (_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10857, decl_uid=244042, cgraph_uid=7489, symbol_order=8284)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.257019;

  <bb 2> :
  D.257019 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.257019;

}



;; Function std::__uninitialized_copy_a<int*, int*, int> (_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E, funcdef_no=9720, decl_uid=230273, cgraph_uid=6352, symbol_order=7141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<int*, int*, int> (int * __first, int * __last, int * __result, struct allocator & D.237302)
{
  int * D.257023;
  int * D.257021;

  <bb 2> :
  D.257023 = std::uninitialized_copy<int*, int*> (__first, __last, __result);
  D.257021 = D.257023;

  <bb 3> :
<L0>:
  return D.257021;

}



;; Function std::uninitialized_copy<int*, int*> (_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_, funcdef_no=10282, decl_uid=237304, cgraph_uid=6914, symbol_order=7707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.257026;
  const bool __assignable;
  int * D.257024;

  <bb 2> :
  __assignable = 1;
  D.257026 = std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (__first, __last, __result);
  D.257024 = D.257026;

  <bb 3> :
<L0>:
  return D.257024;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_, funcdef_no=10700, decl_uid=242044, cgraph_uid=7332, symbol_order=8125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.257029;
  int * D.257027;

  <bb 2> :
  D.257029 = std::copy<int*, int*> (__first, __last, __result);
  D.257027 = D.257029;

  <bb 3> :
<L0>:
  return D.257027;

}



;; Function hash_map<tree_node*, var_points_to>::~hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6867, decl_uid=204383, cgraph_uid=3498, symbol_order=4275)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7912, decl_uid=203078, cgraph_uid=4544, symbol_order=5329)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257043;
  bool D.257042;
  size_t i;
  bool iftmp.2115;
  bool retval.2114;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.257042 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257042;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.257043 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257043;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2115 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2115 = 0;

  <bb 7> :
  retval.2114 = iftmp.2115;
  if (retval.2114 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, var_points_to>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8885, decl_uid=203031, cgraph_uid=5517, symbol_order=6306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.257046;
  bool D.257044;

  <bb 2> :
  D.257046 = hash_map<tree_node*, var_points_to>::hash_entry::is_empty (v);
  D.257044 = D.257046;

  <bb 3> :
<L0>:
  return D.257044;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9721, decl_uid=202861, cgraph_uid=6353, symbol_order=7142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.257047;

  <bb 2> :
  D.257047 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.257047;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10283, decl_uid=237310, cgraph_uid=6915, symbol_order=7708)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.257049;

  <bb 2> :
  _1 = entry->m_key;
  D.257049 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.257049;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8886, decl_uid=203029, cgraph_uid=5518, symbol_order=6307)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.257053;
  bool D.257051;

  <bb 2> :
  D.257053 = hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (v);
  D.257051 = D.257053;

  <bb 3> :
<L0>:
  return D.257051;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9722, decl_uid=202856, cgraph_uid=6354, symbol_order=7143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.257056;
  bool D.257054;

  <bb 2> :
  D.257056 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  D.257054 = D.257056;

  <bb 3> :
<L0>:
  return D.257054;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10284, decl_uid=237314, cgraph_uid=6916, symbol_order=7709)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.257057;

  <bb 2> :
  _1 = entry->m_key;
  D.257057 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.257057;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::remove (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8887, decl_uid=202852, cgraph_uid=5519, symbol_order=6308)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9723, decl_uid=230289, cgraph_uid=6355, symbol_order=7144)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  var_points_to::~var_points_to (_2);
  return;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8888, decl_uid=216634, cgraph_uid=5520, symbol_order=6309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_map<tree_node*, gimple_array>::~hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6870, decl_uid=204399, cgraph_uid=3501, symbol_order=4278)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7915, decl_uid=190352, cgraph_uid=4547, symbol_order=5332)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257073;
  bool D.257072;
  size_t i;
  bool iftmp.2117;
  bool retval.2116;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.257072 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257072;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.257073 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257073;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2117 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2117 = 0;

  <bb 7> :
  retval.2116 = iftmp.2117;
  if (retval.2116 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<tree_node*, gimple_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8891, decl_uid=190129, cgraph_uid=5523, symbol_order=6312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9725, decl_uid=230299, cgraph_uid=6357, symbol_order=7146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::~hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6873, decl_uid=204415, cgraph_uid=3504, symbol_order=4281)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7918, decl_uid=196812, cgraph_uid=4550, symbol_order=5335)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257087;
  bool D.257086;
  size_t i;
  bool iftmp.2119;
  bool retval.2118;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 168;
  _4 = _2 + _3;
  D.257086 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257086;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 168;
  _9 = _7 + _8;
  D.257087 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257087;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2119 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2119 = 0;

  <bb 7> :
  retval.2118 = iftmp.2119;
  if (retval.2118 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 168;
  _14 = _12 + _13;
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8895, decl_uid=196586, cgraph_uid=5527, symbol_order=6316)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9727, decl_uid=230309, cgraph_uid=6359, symbol_order=7148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<basic_block_def*>::remove (_1);
  _2 = &entry->m_value;
  symbolicinfo::~symbolicinfo (_2);
  return;

}



;; Function ggc_remove<basic_block_def*>::remove (_ZN10ggc_removeIP15basic_block_defE6removeERS1_, funcdef_no=10287, decl_uid=196456, cgraph_uid=6919, symbol_order=7712)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<basic_block_def*>::remove (struct basic_block_def * & D.242056)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<cgraph_node*, Graph>::~hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6876, decl_uid=204431, cgraph_uid=3507, symbol_order=4284)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7921, decl_uid=203501, cgraph_uid=4553, symbol_order=5338)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257101;
  bool D.257100;
  size_t i;
  bool iftmp.2121;
  bool retval.2120;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.257100 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257100;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.257101 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257101;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2121 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2121 = 0;

  <bb 7> :
  retval.2120 = iftmp.2121;
  if (retval.2120 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<cgraph_node*, Graph>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::remove (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8899, decl_uid=203275, cgraph_uid=5531, symbol_order=6320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9729, decl_uid=230319, cgraph_uid=6361, symbol_order=7150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<cgraph_node*>::remove (_1);
  _2 = &entry->m_value;
  Graph::~Graph (_2);
  return;

}



;; Function ggc_remove<cgraph_node*>::remove (_ZN10ggc_removeIP11cgraph_nodeE6removeERS1_, funcdef_no=10289, decl_uid=203145, cgraph_uid=6921, symbol_order=7714)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<cgraph_node*>::remove (struct cgraph_node * & D.242060)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_return_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6879, decl_uid=204447, cgraph_uid=3510, symbol_order=4287)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7924, decl_uid=189823, cgraph_uid=4556, symbol_order=5341)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257115;
  bool D.257114;
  size_t i;
  bool iftmp.2123;
  bool retval.2122;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.257114 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257114;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.257115 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257115;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2123 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2123 = 0;

  <bb 7> :
  retval.2122 = iftmp.2123;
  if (retval.2122 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_return_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8903, decl_uid=189597, cgraph_uid=5535, symbol_order=6324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9731, decl_uid=230329, cgraph_uid=6363, symbol_order=7152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_return_array::~function_return_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6882, decl_uid=204463, cgraph_uid=3513, symbol_order=4290)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7927, decl_uid=190984, cgraph_uid=4559, symbol_order=5344)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257129;
  bool D.257128;
  size_t i;
  bool iftmp.2125;
  bool retval.2124;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.257128 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257128;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.257129 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257129;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2125 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2125 = 0;

  <bb 7> :
  retval.2124 = iftmp.2125;
  if (retval.2124 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_assign_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8907, decl_uid=190758, cgraph_uid=5539, symbol_order=6328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9733, decl_uid=230339, cgraph_uid=6365, symbol_order=7154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_assign_array::~function_assign_array (_2);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::~hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6885, decl_uid=204479, cgraph_uid=3516, symbol_order=4293)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7930, decl_uid=194923, cgraph_uid=4562, symbol_order=5347)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257143;
  bool D.257142;
  size_t i;
  bool iftmp.2127;
  bool retval.2126;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.257142 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257142;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.257143 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257143;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2127 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2127 = 0;

  <bb 7> :
  retval.2126 = iftmp.2127;
  if (retval.2126 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8911, decl_uid=194700, cgraph_uid=5543, symbol_order=6332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9735, decl_uid=230349, cgraph_uid=6367, symbol_order=7156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::~hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6888, decl_uid=204495, cgraph_uid=3519, symbol_order=4296)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7933, decl_uid=193549, cgraph_uid=4565, symbol_order=5350)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257157;
  bool D.257156;
  size_t i;
  bool iftmp.2129;
  bool retval.2128;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.257156 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257156;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.257157 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257157;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2129 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2129 = 0;

  <bb 7> :
  retval.2128 = iftmp.2129;
  if (retval.2128 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8915, decl_uid=193323, cgraph_uid=5547, symbol_order=6336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9737, decl_uid=230359, cgraph_uid=6369, symbol_order=7158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::~hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6891, decl_uid=204511, cgraph_uid=3522, symbol_order=4299)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7936, decl_uid=194025, cgraph_uid=4568, symbol_order=5353)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257171;
  bool D.257170;
  size_t i;
  bool iftmp.2131;
  bool retval.2130;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.257170 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257170;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.257171 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257171;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2131 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2131 = 0;

  <bb 7> :
  retval.2130 = iftmp.2131;
  if (retval.2130 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8919, decl_uid=193799, cgraph_uid=5551, symbol_order=6340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9739, decl_uid=230369, cgraph_uid=6371, symbol_order=7160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6894, decl_uid=204527, cgraph_uid=3525, symbol_order=4302)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7939, decl_uid=192195, cgraph_uid=4571, symbol_order=5356)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257185;
  bool D.257184;
  size_t i;
  bool iftmp.2133;
  bool retval.2132;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.257184 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257184;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.257185 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257185;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2133 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2133 = 0;

  <bb 7> :
  retval.2132 = iftmp.2133;
  if (retval.2132 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_path_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8923, decl_uid=191969, cgraph_uid=5555, symbol_order=6344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9741, decl_uid=230379, cgraph_uid=6373, symbol_order=7162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_path_array::~function_path_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6897, decl_uid=204543, cgraph_uid=3528, symbol_order=4305)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7942, decl_uid=192677, cgraph_uid=4574, symbol_order=5359)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257199;
  bool D.257198;
  size_t i;
  bool iftmp.2135;
  bool retval.2134;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.257198 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257198;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.257199 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257199;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2135 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2135 = 0;

  <bb 7> :
  retval.2134 = iftmp.2135;
  if (retval.2134 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_free_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8927, decl_uid=192451, cgraph_uid=5559, symbol_order=6348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9743, decl_uid=230389, cgraph_uid=6375, symbol_order=7164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_free_array::~function_free_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::~hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6900, decl_uid=204559, cgraph_uid=3531, symbol_order=4308)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7945, decl_uid=203879, cgraph_uid=4577, symbol_order=5362)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257213;
  bool D.257212;
  size_t i;
  bool iftmp.2137;
  bool retval.2136;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.257212 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257212;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.257213 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257213;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2137 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2137 = 0;

  <bb 7> :
  retval.2136 = iftmp.2137;
  if (retval.2136 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, function_graph_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8929, decl_uid=203832, cgraph_uid=5561, symbol_order=6350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.257216;
  bool D.257214;

  <bb 2> :
  D.257216 = hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (v);
  D.257214 = D.257216;

  <bb 3> :
<L0>:
  return D.257214;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9744, decl_uid=203665, cgraph_uid=6376, symbol_order=7165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.257217;

  <bb 2> :
  D.257217 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.257217;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10297, decl_uid=237380, cgraph_uid=6929, symbol_order=7722)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.257219;

  <bb 2> :
  _1 = entry->m_key;
  D.257219 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.257219;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8930, decl_uid=203830, cgraph_uid=5562, symbol_order=6351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.257223;
  bool D.257221;

  <bb 2> :
  D.257223 = hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (v);
  D.257221 = D.257223;

  <bb 3> :
<L0>:
  return D.257221;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9745, decl_uid=203660, cgraph_uid=6377, symbol_order=7166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.257226;
  bool D.257224;

  <bb 2> :
  D.257226 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  D.257224 = D.257226;

  <bb 3> :
<L0>:
  return D.257224;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10298, decl_uid=237384, cgraph_uid=6930, symbol_order=7723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.257227;

  <bb 2> :
  _1 = entry->m_key;
  D.257227 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.257227;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8931, decl_uid=203656, cgraph_uid=5563, symbol_order=6352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9746, decl_uid=230399, cgraph_uid=6378, symbol_order=7167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8932, decl_uid=216898, cgraph_uid=5564, symbol_order=6353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function std::__cxx11::basic_string<char>::~basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, funcdef_no=7276, decl_uid=126289, cgraph_uid=3908, symbol_order=4690)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::~basic_string (struct basic_string * const this)
{
  <bb 2> :
  std::__cxx11::basic_string<char>::_M_dispose (this);
  _1 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_1);
  *this = {CLOBBER};
  return;

}



;; Function Graph::~Graph (_ZN5GraphD2Ev, funcdef_no=6864, decl_uid=204358, cgraph_uid=3495, symbol_order=4272)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::~Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<int>::~vector (_ZNSt6vectorIiSaIiEED2Ev, funcdef_no=7904, decl_uid=167765, cgraph_uid=4536, symbol_order=5321)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167768;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = this->D.167768._M_impl.D.167081._M_start;
  std::_Destroy<int*, int> (_4, _3, _2);
  _5 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function breakpoint::~breakpoint (_ZN10breakpointD2Ev, funcdef_no=6848, decl_uid=202728, cgraph_uid=3479, symbol_order=4256)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::~breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::~basic_string (_1);
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function var_points_to::~var_points_to (_ZN13var_points_toD2Ev, funcdef_no=6841, decl_uid=202549, cgraph_uid=3472, symbol_order=4249)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::~var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EED2Ev, funcdef_no=7839, decl_uid=172416, cgraph_uid=4471, symbol_order=5256)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172419;
  _2 = std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_1);
  _3 = this->D.172419._M_impl.D.171764._M_finish;
  _4 = this->D.172419._M_impl.D.171764._M_start;
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_4, _3, _2);
  _5 = &this->D.172419;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv, funcdef_no=8804, decl_uid=171652, cgraph_uid=5436, symbol_order=6225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.257230;

  <bb 2> :
  D.257230 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257230;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EES5_EvT_S7_RSaIT0_E, funcdef_no=8805, decl_uid=216123, cgraph_uid=5439, symbol_order=6228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __first, struct vector * __last, struct allocator & D.228380)
{
  <bb 2> :
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EEEvT_S7_, funcdef_no=9657, decl_uid=229277, cgraph_uid=6290, symbol_order=7079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt4pairI5fdecljESaIS5_EEEEvT_S9_, funcdef_no=10236, decl_uid=236954, cgraph_uid=6868, symbol_order=7661)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (__first);
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_1);
  __first = __first + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt11__addressofISt6vectorISt4pairI5fdecljESaIS3_EEEPT_RS6_, funcdef_no=10660, decl_uid=241549, cgraph_uid=7292, symbol_order=8085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector * std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (struct vector & __r)
{
  struct vector * D.257232;

  <bb 2> :
  D.257232 = __r;

  <bb 3> :
<L0>:
  return D.257232;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyISt6vectorISt4pairI5fdecljESaIS3_EEEvPT_, funcdef_no=10661, decl_uid=241551, cgraph_uid=7293, symbol_order=8086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __pointer)
{
  <bb 2> :
  std::vector<std::pair<fdecl, unsigned int> >::~vector (__pointer);
  return;

}



;; Function std::vector<std::pair<fdecl, unsigned int> >::~vector (_ZNSt6vectorISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=10840, decl_uid=216110, cgraph_uid=7472, symbol_order=8267)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::pair<fdecl, unsigned int> >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.216113;
  _2 = std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_1);
  _3 = this->D.216113._M_impl.D.215458._M_finish;
  _4 = this->D.216113._M_impl.D.215458._M_start;
  std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_4, _3, _2);
  _5 = &this->D.216113;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE19_M_get_Tp_allocatorEv, funcdef_no=10920, decl_uid=215346, cgraph_uid=7552, symbol_order=8347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.257234;

  <bb 2> :
  D.257234 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257234;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_ZSt8_DestroyIPSt4pairI5fdecljES2_EvT_S4_RSaIT0_E, funcdef_no=10921, decl_uid=244821, cgraph_uid=7553, symbol_order=8348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (struct pair * __first, struct pair * __last, struct allocator & D.245201)
{
  <bb 2> :
  std::_Destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*> (_ZSt8_DestroyIPSt4pairI5fdecljEEvT_S4_, funcdef_no=10955, decl_uid=245203, cgraph_uid=7588, symbol_order=8383)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*> (struct pair * __first, struct pair * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairI5fdecljEEEvT_S6_, funcdef_no=10975, decl_uid=245686, cgraph_uid=7607, symbol_order=8402)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (struct pair * D.245772, struct pair * D.245773)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=10918, decl_uid=215568, cgraph_uid=7550, symbol_order=8345)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.215458._M_end_of_storage;
  _2 = this->_M_impl.D.215458._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.215458._M_start;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE13_M_deallocateEPS2_m, funcdef_no=10954, decl_uid=215465, cgraph_uid=7586, symbol_order=8381)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (struct _Vector_base * const this, struct pair * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_ZNSt16allocator_traitsISaISt4pairI5fdecljEEE10deallocateERS3_PS2_m, funcdef_no=10974, decl_uid=215270, cgraph_uid=7606, symbol_order=8401)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (struct allocator_type & __a, struct pair * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEE10deallocateEPS3_m, funcdef_no=10983, decl_uid=215121, cgraph_uid=7615, symbol_order=8410)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (struct new_allocator * const this, struct pair * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE12_Vector_implD2Ev, funcdef_no=10916, decl_uid=215505, cgraph_uid=7547, symbol_order=8342)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::pair<fdecl, unsigned int> >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::pair<fdecl, unsigned int> >::~allocator (_ZNSaISt4pairI5fdecljEED2Ev, funcdef_no=10952, decl_uid=215238, cgraph_uid=7584, symbol_order=8379)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::pair<fdecl, unsigned int> >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEED2Ev, funcdef_no=10972, decl_uid=215167, cgraph_uid=7604, symbol_order=8399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EED2Ev, funcdef_no=7836, decl_uid=171874, cgraph_uid=4468, symbol_order=5253)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.171764._M_end_of_storage;
  _2 = this->_M_impl.D.171764._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.171764._M_start;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE13_M_deallocateEPS5_m, funcdef_no=8803, decl_uid=171771, cgraph_uid=5435, symbol_order=6224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (struct _Vector_base * const this, struct vector * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_ZNSt16allocator_traitsISaISt6vectorISt4pairI5fdecljESaIS3_EEEE10deallocateERS6_PS5_m, funcdef_no=9656, decl_uid=171576, cgraph_uid=6288, symbol_order=7077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (struct allocator_type & __a, struct vector * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEE10deallocateEPS6_m, funcdef_no=10235, decl_uid=171427, cgraph_uid=6867, symbol_order=7660)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (struct new_allocator * const this, struct vector * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implD2Ev, funcdef_no=6832, decl_uid=171811, cgraph_uid=3460, symbol_order=4237)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEED2Ev, funcdef_no=7833, decl_uid=171544, cgraph_uid=4465, symbol_order=5250)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEED2Ev, funcdef_no=8801, decl_uid=171473, cgraph_uid=5433, symbol_order=6222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function insert_always_inline (_Z20insert_always_inlinev, funcdef_no=6902, decl_uid=204685, cgraph_uid=3534, symbol_order=4311)

Merging blocks 5 and 33
Removing basic block 24
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
;;
;; Loop 1
;;  header 33, latch 32
;;  depth 1, outer 0
;;  nodes: 33 32 31 5 4 3 30 29 28 6 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;;
;; Loop 2
;;  header 28, latch 27
;;  depth 2, outer 1
;;  nodes: 28 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;; 2 succs { 33 }
;; 3 succs { 35 4 }
;; 4 succs { 5 6 }
;; 5 succs { 32 }
;; 6 succs { 28 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 35 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 17 }
;; 15 succs { 35 16 }
;; 16 succs { 17 }
;; 17 succs { 35 18 }
;; 18 succs { 19 24 }
;; 19 succs { 35 20 }
;; 20 succs { 35 21 }
;; 21 succs { 35 22 }
;; 22 succs { 35 23 }
;; 23 succs { 35 27 }
;; 24 succs { 35 25 }
;; 25 succs { 35 26 }
;; 26 succs { 35 27 }
;; 27 succs { 28 }
;; 28 succs { 7 29 }
;; 29 succs { 35 30 }
;; 30 succs { 35 31 }
;; 31 succs { 32 }
;; 32 succs { 33 }
;; 33 succs { 3 34 }
;; 34 succs { 1 }
;; 35 succs { }
void insert_always_inline ()
{
  struct cgraph_node * D.257278;
  const char * D.257274;
  union tree_node * D.257273;
  union tree_node * D.257272;
  const char * D.257271;
  union tree_node * D.257270;
  union tree_node * D.257269;
  struct cgraph_node * D.257268;
  bool D.257267;
  struct cgraph_node * D.257266;
  union tree_node * callee_tree;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  availability avail;
  union tree_node * attr;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  bool always_inline;
  const char * name;
  struct cgraph_node * node;
  bool retval.2142;
  union tree_node * iftmp.2141;
  struct cgraph_node * iftmp.2140;
  bool retval.2139;

  <bb 2> :
  symtab.2138_1 = symtab;
  D.257266 = symbol_table::first_defined_function (symtab.2138_1);
  node = D.257266;
  goto <bb 33>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.257267 = gimple_has_body_p (_2);

  <bb 4> :
  _3 = D.257267;
  retval.2139 = ~_3;
  if (retval.2139 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by continue predictor.
  avail = {CLOBBER};
  goto <bb 32>; [INV]

  <bb 6> :
  e = node->callees;
  goto <bb 28>; [INV]

  <bb 7> :
  _4 = e->caller;
  _5 = _4->inlined_to;
  if (_5 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _6 = e->caller;
  iftmp.2140 = _6->inlined_to;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.2140 = e->caller;

  <bb 10> :
  caller = iftmp.2140;
  _7 = e->callee;
  D.257268 = cgraph_node::ultimate_alias_target (_7, &avail, caller);

  <bb 11> :
  callee = D.257268;
  if (callee != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _8 = callee->D.97512.decl;
  iftmp.2141 = _8->function_decl.function_specific_optimization;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2141 = 0B;

  <bb 14> :
  callee_tree = iftmp.2141;
  _9 = callee->D.97512.decl;
  _10 = _9->decl_common.attributes;
  if (_10 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _11 = callee->D.97512.decl;
  _12 = _11->decl_common.attributes;
  D.257269 = get_attribute_name (_12);

  <bb 16> :
  attr = D.257269;

  <bb 17> :
  _13 = callee->D.97512.decl;
  _14 = _13->decl_common.attributes;
  D.257270 = lookup_attribute ("noinline", _14);

  <bb 18> :
  _15 = D.257270;
  retval.2142 = _15 == 0B;
  if (retval.2142 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  _16 = callee->D.97512.decl;
  D.257271 = get_name (_16);

  <bb 20> :
  _17 = D.257271;
  stderr.2143_18 = stderr;
  fprintf (stderr.2143_18, "=======node_fun:%s=========\n", _17);

  <bb 21> :
  _19 = callee->D.97512.decl;
  _20 = _19->decl_common.attributes;
  D.257272 = get_identifier_with_length ("noinline", 8);

  <bb 22> :
  _21 = D.257272;
  _22 = callee->D.97512.decl;
  D.257273 = tree_cons (_21, 0B, _20);

  <bb 23> :
  _23 = D.257273;
  _22->decl_common.attributes = _23;
  _24 = callee->D.97512.decl;
  _24->function_decl.disregard_inline_limits = 1;
  _25 = callee->D.97512.decl;
  _26 = _25->decl_common.attributes;
  debug_tree (_26);
  goto <bb 27>; [INV]

  <bb 24> :
  _27 = callee->D.97512.decl;
  D.257274 = get_name (_27);

  <bb 25> :
  _28 = D.257274;
  stderr.2144_29 = stderr;
  fprintf (stderr.2144_29, "=======node_fun:%s=========\n", _28);

  <bb 26> :
  _30 = callee->D.97512.decl;
  _31 = _30->decl_common.attributes;
  debug_tree (_31);

  <bb 27> :
  e = e->next_callee;

  <bb 28> :
  if (e != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _32 = node->D.97512.decl;
  _33 = _32->function_decl.f;
  push_cfun (_33);

  <bb 30> :
  pop_cfun ();

  <bb 31> :
  avail = {CLOBBER};

  <bb 32> :
  symtab.2145_34 = symtab;
  D.257278 = symbol_table::next_defined_function (symtab.2145_34, node);
  node = D.257278;

  <bb 33> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  return;

  <bb 35> :
<L23>:
  avail = {CLOBBER};
  resx 1

}



;; Function lookup_attribute (_ZL16lookup_attributePKcP9tree_node, funcdef_no=3026, decl_uid=110094, cgraph_uid=2128, symbol_order=2293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * lookup_attribute (const char * attr_name, union tree_node * list)
{
  union tree_node * D.257283;
  size_t attr_len;
  union tree_node * D.257281;

  <bb 2> :
  if (list == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.257281 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  attr_len = strlen (attr_name);
  D.257283 = private_lookup_attribute (attr_name, attr_len, list);
  D.257281 = D.257283;

  <bb 5> :
<L2>:
  return D.257281;

}



;; Function test_always (_ZL11test_alwaysv, funcdef_no=6903, decl_uid=204743, cgraph_uid=3535, symbol_order=4317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int test_always ()
{
  int D.257284;

  <bb 2> :
  insert_always_inline ();
  D.257284 = 0;

  <bb 3> :
<L0>:
  return D.257284;

}



;; Function make_pass_ipa_always (_Z20make_pass_ipa_alwaysPN3gcc7contextE, funcdef_no=6913, decl_uid=204814, cgraph_uid=3545, symbol_order=4327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_ipa_always (struct context * ctxt)
{
  void * D.257288;
  void * D.204816;
  struct ipa_opt_pass_d * D.257286;

  <bb 2> :
  D.257288 = operator new (160);
  D.204816 = D.257288;
  {anonymous}::pass_ipa_always::pass_ipa_always (D.204816, ctxt);

  <bb 3> :
  D.257286 = D.204816;

  <bb 4> :
<L0>:
  return D.257286;

  <bb 5> :
<L1>:
  operator delete (D.204816, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_always::pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysC2EPN3gcc7contextE, funcdef_no=6909, decl_uid=204774, cgraph_uid=3541, symbol_order=4323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::pass_ipa_always (struct pass_ipa_always * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.204777;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &inline_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.204777.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_always::execute (_ZN12_GLOBAL__N_115pass_ipa_always7executeEP8function, funcdef_no=6911, decl_uid=204754, cgraph_uid=3543, symbol_order=4325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_always::execute (struct pass_ipa_always * const this, struct function * D.204752)
{
  int D.257292;
  unsigned int D.257290;

  <bb 2> :
  D.257292 = test_always ();
  _1 = D.257292;
  D.257290 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.257290;

}



;; Function {anonymous}::pass_ipa_always::clone (_ZN12_GLOBAL__N_115pass_ipa_always5cloneEv, funcdef_no=6912, decl_uid=204757, cgraph_uid=3544, symbol_order=4326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_always * {anonymous}::pass_ipa_always::clone (struct pass_ipa_always * const this)
{
  struct pass_ipa_always * D.257293;

  <bb 2> :
  D.257293 = this;

  <bb 3> :
<L0>:
  return D.257293;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD0Ev, funcdef_no=10991, decl_uid=204762, cgraph_uid=7623, symbol_order=8420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_always::~pass_ipa_always (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD2Ev, funcdef_no=10989, decl_uid=204768, cgraph_uid=7621, symbol_order=8418)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.204777.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.204777;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD2Ev, funcdef_no=6906, decl_uid=88908, cgraph_uid=3537, symbol_order=4319)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  _1 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _1;
  _2 = &this->D.88937;
  opt_pass::~opt_pass (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD0Ev, funcdef_no=6908, decl_uid=88902, cgraph_uid=3539, symbol_order=4321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  ipa_opt_pass_d::~ipa_opt_pass_d (this);
  operator delete (this, 160);
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD2Ev, funcdef_no=1884, decl_uid=88726, cgraph_uid=1023, symbol_order=1183)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  _1 = &_ZTV8opt_pass + 16;
  this->_vptr.opt_pass = _1;
  *this = {CLOBBER};
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD0Ev, funcdef_no=1886, decl_uid=88720, cgraph_uid=1025, symbol_order=1185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  opt_pass::~opt_pass (this);
  operator delete (this, 88);
  return;

}



;; Function ipa_opt_pass_d::ipa_opt_pass_d (_ZN14ipa_opt_pass_dC2ERK9pass_dataPN3gcc7contextEPFvvES7_S7_S7_S7_PFvP11cgraph_nodePP6gimpleEjPFjS9_EPFvP12varpool_nodeE, funcdef_no=1894, decl_uid=88924, cgraph_uid=1033, symbol_order=1193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::ipa_opt_pass_d (struct ipa_opt_pass_d * const this, const struct pass_data & data, struct context * ctxt, void (*<T6a3>) (void) generate_summary, void (*<T6a3>) (void) write_summary, void (*<T6a3>) (void) read_summary, void (*<T6a3>) (void) write_optimization_summary, void (*<T6a3>) (void) read_optimization_summary, void (*<T57cc>) (struct cgraph_node *, struct gimple * *) stmt_fixup, unsigned int function_transform_todo_flags_start, unsigned int (*<T57ce>) (struct cgraph_node *) function_transform, void (*<T57d1>) (struct varpool_node *) variable_transform)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.88937;
  opt_pass::opt_pass (_1, data, ctxt);
  _2 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _2;
  this->generate_summary = generate_summary;
  this->write_summary = write_summary;
  this->read_summary = read_summary;
  this->write_optimization_summary = write_optimization_summary;
  this->read_optimization_summary = read_optimization_summary;
  this->stmt_fixup = stmt_fixup;
  this->function_transform_todo_flags_start = function_transform_todo_flags_start;
  this->function_transform = function_transform;
  this->variable_transform = variable_transform;
  return;

}



;; Function execute_detect (_ZL14execute_detectv, funcdef_no=6914, decl_uid=204835, cgraph_uid=3546, symbol_order=4328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int execute_detect ()
{
  int D.257295;

  <bb 2> :
  detect ();
  D.257295 = 0;

  <bb 3> :
<L0>:
  return D.257295;

}



;; Function make_pass_detect (_Z16make_pass_detectPN3gcc7contextE, funcdef_no=6920, decl_uid=89596, cgraph_uid=3552, symbol_order=4334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_detect (struct context * ctxt)
{
  void * D.257299;
  void * D.204880;
  struct ipa_opt_pass_d * D.257297;

  <bb 2> :
  D.257299 = operator new (160);
  D.204880 = D.257299;
  {anonymous}::pass_ipa_detect::pass_ipa_detect (D.204880, ctxt);

  <bb 3> :
  D.257297 = D.204880;

  <bb 4> :
<L0>:
  return D.257297;

  <bb 5> :
<L1>:
  operator delete (D.204880, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_detect::pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectC2EPN3gcc7contextE, funcdef_no=6916, decl_uid=204865, cgraph_uid=3548, symbol_order=4330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::pass_ipa_detect (struct pass_ipa_detect * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.204868;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &detect_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.204868.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_detect::execute (_ZN12_GLOBAL__N_115pass_ipa_detect7executeEP8function, funcdef_no=6918, decl_uid=204845, cgraph_uid=3550, symbol_order=4332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_detect::execute (struct pass_ipa_detect * const this, struct function * D.204843)
{
  int D.257303;
  unsigned int D.257301;

  <bb 2> :
  D.257303 = execute_detect ();
  _1 = D.257303;
  D.257301 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.257301;

}



;; Function {anonymous}::pass_ipa_detect::clone (_ZN12_GLOBAL__N_115pass_ipa_detect5cloneEv, funcdef_no=6919, decl_uid=204848, cgraph_uid=3551, symbol_order=4333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_detect * {anonymous}::pass_ipa_detect::clone (struct pass_ipa_detect * const this)
{
  struct pass_ipa_detect * D.257304;

  <bb 2> :
  D.257304 = this;

  <bb 3> :
<L0>:
  return D.257304;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD0Ev, funcdef_no=10987, decl_uid=204853, cgraph_uid=7619, symbol_order=8415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_detect::~pass_ipa_detect (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD2Ev, funcdef_no=10985, decl_uid=204859, cgraph_uid=7617, symbol_order=8413)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.204868.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.204868;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function plugin_init (plugin_init, funcdef_no=6921, decl_uid=83835, cgraph_uid=3553, symbol_order=4335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int plugin_init (struct plugin_name_args * plugin_info, struct plugin_gcc_version * version)
{
  struct ipa_opt_pass_d * D.257313;
  struct ipa_opt_pass_d * D.257312;
  bool D.257311;
  int D.257309;
  bool retval.2146;

  <bb 2> :
  D.257311 = plugin_default_version_check (version, &gcc_version);
  _1 = D.257311;
  retval.2146 = ~_1;
  if (retval.2146 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_puts (&"incompatible gcc/plugin versions"[0]);
  D.257309 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = version->devphase;
  _3 = version->basever;
  _4 = plugin_info->full_name;
  stderr.2147_5 = stderr;
  fprintf (stderr.2147_5, "%s %s %s\n", _4, _3, _2);
  g.2148_6 = g;
  D.257312 = make_pass_ipa_always (g.2148_6);
  _7 = D.257312;
  inline_passinfo.pass = _7;
  inline_passinfo.reference_pass_name = "einline";
  inline_passinfo.ref_pass_instance_number = 0;
  inline_passinfo.pos_op = 1;
  g.2149_8 = g;
  D.257313 = make_pass_detect (g.2149_8);
  _9 = D.257313;
  detect_passinfo.pass = _9;
  detect_passinfo.reference_pass_name = "pta";
  detect_passinfo.ref_pass_instance_number = 0;
  detect_passinfo.pos_op = 0;
  register_callback ("static_analyzer", 2, 0B, &detect_passinfo);
  D.257309 = 0;

  <bb 5> :
<L2>:
  return D.257309;

}



;; Function __static_initialization_and_destruction_0 (_Z41__static_initialization_and_destruction_0ii, funcdef_no=11004, decl_uid=245840, cgraph_uid=7642, symbol_order=8484)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void __static_initialization_and_destruction_0 (int __initialize_p, int __priority)
{
  <bb 2> :
  if (__initialize_p == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__priority == 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::ios_base::Init::Init (&__ioinit);
  __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
  std::basic_ofstream<char>::basic_ofstream (&cfginfo, "cfginfo.txt", 16);
  __cxxabiv1::__cxa_atexit (__dt_comp , &cfginfo, &__dso_handle);
  ptb::ptb (&start1);
  ptb::ptb (&start2);
  ptb::ptb (&start3);
  ptb::ptb (&start4);
  ptb::ptb (&start5);
  ptb::ptb (&start6);
  ptb::ptb (&start7);
  ptb::ptb (&start8);
  ptb::ptb (&start9);
  std::vector<gimple*>::vector (&new_gimple_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimple_array, &__dso_handle);
  std::vector<tree_node*>::vector (&new_gimpletree_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimpletree_array, &__dso_handle);
  std::vector<basic_block_def*>::vector (&new_path_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_path_array, &__dso_handle);
  std::vector<tree_node*>::vector (&traceStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &traceStack, &__dso_handle);
  std::vector<tree_node*>::vector (&pathStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &pathStack, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecution);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecution, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecutionswitch);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecutionswitch, &__dso_handle);
  std::vector<breakpoint>::vector (&vbreakpoint);
  __cxxabiv1::__cxa_atexit (__dt_comp , &vbreakpoint, &__dso_handle);
  std::vector<return_type>::vector (&global_ret_type_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &global_ret_type_array, &__dso_handle);
  CStack::CStack (&stmtStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack, &__dso_handle);
  CstmtStack::CstmtStack (&stmtStack2);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack2, &__dso_handle);

  <bb 5> :
  return;

}



;; Function CstmtStack::~CstmtStack (_ZN10CstmtStackD2Ev, funcdef_no=11009, decl_uid=245868, cgraph_uid=7640, symbol_order=8482)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::~CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183205;
  std::stack<gimple*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<gimple*>::~stack (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6233, decl_uid=186896, cgraph_uid=3208, symbol_order=3969)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::~deque (_ZNSt5dequeIP6gimpleSaIS1_EED2Ev, funcdef_no=7594, decl_uid=183025, cgraph_uid=4226, symbol_order=5011)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::~deque (struct deque * const this)
{
  struct iterator D.210369;
  struct iterator D.210370;

  <bb 2> :
  _1 = &this->D.183028;
  _2 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.210370 = std::deque<gimple*, std::allocator<gimple*> >::end (this); [return slot optimization]
  D.210369 = std::deque<gimple*, std::allocator<gimple*> >::begin (this); [return slot optimization]
  std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (this, &D.210369, &D.210370, _2);
  D.210369 = {CLOBBER};
  D.210370 = {CLOBBER};
  _3 = &this->D.183028;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8418, decl_uid=182267, cgraph_uid=5050, symbol_order=5839)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.257320;

  <bb 2> :
  D.257320 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257320;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::end (_ZNSt5dequeIP6gimpleSaIS1_EE3endEv, funcdef_no=8417, decl_uid=182611, cgraph_uid=5049, symbol_order=5838)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183028._M_impl.D.182422._M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2ERKS4_, funcdef_no=9186, decl_uid=182236, cgraph_uid=5818, symbol_order=6607)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::begin (_ZNSt5dequeIP6gimpleSaIS1_EE5beginEv, funcdef_no=8416, decl_uid=182607, cgraph_uid=5048, symbol_order=5837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183028._M_impl.D.182422._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (_ZNSt5dequeIP6gimpleSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8419, decl_uid=182829, cgraph_uid=5051, symbol_order=5840)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.220809)
{
  struct iterator D.220813;
  struct iterator D.220816;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=8414, decl_uid=182477, cgraph_uid=5046, symbol_order=5835)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.182422._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.182422._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.182422._M_start._M_node;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.182422._M_map_size;
  _6 = this->_M_impl.D.182422._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9183, decl_uid=182292, cgraph_uid=5815, symbol_order=6604)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9899, decl_uid=182275, cgraph_uid=6531, symbol_order=7324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (struct _Deque_base * const this, struct gimple * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::__deque_buf_size (_ZSt16__deque_buf_sizem, funcdef_no=5338, decl_uid=156256, cgraph_uid=2732, symbol_order=2922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
size_t std::__deque_buf_size (size_t __size)
{
  size_t iftmp.2150;
  size_t D.257334;

  <bb 2> :
  if (__size <= 511)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.2150 = 512 / __size;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2150 = 1;

  <bb 5> :
  D.257334 = iftmp.2150;

  <bb 6> :
<L3>:
  return D.257334;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9184, decl_uid=182281, cgraph_uid=5816, symbol_order=6605)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (struct _Deque_base * const this, struct gimple * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<gimple**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9900, decl_uid=182271, cgraph_uid=6532, symbol_order=7325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (this);
  std::allocator<gimple**>::allocator<gimple*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10424, decl_uid=182269, cgraph_uid=7056, symbol_order=7849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.257342;

  <bb 2> :
  D.257342 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257342;

}



;; Function std::allocator<gimple**>::allocator<gimple*> (_ZNSaIPP6gimpleEC2IS0_EERKSaIT_E, funcdef_no=10426, decl_uid=239362, cgraph_uid=7058, symbol_order=7851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::allocator<gimple*> (struct allocator * const this, const struct allocator & D.239364)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleEC2Ev, funcdef_no=10768, decl_uid=181937, cgraph_uid=7400, symbol_order=8195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple**> >::deallocate (_ZNSt16allocator_traitsISaIPP6gimpleEE10deallocateERS3_PS2_m, funcdef_no=9904, decl_uid=231799, cgraph_uid=6536, symbol_order=7329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple**> >::deallocate (struct allocator_type & __a, struct gimple * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE10deallocateEPS3_m, funcdef_no=10431, decl_uid=181896, cgraph_uid=7063, symbol_order=7856)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::deallocate (struct new_allocator * const this, struct gimple * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<gimple**>::~allocator (_ZNSaIPP6gimpleED2Ev, funcdef_no=9902, decl_uid=182013, cgraph_uid=6534, symbol_order=7327)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleED2Ev, funcdef_no=10429, decl_uid=181942, cgraph_uid=7061, symbol_order=7854)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implD2Ev, funcdef_no=8409, decl_uid=182909, cgraph_uid=5040, symbol_order=5829)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<gimple*>::~allocator (_ZNSaIP6gimpleED2Ev, funcdef_no=7537, decl_uid=181740, cgraph_uid=4169, symbol_order=4954)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleED2Ev, funcdef_no=8351, decl_uid=181669, cgraph_uid=4983, symbol_order=5772)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function CStack::~CStack (_ZN6CStackD2Ev, funcdef_no=11006, decl_uid=245852, cgraph_uid=7637, symbol_order=8479)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::~CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181559;
  std::stack<tree_node*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<tree_node*>::~stack (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6226, decl_uid=186690, cgraph_uid=3201, symbol_order=3961)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_ZNSt5dequeIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7585, decl_uid=181363, cgraph_uid=4217, symbol_order=5002)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::~deque (struct deque * const this)
{
  struct iterator D.210345;
  struct iterator D.210346;

  <bb 2> :
  _1 = &this->D.181366;
  _2 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.210346 = std::deque<tree_node*, std::allocator<tree_node*> >::end (this); [return slot optimization]
  D.210345 = std::deque<tree_node*, std::allocator<tree_node*> >::begin (this); [return slot optimization]
  std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (this, &D.210345, &D.210346, _2);
  D.210345 = {CLOBBER};
  D.210346 = {CLOBBER};
  _3 = &this->D.181366;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8405, decl_uid=180572, cgraph_uid=5037, symbol_order=5826)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.257347;

  <bb 2> :
  D.257347 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257347;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::end (_ZNSt5dequeIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8404, decl_uid=180920, cgraph_uid=5036, symbol_order=5825)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181366._M_impl.D.180727._M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2ERKS4_, funcdef_no=9176, decl_uid=180541, cgraph_uid=5808, symbol_order=6597)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::begin (_ZNSt5dequeIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=8403, decl_uid=180916, cgraph_uid=5035, symbol_order=5824)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181366._M_impl.D.180727._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (_ZNSt5dequeIP9tree_nodeSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8406, decl_uid=181166, cgraph_uid=5038, symbol_order=5827)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.220756)
{
  struct iterator D.220760;
  struct iterator D.220763;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=8401, decl_uid=180782, cgraph_uid=5033, symbol_order=5822)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.180727._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.180727._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.180727._M_start._M_node;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.180727._M_map_size;
  _6 = this->_M_impl.D.180727._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9173, decl_uid=180597, cgraph_uid=5805, symbol_order=6594)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9886, decl_uid=180580, cgraph_uid=6518, symbol_order=7311)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (struct _Deque_base * const this, union tree_node * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9174, decl_uid=180586, cgraph_uid=5806, symbol_order=6595)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (struct _Deque_base * const this, union tree_node * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<tree_node**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9887, decl_uid=180576, cgraph_uid=6519, symbol_order=7312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (this);
  std::allocator<tree_node**>::allocator<tree_node*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10410, decl_uid=180574, cgraph_uid=7042, symbol_order=7835)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.257363;

  <bb 2> :
  D.257363 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257363;

}



;; Function std::allocator<tree_node**>::allocator<tree_node*> (_ZNSaIPP9tree_nodeEC2IS0_EERKSaIT_E, funcdef_no=10412, decl_uid=239315, cgraph_uid=7044, symbol_order=7837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::allocator<tree_node*> (struct allocator * const this, const struct allocator & D.239317)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeEC2Ev, funcdef_no=10763, decl_uid=180224, cgraph_uid=7395, symbol_order=8190)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::deallocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE10deallocateERS3_PS2_m, funcdef_no=9891, decl_uid=231674, cgraph_uid=6523, symbol_order=7316)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node**> >::deallocate (struct allocator_type & __a, union tree_node * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE10deallocateEPS3_m, funcdef_no=10417, decl_uid=180183, cgraph_uid=7049, symbol_order=7842)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::deallocate (struct new_allocator * const this, union tree_node * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<tree_node**>::~allocator (_ZNSaIPP9tree_nodeED2Ev, funcdef_no=9889, decl_uid=180300, cgraph_uid=6521, symbol_order=7314)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeED2Ev, funcdef_no=10415, decl_uid=180229, cgraph_uid=7047, symbol_order=7840)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implD2Ev, funcdef_no=8396, decl_uid=181247, cgraph_uid=5027, symbol_order=5816)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<tree_node*>::~allocator (_ZNSaIP9tree_nodeED2Ev, funcdef_no=7546, decl_uid=180027, cgraph_uid=4178, symbol_order=4963)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeED2Ev, funcdef_no=8361, decl_uid=179956, cgraph_uid=4993, symbol_order=5782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::~vector (_ZNSt6vectorI10breakpointSaIS0_EED2Ev, funcdef_no=11018, decl_uid=186222, cgraph_uid=7650, symbol_order=8850)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186225;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  _3 = this->D.186225._M_impl.D.185570._M_finish;
  _4 = this->D.186225._M_impl.D.185570._M_start;
  std::_Destroy<breakpoint*, breakpoint> (_4, _3, _2);
  _5 = &this->D.186225;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EED2Ev, funcdef_no=7567, decl_uid=185680, cgraph_uid=4199, symbol_order=4984)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.185570._M_end_of_storage;
  _2 = this->_M_impl.D.185570._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.185570._M_start;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implD2Ev, funcdef_no=6207, decl_uid=185617, cgraph_uid=3181, symbol_order=3939)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<breakpoint>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<breakpoint>::~allocator (_ZNSaI10breakpointED2Ev, funcdef_no=7564, decl_uid=185350, cgraph_uid=4196, symbol_order=4981)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointED2Ev, funcdef_no=8381, decl_uid=185279, cgraph_uid=5013, symbol_order=5802)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<tree_node*>::~vector (_ZNSt6vectorIP9tree_nodeSaIS1_EED2Ev, funcdef_no=11015, decl_uid=184884, cgraph_uid=7647, symbol_order=8847)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184887;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.184887._M_impl.D.184243._M_finish;
  _4 = this->D.184887._M_impl.D.184243._M_start;
  std::_Destroy<tree_node**, tree_node*> (_4, _3, _2);
  _5 = &this->D.184887;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<tree_node**, tree_node*> (_ZSt8_DestroyIPP9tree_nodeS1_EvT_S3_RSaIT0_E, funcdef_no=9370, decl_uid=222819, cgraph_uid=6002, symbol_order=6791)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**, tree_node*> (union tree_node * * __first, union tree_node * * __last, struct allocator & D.234082)
{
  <bb 2> :
  std::_Destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy<tree_node**> (_ZSt8_DestroyIPP9tree_nodeEvT_S3_, funcdef_no=10031, decl_uid=234084, cgraph_uid=6663, symbol_order=7456)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**> (union tree_node * * __first, union tree_node * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<tree_node**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP9tree_nodeEEvT_S5_, funcdef_no=10541, decl_uid=239980, cgraph_uid=7173, symbol_order=7966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<tree_node**> (union tree_node * * D.243355, union tree_node * * D.243356)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7549, decl_uid=184353, cgraph_uid=4181, symbol_order=4966)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.184243._M_end_of_storage;
  _2 = this->_M_impl.D.184243._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.184243._M_start;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implD2Ev, funcdef_no=6187, decl_uid=184290, cgraph_uid=3161, symbol_order=3913)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::~vector (_ZNSt6vectorIP6gimpleSaIS1_EED2Ev, funcdef_no=11012, decl_uid=183970, cgraph_uid=7644, symbol_order=8844)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.183973;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.183973._M_impl.D.183329._M_finish;
  _4 = this->D.183973._M_impl.D.183329._M_start;
  std::_Destroy<gimple**, gimple*> (_4, _3, _2);
  _5 = &this->D.183973;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<gimple**, gimple*> (_ZSt8_DestroyIPP6gimpleS1_EvT_S3_RSaIT0_E, funcdef_no=9546, decl_uid=227099, cgraph_uid=6178, symbol_order=6967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**, gimple*> (struct gimple * * __first, struct gimple * * __last, struct allocator & D.235456)
{
  <bb 2> :
  std::_Destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy<gimple**> (_ZSt8_DestroyIPP6gimpleEvT_S3_, funcdef_no=10142, decl_uid=235458, cgraph_uid=6774, symbol_order=7567)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**> (struct gimple * * __first, struct gimple * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<gimple**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP6gimpleEEvT_S5_, funcdef_no=10603, decl_uid=240418, cgraph_uid=7235, symbol_order=8028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<gimple**> (struct gimple * * D.243628, struct gimple * * D.243629)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=7540, decl_uid=183439, cgraph_uid=4172, symbol_order=4957)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.183329._M_end_of_storage;
  _2 = this->_M_impl.D.183329._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.183329._M_start;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implD2Ev, funcdef_no=6177, decl_uid=183376, cgraph_uid=3151, symbol_order=3902)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::vector (_ZNSt6vectorIP6gimpleSaIS1_EEC2Ev, funcdef_no=6181, decl_uid=183965, cgraph_uid=3157, symbol_order=3908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.183973;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=6179, decl_uid=183434, cgraph_uid=3154, symbol_order=3905)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implC2Ev, funcdef_no=7534, decl_uid=183326, cgraph_uid=4166, symbol_order=4951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.183329;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<gimple*>::allocator (_ZNSaIP6gimpleEC2Ev, funcdef_no=8345, decl_uid=181735, cgraph_uid=4977, symbol_order=5766)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleEC2Ev, funcdef_no=9150, decl_uid=181664, cgraph_uid=5782, symbol_order=6571)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8348, decl_uid=183276, cgraph_uid=4980, symbol_order=5769)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<tree_node*>::vector (_ZNSt6vectorIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6191, decl_uid=184879, cgraph_uid=3167, symbol_order=3919)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184887;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6189, decl_uid=184348, cgraph_uid=3164, symbol_order=3916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implC2Ev, funcdef_no=7543, decl_uid=184240, cgraph_uid=4175, symbol_order=4960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.184243;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<tree_node*>::allocator (_ZNSaIP9tree_nodeEC2Ev, funcdef_no=8355, decl_uid=180022, cgraph_uid=4987, symbol_order=5776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeEC2Ev, funcdef_no=9154, decl_uid=179951, cgraph_uid=5786, symbol_order=6575)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8358, decl_uid=184190, cgraph_uid=4990, symbol_order=5779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<breakpoint>::vector (_ZNSt6vectorI10breakpointSaIS0_EEC2Ev, funcdef_no=6211, decl_uid=186217, cgraph_uid=3187, symbol_order=3945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186225;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EEC2Ev, funcdef_no=6209, decl_uid=185675, cgraph_uid=3184, symbol_order=3942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implC2Ev, funcdef_no=7561, decl_uid=185567, cgraph_uid=4193, symbol_order=4978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<breakpoint>::allocator (this);
  _1 = &this->D.185570;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<breakpoint>::allocator (_ZNSaI10breakpointEC2Ev, funcdef_no=8375, decl_uid=185345, cgraph_uid=5007, symbol_order=5796)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointEC2Ev, funcdef_no=9162, decl_uid=185274, cgraph_uid=5794, symbol_order=6583)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI10breakpointSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8378, decl_uid=185517, cgraph_uid=5010, symbol_order=5799)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function CStack::CStack (_ZN6CStackC2Ev, funcdef_no=6228, decl_uid=186697, cgraph_uid=3204, symbol_order=3964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181559;
  std::stack<tree_node*>::stack<> (_1);
  return;

}



;; Function std::stack<tree_node*>::stack<> (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7582, decl_uid=186682, cgraph_uid=4214, symbol_order=4999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::deque (_1);
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::deque (_ZNSt5dequeIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=7580, decl_uid=181358, cgraph_uid=4211, symbol_order=4996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181366;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=8398, decl_uid=180777, cgraph_uid=5030, symbol_order=5819)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implC2Ev, funcdef_no=9170, decl_uid=180724, cgraph_uid=5802, symbol_order=6591)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.180727;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9881, decl_uid=180652, cgraph_uid=6513, symbol_order=7306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2Ev, funcdef_no=10405, decl_uid=180554, cgraph_uid=7037, symbol_order=7830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_initialize_mapEm, funcdef_no=9172, decl_uid=180590, cgraph_uid=5804, symbol_order=6593)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  union tree_node * * * D.257369;
  union tree_node * * * __nfinish;
  union tree_node * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.231632;
  const long unsigned int D.231633;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.231633 = _3;
  D.231632 = 8;
  _4 = std::max<long unsigned int> (&D.231632, &D.231633);
  _5 = *_4;
  this->_M_impl.D.180727._M_map_size = _5;
  D.231632 = {CLOBBER};
  D.231633 = {CLOBBER};
  _6 = this->_M_impl.D.180727._M_map_size;
  D.257369 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (this, _6);
  _7 = D.257369;
  this->_M_impl.D.180727._M_map = _7;
  _8 = this->_M_impl.D.180727._M_map;
  _9 = this->_M_impl.D.180727._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.180727._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.180727._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.180727._M_start._M_first;
  this->_M_impl.D.180727._M_start._M_cur = _20;
  _21 = this->_M_impl.D.180727._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.180727._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.180727._M_map_size;
  _16 = this->_M_impl.D.180727._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.180727._M_map = 0B;
  this->_M_impl.D.180727._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_allocate_mapEm, funcdef_no=9883, decl_uid=180583, cgraph_uid=6515, symbol_order=7308)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
union tree_node * * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  union tree_node * * * D.257375;
  struct _Map_alloc_type __map_alloc;
  union tree_node * * * D.257373;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  D.257375 = std::allocator_traits<std::allocator<tree_node**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.257373 = D.257375;

  <bb 4> :
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.257373;

  <bb 6> :
<L3>:
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::allocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE8allocateERS3_m, funcdef_no=10407, decl_uid=231667, cgraph_uid=7039, symbol_order=7832)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * std::allocator_traits<std::allocator<tree_node**> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * * D.257382;
  union tree_node * * * D.257380;

  <bb 2> :
  D.257382 = __gnu_cxx::new_allocator<tree_node**>::allocate (__a, __n, 0B);
  D.257380 = D.257382;

  <bb 3> :
<L0>:
  return D.257380;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE8allocateEmPKv, funcdef_no=10760, decl_uid=180179, cgraph_uid=7393, symbol_order=8188)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * __gnu_cxx::new_allocator<tree_node**>::allocate (struct new_allocator * const this, size_type __n, const void * D.244338)
{
  union tree_node * * * D.257393;
  union tree_node * * * D.257392;
  align_val_t __al;
  union tree_node * * * D.257390;
  bool retval.2151;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2151 = _4 != 0;
  if (retval.2151 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.257393 = operator new (_6);
  D.257390 = D.257393;

  <bb 7> :
<L6>:
  return D.257390;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP9tree_nodeE11_M_max_sizeEv, funcdef_no=10761, decl_uid=180206, cgraph_uid=7392, symbol_order=8187)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.257394;

  <bb 2> :
  D.257394 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.257394;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9884, decl_uid=180593, cgraph_uid=6516, symbol_order=7309)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * D.257396;
  union tree_node * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.257396 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.257396;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10408, decl_uid=180578, cgraph_uid=7040, symbol_order=7833)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (struct _Deque_base * const this)
{
  union tree_node * * D.257402;
  union tree_node * * D.257400;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.257402 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_2, _1);
  D.257400 = D.257402;

  <bb 3> :
<L0>:
  return D.257400;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9885, decl_uid=180459, cgraph_uid=6517, symbol_order=7310)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (struct _Deque_iterator * const this, union tree_node * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10409, decl_uid=180391, cgraph_uid=7041, symbol_order=7834)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ()
{
  size_t D.257403;

  <bb 2> :
  D.257403 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.257403;

}



;; Function CstmtStack::CstmtStack (_ZN10CstmtStackC2Ev, funcdef_no=6235, decl_uid=186903, cgraph_uid=3211, symbol_order=3972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183205;
  std::stack<gimple*>::stack<> (_1);
  return;

}



;; Function std::stack<gimple*>::stack<> (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7591, decl_uid=186888, cgraph_uid=4223, symbol_order=5008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::deque (_1);
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::deque (_ZNSt5dequeIP6gimpleSaIS1_EEC2Ev, funcdef_no=7589, decl_uid=183020, cgraph_uid=4220, symbol_order=5005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183028;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=8411, decl_uid=182472, cgraph_uid=5043, symbol_order=5832)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implC2Ev, funcdef_no=9180, decl_uid=182419, cgraph_uid=5812, symbol_order=6601)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.182422;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9894, decl_uid=182347, cgraph_uid=6526, symbol_order=7319)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2Ev, funcdef_no=10419, decl_uid=182249, cgraph_uid=7051, symbol_order=7844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_initialize_mapEm, funcdef_no=9182, decl_uid=182285, cgraph_uid=5814, symbol_order=6603)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  struct gimple * * * D.257406;
  struct gimple * * * __nfinish;
  struct gimple * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.231757;
  const long unsigned int D.231758;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.231758 = _3;
  D.231757 = 8;
  _4 = std::max<long unsigned int> (&D.231757, &D.231758);
  _5 = *_4;
  this->_M_impl.D.182422._M_map_size = _5;
  D.231757 = {CLOBBER};
  D.231758 = {CLOBBER};
  _6 = this->_M_impl.D.182422._M_map_size;
  D.257406 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (this, _6);
  _7 = D.257406;
  this->_M_impl.D.182422._M_map = _7;
  _8 = this->_M_impl.D.182422._M_map;
  _9 = this->_M_impl.D.182422._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.182422._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.182422._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.182422._M_start._M_first;
  this->_M_impl.D.182422._M_start._M_cur = _20;
  _21 = this->_M_impl.D.182422._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.182422._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.182422._M_map_size;
  _16 = this->_M_impl.D.182422._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.182422._M_map = 0B;
  this->_M_impl.D.182422._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_allocate_mapEm, funcdef_no=9896, decl_uid=182278, cgraph_uid=6528, symbol_order=7321)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
struct gimple * * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  struct gimple * * * D.257412;
  struct _Map_alloc_type __map_alloc;
  struct gimple * * * D.257410;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  D.257412 = std::allocator_traits<std::allocator<gimple**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.257410 = D.257412;

  <bb 4> :
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.257410;

  <bb 6> :
<L3>:
  std::allocator<gimple**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<gimple**> >::allocate (_ZNSt16allocator_traitsISaIPP6gimpleEE8allocateERS3_m, funcdef_no=10421, decl_uid=231792, cgraph_uid=7053, symbol_order=7846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * std::allocator_traits<std::allocator<gimple**> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * * D.257419;
  struct gimple * * * D.257417;

  <bb 2> :
  D.257419 = __gnu_cxx::new_allocator<gimple**>::allocate (__a, __n, 0B);
  D.257417 = D.257419;

  <bb 3> :
<L0>:
  return D.257417;

}



;; Function __gnu_cxx::new_allocator<gimple**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE8allocateEmPKv, funcdef_no=10765, decl_uid=181892, cgraph_uid=7398, symbol_order=8193)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * __gnu_cxx::new_allocator<gimple**>::allocate (struct new_allocator * const this, size_type __n, const void * D.244348)
{
  struct gimple * * * D.257430;
  struct gimple * * * D.257429;
  align_val_t __al;
  struct gimple * * * D.257427;
  bool retval.2152;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2152 = _4 != 0;
  if (retval.2152 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.257430 = operator new (_6);
  D.257427 = D.257430;

  <bb 7> :
<L6>:
  return D.257427;

}



;; Function __gnu_cxx::new_allocator<gimple**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP6gimpleE11_M_max_sizeEv, funcdef_no=10766, decl_uid=181919, cgraph_uid=7397, symbol_order=8192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.257431;

  <bb 2> :
  D.257431 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.257431;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9897, decl_uid=182288, cgraph_uid=6529, symbol_order=7322)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * D.257433;
  struct gimple * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.257433 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.257433;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10422, decl_uid=182273, cgraph_uid=7054, symbol_order=7847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (struct _Deque_base * const this)
{
  struct gimple * * D.257439;
  struct gimple * * D.257437;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.257439 = std::allocator_traits<std::allocator<gimple*> >::allocate (_2, _1);
  D.257437 = D.257439;

  <bb 3> :
<L0>:
  return D.257437;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9898, decl_uid=182168, cgraph_uid=6530, symbol_order=7323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (struct _Deque_iterator * const this, struct gimple * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10423, decl_uid=182102, cgraph_uid=7055, symbol_order=7848)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ()
{
  size_t D.257440;

  <bb 2> :
  D.257440 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.257440;

}



;; Function _GLOBAL__sub_I_gcc_plugin.c (_GLOBAL__sub_I_gcc_plugin.c, funcdef_no=11020, decl_uid=245899, cgraph_uid=7652, symbol_order=8852)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void _GLOBAL__sub_I_gcc_plugin.c ()
{
  <bb 2> :
  __static_initialization_and_destruction_0 (1, 65535);
  return;

}


