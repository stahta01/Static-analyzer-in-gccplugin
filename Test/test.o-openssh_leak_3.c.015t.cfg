
;; Function client_register_global_confirm (client_register_global_confirm, funcdef_no=25, decl_uid=3524, cgraph_uid=26, symbol_order=26)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 8 }
;; 3 succs { 4 8 }
;; 4 succs { 5 8 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
void client_register_global_confirm (void (*<T602>) (int, u_int32_t, void *) cb, void * ctx)
{
  static const char __func__[31] = "client_register_global_confirm";
  struct global_confirm * last_gc;
  struct global_confirm * gc;

  <bb 2> :
  _1 = global_confirms.tqh_last;
  _2 = MEM[(struct global_confirms *)_1].tqh_last;
  last_gc = *_2;
  if (last_gc != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _3 = last_gc->cb;
  if (cb == _3)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  _4 = last_gc->ctx;
  if (ctx == _4)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _5 = last_gc->ref_count;
  _6 = _5 + 1;
  last_gc->ref_count = _6;
  _7 = last_gc->ref_count;
  if (_7 > 9999)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  printf ("%s: last_gc->ref_count \n", &__func__);
  exit (1);

  <bb 7> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  gc = calloc (1, 40);
  gc->cb = cb;
  gc->ctx = ctx;
  gc->ref_count = 1;
  gc->entry.tqe_next = 0B;
  _8 = global_confirms.tqh_last;
  gc->entry.tqe_prev = _8;
  _9 = global_confirms.tqh_last;
  *_9 = gc;
  _10 = &gc->entry.tqe_next;
  global_confirms.tqh_last = _10;

  <bb 9> :
  return;

}



;; Function client_input_hostkeys (client_input_hostkeys, funcdef_no=27, decl_uid=3541, cgraph_uid=28, symbol_order=28)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 2
;;  header 17, latch 16
;;  depth 1, outer 0
;;  nodes: 17 16 14 15
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5
;; 2 succs { 3 4 }
;; 3 succs { 23 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 22 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 11 }
;; 10 succs { 22 }
;; 11 succs { 12 13 }
;; 12 succs { }
;; 13 succs { 17 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 14 18 }
;; 18 succs { 19 20 }
;; 19 succs { 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 1 }
int client_input_hostkeys (int argc, char * * argv)
{
  int i;
  static const char __func__[22] = "client_input_hostkeys";
  struct hostkeys_update_ctx * ctx;
  static int hostkeys_seen = 0;
  char * fp;
  int r;
  struct sshkey * * tmp;
  struct sshkey * key;
  struct sshbuf * buf;
  size_t len;
  size_t i;
  const u_char * blob;
  int D.3591;

  <bb 2> :
  blob = 0B;
  len = 0;
  buf = 0B;
  key = 0B;
  ctx = 0B;
  ctx = calloc (1, 64);
  if (argc == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3591 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 4> :
  i = 1;
  goto <bb 8>; [INV]

  <bb 5> :
  _1 = (long unsigned int) i;
  _2 = _1 * 8;
  _3 = argv + _2;
  _4 = *_3;
  _5 = *_4;
  if (_5 != 107)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _6 = (long unsigned int) i;
  _7 = _6 * 8;
  _8 = argv + _7;
  _9 = *_8;
  printf ("parse key %s error\n", _9);
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 7> :
  _10 = ctx->nkeys;
  _11 = _10 + 1;
  ctx->nkeys = _11;
  i = i + 1;

  <bb 8> :
  if (i < argc)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _12 = ctx->nkeys;
  if (_12 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  printf ("%s: server sent no hostkeys\n", &__func__);
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 11> :
  _13 = ctx->nkeys;
  _14 = calloc (_13, 4);
  ctx->keys_seen = _14;
  _15 = ctx->keys_seen;
  if (_15 == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  printf ("%s: calloc failed\n", &__func__);
  exit (1);

  <bb 13> :
  ctx->nnew = 0;
  i = 0;
  goto <bb 17>; [INV]

  <bb 14> :
  _16 = rand ();
  _17 = _16 % 2;
  _18 = _17 == 1;
  _19 = ctx->keys_seen;
  _20 = i * 4;
  _21 = _19 + _20;
  _22 = (int) _18;
  *_21 = _22;
  _23 = ctx->keys_seen;
  _24 = i * 4;
  _25 = _23 + _24;
  _26 = *_25;
  if (_26 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _27 = ctx->nnew;
  _28 = _27 + 1;
  ctx->nnew = _28;

  <bb 16> :
  i = i + 1;

  <bb 17> :
  _29 = ctx->nkeys;
  if (i < _29)
    goto <bb 14>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _30 = ctx->nkeys;
  _31 = ctx->nnew;
  _32 = _30 - _31;
  _33 = ctx->nnew;
  _34 = ctx->nkeys;
  printf ("%zu keys from server: %zu new, %zu retained. \n", _34, _33, _32);
  _35 = ctx->nnew;
  if (_35 == 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  update_known_hosts (ctx);
  goto <bb 22>; [INV]

  <bb 20> :
  _36 = ctx->nnew;
  if (_36 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _37 = ctx->nnew;
  printf ("asking server to prove ownership for %zu keys\n", _37);
  client_register_global_confirm (client_global_hostkeys_private_confirm, ctx);
  ctx = 0B;

  <bb 22> :
out:
  hostkeys_update_ctx_free (ctx);
  D.3591 = 1;

  <bb 23> :
  return D.3591;

}



;; Function client_global_hostkeys_private_confirm (client_global_hostkeys_private_confirm, funcdef_no=24, decl_uid=3508, cgraph_uid=25, symbol_order=25)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 8 11 9 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { 16 }
;; 6 succs { 13 }
;; 7 succs { 8 9 }
;; 8 succs { 12 }
;; 9 succs { 10 11 }
;; 10 succs { 15 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 7 14 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
void client_global_hostkeys_private_confirm (int type, u_int32_t seq, void * _ctx)
{
  static const char __func__[39] = "client_global_hostkeys_private_confirm";
  size_t siglen;
  const u_char * sig;
  int r;
  size_t ndone;
  size_t i;
  struct hostkeys_update_ctx * ctx;

  <bb 2> :
  ctx = _ctx;
  _1 = ctx->nnew;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  printf ("%s: ctx->nnew == 0\n", &__func__);
  exit (1);

  <bb 4> :
  _2 = rand ();
  _3 = _2 % 2;
  if (_3 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_puts (&"Server failed to confirm ownership of private host keys"[0]);
  hostkeys_update_ctx_free (ctx);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 6> :
  i = 0;
  ndone = i;
  goto <bb 13>; [INV]

  <bb 7> :
  _4 = ctx->keys_seen;
  _5 = i * 4;
  _6 = _4 + _5;
  _7 = *_6;
  if (_7 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  // predicted unlikely by continue predictor.
  goto <bb 12>; [INV]

  <bb 9> :
  _8 = rand ();
  _9 = _8 % 2;
  if (_9 == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  // predicted unlikely by goto predictor.
  goto <bb 15>; [INV]

  <bb 11> :
  ndone = ndone + 1;

  <bb 12> :
  i = i + 1;

  <bb 13> :
  _10 = ctx->nkeys;
  if (i < _10)
    goto <bb 7>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  update_known_hosts (ctx);

  <bb 15> :
out:
  hostkeys_update_ctx_free (ctx);

  <bb 16> :
  return;

}



;; Function update_known_hosts (update_known_hosts, funcdef_no=23, decl_uid=3494, cgraph_uid=24, symbol_order=24)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 1 }
void update_known_hosts (struct hostkeys_update_ctx * ctx)
{
  size_t i;
  char * response;
  char * fp;
  int was_raw;
  int r;

  <bb 2> :
  was_raw = 0;
  i = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = ctx->keys_seen;
  _2 = i * 4;
  _3 = _1 + _2;
  _4 = *_3;
  if (_4 != 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by continue predictor.

  <bb 5> :
  i = i + 1;

  <bb 6> :
  _5 = ctx->nkeys;
  if (i < _5)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}



;; Function hostkeys_update_ctx_free (hostkeys_update_ctx_free, funcdef_no=22, decl_uid=3490, cgraph_uid=23, symbol_order=23)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void hostkeys_update_ctx_free (struct hostkeys_update_ctx * ctx)
{
  size_t i;

  <bb 2> :
  if (ctx == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = ctx->keys_seen;
  free (_1);
  free (ctx);

  <bb 5> :
  return;

}



;; Function main (main, funcdef_no=28, decl_uid=3569, cgraph_uid=29, symbol_order=29)

Removing basic block 9
Removing basic block 5
Merging blocks 8 and 10
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 2
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 1 }
int main (int argc, char * * argv)
{
  int D.3620;

  <bb 2> :
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
  goto <bb 4>; [INV]

  <bb 3> :
  client_input_hostkeys (argc, argv);

  <bb 4> :
  _3 = rand ();
  _4 = _3 % 2;
  if (_4 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  client_global_request_reply (0, 0, 0B);

  <bb 6> :
  _5 = global_confirms.tqh_first;
  if (_5 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.3620 = 0;
  return D.3620;

}



;; Function client_global_request_reply (client_global_request_reply, funcdef_no=26, decl_uid=3534, cgraph_uid=27, symbol_order=27)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 4 }
;; 3 succs { 12 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 11 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
int client_global_request_reply (int type, u_int32_t seq, void * ctxt)
{
  struct global_confirm * gc;
  int D.3624;

  <bb 2> :
  gc = global_confirms.tqh_first;
  if (gc == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3624 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 4> :
  _1 = gc->cb;
  if (_1 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = gc->cb;
  _3 = gc->ctx;
  _2 (type, seq, _3);

  <bb 6> :
  _4 = gc->ref_count;
  _5 = _4 + -1;
  gc->ref_count = _5;
  _6 = gc->ref_count;
  if (_6 <= 0)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 7> :
  _7 = gc->entry.tqe_next;
  if (_7 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _8 = gc->entry.tqe_next;
  _9 = gc->entry.tqe_prev;
  _8->entry.tqe_prev = _9;
  goto <bb 10>; [INV]

  <bb 9> :
  _10 = gc->entry.tqe_prev;
  global_confirms.tqh_last = _10;

  <bb 10> :
  _11 = gc->entry.tqe_prev;
  _12 = gc->entry.tqe_next;
  *_11 = _12;
  free (gc);

  <bb 11> :
  D.3624 = 0;

  <bb 12> :
  return D.3624;

}


