digraph "test.o-binutils_uaf_1.c.015t.cfg" {
overlap=false;
subgraph "cluster_discard_cleanups" {
	style="dashed";
	color="black";
	label="discard_cleanups ()";
	fn_22_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_22_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_22_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|discard_my_cleanups\ (&cleanup_chain,\ old_chain);\l\
|return;\l\
}"];

	fn_22_basic_block_0:s -> fn_22_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_0:s -> fn_22_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_discard_final_cleanups" {
	style="dashed";
	color="black";
	label="discard_final_cleanups ()";
	fn_23_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_23_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_23_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|discard_my_cleanups\ (&final_cleanup_chain,\ old_chain);\l\
|return;\l\
}"];

	fn_23_basic_block_0:s -> fn_23_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_2:s -> fn_23_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_0:s -> fn_23_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_discard_my_cleanups" {
	style="dashed";
	color="black";
	label="discard_my_cleanups ()";
	subgraph cluster_24_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_24_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|ptr\ =\ *pmy_chain;\l\
|if\ (ptr\ !=\ old_chain)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_24_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_1\ =\ ptr-\>next;\l\
|*pmy_chain\ =\ _1;\l\
|_2\ =\ ptr-\>free_arg;\l\
|if\ (_2\ !=\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_24_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_3\ =\ ptr-\>free_arg;\l\
|_4\ =\ ptr-\>arg;\l\
|_3\ (_4);\l\
}"];

	fn_24_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|free\ (ptr);\l\
}"];

	}
	fn_24_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_24_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_24_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_24_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|_5\ =\ ptr-\>arg;\l\
|printf\ (\"freearg:\ %x\\n\",\ _5);\l\
|return;\l\
}"];

	fn_24_basic_block_0:s -> fn_24_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_2:s -> fn_24_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_3:s -> fn_24_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_3:s -> fn_24_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_4:s -> fn_24_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_5:s -> fn_24_basic_block_6:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_24_basic_block_6:s -> fn_24_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_6:s -> fn_24_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_7:s -> fn_24_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_0:s -> fn_24_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_do_cleanups" {
	style="dashed";
	color="black";
	label="do_cleanups ()";
	fn_26_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_26_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_26_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|do_my_cleanups\ (&cleanup_chain,\ old_chain);\l\
|return;\l\
}"];

	fn_26_basic_block_0:s -> fn_26_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_0:s -> fn_26_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_do_my_cleanups" {
	style="dashed";
	color="black";
	label="do_my_cleanups ()";
	subgraph cluster_25_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_25_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|ptr\ =\ *pmy_chain;\l\
|if\ (ptr\ !=\ old_chain)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_25_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_1\ =\ ptr-\>next;\l\
|*pmy_chain\ =\ _1;\l\
|_2\ =\ ptr-\>function;\l\
|_3\ =\ ptr-\>arg;\l\
|_2\ (_3);\l\
|__builtin_puts\ (&\"cleanup!!!!!\ =========\"[0]);\l\
|_4\ =\ ptr-\>arg;\l\
|printf\ (\"%x\\n\",\ _4);\l\
|_5\ =\ ptr-\>free_arg;\l\
|if\ (_5\ !=\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_25_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_6\ =\ ptr-\>free_arg;\l\
|_7\ =\ ptr-\>arg;\l\
|_6\ (_7);\l\
}"];

	fn_25_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|free\ (ptr);\l\
}"];

	}
	fn_25_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_25_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_25_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_25_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|return;\l\
}"];

	fn_25_basic_block_0:s -> fn_25_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_2:s -> fn_25_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_3:s -> fn_25_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_3:s -> fn_25_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_4:s -> fn_25_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_5:s -> fn_25_basic_block_6:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_25_basic_block_6:s -> fn_25_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_6:s -> fn_25_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_7:s -> fn_25_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_0:s -> fn_25_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_make_cleanup" {
	style="dashed";
	color="black";
	label="make_cleanup ()";
	fn_29_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_29_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_29_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|D.3316\ =\ make_my_cleanup\ (&cleanup_chain,\ function,\ arg);\l\
|return\ D.3316;\l\
}"];

	fn_29_basic_block_0:s -> fn_29_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_2:s -> fn_29_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_0:s -> fn_29_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_make_my_cleanup" {
	style="dashed";
	color="black";
	label="make_my_cleanup ()";
	fn_28_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_28_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_28_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|D.3318\ =\ make_my_cleanup2\ (pmy_chain,\ function,\ arg,\ 0B);\l\
|return\ D.3318;\l\
}"];

	fn_28_basic_block_0:s -> fn_28_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_2:s -> fn_28_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_0:s -> fn_28_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_make_my_cleanup2" {
	style="dashed";
	color="black";
	label="make_my_cleanup2 ()";
	fn_27_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_27_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_27_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|new\ =\ malloc\ (32);\l\
|old_chain\ =\ *pmy_chain;\l\
|_1\ =\ *pmy_chain;\l\
|new-\>next\ =\ _1;\l\
|new-\>function\ =\ function;\l\
|new-\>free_arg\ =\ free_arg;\l\
|new-\>arg\ =\ arg;\l\
|*pmy_chain\ =\ new;\l\
|if\ (old_chain\ ==\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_27_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|exit\ (1);\l\
}"];

	fn_27_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|D.3322\ =\ old_chain;\l\
|return\ D.3322;\l\
}"];

	fn_27_basic_block_0:s -> fn_27_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_4:s -> fn_27_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_0:s -> fn_27_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_getopt" {
	style="dashed";
	color="black";
	label="getopt ()";
	fn_32_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_32_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_32_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ *optargv;\l\
|if\ (_1\ ==\ 48)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_32_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|D.3326\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_32_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|D.3326\ =\ 1;\l\
}"];

	fn_32_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|return\ D.3326;\l\
}"];

	fn_32_basic_block_0:s -> fn_32_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_2:s -> fn_32_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_2:s -> fn_32_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_3:s -> fn_32_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_4:s -> fn_32_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_5:s -> fn_32_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_0:s -> fn_32_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	subgraph cluster_33_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_33_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_3\ =\ rand\ ();\l\
|_4\ =\ _3\ %\ 2;\l\
|if\ (_4\ ==\ 1)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_33_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|string\ =\ \"rv32ix_x\";\l\
|riscv_set_arch\ (string);\l\
}"];

	}
	fn_33_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_33_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_33_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ time\ (0B);\l\
|_2\ =\ (unsigned\ int)\ _1;\l\
|srand\ (_2);\l\
goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_33_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|D.3328\ =\ 0;\l\
|return\ D.3328;\l\
}"];

	fn_33_basic_block_0:s -> fn_33_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_2:s -> fn_33_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_3:s -> fn_33_basic_block_4:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_33_basic_block_4:s -> fn_33_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_4:s -> fn_33_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_5:s -> fn_33_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_0:s -> fn_33_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_riscv_set_arch" {
	style="dashed";
	color="black";
	label="riscv_set_arch ()";
	subgraph cluster_31_2 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 2";
	labeljust=l;
	penwidth=2;
	subgraph cluster_31_3 {
	style="filled";
	color="darkgreen";
	fillcolor="grey77";
	label="loop 3";
	labeljust=l;
	penwidth=2;
	fn_31_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|q\ =\ q\ +\ 1;\l\
|_8\ =\ *q;\l\
|if\ (_8\ !=\ 0)\l\
\ \ goto\ \<bb\ 15\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_31_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|_9\ =\ *q;\l\
|if\ (_9\ !=\ 95)\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	}
	fn_31_basic_block_26 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 26\>:\l\
|\<L35\>:\l\
|_19\ =\ *p;\l\
|if\ (_19\ !=\ 0)\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 27\>;\ [INV]\l\
}"];

	fn_31_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|_7\ =\ *p;\l\
|if\ (_7\ ==\ 120)\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 19\>;\ [INV]\l\
}"];

	fn_31_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|subset\ =\ strdup\ (p);\l\
|q\ =\ subset;\l\
}"];

	fn_31_basic_block_19 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 19\>:\l\
|_11\ =\ *p;\l\
|if\ (_11\ ==\ 95)\l\
\ \ goto\ \<bb\ 20\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 21\>;\ [INV]\l\
}"];

	fn_31_basic_block_20 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 20\>:\l\
|p\ =\ p\ +\ 1;\l\
goto\ \<bb\ 26\>;\ [INV]\l\
}"];

	fn_31_basic_block_21 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 21\>:\l\
|_12\ =\ *p;\l\
|_13\ =\ (int)\ _12;\l\
|all_subsets\ =\ strchr\ (all_subsets,\ _13);\l\
|if\ (all_subsets\ !=\ 0B)\l\
\ \ goto\ \<bb\ 22\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 23\>;\ [INV]\l\
}"];

	fn_31_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 16\>:\l\
|*q\ =\ 0;\l\
|if\ (extension\ !=\ 0B)\l\
\ \ goto\ \<bb\ 17\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 18\>;\ [INV]\l\
}"];

	fn_31_basic_block_22 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 22\>:\l\
|_14\ =\ *p;\l\
|subset[0]\ =\ _14;\l\
|subset[1]\ =\ 0;\l\
|riscv_add_subset\ (&subset);\l\
|all_subsets\ =\ all_subsets\ +\ 1;\l\
|p\ =\ p\ +\ 1;\l\
|subset\ =\ \{CLOBBER\};\l\
goto\ \<bb\ 26\>;\ [INV]\l\
}"];

	fn_31_basic_block_23 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 23\>:\l\
|_15\ =\ *p;\l\
|if\ (_15\ ==\ 113)\l\
\ \ goto\ \<bb\ 24\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 25\>;\ [INV]\l\
}"];

	fn_31_basic_block_18 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 18\>:\l\
|extension\ =\ subset;\l\
|riscv_add_subset\ (subset);\l\
|_10\ =\ strlen\ (subset);\l\
|p\ =\ p\ +\ _10;\l\
|free\ (subset);\l\
goto\ \<bb\ 26\>;\ [INV]\l\
}"];

	fn_31_basic_block_24 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 24\>:\l\
|_16\ =\ *p;\l\
|subset[0]\ =\ _16;\l\
|subset[1]\ =\ 0;\l\
|riscv_add_subset\ (&subset);\l\
|p\ =\ p\ +\ 1;\l\
|subset\ =\ \{CLOBBER\};\l\
goto\ \<bb\ 26\>;\ [INV]\l\
}"];

	}
	subgraph cluster_31_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_31_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|_6\ =\ *all_subsets;\l\
|if\ (_6\ !=\ 99)\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 26\>;\ [INV]\l\
}"];

	fn_31_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|_5\ =\ *all_subsets;\l\
|subset[0]\ =\ _5;\l\
|subset[1]\ =\ 0;\l\
|riscv_add_subset\ (&subset);\l\
|subset\ =\ \{CLOBBER\};\l\
|all_subsets\ =\ all_subsets\ +\ 1;\l\
}"];

	}
	fn_31_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_31_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_31_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|all_subsets\ =\ \"imafdc\";\l\
|extension\ =\ 0B;\l\
|p\ =\ s;\l\
|_1\ =\ strncmp\ (p,\ \"rv32\",\ 4);\l\
|if\ (_1\ ==\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_31_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|xlen\ =\ 32;\l\
|p\ =\ p\ +\ 4;\l\
goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_31_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_2\ =\ strncmp\ (p,\ \"rv64\",\ 4);\l\
|if\ (_2\ ==\ 0)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_31_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|xlen\ =\ 64;\l\
|p\ =\ p\ +\ 4;\l\
goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_31_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|printf\ (\"-march=%s:\ ISA\ string\ must\ begin\ with\ rv32\ or\ rv64\",\ s);\l\
|exit\ (1);\l\
}"];

	fn_31_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|_3\ =\ *p;\l\
|_4\ =\ (int)\ _3;\l\
|switch\ (_4)\ \<default:\ \<L11\>\ [INV],\ case\ 103:\ \<L7\>\ [INV],\ case\ 105:\ \<L35\>\ [INV]\>\l\
}"];

	fn_31_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|\<L7\>:\l\
|p\ =\ p\ +\ 1;\l\
goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_31_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|\<L11\>:\l\
|printf\ (\"-march=%s:\ first\ ISA\ subset\ must\ be\ `i\\'\ or\ `g\\'\",\ s);\l\
|exit\ (1);\l\
}"];

	fn_31_basic_block_17 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 17\>:\l\
|printf\ (\"-march=%s:\ only\ one\ non-standard\ extension\ is\ supported\",\ extension);\l\
|exit\ (1);\l\
}"];

	fn_31_basic_block_25 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 25\>:\l\
|_17\ =\ *p;\l\
|_18\ =\ (int)\ _17;\l\
|printf\ (\"-march=%s:\ unsupported\ ISA\ subset\ `%c\\'\",\ _18);\l\
|exit\ (1);\l\
}"];

	fn_31_basic_block_27 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 27\>:\l\
|return;\l\
}"];

	fn_31_basic_block_0:s -> fn_31_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_2:s -> fn_31_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_2:s -> fn_31_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_3:s -> fn_31_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_4:s -> fn_31_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_4:s -> fn_31_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_5:s -> fn_31_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_7:s -> fn_31_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_7:s -> fn_31_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_7:s -> fn_31_basic_block_26:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_8:s -> fn_31_basic_block_10:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_9:s -> fn_31_basic_block_10:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_31_basic_block_10:s -> fn_31_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_10:s -> fn_31_basic_block_26:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_12:s -> fn_31_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_12:s -> fn_31_basic_block_19:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_13:s -> fn_31_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_14:s -> fn_31_basic_block_15:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_14:s -> fn_31_basic_block_16:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_15:s -> fn_31_basic_block_14:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_31_basic_block_15:s -> fn_31_basic_block_16:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_16:s -> fn_31_basic_block_17:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_16:s -> fn_31_basic_block_18:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_18:s -> fn_31_basic_block_26:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_31_basic_block_19:s -> fn_31_basic_block_20:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_19:s -> fn_31_basic_block_21:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_20:s -> fn_31_basic_block_26:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_31_basic_block_21:s -> fn_31_basic_block_22:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_21:s -> fn_31_basic_block_23:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_22:s -> fn_31_basic_block_26:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_31_basic_block_23:s -> fn_31_basic_block_24:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_23:s -> fn_31_basic_block_25:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_24:s -> fn_31_basic_block_26:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_31_basic_block_26:s -> fn_31_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_26:s -> fn_31_basic_block_27:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_27:s -> fn_31_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_0:s -> fn_31_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_riscv_add_subset" {
	style="dashed";
	color="black";
	label="riscv_add_subset ()";
	fn_30_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_30_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_30_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|c\ =\ *subset;\l\
|s\ =\ malloc\ (16);\l\
|_1\ =\ strdup\ (subset);\l\
|s-\>name\ =\ _1;\l\
|riscv_subsets.0_2\ =\ riscv_subsets;\l\
|s-\>next\ =\ riscv_subsets.0_2;\l\
|riscv_subsets\ =\ s;\l\
|return;\l\
}"];

	fn_30_basic_block_0:s -> fn_30_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_2:s -> fn_30_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_0:s -> fn_30_basic_block_1:n [style="invis",constraint=true];
}
}
