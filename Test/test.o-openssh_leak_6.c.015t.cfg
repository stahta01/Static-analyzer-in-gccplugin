
;; Function sshkey_type_plain (sshkey_type_plain, funcdef_no=22, decl_uid=3474, cgraph_uid=23, symbol_order=22)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 7 3 4 5 6 }
;; 3 succs { 8 }
;; 4 succs { 8 }
;; 5 succs { 8 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int sshkey_type_plain (int type)
{
  int D.3563;

  <bb 2> :
  switch (type) <default: <L6> [INV], case 5: <L0> [INV], case 6: <L2> [INV], case 7: <L4> [INV], case 8: <L5> [INV], case 9: <L0> [INV], case 10: <L2> [INV]>

  <bb 3> :
<L0>:
  D.3563 = 1;
  goto <bb 8>; [INV]

  <bb 4> :
<L2>:
  D.3563 = 2;
  goto <bb 8>; [INV]

  <bb 5> :
<L4>:
  D.3563 = 3;
  goto <bb 8>; [INV]

  <bb 6> :
<L5>:
  D.3563 = 4;
  goto <bb 8>; [INV]

  <bb 7> :
<L6>:
  D.3563 = type;

  <bb 8> :
  return D.3563;

}



;; Function sshbuf_len (sshbuf_len, funcdef_no=23, decl_uid=3485, cgraph_uid=24, symbol_order=23)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
size_t sshbuf_len (const struct sshbuf * buf)
{
  size_t D.3565;

  <bb 2> :
  _1 = buf->size;
  _2 = buf->off;
  D.3565 = _1 - _2;
  return D.3565;

}



;; Function sshbuf_ptr (sshbuf_ptr, funcdef_no=24, decl_uid=3488, cgraph_uid=25, symbol_order=24)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
const u_char * sshbuf_ptr (const struct sshbuf * buf)
{
  const u_char * D.3567;

  <bb 2> :
  _1 = buf->cd;
  _2 = buf->off;
  D.3567 = _1 + _2;
  return D.3567;

}



;; Function sshbuf_from (sshbuf_from, funcdef_no=25, decl_uid=3492, cgraph_uid=26, symbol_order=25)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct sshbuf * sshbuf_from (const void * blob, size_t len)
{
  struct sshbuf * ret;
  struct sshbuf * D.3572;

  <bb 2> :
  _1 = blob == 0B;
  _2 = len > 134217728;
  _3 = _1 | _2;
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  ret = calloc (72, 1);
  if (ret == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.3572 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  ret->max_size = len;
  _4 = ret->max_size;
  ret->size = _4;
  _5 = ret->size;
  ret->alloc = _5;
  ret->readonly = 1;
  ret->refcount = 1;
  ret->parent = 0B;
  ret->cd = blob;
  ret->d = 0B;
  D.3572 = ret;

  <bb 6> :
  return D.3572;

}



;; Function sshbuf_get_string_direct (sshbuf_get_string_direct, funcdef_no=26, decl_uid=3498, cgraph_uid=27, symbol_order=26)

Merging blocks 13 and 14
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 13 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
int sshbuf_get_string_direct (struct sshbuf * buf, const u_char * * valp, size_t * lenp)
{
  int r;
  const u_char * p;
  size_t len;
  int D.3580;

  <bb 2> :
  if (valp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  *valp = 0B;

  <bb 4> :
  if (lenp != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  *lenp = 0;

  <bb 6> :
  r = sshbuf_peek_string_direct (buf, &p, &len);
  if (r < 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.3580 = r;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 8> :
  if (valp != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  p.0_1 = p;
  *valp = p.0_1;

  <bb 10> :
  if (lenp != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  len.1_2 = len;
  *lenp = len.1_2;

  <bb 12> :
  D.3580 = 0;

  <bb 13> :
  len = {CLOBBER};
  p = {CLOBBER};
  return D.3580;

}



;; Function sshbuf_peek_string_direct (sshbuf_peek_string_direct, funcdef_no=27, decl_uid=3503, cgraph_uid=28, symbol_order=27)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 15 }
;; 8 succs { 9 10 }
;; 9 succs { 15 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
int sshbuf_peek_string_direct (const struct sshbuf * buf, const u_char * * valp, size_t * lenp)
{
  static const char __func__[26] = "sshbuf_peek_string_direct";
  const u_char * p;
  u_int32_t len;
  int D.3593;

  <bb 2> :
  p = sshbuf_ptr (buf);
  if (valp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  *valp = 0B;

  <bb 4> :
  if (lenp != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  *lenp = 0;

  <bb 6> :
  _1 = sshbuf_len (buf);
  if (_1 <= 3)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  printf ("%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 108, &__func__);
  printf ("SSH_ERR_MESSAGE_INCOMPLETE");
  __builtin_putchar (10);
  stdout.2_2 = stdout;
  fflush (stdout.2_2);
  D.3593 = -3;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 8> :
  len = 15;
  if (len > 134217724)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  printf ("%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 113, &__func__);
  printf ("SSH_ERR_STRING_TOO_LARGE");
  __builtin_putchar (10);
  stdout.3_3 = stdout;
  fflush (stdout.3_3);
  D.3593 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 10> :
  if (valp != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _4 = p + 4;
  *valp = _4;

  <bb 12> :
  if (lenp != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _5 = (long unsigned int) len;
  *lenp = _5;

  <bb 14> :
  D.3593 = 0;

  <bb 15> :
  return D.3593;

}



;; Function sshbuf_get_cstring (sshbuf_get_cstring, funcdef_no=28, decl_uid=3520, cgraph_uid=29, symbol_order=28)

Merging blocks 17 and 18
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 17 }
;; 8 succs { 9 10 }
;; 9 succs { 17 }
;; 10 succs { 11 14 }
;; 11 succs { 12 13 }
;; 12 succs { 17 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
int sshbuf_get_cstring (struct sshbuf * buf, char * * valp, size_t * lenp)
{
  static const char __func__[19] = "sshbuf_get_cstring";
  int r;
  const u_char * z;
  const u_char * p;
  size_t len;
  int D.3607;

  <bb 2> :
  if (valp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  *valp = 0B;

  <bb 4> :
  if (lenp != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  *lenp = 0;

  <bb 6> :
  r = sshbuf_peek_string_direct (buf, &p, &len);
  if (r != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.3607 = r;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 8> :
  r = sshbuf_get_string_direct (buf, 0B, 0B);
  if (r != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.3607 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 10> :
  if (valp != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  len.4_1 = len;
  _2 = len.4_1 + 1;
  _3 = malloc (_2);
  *valp = _3;
  _4 = *valp;
  if (_4 == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  printf ("%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 141, &__func__);
  printf ("SSH_ERR_ALLOC_FAIL");
  __builtin_putchar (10);
  stdout.5_5 = stdout;
  fflush (stdout.5_5);
  D.3607 = -2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 13> :
  len.6_6 = len;
  p.7_7 = p;
  _8 = *valp;
  memcpy (_8, p.7_7, len.6_6);
  _9 = *valp;
  len.8_10 = len;
  _11 = _9 + len.8_10;
  *_11 = 0;

  <bb 14> :
  if (lenp != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  len.9_12 = len;
  *lenp = len.9_12;

  <bb 16> :
  D.3607 = 0;

  <bb 17> :
  len = {CLOBBER};
  p = {CLOBBER};
  return D.3607;

}



;; Function ssh_ed25519_verify (ssh_ed25519_verify, funcdef_no=29, decl_uid=3535, cgraph_uid=30, symbol_order=29)

Merging blocks 15 and 16
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 15 }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 14 }
;; 7 succs { 8 9 }
;; 8 succs { 14 }
;; 9 succs { 10 11 }
;; 10 succs { 14 }
;; 11 succs { 12 13 }
;; 12 succs { 15 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
int ssh_ed25519_verify (const struct sshkey * key, const u_char * signature, size_t signaturelen, const u_char * data, size_t datalen)
{
  int ret;
  int r;
  long long unsigned int mlen;
  long long unsigned int smlen;
  size_t len;
  u_char * m;
  u_char * sm;
  const u_char * sigblob;
  char * ktype;
  struct sshbuf * b;
  int D.3620;

  <bb 2> :
  b = 0B;
  ktype = 0B;
  sm = 0B;
  m = 0B;
  smlen = 0;
  mlen = 0;
  b = sshbuf_from (signature, signaturelen);
  if (b == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3620 = -2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 4> :
  r = sshbuf_get_cstring (b, &ktype, 0B);
  if (r != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  r = sshbuf_get_string_direct (b, &sigblob, &len);
  if (r != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by goto predictor.
  goto <bb 14>; [INV]

  <bb 7> :
  ktype.10_1 = ktype;
  _2 = strcmp ("ssh-ed25519", ktype.10_1);
  if (_2 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  r = -13;
  // predicted unlikely by goto predictor.
  goto <bb 14>; [INV]

  <bb 9> :
  len.11_3 = len;
  if (len.11_3 > 64)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  r = -4;
  // predicted unlikely by goto predictor.
  goto <bb 14>; [INV]

  <bb 11> :
  len.12_4 = len;
  _5 = 15 - len.12_4;
  if (datalen >= _5)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.3620 = -10;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 13> :
  r = 0;

  <bb 14> :
out:
  free (b);
  ktype.13_6 = ktype;
  free (ktype.13_6);
  D.3620 = r;

  <bb 15> :
  ktype = {CLOBBER};
  sigblob = {CLOBBER};
  len = {CLOBBER};
  return D.3620;

}



;; Function main (main, funcdef_no=30, decl_uid=3551, cgraph_uid=31, symbol_order=30)

Removing basic block 6
Merging blocks 4 and 5
Merging blocks 4 and 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
int main (int argc, char * * argv)
{
  size_t datalen;
  size_t siglen;
  char * data;
  char * sign;
  struct sshkey key;
  struct sshbuf b;
  int D.3634;

  <bb 2> :
  sign = "key:ssh-ed25519";
  siglen = strlen (sign);
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
  if (argc == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *argv;
  printf ("no data %s\n", _3);
  exit (1);

  <bb 4> :
  data = MEM[(char * *)argv + 8B];
  datalen = strlen (data);
  ssh_ed25519_verify (&key, sign, siglen, data, datalen);
  D.3634 = 0;
  b = {CLOBBER};
  key = {CLOBBER};
  return D.3634;

}


