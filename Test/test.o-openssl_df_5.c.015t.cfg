
;; Function lh_CONF_VALUE_retrieve (lh_CONF_VALUE_retrieve, funcdef_no=23, decl_uid=3640, cgraph_uid=24, symbol_order=23)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct CONF_VALUE * lh_CONF_VALUE_retrieve (struct OPENSSL_LHASH * lh, const void * data)
{
  void * ret;
  struct OPENSSL_LH_NODE * * rn;
  long unsigned int hash;
  struct CONF_VALUE * D.3733;

  <bb 2> :
  lh->error = 0;
  rn = getrn (lh, data, &hash);
  _1 = *rn;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = lh->num_retrieve_miss;
  _3 = _2 + 1;
  lh->num_retrieve_miss = _3;
  D.3733 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = *rn;
  ret = _4->data;
  _5 = lh->num_retrieve;
  _6 = _5 + 1;
  lh->num_retrieve = _6;
  D.3733 = ret;

  <bb 5> :
  hash = {CLOBBER};
  return D.3733;

}



;; Function getrn (getrn, funcdef_no=22, decl_uid=3627, cgraph_uid=23, symbol_order=22)

Merging blocks 11 and 12
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 6 8 7 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 11 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 5 11 }
;; 11 succs { 1 }
struct OPENSSL_LH_NODE * * getrn (struct OPENSSL_LHASH * lh, const void * data, long unsigned int * rhash)
{
  int (*OPENSSL_LH_COMPFUNC) (const void *, const void *) cf;
  long unsigned int nn;
  long unsigned int hash;
  struct OPENSSL_LH_NODE * n1;
  struct OPENSSL_LH_NODE * * ret;
  struct OPENSSL_LH_NODE * * D.3741;

  <bb 2> :
  _1 = lh->hash;
  hash = _1 (data);
  _2 = lh->num_hash_calls;
  _3 = _2 + 1;
  lh->num_hash_calls = _3;
  *rhash = hash;
  _4 = lh->pmax;
  _5 = (long unsigned int) _4;
  nn = hash % _5;
  _6 = lh->p;
  _7 = (long unsigned int) _6;
  if (nn < _7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _8 = lh->num_alloc_nodes;
  _9 = (long unsigned int) _8;
  nn = hash % _9;

  <bb 4> :
  cf = lh->comp;
  _10 = lh->b;
  _11 = (int) nn;
  _12 = (long unsigned int) _11;
  _13 = _12 * 8;
  ret = _10 + _13;
  n1 = *ret;
  goto <bb 10>; [INV]

  <bb 5> :
  _14 = lh->num_hash_comps;
  _15 = _14 + 1;
  lh->num_hash_comps = _15;
  _16 = n1->hash;
  if (hash != _16)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  ret = &n1->next;
  // predicted unlikely by continue predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  _17 = lh->num_comp_calls;
  _18 = _17 + 1;
  lh->num_comp_calls = _18;
  _19 = n1->data;
  _20 = cf (_19, data);
  if (_20 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  ret = &n1->next;

  <bb 9> :
  n1 = n1->next;

  <bb 10> :
  if (n1 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  D.3741 = ret;
  return D.3741;

}



;; Function _CONF_get_section (_CONF_get_section, funcdef_no=24, decl_uid=3647, cgraph_uid=25, symbol_order=24)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct CONF_VALUE * _CONF_get_section (const struct CONF * conf, const char * section)
{
  struct CONF_VALUE vv;
  struct CONF_VALUE * v;
  struct CONF_VALUE * D.3745;

  <bb 2> :
  _1 = conf == 0B;
  _2 = section == 0B;
  _3 = _1 | _2;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3745 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  vv.name = 0B;
  vv.section = section;
  _4 = conf->data;
  v = lh_CONF_VALUE_retrieve (_4, &vv);
  D.3745 = v;

  <bb 5> :
  vv = {CLOBBER};
  return D.3745;

}



;; Function _CONF_get_section_values (_CONF_get_section_values, funcdef_no=25, decl_uid=3654, cgraph_uid=26, symbol_order=25)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct stack_st_CONF_VALUE * _CONF_get_section_values (const struct CONF * conf, const char * section)
{
  struct CONF_VALUE * v;
  struct stack_st_CONF_VALUE * D.3750;

  <bb 2> :
  v = _CONF_get_section (conf, section);
  if (v != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3750 = v->value;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.3750 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  return D.3750;

}



;; Function CONF_get_section (CONF_get_section, funcdef_no=26, decl_uid=3659, cgraph_uid=27, symbol_order=26)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
struct stack_st_CONF_VALUE * CONF_get_section (const struct CONF * conf, const char * section)
{
  struct stack_st_CONF_VALUE * D.3754;

  <bb 2> :
  if (conf == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3754 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  if (section == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.3754 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.3754 = _CONF_get_section_values (conf, section);

  <bb 7> :
  return D.3754;

}



;; Function lh_CONF_VALUE_new (lh_CONF_VALUE_new, funcdef_no=27, decl_uid=3661, cgraph_uid=28, symbol_order=27)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct CONF_VALUE * lh_CONF_VALUE_new ()
{
  struct CONF_VALUE * ret;
  struct CONF_VALUE * D.3760;

  <bb 2> :
  ret = malloc (24);
  if (ret == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3760 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.3760 = ret;

  <bb 5> :
  return D.3760;

}



;; Function _CONF_new_data (_CONF_new_data, funcdef_no=28, decl_uid=3665, cgraph_uid=29, symbol_order=28)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int _CONF_new_data (struct CONF * conf)
{
  int D.3764;

  <bb 2> :
  if (conf == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3764 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 4> :
  _1 = conf->data;
  if (_1 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _2 = lh_CONF_VALUE_new ();
  conf->data = _2;
  _3 = conf->data;
  if (_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.3764 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  D.3764 = 1;

  <bb 8> :
  return D.3764;

}



;; Function NCONF_load_bio (NCONF_load_bio, funcdef_no=29, decl_uid=3670, cgraph_uid=30, symbol_order=29)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
int NCONF_load_bio (struct CONF * conf, struct BIO * bp, long int * eline)
{
  int D.3772;

  <bb 2> :
  if (conf == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3772 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _1 = _CONF_new_data (conf);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.3772 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.3772 = 1;

  <bb 7> :
  return D.3772;

}



;; Function CONF_load_bio (CONF_load_bio, funcdef_no=30, decl_uid=3675, cgraph_uid=31, symbol_order=30)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct lhash_st_CONF_VALUE * CONF_load_bio (struct lhash_st_CONF_VALUE * conf, struct BIO * bp, long int * eline)
{
  int ret;
  struct CONF ctmp;
  struct lhash_st_CONF_VALUE * D.3778;

  <bb 2> :
  CONF_set_nconf (&ctmp, conf);
  ret = NCONF_load_bio (&ctmp, bp, eline);
  if (ret != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3778 = ctmp.data;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.3778 = 0B;

  <bb 5> :
  ctmp = {CLOBBER};
  return D.3778;

}



;; Function CONF_load (CONF_load, funcdef_no=31, decl_uid=3684, cgraph_uid=32, symbol_order=31)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct lhash_st_CONF_VALUE * CONF_load (struct lhash_st_CONF_VALUE * conf, const char * file, long int * eline)
{
  struct BIO * in;
  struct lhash_st_CONF_VALUE * ltmp;
  struct lhash_st_CONF_VALUE * D.3783;

  <bb 2> :
  in = 0B;
  _1 = BIO_new_file (file, "r");
  _2 = (long int) _1;
  in = (struct BIO *) _2;
  if (in == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3783 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  ltmp = CONF_load_bio (conf, in, eline);
  BIO_free (in);
  D.3783 = ltmp;

  <bb 5> :
  return D.3783;

}



;; Function main (main, funcdef_no=33, decl_uid=3728, cgraph_uid=34, symbol_order=33)

Removing basic block 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int main (int argc, char * * argv)
{
  int D.3785;

  <bb 2> :
  _1 = (long unsigned int) argc;
  _2 = *argv;
  certify_spkac (_2, _1);
  D.3785 = 0;
  return D.3785;

}



;; Function certify_spkac (certify_spkac, funcdef_no=32, decl_uid=3694, cgraph_uid=33, symbol_order=32)

Removing basic block 13
Merging blocks 19 and 20
Merging blocks 19 and 21
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 1
;;  header 7, latch 17
;;  depth 1, outer 0
;;  nodes: 7 17 15 12 14 11 9 10 8 13
;;
;; Loop 2
;;  header 14, latch 13
;;  depth 2, outer 1
;;  nodes: 14 13 10 9
;; 2 succs { 3 4 }
;; 3 succs { 18 }
;; 4 succs { 5 6 }
;; 5 succs { 18 }
;; 6 succs { 7 }
;; 7 succs { 18 8 }
;; 8 succs { 14 }
;; 9 succs { 11 10 }
;; 10 succs { 11 13 }
;; 11 succs { 12 15 }
;; 12 succs { 15 }
;; 13 succs { 14 }
;; 14 succs { 9 15 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 7 }
;; 18 succs { 1 }
int certify_spkac (const char * infile, long unsigned int chtype)
{
  int nid;
  long int errline;
  int j;
  int i;
  int ok;
  void * ne;
  void * n;
  char * buf;
  char * type;
  struct CONF_VALUE * cv;
  struct lhash_st_CONF_VALUE * parms;
  struct stack_st_CONF_VALUE * sk;
  int D.3800;
  char D.3794;

  <bb 2> :
  sk = 0B;
  parms = 0B;
  cv = 0B;
  n = 0B;
  ne = 0B;
  ok = -1;
  parms = CONF_load (0B, infile, &errline);
  if (parms == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by goto predictor.
  goto <bb 18>; [INV]

  <bb 4> :
  sk = CONF_get_section (parms, "default");
  _1 = sk_CONF_VALUE_num (sk);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  CONF_free (parms);
  // predicted unlikely by goto predictor.
  goto <bb 18>; [INV]

  <bb 6> :
  i = 0;

  <bb 7> :
  _2 = sk_CONF_VALUE_num (sk);
  if (i >= _2)
    goto <bb 18>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _3 = sk_CONF_VALUE_value (sk, i);
  _4 = (long int) _3;
  cv = (struct CONF_VALUE *) _4;
  type = cv->name;
  buf = cv->name;
  goto <bb 14>; [INV]

  <bb 9> :
  D.3794 = *buf;
  _5 = D.3794 == 58;
  _6 = D.3794 == 44;
  _7 = _5 | _6;
  if (_7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _8 = *buf;
  if (_8 == 46)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  buf = buf + 1;
  _9 = *buf;
  if (_9 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  type = buf;
  goto <bb 15>; [INV]

  <bb 13> :
  buf = buf + 1;

  <bb 14> :
  _10 = *buf;
  if (_10 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _11 = X509_NAME_add_entry_by_NID (n, nid, chtype, buf, -1, -1, 0);
  if (_11 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  // predicted unlikely by goto predictor.
  goto <bb 18>; [INV]

  <bb 17> :
  i = i + 1;
  goto <bb 7>; [INV]

  <bb 18> :
end:
  CONF_free (parms);
  D.3800 = ok;
  errline = {CLOBBER};
  return D.3800;

}


