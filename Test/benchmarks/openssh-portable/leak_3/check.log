In file included from ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:10:
./benchmarks/openssh-portable/leak_3/../openssh.h:675:60: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:676:65: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:677:66: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:678:64: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:681:40: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c: In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:15: warning: implicit declaration of function â€˜timeâ€™ [-Wimplicit-function-declaration]
  207 |         srand(time(NULL));
      |               ^~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -1.0%|          |
nothrow                          |      |      |      |      |     -1.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.2%|          |
phiopt                           |      |      |      |      |     -0.2%|          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 6
=======node_fun:client_input_hostkeys=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 7
succs:= 8
--------GIMPLE Cond -------
succs:= 9
succs:= 9
--------GIMPLE Cond -------
succs:= 12
succs:= 12
--------GIMPLE Cond -------
succs:= 15
--------GIMPLE Cond -------
succs:= 16
succs:= 16
--------GIMPLE Cond -------
succs:= 18
succs:= 4
succs:= 8
succs:= 18
succs:= 2
=======node_fun:client_global_request_reply=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 4
succs:= 6
succs:= 6
succs:= 6
succs:= 2
succs:= 5
=======node_fun:client_register_global_confirm=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
succs:= 2
succs:= 3
succs:= 4
succs:= 5
=======node_fun:client_global_hostkeys_private_confirm=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 15
succs:= 4
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 6
succs:= 6
succs:= 7
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 8
succs:= 7
succs:= 8
succs:= 9
--------GIMPLE Cond -------
succs:= 11
succs:= 9
=======node_fun:update_known_hosts=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 3
succs:= 3
succs:= 4
--------GIMPLE Cond -------
succs:= 6
=======node_fun:hostkeys_update_ctx_free=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_18 = VDEF <.MEM_17(D)>
_1 = time (0B);
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
# .MEM_20 = VDEF <.MEM_15>
_3 = rand ();
# .MEM_21 = VDEF <.MEM_16>
client_global_request_reply (0, 0, 0B);
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
# .MEM_86 = VDEF <.MEM_66>
printf ("parse key %s error\n", _9);
# .MEM_84 = VDEF <.MEM_66>
printf ("%s: server sent no hostkeys\n", &__func__);
# .MEM_73 = VDEF <.MEM_66>
_14 = calloc (_13, 4);
# .MEM_82 = VDEF <.MEM_74>
printf ("%s: calloc failed\n", &__func__);
# .MEM_79 = VDEF <.MEM_68>
_16 = rand ();
# .MEM_76 = VDEF <.MEM_68>
printf ("%zu keys from server: %zu new, %zu retained. \n", _34, _33, _32);
# VUSE <.MEM_76>
update_known_hosts (ctx_48);
# .MEM_77 = VDEF <.MEM_76>
printf ("asking server to prove ownership for %zu keys\n", _37);
# .MEM_78 = VDEF <.MEM_77>
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
# .MEM_24 = VDEF <.MEM_23>
printf ("%s: last_gc->ref_count \n", &__func__);
# .MEM_26 = VDEF <.MEM_22(D)>
gc_20 = calloc (1, 40);
# .MEM_31 = VDEF <.MEM_25(D)>
printf ("%s: ctx->nnew == 0\n", &__func__);
# .MEM_26 = VDEF <.MEM_25(D)>
_2 = rand ();
# .MEM_29 = VDEF <.MEM_26>
__builtin_puts (&"Server failed to confirm ownership of private host keys"[0]);
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
# .MEM_27 = VDEF <.MEM_22>
_8 = rand ();
# VUSE <.MEM_22>
update_known_hosts (_ctx_16(D));
# .MEM_28 = VDEF <.MEM_23>
hostkeys_update_ctx_free (_ctx_16(D));
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:client_global_request_reply========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path client_global_request_reply  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:client_global_request_reply========= [0m
[40;42m =======start_check_funciton:client_global_request_reply========= [0m
[40;33m =======POP node_fun stack:client_global_request_reply========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:client_input_hostkeys========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path client_input_hostkeys  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
[40;42m =======pre add _ fucntion:client_register_global_confirm========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path client_register_global_confirm  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:client_register_global_confirm========= [0m
[40;42m =======start_check_funciton:client_register_global_confirm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd0c671d948
    type <pointer_type 0x7fd0c6702dc8
        type <record_type 0x7fd0c6702d20 global_confirm BLK
            size <integer_cst 0x7fd0c66f2750 constant 320>
            unit-size <integer_cst 0x7fd0c66f2870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6702d20 fields <field_decl 0x7fd0c66fe558 entry> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c6702dc8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6702e70>>
    var <var_decl 0x7fd0c6715b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7fd0c670ea50>
# .MEM_26 = VDEF <.MEM_22(D)>
gc_20 = calloc (1, 40);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_10 = &gc_20->entry.tqe_next;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:16: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0B)
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |               ^
if (_5 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
Cond in fucntion client_register_global_confirm basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
gc_17 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:17: warning: use location
  117 |         if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
      |                 ^
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
  123 |                 free(gc);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_12 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
*_11 = _12;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_11 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_10 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_7 = last_gc_13->ref_count;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
if (_7 > 9999)
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
if (_7 > 9999)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
Cond in fucntion client_register_global_confirm basic block 5
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 6
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_5 = last_gc_13->ref_count;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_6 = _5 + 1;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:21: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
last_gc_13->ref_count = _6;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
if (_4 == ctx_15(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                          ^
if (_4 == ctx_15(D))

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
Cond in fucntion client_register_global_confirm basic block 4
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 5
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
if (_3 == cb_14(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                     ^
if (_3 == cb_14(D))

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
Cond in fucntion client_register_global_confirm basic block 3
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 4
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->entry.tqe_prev = _8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
_8->entry.tqe_prev = _9;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_8 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_7 = gc_17->entry.tqe_next;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_6 = gc_17->ref_count;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
if (_6 <= 0)
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
if (_6 <= 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
Cond in fucntion client_register_global_confirm basic block 5
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 6
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_4 = gc_17->ref_count;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_5 = _4 + -1;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:13: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
gc_17->ref_count = _5;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_3 = gc_17->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:17: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                 ^
_2 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:19: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                   ^
_1 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:15: warning: use location
  119 |         if (gc->cb != NULL)
      |               ^
if (_1 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
  119 |         if (gc->cb != NULL)
      |            ^
if (_1 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
Cond in fucntion client_register_global_confirm basic block 3
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 4
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
gc_20->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:23: warning: use location
  108 |         gc->ref_count = 1;
      |                       ^
gc_20->ctx = ctx_15(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:17: warning: use location
  107 |         gc->ctx = ctx;
      |                 ^
gc_20->cb = cb_14(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:16: warning: use location
  106 |         gc->cb = cb;
      |                ^
gc_20 = calloc (1, 40);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:105:14: warning: use location
  105 |         gc = xcalloc(1, sizeof(*gc));
      |              ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c671d948
    type <pointer_type 0x7fd0c6702dc8
        type <record_type 0x7fd0c6702d20 global_confirm BLK
            size <integer_cst 0x7fd0c66f2750 constant 320>
            unit-size <integer_cst 0x7fd0c66f2870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6702d20 fields <field_decl 0x7fd0c66fe558 entry> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c6702dc8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6702e70>>
    var <var_decl 0x7fd0c6715b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7fd0c670ea50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7fd0c6722080
    type <pointer_type 0x7fd0c6704e70
        type <array_type 0x7fd0c6704dc8 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f2960 constant 200>
            unit-size <integer_cst 0x7fd0c66f2948 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c6704d20>
            pointer_to_this <pointer_type 0x7fd0c6704e70>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c6719f00 type <array_type 0x7fd0c6704dc8>
        readonly constant static "%s: last_gc->ref_count \012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:100:4 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:100:4 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:100:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:client_register_global_confirm========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:client_input_hostkeys========= [0m
[40;42m =======start_check_funciton:client_input_hostkeys========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd0c6718630
    type <pointer_type 0x7fd0c67041f8
        type <record_type 0x7fd0c6704150 hostkeys_update_ctx BLK
            size <integer_cst 0x7fd0c6bf0000 constant 512>
            unit-size <integer_cst 0x7fd0c6ca7090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6704150 fields <field_decl 0x7fd0c66fea18 host_str> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c67041f8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd0c6715120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7fd0c670e840>
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
update_known_hosts (ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:184:17: warning: use location
  184 |                 update_known_hosts(ctx);
      |                 ^
this stmt is child function---update_known_hosts-----

 ================== trace ================== 
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
bb index := 19
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:191:17: warning: use location
  191 |                 client_register_global_confirm(
      |                 ^
this stmt is child function---client_register_global_confirm-----

 ================== trace ================== 
trace fucntion name:client_register_global_confirm 
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_37 = ctx_48->nnew;
bb index := 19
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
_37 = ctx_48->nnew;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
  190 |                 printf("asking server to prove ownership for %zu keys\n", ctx->nnew);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
printf ("asking server to prove ownership for %zu keys\n", _37);
bb index := 19
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
printf ("asking server to prove ownership for %zu keys\n", _37);
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:28: warning: use location
  176 |                         ctx->nnew++;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nnew = _28;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:34: warning: use location
  176 |                         ctx->nnew++;
      |                                  ^
_31 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:51: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                                   ^
_32 = _30 - _31;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^
printf ("%zu keys from server: %zu new, %zu retained. \n", _34, _33, _32);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
_33 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
_35 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:16: warning: use location
  182 |         if (ctx->nnew == 0) {
      |                ^
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
if (_35 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 16
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 17
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_36 = ctx_48->nnew;
bb index := 18
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 7

======================================================================
_36 = ctx_48->nnew;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:23: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^
_34 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:20: warning: use location
  159 |                 ctx->nkeys++;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nkeys = _11;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:27: warning: use location
  159 |                 ctx->nkeys++;
      |                           ^
_12 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:16: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |                ^
_13 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^
_14 = calloc (_13, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
this stmt is child function---calloc-----

 ================== trace ================== 
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
if (_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 9
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 10
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 + _20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *_25;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                    ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
Cond in fucntion client_input_hostkeys basic block 12
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 13
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
ctx_48->keys_seen = _14;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:29: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:16: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0B)
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |               ^
if (_5 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
Cond in fucntion client_input_hostkeys basic block 6
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 3
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
bb index := 2
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
gc_17 = global_confirms.tqh_first;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:17: warning: use location
  117 |         if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
      |                 ^
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
  123 |                 free(gc);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find ================== 
_12 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
*_11 = _12;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_11 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_10 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
bb index := 2
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = global_confirms.tqh_last;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
bb index := 2
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = MEM[(struct global_confirms *)_1].tqh_last;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
bb index := 2
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
last_gc_13 = *_2;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^
_7 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^
if (_7 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
if (_7 > 9999)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
Cond in fucntion client_input_hostkeys basic block 5
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^
_6 = _5 + 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:21: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                     ^
last_gc_13->ref_count = _6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
if (_4 == ctx_15(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                          ^
if (_4 == ctx_15(D))

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
Cond in fucntion client_input_hostkeys basic block 4
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
if (_3 == cb_14(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                     ^
if (_3 == cb_14(D))

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
Cond in fucntion client_input_hostkeys basic block 3
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 4
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->entry.tqe_prev = _8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_10 = &gc_20->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
gc_20->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
gc_20->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:23: warning: use location
  108 |         gc->ref_count = 1;
      |                       ^
gc_20->ctx = ctx_15(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:17: warning: use location
  107 |         gc->ctx = ctx;
      |                 ^
gc_20->cb = cb_14(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:16: warning: use location
  106 |         gc->cb = cb;
      |                ^
_9 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
_8->entry.tqe_prev = _9;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_8 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_7 = gc_17->entry.tqe_next;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_6 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^
_4 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
_5 = _4 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:13: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |             ^
gc_17->ref_count = _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_3 = gc_17->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:17: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                 ^
_2 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:19: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                   ^
_1 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:15: warning: use location
  119 |         if (gc->cb != NULL)
      |               ^
if (_1 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
  119 |         if (gc->cb != NULL)
      |            ^
if (_1 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 3
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 4
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:28: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
if (_29 > i_38)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
Cond in fucntion client_input_hostkeys basic block 15
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 12
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_30 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:38: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^
if (_10 > i_11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
Cond in fucntion client_input_hostkeys basic block 11
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = ctx_8(D)->nkeys;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 > i_6)
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
if (_5 > i_6)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
Cond in fucntion client_input_hostkeys basic block 6
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 3
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ctx_48->nnew = 0;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:172:19: warning: use location
  172 |         ctx->nnew = 0;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
ctx_48 = calloc (1, 64);
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:147:15: warning: use location
  147 |         ctx = xcalloc(1, sizeof(*ctx));         /* allocation site */
      |               ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6718630
    type <pointer_type 0x7fd0c67041f8
        type <record_type 0x7fd0c6704150 hostkeys_update_ctx BLK
            size <integer_cst 0x7fd0c6bf0000 constant 512>
            unit-size <integer_cst 0x7fd0c6ca7090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6704150 fields <field_decl 0x7fd0c66fea18 host_str> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c67041f8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd0c6715120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7fd0c670e840>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_10(D)>
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_5(D)>
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:16: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_5 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:17: warning: use location
  117 |         if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_29 = VDEF <.MEM_28>
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
  123 |                 free(gc);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_21>
_12 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_28 = VDEF <.MEM_21>
*_11 = _12;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_21>
_11 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25>
_10 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_26 = VDEF <.MEM_25>
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_7 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
_6 = _5 + 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:21: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_4 == ctx_15(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_3 == cb_14(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_30>
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_31 = VDEF <.MEM_30>
gc_20->entry.tqe_prev = _8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_31>
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_32 = VDEF <.MEM_31>
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
_10 = &gc_20->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_33 = VDEF <.MEM_32>
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_30 = VDEF <.MEM_29>
gc_20->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_29 = VDEF <.MEM_28>
gc_20->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:23: warning: use location
  108 |         gc->ref_count = 1;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_28 = VDEF <.MEM_27>
gc_20->ctx = ctx_15(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:17: warning: use location
  107 |         gc->ctx = ctx;
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_27 = VDEF <.MEM_26>
gc_20->cb = cb_14(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:16: warning: use location
  106 |         gc->cb = cb;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25>
_9 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_27 = VDEF <.MEM_25>
_8->entry.tqe_prev = _9;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25>
_8 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
_5 = _4 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:13: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_23(D)>
_3 = gc_17->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:17: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_23(D)>
_2 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:19: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_23(D)>
_1 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:15: warning: use location
  119 |         if (gc->cb != NULL)
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_1 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
  119 |         if (gc->cb != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c6bdae58
    type <pointer_type 0x7fd0c6bee000
        type <void_type 0x7fd0c6be7f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd0c6bee000>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6bf39d8>>
   
    def_stmt _14 = calloc (_13, 4);
    version:14
    ptr-info 0x7fd0c670e798>
# .MEM_73 = VDEF <.MEM_66>
_14 = calloc (_13, 4);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_14 = calloc (_13, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^
this stmt is child function---calloc-----

 ================== trace ================== 
ctx_48->keys_seen = _14;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:29: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                             ^
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
if (_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 9
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 10
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 + _20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *_25;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                    ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
Cond in fucntion client_input_hostkeys basic block 12
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 13
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6bdae58
    type <pointer_type 0x7fd0c6bee000
        type <void_type 0x7fd0c6be7f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd0c6bee000>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6bf39d8>>
   
    def_stmt _14 = calloc (_13, 4);
    version:14
    ptr-info 0x7fd0c670e798>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd0c670e528 type <integer_type 0x7fd0c67029d8 size_t> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dcece0
    type <pointer_type 0x7fd0c6704540
        type <array_type 0x7fd0c6704498 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f28e8 constant 160>
            unit-size <integer_cst 0x7fd0c66f28d0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c67043f0>
            pointer_to_this <pointer_type 0x7fd0c6704540>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c6bd0f60 type <array_type 0x7fd0c6704498>
        readonly constant static "parse key %s error\012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:11 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:11 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dced20
    type <pointer_type 0x7fd0c67052a0
        type <array_type 0x7fd0c67051f8 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f29d8 constant 232>
            unit-size <integer_cst 0x7fd0c66f29c0 constant 29>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c6705150>
            pointer_to_this <pointer_type 0x7fd0c67052a0>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c6bdc118 type <array_type 0x7fd0c67051f8>
        readonly constant static "%s: server sent no hostkeys\012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:163:10 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:163:10 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:163:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c6bdae10
    type <integer_type 0x7fd0c6be77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be7738 precision:64 min <integer_cst 0x7fd0c6bd2e88 0> max <integer_cst 0x7fd0c6bd3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd0c6bf37e0>>
   
    def_stmt _13 = ctx_48->nkeys;
    version:13>
# VUSE <.MEM_66>
_13 = ctx_48->nkeys;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_14 = calloc (_13, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^
this stmt is child function---calloc-----

 ================== trace ================== 
ctx_48->keys_seen = _14;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:29: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                             ^
update_known_hosts (ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:184:17: warning: use location
  184 |                 update_known_hosts(ctx);
      |                 ^
this stmt is child function---update_known_hosts-----

 ================== trace ================== 
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
bb index := 19
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:191:17: warning: use location
  191 |                 client_register_global_confirm(
      |                 ^
this stmt is child function---client_register_global_confirm-----

 ================== trace ================== 
trace fucntion name:client_register_global_confirm 
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_37 = ctx_48->nnew;
bb index := 19
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
_37 = ctx_48->nnew;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
  190 |                 printf("asking server to prove ownership for %zu keys\n", ctx->nnew);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
printf ("asking server to prove ownership for %zu keys\n", _37);
bb index := 19
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
printf ("asking server to prove ownership for %zu keys\n", _37);
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:28: warning: use location
  176 |                         ctx->nnew++;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nnew = _28;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:34: warning: use location
  176 |                         ctx->nnew++;
      |                                  ^
_31 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:51: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                                   ^
_32 = _30 - _31;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^
printf ("%zu keys from server: %zu new, %zu retained. \n", _34, _33, _32);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
_33 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
_35 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:16: warning: use location
  182 |         if (ctx->nnew == 0) {
      |                ^
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
if (_35 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 16
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 17
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_36 = ctx_48->nnew;
bb index := 18
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 7

======================================================================
_36 = ctx_48->nnew;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:23: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_16>
return 0;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^
_34 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:20: warning: use location
  159 |                 ctx->nkeys++;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nkeys = _11;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:27: warning: use location
  159 |                 ctx->nkeys++;
      |                           ^
_12 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:16: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |                ^
_13 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:28: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
if (_29 > i_38)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
Cond in fucntion client_input_hostkeys basic block 15
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 12
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_30 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:38: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^
if (_10 > i_11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
Cond in fucntion client_input_hostkeys basic block 11
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = ctx_8(D)->nkeys;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 > i_6)
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
if (_5 > i_6)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
Cond in fucntion client_input_hostkeys basic block 6
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 3
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *_25;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                    ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
Cond in fucntion client_input_hostkeys basic block 12
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 13
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
if (_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 9
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 10
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_input_hostkeysâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
ctx_48->nnew = 0;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:172:19: warning: use location
  172 |         ctx->nnew = 0;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6bdae10
    type <integer_type 0x7fd0c6be77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be7738 precision:64 min <integer_cst 0x7fd0c6bd2e88 0> max <integer_cst 0x7fd0c6bd3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd0c6bf37e0>>
   
    def_stmt _13 = ctx_48->nkeys;
    version:13>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_10(D)>
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_5(D)>
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dcedc0
    type <pointer_type 0x7fd0c6705540
        type <array_type 0x7fd0c6705498 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f2a08 constant 152>
            unit-size <integer_cst 0x7fd0c66f28b8 constant 19>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c67053f0>
            pointer_to_this <pointer_type 0x7fd0c6705540>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c671b0c8 type <array_type 0x7fd0c6705498>
        readonly constant static "%s: calloc failed\012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:169:3 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:169:3 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:169:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c6bdaee8
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
   
    def_stmt _16 = rand ();
    version:16>
# .MEM_79 = VDEF <.MEM_68>
_16 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 % 2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = _17 == 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (int) _18;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6bdaee8
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
   
    def_stmt _16 = rand ();
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dcee80
    type <pointer_type 0x7fd0c6705738
        type <array_type 0x7fd0c6705690 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f2930 constant 376>
            unit-size <integer_cst 0x7fd0c66f2a38 constant 47>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c67055e8>
            pointer_to_this <pointer_type 0x7fd0c6705738>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c6718798 type <array_type 0x7fd0c6705690>
        readonly constant static "%zu keys from server: %zu new, %zu retained. \012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dceee0
    type <pointer_type 0x7fd0c6705738
        type <array_type 0x7fd0c6705690 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f2930 constant 376>
            unit-size <integer_cst 0x7fd0c66f2a38 constant 47>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c67055e8>
            pointer_to_this <pointer_type 0x7fd0c6705738>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c67187e0 type <array_type 0x7fd0c6705690>
        readonly constant static "asking server to prove ownership for %zu keys\012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:10 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:10 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dcef20
    type <pointer_type 0x7fd0c6705888
        type <function_type 0x7fd0c66fbc78 type <void_type 0x7fd0c6be7f18 void>
            QI
            size <integer_cst 0x7fd0c6bd2ca8 constant 8>
            unit-size <integer_cst 0x7fd0c6bd2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fd0c66fd4d8 value <integer_type 0x7fd0c6be75e8 int>
                chain <tree_list 0x7fd0c66fd4b0 value <integer_type 0x7fd0c66fbbd0 u_int32_t>
                    chain <tree_list 0x7fd0c66fd460 value <pointer_type 0x7fd0c6bee000>
                        chain <tree_list 0x7fd0c6be6b18 value <void_type 0x7fd0c6be7f18 void>>>>> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c6705888>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <function_decl 0x7fd0c66fcc00 client_global_hostkeys_private_confirm type <function_type 0x7fd0c66fbc78>
        addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7fd0c670b1e0>
        result <result_decl 0x7fd0c6bdd3c0 D.4478 type <void_type 0x7fd0c6be7f18 void>
            ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
            align:8 warn_if_not_align:0 context <function_decl 0x7fd0c66fcc00 client_global_hostkeys_private_confirm>>
        arguments <parm_decl 0x7fd0c6707800 type type <integer_type 0x7fd0c6be75e8 int>
            SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44
            size <integer_cst 0x7fd0c6bd2df8 constant 32>
            unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7fd0c66fcc00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7fd0c6be75e8 int> chain <parm_decl 0x7fd0c6707880 seq>>
        struct-function 0x7fd0c670c2e0>
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:192:7 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:192:7 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:192:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c67185a0
    type <pointer_type 0x7fd0c67041f8
        type <record_type 0x7fd0c6704150 hostkeys_update_ctx BLK
            size <integer_cst 0x7fd0c6bf0000 constant 512>
            unit-size <integer_cst 0x7fd0c6ca7090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6704150 fields <field_decl 0x7fd0c66fea18 host_str> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c67041f8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd0c6715120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7fd0c670e828>
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c67185a0
    type <pointer_type 0x7fd0c67041f8
        type <record_type 0x7fd0c6704150 hostkeys_update_ctx BLK
            size <integer_cst 0x7fd0c6bf0000 constant 512>
            unit-size <integer_cst 0x7fd0c6ca7090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6704150 fields <field_decl 0x7fd0c66fea18 host_str> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c67041f8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd0c6715120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7fd0c670e828>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================
[40;33m =======POP node_fun stack:client_input_hostkeys========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd0c6bd2fc0 type <pointer_type 0x7fd0c6bee000> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fd0c6bda678
    type <integer_type 0x7fd0c6be7690 unsigned int public unsigned SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be7690 precision:32 min <integer_cst 0x7fd0c6bd2e28 0> max <integer_cst 0x7fd0c6bd2de0 4294967295>
        pointer_to_this <pointer_type 0x7fd0c6bf3690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:9: warning: use location
  207 |         srand(time(NULL));
      |         ^
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:9: warning: use location
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6bda678
    type <integer_type 0x7fd0c6be7690 unsigned int public unsigned SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be7690 precision:32 min <integer_cst 0x7fd0c6bd2e28 0> max <integer_cst 0x7fd0c6bd2de0 4294967295>
        pointer_to_this <pointer_type 0x7fd0c6bf3690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c6bda798
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
    var <parm_decl 0x7fd0c6707200 argc>
    def_stmt GIMPLE_NOP
    version:13>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
bb index := 3
# VUSE <.MEM_24>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_24>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
bb index := 3
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
   54 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
client_input_hostkeys (argc_13(D), argv_14(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:209:17: warning: use location
  209 |                 client_input_hostkeys(argc, argv);
      |                 ^
this stmt is child function---client_input_hostkeys-----

 ================== trace ================== 
trace fucntion name:client_input_hostkeys 
[40;44m =======trace_function_path client_input_hostkeys  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;46m =======add node_fun stack:hostkeys_update_ctx_free========= [0m
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:client_register_global_confirm========= [0m
[40;46m =======add node_fun stack:client_register_global_confirm========= [0m
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;46m =======add node_fun stack:update_known_hosts========= [0m
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :1========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
bb index := 3
# VUSE <.MEM_24>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_24>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
bb index := 3
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
   54 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
client_input_hostkeys (argc_13(D), argv_14(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:209:17: warning: use location
  209 |                 client_input_hostkeys(argc, argv);
      |                 ^
this stmt is child function---client_input_hostkeys-----

 ================== trace ================== 
trace fucntion name:client_input_hostkeys 
[40;44m =======trace_function_path client_input_hostkeys  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;46m =======add node_fun stack:hostkeys_update_ctx_free========= [0m
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:client_register_global_confirm========= [0m
[40;46m =======add node_fun stack:client_register_global_confirm========= [0m
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;46m =======add node_fun stack:update_known_hosts========= [0m
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :1========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6bda798
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
    var <parm_decl 0x7fd0c6707200 argc>
    def_stmt GIMPLE_NOP
    version:13>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c6bda6c0
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
   
    def_stmt _3 = rand ();
    version:3>
# .MEM_20 = VDEF <.MEM_15>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 % 2;
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 % 2;
bb index := 4
# VUSE <.MEM_24>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_24>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 % 2;
bb index := 4
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
   54 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = _3 % 2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:208:15: warning: use location
  208 |         while(__RANDBOOL)
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 1)
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 1)
bb index := 4
# VUSE <.MEM_24>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_24>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 1)
bb index := 4
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
   54 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:208:15: warning: use location
  208 |         while(__RANDBOOL)
      |               ^
if (_4 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:208:15: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_15>
_3 = rand ();
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_15>
_3 = rand ();
bb index := 4
# VUSE <.MEM_24>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_24>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_15>
_3 = rand ();
bb index := 4
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
   54 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:208:15: warning: use location
  208 |         while(__RANDBOOL)
      |               ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6bda6c0
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd0c6bd2f48 type <integer_type 0x7fd0c6be75e8 int> constant 0>
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:client_input_hostkeys========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path client_input_hostkeys  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
[40;42m =======pre add _ fucntion:client_register_global_confirm========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path client_register_global_confirm  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:client_register_global_confirm========= [0m
[40;42m =======start_check_funciton:client_register_global_confirm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd0c671d948
    type <pointer_type 0x7fd0c6702dc8
        type <record_type 0x7fd0c6702d20 global_confirm BLK
            size <integer_cst 0x7fd0c66f2750 constant 320>
            unit-size <integer_cst 0x7fd0c66f2870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6702d20 fields <field_decl 0x7fd0c66fe558 entry> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c6702dc8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6702e70>>
    var <var_decl 0x7fd0c6715b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7fd0c670ea50>
# .MEM_26 = VDEF <.MEM_22(D)>
gc_20 = calloc (1, 40);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_10 = &gc_20->entry.tqe_next;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:16: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0B)
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |               ^
if (_5 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
Cond in fucntion client_register_global_confirm basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
gc_17 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:17: warning: use location
  117 |         if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
      |                 ^
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
  123 |                 free(gc);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_12 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
*_11 = _12;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_11 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_10 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_7 = last_gc_13->ref_count;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
if (_7 > 9999)
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
if (_7 > 9999)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
Cond in fucntion client_register_global_confirm basic block 5
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 6
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_5 = last_gc_13->ref_count;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_6 = _5 + 1;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:21: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
last_gc_13->ref_count = _6;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
if (_4 == ctx_15(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                          ^
if (_4 == ctx_15(D))

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
Cond in fucntion client_register_global_confirm basic block 4
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 5
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
if (_3 == cb_14(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                     ^
if (_3 == cb_14(D))

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
Cond in fucntion client_register_global_confirm basic block 3
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 4
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->entry.tqe_prev = _8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
_8->entry.tqe_prev = _9;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_8 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_7 = gc_17->entry.tqe_next;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_6 = gc_17->ref_count;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
if (_6 <= 0)
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
if (_6 <= 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
Cond in fucntion client_register_global_confirm basic block 5
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 6
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_4 = gc_17->ref_count;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_5 = _4 + -1;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:13: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_70>
return 1;
In function â€˜client_register_global_confirmâ€™:
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
gc_17->ref_count = _5;
In function â€˜client_input_hostkeysâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_3 = gc_17->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:17: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                 ^
_2 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:19: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                   ^
_1 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:15: warning: use location
  119 |         if (gc->cb != NULL)
      |               ^
if (_1 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
  119 |         if (gc->cb != NULL)
      |            ^
if (_1 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
Cond in fucntion client_register_global_confirm basic block 3
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 4
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
gc_20->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:23: warning: use location
  108 |         gc->ref_count = 1;
      |                       ^
gc_20->ctx = ctx_15(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:17: warning: use location
  107 |         gc->ctx = ctx;
      |                 ^
gc_20->cb = cb_14(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:16: warning: use location
  106 |         gc->cb = cb;
      |                ^
gc_20 = calloc (1, 40);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:105:14: warning: use location
  105 |         gc = xcalloc(1, sizeof(*gc));
      |              ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c671d948
    type <pointer_type 0x7fd0c6702dc8
        type <record_type 0x7fd0c6702d20 global_confirm BLK
            size <integer_cst 0x7fd0c66f2750 constant 320>
            unit-size <integer_cst 0x7fd0c66f2870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6702d20 fields <field_decl 0x7fd0c66fe558 entry> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c6702dc8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6702e70>>
    var <var_decl 0x7fd0c6715b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7fd0c670ea50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7fd0c6722080
    type <pointer_type 0x7fd0c6704e70
        type <array_type 0x7fd0c6704dc8 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f2960 constant 200>
            unit-size <integer_cst 0x7fd0c66f2948 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c6704d20>
            pointer_to_this <pointer_type 0x7fd0c6704e70>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c6719f00 type <array_type 0x7fd0c6704dc8>
        readonly constant static "%s: last_gc->ref_count \012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:100:4 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:100:4 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:100:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:client_register_global_confirm========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:client_input_hostkeys========= [0m
[40;42m =======start_check_funciton:client_input_hostkeys========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd0c6718630
    type <pointer_type 0x7fd0c67041f8
        type <record_type 0x7fd0c6704150 hostkeys_update_ctx BLK
            size <integer_cst 0x7fd0c6bf0000 constant 512>
            unit-size <integer_cst 0x7fd0c6ca7090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6704150 fields <field_decl 0x7fd0c66fea18 host_str> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c67041f8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd0c6715120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7fd0c670e840>
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
update_known_hosts (ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:184:17: warning: use location
  184 |                 update_known_hosts(ctx);
      |                 ^
this stmt is child function---update_known_hosts-----

 ================== trace ================== 
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
bb index := 19
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:191:17: warning: use location
  191 |                 client_register_global_confirm(
      |                 ^
this stmt is child function---client_register_global_confirm-----

 ================== trace ================== 
trace fucntion name:client_register_global_confirm 
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_37 = ctx_48->nnew;
bb index := 19
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
_37 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
  190 |                 printf("asking server to prove ownership for %zu keys\n", ctx->nnew);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
printf ("asking server to prove ownership for %zu keys\n", _37);
bb index := 19
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
printf ("asking server to prove ownership for %zu keys\n", _37);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:28: warning: use location
  176 |                         ctx->nnew++;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nnew = _28;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:34: warning: use location
  176 |                         ctx->nnew++;
      |                                  ^
_31 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:51: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                                   ^
_32 = _30 - _31;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^
printf ("%zu keys from server: %zu new, %zu retained. \n", _34, _33, _32);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
_33 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
_35 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:16: warning: use location
  182 |         if (ctx->nnew == 0) {
      |                ^
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
if (_35 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 16
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 17
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_36 = ctx_48->nnew;
bb index := 18
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 7

======================================================================
_36 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:23: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^
_34 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:20: warning: use location
  159 |                 ctx->nkeys++;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nkeys = _11;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:27: warning: use location
  159 |                 ctx->nkeys++;
      |                           ^
_12 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:16: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |                ^
_13 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^
_14 = calloc (_13, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
this stmt is child function---calloc-----

 ================== trace ================== 
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
if (_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 9
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 10
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 + _20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *_25;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                    ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
Cond in fucntion client_input_hostkeys basic block 12
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 13
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
ctx_48->keys_seen = _14;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:29: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:16: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |               ^
if (_5 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
Cond in fucntion client_input_hostkeys basic block 6
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 3
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
gc_17 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:17: warning: use location
  117 |         if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
      |                 ^
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
  123 |                 free(gc);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find ================== 
_12 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
*_11 = _12;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_11 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_10 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^
_7 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^
if (_7 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
if (_7 > 9999)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
Cond in fucntion client_input_hostkeys basic block 5
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^
_6 = _5 + 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:21: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                     ^
last_gc_13->ref_count = _6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
if (_4 == ctx_15(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                          ^
if (_4 == ctx_15(D))

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
Cond in fucntion client_input_hostkeys basic block 4
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
if (_3 == cb_14(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                     ^
if (_3 == cb_14(D))

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
Cond in fucntion client_input_hostkeys basic block 3
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 4
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->entry.tqe_prev = _8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_10 = &gc_20->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
gc_20->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
gc_20->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:23: warning: use location
  108 |         gc->ref_count = 1;
      |                       ^
gc_20->ctx = ctx_15(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:17: warning: use location
  107 |         gc->ctx = ctx;
      |                 ^
gc_20->cb = cb_14(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:16: warning: use location
  106 |         gc->cb = cb;
      |                ^
_9 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
_8->entry.tqe_prev = _9;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_8 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_7 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_6 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^
_4 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
_5 = _4 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:13: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |             ^
gc_17->ref_count = _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_3 = gc_17->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:17: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                 ^
_2 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:19: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                   ^
_1 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:15: warning: use location
  119 |         if (gc->cb != NULL)
      |               ^
if (_1 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
  119 |         if (gc->cb != NULL)
      |            ^
if (_1 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 3
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 4
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:28: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
if (_29 > i_38)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
Cond in fucntion client_input_hostkeys basic block 15
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 12
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_30 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:38: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^
if (_10 > i_11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
Cond in fucntion client_input_hostkeys basic block 11
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
if (_5 > i_6)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
Cond in fucntion client_input_hostkeys basic block 6
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 3
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ctx_48->nnew = 0;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:172:19: warning: use location
  172 |         ctx->nnew = 0;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
ctx_48 = calloc (1, 64);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:147:15: warning: use location
  147 |         ctx = xcalloc(1, sizeof(*ctx));         /* allocation site */
      |               ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6718630
    type <pointer_type 0x7fd0c67041f8
        type <record_type 0x7fd0c6704150 hostkeys_update_ctx BLK
            size <integer_cst 0x7fd0c6bf0000 constant 512>
            unit-size <integer_cst 0x7fd0c6ca7090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6704150 fields <field_decl 0x7fd0c66fea18 host_str> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c67041f8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd0c6715120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7fd0c670e840>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_10(D)>
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_5(D)>
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:16: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_5 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_23(D)>
gc_17 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:17: warning: use location
  117 |         if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_29 = VDEF <.MEM_28>
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
  123 |                 free(gc);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_21>
_12 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_28 = VDEF <.MEM_21>
*_11 = _12;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_21>
_11 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25>
_10 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_26 = VDEF <.MEM_25>
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_7 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
_6 = _5 + 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:21: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_4 == ctx_15(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22(D)>
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_3 == cb_14(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_30>
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_31 = VDEF <.MEM_30>
gc_20->entry.tqe_prev = _8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_31>
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_32 = VDEF <.MEM_31>
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
_10 = &gc_20->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_33 = VDEF <.MEM_32>
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_30 = VDEF <.MEM_29>
gc_20->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_29 = VDEF <.MEM_28>
gc_20->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:23: warning: use location
  108 |         gc->ref_count = 1;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_28 = VDEF <.MEM_27>
gc_20->ctx = ctx_15(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:17: warning: use location
  107 |         gc->ctx = ctx;
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_27 = VDEF <.MEM_26>
gc_20->cb = cb_14(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:16: warning: use location
  106 |         gc->cb = cb;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25>
_9 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_27 = VDEF <.MEM_25>
_8->entry.tqe_prev = _9;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25>
_8 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
_5 = _4 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:13: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_23(D)>
_3 = gc_17->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:17: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_23(D)>
_2 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:19: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_23(D)>
_1 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:15: warning: use location
  119 |         if (gc->cb != NULL)
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_1 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
  119 |         if (gc->cb != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c6bdae58
    type <pointer_type 0x7fd0c6bee000
        type <void_type 0x7fd0c6be7f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd0c6bee000>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6bf39d8>>
   
    def_stmt _14 = calloc (_13, 4);
    version:14
    ptr-info 0x7fd0c670e798>
# .MEM_73 = VDEF <.MEM_66>
_14 = calloc (_13, 4);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_14 = calloc (_13, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^
this stmt is child function---calloc-----

 ================== trace ================== 
ctx_48->keys_seen = _14;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:29: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                             ^
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
if (_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 9
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 10
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 + _20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *_25;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                    ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
Cond in fucntion client_input_hostkeys basic block 12
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 13
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6bdae58
    type <pointer_type 0x7fd0c6bee000
        type <void_type 0x7fd0c6be7f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd0c6bee000>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6bf39d8>>
   
    def_stmt _14 = calloc (_13, 4);
    version:14
    ptr-info 0x7fd0c670e798>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd0c670e528 type <integer_type 0x7fd0c67029d8 size_t> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dcece0
    type <pointer_type 0x7fd0c6704540
        type <array_type 0x7fd0c6704498 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f28e8 constant 160>
            unit-size <integer_cst 0x7fd0c66f28d0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c67043f0>
            pointer_to_this <pointer_type 0x7fd0c6704540>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c6bd0f60 type <array_type 0x7fd0c6704498>
        readonly constant static "parse key %s error\012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:11 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:11 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dced20
    type <pointer_type 0x7fd0c67052a0
        type <array_type 0x7fd0c67051f8 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f29d8 constant 232>
            unit-size <integer_cst 0x7fd0c66f29c0 constant 29>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c6705150>
            pointer_to_this <pointer_type 0x7fd0c67052a0>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c6bdc118 type <array_type 0x7fd0c67051f8>
        readonly constant static "%s: server sent no hostkeys\012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:163:10 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:163:10 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:163:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c6bdae10
    type <integer_type 0x7fd0c6be77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be7738 precision:64 min <integer_cst 0x7fd0c6bd2e88 0> max <integer_cst 0x7fd0c6bd3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd0c6bf37e0>>
   
    def_stmt _13 = ctx_48->nkeys;
    version:13>
# VUSE <.MEM_66>
_13 = ctx_48->nkeys;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_14 = calloc (_13, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^
this stmt is child function---calloc-----

 ================== trace ================== 
ctx_48->keys_seen = _14;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:29: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                             ^
update_known_hosts (ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:184:17: warning: use location
  184 |                 update_known_hosts(ctx);
      |                 ^
this stmt is child function---update_known_hosts-----

 ================== trace ================== 
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
bb index := 19
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:191:17: warning: use location
  191 |                 client_register_global_confirm(
      |                 ^
this stmt is child function---client_register_global_confirm-----

 ================== trace ================== 
trace fucntion name:client_register_global_confirm 
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_37 = ctx_48->nnew;
bb index := 19
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
_37 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
  190 |                 printf("asking server to prove ownership for %zu keys\n", ctx->nnew);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
printf ("asking server to prove ownership for %zu keys\n", _37);
bb index := 19
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 7

======================================================================
printf ("asking server to prove ownership for %zu keys\n", _37);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:28: warning: use location
  176 |                         ctx->nnew++;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nnew = _28;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:34: warning: use location
  176 |                         ctx->nnew++;
      |                                  ^
_31 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:51: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                                   ^
_32 = _30 - _31;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^
printf ("%zu keys from server: %zu new, %zu retained. \n", _34, _33, _32);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
_33 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
_35 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:16: warning: use location
  182 |         if (ctx->nnew == 0) {
      |                ^
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
if (_35 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 16
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 17
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_36 = ctx_48->nnew;
bb index := 18
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 7

======================================================================
_36 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:23: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^
_34 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:20: warning: use location
  159 |                 ctx->nkeys++;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nkeys = _11;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:27: warning: use location
  159 |                 ctx->nkeys++;
      |                           ^
_12 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:16: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |                ^
_13 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:28: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
if (_29 > i_38)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
Cond in fucntion client_input_hostkeys basic block 15
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 12
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_30 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:38: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^
if (_10 > i_11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
Cond in fucntion client_input_hostkeys basic block 11
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 > i_6)
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
if (_5 > i_6)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
Cond in fucntion client_input_hostkeys basic block 6
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 3
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *_25;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                    ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
Cond in fucntion client_input_hostkeys basic block 12
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 13
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
if (_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
Cond in fucntion client_input_hostkeys basic block 9
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 10
 ================== possible direct basic block ================= 
from client_input_hostkeys basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _4 + _5;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_7 = *_6;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
ctx_48->nnew = 0;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:172:19: warning: use location
  172 |         ctx->nnew = 0;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6bdae10
    type <integer_type 0x7fd0c6be77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be7738 precision:64 min <integer_cst 0x7fd0c6bd2e88 0> max <integer_cst 0x7fd0c6bd3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd0c6bf37e0>>
   
    def_stmt _13 = ctx_48->nkeys;
    version:13>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_22>
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_10(D)>
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# VUSE <.MEM_5(D)>
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: Use after free error!: free location 
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:157:25: warning: use location
  157 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 3
if (_5 != 107)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:19: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                   ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 18
if (_36 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:19: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                   ^
	relate logic:= 0
=succs:= 16
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
	relate logic:= 0
=succs:= 15
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
	relate logic:= 0
=succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
=succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
=succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
=succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dcedc0
    type <pointer_type 0x7fd0c6705540
        type <array_type 0x7fd0c6705498 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f2a08 constant 152>
            unit-size <integer_cst 0x7fd0c66f28b8 constant 19>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c67053f0>
            pointer_to_this <pointer_type 0x7fd0c6705540>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c671b0c8 type <array_type 0x7fd0c6705498>
        readonly constant static "%s: calloc failed\012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:169:3 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:169:3 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:169:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c6bdaee8
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
   
    def_stmt _16 = rand ();
    version:16>
# .MEM_79 = VDEF <.MEM_68>
_16 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 % 2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = _17 == 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (int) _18;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6bdaee8
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
   
    def_stmt _16 = rand ();
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dcee80
    type <pointer_type 0x7fd0c6705738
        type <array_type 0x7fd0c6705690 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f2930 constant 376>
            unit-size <integer_cst 0x7fd0c66f2a38 constant 47>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c67055e8>
            pointer_to_this <pointer_type 0x7fd0c6705738>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c6718798 type <array_type 0x7fd0c6705690>
        readonly constant static "%zu keys from server: %zu new, %zu retained. \012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dceee0
    type <pointer_type 0x7fd0c6705738
        type <array_type 0x7fd0c6705690 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f2930 constant 376>
            unit-size <integer_cst 0x7fd0c66f2a38 constant 47>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c67055e8>
            pointer_to_this <pointer_type 0x7fd0c6705738>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c67187e0 type <array_type 0x7fd0c6705690>
        readonly constant static "asking server to prove ownership for %zu keys\012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:10 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:10 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c6dcef20
    type <pointer_type 0x7fd0c6705888
        type <function_type 0x7fd0c66fbc78 type <void_type 0x7fd0c6be7f18 void>
            QI
            size <integer_cst 0x7fd0c6bd2ca8 constant 8>
            unit-size <integer_cst 0x7fd0c6bd2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fd0c66fd4d8 value <integer_type 0x7fd0c6be75e8 int>
                chain <tree_list 0x7fd0c66fd4b0 value <integer_type 0x7fd0c66fbbd0 u_int32_t>
                    chain <tree_list 0x7fd0c66fd460 value <pointer_type 0x7fd0c6bee000>
                        chain <tree_list 0x7fd0c6be6b18 value <void_type 0x7fd0c6be7f18 void>>>>> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c6705888>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <function_decl 0x7fd0c66fcc00 client_global_hostkeys_private_confirm type <function_type 0x7fd0c66fbc78>
        addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7fd0c670b1e0>
        result <result_decl 0x7fd0c6bdd3c0 D.4478 type <void_type 0x7fd0c6be7f18 void>
            ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
            align:8 warn_if_not_align:0 context <function_decl 0x7fd0c66fcc00 client_global_hostkeys_private_confirm>>
        arguments <parm_decl 0x7fd0c6707800 type type <integer_type 0x7fd0c6be75e8 int>
            SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44
            size <integer_cst 0x7fd0c6bd2df8 constant 32>
            unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7fd0c66fcc00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7fd0c6be75e8 int> chain <parm_decl 0x7fd0c6707880 seq>>
        struct-function 0x7fd0c670c2e0>
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:192:7 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:192:7 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:192:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c67185a0
    type <pointer_type 0x7fd0c67041f8
        type <record_type 0x7fd0c6704150 hostkeys_update_ctx BLK
            size <integer_cst 0x7fd0c6bf0000 constant 512>
            unit-size <integer_cst 0x7fd0c6ca7090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6704150 fields <field_decl 0x7fd0c66fea18 host_str> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c67041f8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd0c6715120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7fd0c670e828>
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c67185a0
    type <pointer_type 0x7fd0c67041f8
        type <record_type 0x7fd0c6704150 hostkeys_update_ctx BLK
            size <integer_cst 0x7fd0c6bf0000 constant 512>
            unit-size <integer_cst 0x7fd0c6ca7090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6704150 fields <field_decl 0x7fd0c66fea18 host_str> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c67041f8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd0c6715120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7fd0c670e828>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================
[40;33m =======POP node_fun stack:client_input_hostkeys========= [0m
[40;44m =======node_fun:client_global_request_reply========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path client_global_request_reply  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:client_global_request_reply========= [0m
[40;42m =======start_check_funciton:client_global_request_reply========= [0m
[40;33m =======POP node_fun stack:client_global_request_reply========= [0m
[40;44m =======node_fun:client_register_global_confirm========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:client_register_global_confirm========= [0m
[40;42m =======start_check_funciton:client_register_global_confirm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd0c671d948
    type <pointer_type 0x7fd0c6702dc8
        type <record_type 0x7fd0c6702d20 global_confirm BLK
            size <integer_cst 0x7fd0c66f2750 constant 320>
            unit-size <integer_cst 0x7fd0c66f2870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6702d20 fields <field_decl 0x7fd0c66fe558 entry> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c6702dc8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6702e70>>
    var <var_decl 0x7fd0c6715b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7fd0c670ea50>
# .MEM_26 = VDEF <.MEM_22(D)>
gc_20 = calloc (1, 40);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_10 = &gc_20->entry.tqe_next;
In function â€˜client_register_global_confirmâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:16: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0B)
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |               ^
if (_5 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
Cond in fucntion client_register_global_confirm basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
gc_17 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:17: warning: use location
  117 |         if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
      |                 ^
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
  123 |                 free(gc);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_12 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
*_11 = _12;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_11 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_10 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_7 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_7 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 > 9999)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
if (_7 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
if (_7 > 9999)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
Cond in fucntion client_register_global_confirm basic block 5
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 6
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22(D)>
_5 = last_gc_13->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_5 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 + 1;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_6 = _5 + 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:21: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
last_gc_13->ref_count = _6;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
last_gc_13->ref_count = _6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
if (_4 == ctx_15(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                          ^
if (_4 == ctx_15(D))

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
Cond in fucntion client_register_global_confirm basic block 4
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 5
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
if (_3 == cb_14(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                     ^
if (_3 == cb_14(D))

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
Cond in fucntion client_register_global_confirm basic block 3
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 4
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->entry.tqe_prev = _8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
_8->entry.tqe_prev = _9;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_8 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = gc_17->entry.tqe_next;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_7 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_6 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_6 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 <= 0)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
if (_6 <= 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
if (_6 <= 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
Cond in fucntion client_register_global_confirm basic block 5
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 6
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_4 = gc_17->ref_count;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_4 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 + -1;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_5 = _4 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:13: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_20>
gc_17->ref_count = _5;
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
gc_17->ref_count = _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_3 = gc_17->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:17: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                 ^
_2 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:19: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                   ^
_1 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:15: warning: use location
  119 |         if (gc->cb != NULL)
      |               ^
if (_1 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
  119 |         if (gc->cb != NULL)
      |            ^
if (_1 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
Cond in fucntion client_register_global_confirm basic block 3
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 4
 ================== possible direct basic block ================= 
from client_register_global_confirm basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
gc_20->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:23: warning: use location
  108 |         gc->ref_count = 1;
      |                       ^
gc_20->ctx = ctx_15(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:17: warning: use location
  107 |         gc->ctx = ctx;
      |                 ^
gc_20->cb = cb_14(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:16: warning: use location
  106 |         gc->cb = cb;
      |                ^
gc_20 = calloc (1, 40);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:105:14: warning: use location
  105 |         gc = xcalloc(1, sizeof(*gc));
      |              ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c671d948
    type <pointer_type 0x7fd0c6702dc8
        type <record_type 0x7fd0c6702d20 global_confirm BLK
            size <integer_cst 0x7fd0c66f2750 constant 320>
            unit-size <integer_cst 0x7fd0c66f2870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6702d20 fields <field_decl 0x7fd0c66fe558 entry> context <translation_unit_decl 0x7fd0c6bdd168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7fd0c6702dc8>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6702e70>>
    var <var_decl 0x7fd0c6715b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7fd0c670ea50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7fd0c6722080
    type <pointer_type 0x7fd0c6704e70
        type <array_type 0x7fd0c6704dc8 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f2960 constant 200>
            unit-size <integer_cst 0x7fd0c66f2948 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c6704d20>
            pointer_to_this <pointer_type 0x7fd0c6704e70>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c6719f00 type <array_type 0x7fd0c6704dc8>
        readonly constant static "%s: last_gc->ref_count \012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:100:4 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:100:4 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:100:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:client_register_global_confirm========= [0m
[40;44m =======node_fun:client_global_hostkeys_private_confirm========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path client_global_hostkeys_private_confirm  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:client_global_hostkeys_private_confirm========= [0m
[40;42m =======start_check_funciton:client_global_hostkeys_private_confirm========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fd0c6722220
    type <pointer_type 0x7fd0c6704540
        type <array_type 0x7fd0c6704498 type <integer_type 0x7fd0c66fbdc8 char>
            BLK
            size <integer_cst 0x7fd0c66f28e8 constant 160>
            unit-size <integer_cst 0x7fd0c66f28d0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd0c67043f0>
            pointer_to_this <pointer_type 0x7fd0c6704540>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd0c67255a0 type <array_type 0x7fd0c6704498>
        readonly constant static "%s: ctx->nnew == 0\012\000">
    ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:67:3 start: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:67:3 finish: ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:67:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c671dd80
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
   
    def_stmt _2 = rand ();
    version:2>
# .MEM_26 = VDEF <.MEM_25(D)>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_16>
return 0;
In function â€˜client_global_hostkeys_private_confirmâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_3 = _2 % 2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:13: warning: use location
   68 |         if (__RANDBOOL) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:12: warning: use location
   68 |         if (__RANDBOOL) {
      |            ^
if (_3 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:12: warning: use location
Cond in fucntion client_global_hostkeys_private_confirm basic block 4
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 5
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25(D)>
_2 = rand ();
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_2 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:13: warning: use location
   68 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c671dd80
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd0c67222e0
    type <pointer_type 0x7fd0c6702738
        type <integer_type 0x7fd0c66fbf18 char readonly QI
            size <integer_cst 0x7fd0c6bd2ca8 constant 8>
            unit-size <integer_cst 0x7fd0c6bd2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be73f0 precision:8 min <integer_cst 0x7fd0c66f2798 -128> max <integer_cst 0x7fd0c66f2780 127>
            pointer_to_this <pointer_type 0x7fd0c6702738>>
        unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7fd0c6bdc188 type <integer_type 0x7fd0c66fbf18 char>
       
        arg:0 <string_cst 0x7fd0c671ecd0 type <array_type 0x7fd0c6704b28>
            readonly constant static "Server failed to confirm ownership of private host keys\000">
        arg:1 <integer_cst 0x7fd0c6bd2f48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c6726090
    type <pointer_type 0x7fd0c6bee000
        type <void_type 0x7fd0c6be7f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd0c6bee000>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6bf39d8>>
    var <parm_decl 0x7fd0c6707900 _ctx>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fd0c670ea98>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
update_known_hosts (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:86:9: warning: use location
   86 |         update_known_hosts(ctx);
      |         ^
this stmt is child function---update_known_hosts-----

 ================== trace ================== 
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with _ctx ========= [0m
[40;36m ======= relate stmt argument:_ctx ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 Expand conflict 
 The same function may have multiple branches :hostkeys_update_ctx_free
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: use location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
# .MEM_28 = VDEF <.MEM_23>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:88:9: warning: use location
   88 |         hostkeys_update_ctx_free(ctx);
      |         ^
=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:80:25: warning: use location
   80 |                         goto out;
      |                         ^
	relate logic:= 1
succs:= 8
if (_9 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:79:19: warning: use location
   79 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
succs:= 7
// predicted unlikely by continue predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:20: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                    ^
	relate logic:= 1
succs:= 6
if (_7 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:20: warning: use location
	relate logic:= 0
succs:= 9
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:164:17: warning: use location
  164 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 7
if (_12 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:12: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |            ^
	relate logic:= 0
succs:= 6
if (i_40 < argc_49(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:153:26: warning: use location
  153 |         for(int i = 1; i < argc; i++)
      |                          ^
	relate logic:= 0
succs:= 2
if (argc_49(D) == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:149:12: warning: use location
  149 |         if (argc == 1)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^
if (_10 > i_11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
Cond in fucntion client_global_hostkeys_private_confirm basic block 11
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 6
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:20: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                    ^
if (_7 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:20: warning: use location
Cond in fucntion client_global_hostkeys_private_confirm basic block 6
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 7
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: use location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with _ctx ========= [0m
[40;36m ======= relate stmt argument:_ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_24>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_24>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
   54 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
beacuse in succ := 21 have return or exit
# VUSE <.MEM_70>
return 1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_24>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_24>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
   54 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:12: warning: use location
   66 |         if (ctx->nnew == 0)
      |            ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:12: warning: use location
Cond in fucntion client_global_hostkeys_private_confirm basic block 2
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 3
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd0c6726090
    type <pointer_type 0x7fd0c6bee000
        type <void_type 0x7fd0c6be7f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd0c6bee000>>
        public unsigned DI
        size <integer_cst 0x7fd0c6bd2bb8 constant 64>
        unit-size <integer_cst 0x7fd0c6bd2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd0c6bf39d8>>
    var <parm_decl 0x7fd0c6707900 _ctx>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fd0c670ea98>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: Use after free error!: free location 
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
# VUSE <.MEM_22>
update_known_hosts (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:86:9: warning: use location
   86 |         update_known_hosts(ctx);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:12: warning: use location
   68 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:12: warning: use location
   66 |         if (ctx->nnew == 0)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: Use after free error!: free location 
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
# VUSE <.MEM_22>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:12: warning: use location
   68 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:12: warning: use location
   66 |         if (ctx->nnew == 0)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: Use after free error!: free location 
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:12: warning: use location
   68 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:12: warning: use location
   66 |         if (ctx->nnew == 0)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: Use after free error!: free location 
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:12: warning: use location
   68 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:12: warning: use location
   66 |         if (ctx->nnew == 0)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: Use after free error!: free location 
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:12: warning: use location
   68 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:12: warning: use location
   66 |         if (ctx->nnew == 0)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: Use after free error!: free location 
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
# VUSE <.MEM_22>
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:12: warning: use location
   68 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:12: warning: use location
   66 |         if (ctx->nnew == 0)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: Use after free error!: free location 
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
if (_7 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:20: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:12: warning: use location
   68 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:12: warning: use location
   66 |         if (ctx->nnew == 0)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd0c671df30
    type <integer_type 0x7fd0c6be75e8 int public SI
        size <integer_cst 0x7fd0c6bd2df8 constant 32>
        unit-size <integer_cst 0x7fd0c6bd2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd0c6be75e8 precision:32 min <integer_cst 0x7fd0c6bd2db0 -2147483648> max <integer_cst 0x7fd0c6bd2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd0c6bee9d8>>
   
    def_stmt _8 = rand ();
    version:8>
# .MEM_27 = VDEF <.MEM_22>
_8 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:client_global_hostkeys_private_confirm========= [0m
[40;44m =======node_fun:update_known_hosts========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;44m =======node_fun:hostkeys_update_ctx_free========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
client_input_hostkeys (argc_13(D), argv_14(D));

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
_3 = rand ();
_4 = _3 % 2;
if (_4 == 1)
  goto <bb 3>; [89.00%]
else
  goto <bb 8>; [11.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 118111600]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
client_global_request_reply (0, 0, 0B);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
_5 = global_confirms.tqh_first;
if (_5 != 0B)
  goto <bb 5>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return 0;

=======Mapping node_fun:client_input_hostkeys=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 145341681]:
ctx_48 = calloc (1, 64);
if (argc_49(D) == 1)
  goto <bb 21>; [20.97%]
else
  goto <bb 6>; [79.03%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686025]:
_1 = (long unsigned int) i_40;
_2 = _1 * 8;
_3 = argv_63(D) + _2;
_4 = *_3;
_5 = *_4;
if (_5 != 107)
  goto <bb 4>; [5.50%]
else
  goto <bb 5>; [94.50%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 55807731]:
_6 = (long unsigned int) i_40;
_7 = _6 * 8;
_8 = argv_63(D) + _7;
_9 = *_8;
printf ("parse key %s error\n", _9);
// predicted unlikely by goto predictor.
goto <bb 20>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 958878294]:
_10 = ctx_48->nkeys;
_11 = _10 + 1;
ctx_48->nkeys = _11;
i_65 = i_40 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# i_40 = PHI <1(2), i_65(5)>
if (i_40 < argc_49(D))
  goto <bb 3>; [94.50%]
else
  goto <bb 7>; [5.50%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 59055800]:
_12 = ctx_48->nkeys;
if (_12 == 0)
  goto <bb 8>; [34.00%]
else
  goto <bb 9>; [66.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 20078972]:
printf ("%s: server sent no hostkeys\n", &__func__);
// predicted unlikely by goto predictor.
goto <bb 20>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 38976828]:
_13 = ctx_48->nkeys;
_14 = calloc (_13, 4);
ctx_48->keys_seen = _14;
_15 = ctx_48->keys_seen;
if (_15 == 0B)
  goto <bb 10>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 15591]:
printf ("%s: calloc failed\n", &__func__);
exit (1);

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 38961237]:
ctx_48->nnew = 0;
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 315231830]:
_16 = rand ();
_17 = _16 % 2;
_18 = _17 == 1;
_19 = ctx_48->keys_seen;
_20 = i_38 * 4;
_21 = _19 + _20;
_22 = (int) _18;
*_21 = _22;
_23 = ctx_48->keys_seen;
_24 = i_38 * 4;
_25 = _23 + _24;
_26 = *_25;
if (_26 == 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 157615915]:
_27 = ctx_48->nnew;
_28 = _27 + 1;
ctx_48->nnew = _28;

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 315231830]:
i_59 = i_38 + 1;

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 354193067]:
# i_38 = PHI <0(11), i_59(14)>
_29 = ctx_48->nkeys;
if (_29 > i_38)
  goto <bb 12>; [89.00%]
else
  goto <bb 16>; [11.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 38961237]:
_30 = ctx_48->nkeys;
_31 = ctx_48->nnew;
_32 = _30 - _31;
_33 = ctx_48->nnew;
_34 = ctx_48->nkeys;
printf ("%zu keys from server: %zu new, %zu retained. \n", _34, _33, _32);
_35 = ctx_48->nnew;
if (_35 == 0)
  goto <bb 17>; [33.00%]
else
  goto <bb 18>; [67.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 12857208]:
update_known_hosts (ctx_48);
goto <bb 20>; [100.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 26104029]:
_36 = ctx_48->nnew;
if (_36 != 0)
  goto <bb 19>; [33.00%]
else
  goto <bb 20>; [67.00%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 8614330]:
_37 = ctx_48->nnew;
printf ("asking server to prove ownership for %zu keys\n", _37);
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 114847941]:
# ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
out:
hostkeys_update_ctx_free (ctx_39);

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 145326092]:
return 1;

=======Mapping node_fun:client_global_request_reply=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
gc_17 = global_confirms.tqh_first;
if (gc_17 == 0B)
  goto <bb 10>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 879501927]:
_1 = gc_17->cb;
if (_1 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 615651352]:
_2 = gc_17->cb;
_3 = gc_17->ctx;
_2 (type_18(D), seq_19(D), _3);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 879501927]:
_4 = gc_17->ref_count;
_5 = _4 + -1;
gc_17->ref_count = _5;
_6 = gc_17->ref_count;
if (_6 <= 0)
  goto <bb 6>; [41.00%]
else
  goto <bb 10>; [59.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 360595787]:
_7 = gc_17->entry.tqe_next;
if (_7 != 0B)
  goto <bb 7>; [70.00%]
else
  goto <bb 8>; [30.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 252417052]:
_8 = gc_17->entry.tqe_next;
_9 = gc_17->entry.tqe_prev;
_8->entry.tqe_prev = _9;
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 108178735]:
_10 = gc_17->entry.tqe_prev;
global_confirms.tqh_last = _10;

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 360595787]:
_11 = gc_17->entry.tqe_prev;
_12 = gc_17->entry.tqe_next;
*_11 = _12;
free (gc_17);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073741824]:
return 0;

=======Mapping node_fun:client_register_global_confirm=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = global_confirms.tqh_last;
_2 = MEM[(struct global_confirms *)_1].tqh_last;
last_gc_13 = *_2;
if (last_gc_13 != 0B)
  goto <bb 3>; [82.57%]
else
  goto <bb 7>; [17.43%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 886588625]:
_3 = last_gc_13->cb;
if (_3 == cb_14(D))
  goto <bb 4>; [30.00%]
else
  goto <bb 7>; [70.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 265976585]:
_4 = last_gc_13->ctx;
if (_4 == ctx_15(D))
  goto <bb 5>; [30.00%]
else
  goto <bb 7>; [70.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 79792975]:
_5 = last_gc_13->ref_count;
_6 = _5 + 1;
last_gc_13->ref_count = _6;
_7 = last_gc_13->ref_count;
if (_7 > 9999)
  goto <bb 6>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 31917]:
printf ("%s: last_gc->ref_count \n", &__func__);
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 993948850]:
gc_20 = calloc (1, 40);
gc_20->cb = cb_14(D);
gc_20->ctx = ctx_15(D);
gc_20->ref_count = 1;
gc_20->entry.tqe_next = 0B;
_8 = global_confirms.tqh_last;
gc_20->entry.tqe_prev = _8;
_9 = global_confirms.tqh_last;
*_9 = gc_20;
_10 = &gc_20->entry.tqe_next;
global_confirms.tqh_last = _10;

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1073709907]:
return;

=======Mapping node_fun:client_global_hostkeys_private_confirm=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 98365515]:
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
if (_1 == 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 39346]:
printf ("%s: ctx->nnew == 0\n", &__func__);
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 98326169]:
_2 = rand ();
_3 = _2 % 2;
if (_3 == 1)
  goto <bb 5>; [11.56%]
else
  goto <bb 11>; [88.44%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 11366505]:
__builtin_puts (&"Server failed to confirm ownership of private host keys"[0]);
hostkeys_update_ctx_free (_ctx_16(D));
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1014686026]:
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
_5 = i_11 * 4;
_6 = _4 + _5;
_7 = *_6;
if (_7 != 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 8>; [50.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 507343013]:
// predicted unlikely by continue predictor.
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 507343013]:
_8 = rand ();
_9 = _8 % 2;
if (_9 == 1)
  goto <bb 9>; [5.50%]
else
  goto <bb 10>; [94.50%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 27903866]:
// predicted unlikely by goto predictor.
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 986782160]:
i_20 = i_11 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# i_11 = PHI <0(4), i_20(10)>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
if (_10 > i_11)
  goto <bb 6>; [94.50%]
else
  goto <bb 12>; [5.50%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 59055800]:
update_known_hosts (_ctx_16(D));

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 86959666]:
out:
hostkeys_update_ctx_free (_ctx_16(D));

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 98326170]:
return;

=======Mapping node_fun:update_known_hosts=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = ctx_8(D)->keys_seen;
_2 = i_6 * 4;
_3 = _1 + _2;
_4 = *_3;
if (_4 != 2)
  goto <bb 4>; [48.88%]
else
  goto <bb 5>; [51.12%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 467112051]:
// predicted unlikely by continue predictor.

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
i_9 = i_6 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# i_6 = PHI <0(2), i_9(5)>
_5 = ctx_8(D)->nkeys;
if (_5 > i_6)
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;

=======Mapping node_fun:hostkeys_update_ctx_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (ctx_3(D) == 0B)
  goto <bb 4>; [30.95%]
else
  goto <bb 3>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 741418729]:
_1 = ctx_3(D)->keys_seen;
free (_1);
free (ctx_3(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    find Entry point : 11 [0m
[40;34m    used_stmt array stack totalsize of : 0.005600 mb[0m
[40;34m    collect time: : 0.000597 s [0m
[40;34m    algorithm time: 0.159246 s [0m
[40;34m    gimple stmt count : : 170 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -0.8%|     -1.0%|
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                              |      |      |      |      |     -1.7%|     -1.2%|
stdarg                           |      |      |      |      |     -1.7%|     -1.2%|
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +3.0%|     +0.0%|
cplxlower                        |      |      |      |      |     +2.9%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -4.5%|     -1.4%|
copyprop                         |      |    +1|      |      |     -4.7%|     -1.4%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -32.3%|    -46.4%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     +1.0%|     -0.8%|
lim                              |      |      |      |      |     +1.0%|     -0.8%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +46.8%|    +87.8%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.2%|     -0.0%|
strlen                           |      |      |      |      |     -0.2%|     -0.0%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +73.7%|    +57.0%|
into_cfglayout                   |      |      |      |      |     -0.8%|     -0.1%|
jump                             |      |      |      |      |     -1.2%|     -0.5%|
subreg1                          |      |      |      |      |     -0.4%|     -0.4%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.7%|     -2.2%|
ce1                              |      |      |      |      |     -1.7%|     -2.2%|
reginfo                          |      |      |      |      |          |     +0.0%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2                          |      |      |      |      |     -0.3%|     -0.4%|
init-regs                        |      |      |      |      |     -0.3%|     -0.4%|
combine                          |      |      |      |      |     +1.4%|     +2.2%|
ce2                              |      |      |      |      |     +1.4%|     +2.2%|
outof_cfglayout                  |      |      |      |      |     +0.8%|     +0.1%|
split1                           |      |      |      |      |     +0.8%|     +0.1%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |     -4.5%|     -4.8%|
postreload                       |      |      |      |      |     -4.7%|     -5.1%|
split2                           |      |      |      |      |     +0.1%|     +0.1%|
cmpelim                          |      |      |      |      |     -0.1%|     +0.1%|
pro_and_epilogue                 |      |      |      |      |     +5.9%|     +6.1%|
dse2                             |      |      |      |      |     +5.7%|     +5.8%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |     +0.4%|     +0.1%|
split4                           |      |      |      |      |     +0.4%|     +0.1%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
