../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:10:
./benchmarks/openssh-portable/leak_3/../openssh.h:675:60: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:676:65: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:677:66: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:678:64: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:681:40: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c: In function ‘main’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  207 |         srand(time(NULL));
      |               ^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 44%)
 phase parsing                      :   0.02 (100%)   0.02 ( 67%)   0.04 ( 80%)  1415k ( 48%)
 phase opt and generate             :   0.00 (  0%)   0.01 ( 33%)   0.01 ( 20%)   205k (  7%)
 callgraph ipa passes               :   0.00 (  0%)   0.01 ( 33%)   0.01 ( 20%)   108k (  4%)
 preprocessing                      :   0.01 ( 50%)   0.00 (  0%)   0.00 (  0%)   642k ( 22%)
 lexical analysis                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.01 ( 33%)   0.01 ( 20%)   568k ( 19%)
 parser struct body                 :   0.01 ( 50%)   0.01 ( 33%)   0.01 ( 20%)   117k (  4%)
 tree CCP                           :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)  1552  (  0%)
 dominance computation              :   0.00 (  0%)   0.01 ( 33%)   0.00 (  0%)     0  (  0%)
 plugin execution                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)     0  (  0%)
 TOTAL                              :   0.02          0.03          0.05         2929k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.00         2214k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------time--
addr_expraddr_expraddr_expraddr_expraddr_expr------srand--
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------client_input_hostkeys--
node:= 4 
 	next_branch :=3
	next_branch :=8
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 8 
 	next_branch :=6
node:= 5 
 	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------client_global_request_reply--
node:= 6 
 	next_branch :=5
	next_branch :=7
=======node_fun:client_input_hostkeys=========
node:= 2 
 	next_branch :=21
	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=20
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 	next_branch :=20
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 11 
 	next_branch :=15
node:= 12 
 	next_branch :=13
	next_branch :=14
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=15
node:= 15 
 	next_branch :=12
	next_branch :=16
node:= 16 
 	next_branch :=17
	next_branch :=18
node:= 17 
 	next_branch :=20
addr_expraddr_expraddr_expraddr_expraddr_expr------update_known_hosts--
node:= 18 
 	next_branch :=19
	next_branch :=20
node:= 19 
 	next_branch :=20
addr_expraddr_expraddr_expraddr_expraddr_expr------client_register_global_confirm--
node:= 20 
 	next_branch :=21
addr_expraddr_expraddr_expraddr_expraddr_expr------hostkeys_update_ctx_free--
=======node_fun:client_global_request_reply=========
node:= 2 
 	next_branch :=10
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=6
	next_branch :=10
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=9
node:= 8 
 	next_branch :=9
node:= 9 
 	next_branch :=10
=======node_fun:client_register_global_confirm=========
node:= 2 
 	next_branch :=3
	next_branch :=7
node:= 3 
 	next_branch :=4
	next_branch :=7
node:= 4 
 	next_branch :=5
	next_branch :=7
node:= 5 
 	next_branch :=6
	next_branch :=8
node:= 6 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 7 
 	next_branch :=8
=======node_fun:client_global_hostkeys_private_confirm=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 4 
 	next_branch :=5
	next_branch :=11
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 5 
 	next_branch :=14
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_puts--
addr_expraddr_expraddr_expraddr_expraddr_expr------hostkeys_update_ctx_free--
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=10
node:= 8 
 	next_branch :=9
	next_branch :=10
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 9 
 	next_branch :=13
node:= 10 
 	next_branch :=11
node:= 11 
 	next_branch :=6
	next_branch :=12
node:= 12 
 	next_branch :=13
addr_expraddr_expraddr_expraddr_expraddr_expr------update_known_hosts--
node:= 13 
 	next_branch :=14
addr_expraddr_expraddr_expraddr_expraddr_expr------hostkeys_update_ctx_free--
=======node_fun:update_known_hosts=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
=======node_fun:hostkeys_update_ctx_free=========
node:= 2 
 	next_branch :=4
	next_branch :=3
node:= 3 
 	next_branch :=4
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 18 
===============The second stage : Mapping stmt=================
# .MEM_18 = VDEF <.MEM_17(D)>
_1 = time (0B);
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
# .MEM_20 = VDEF <.MEM_15>
_3 = rand ();
# .MEM_21 = VDEF <.MEM_16>
client_global_request_reply (0, 0, 0B);
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
# .MEM_73 = VDEF <.MEM_66>
_14 = calloc (_13, 4);
# .MEM_79 = VDEF <.MEM_68>
_16 = rand ();
# VUSE <.MEM_76>
update_known_hosts (ctx_48);
# .MEM_78 = VDEF <.MEM_77>
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
# .MEM_26 = VDEF <.MEM_22(D)>
gc_20 = calloc (1, 40);
# .MEM_26 = VDEF <.MEM_25(D)>
_2 = rand ();
# .MEM_29 = VDEF <.MEM_26>
__builtin_puts (&"Server failed to confirm ownership of private host keys"[0]);
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
# .MEM_27 = VDEF <.MEM_22>
_8 = rand ();
# VUSE <.MEM_22>
update_known_hosts (_ctx_16(D));
# .MEM_28 = VDEF <.MEM_23>
hostkeys_update_ctx_free (_ctx_16(D));
===============The second stage : Program slicing=================
=============== *this point analyzable =================
_1 = time (0B);
========================================================
 <ssa_name 0x7f7bd6a79678
    type <integer_type 0x7f7bd6a86690 unsigned int public unsigned SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86690 precision:32 min <integer_cst 0x7f7bd6a71e28 0> max <integer_cst 0x7f7bd6a71de0 4294967295>
        pointer_to_this <pointer_type 0x7f7bd6a92690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
=============== *this point analyzable =================
srand (_2);
========================================================
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
=============== *this point analyzable =================
client_input_hostkeys (argc_13(D), argv_14(D));
========================================================
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
=============== *this point analyzable =================
client_input_hostkeys (argc_13(D), argv_14(D));
========================================================
=============== *this point analyzable =================
_3 = rand ();
========================================================
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>
=============== *this point analyzable =================
ctx_48 = calloc (1, 64);
========================================================
=============== *this point analyzable =================
_14 = calloc (_13, 4);
========================================================
=============== *this point analyzable =================
_16 = rand ();
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
========================================================
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>
=============== *this point analyzable =================
hostkeys_update_ctx_free (ctx_39);
========================================================
=============== *this point analyzable =================
gc_20 = calloc (1, 40);
========================================================
=============== *this point analyzable =================
_2 = rand ();
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_puts (&"Server failed to confirm ownership of private host keys"[0]);
========================================================
 <ssa_name 0x7f7bd65b4090
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
    var <parm_decl 0x7f7bd6595900 _ctx>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f7bd659ca98>
=============== *this point analyzable =================
hostkeys_update_ctx_free (_ctx_16(D));
========================================================
=============== *this point analyzable =================
_8 = rand ();
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:client_global_request_reply========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path client_global_request_reply  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:client_global_request_reply========= [0m
[40;42m =======start_check_funciton:client_global_request_reply========= [0m
[40;33m =======POP node_fun stack:client_global_request_reply========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:client_input_hostkeys========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path client_input_hostkeys  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
[40;42m =======pre add _ fucntion:client_register_global_confirm========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path client_register_global_confirm  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:client_register_global_confirm========= [0m
[40;42m =======start_check_funciton:client_register_global_confirm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7bd65ab948
    type <pointer_type 0x7f7bd6590dc8
        type <record_type 0x7f7bd6590d20 global_confirm BLK
            size <integer_cst 0x7f7bd6580750 constant 320>
            unit-size <integer_cst 0x7f7bd6580870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6590d20 fields <field_decl 0x7f7bd658c558 entry> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd6590dc8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6590e70>>
    var <var_decl 0x7f7bd65a3b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7f7bd659ca50>
 <ssa_name 0x7f7bd65ab948
    type <pointer_type 0x7f7bd6590dc8
        type <record_type 0x7f7bd6590d20 global_confirm BLK
            size <integer_cst 0x7f7bd6580750 constant 320>
            unit-size <integer_cst 0x7f7bd6580870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6590d20 fields <field_decl 0x7f7bd658c558 entry> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd6590dc8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6590e70>>
    var <var_decl 0x7f7bd65a3b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7f7bd659ca50>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
_10 = &gc_20->entry.tqe_next;
In function ‘main’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:16: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |               ^
gc_17 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:17: warning: use location
  117 |         if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
      |                 ^
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
  123 |                 free(gc);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_12 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
*_11 = _12;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_11 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_10 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^
_7 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^
if (_7 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_5 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^
_6 = _5 + 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:21: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                     ^
last_gc_13->ref_count = _6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
if (_4 == ctx_15(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                          ^
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
if (_3 == cb_14(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                     ^
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->entry.tqe_prev = _8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
_8->entry.tqe_prev = _9;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_8 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_7 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_6 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^
if (_6 <= 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_4 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^
_5 = _4 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:13: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |             ^
gc_17->ref_count = _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_3 = gc_17->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:17: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                 ^
_2 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:19: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                   ^
_1 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:15: warning: use location
  119 |         if (gc->cb != NULL)
      |               ^
if (_1 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
  119 |         if (gc->cb != NULL)
      |            ^
gc_20->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:23: warning: use location
  108 |         gc->ref_count = 1;
      |                       ^
gc_20->ctx = ctx_15(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:17: warning: use location
  107 |         gc->ctx = ctx;
      |                 ^
gc_20->cb = cb_14(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:16: warning: use location
  106 |         gc->cb = cb;
      |                ^
# .MEM_26 = VDEF <.MEM_22(D)>
gc_20 = calloc (1, 40);
gc_20 = calloc (1, 40);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:105:14: warning: use location
  105 |         gc = xcalloc(1, sizeof(*gc));
      |              ^
this stmt call this function :calloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd65ab948
    type <pointer_type 0x7f7bd6590dc8
        type <record_type 0x7f7bd6590d20 global_confirm BLK
            size <integer_cst 0x7f7bd6580750 constant 320>
            unit-size <integer_cst 0x7f7bd6580870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6590d20 fields <field_decl 0x7f7bd658c558 entry> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd6590dc8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6590e70>>
    var <var_decl 0x7f7bd65a3b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7f7bd659ca50>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:client_register_global_confirm========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:client_input_hostkeys========= [0m
[40;42m =======start_check_funciton:client_input_hostkeys========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
update_known_hosts (ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:184:17: warning: use location
  184 |                 update_known_hosts(ctx);
      |                 ^
this stmt call this function :update_known_hosts
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘update_known_hosts’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^
_3 = _1 + _2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---update_known_hosts-----
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt call this function :hostkeys_update_ctx_free
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘hostkeys_update_ctx_free’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
In function ‘main’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:191:17: warning: use location
  191 |                 client_register_global_confirm(
      |                 ^
this stmt call this function :client_register_global_confirm
trace fucntion name:client_register_global_confirm 
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘client_register_global_confirm’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:last_gc========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
last_gc_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:2 
_37 = ctx_48->nnew;
In function ‘main’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
  190 |                 printf("asking server to prove ownership for %zu keys\n", ctx->nnew);
      |                 ^
printf ("asking server to prove ownership for %zu keys\n", _37);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:28: warning: use location
  176 |                         ctx->nnew++;
      |                            ^
_31 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:51: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                                   ^
_32 = _30 - _31;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^
printf ("%zu keys from server: %zu new, %zu retained. \n", _34, _33, _32);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
_33 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
_35 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:16: warning: use location
  182 |         if (ctx->nnew == 0) {
      |                ^
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
_36 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:23: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                       ^
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nnew = _28;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:34: warning: use location
  176 |                         ctx->nnew++;
      |                                  ^
_34 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:20: warning: use location
  159 |                 ctx->nkeys++;
      |                    ^
_12 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:16: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |                ^
_13 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :calloc
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:147:15: warning: use location
  147 |         ctx = xcalloc(1, sizeof(*ctx));         /* allocation site */
      |               ^
# .MEM_73 = VDEF <.MEM_66>
_14 = calloc (_13, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 + _20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *_25;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *_3;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 != 2)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:20: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                    ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
ctx_48->keys_seen = _14;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:29: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:28: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
_30 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:38: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nkeys = _11;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:27: warning: use location
  159 |                 ctx->nkeys++;
      |                           ^
ctx_48->nnew = 0;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:172:19: warning: use location
  172 |         ctx->nnew = 0;
      |                   ^
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
ctx_48 = calloc (1, 64);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:147:15: warning: use location
  147 |         ctx = xcalloc(1, sizeof(*ctx));         /* allocation site */
      |               ^
this stmt call this function :calloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_22>
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_10(D)>
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_10(D)>
_4 = *_3;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
if (_4 != 2)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:20: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_5(D)>
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_22>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a79e58
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
   
    def_stmt _14 = calloc (_13, 4);
    version:14
    ptr-info 0x7f7bd659c798>
 <ssa_name 0x7f7bd6a79e58
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
   
    def_stmt _14 = calloc (_13, 4);
    version:14
    ptr-info 0x7f7bd659c798>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_73 = VDEF <.MEM_66>
_14 = calloc (_13, 4);
_14 = calloc (_13, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^
this stmt call this function :calloc
ctx_48->keys_seen = _14;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:29: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                             ^
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 + _20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *_25;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *_3;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 != 2)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:20: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                    ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd6a79e58
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
   
    def_stmt _14 = calloc (_13, 4);
    version:14
    ptr-info 0x7f7bd659c798>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a79ee8
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _16 = rand ();
    version:16>
 <ssa_name 0x7f7bd6a79ee8
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _16 = rand ();
    version:16>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd6a79ee8
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _16 = rand ();
    version:16>
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 % 2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = _17 == 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (int) _18;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_68>
_16 = rand ();
_16 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                     ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd6a79ee8
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _16 = rand ();
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>

 ================== pre trace ptable ================== 
trace fucntion name:client_global_hostkeys_private_confirm 
[40;44m =======trace_function_path client_global_hostkeys_private_confirm  function_call count: 6 level :888========  [0m
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
[40;36m ======= node_fun:client_global_hostkeys_private_confirm========= [0m
[40;36m ======= find relate stmt with client_global_hostkeys_private_confirm ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;46m =======add node_fun stack:hostkeys_update_ctx_free========= [0m
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :889========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with client_global_hostkeys_private_confirm ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;46m =======add node_fun stack:update_known_hosts========= [0m
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :889========  [0m
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with client_global_hostkeys_private_confirm ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
is Other function client_global_hostkeys_private_confirm
 
 Start check Pointer Collect  

======================================================================
# .MEM_78 = VDEF <.MEM_77>
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:191:17: warning: use location
  191 |                 client_register_global_confirm(
      |                 ^
this stmt call this function :client_register_global_confirm
trace fucntion name:client_register_global_confirm 
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with client_global_hostkeys_private_confirm ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_78 = VDEF <.MEM_77>
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:191:17: warning: use location
this stmt call this function :client_register_global_confirm
trace fucntion name:client_register_global_confirm 
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with client_global_hostkeys_private_confirm ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt call this function :hostkeys_update_ctx_free
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘hostkeys_update_ctx_free’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
hostkeys_update_ctx_free (ctx_39);
In function ‘main’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt call this function :hostkeys_update_ctx_free
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘hostkeys_update_ctx_free’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a79e10
    type <integer_type 0x7f7bd6a867e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86738 precision:64 min <integer_cst 0x7f7bd6a71e88 0> max <integer_cst 0x7f7bd6a72500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7bd6a927e0>>
   
    def_stmt _13 = ctx_48->nkeys;
    version:13>
 <ssa_name 0x7f7bd6a79e10
    type <integer_type 0x7f7bd6a867e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86738 precision:64 min <integer_cst 0x7f7bd6a71e88 0> max <integer_cst 0x7f7bd6a72500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7bd6a927e0>>
   
    def_stmt _13 = ctx_48->nkeys;
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd6a79e10
    type <integer_type 0x7f7bd6a867e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86738 precision:64 min <integer_cst 0x7f7bd6a71e88 0> max <integer_cst 0x7f7bd6a72500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7bd6a927e0>>
   
    def_stmt _13 = ctx_48->nkeys;
    version:13>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:client_input_hostkeys========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a79630
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _1 = time (0B);
    version:1>
 <ssa_name 0x7f7bd6a79630
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _1 = time (0B);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd6a79630
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _1 = time (0B);
    version:1>
is Other function time
 
 Start check Pointer Collect  

======================================================================
_2 = (unsigned int) _1;
In function ‘main’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:9: warning: use location
  207 |         srand(time(NULL));
      |         ^
srand (_2);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_18 = VDEF <.MEM_17(D)>
_1 = time (0B);
_1 = time (0B);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:15: warning: use location
  207 |         srand(time(NULL));
      |               ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd6a79630
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _1 = time (0B);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a79678
    type <integer_type 0x7f7bd6a86690 unsigned int public unsigned SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86690 precision:32 min <integer_cst 0x7f7bd6a71e28 0> max <integer_cst 0x7f7bd6a71de0 4294967295>
        pointer_to_this <pointer_type 0x7f7bd6a92690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
 <ssa_name 0x7f7bd6a79678
    type <integer_type 0x7f7bd6a86690 unsigned int public unsigned SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86690 precision:32 min <integer_cst 0x7f7bd6a71e28 0> max <integer_cst 0x7f7bd6a71de0 4294967295>
        pointer_to_this <pointer_type 0x7f7bd6a92690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd6a79678
    type <integer_type 0x7f7bd6a86690 unsigned int public unsigned SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86690 precision:32 min <integer_cst 0x7f7bd6a71e28 0> max <integer_cst 0x7f7bd6a71de0 4294967295>
        pointer_to_this <pointer_type 0x7f7bd6a92690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:9: warning: use location
  207 |         srand(time(NULL));
      |         ^
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd6a79678
    type <integer_type 0x7f7bd6a86690 unsigned int public unsigned SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86690 precision:32 min <integer_cst 0x7f7bd6a71e28 0> max <integer_cst 0x7f7bd6a71de0 4294967295>
        pointer_to_this <pointer_type 0x7f7bd6a92690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
client_input_hostkeys (argc_13(D), argv_14(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:209:17: warning: use location
  209 |                 client_input_hostkeys(argc, argv);
      |                 ^
this stmt call this function :client_input_hostkeys
trace fucntion name:client_input_hostkeys 
[40;44m =======trace_function_path client_input_hostkeys  function_call count: 7 level :0========  [0m
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:client_input_hostkeys========= [0m
[40;36m ======= find relate stmt with argc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;46m =======add node_fun stack:hostkeys_update_ctx_free========= [0m
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with argc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:client_register_global_confirm========= [0m
[40;46m =======add node_fun stack:client_register_global_confirm========= [0m
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with argc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;46m =======add node_fun stack:update_known_hosts========= [0m
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with argc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
client_input_hostkeys (argc_13(D), argv_14(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:209:17: warning: use location
  209 |                 client_input_hostkeys(argc, argv);
      |                 ^
this stmt call this function :client_input_hostkeys
trace fucntion name:client_input_hostkeys 
[40;44m =======trace_function_path client_input_hostkeys  function_call count: 7 level :0========  [0m
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:client_input_hostkeys========= [0m
[40;36m ======= find relate stmt with argc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;46m =======add node_fun stack:hostkeys_update_ctx_free========= [0m
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with argc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:client_register_global_confirm========= [0m
[40;46m =======add node_fun stack:client_register_global_confirm========= [0m
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with argc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;46m =======add node_fun stack:update_known_hosts========= [0m
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with argc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd6a79798
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
    var <parm_decl 0x7f7bd6595200 argc>
    def_stmt GIMPLE_NOP
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
client_input_hostkeys (argc_13(D), argv_14(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:209:17: warning: use location
  209 |                 client_input_hostkeys(argc, argv);
      |                 ^
this stmt call this function :client_input_hostkeys
trace fucntion name:client_input_hostkeys 
[40;44m =======trace_function_path client_input_hostkeys  function_call count: 7 level :0========  [0m
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>
[40;36m ======= node_fun:client_input_hostkeys========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘client_input_hostkeys’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:24: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                        ^
_3 = argv_63(D) + _2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:24: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:24: warning: use location
_4 = *_3;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:24: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:60: warning: use location
  156 |                         printf("parse key %s error\n", argv[i]);
      |                                                            ^
_8 = argv_63(D) + _7;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:60: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:25: warning: use location
  156 |                         printf("parse key %s error\n", argv[i]);
      |                         ^
_9 = *_8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:25: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                               ^
_21 = _19 + _20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;46m =======add node_fun stack:hostkeys_update_ctx_free========= [0m
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
In function ‘main’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘hostkeys_update_ctx_free’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:client_register_global_confirm========= [0m
[40;46m =======add node_fun stack:client_register_global_confirm========= [0m
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘client_register_global_confirm’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:last_gc========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
last_gc_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_10 = &gc_20->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;46m =======add node_fun stack:update_known_hosts========= [0m
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘update_known_hosts’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^
_3 = _1 + _2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_20>
client_input_hostkeys (argc_13(D), argv_14(D));
client_input_hostkeys (argc_13(D), argv_14(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:209:17: warning: use location
  209 |                 client_input_hostkeys(argc, argv);
      |                 ^
this stmt call this function :client_input_hostkeys
trace fucntion name:client_input_hostkeys 
[40;44m =======trace_function_path client_input_hostkeys  function_call count: 7 level :0========  [0m
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>
[40;36m ======= node_fun:client_input_hostkeys========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘client_input_hostkeys’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:24: warning: use location
  155 |                 if(argv[i][0] != 'k') {
      |                        ^
_3 = argv_63(D) + _2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:24: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:24: warning: use location
_4 = *_3;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:155:24: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:60: warning: use location
  156 |                         printf("parse key %s error\n", argv[i]);
      |                                                            ^
_8 = argv_63(D) + _7;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:60: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:25: warning: use location
  156 |                         printf("parse key %s error\n", argv[i]);
      |                         ^
_9 = *_8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:156:25: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                               ^
_21 = _19 + _20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;46m =======add node_fun stack:hostkeys_update_ctx_free========= [0m
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
In function ‘main’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘hostkeys_update_ctx_free’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:client_register_global_confirm========= [0m
[40;46m =======add node_fun stack:client_register_global_confirm========= [0m
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘client_register_global_confirm’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:last_gc========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
last_gc_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_10 = &gc_20->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;46m =======add node_fun stack:update_known_hosts========= [0m
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘update_known_hosts’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:argv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^
_3 = _1 + _2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd6a797e0
    type <pointer_type 0x7f7bd65902a0
        type <pointer_type 0x7f7bd65901f8 type <integer_type 0x7f7bd6589dc8 char>
            public unsigned DI
            size <integer_cst 0x7f7bd6a71bb8 constant 64>
            unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65902a0>>
        public unsigned DI size <integer_cst 0x7f7bd6a71bb8 64> unit-size <integer_cst 0x7f7bd6a71bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7bd6595280 argv>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f7bd659c720>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a796c0
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _3 = rand ();
    version:3>
 <ssa_name 0x7f7bd6a796c0
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd6a796c0
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _3 = rand ();
    version:3>
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = _3 % 2;
In function ‘main’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:208:15: warning: use location
  208 |         while(__RANDBOOL)
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:208:15: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_20 = VDEF <.MEM_15>
_3 = rand ();
_3 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:208:15: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd6a796c0
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:client_input_hostkeys========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path client_input_hostkeys  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
[40;42m =======pre add _ fucntion:client_register_global_confirm========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path client_register_global_confirm  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:client_register_global_confirm========= [0m
[40;42m =======start_check_funciton:client_register_global_confirm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7bd65ab948
    type <pointer_type 0x7f7bd6590dc8
        type <record_type 0x7f7bd6590d20 global_confirm BLK
            size <integer_cst 0x7f7bd6580750 constant 320>
            unit-size <integer_cst 0x7f7bd6580870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6590d20 fields <field_decl 0x7f7bd658c558 entry> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd6590dc8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6590e70>>
    var <var_decl 0x7f7bd65a3b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7f7bd659ca50>
 <ssa_name 0x7f7bd65ab948
    type <pointer_type 0x7f7bd6590dc8
        type <record_type 0x7f7bd6590d20 global_confirm BLK
            size <integer_cst 0x7f7bd6580750 constant 320>
            unit-size <integer_cst 0x7f7bd6580870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6590d20 fields <field_decl 0x7f7bd658c558 entry> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd6590dc8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6590e70>>
    var <var_decl 0x7f7bd65a3b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7f7bd659ca50>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
_10 = &gc_20->entry.tqe_next;
In function ‘client_input_hostkeys’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:16: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |               ^
gc_17 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:17: warning: use location
  117 |         if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
      |                 ^
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
  123 |                 free(gc);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_12 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
*_11 = _12;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_11 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_10 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^
_7 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^
if (_7 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_5 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^
_6 = _5 + 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:21: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                     ^
last_gc_13->ref_count = _6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
if (_4 == ctx_15(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                          ^
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
if (_3 == cb_14(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                     ^
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->entry.tqe_prev = _8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
_8->entry.tqe_prev = _9;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_8 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_7 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_6 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^
if (_6 <= 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_4 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^
_5 = _4 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:13: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |             ^
gc_17->ref_count = _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_3 = gc_17->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:17: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                 ^
_2 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:19: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                   ^
_1 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:15: warning: use location
  119 |         if (gc->cb != NULL)
      |               ^
if (_1 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
  119 |         if (gc->cb != NULL)
      |            ^
gc_20->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:23: warning: use location
  108 |         gc->ref_count = 1;
      |                       ^
gc_20->ctx = ctx_15(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:17: warning: use location
  107 |         gc->ctx = ctx;
      |                 ^
gc_20->cb = cb_14(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:16: warning: use location
  106 |         gc->cb = cb;
      |                ^
# .MEM_26 = VDEF <.MEM_22(D)>
gc_20 = calloc (1, 40);
gc_20 = calloc (1, 40);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:105:14: warning: use location
  105 |         gc = xcalloc(1, sizeof(*gc));
      |              ^
this stmt call this function :calloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd65ab948
    type <pointer_type 0x7f7bd6590dc8
        type <record_type 0x7f7bd6590d20 global_confirm BLK
            size <integer_cst 0x7f7bd6580750 constant 320>
            unit-size <integer_cst 0x7f7bd6580870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6590d20 fields <field_decl 0x7f7bd658c558 entry> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd6590dc8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6590e70>>
    var <var_decl 0x7f7bd65a3b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7f7bd659ca50>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:client_register_global_confirm========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:client_input_hostkeys========= [0m
[40;42m =======start_check_funciton:client_input_hostkeys========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
update_known_hosts (ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:184:17: warning: use location
  184 |                 update_known_hosts(ctx);
      |                 ^
this stmt call this function :update_known_hosts
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘update_known_hosts’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^
_3 = _1 + _2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
In function ‘client_input_hostkeys’:
lto1: warning: use location
this stmt have mutiple branch ---update_known_hosts-----
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt call this function :hostkeys_update_ctx_free
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘hostkeys_update_ctx_free’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
In function ‘client_input_hostkeys’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:191:17: warning: use location
  191 |                 client_register_global_confirm(
      |                 ^
this stmt call this function :client_register_global_confirm
trace fucntion name:client_register_global_confirm 
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘client_register_global_confirm’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:last_gc========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
last_gc_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:2 
_37 = ctx_48->nnew;
In function ‘client_input_hostkeys’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
  190 |                 printf("asking server to prove ownership for %zu keys\n", ctx->nnew);
      |                 ^
printf ("asking server to prove ownership for %zu keys\n", _37);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:28: warning: use location
  176 |                         ctx->nnew++;
      |                            ^
_31 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:51: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                                   ^
_32 = _30 - _31;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^
printf ("%zu keys from server: %zu new, %zu retained. \n", _34, _33, _32);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
_33 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
_35 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:16: warning: use location
  182 |         if (ctx->nnew == 0) {
      |                ^
if (_35 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:12: warning: use location
  182 |         if (ctx->nnew == 0) {
      |            ^
_36 = ctx_48->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:23: warning: use location
  185 |         } else if (ctx->nnew != 0) {
      |                       ^
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nnew = _28;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:34: warning: use location
  176 |                         ctx->nnew++;
      |                                  ^
_34 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:9: warning: use location
  179 |         printf("%zu keys from server: %zu new, %zu retained. \n",
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:20: warning: use location
  159 |                 ctx->nkeys++;
      |                    ^
_12 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:16: warning: use location
  162 |         if (ctx->nkeys == 0) {
      |                ^
_13 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :calloc
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:147:15: warning: use location
  147 |         ctx = xcalloc(1, sizeof(*ctx));         /* allocation site */
      |               ^
# .MEM_73 = VDEF <.MEM_66>
_14 = calloc (_13, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 + _20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *_25;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *_3;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 != 2)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:20: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                    ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
ctx_48->keys_seen = _14;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:29: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:28: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_29 > i_38)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:23: warning: use location
  173 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^
_30 = ctx_48->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:38: warning: use location
  180 |            ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_48->nkeys = _11;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:27: warning: use location
  159 |                 ctx->nkeys++;
      |                           ^
ctx_48->nnew = 0;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:172:19: warning: use location
  172 |         ctx->nnew = 0;
      |                   ^
# .MEM_72 = VDEF <.MEM_71(D)>
ctx_48 = calloc (1, 64);
ctx_48 = calloc (1, 64);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:147:15: warning: use location
  147 |         ctx = xcalloc(1, sizeof(*ctx));         /* allocation site */
      |               ^
this stmt call this function :calloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd65a6630
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_48 = calloc (1, 64);
    version:48
    ptr-info 0x7f7bd659c840>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_25(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_22>
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_10(D)>
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_10(D)>
_4 = *_3;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
if (_4 != 2)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:20: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_5(D)>
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_22>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:28: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: free in this location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^

===== possiable asias =====
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:23: warning: use location
   50 |         for (i = 0; i < ctx->nkeys; i++) {
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a79e58
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
   
    def_stmt _14 = calloc (_13, 4);
    version:14
    ptr-info 0x7f7bd659c798>
 <ssa_name 0x7f7bd6a79e58
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
   
    def_stmt _14 = calloc (_13, 4);
    version:14
    ptr-info 0x7f7bd659c798>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_73 = VDEF <.MEM_66>
_14 = calloc (_13, 4);
_14 = calloc (_13, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:31: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                               ^
this stmt call this function :calloc
ctx_48->keys_seen = _14;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:29: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                             ^
_15 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:17: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |                 ^
if (_15 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:12: warning: use location
  167 |         if ((ctx->keys_seen = calloc(ctx->nkeys,
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:20: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 + _20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:31: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = ctx_48->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:25: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = _23 + _24;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *_25;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:20: warning: use location
  175 |                 if (!ctx->keys_seen[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *_3;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 != 2)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:20: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                    ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd6a79e58
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
   
    def_stmt _14 = calloc (_13, 4);
    version:14
    ptr-info 0x7f7bd659c798>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a79ee8
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _16 = rand ();
    version:16>
 <ssa_name 0x7f7bd6a79ee8
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _16 = rand ();
    version:16>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd6a79ee8
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _16 = rand ();
    version:16>
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 % 2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = _17 == 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (int) _18;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:35: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_68>
_16 = rand ();
_16 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:37: warning: use location
  174 |                 ctx->keys_seen[i] = __RANDBOOL;
      |                                     ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd6a79ee8
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _16 = rand ();
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>

 ================== pre trace ptable ================== 
trace fucntion name:client_global_hostkeys_private_confirm 
[40;44m =======trace_function_path client_global_hostkeys_private_confirm  function_call count: 6 level :888========  [0m
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
[40;36m ======= node_fun:client_global_hostkeys_private_confirm========= [0m
[40;36m ======= find relate stmt with client_global_hostkeys_private_confirm ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;46m =======add node_fun stack:hostkeys_update_ctx_free========= [0m
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :889========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with client_global_hostkeys_private_confirm ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;46m =======add node_fun stack:update_known_hosts========= [0m
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :889========  [0m
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with client_global_hostkeys_private_confirm ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
is Other function client_global_hostkeys_private_confirm
 
 Start check Pointer Collect  

======================================================================
# .MEM_78 = VDEF <.MEM_77>
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:191:17: warning: use location
  191 |                 client_register_global_confirm(
      |                 ^
this stmt call this function :client_register_global_confirm
trace fucntion name:client_register_global_confirm 
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with client_global_hostkeys_private_confirm ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_78 = VDEF <.MEM_77>
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:191:17: warning: use location
this stmt call this function :client_register_global_confirm
trace fucntion name:client_register_global_confirm 
[40;44m =======trace_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
 <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm
    type <function_type 0x7f7bd6589c78
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f7bd658b4d8 value <integer_type 0x7f7bd6a865e8 int>
            chain <tree_list 0x7f7bd658b4b0 value <integer_type 0x7f7bd6589bd0 u_int32_t>
                chain <tree_list 0x7f7bd658b460 value <pointer_type 0x7f7bd6a8d000>
                    chain <tree_list 0x7f7bd6a85b18 value <void_type 0x7f7bd6a86f18 void>>>>> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
        pointer_to_this <pointer_type 0x7f7bd6593888>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c> initial <block 0x7f7bd65991e0>
    result <result_decl 0x7f7bd6a7c3c0 D.4478 type <void_type 0x7f7bd6a86f18 void>
        ignored VOID ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm>>
    arguments <parm_decl 0x7f7bd6595800 type
        type <integer_type 0x7f7bd6a865e8 int public SI
            size <integer_cst 0x7f7bd6a71df8 constant 32>
            unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
            pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
        SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:44 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6a865e8 int>
        chain <parm_decl 0x7f7bd6595880 seq type <integer_type 0x7f7bd6589bd0 u_int32_t>
            unsigned SI ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:58:60 size <integer_cst 0x7f7bd6a71df8 32> unit-size <integer_cst 0x7f7bd6a71e10 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7bd658ac00 client_global_hostkeys_private_confirm> arg-type <integer_type 0x7f7bd6589bd0 u_int32_t> chain <parm_decl 0x7f7bd6595900 _ctx>>>
    struct-function 0x7f7bd659a2e0>
[40;36m ======= node_fun:client_register_global_confirm========= [0m
[40;36m ======= find relate stmt with client_global_hostkeys_private_confirm ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
hostkeys_update_ctx_free (ctx_39);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt call this function :hostkeys_update_ctx_free
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘hostkeys_update_ctx_free’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_87 = VDEF <.MEM_69>
hostkeys_update_ctx_free (ctx_39);
hostkeys_update_ctx_free (ctx_39);
In function ‘client_input_hostkeys’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:9: warning: use location
  198 |         hostkeys_update_ctx_free(ctx);
      |         ^
this stmt call this function :hostkeys_update_ctx_free
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate node_fun argument:ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘hostkeys_update_ctx_free’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd65a65a0
    type <pointer_type 0x7f7bd65921f8
        type <record_type 0x7f7bd6592150 hostkeys_update_ctx BLK
            size <integer_cst 0x7f7bd6a8f000 constant 512>
            unit-size <integer_cst 0x7f7bd6b46090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6592150 fields <field_decl 0x7f7bd658ca18 host_str> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd65921f8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7bd65a3120 ctx>
    def_stmt ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
    version:39
    ptr-info 0x7f7bd659c828>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd6a79e10
    type <integer_type 0x7f7bd6a867e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86738 precision:64 min <integer_cst 0x7f7bd6a71e88 0> max <integer_cst 0x7f7bd6a72500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7bd6a927e0>>
   
    def_stmt _13 = ctx_48->nkeys;
    version:13>
 <ssa_name 0x7f7bd6a79e10
    type <integer_type 0x7f7bd6a867e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86738 precision:64 min <integer_cst 0x7f7bd6a71e88 0> max <integer_cst 0x7f7bd6a72500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7bd6a927e0>>
   
    def_stmt _13 = ctx_48->nkeys;
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd6a79e10
    type <integer_type 0x7f7bd6a867e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a86738 precision:64 min <integer_cst 0x7f7bd6a71e88 0> max <integer_cst 0x7f7bd6a72500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7bd6a927e0>>
   
    def_stmt _13 = ctx_48->nkeys;
    version:13>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:client_input_hostkeys========= [0m
[40;44m =======node_fun:client_global_request_reply========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path client_global_request_reply  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:client_global_request_reply========= [0m
[40;42m =======start_check_funciton:client_global_request_reply========= [0m
[40;33m =======POP node_fun stack:client_global_request_reply========= [0m
[40;44m =======node_fun:client_register_global_confirm========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path client_register_global_confirm  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:client_register_global_confirm========= [0m
[40;42m =======start_check_funciton:client_register_global_confirm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7bd65ab948
    type <pointer_type 0x7f7bd6590dc8
        type <record_type 0x7f7bd6590d20 global_confirm BLK
            size <integer_cst 0x7f7bd6580750 constant 320>
            unit-size <integer_cst 0x7f7bd6580870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6590d20 fields <field_decl 0x7f7bd658c558 entry> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd6590dc8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6590e70>>
    var <var_decl 0x7f7bd65a3b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7f7bd659ca50>
 <ssa_name 0x7f7bd65ab948
    type <pointer_type 0x7f7bd6590dc8
        type <record_type 0x7f7bd6590d20 global_confirm BLK
            size <integer_cst 0x7f7bd6580750 constant 320>
            unit-size <integer_cst 0x7f7bd6580870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6590d20 fields <field_decl 0x7f7bd658c558 entry> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd6590dc8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6590e70>>
    var <var_decl 0x7f7bd65a3b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7f7bd659ca50>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
_10 = &gc_20->entry.tqe_next;
In function ‘client_register_global_confirm’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:16: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:15: warning: use location
  210 |         while(!TAILQ_EMPTY(&global_confirms))
      |               ^
gc_17 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:17: warning: use location
  117 |         if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
      |                 ^
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
  123 |                 free(gc);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (gc_17);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_12 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
*_11 = _12;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_11 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_10 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
global_confirms.tqh_last = _10;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_1 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                   ^
_2 = MEM[(struct global_confirms *)_1].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:19: warning: use location
last_gc_13 = *_2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:17: warning: use location
   97 |         last_gc = TAILQ_LAST(&global_confirms, global_confirms);
      |                 ^
_7 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^
if (_7 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_5 = last_gc_13->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:30: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                              ^
_6 = _5 + 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:21: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                     ^
last_gc_13->ref_count = _6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:20: warning: use location
   99 |                 if (++last_gc->ref_count >= INT_MAX)
      |                    ^
_4 = last_gc_13->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:52: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                                    ^
if (_4 == ctx_15(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:42: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                                          ^
_3 = last_gc_13->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:31: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                               ^
if (_3 == cb_14(D))
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:21: warning: use location
   98 |         if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
      |                     ^
_8 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->entry.tqe_prev = _8;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
*_9 = gc_20;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
_9 = gc_17->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
  122 |                 TAILQ_REMOVE(&global_confirms, gc, entry);
      |                 ^
_8->entry.tqe_prev = _9;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_8 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_7 = gc_17->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:17: warning: use location
_6 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^
if (_6 <= 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_4 = gc_17->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:17: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |                 ^
_5 = _4 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:13: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |             ^
gc_17->ref_count = _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:12: warning: use location
  121 |         if (--gc->ref_count <= 0) {
      |            ^
_3 = gc_17->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:17: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                 ^
_2 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:19: warning: use location
  120 |                 gc->cb(type, seq, gc->ctx);
      |                   ^
_1 = gc_17->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:15: warning: use location
  119 |         if (gc->cb != NULL)
      |               ^
if (_1 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:12: warning: use location
  119 |         if (gc->cb != NULL)
      |            ^
gc_20->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:9: warning: use location
  109 |         TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
      |         ^
gc_20->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:23: warning: use location
  108 |         gc->ref_count = 1;
      |                       ^
gc_20->ctx = ctx_15(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:17: warning: use location
  107 |         gc->ctx = ctx;
      |                 ^
gc_20->cb = cb_14(D);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:16: warning: use location
  106 |         gc->cb = cb;
      |                ^
# .MEM_26 = VDEF <.MEM_22(D)>
gc_20 = calloc (1, 40);
gc_20 = calloc (1, 40);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:105:14: warning: use location
  105 |         gc = xcalloc(1, sizeof(*gc));
      |              ^
this stmt call this function :calloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd65ab948
    type <pointer_type 0x7f7bd6590dc8
        type <record_type 0x7f7bd6590d20 global_confirm BLK
            size <integer_cst 0x7f7bd6580750 constant 320>
            unit-size <integer_cst 0x7f7bd6580870 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6590d20 fields <field_decl 0x7f7bd658c558 entry> context <translation_unit_decl 0x7f7bd6a7c168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f7bd6590dc8>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6590e70>>
    var <var_decl 0x7f7bd65a3b40 gc>
    def_stmt gc_20 = calloc (1, 40);
    version:20
    ptr-info 0x7f7bd659ca50>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:client_register_global_confirm========= [0m
[40;44m =======node_fun:client_global_hostkeys_private_confirm========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path client_global_hostkeys_private_confirm  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:client_global_hostkeys_private_confirm========= [0m
[40;42m =======start_check_funciton:client_global_hostkeys_private_confirm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7bd65abd80
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f7bd65abd80
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd65abd80
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
In function ‘client_global_hostkeys_private_confirm’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:13: warning: use location
   68 |         if (__RANDBOOL) {
      |             ^
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:12: warning: use location
   68 |         if (__RANDBOOL) {
      |            ^
# .MEM_26 = VDEF <.MEM_25(D)>
_2 = rand ();
_2 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:13: warning: use location
   68 |         if (__RANDBOOL) {
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd65abd80
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f7bd6a7b188
    type <integer_type 0x7f7bd6589f18 char readonly QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a863f0 precision:8 min <integer_cst 0x7f7bd6580798 -128> max <integer_cst 0x7f7bd6580780 127>
        pointer_to_this <pointer_type 0x7f7bd6590738>>
   
    arg:0 <string_cst 0x7f7bd65accd0
        type <array_type 0x7f7bd6592b28 type <integer_type 0x7f7bd6589f18 char>
            BLK
            size <integer_cst 0x7f7bd6580888 constant 448>
            unit-size <integer_cst 0x7f7bd6580918 constant 56>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f7bd6592a80>>
        readonly constant static "Server failed to confirm ownership of private host keys\000">
    arg:1 <integer_cst 0x7f7bd6a71f48 type <integer_type 0x7f7bd6a865e8 int> constant 0>>
 <array_ref 0x7f7bd6a7b188
    type <integer_type 0x7f7bd6589f18 char readonly QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a863f0 precision:8 min <integer_cst 0x7f7bd6580798 -128> max <integer_cst 0x7f7bd6580780 127>
        pointer_to_this <pointer_type 0x7f7bd6590738>>
   
    arg:0 <string_cst 0x7f7bd65accd0
        type <array_type 0x7f7bd6592b28 type <integer_type 0x7f7bd6589f18 char>
            BLK
            size <integer_cst 0x7f7bd6580888 constant 448>
            unit-size <integer_cst 0x7f7bd6580918 constant 56>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f7bd6592a80>>
        readonly constant static "Server failed to confirm ownership of private host keys\000">
    arg:1 <integer_cst 0x7f7bd6a71f48 type <integer_type 0x7f7bd6a865e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f7bd6a7b188
    type <integer_type 0x7f7bd6589f18 char readonly QI
        size <integer_cst 0x7f7bd6a71ca8 constant 8>
        unit-size <integer_cst 0x7f7bd6a71cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a863f0 precision:8 min <integer_cst 0x7f7bd6580798 -128> max <integer_cst 0x7f7bd6580780 127>
        pointer_to_this <pointer_type 0x7f7bd6590738>>
   
    arg:0 <string_cst 0x7f7bd65accd0
        type <array_type 0x7f7bd6592b28 type <integer_type 0x7f7bd6589f18 char>
            BLK
            size <integer_cst 0x7f7bd6580888 constant 448>
            unit-size <integer_cst 0x7f7bd6580918 constant 56>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f7bd6592a80>>
        readonly constant static "Server failed to confirm ownership of private host keys\000">
    arg:1 <integer_cst 0x7f7bd6a71f48 type <integer_type 0x7f7bd6a865e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_29 = VDEF <.MEM_26>
__builtin_puts (&"Server failed to confirm ownership of private host keys"[0]);
__builtin_puts (&"Server failed to confirm ownership of private host keys"[0]);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:69:17: warning: use location
   69 |                 printf("Server failed to confirm ownership of "
      |                 ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_29 = VDEF <.MEM_26>
__builtin_puts (&"Server failed to confirm ownership of private host keys"[0]);
__builtin_puts (&"Server failed to confirm ownership of private host keys"[0]);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:69:17: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd65b4090
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
    var <parm_decl 0x7f7bd6595900 _ctx>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f7bd659ca98>
 <ssa_name 0x7f7bd65b4090
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
    var <parm_decl 0x7f7bd6595900 _ctx>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f7bd659ca98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd65b4090
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
    var <parm_decl 0x7f7bd6595900 _ctx>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f7bd659ca98>
is Other function 
 
 Start check Pointer Collect  

======================================================================
update_known_hosts (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:86:9: warning: use location
   86 |         update_known_hosts(ctx);
      |         ^
this stmt call this function :update_known_hosts
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f7bd65b4090
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
    var <parm_decl 0x7f7bd6595900 _ctx>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f7bd659ca98>
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with _ctx ========= [0m
[40;36m ======= relate node_fun argument:_ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘update_known_hosts’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                        ^
_1 = ctx_8(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:24: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:_ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
   51 |                 if (ctx->keys_seen[i] != 2)
      |                                   ^
_3 = _1 + _2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:51:35: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :hostkeys_update_ctx_free
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
In function ‘client_global_hostkeys_private_confirm’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: use location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
# .MEM_28 = VDEF <.MEM_23>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:88:9: warning: use location
   88 |         hostkeys_update_ctx_free(ctx);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:20: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                    ^
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: use location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^
this stmt call this function :hostkeys_update_ctx_free
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:9: warning: use location
   39 |         free(ctx->keys_seen);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:9: warning: use location
   40 |         free(ctx);
      |         ^
 <ssa_name 0x7f7bd65b4090
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
    var <parm_decl 0x7f7bd6595900 _ctx>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f7bd659ca98>
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with _ctx ========= [0m
[40;36m ======= relate node_fun argument:_ctx========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘hostkeys_update_ctx_free’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
   39 |         free(ctx->keys_seen);
      |                 ^
_1 = ctx_3(D)->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:17: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
In function ‘client_global_hostkeys_private_confirm’:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:16: warning: use location
   66 |         if (ctx->nnew == 0)
      |                ^
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:12: warning: use location
   66 |         if (ctx->nnew == 0)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd65b4090
    type <pointer_type 0x7f7bd6a8d000
        type <void_type 0x7f7bd6a86f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7bd6a8d000>>
        public unsigned DI
        size <integer_cst 0x7f7bd6a71bb8 constant 64>
        unit-size <integer_cst 0x7f7bd6a71bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7bd6a929d8>>
    var <parm_decl 0x7f7bd6595900 _ctx>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f7bd659ca98>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: free in this location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_22>
update_known_hosts (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:86:9: warning: use location
   86 |         update_known_hosts(ctx);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: free in this location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_22>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:36: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: free in this location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^

===== possiable asias =====
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:31: warning: use location
   75 |         for (ndone = i = 0; i < ctx->nkeys; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: free in this location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_22>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:24: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: free in this location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^

===== possiable asias =====
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: free in this location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_22>
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:35: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
hostkeys_update_ctx_free (_ctx_16(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:17: warning: free in this location
   71 |                 hostkeys_update_ctx_free(ctx);
      |                 ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:20: warning: use location
   76 |                 if (ctx->keys_seen[i])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7bd65abf30
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _8 = rand ();
    version:8>
 <ssa_name 0x7f7bd65abf30
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _8 = rand ();
    version:8>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f7bd65abf30
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _8 = rand ();
    version:8>
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_9 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:79:19: warning: use location
   79 |                 if(__RANDBOOL)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _8 % 2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:79:20: warning: use location
   79 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_27 = VDEF <.MEM_22>
_8 = rand ();
_8 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:79:20: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7bd65abf30
    type <integer_type 0x7f7bd6a865e8 int public SI
        size <integer_cst 0x7f7bd6a71df8 constant 32>
        unit-size <integer_cst 0x7f7bd6a71e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7bd6a865e8 precision:32 min <integer_cst 0x7f7bd6a71db0 -2147483648> max <integer_cst 0x7f7bd6a71dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7bd6a8d9d8>>
   
    def_stmt _8 = rand ();
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:client_global_hostkeys_private_confirm========= [0m
[40;44m =======node_fun:update_known_hosts========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;44m =======node_fun:hostkeys_update_ctx_free========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
client_input_hostkeys (argc_13(D), argv_14(D));

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
_3 = rand ();
_4 = _3 % 2;
if (_4 == 1)
  goto <bb 3>; [89.00%]
else
  goto <bb 8>; [11.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 118111600]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
client_global_request_reply (0, 0, 0B);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
_5 = global_confirms.tqh_first;
if (_5 != 0B)
  goto <bb 5>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return 0;

=======Mapping node_fun:client_input_hostkeys=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 145341681]:
ctx_48 = calloc (1, 64);
if (argc_49(D) == 1)
  goto <bb 21>; [20.97%]
else
  goto <bb 6>; [79.03%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686025]:
_1 = (long unsigned int) i_40;
_2 = _1 * 8;
_3 = argv_63(D) + _2;
_4 = *_3;
_5 = *_4;
if (_5 != 107)
  goto <bb 4>; [5.50%]
else
  goto <bb 5>; [94.50%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 55807731]:
_6 = (long unsigned int) i_40;
_7 = _6 * 8;
_8 = argv_63(D) + _7;
_9 = *_8;
printf ("parse key %s error\n", _9);
// predicted unlikely by goto predictor.
goto <bb 20>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 958878294]:
_10 = ctx_48->nkeys;
_11 = _10 + 1;
ctx_48->nkeys = _11;
i_65 = i_40 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# i_40 = PHI <1(2), i_65(5)>
if (i_40 < argc_49(D))
  goto <bb 3>; [94.50%]
else
  goto <bb 7>; [5.50%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 59055800]:
_12 = ctx_48->nkeys;
if (_12 == 0)
  goto <bb 8>; [34.00%]
else
  goto <bb 9>; [66.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 20078972]:
printf ("%s: server sent no hostkeys\n", &__func__);
// predicted unlikely by goto predictor.
goto <bb 20>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 38976828]:
_13 = ctx_48->nkeys;
_14 = calloc (_13, 4);
ctx_48->keys_seen = _14;
_15 = ctx_48->keys_seen;
if (_15 == 0B)
  goto <bb 10>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 15591]:
printf ("%s: calloc failed\n", &__func__);
exit (1);

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 38961237]:
ctx_48->nnew = 0;
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 315231830]:
_16 = rand ();
_17 = _16 % 2;
_18 = _17 == 1;
_19 = ctx_48->keys_seen;
_20 = i_38 * 4;
_21 = _19 + _20;
_22 = (int) _18;
*_21 = _22;
_23 = ctx_48->keys_seen;
_24 = i_38 * 4;
_25 = _23 + _24;
_26 = *_25;
if (_26 == 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 157615915]:
_27 = ctx_48->nnew;
_28 = _27 + 1;
ctx_48->nnew = _28;

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 315231830]:
i_59 = i_38 + 1;

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 354193067]:
# i_38 = PHI <0(11), i_59(14)>
_29 = ctx_48->nkeys;
if (_29 > i_38)
  goto <bb 12>; [89.00%]
else
  goto <bb 16>; [11.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 38961237]:
_30 = ctx_48->nkeys;
_31 = ctx_48->nnew;
_32 = _30 - _31;
_33 = ctx_48->nnew;
_34 = ctx_48->nkeys;
printf ("%zu keys from server: %zu new, %zu retained. \n", _34, _33, _32);
_35 = ctx_48->nnew;
if (_35 == 0)
  goto <bb 17>; [33.00%]
else
  goto <bb 18>; [67.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 12857208]:
update_known_hosts (ctx_48);
goto <bb 20>; [100.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 26104029]:
_36 = ctx_48->nnew;
if (_36 != 0)
  goto <bb 19>; [33.00%]
else
  goto <bb 20>; [67.00%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 8614330]:
_37 = ctx_48->nnew;
printf ("asking server to prove ownership for %zu keys\n", _37);
client_register_global_confirm (client_global_hostkeys_private_confirm, ctx_48);

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 114847941]:
# ctx_39 = PHI <ctx_48(4), ctx_48(8), ctx_48(17), ctx_48(18), 0B(19)>
out:
hostkeys_update_ctx_free (ctx_39);

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 145326092]:
return 1;

=======Mapping node_fun:client_global_request_reply=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
gc_17 = global_confirms.tqh_first;
if (gc_17 == 0B)
  goto <bb 10>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 879501927]:
_1 = gc_17->cb;
if (_1 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 615651352]:
_2 = gc_17->cb;
_3 = gc_17->ctx;
_2 (type_18(D), seq_19(D), _3);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 879501927]:
_4 = gc_17->ref_count;
_5 = _4 + -1;
gc_17->ref_count = _5;
_6 = gc_17->ref_count;
if (_6 <= 0)
  goto <bb 6>; [41.00%]
else
  goto <bb 10>; [59.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 360595787]:
_7 = gc_17->entry.tqe_next;
if (_7 != 0B)
  goto <bb 7>; [70.00%]
else
  goto <bb 8>; [30.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 252417052]:
_8 = gc_17->entry.tqe_next;
_9 = gc_17->entry.tqe_prev;
_8->entry.tqe_prev = _9;
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 108178735]:
_10 = gc_17->entry.tqe_prev;
global_confirms.tqh_last = _10;

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 360595787]:
_11 = gc_17->entry.tqe_prev;
_12 = gc_17->entry.tqe_next;
*_11 = _12;
free (gc_17);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073741824]:
return 0;

=======Mapping node_fun:client_register_global_confirm=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = global_confirms.tqh_last;
_2 = MEM[(struct global_confirms *)_1].tqh_last;
last_gc_13 = *_2;
if (last_gc_13 != 0B)
  goto <bb 3>; [82.57%]
else
  goto <bb 7>; [17.43%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 886588625]:
_3 = last_gc_13->cb;
if (_3 == cb_14(D))
  goto <bb 4>; [30.00%]
else
  goto <bb 7>; [70.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 265976585]:
_4 = last_gc_13->ctx;
if (_4 == ctx_15(D))
  goto <bb 5>; [30.00%]
else
  goto <bb 7>; [70.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 79792975]:
_5 = last_gc_13->ref_count;
_6 = _5 + 1;
last_gc_13->ref_count = _6;
_7 = last_gc_13->ref_count;
if (_7 > 9999)
  goto <bb 6>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 31917]:
printf ("%s: last_gc->ref_count \n", &__func__);
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 993948850]:
gc_20 = calloc (1, 40);
gc_20->cb = cb_14(D);
gc_20->ctx = ctx_15(D);
gc_20->ref_count = 1;
gc_20->entry.tqe_next = 0B;
_8 = global_confirms.tqh_last;
gc_20->entry.tqe_prev = _8;
_9 = global_confirms.tqh_last;
*_9 = gc_20;
_10 = &gc_20->entry.tqe_next;
global_confirms.tqh_last = _10;

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1073709907]:
return;

=======Mapping node_fun:client_global_hostkeys_private_confirm=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 98365515]:
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nnew;
if (_1 == 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 39346]:
printf ("%s: ctx->nnew == 0\n", &__func__);
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 98326169]:
_2 = rand ();
_3 = _2 % 2;
if (_3 == 1)
  goto <bb 5>; [11.56%]
else
  goto <bb 11>; [88.44%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 11366505]:
__builtin_puts (&"Server failed to confirm ownership of private host keys"[0]);
hostkeys_update_ctx_free (_ctx_16(D));
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1014686026]:
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].keys_seen;
_5 = i_11 * 4;
_6 = _4 + _5;
_7 = *_6;
if (_7 != 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 8>; [50.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 507343013]:
// predicted unlikely by continue predictor.
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 507343013]:
_8 = rand ();
_9 = _8 % 2;
if (_9 == 1)
  goto <bb 9>; [5.50%]
else
  goto <bb 10>; [94.50%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 27903866]:
// predicted unlikely by goto predictor.
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 986782160]:
i_20 = i_11 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# i_11 = PHI <0(4), i_20(10)>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_16(D)].nkeys;
if (_10 > i_11)
  goto <bb 6>; [94.50%]
else
  goto <bb 12>; [5.50%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 59055800]:
update_known_hosts (_ctx_16(D));

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 86959666]:
out:
hostkeys_update_ctx_free (_ctx_16(D));

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 98326170]:
return;

=======Mapping node_fun:update_known_hosts=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = ctx_8(D)->keys_seen;
_2 = i_6 * 4;
_3 = _1 + _2;
_4 = *_3;
if (_4 != 2)
  goto <bb 4>; [48.88%]
else
  goto <bb 5>; [51.12%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 467112051]:
// predicted unlikely by continue predictor.

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
i_9 = i_6 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# i_6 = PHI <0(2), i_9(5)>
_5 = ctx_8(D)->nkeys;
if (_5 > i_6)
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;

=======Mapping node_fun:hostkeys_update_ctx_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (ctx_3(D) == 0B)
  goto <bb 4>; [30.95%]
else
  goto <bb 3>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 741418729]:
_1 = ctx_3(D)->keys_seen;
free (_1);
free (ctx_3(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    all ptable point : 19 [0m
[40;34m    analyzable ptable point : 15 [0m
[40;34m    used_stmt array stack totalsize of : 0.002688 mb[0m
[40;34m    collect time: : 0.002588 s [0m
[40;34m    algorithm time: 0.070444 s [0m
[40;34m    gimple stmt count : : 170 [0m
[40;34m    this report analysis in Fri Feb 18 12:19:09 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 74%)
 phase opt and generate             :   0.07 (100%)   0.04 (100%)   0.12 (100%)   714k ( 24%)
 callgraph functions expansion      :   0.03 ( 43%)   0.00 (  0%)   0.03 ( 25%)   565k ( 19%)
 lto stream decompression           :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)     0  (  0%)
 ipa lto constructors in            :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)   264  (  0%)
 ipa points-to                      :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)  7000  (  0%)
 dominator optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)    27k (  1%)
 tree canonical iv                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)  1936  (  0%)
 dead store elim2                   :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)  7232  (  0%)
 LRA hard reg assignment            :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 plugin execution                   :   0.03 ( 43%)   0.04 (100%)   0.07 ( 58%)  2904  (  0%)
 rest of compilation                :   0.01 ( 14%)   0.00 (  0%)   0.01 (  8%)    22k (  1%)
 TOTAL                              :   0.07          0.04          0.12         2926k
