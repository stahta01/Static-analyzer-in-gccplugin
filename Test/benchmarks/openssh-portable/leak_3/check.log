In file included from ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:10:0:
./benchmarks/openssh-portable/leak_3/../openssh.h:675:49: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*verify_host_key)(struct sshkey *, struct ssh *);
                                                 ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:676:58: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
                                                          ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:677:59: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
                                                           ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:678:53: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*host_key_index)(struct sshkey *, int, struct ssh *);
                                                     ^~~
./benchmarks/openssh-portable/leak_3/../openssh.h:681:29: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*kex[KEX_MAX])(struct ssh *);
                             ^~~
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c: In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:8: warning: implicit declaration of function â€˜timeâ€™; did you mean â€˜dieâ€™? [-Wimplicit-function-declaration]
  srand(time(NULL));
        ^~~~
        die
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 3
succs:= 3
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 6
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 8
succs:= 7
--------GIMPLE Cond -------
succs:= 6
succs:= 11
succs:= 8
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 10
succs:= 10
--------GIMPLE Cond -------
succs:= 13
succs:= 13
--------GIMPLE Cond -------
succs:= 16
--------GIMPLE Cond -------
succs:= 17
succs:= 17
--------GIMPLE Cond -------
succs:= 19
--------GIMPLE Cond -------
succs:= 20
--------GIMPLE Cond -------
succs:= 21
--------GIMPLE Cond -------
succs:= 22
--------GIMPLE Cond -------
succs:= 23
succs:= 20
succs:= 21
succs:= 22
succs:= 19
succs:= 23
succs:= 3
--------GIMPLE Cond -------
succs:= 28
--------GIMPLE Cond -------
succs:= 29
--------GIMPLE Cond -------
succs:= 30
succs:= 11
succs:= 30
--------GIMPLE Cond -------
succs:= 32
--------GIMPLE Cond -------
succs:= 33
succs:= 33
succs:= 29
succs:= 32
--------GIMPLE Cond -------
succs:= 38
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_39 = VDEF <.MEM_33(D)>
_21 = __printf_chk (1, "%s: ctx->nnew == 0\n", &__func__);
# .MEM_34 = VDEF <.MEM_33(D)>
_2 = rand ();
# .MEM_37 = VDEF <.MEM_34>
_28 = __printf_chk (1, "Server failed to confirm ownership of private host keys\n");
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
# .MEM_35 = VDEF <.MEM_30>
_8 = rand ();
# VUSE <.MEM_30>
update_known_hosts (_ctx_18(D));
# .MEM_36 = VDEF <.MEM_31>
hostkeys_update_ctx_free (_ctx_18(D));
# .MEM_18 = VDEF <.MEM_17(D)>
_1 = time (0B);
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
# .MEM_112 = VDEF <.MEM_20>
ctx_23 = calloc (1, 64);
# .MEM_136 = VDEF <.MEM_97>
_34 = __printf_chk (1, "parse key %s error\n", _33);
# .MEM_134 = VDEF <.MEM_97>
_39 = __printf_chk (1, "%s: server sent no hostkeys\n", &__func__);
# .MEM_113 = VDEF <.MEM_97>
_41 = calloc (_40, 4);
# .MEM_132 = VDEF <.MEM_114>
_43 = __printf_chk (1, "%s: calloc failed\n", &__func__);
# .MEM_129 = VDEF <.MEM_99>
_44 = rand ();
# .MEM_116 = VDEF <.MEM_99>
_65 = __printf_chk (1, "%zu keys from server: %zu new, %zu retained. \n", _64, _63, _62);
# VUSE <.MEM_116>
update_known_hosts (ctx_23);
# .MEM_117 = VDEF <.MEM_116>
_69 = __printf_chk (1, "asking server to prove ownership for %zu keys\n", _68);
# .MEM_119 = VDEF <.MEM_118>
_79 = __printf_chk (1, "%s: last_gc->ref_count \n", &__func__);
# .MEM_121 = VDEF <.MEM_117>
gc_80 = calloc (1, 40);
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
# .MEM_20 = VDEF <.MEM_15>
_3 = rand ();
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:hostkeys_update_ctx_free========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
[40;44m =======node_fun:update_known_hosts========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;44m =======node_fun:client_global_hostkeys_private_confirm========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path client_global_hostkeys_private_confirm  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:client_global_hostkeys_private_confirm========= [0m
[40;42m =======start_check_funciton:client_global_hostkeys_private_confirm========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f09fac43f90 type <integer_type 0x7f09fac575e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f09fac4bee8
    type <integer_type 0x7f09fac575e8 int public SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac575e8 precision 32 min <integer_cst 0x7f09fac43de0 -2147483648> max <integer_cst 0x7f09fac43df8 2147483647>
        pointer_to_this <pointer_type 0x7f09fac5ea80>>
   
    def_stmt _2 = rand ();
    version 2>
# .MEM_34 = VDEF <.MEM_33(D)>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_4>
return;
In function â€˜client_global_hostkeys_private_confirmâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_3 = _2 % 2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:6: warning: use location
  if (__RANDBOOL) {
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:5: warning: use location
  if (__RANDBOOL) {
     ^
if (_3 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:5: warning: use location
Cond in fucntion client_global_hostkeys_private_confirm basic block 4
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 5
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33(D)>
_2 = rand ();
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33(D)>
_2 = rand ();
bb index := 4
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33(D)>
_2 = rand ();
bb index := 4
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33(D)>
_2 = rand ();
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_2 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:6: warning: use location
  if (__RANDBOOL) {
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f09fac4bee8
    type <integer_type 0x7f09fac575e8 int public SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac575e8 precision 32 min <integer_cst 0x7f09fac43de0 -2147483648> max <integer_cst 0x7f09fac43df8 2147483647>
        pointer_to_this <pointer_type 0x7f09fac5ea80>>
   
    def_stmt _2 = rand ();
    version 2>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09fac4bee8
    type <integer_type 0x7f09fac575e8 int public SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac575e8 precision 32 min <integer_cst 0x7f09fac43de0 -2147483648> max <integer_cst 0x7f09fac43df8 2147483647>
        pointer_to_this <pointer_type 0x7f09fac5ea80>>
   
    def_stmt _2 = rand ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09fa790168
    type <pointer_type 0x7f09fac5e0a8
        type <void_type 0x7f09fac57f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f09fac5e0a8>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fac63bd0>>
    var <parm_decl 0x7f09fa77e700 _ctx>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7f09fa792288>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
update_known_hosts (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:86:2: warning: use location
  update_known_hosts(ctx);
  ^
this stmt is child function---update_known_hosts-----

 ================== trace ================== 
 <ssa_name 0x7f09fa790168
    type <pointer_type 0x7f09fac5e0a8
        type <void_type 0x7f09fac57f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f09fac5e0a8>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fac63bd0>>
    var <parm_decl 0x7f09fa77e700 _ctx>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7f09fa792288>
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_31>
hostkeys_update_ctx_free (_ctx_18(D));
bb index := 13
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_31>
hostkeys_update_ctx_free (_ctx_18(D));
bb index := 13
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================

 Expand conflict 
 The same function may have multiple branches :hostkeys_update_ctx_free
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:3: warning: use location
   hostkeys_update_ctx_free(ctx);
   ^
# .MEM_36 = VDEF <.MEM_31>
hostkeys_update_ctx_free (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:88:2: warning: use location
  hostkeys_update_ctx_free(ctx);
  ^
=======================Path Constaint===========================

succs:= 8
if (_9 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:79:5: warning: use location
   if(__RANDBOOL)
     ^
	relate logic:= 1
succs:= 7
// predicted unlikely by continue predictor.
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:77:4: warning: use location
    continue;
    ^
	relate logic:= 1
succs:= 6
if (_7 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:6: warning: use location
   if (ctx->keys_seen[i])
      ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:68:5: warning: use location
  if (__RANDBOOL) {
     ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:5: warning: use location
  if (ctx->nnew == 0)
     ^
	relate logic:= 1
=======================Path Constaint===========================


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^
if (_10 > i_11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
Cond in fucntion client_global_hostkeys_private_confirm basic block 11
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 6
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:10: warning: use location
   if (ctx->keys_seen[i])
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:21: warning: use location
   if (ctx->keys_seen[i])
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:6: warning: use location
   if (ctx->keys_seen[i])
      ^
if (_7 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:6: warning: use location
Cond in fucntion client_global_hostkeys_private_confirm basic block 6
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 7
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
bb index := 5
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
bb index := 5
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
hostkeys_update_ctx_free (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:3: warning: use location
   hostkeys_update_ctx_free(ctx);
   ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
 <ssa_name 0x7f09fa790168
    type <pointer_type 0x7f09fac5e0a8
        type <void_type 0x7f09fac57f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f09fac5e0a8>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fac63bd0>>
    var <parm_decl 0x7f09fa77e700 _ctx>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7f09fa792288>
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:2: warning: use location
  free(ctx->keys_seen);
  ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:2: warning: use location
  free(ctx);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
if (_1 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:5: warning: use location
  if (ctx->nnew == 0)
     ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:5: warning: use location
Cond in fucntion client_global_hostkeys_private_confirm basic block 2
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 3
 ================== possible direct basic block ================= 
from client_global_hostkeys_private_confirm basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09fa790168
    type <pointer_type 0x7f09fac5e0a8
        type <void_type 0x7f09fac57f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f09fac5e0a8>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fac63bd0>>
    var <parm_decl 0x7f09fa77e700 _ctx>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7f09fa792288>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:3: warning: Use after free error!: free location 
   hostkeys_update_ctx_free(ctx);
   ^
# VUSE <.MEM_30>
update_known_hosts (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:86:2: warning: use location
  update_known_hosts(ctx);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:3: warning: Use after free error!: free location 
   hostkeys_update_ctx_free(ctx);
   ^
# VUSE <.MEM_30>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:3: warning: Use after free error!: free location 
   hostkeys_update_ctx_free(ctx);
   ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:3: warning: Use after free error!: free location 
   hostkeys_update_ctx_free(ctx);
   ^
# VUSE <.MEM_30>
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:10: warning: use location
   if (ctx->keys_seen[i])
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:3: warning: Use after free error!: free location 
   hostkeys_update_ctx_free(ctx);
   ^
_6 = _4 + _5;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:21: warning: use location
   if (ctx->keys_seen[i])
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:3: warning: Use after free error!: free location 
   hostkeys_update_ctx_free(ctx);
   ^
# VUSE <.MEM_30>
_7 = *_6;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:21: warning: use location
   if (ctx->keys_seen[i])
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
hostkeys_update_ctx_free (_ctx_18(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:71:3: warning: Use after free error!: free location 
   hostkeys_update_ctx_free(ctx);
   ^
if (_7 != 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:76:6: warning: use location
   if (ctx->keys_seen[i])
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09fac4b948
    type <integer_type 0x7f09fac575e8 int public SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac575e8 precision 32 min <integer_cst 0x7f09fac43de0 -2147483648> max <integer_cst 0x7f09fac43df8 2147483647>
        pointer_to_this <pointer_type 0x7f09fac5ea80>>
   
    def_stmt _8 = rand ();
    version 8>
# .MEM_35 = VDEF <.MEM_30>
_8 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:79:6: warning: use location
   if(__RANDBOOL)
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f09fac4b948
    type <integer_type 0x7f09fac575e8 int public SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac575e8 precision 32 min <integer_cst 0x7f09fac43de0 -2147483648> max <integer_cst 0x7f09fac43df8 2147483647>
        pointer_to_this <pointer_type 0x7f09fac5ea80>>
   
    def_stmt _8 = rand ();
    version 8>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09fac4b948
    type <integer_type 0x7f09fac575e8 int public SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac575e8 precision 32 min <integer_cst 0x7f09fac43de0 -2147483648> max <integer_cst 0x7f09fac43df8 2147483647>
        pointer_to_this <pointer_type 0x7f09fac5ea80>>
   
    def_stmt _8 = rand ();
    version 8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:client_global_hostkeys_private_confirm========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:hostkeys_update_ctx_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path hostkeys_update_ctx_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:hostkeys_update_ctx_free========= [0m
[40;42m =======start_check_funciton:hostkeys_update_ctx_free========= [0m
[40;33m =======POP node_fun stack:hostkeys_update_ctx_free========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:update_known_hosts========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_known_hosts  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:update_known_hosts========= [0m
[40;42m =======start_check_funciton:update_known_hosts========= [0m
[40;33m =======POP node_fun stack:update_known_hosts========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09fa79f000
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_23 = calloc (1, 64);
    version 23
    ptr-info 0x7f09fa7922d0>
# .MEM_112 = VDEF <.MEM_20>
ctx_23 = calloc (1, 64);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
update_known_hosts (ctx_23);
In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:184:3: warning: use location
   update_known_hosts(ctx);
   ^
this stmt is child function---update_known_hosts-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f000
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_23 = calloc (1, 64);
    version 23
    ptr-info 0x7f09fa7922d0>
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ctx_23 == _75)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:35: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
                                   ^
if (ctx_23 == _75)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:35: warning: use location
Cond in fucntion main basic block 22
 ================== possible direct basic block ================= 
from main basic block 23
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->ctx = ctx_23;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:10: warning: use location
  gc->ctx = ctx;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->ctx = ctx_23;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:10: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = &gc_80->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location
  TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
global_confirms.tqh_last = _83;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:12: warning: use location
  last_gc = TAILQ_LAST(&global_confirms, global_confirms);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(struct global_confirms *)_71].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_gc_73 = *_72;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:10: warning: use location
  last_gc = TAILQ_LAST(&global_confirms, global_confirms);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = last_gc_73->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:16: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:6: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
      ^
if (_78 > 9999)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:6: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 26
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = last_gc_73->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:16: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_gc_73->ref_count = _77;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:6: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = last_gc_73->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:45: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = last_gc_73->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:24: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 == client_global_hostkeys_private_confirm)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:14: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
              ^
if (_74 == client_global_hostkeys_private_confirm)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:14: warning: use location
Cond in fucntion main basic block 21
 ================== possible direct basic block ================= 
from main basic block 22
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (last_gc_73 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:5: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
     ^
if (last_gc_73 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:5: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location
  TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->entry.tqe_prev = _81;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_82 = gc_80;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
gc_84 = global_confirms.tqh_first;
bb index := 29
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_84 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:10: warning: use location
  if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_95 = _96;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
global_confirms.tqh_last = _94;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92->entry.tqe_prev = _93;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 <= 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^
if (_90 <= 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
Cond in fucntion main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:6: warning: use location
  if (--gc->ref_count <= 0) {
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_84->ref_count = _89;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = gc_84->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:3: warning: use location
   gc->cb(type, seq, gc->ctx);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:5: warning: use location
   gc->cb(type, seq, gc->ctx);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:8: warning: use location
  if (gc->cb != NULL)
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_85 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:5: warning: use location
  if (gc->cb != NULL)
     ^
if (_85 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:5: warning: use location
Cond in fucntion main basic block 30
 ================== possible direct basic block ================= 
from main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location
  TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:16: warning: use location
  gc->ref_count = 1;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->cb = client_global_hostkeys_private_confirm;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:9: warning: use location
  gc->cb = cb;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: use location
  hostkeys_update_ctx_free(ctx);
  ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f000
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_23 = calloc (1, 64);
    version 23
    ptr-info 0x7f09fa7922d0>
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:2: warning: use location
  free(ctx->keys_seen);
  ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:2: warning: use location
  free(ctx);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:3: warning: use location
   printf("asking server to prove ownership for %zu keys\n", ctx->nnew);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = __printf_chk (1, "asking server to prove ownership for %zu keys\n", _68);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f000
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_23 = calloc (1, 64);
    version 23
    ptr-info 0x7f09fa7922d0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:7: warning: use location
    ctx->nnew++;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->nnew = _57;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:13: warning: use location
    ctx->nnew++;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:44: warning: use location
     ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = _60 - _61;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:2: warning: use location
  printf("%zu keys from server: %zu new, %zu retained. \n",
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = __printf_chk (1, "%zu keys from server: %zu new, %zu retained. \n", _64, _63, _62);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f000
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_23 = calloc (1, 64);
    version 23
    ptr-info 0x7f09fa7922d0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:9: warning: use location
  if (ctx->nnew == 0) {
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:5: warning: use location
  if (ctx->nnew == 0) {
     ^
if (_66 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:5: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:16: warning: use location
  } else if (ctx->nnew != 0) {
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^
if (_5 > i_6)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^
if (_10 > i_11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
Cond in fucntion main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:6: warning: use location
   ctx->nkeys++;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->nkeys = _36;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:13: warning: use location
   ctx->nkeys++;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:9: warning: use location
  if (ctx->nkeys == 0) {
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:24: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = calloc (_40, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:24: warning: use location
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f000
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_23 = calloc (1, 64);
    version 23
    ptr-info 0x7f09fa7922d0>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:10: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:5: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
     ^
if (_42 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:5: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:6: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _47 + _49;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:17: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_50 = _51;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:21: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_50 = _51;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:11: warning: use location
   if (!ctx->keys_seen[i])
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _52 + _53;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:22: warning: use location
   if (!ctx->keys_seen[i])
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = *_54;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->keys_seen = _41;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:22: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:31: warning: use location
     ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:2: warning: use location
  printf("%zu keys from server: %zu new, %zu retained. \n",
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:2: warning: use location
  printf("%zu keys from server: %zu new, %zu retained. \n",
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->nnew = 0;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:172:12: warning: use location
  ctx->nnew = 0;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_20>
ctx_23 = calloc (1, 64);
bb index := 3
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_20>
ctx_23 = calloc (1, 64);
bb index := 3
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_20>
ctx_23 = calloc (1, 64);
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23 = calloc (1, 64);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:147:6: warning: use location
  ctx = xcalloc(1, sizeof(*ctx));  /* allocation site */
      ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f000
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_23 = calloc (1, 64);
    version 23
    ptr-info 0x7f09fa7922d0>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09fa79f000
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_23 = calloc (1, 64);
    version 23
    ptr-info 0x7f09fa7922d0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
gc_84 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:10: warning: use location
  if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_103>
_96 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_109 = VDEF <.MEM_103>
*_95 = _96;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_103>
_95 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_94 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_107 = VDEF <.MEM_106>
global_confirms.tqh_last = _94;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_93 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_108 = VDEF <.MEM_106>
_92->entry.tqe_prev = _93;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_92 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_91 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_90 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_90 <= 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_102>
_88 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
_89 = _88 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:6: warning: use location
  if (--gc->ref_count <= 0) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_106 = VDEF <.MEM_102>
gc_84->ref_count = _89;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_87 = gc_84->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:3: warning: use location
   gc->cb(type, seq, gc->ctx);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_86 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:5: warning: use location
   gc->cb(type, seq, gc->ctx);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_85 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:8: warning: use location
  if (gc->cb != NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_85 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:5: warning: use location
  if (gc->cb != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_30>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_30>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_30>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09fa79f510
    type <pointer_type 0x7f09fac5e0a8
        type <void_type 0x7f09fac57f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f09fac5e0a8>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fac63bd0>>
   
    def_stmt _41 = calloc (_40, 4);
    version 41
    ptr-info 0x7f09fa792348>
# .MEM_113 = VDEF <.MEM_97>
_41 = calloc (_40, 4);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = calloc (_40, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:24: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
                        ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f510
    type <pointer_type 0x7f09fac5e0a8
        type <void_type 0x7f09fac57f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f09fac5e0a8>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fac63bd0>>
   
    def_stmt _41 = calloc (_40, 4);
    version 41
    ptr-info 0x7f09fa792348>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->keys_seen = _41;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:22: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:10: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:5: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
     ^
if (_42 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:5: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:6: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _47 + _49;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:17: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_50 = _51;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:21: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_50 = _51;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:11: warning: use location
   if (!ctx->keys_seen[i])
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _52 + _53;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:22: warning: use location
   if (!ctx->keys_seen[i])
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = *_54;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_55 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:6: warning: use location
   if (!ctx->keys_seen[i])
      ^
if (_55 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:6: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09fa79f510
    type <pointer_type 0x7f09fac5e0a8
        type <void_type 0x7f09fac57f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f09fac5e0a8>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fac63bd0>>
   
    def_stmt _41 = calloc (_40, 4);
    version 41
    ptr-info 0x7f09fa792348>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09fa7a4870
    type <pointer_type 0x7f09fa77a2a0
        type <record_type 0x7f09fa77a348 global_confirm BLK
            size <integer_cst 0x7f09fa770348 constant 320>
            unit size <integer_cst 0x7f09fa770390 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa77a348 fields <field_decl 0x7f09fa778c78 entry> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa77a2a0> chain <type_decl 0x7f09fa778ed8 D.4100>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fa77a1f8>>
    var <var_decl 0x7f09fa79e7e0 gc>
    def_stmt gc_80 = calloc (1, 40);
    version 80
    ptr-info 0x7f09fa792468>
# .MEM_121 = VDEF <.MEM_117>
gc_80 = calloc (1, 40);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = &gc_80->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location
  TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
global_confirms.tqh_last = _83;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:12: warning: use location
  last_gc = TAILQ_LAST(&global_confirms, global_confirms);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(struct global_confirms *)_71].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_gc_73 = *_72;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:10: warning: use location
  last_gc = TAILQ_LAST(&global_confirms, global_confirms);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = last_gc_73->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:16: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:6: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
      ^
if (_78 > 9999)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:6: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 26
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = last_gc_73->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:16: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_gc_73->ref_count = _77;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:6: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = last_gc_73->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:45: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = last_gc_73->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:24: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 == client_global_hostkeys_private_confirm)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:14: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
              ^
if (_74 == client_global_hostkeys_private_confirm)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:14: warning: use location
Cond in fucntion main basic block 21
 ================== possible direct basic block ================= 
from main basic block 22
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (last_gc_73 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:5: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
     ^
if (last_gc_73 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:5: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location
  TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->entry.tqe_prev = _81;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_82 = gc_80;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_82 = gc_80;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
gc_84 = global_confirms.tqh_first;
bb index := 29
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_84 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:10: warning: use location
  if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_95 = _96;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
global_confirms.tqh_last = _94;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92->entry.tqe_prev = _93;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 <= 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^
if (_90 <= 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
Cond in fucntion main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:6: warning: use location
  if (--gc->ref_count <= 0) {
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_84->ref_count = _89;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = gc_84->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:3: warning: use location
   gc->cb(type, seq, gc->ctx);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:5: warning: use location
   gc->cb(type, seq, gc->ctx);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:8: warning: use location
  if (gc->cb != NULL)
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_85 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:5: warning: use location
  if (gc->cb != NULL)
     ^
if (_85 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:5: warning: use location
Cond in fucntion main basic block 30
 ================== possible direct basic block ================= 
from main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location
  TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:16: warning: use location
  gc->ref_count = 1;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->ctx = ctx_23;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:10: warning: use location
  gc->ctx = ctx;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
update_known_hosts (ctx_23);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:184:3: warning: use location
   update_known_hosts(ctx);
   ^
this stmt is child function---update_known_hosts-----

 ================== trace ================== 
 <ssa_name 0x7f09fa7a4870
    type <pointer_type 0x7f09fa77a2a0
        type <record_type 0x7f09fa77a348 global_confirm BLK
            size <integer_cst 0x7f09fa770348 constant 320>
            unit size <integer_cst 0x7f09fa770390 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa77a348 fields <field_decl 0x7f09fa778c78 entry> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa77a2a0> chain <type_decl 0x7f09fa778ed8 D.4100>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fa77a1f8>>
    var <var_decl 0x7f09fa79e7e0 gc>
    def_stmt gc_80 = calloc (1, 40);
    version 80
    ptr-info 0x7f09fa792468>
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:update_known_hosts========= [0m
[40;36m ======= find relate stmt with gc ========= [0m
[40;36m ======= relate stmt argument:gc ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: use location
  hostkeys_update_ctx_free(ctx);
  ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
 <ssa_name 0x7f09fa7a4870
    type <pointer_type 0x7f09fa77a2a0
        type <record_type 0x7f09fa77a348 global_confirm BLK
            size <integer_cst 0x7f09fa770348 constant 320>
            unit size <integer_cst 0x7f09fa770390 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa77a348 fields <field_decl 0x7f09fa778c78 entry> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa77a2a0> chain <type_decl 0x7f09fa778ed8 D.4100>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fa77a1f8>>
    var <var_decl 0x7f09fa79e7e0 gc>
    def_stmt gc_80 = calloc (1, 40);
    version 80
    ptr-info 0x7f09fa792468>
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:2: warning: use location
  free(ctx->keys_seen);
  ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:2: warning: use location
  free(ctx);
  ^
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with gc ========= [0m
[40;36m ======= relate stmt argument:gc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:3: warning: use location
   printf("asking server to prove ownership for %zu keys\n", ctx->nnew);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = __printf_chk (1, "asking server to prove ownership for %zu keys\n", _68);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f09fa7a4870
    type <pointer_type 0x7f09fa77a2a0
        type <record_type 0x7f09fa77a348 global_confirm BLK
            size <integer_cst 0x7f09fa770348 constant 320>
            unit size <integer_cst 0x7f09fa770390 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa77a348 fields <field_decl 0x7f09fa778c78 entry> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa77a2a0> chain <type_decl 0x7f09fa778ed8 D.4100>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fa77a1f8>>
    var <var_decl 0x7f09fa79e7e0 gc>
    def_stmt gc_80 = calloc (1, 40);
    version 80
    ptr-info 0x7f09fa792468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:7: warning: use location
    ctx->nnew++;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->nnew = _57;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:13: warning: use location
    ctx->nnew++;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:44: warning: use location
     ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = _60 - _61;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:2: warning: use location
  printf("%zu keys from server: %zu new, %zu retained. \n",
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = __printf_chk (1, "%zu keys from server: %zu new, %zu retained. \n", _64, _63, _62);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f09fa7a4870
    type <pointer_type 0x7f09fa77a2a0
        type <record_type 0x7f09fa77a348 global_confirm BLK
            size <integer_cst 0x7f09fa770348 constant 320>
            unit size <integer_cst 0x7f09fa770390 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa77a348 fields <field_decl 0x7f09fa778c78 entry> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa77a2a0> chain <type_decl 0x7f09fa778ed8 D.4100>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fa77a1f8>>
    var <var_decl 0x7f09fa79e7e0 gc>
    def_stmt gc_80 = calloc (1, 40);
    version 80
    ptr-info 0x7f09fa792468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:9: warning: use location
  if (ctx->nnew == 0) {
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:5: warning: use location
  if (ctx->nnew == 0) {
     ^
if (_66 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:5: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:16: warning: use location
  } else if (ctx->nnew != 0) {
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^
if (_5 > i_6)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^
if (_10 > i_11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
Cond in fucntion main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:6: warning: use location
   ctx->nkeys++;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->nkeys = _36;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:13: warning: use location
   ctx->nkeys++;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:9: warning: use location
  if (ctx->nkeys == 0) {
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:24: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = calloc (_40, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:24: warning: use location
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f09fa7a4870
    type <pointer_type 0x7f09fa77a2a0
        type <record_type 0x7f09fa77a348 global_confirm BLK
            size <integer_cst 0x7f09fa770348 constant 320>
            unit size <integer_cst 0x7f09fa770390 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa77a348 fields <field_decl 0x7f09fa778c78 entry> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa77a2a0> chain <type_decl 0x7f09fa778ed8 D.4100>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fa77a1f8>>
    var <var_decl 0x7f09fa79e7e0 gc>
    def_stmt gc_80 = calloc (1, 40);
    version 80
    ptr-info 0x7f09fa792468>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:10: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:5: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
     ^
if (_42 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:5: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:6: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _47 + _49;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:17: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_50 = _51;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:21: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_50 = _51;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:11: warning: use location
   if (!ctx->keys_seen[i])
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _52 + _53;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:22: warning: use location
   if (!ctx->keys_seen[i])
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = *_54;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->keys_seen = _41;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:22: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:31: warning: use location
     ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:2: warning: use location
  printf("%zu keys from server: %zu new, %zu retained. \n",
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:2: warning: use location
  printf("%zu keys from server: %zu new, %zu retained. \n",
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->nnew = 0;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:172:12: warning: use location
  ctx->nnew = 0;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->cb = client_global_hostkeys_private_confirm;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:9: warning: use location
  gc->cb = cb;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80 = calloc (1, 40);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:105:5: warning: use location
  gc = xcalloc(1, sizeof(*gc));
     ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f09fa7a4870
    type <pointer_type 0x7f09fa77a2a0
        type <record_type 0x7f09fa77a348 global_confirm BLK
            size <integer_cst 0x7f09fa770348 constant 320>
            unit size <integer_cst 0x7f09fa770390 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa77a348 fields <field_decl 0x7f09fa778c78 entry> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa77a2a0> chain <type_decl 0x7f09fa778ed8 D.4100>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fa77a1f8>>
    var <var_decl 0x7f09fa79e7e0 gc>
    def_stmt gc_80 = calloc (1, 40);
    version 80
    ptr-info 0x7f09fa792468>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09fa7a4870
    type <pointer_type 0x7f09fa77a2a0
        type <record_type 0x7f09fa77a348 global_confirm BLK
            size <integer_cst 0x7f09fa770348 constant 320>
            unit size <integer_cst 0x7f09fa770390 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa77a348 fields <field_decl 0x7f09fa778c78 entry> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa77a2a0> chain <type_decl 0x7f09fa778ed8 D.4100>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f09fa77a1f8>>
    var <var_decl 0x7f09fa79e7e0 gc>
    def_stmt gc_80 = calloc (1, 40);
    version 80
    ptr-info 0x7f09fa792468>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
gc_84 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:10: warning: use location
  if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_103>
_96 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_109 = VDEF <.MEM_103>
*_95 = _96;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_103>
_95 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_94 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_107 = VDEF <.MEM_106>
global_confirms.tqh_last = _94;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_93 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_108 = VDEF <.MEM_106>
_92->entry.tqe_prev = _93;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_92 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_91 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_90 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_90 <= 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_102>
_88 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
_89 = _88 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:6: warning: use location
  if (--gc->ref_count <= 0) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_106 = VDEF <.MEM_102>
gc_84->ref_count = _89;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_87 = gc_84->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:3: warning: use location
   gc->cb(type, seq, gc->ctx);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_86 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:5: warning: use location
   gc->cb(type, seq, gc->ctx);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_85 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:8: warning: use location
  if (gc->cb != NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_85 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:5: warning: use location
  if (gc->cb != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_30>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_30>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_30>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f09fac5f000 type <pointer_type 0x7f09fac5e0a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f09fa7906c0
    type <integer_type 0x7f09fac57690 unsigned int public unsigned SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac57690 precision 32 min <integer_cst 0x7f09fac43e58 0> max <integer_cst 0x7f09fac43e10 4294967295>
        pointer_to_this <pointer_type 0x7f09fac63888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
bb index := 2
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:2: warning: use location
  srand(time(NULL));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7f09fa7906c0
    type <integer_type 0x7f09fac57690 unsigned int public unsigned SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac57690 precision 32 min <integer_cst 0x7f09fac43e58 0> max <integer_cst 0x7f09fac43e10 4294967295>
        pointer_to_this <pointer_type 0x7f09fac63888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
bb index := 2
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
# .MEM_19 = VDEF <.MEM_18>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:207:2: warning: use location
  srand(time(NULL));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7f09fa7906c0
    type <integer_type 0x7f09fac57690 unsigned int public unsigned SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac57690 precision 32 min <integer_cst 0x7f09fac43e58 0> max <integer_cst 0x7f09fac43e10 4294967295>
        pointer_to_this <pointer_type 0x7f09fac63888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09fa7906c0
    type <integer_type 0x7f09fac57690 unsigned int public unsigned SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac57690 precision 32 min <integer_cst 0x7f09fac43e58 0> max <integer_cst 0x7f09fac43e10 4294967295>
        pointer_to_this <pointer_type 0x7f09fac63888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f09fa770fc0 type <integer_type 0x7f09fa76ddc8 size_t> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f09fa79f4c8
    type <integer_type 0x7f09fac577e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09fac57738 precision 64 min <integer_cst 0x7f09fac43eb8 0> max <integer_cst 0x7f09fac45500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09fac639d8>>
   
    def_stmt _40 = ctx_23->nkeys;
    version 40>
# VUSE <.MEM_97>
_40 = ctx_23->nkeys;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = calloc (_40, 4);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:24: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
                        ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f4c8
    type <integer_type 0x7f09fac577e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09fac57738 precision 64 min <integer_cst 0x7f09fac43eb8 0> max <integer_cst 0x7f09fac45500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09fac639d8>>
   
    def_stmt _40 = ctx_23->nkeys;
    version 40>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->keys_seen = _41;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:22: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
update_known_hosts (ctx_23);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:184:3: warning: use location
   update_known_hosts(ctx);
   ^
this stmt is child function---update_known_hosts-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f4c8
    type <integer_type 0x7f09fac577e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09fac57738 precision 64 min <integer_cst 0x7f09fac43eb8 0> max <integer_cst 0x7f09fac45500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09fac639d8>>
   
    def_stmt _40 = ctx_23->nkeys;
    version 40>
trace fucntion name:update_known_hosts 
[40;44m =======trace_function_path update_known_hosts  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ctx_23 == _75)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:35: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
                                   ^
if (ctx_23 == _75)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:35: warning: use location
Cond in fucntion main basic block 22
 ================== possible direct basic block ================= 
from main basic block 23
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->ctx = ctx_23;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:107:10: warning: use location
  gc->ctx = ctx;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = &gc_80->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location
  TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
global_confirms.tqh_last = _83;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:12: warning: use location
  last_gc = TAILQ_LAST(&global_confirms, global_confirms);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(struct global_confirms *)_71].tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_gc_73 = *_72;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:97:10: warning: use location
  last_gc = TAILQ_LAST(&global_confirms, global_confirms);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = last_gc_73->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:16: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 > 9999)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:6: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
      ^
if (_78 > 9999)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:6: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 26
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = last_gc_73->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:16: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_gc_73->ref_count = _77;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:99:6: warning: use location
   if (++last_gc->ref_count >= INT_MAX)
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = last_gc_73->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:45: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = last_gc_73->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:24: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 == client_global_hostkeys_private_confirm)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:14: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
              ^
if (_74 == client_global_hostkeys_private_confirm)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:14: warning: use location
Cond in fucntion main basic block 21
 ================== possible direct basic block ================= 
from main basic block 22
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (last_gc_73 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:5: warning: use location
  if (last_gc && last_gc->cb == cb && last_gc->ctx == ctx) {
     ^
if (last_gc_73 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:98:5: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location
  TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->entry.tqe_prev = _81;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = global_confirms.tqh_last;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_82 = gc_80;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
gc_84 = global_confirms.tqh_first;
bb index := 29
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_84 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:10: warning: use location
  if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_95 = _96;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
global_confirms.tqh_last = _94;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
bb index := 38
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92->entry.tqe_prev = _93;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 <= 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^
if (_90 <= 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
Cond in fucntion main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:6: warning: use location
  if (--gc->ref_count <= 0) {
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_84->ref_count = _89;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = gc_84->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:3: warning: use location
   gc->cb(type, seq, gc->ctx);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:5: warning: use location
   gc->cb(type, seq, gc->ctx);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:8: warning: use location
  if (gc->cb != NULL)
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_85 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:5: warning: use location
  if (gc->cb != NULL)
     ^
if (_85 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:5: warning: use location
Cond in fucntion main basic block 30
 ================== possible direct basic block ================= 
from main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->entry.tqe_next = 0B;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:109:2: warning: use location
  TAILQ_INSERT_TAIL(&global_confirms, gc, entry);
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->ref_count = 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:108:16: warning: use location
  gc->ref_count = 1;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
gc_80->cb = client_global_hostkeys_private_confirm;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:106:9: warning: use location
  gc->cb = cb;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: use location
  hostkeys_update_ctx_free(ctx);
  ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f4c8
    type <integer_type 0x7f09fac577e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09fac57738 precision 64 min <integer_cst 0x7f09fac43eb8 0> max <integer_cst 0x7f09fac45500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09fac639d8>>
   
    def_stmt _40 = ctx_23->nkeys;
    version 40>
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:2: warning: use location
  free(ctx->keys_seen);
  ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:2: warning: use location
  free(ctx);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:190:3: warning: use location
   printf("asking server to prove ownership for %zu keys\n", ctx->nnew);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = __printf_chk (1, "asking server to prove ownership for %zu keys\n", _68);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f4c8
    type <integer_type 0x7f09fac577e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09fac57738 precision 64 min <integer_cst 0x7f09fac43eb8 0> max <integer_cst 0x7f09fac45500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09fac639d8>>
   
    def_stmt _40 = ctx_23->nkeys;
    version 40>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:7: warning: use location
    ctx->nnew++;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->nnew = _57;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:176:13: warning: use location
    ctx->nnew++;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:44: warning: use location
     ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = _60 - _61;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:2: warning: use location
  printf("%zu keys from server: %zu new, %zu retained. \n",
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = __printf_chk (1, "%zu keys from server: %zu new, %zu retained. \n", _64, _63, _62);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f4c8
    type <integer_type 0x7f09fac577e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09fac57738 precision 64 min <integer_cst 0x7f09fac43eb8 0> max <integer_cst 0x7f09fac45500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09fac639d8>>
   
    def_stmt _40 = ctx_23->nkeys;
    version 40>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:9: warning: use location
  if (ctx->nnew == 0) {
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 == 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:5: warning: use location
  if (ctx->nnew == 0) {
     ^
if (_66 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:182:5: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:185:16: warning: use location
  } else if (ctx->nnew != 0) {
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^
if (_5 > i_6)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^
if (_10 > i_11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
Cond in fucntion main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:6: warning: use location
   ctx->nkeys++;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->nkeys = _36;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:159:13: warning: use location
   ctx->nkeys++;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:162:9: warning: use location
  if (ctx->nkeys == 0) {
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:24: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:173:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:180:31: warning: use location
     ctx->nkeys, ctx->nnew, ctx->nkeys - ctx->nnew);
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = ctx_23->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:2: warning: use location
  printf("%zu keys from server: %zu new, %zu retained. \n",
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_10(D)>
return;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:54:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_32>
return;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = ctx_23->nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:179:2: warning: use location
  printf("%zu keys from server: %zu new, %zu retained. \n",
  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:11: warning: use location
   if (!ctx->keys_seen[i])
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _52 + _53;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:22: warning: use location
   if (!ctx->keys_seen[i])
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = *_54;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:175:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:10: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:5: warning: use location
  if ((ctx->keys_seen = calloc(ctx->nkeys,
     ^
if (_42 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:167:5: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = ctx_23->keys_seen;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:6: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ctx_23->nnew = 0;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:172:12: warning: use location
  ctx->nnew = 0;
            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09fa79f4c8
    type <integer_type 0x7f09fac577e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09fac57738 precision 64 min <integer_cst 0x7f09fac43eb8 0> max <integer_cst 0x7f09fac45500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09fac639d8>>
   
    def_stmt _40 = ctx_23->nkeys;
    version 40>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
gc_84 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:117:10: warning: use location
  if ((gc = TAILQ_FIRST(&global_confirms)) == NULL)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_103>
_96 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_109 = VDEF <.MEM_103>
*_95 = _96;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_103>
_95 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_94 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_107 = VDEF <.MEM_106>
global_confirms.tqh_last = _94;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_16>
_5 = global_confirms.tqh_first;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:210:9: warning: use location
  while(!TAILQ_EMPTY(&global_confirms))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_93 = gc_84->entry.tqe_prev;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_108 = VDEF <.MEM_106>
_92->entry.tqe_prev = _93;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_92 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_91 = gc_84->entry.tqe_next;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:122:3: warning: use location
   TAILQ_REMOVE(&global_confirms, gc, entry);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_106>
_90 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_90 <= 0)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_102>
_88 = gc_84->ref_count;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:10: warning: use location
  if (--gc->ref_count <= 0) {
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
_89 = _88 + -1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:6: warning: use location
  if (--gc->ref_count <= 0) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# .MEM_106 = VDEF <.MEM_102>
gc_84->ref_count = _89;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:121:5: warning: use location
  if (--gc->ref_count <= 0) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_87 = gc_84->ctx;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:3: warning: use location
   gc->cb(type, seq, gc->ctx);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_86 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:120:5: warning: use location
   gc->cb(type, seq, gc->ctx);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_16>
_85 = gc_84->cb;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:8: warning: use location
  if (gc->cb != NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_85 != 0B)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:119:5: warning: use location
  if (gc->cb != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_10(D)>
_5 = ctx_8(D)->nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:21: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_5 > i_6)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:50:2: warning: use location
  for (i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_30>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_30>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_30>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:29: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
if (_10 > i_11)
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:75:2: warning: use location
  for (ndone = i = 0; i < ctx->nkeys; i++) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: Use after free error!: free location 
  hostkeys_update_ctx_free(ctx);
  ^
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: Use after free error!: free location 
   free(gc);
   ^
# VUSE <.MEM_33(D)>
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:66:9: warning: use location
  if (ctx->nnew == 0)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09fa79f5e8
    type <integer_type 0x7f09fac575e8 int public SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac575e8 precision 32 min <integer_cst 0x7f09fac43de0 -2147483648> max <integer_cst 0x7f09fac43df8 2147483647>
        pointer_to_this <pointer_type 0x7f09fac5ea80>>
   
    def_stmt _44 = rand ();
    version 44>
# .MEM_129 = VDEF <.MEM_99>
_44 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44 % 2;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:23: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _45 == 1;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:23: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = (int) _46;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:23: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_50 = _51;
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:21: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = rand ();
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:174:23: warning: use location
   ctx->keys_seen[i] = __RANDBOOL;
                       ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79f5e8
    type <integer_type 0x7f09fac575e8 int public SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac575e8 precision 32 min <integer_cst 0x7f09fac43de0 -2147483648> max <integer_cst 0x7f09fac43df8 2147483647>
        pointer_to_this <pointer_type 0x7f09fac5ea80>>
   
    def_stmt _44 = rand ();
    version 44>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09fa79f5e8
    type <integer_type 0x7f09fac575e8 int public SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac575e8 precision 32 min <integer_cst 0x7f09fac43de0 -2147483648> max <integer_cst 0x7f09fac43df8 2147483647>
        pointer_to_this <pointer_type 0x7f09fac5ea80>>
   
    def_stmt _44 = rand ();
    version 44>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09fa79fd38
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
    version 70
    ptr-info 0x7f09fa7923d8>
ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: use location
  hostkeys_update_ctx_free(ctx);
  ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79fd38
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
    version 70
    ptr-info 0x7f09fa7923d8>
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:2: warning: use location
  free(ctx->keys_seen);
  ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:2: warning: use location
  free(ctx);
  ^
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_137 = VDEF <.MEM_100>
hostkeys_update_ctx_free (ctx_70);
hostkeys_update_ctx_free (ctx_70);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:198:2: warning: use location
  hostkeys_update_ctx_free(ctx);
  ^
this stmt is child function---hostkeys_update_ctx_free-----

 ================== trace ================== 
 <ssa_name 0x7f09fa79fd38
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
    version 70
    ptr-info 0x7f09fa7923d8>
trace fucntion name:hostkeys_update_ctx_free 
[40;44m =======trace_function_path hostkeys_update_ctx_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:39:2: warning: use location
  free(ctx->keys_seen);
  ^
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (ctx_3(D));
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:40:2: warning: use location
  free(ctx);
  ^
[40;36m ======= node_fun:hostkeys_update_ctx_free========= [0m
[40;36m ======= find relate stmt with ctx ========= [0m
[40;36m ======= relate stmt argument:ctx ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09fa79fd38
    type <pointer_type 0x7f09fa775a80
        type <record_type 0x7f09fa7759d8 hostkeys_update_ctx BLK
            size <integer_cst 0x7f09fac5f030 constant 512>
            unit size <integer_cst 0x7f09facfcc18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f09fa7759d8 fields <field_decl 0x7f09fa778980 host_str> context <translation_unit_decl 0x7f09fac4e168 ./benchmarks/openssh-portable/leak_3/openssh_leak_3.c>
            pointer_to_this <pointer_type 0x7f09fa775a80> chain <type_decl 0x7f09fa778a18 D.4083>>
        public unsigned DI
        size <integer_cst 0x7f09fac43be8 constant 64>
        unit size <integer_cst 0x7f09fac43c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f09fa78ee10 ctx>
    def_stmt ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
    version 70
    ptr-info 0x7f09fa7923d8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_110 = VDEF <.MEM_109>
free (gc_84);
./benchmarks/openssh-portable/leak_3/openssh_leak_3.c:123:3: warning: use location
   free(gc);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09fa790708
    type <integer_type 0x7f09fac575e8 int public SI
        size <integer_cst 0x7f09fac43e28 constant 32>
        unit size <integer_cst 0x7f09fac43e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09fac575e8 precision 32 min <integer_cst 0x7f09fac43de0 -2147483648> max <integer_cst 0x7f09fac43df8 2147483647>
        pointer_to_this <pointer_type 0x7f09fac5ea80>>
   
    def_stmt _3 = rand ();
    version 3>
# .MEM_20 = VDEF <.MEM_15>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:hostkeys_update_ctx_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
if (ctx_3(D) == 0B)
  goto <bb 4>; [42.57%]
else
  goto <bb 3>; [57.43%]

=======is loop:0=========

 bb index 3 
<bb 3> [57.43%]:
_1 = ctx_3(D)->keys_seen;
free (_1);
free (ctx_3(D));

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
return;

=======Mapping node_fun:update_known_hosts=========
=======is loop:0=========

 bb index 2 
<bb 2> [15.00%]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [85.00%]:
_1 = ctx_8(D)->keys_seen;
_2 = i_6 * 4;
_3 = _1 + _2;
_4 = *_3;
if (_4 != 2)
  goto <bb 4>; [48.88%]
else
  goto <bb 5>; [51.12%]

=======is loop:1=========

 bb index 4 
<bb 4> [41.55%]:
// predicted unlikely by continue predictor.

=======is loop:1=========

 bb index 5 
<bb 5> [85.00%]:
i_9 = i_6 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [100.00%]:
# i_6 = PHI <0(2), i_9(5)>
_5 = ctx_8(D)->nkeys;
if (_5 > i_6)
  goto <bb 3>; [85.00%]
else
  goto <bb 7>; [15.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [15.00%]:
return;

=======Mapping node_fun:client_global_hostkeys_private_confirm=========
=======is loop:0=========

 bb index 2 
<bb 2> [13.34%]:
_1 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nnew;
if (_1 == 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.01%]:
_21 = __printf_chk (1, "%s: ctx->nnew == 0\n", &__func__);
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [13.34%]:
_2 = rand ();
_3 = _2 % 2;
if (_3 == 1)
  goto <bb 5>; [17.77%]
else
  goto <bb 11>; [82.23%]

=======is loop:0=========

 bb index 5 
<bb 5> [2.37%]:
_28 = __printf_chk (1, "Server failed to confirm ownership of private host keys\n");
hostkeys_update_ctx_free (_ctx_18(D));
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [92.50%]:
_4 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].keys_seen;
_5 = i_11 * 4;
_6 = _4 + _5;
_7 = *_6;
if (_7 != 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 8>; [50.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [46.25%]:
// predicted unlikely by continue predictor.
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [46.25%]:
_8 = rand ();
_9 = _8 % 2;
if (_9 == 1)
  goto <bb 13> (out); [7.50%]
else
  goto <bb 9>; [92.50%]

=======is loop:1=========

 bb index 9 
<bb 9> [42.78%]:
ndone_23 = ndone_13 + 1;

=======is loop:1=========

 bb index 10 
<bb 10> [89.03%]:
# ndone_12 = PHI <ndone_13(7), ndone_23(9)>
i_24 = i_11 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [100.00%]:
# i_11 = PHI <0(4), i_24(10)>
# ndone_13 = PHI <0(4), ndone_12(10)>
_10 = MEM[(struct hostkeys_update_ctx *)_ctx_18(D)].nkeys;
if (_10 > i_11)
  goto <bb 6>; [92.50%]
else
  goto <bb 12>; [7.50%]

=======is loop:0=========

 bb index 12 
<bb 12> [7.50%]:
update_known_hosts (_ctx_18(D));

=======is loop:0=========

 bb index 13 
out [10.97%]:
hostkeys_update_ctx_free (_ctx_18(D));

=======is loop:0=========

 bb index 14 
<bb 14> [13.34%]:
return;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [3.67%]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
goto <bb 28>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [20.77%]:
ctx_23 = calloc (1, 64);
if (argc_13(D) == 1)
  goto <bb 27>; [30.50%]
else
  goto <bb 7>; [69.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [92.50%]:
_25 = (long unsigned int) i_24;
_26 = _25 * 8;
_27 = argv_14(D) + _26;
_28 = *_27;
_29 = *_28;
if (_29 != 107)
  goto <bb 5>; [7.50%]
else
  goto <bb 6>; [92.50%]

=======is loop:1=========

 bb index 5 
<bb 5> [6.94%]:
_30 = (long unsigned int) i_24;
_31 = _30 * 8;
_32 = argv_14(D) + _31;
_33 = *_32;
_34 = __printf_chk (1, "parse key %s error\n", _33);
goto <bb 26> (out); [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [85.56%]:
_35 = ctx_23->nkeys;
_36 = _35 + 1;
ctx_23->nkeys = _36;
i_37 = i_24 + 1;

=======is loop:1=========

 bb index 7 
<bb 7> [100.00%]:
# i_24 = PHI <1(3), i_37(6)>
if (argc_13(D) > i_24)
  goto <bb 4>; [92.50%]
else
  goto <bb 8>; [7.50%]

=======is loop:1=========

 bb index 8 
<bb 8> [7.50%]:
_38 = ctx_23->nkeys;
if (_38 == 0)
  goto <bb 9>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [3.75%]:
_39 = __printf_chk (1, "%s: server sent no hostkeys\n", &__func__);
goto <bb 26> (out); [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [3.75%]:
_40 = ctx_23->nkeys;
_41 = calloc (_40, 4);
ctx_23->keys_seen = _41;
_42 = ctx_23->keys_seen;
if (_42 == 0B)
  goto <bb 11>; [0.04%]
else
  goto <bb 12>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [0.00%]:
_43 = __printf_chk (1, "%s: calloc failed\n", &__func__);
exit (1);

=======is loop:1=========

 bb index 12 
<bb 12> [3.75%]:
ctx_23->nnew = 0;
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [21.24%]:
_44 = rand ();
_45 = _44 % 2;
_46 = _45 == 1;
_47 = ctx_23->keys_seen;
_49 = i_48 * 4;
_50 = _47 + _49;
_51 = (int) _46;
*_50 = _51;
_52 = ctx_23->keys_seen;
_53 = i_48 * 4;
_54 = _52 + _53;
_55 = *_54;
if (_55 == 0)
  goto <bb 14>; [50.00%]
else
  goto <bb 15>; [50.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [10.62%]:
_56 = ctx_23->nnew;
_57 = _56 + 1;
ctx_23->nnew = _57;

=======is loop:1=========

 bb index 15 
<bb 15> [21.24%]:
i_58 = i_48 + 1;

=======is loop:1=========

 bb index 16 
<bb 16> [24.99%]:
# i_48 = PHI <0(12), i_58(15)>
_59 = ctx_23->nkeys;
if (i_48 < _59)
  goto <bb 13>; [85.00%]
else
  goto <bb 17>; [15.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [3.75%]:
_60 = ctx_23->nkeys;
_61 = ctx_23->nnew;
_62 = _60 - _61;
_63 = ctx_23->nnew;
_64 = ctx_23->nkeys;
_65 = __printf_chk (1, "%zu keys from server: %zu new, %zu retained. \n", _64, _63, _62);
_66 = ctx_23->nnew;
if (_66 == 0)
  goto <bb 18>; [33.00%]
else
  goto <bb 19>; [67.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [1.24%]:
update_known_hosts (ctx_23);
goto <bb 26> (out); [100.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [2.51%]:
_67 = ctx_23->nnew;
if (_67 != 0)
  goto <bb 20>; [33.00%]
else
  goto <bb 26> (out); [67.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [0.83%]:
_68 = ctx_23->nnew;
_69 = __printf_chk (1, "asking server to prove ownership for %zu keys\n", _68);
_71 = global_confirms.tqh_last;
_72 = MEM[(struct global_confirms *)_71].tqh_last;
last_gc_73 = *_72;
if (last_gc_73 != 0B)
  goto <bb 21>; [82.57%]
else
  goto <bb 25>; [17.43%]

=======is loop:1=========

 bb index 21 
<bb 21> [0.68%]:
_74 = last_gc_73->cb;
if (_74 == client_global_hostkeys_private_confirm)
  goto <bb 22>; [30.00%]
else
  goto <bb 25>; [70.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [0.21%]:
_75 = last_gc_73->ctx;
if (ctx_23 == _75)
  goto <bb 23>; [30.00%]
else
  goto <bb 25>; [70.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [0.06%]:
_76 = last_gc_73->ref_count;
_77 = _76 + 1;
last_gc_73->ref_count = _77;
_78 = last_gc_73->ref_count;
if (_78 > 9999)
  goto <bb 24>; [0.04%]
else
  goto <bb 26> (out); [99.96%]

=======is loop:0=========

 bb index 24 
<bb 24> [0.00%]:
_79 = __printf_chk (1, "%s: last_gc->ref_count \n", &__func__);
exit (1);

=======is loop:1=========

 bb index 25 
<bb 25> [0.77%]:
gc_80 = calloc (1, 40);
gc_80->cb = client_global_hostkeys_private_confirm;
gc_80->ctx = ctx_23;
gc_80->ref_count = 1;
gc_80->entry.tqe_next = 0B;
_81 = global_confirms.tqh_last;
gc_80->entry.tqe_prev = _81;
_82 = global_confirms.tqh_last;
*_82 = gc_80;
_83 = &gc_80->entry.tqe_next;
global_confirms.tqh_last = _83;

=======is loop:1=========

 bb index 26 
# ctx_70 = PHI <ctx_23(5), ctx_23(9), ctx_23(18), ctx_23(19), 0B(25), 0B(23)>
out [14.44%]:
hostkeys_update_ctx_free (ctx_70);

=======is loop:1=========

 bb index 27 
<bb 27> [20.77%]:
_138 = 1;

=======is loop:1=========

 bb index 28 
<bb 28> [24.44%]:
_3 = rand ();
_4 = _3 % 2;
if (_4 == 1)
  goto <bb 3>; [85.00%]
else
  goto <bb 38>; [15.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [20.77%]:
gc_84 = global_confirms.tqh_first;
if (gc_84 == 0B)
  goto <bb 37>; [26.74%]
else
  goto <bb 30>; [73.26%]

=======is loop:1=========

 bb index 30 
<bb 30> [15.22%]:
_85 = gc_84->cb;
if (_85 != 0B)
  goto <bb 31>; [93.48%]
else
  goto <bb 32>; [6.52%]

=======is loop:1=========

 bb index 31 
<bb 31> [14.23%]:
_86 = gc_84->cb;
_87 = gc_84->ctx;
_86 (0, 0, _87);

=======is loop:1=========

 bb index 32 
<bb 32> [15.22%]:
_88 = gc_84->ref_count;
_89 = _88 + -1;
gc_84->ref_count = _89;
_90 = gc_84->ref_count;
if (_90 <= 0)
  goto <bb 33>; [39.77%]
else
  goto <bb 37>; [60.23%]

=======is loop:1=========

 bb index 33 
<bb 33> [6.05%]:
_91 = gc_84->entry.tqe_next;
if (_91 != 0B)
  goto <bb 34>; [70.00%]
else
  goto <bb 35>; [30.00%]

=======is loop:1=========

 bb index 34 
<bb 34> [4.24%]:
_92 = gc_84->entry.tqe_next;
_93 = gc_84->entry.tqe_prev;
_92->entry.tqe_prev = _93;
goto <bb 36>; [100.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [1.82%]:
_94 = gc_84->entry.tqe_prev;
global_confirms.tqh_last = _94;

=======is loop:1=========

 bb index 36 
<bb 36> [6.05%]:
_95 = gc_84->entry.tqe_prev;
_96 = gc_84->entry.tqe_next;
*_95 = _96;
free (gc_84);

=======is loop:1=========

 bb index 37 
<bb 37> [20.77%]:
_111 = 0;

=======is loop:1=========

 bb index 38 
<bb 38> [24.44%]:
_5 = global_confirms.tqh_first;
if (_5 != 0B)
  goto <bb 29>; [85.00%]
else
  goto <bb 39>; [15.00%]

=======is loop:0=========

 bb index 39 
<bb 39> [3.67%]:
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 10 [0m
[40;34m    used_stmt array stack totalsize of : 7120 [0m
[40;34m    collect time: : 0.000744 s [0m
[40;34m    algorithm time: 0.033139 s [0m
[40;34m    gimple stmt count : : 164 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
