../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/openssh-portable/double_free_1/openssh_df_1.c:9:
./benchmarks/openssh-portable/double_free_1/../openssh.h:675:60: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/double_free_1/../openssh.h:676:65: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/double_free_1/../openssh.h:677:66: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/double_free_1/../openssh.h:678:64: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/double_free_1/../openssh.h:681:40: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/double_free_1/openssh_df_1.c: In function â€˜mainâ€™:
./benchmarks/openssh-portable/double_free_1/openssh_df_1.c:145:15: warning: implicit declaration of function â€˜timeâ€™ [-Wimplicit-function-declaration]
  145 |         srand(time(NULL));
      |               ^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 ( 20%)   0.00 (  0%)   0.00 (  0%)  1298k ( 46%)
 phase parsing                      :   0.04 ( 80%)   0.00 (  0%)   0.05 ( 83%)  1380k ( 49%)
 phase opt and generate             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)   138k (  5%)
 callgraph ipa passes               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    73k (  3%)
 preprocessing                      :   0.02 ( 40%)   0.00 (  0%)   0.02 ( 33%)   637k ( 23%)
 lexical analysis                   :   0.02 ( 40%)   0.00 (  0%)   0.03 ( 50%)     0  (  0%)
 tree modref                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  2016  (  0%)
 TOTAL                              :   0.05          0.00          0.06         2827k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 phase stream out                   :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     0  (  0%)
 ipa lto decl out                   :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     0  (  0%)
 TOTAL                              :   0.00          0.00          0.01         2218k
../Compiler/newplugin.so 11.2.0 
--------plugin argument-----------
contextsentive 1
debugoutput 0
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
=======node_fun:sshkey_generate=========
=======node_fun:dsa_generate_private_key=========
=======node_fun:DSA_generate_parameters_ex=========
=======node_fun:dsa_builtin_paramgen=========
=======node_fun:sshkey_free=========
=======node_fun:sshkey_new=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 23 
===============The second stage : Mapping stmt=================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = time (0B);
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
# .MEM_14 = VDEF <.MEM_13>
_3 = sshkey_generate (2, bits_10(D), &private);
# .MEM_18 = VDEF <.MEM_14>
printf ("sshkey_generate error%s\n", "");
# .MEM_16 = VDEF <.MEM_15>
sshkey_free (_6);
# .MEM_21 = VDEF <.MEM_20>
k_8 = sshkey_new (11);
# .MEM_22 = VDEF <.MEM_21>
ret_12 = dsa_generate_private_key (bits_10(D), _1);
# .MEM_25 = VDEF <.MEM_17>
sshkey_free (k_8);
# .MEM_14 = VDEF <.MEM_13(D)>
private_10 = malloc (56);
# .MEM_16 = VDEF <.MEM_15>
_1 = DSA_generate_parameters_ex (private_10);
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = dsa_builtin_paramgen (ret_2(D));
# .MEM_16 = VDEF <.MEM_15(D)>
printf ("%d\n", ret_10(D));
# .MEM_17 = VDEF <.MEM_16>
_4 = rand ();
# .MEM_20 = VDEF <.MEM_19(D)>
k_6 = calloc (1, 64);
# .MEM_29 = VDEF <.MEM_28>
dsa_17 = malloc (56);
===============The second stage : Program slicing=================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
_3 = sshkey_generate (2, bits_10(D), &private);
if (_3 != 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("sshkey_generate error%s\n", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_4 = private;
_5 = _4->dsa;
_5->flags = 0;
_6 = private;
sshkey_free (_6);
private ={v} {CLOBBER};
return 0;

=======Mapping node_fun:sshkey_generate=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (keyp_4(D) == 0B)
  goto <bb 8>; [0.91%]
else
  goto <bb 3>; [99.09%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1063970777]:
*keyp_4(D) = 0B;
k_8 = sshkey_new (11);
if (k_8 == 0B)
  goto <bb 8>; [0.45%]
else
  goto <bb 4>; [99.55%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1059182907]:
if (type_9(D) == 2)
  goto <bb 5>; [34.00%]
else
  goto <bb 7>; [66.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 360122192]:
<L0>:
_1 = &k_8->dsa;
ret_12 = dsa_generate_private_key (bits_10(D), _1);
if (ret_12 == 0)
  goto <bb 6>; [50.00%]
else
  goto <bb 7>; [50.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 180061096]:
k_8->type = type_9(D);
*keyp_4(D) = k_8;
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 879121811]:
# ret_16 = PHI <-10(4), ret_12(5)>
sshkey_free (k_8);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# _2 = PHI <-10(2), -2(3), ret_12(6), ret_16(7)>
return _2;

=======Mapping node_fun:dsa_generate_private_key=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (dsap_7(D) == 0B)
  goto <bb 10>; [0.91%]
else
  goto <bb 3>; [99.09%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1063970777]:
private_10 = malloc (56);
if (private_10 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 425588]:
// predicted unlikely by goto predictor.
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1063545189]:
*dsap_7(D) = 0B;
_1 = DSA_generate_parameters_ex (private_10);
if (_1 == 0)
  goto <bb 6>; [20.24%]
else
  goto <bb 7>; [79.76%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 215261545]:
free (private_10);
// predicted unlikely by goto predictor.
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 848283644]:
*dsap_7(D) = private_10;
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 215687133]:
# private_2 = PHI <private_10(4), private_10(6)>
# ret_3 = PHI <-2(4), -22(6)>
out:
if (private_2 != 0B)
  goto <bb 9>; [53.47%]
else
  goto <bb 10>; [46.53%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 115327910]:
free (private_2);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# _4 = PHI <-10(2), 0(7), ret_3(8), ret_3(9)>
return _4;

=======Mapping node_fun:DSA_generate_parameters_ex=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_4 = dsa_builtin_paramgen (ret_2(D));
return _4;

=======Mapping node_fun:dsa_builtin_paramgen=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
printf ("%d\n", ret_10(D));
_1 = ret_10(D)->p;
if (_1 == 0B)
  goto <bb 5>; [17.43%]
else
  goto <bb 3>; [82.57%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 886588625]:
_2 = ret_10(D)->q;
if (_2 == 0B)
  goto <bb 5>; [30.00%]
else
  goto <bb 4>; [70.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 620612040]:
_3 = ret_10(D)->g;
if (_3 == 0B)
  goto <bb 5>; [30.00%]
else
  goto <bb 6>; [70.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 639313396]:
_4 = rand ();
_5 = _4 % 2;
_6 = _5 == 1;
ok_13 = (int) _6;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# ok_7 = PHI <0(4), ok_13(5)>
return ok_7;

=======Mapping node_fun:sshkey_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (k_7(D) == 0B)
  goto <bb 8>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 879501929]:
_1 = k_7(D)->type;
switch (_1) <default: <L1> [50.00%], case 2: <L0> [50.00%], case 6: <L0> [50.00%]>

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 439750964]:
<L0>:
_2 = k_7(D)->dsa;
if (_2 != 0B)
  goto <bb 5>; [53.47%]
else
  goto <bb 6>; [46.53%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 235134840]:
_3 = k_7(D)->dsa;
free (_3);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 439750964]:
k_7(D)->dsa = 0B;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 879501929]:
<L1>:
free (k_7(D));

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1073741824]:
return;

=======Mapping node_fun:sshkey_new=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741817]:
k_6 = calloc (1, 64);
if (k_6 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 3>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1073312321]:
k_6->type = type_7(D);
k_6->ecdsa = 0B;
k_6->ecdsa_nid = -1;
k_6->dsa = 0B;
k_6->rsa = 0B;
k_6->cert = 0B;
k_6->ed25519_sk = 0B;
k_6->ed25519_pk = 0B;
_1 = k_6->type;
switch (_1) <default: <L1> [33.33%], case 2: <L0> [33.33%], case 6: <L0> [33.33%], case 11: <L2> [33.33%]>

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 357770776]:
<L0>:
dsa_17 = malloc (56);
if (dsa_17 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 357627668]:
k_6->dsa = dsa_17;
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 357770776]:
<L1>:
free (k_6);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# _2 = PHI <0B(2), k_6(3), 0B(4), k_6(5), 0B(6)>
<L2>:
return _2;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 5 [0m
[40;34m    all ptable point : 23 [0m
[40;34m    analyzable ptable point : 17 [0m
[40;34m    analyzable ptable all point stmt : 64 [0m
[40;34m    used_stmt array stack totalsize of : 0.001808 mb[0m
[40;34m    collect time: : 0.000303 s [0m
[40;34m    mapping time: : 0.000460 s [0m
[40;34m    algorithm time: 0.002241 s [0m
[40;34m    gimple stmt count : : 87 [0m
[40;34m    this report analysis in Mon Jun 20 14:58:06 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)  2157k ( 80%)
 phase opt and generate             :   0.01 (100%)   0.01 (100%)   0.02 ( 67%)   488k ( 18%)
 callgraph functions expansion      :   0.00 (  0%)   0.01 (100%)   0.02 ( 67%)   394k ( 15%)
 cfg cleanup                        :   0.00 (  0%)   0.01 (100%)   0.00 (  0%)   264  (  0%)
 if-conversion                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)   416  (  0%)
 plugin execution                   :   0.01 (100%)   0.00 (  0%)   0.01 ( 33%)  1848  (  0%)
 TOTAL                              :   0.01          0.01          0.03         2702k
